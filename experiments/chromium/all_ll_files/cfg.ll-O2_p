; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/cfg.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/cfg.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.834", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.862", %"class.std::__1::unordered_map.886" }
%"class.std::__1::unordered_map.834" = type { %"class.std::__1::__hash_table.835" }
%"class.std::__1::__hash_table.835" = type <{ %"class.std::__1::unique_ptr.836", %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.851", %"class.std::__1::__compressed_pair.856", [4 x i8] }>
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838", %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.std::__1::__hash_node_base.839"** }
%"struct.std::__1::__hash_node_base.839" = type { %"struct.std::__1::__hash_node_base.839"* }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.std::__1::__bucket_list_deallocator.841" }
%"class.std::__1::__bucket_list_deallocator.841" = type { %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::__hash_node_base.839" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.796", %"class.spvtools::opt::InstructionList" }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.796", %"class.std::__1::vector.806", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.813", %"class.std::__1::unique_ptr.796", %"class.std::__1::vector.806" }
%"class.std::__1::vector.813" = type { %"class.std::__1::__vector_base.814" }
%"class.std::__1::__vector_base.814" = type { %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"*, %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.std::__1::unique_ptr.815"* }
%"class.std::__1::vector.806" = type { %"class.std::__1::__vector_base.807" }
%"class.std::__1::__vector_base.807" = type { %"class.std::__1::unique_ptr.796"*, %"class.std::__1::unique_ptr.796"*, %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.std::__1::unique_ptr.796"* }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector.487", %"class.std::__1::vector.499", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.89", %"class.std::__1::unordered_map.110", %"class.std::__1::unordered_map.138", i32, [4 x i8], %"class.std::__1::unordered_map.162", %"class.std::__1::unordered_map.186", %"class.std::__1::unique_ptr.210", %"class.std::__1::map", %"class.std::__1::map.225", %"class.std::__1::unordered_map.234", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.347", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.509", %"class.std::__1::unique_ptr.524", %"class.std::__1::unique_ptr.580", %"class.std::__1::unique_ptr.610", %"class.std::__1::unique_ptr.640", %"class.std::__1::unique_ptr.759", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.28" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unordered_map.28" = type { %"class.std::__1::__hash_table.29" }
%"class.std::__1::__hash_table.29" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base.33"** }
%"struct.std::__1::__hash_node_base.33" = type { %"struct.std::__1::__hash_node_base.33"* }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__bucket_list_deallocator.35" }
%"class.std::__1::__bucket_list_deallocator.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base.33" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.62", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.62" = type { %"class.std::__1::__hash_table.63" }
%"class.std::__1::__hash_table.63" = type <{ %"class.std::__1::unique_ptr.64", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.82", [4 x i8] }>
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::__hash_node_base.67"** }
%"struct.std::__1::__hash_node_base.67" = type { %"struct.std::__1::__hash_node_base.67"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator.69" }
%"class.std::__1::__bucket_list_deallocator.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base.67" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.106", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::set.95"* }
%"class.std::__1::set.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.spvtools::EnumSet.106" = type { i64, %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unordered_map.110" = type { %"class.std::__1::__hash_table.111" }
%"class.std::__1::__hash_table.111" = type <{ %"class.std::__1::unique_ptr.112", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132", [4 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base.115"** }
%"struct.std::__1::__hash_node_base.115" = type { %"struct.std::__1::__hash_node_base.115"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator.117" }
%"class.std::__1::__bucket_list_deallocator.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.115" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.138" = type { %"class.std::__1::__hash_table.139" }
%"class.std::__1::__hash_table.139" = type <{ %"class.std::__1::unique_ptr.140", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.158", [4 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142", %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::__hash_node_base.143"** }
%"struct.std::__1::__hash_node_base.143" = type { %"struct.std::__1::__hash_node_base.143"* }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::__bucket_list_deallocator.145" }
%"class.std::__1::__bucket_list_deallocator.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base.143" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.162" = type { %"class.std::__1::__hash_table.163" }
%"class.std::__1::__hash_table.163" = type <{ %"class.std::__1::unique_ptr.164", %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166", %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base.167"** }
%"struct.std::__1::__hash_node_base.167" = type { %"struct.std::__1::__hash_node_base.167"* }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.std::__1::__bucket_list_deallocator.169" }
%"class.std::__1::__bucket_list_deallocator.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base.167" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.186" = type { %"class.std::__1::__hash_table.187" }
%"class.std::__1::__hash_table.187" = type <{ %"class.std::__1::unique_ptr.188", %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.206", [4 x i8] }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190", %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base.191"** }
%"struct.std::__1::__hash_node_base.191" = type { %"struct.std::__1::__hash_node_base.191"* }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.std::__1::__bucket_list_deallocator.193" }
%"class.std::__1::__bucket_list_deallocator.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::__hash_node_base.191" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.spvtools::opt::CFG"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.216" }
%"class.std::__1::__tree.216" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.217", %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::map.225" = type { %"class.std::__1::__tree.226" }
%"class.std::__1::__tree.226" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unordered_map.234" = type { %"class.std::__1::__hash_table.235" }
%"class.std::__1::__hash_table.235" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.256", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.239"** }
%"struct.std::__1::__hash_node_base.239" = type { %"struct.std::__1::__hash_node_base.239"* }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.std::__1::__bucket_list_deallocator.241" }
%"class.std::__1::__bucket_list_deallocator.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.std::__1::__hash_node_base.239" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.264", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector" }
%"class.std::__1::unordered_map.264" = type { %"class.std::__1::__hash_table.265" }
%"class.std::__1::__hash_table.265" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281", %"class.std::__1::__compressed_pair.284", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base.269"** }
%"struct.std::__1::__hash_node_base.269" = type { %"struct.std::__1::__hash_node_base.269"* }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.std::__1::__bucket_list_deallocator.271" }
%"class.std::__1::__bucket_list_deallocator.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::__hash_node_base.269" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.288" }
%"class.std::__1::__tree.288" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.298" }
%"class.std::__1::__hash_table.298" = type <{ %"class.std::__1::unique_ptr.299", %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.316", [4 x i8] }>
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301", %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::__hash_node_base.302"** }
%"struct.std::__1::__hash_node_base.302" = type { %"struct.std::__1::__hash_node_base.302"* }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.std::__1::__bucket_list_deallocator.304" }
%"class.std::__1::__bucket_list_deallocator.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.std::__1::__hash_node_base.302" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.319"*, %"class.std::__1::unique_ptr.319"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.322", i32, [4 x i8] }>
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"*, %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { i32*, i32*, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { i32* }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.std::__1::vector.324"* }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.std::__1::unique_ptr.319"* }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.350", %"class.std::__1::unordered_map.374", %"class.std::__1::unordered_set.398", %"class.std::__1::vector.420", %"class.std::__1::unordered_map.350", %"class.std::__1::unordered_map.433" }
%"class.std::__1::unordered_map.374" = type { %"class.std::__1::__hash_table.375" }
%"class.std::__1::__hash_table.375" = type <{ %"class.std::__1::unique_ptr.376", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.394", [4 x i8] }>
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.379"** }
%"struct.std::__1::__hash_node_base.379" = type { %"struct.std::__1::__hash_node_base.379"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator.381" }
%"class.std::__1::__bucket_list_deallocator.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::__hash_node_base.379" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_set.398" = type { %"class.std::__1::__hash_table.399" }
%"class.std::__1::__hash_table.399" = type <{ %"class.std::__1::unique_ptr.400", %"class.std::__1::__compressed_pair.410", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.417", [4 x i8] }>
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402", %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"struct.std::__1::__hash_node_base.403"** }
%"struct.std::__1::__hash_node_base.403" = type { %"struct.std::__1::__hash_node_base.403"* }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.std::__1::__bucket_list_deallocator.405" }
%"class.std::__1::__bucket_list_deallocator.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"struct.std::__1::__hash_node_base.403" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.420" = type { %"class.std::__1::__vector_base.421" }
%"class.std::__1::__vector_base.421" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.428" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.422" }
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.350" = type { %"class.std::__1::__hash_table.351" }
%"class.std::__1::__hash_table.351" = type <{ %"class.std::__1::unique_ptr.352", %"class.std::__1::__compressed_pair.362", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.370", [4 x i8] }>
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354", %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.std::__1::__hash_node_base.355"** }
%"struct.std::__1::__hash_node_base.355" = type { %"struct.std::__1::__hash_node_base.355"* }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.std::__1::__bucket_list_deallocator.357" }
%"class.std::__1::__bucket_list_deallocator.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.355" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.433" = type { %"class.std::__1::__hash_table.434" }
%"class.std::__1::__hash_table.434" = type <{ %"class.std::__1::unique_ptr.435", %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.450", %"class.std::__1::__compressed_pair.453", [4 x i8] }>
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437", %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"struct.std::__1::__hash_node_base.438"** }
%"struct.std::__1::__hash_node_base.438" = type { %"struct.std::__1::__hash_node_base.438"* }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.std::__1::__bucket_list_deallocator.440" }
%"class.std::__1::__bucket_list_deallocator.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"struct.std::__1::__hash_node_base.438" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.463", %"class.std::__1::unordered_map.463", %"class.std::__1::unordered_map.463", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.463" = type { %"class.std::__1::__hash_table.464" }
%"class.std::__1::__hash_table.464" = type <{ %"class.std::__1::unique_ptr.465", %"class.std::__1::__compressed_pair.475", %"class.std::__1::__compressed_pair.480", %"class.std::__1::__compressed_pair.483", [4 x i8] }>
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467", %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.std::__1::__hash_node_base.468"** }
%"struct.std::__1::__hash_node_base.468" = type { %"struct.std::__1::__hash_node_base.468"* }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.std::__1::__bucket_list_deallocator.470" }
%"class.std::__1::__bucket_list_deallocator.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"struct.std::__1::__hash_node_base.468" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.std::__1::multimap.512"* }
%"class.std::__1::multimap.512" = type { %"class.std::__1::__tree.513" }
%"class.std::__1::__tree.513" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.514", %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.527", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.544", %"class.std::__1::map.566" }
%"class.std::__1::map.527" = type { %"class.std::__1::__tree.528" }
%"class.std::__1::__tree.528" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.529", %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.537", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.537" = type { %"class.std::__1::__vector_base.538" }
%"class.std::__1::__vector_base.538" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.544" = type { %"class.std::__1::__hash_table.545" }
%"class.std::__1::__hash_table.545" = type <{ %"class.std::__1::unique_ptr.546", %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.561", %"class.std::__1::__compressed_pair.563", [4 x i8] }>
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548", %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"struct.std::__1::__hash_node_base.549"** }
%"struct.std::__1::__hash_node_base.549" = type { %"struct.std::__1::__hash_node_base.549"* }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.std::__1::__bucket_list_deallocator.551" }
%"class.std::__1::__bucket_list_deallocator.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"struct.std::__1::__hash_node_base.549" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.566" = type { %"class.std::__1::__tree.567" }
%"class.std::__1::__tree.567" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.583" }
%"class.std::__1::unordered_map.583" = type { %"class.std::__1::__hash_table.584" }
%"class.std::__1::__hash_table.584" = type <{ %"class.std::__1::unique_ptr.585", %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.603", [4 x i8] }>
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587", %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"struct.std::__1::__hash_node_base.588"** }
%"struct.std::__1::__hash_node_base.588" = type { %"struct.std::__1::__hash_node_base.588"* }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.std::__1::__bucket_list_deallocator.590" }
%"class.std::__1::__bucket_list_deallocator.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.588" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.613", %"class.std::__1::unordered_map.186", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.613" = type { %"class.std::__1::__hash_table.614" }
%"class.std::__1::__hash_table.614" = type <{ %"class.std::__1::unique_ptr.615", %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.633", [4 x i8] }>
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617", %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.618"** }
%"struct.std::__1::__hash_node_base.618" = type { %"struct.std::__1::__hash_node_base.618"* }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.std::__1::__bucket_list_deallocator.620" }
%"class.std::__1::__bucket_list_deallocator.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.std::__1::__hash_node_base.618" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.643", %"class.std::__1::unique_ptr.703" }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.646", %"class.std::__1::map.670", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.681" }
%"class.std::__1::unordered_map.646" = type { %"class.std::__1::__hash_table.647" }
%"class.std::__1::__hash_table.647" = type <{ %"class.std::__1::unique_ptr.648", %"class.std::__1::__compressed_pair.658", %"class.std::__1::__compressed_pair.663", %"class.std::__1::__compressed_pair.666", [4 x i8] }>
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650", %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"struct.std::__1::__hash_node_base.651"** }
%"struct.std::__1::__hash_node_base.651" = type { %"struct.std::__1::__hash_node_base.651"* }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.std::__1::__bucket_list_deallocator.653" }
%"class.std::__1::__bucket_list_deallocator.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"struct.std::__1::__hash_node_base.651" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.670" = type { %"class.std::__1::__tree.671" }
%"class.std::__1::__tree.671" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.672", %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector.681" = type { %"class.std::__1::__vector_base.682" }
%"class.std::__1::__vector_base.682" = type { %"class.std::__1::function.683"*, %"class.std::__1::function.683"*, %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::function.683" = type { %"class.std::__1::__function::__policy_func.686" }
%"class.std::__1::__function::__policy_func.686" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.687", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.687" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.688"*)* }
%"class.std::__1::vector.688" = type { %"class.std::__1::__vector_base.689" }
%"class.std::__1::__vector_base.689" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.std::__1::function.683"* }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.706", %"class.std::__1::map.730", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.741" }
%"class.std::__1::unordered_map.706" = type { %"class.std::__1::__hash_table.707" }
%"class.std::__1::__hash_table.707" = type <{ %"class.std::__1::unique_ptr.708", %"class.std::__1::__compressed_pair.718", %"class.std::__1::__compressed_pair.723", %"class.std::__1::__compressed_pair.726", [4 x i8] }>
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710", %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.711"** }
%"struct.std::__1::__hash_node_base.711" = type { %"struct.std::__1::__hash_node_base.711"* }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.std::__1::__bucket_list_deallocator.713" }
%"class.std::__1::__bucket_list_deallocator.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"struct.std::__1::__hash_node_base.711" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.730" = type { %"class.std::__1::__tree.731" }
%"class.std::__1::__tree.731" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector.741" = type { %"class.std::__1::__vector_base.742" }
%"class.std::__1::__vector_base.742" = type { %"class.std::__1::function.743"*, %"class.std::__1::function.743"*, %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::function.743" = type { %"class.std::__1::__function::__policy_func.746" }
%"class.std::__1::__function::__policy_func.746" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.747", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.747" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.688"*)* }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.std::__1::function.743"* }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.762", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.762" = type { %"class.std::__1::__hash_table.763" }
%"class.std::__1::__hash_table.763" = type <{ %"class.std::__1::unique_ptr.764", %"class.std::__1::__compressed_pair.774", %"class.std::__1::__compressed_pair.779", %"class.std::__1::__compressed_pair.782", [4 x i8] }>
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766", %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.std::__1::__hash_node_base.767"** }
%"struct.std::__1::__hash_node_base.767" = type { %"struct.std::__1::__hash_node_base.767"* }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.std::__1::__bucket_list_deallocator.769" }
%"class.std::__1::__bucket_list_deallocator.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"struct.std::__1::__hash_node_base.767" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.786" }
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { i64*, i64*, %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { i64* }
%"class.std::__1::vector.487" = type { %"class.std::__1::__vector_base.488" }
%"class.std::__1::__vector_base.488" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.494" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.489" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.spvtools::opt::Operand"* }
%"class.std::__1::vector.499" = type { %"class.std::__1::__vector_base.500" }
%"class.std::__1::__vector_base.500" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::unordered_map.862" = type { %"class.std::__1::__hash_table.863" }
%"class.std::__1::__hash_table.863" = type <{ %"class.std::__1::unique_ptr.864", %"class.std::__1::__compressed_pair.874", %"class.std::__1::__compressed_pair.879", %"class.std::__1::__compressed_pair.882", [4 x i8] }>
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866", %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"struct.std::__1::__hash_node_base.867"** }
%"struct.std::__1::__hash_node_base.867" = type { %"struct.std::__1::__hash_node_base.867"* }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.std::__1::__bucket_list_deallocator.869" }
%"class.std::__1::__bucket_list_deallocator.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.std::__1::__hash_node_base.867" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.886" = type { %"class.std::__1::__hash_table.887" }
%"class.std::__1::__hash_table.887" = type <{ %"class.std::__1::unique_ptr.888", %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.903", %"class.std::__1::__compressed_pair.906", [4 x i8] }>
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890", %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"struct.std::__1::__hash_node_base.891"** }
%"struct.std::__1::__hash_node_base.891" = type { %"struct.std::__1::__hash_node_base.891"* }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.std::__1::__bucket_list_deallocator.893" }
%"class.std::__1::__bucket_list_deallocator.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"struct.std::__1::__hash_node_base.891" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.796", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.801", %"class.std::__1::vector.499", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.std::__1::unique_ptr.803"*, %"class.std::__1::unique_ptr.803"*, %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::Function"* }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.std::__1::unique_ptr.803"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.1091" = type { i8 }
%"class.std::__1::function.912" = type { %"class.std::__1::__function::__policy_func.916" }
%"class.std::__1::__function::__policy_func.916" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.917", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.917" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.920" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::function.930" = type { %"class.std::__1::__function::__policy_func.934" }
%"class.std::__1::__function::__policy_func.934" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.935", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.935" = type { %"class.std::__1::vector.936"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::function.943" = type { %"class.std::__1::__function::__policy_func.947" }
%"class.std::__1::__function::__policy_func.947" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.948", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.948" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* }
%"class.std::__1::function.949" = type { %"class.std::__1::__function::__policy_func.953" }
%"class.std::__1::__function::__policy_func.953" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.954", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.954" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*)* }
%"class.std::__1::tuple.1244" = type { %"struct.std::__1::__tuple_impl.1245" }
%"struct.std::__1::__tuple_impl.1245" = type { %"class.std::__1::__tuple_leaf.1246" }
%"class.std::__1::__tuple_leaf.1246" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::tuple.1240" = type { %"struct.std::__1::__tuple_impl.1241" }
%"struct.std::__1::__tuple_impl.1241" = type { %"class.std::__1::__tuple_leaf.1242" }
%"class.std::__1::__tuple_leaf.1242" = type { i32* }
%"class.std::__1::unordered_set.1029" = type { %"class.std::__1::__hash_table.1030" }
%"class.std::__1::__hash_table.1030" = type <{ %"class.std::__1::unique_ptr.1031", %"class.std::__1::__compressed_pair.1041", %"class.std::__1::__compressed_pair.1046", %"class.std::__1::__compressed_pair.1048", [4 x i8] }>
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033", %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::__hash_node_base.1034"** }
%"struct.std::__1::__hash_node_base.1034" = type { %"struct.std::__1::__hash_node_base.1034"* }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"class.std::__1::__bucket_list_deallocator.1036" }
%"class.std::__1::__bucket_list_deallocator.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"struct.std::__1::__hash_node_base.1034" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.1192" = type { %"class.std::__1::__vector_base.1193" }
%"class.std::__1::__vector_base.1193" = type { %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"class.std::__1::__compressed_pair.1195" }
%"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info" = type { %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::__wrap_iter.1194" }
%"class.std::__1::__wrap_iter.1194" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* }
%"class.std::__1::function.955" = type { %"class.std::__1::__function::__policy_func.959" }
%"class.std::__1::__function::__policy_func.959" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.960", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.960" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* }
%"class.std::__1::unordered_set.961" = type { %"class.std::__1::__hash_table.962" }
%"class.std::__1::__hash_table.962" = type <{ %"class.std::__1::unique_ptr.963", %"class.std::__1::__compressed_pair.973", %"class.std::__1::__compressed_pair.978", %"class.std::__1::__compressed_pair.982", [4 x i8] }>
%"class.std::__1::unique_ptr.963" = type { %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965", %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"struct.std::__1::__hash_node_base.966"** }
%"struct.std::__1::__hash_node_base.966" = type { %"struct.std::__1::__hash_node_base.966"* }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.std::__1::__bucket_list_deallocator.968" }
%"class.std::__1::__bucket_list_deallocator.968" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"struct.std::__1::__hash_node_base.966" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::function.996" = type { %"class.std::__1::__function::__policy_func.1000" }
%"class.std::__1::__function::__policy_func.1000" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1001", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1001" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::function.988" = type { %"class.std::__1::__function::__policy_func.992" }
%"class.std::__1::__function::__policy_func.992" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.993", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.993" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* }
%"class.std::__1::tuple.1122" = type { %"struct.std::__1::__tuple_impl.1123" }
%"struct.std::__1::__tuple_impl.1123" = type { %"class.std::__1::__tuple_leaf.1124" }
%"class.std::__1::__tuple_leaf.1124" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::function.1137" = type { %"class.std::__1::__function::__policy_func.1141" }
%"class.std::__1::__function::__policy_func.1141" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1142", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1142" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.1004" = type { %"class.std::__1::__function::__policy_func.1008" }
%"class.std::__1::__function::__policy_func.1008" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1009", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1009" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::initializer_list" = type { %"struct.spvtools::opt::Operand"*, i64 }
%"class.std::__1::function.1013" = type { %"class.std::__1::__function::__policy_func.1017" }
%"class.std::__1::__function::__policy_func.1017" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1018", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1018" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.1022", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.1051", %"class.std::__1::vector.1075" }
%"class.std::__1::vector.1022" = type { %"class.std::__1::__vector_base.1023" }
%"class.std::__1::__vector_base.1023" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.spvtools::opt::Loop"** }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.1022", %"class.std::__1::unordered_set.1029", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1051" = type { %"class.std::__1::__hash_table.1052" }
%"class.std::__1::__hash_table.1052" = type <{ %"class.std::__1::unique_ptr.1053", %"class.std::__1::__compressed_pair.1063", %"class.std::__1::__compressed_pair.1068", %"class.std::__1::__compressed_pair.1071", [4 x i8] }>
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055", %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"struct.std::__1::__hash_node_base.1056"** }
%"struct.std::__1::__hash_node_base.1056" = type { %"struct.std::__1::__hash_node_base.1056"* }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.std::__1::__bucket_list_deallocator.1058" }
%"class.std::__1::__bucket_list_deallocator.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"struct.std::__1::__hash_node_base.1056" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.1075" = type { %"class.std::__1::__vector_base.1076" }
%"class.std::__1::__vector_base.1076" = type { %"struct.std::__1::pair.1077"*, %"struct.std::__1::pair.1077"*, %"class.std::__1::__compressed_pair.1084" }
%"struct.std::__1::pair.1077" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.1078" }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"struct.std::__1::pair.1077"* }
%class.anon.1110 = type { %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::CFG"* }
%"class.std::__1::unique_ptr.1162" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164", %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.std::__1::__hash_node.1161"* }
%"struct.std::__1::__hash_node.1161" = type <{ %"struct.std::__1::__hash_node_base.1034", i64, i32, [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"class.std::__1::__hash_node_destructor.1166" }
%"class.std::__1::__hash_node_destructor.1166" = type <{ %"class.std::__1::allocator.1044"*, i8, [7 x i8] }>
%"class.std::__1::allocator.1044" = type { i8 }
%"class.std::__1::tuple.1208" = type { %"struct.std::__1::__tuple_impl.1209" }
%"struct.std::__1::__tuple_impl.1209" = type { %"class.std::__1::__tuple_leaf.1210" }
%"class.std::__1::__tuple_leaf.1210" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::__function::__default_alloc_func.1238" = type { %class.anon.994 }
%class.anon.994 = type { %"class.std::__1::function.955" }
%"class.std::__1::__function::__default_alloc_func.1263" = type { %class.anon.1002 }
%class.anon.1002 = type { %"class.std::__1::unordered_set.961"**, %"class.std::__1::vector.936"*, %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.std::__1::__function::__default_alloc_func.1267" = type { %class.anon.1011 }
%class.anon.1011 = type { %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::IRContext"* }

$_ZN8spvtools3opt3CFG13RegisterBlockEPNS0_10BasicBlockE = comdat any

$_ZN8spvtools3CFAINS_3opt10BasicBlockEE19DepthFirstTraversalEPKS2_NSt3__18functionIFPKNS6_6vectorIPS2_NS6_9allocatorIS9_EEEES5_EEENS7_IFvS5_EEESI_NS7_IFvS5_S5_EEE = comdat any

$_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJRPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NSA_14default_deleteISC_EEEEDpOT0_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS7_10BasicBlockEEUljE_S2_EEEEvPKNS0_16__policy_storageEj = comdat any

$_ZNSt3__128__invoke_void_return_wrapperIvLb1EE6__callIJRZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS4_10BasicBlockEEUljE_jEEEvDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS5_10BasicBlockEEUljE_FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS5_10BasicBlockEEUljE_FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG8AddEdgesEPNS5_10BasicBlockEE3$_0FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22RemoveNonExistingEdgesEjE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS5_8FunctionEPNS5_10BasicBlockEPNS_4listISA_NS_9allocatorISA_EEEEE3$_2FPKNS_6vectorISA_SD_EEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS5_8FunctionEPNS5_10BasicBlockEPNS_4listISA_NS_9allocatorISA_EEEEE3$_3FvPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS5_8FunctionEPNS5_10BasicBlockEPNS_4listISA_NS_9allocatorISA_EEEEE3$_4FvPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS5_8FunctionEPNS5_10BasicBlockEPNS_4listISA_NS_9allocatorISA_EEEEE3$_5FvPKS9_SI_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG27ComputeStructuredSuccessorsEPNS5_8FunctionEE3$_7FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_10FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_12FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE = hidden unnamed_addr alias void (%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*), void (%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*)* @_ZN8spvtools3opt3CFGC2EPNS0_6ModuleE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt3CFGC2EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.487", align 8
  %4 = alloca %"class.std::__1::vector.487", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 0
  store %"class.spvtools::opt::Module"* %1, %"class.spvtools::opt::Module"** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 3
  %8 = bitcast %"class.std::__1::__compressed_pair.856"* %7 to i32*
  %9 = bitcast %"class.std::__1::unordered_map.834"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %8, align 4
  %10 = tail call i8* @_Znwm(i64 112) #13
  %11 = bitcast i8* %10 to %"class.spvtools::opt::Instruction"*
  %12 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %1, i64 0, i32 2
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = bitcast %"class.std::__1::vector.487"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %11, %"class.spvtools::opt::IRContext"* %13, i32 248, i32 0, i32 0, %"class.std::__1::vector.487"* nonnull dereferenceable(24) %3) #12
  %15 = ptrtoint i8* %10 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 0
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1
  %18 = bitcast %"class.std::__1::unique_ptr.796"* %17 to i64*
  store i64 %15, i64* %18, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 1
  %24 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 5
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 6
  %26 = bitcast %"class.spvtools::opt::IRContext"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 14, i1 false) #12
  %27 = bitcast %"class.std::__1::vector.487"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 56, i1 false) #12
  store %"class.spvtools::opt::Instruction"* %20, %"class.spvtools::opt::Instruction"** %22, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %20, %"class.spvtools::opt::Instruction"** %28, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %3, i64 0, i32 0, i32 0
  %31 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %30, align 8
  %32 = icmp eq %"struct.spvtools::opt::Operand"* %31, null
  br i1 %32, label %63, label %33

33:                                               ; preds = %2
  %34 = bitcast %"struct.spvtools::opt::Operand"* %31 to i8*
  %35 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %3, i64 0, i32 0, i32 1
  %36 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %35, align 8
  %37 = icmp eq %"struct.spvtools::opt::Operand"* %36, %31
  br i1 %37, label %61, label %38

38:                                               ; preds = %33, %56
  %39 = phi %"struct.spvtools::opt::Operand"* [ %40, %56 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 -1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %42, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %42, align 8
  %44 = icmp eq %"class.std::__1::vector.324"* %43, null
  br i1 %44, label %56, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %43, i64 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = ptrtoint i32* %47 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %43, i64 0, i32 0, i32 1
  %52 = bitcast i32** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast i32* %47 to i8*
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %49, %45
  %55 = bitcast %"class.std::__1::vector.324"* %43 to i8*
  call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %54, %38
  %57 = icmp eq %"struct.spvtools::opt::Operand"* %40, %31
  br i1 %57, label %58, label %38

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.487"* %3 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %33
  %62 = phi i8* [ %60, %58 ], [ %34, %33 ]
  store %"struct.spvtools::opt::Operand"* %31, %"struct.spvtools::opt::Operand"** %35, align 8
  call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %2, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %64 = call i8* @_Znwm(i64 112) #13
  %65 = bitcast i8* %64 to %"class.spvtools::opt::Instruction"*
  %66 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %67 = bitcast %"class.std::__1::vector.487"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #12
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %65, %"class.spvtools::opt::IRContext"* %66, i32 248, i32 0, i32 4194304, %"class.std::__1::vector.487"* nonnull dereferenceable(24) %4) #12
  %68 = ptrtoint i8* %64 to i64
  %69 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 0
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %69, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1
  %71 = bitcast %"class.std::__1::unique_ptr.796"* %70 to i64*
  store i64 %68, i64* %71, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 1
  %77 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 5
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 6
  %79 = bitcast %"class.spvtools::opt::IRContext"** %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 14, i1 false) #12
  %80 = bitcast %"class.std::__1::vector.487"* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 56, i1 false) #12
  store %"class.spvtools::opt::Instruction"* %73, %"class.spvtools::opt::Instruction"** %75, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %73, %"class.spvtools::opt::Instruction"** %81, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %82, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %83 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %4, i64 0, i32 0, i32 0
  %84 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %83, align 8
  %85 = icmp eq %"struct.spvtools::opt::Operand"* %84, null
  br i1 %85, label %116, label %86

86:                                               ; preds = %63
  %87 = bitcast %"struct.spvtools::opt::Operand"* %84 to i8*
  %88 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %4, i64 0, i32 0, i32 1
  %89 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %88, align 8
  %90 = icmp eq %"struct.spvtools::opt::Operand"* %89, %84
  br i1 %90, label %114, label %91

91:                                               ; preds = %86, %109
  %92 = phi %"struct.spvtools::opt::Operand"* [ %93, %109 ], [ %89, %86 ]
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %96 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %95, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %95, align 8
  %97 = icmp eq %"class.std::__1::vector.324"* %96, null
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %96, i64 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = ptrtoint i32* %100 to i64
  %104 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %96, i64 0, i32 0, i32 1
  %105 = bitcast i32** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast i32* %100 to i8*
  call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %102, %98
  %108 = bitcast %"class.std::__1::vector.324"* %96 to i8*
  call void @_ZdlPv(i8* %108) #13
  br label %109

109:                                              ; preds = %107, %91
  %110 = icmp eq %"struct.spvtools::opt::Operand"* %93, %84
  br i1 %110, label %111, label %91

111:                                              ; preds = %109
  %112 = bitcast %"class.std::__1::vector.487"* %4 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %111, %86
  %115 = phi i8* [ %113, %111 ], [ %87, %86 ]
  store %"struct.spvtools::opt::Operand"* %84, %"struct.spvtools::opt::Operand"** %88, align 8
  call void @_ZdlPv(i8* %115) #13
  br label %116

116:                                              ; preds = %63, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #12
  %117 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4
  %118 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 3
  %119 = bitcast %"class.std::__1::__compressed_pair.882"* %118 to i32*
  %120 = bitcast %"class.std::__1::unordered_map.862"* %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %119, align 4
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5
  %122 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 3
  %123 = bitcast %"class.std::__1::__compressed_pair.906"* %122 to i32*
  %124 = bitcast %"class.std::__1::unordered_map.886"* %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %123, align 4
  %125 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %1, i64 0, i32 15, i32 0, i32 0
  %126 = load %"class.std::__1::unique_ptr.803"*, %"class.std::__1::unique_ptr.803"** %125, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %1, i64 0, i32 15, i32 0, i32 1
  %128 = load %"class.std::__1::unique_ptr.803"*, %"class.std::__1::unique_ptr.803"** %127, align 8
  %129 = icmp eq %"class.std::__1::unique_ptr.803"* %126, %128
  br i1 %129, label %130, label %131

130:                                              ; preds = %140, %116
  ret void

131:                                              ; preds = %116, %140
  %132 = phi %"class.std::__1::unique_ptr.803"* [ %141, %140 ], [ %126, %116 ]
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.803", %"class.std::__1::unique_ptr.803"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %133, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %134, i64 0, i32 3, i32 0, i32 0
  %136 = load %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"** %135, align 8
  %137 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %134, i64 0, i32 3, i32 0, i32 1
  %138 = load %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"** %137, align 8
  %139 = icmp eq %"class.std::__1::unique_ptr.815"* %136, %138
  br i1 %139, label %140, label %143

140:                                              ; preds = %143, %131
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.803", %"class.std::__1::unique_ptr.803"* %132, i64 1
  %142 = icmp eq %"class.std::__1::unique_ptr.803"* %141, %128
  br i1 %142, label %130, label %131

143:                                              ; preds = %131, %143
  %144 = phi %"class.std::__1::unique_ptr.815"* [ %147, %143 ], [ %136, %131 ]
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %144, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %145, align 8
  call void @_ZN8spvtools3opt3CFG13RegisterBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::BasicBlock"* %146)
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %144, i64 1
  %148 = icmp eq %"class.std::__1::unique_ptr.815"* %147, %138
  br i1 %148, label %140, label %143
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector.487"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFG13RegisterBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::function.912", align 8
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.1091", align 1
  %9 = alloca i32, align 4
  %10 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #12
  store i32 -1431655766, i32* %9, align 4
  %11 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %12, i64 0, i32 4
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %12, i64 0, i32 3
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = zext i8 %18 to i32
  %20 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %12, i32 %19) #12
  br label %21

21:                                               ; preds = %2, %16
  %22 = phi i32 [ %20, %16 ], [ 0, %2 ]
  store i32 %22, i32* %9, align 4
  %23 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0
  %24 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #12
  %27 = call { %"struct.std::__1::__hash_node_base.891"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.887"* %23, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %8) #12
  %28 = extractvalue { %"struct.std::__1::__hash_node_base.891"*, i8 } %27, 0
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %28, i64 3
  %30 = bitcast %"struct.std::__1::__hash_node_base.891"* %29 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %31 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #12
  store i32 -1431655766, i32* %5, align 4
  %32 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %11, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %32, i64 0, i32 4
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %32, i64 0, i32 3
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = zext i8 %38 to i32
  %40 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %32, i32 %39) #12
  br label %41

41:                                               ; preds = %36, %21
  %42 = phi i32 [ %40, %36 ], [ 0, %21 ]
  store i32 %42, i32* %5, align 4
  %43 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0
  %44 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  %45 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #12
  %47 = call { %"struct.std::__1::__hash_node_base.867"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.863"* %43, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #12
  %48 = bitcast %"class.std::__1::function.912"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #12
  %49 = load i32, i32* %5, align 4
  %50 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %6, i64 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG8AddEdgesEPNS7_10BasicBlockEE3$_0S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %50, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG8AddEdgesEPNS5_10BasicBlockEE3$_0FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %51, align 8
  %52 = bitcast %"class.std::__1::function.912"* %6 to i32*
  store i32 %49, i32* %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %6, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast [8 x i8]* %53 to %"class.spvtools::opt::CFG"**
  store %"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::CFG"** %54, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::function.912"* nonnull dereferenceable(32) %6) #12
  %55 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %55, i64 0, i32 1
  %57 = load void (i8*)*, void (i8*)** %56, align 8
  %58 = icmp eq void (i8*)* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %41
  %60 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %6, i64 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void %57(i8* %61) #12
  br label %62

62:                                               ; preds = %41, %59
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::function.912", align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  store i32 -1431655766, i32* %5, align 4
  %8 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = zext i8 %15 to i32
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 %16) #12
  br label %18

18:                                               ; preds = %2, %13
  %19 = phi i32 [ %17, %13 ], [ 0, %2 ]
  store i32 %19, i32* %5, align 4
  %20 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0
  %21 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #12
  %24 = call { %"struct.std::__1::__hash_node_base.867"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.863"* %20, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  %25 = bitcast %"class.std::__1::function.912"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #12
  %26 = load i32, i32* %5, align 4
  %27 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %6, i64 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG8AddEdgesEPNS7_10BasicBlockEE3$_0S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %27, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG8AddEdgesEPNS5_10BasicBlockEE3$_0FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %28, align 8
  %29 = bitcast %"class.std::__1::function.912"* %6 to i32*
  store i32 %26, i32* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %6, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast [8 x i8]* %30 to %"class.spvtools::opt::CFG"**
  store %"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::CFG"** %31, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::function.912"* nonnull dereferenceable(32) %6) #12
  %32 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %28, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %32, i64 0, i32 1
  %34 = load void (i8*)*, void (i8*)** %33, align 8
  %35 = icmp eq void (i8*)* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %6, i64 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void %34(i8* %38) #12
  br label %39

39:                                               ; preds = %18, %36
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.912"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt3CFG22RemoveNonExistingEdgesEj(%"class.spvtools::opt::CFG"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.324", align 16
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::function.912", align 8
  %6 = bitcast %"class.std::__1::vector.324"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 24, i1 false) #12
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %61, label %13

13:                                               ; preds = %2
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #12, !range !3
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, 4294967295
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ugt i64 %11, %9
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %21, %19, %16
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.867"* %28, null
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.867"* %32, null
  br i1 %33, label %61, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  br label %36

36:                                               ; preds = %57, %34
  %37 = phi %"struct.std::__1::__hash_node_base.867"* [ %32, %34 ], [ %59, %57 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.867"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  br i1 %15, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %35
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %11
  br label %49

49:                                               ; preds = %47, %45, %43
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %24
  br i1 %51, label %57, label %61

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %37, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base.867"* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %62, label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %37, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base.867"* %59, null
  br i1 %60, label %61, label %36

61:                                               ; preds = %57, %49, %30, %23, %2
  tail call void @abort() #14
  unreachable

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %37, i64 3
  %64 = bitcast %"struct.std::__1::__hash_node_base.867"* %63 to i32**
  %65 = load i32*, i32** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %37, i64 4
  %67 = bitcast %"struct.std::__1::__hash_node_base.867"* %66 to i32**
  %68 = load i32*, i32** %67, align 8
  %69 = icmp eq i32* %65, %68
  br i1 %69, label %84, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::function.912"* %5 to i8*
  %74 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %5, i64 0, i32 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %5, i64 0, i32 0, i32 2
  %76 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %5, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %5, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast [8 x i8]* %77 to i32*
  %79 = bitcast i32** %7 to i64*
  %80 = bitcast %"class.std::__1::vector.324"* %3 to i64*
  %81 = bitcast i32** %8 to i64*
  br label %154

82:                                               ; preds = %272
  %83 = load i64, i64* %10, align 8
  br label %84

84:                                               ; preds = %82, %62
  %85 = phi i64 [ %83, %82 ], [ %11, %62 ]
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %134, label %87

87:                                               ; preds = %84
  %88 = call i64 @llvm.ctpop.i64(i64 %85) #12, !range !3
  %89 = icmp ugt i64 %88, 1
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = add i64 %85, 4294967295
  %92 = and i64 %91, %9
  br label %97

93:                                               ; preds = %87
  %94 = icmp ugt i64 %85, %9
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = urem i64 %9, %85
  br label %97

97:                                               ; preds = %95, %93, %90
  %98 = phi i64 [ %92, %90 ], [ %96, %95 ], [ %9, %93 ]
  %99 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %25, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %99, i64 %98
  %101 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.867"* %101, null
  br i1 %102, label %134, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %101, i64 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.867"* %105, null
  br i1 %106, label %134, label %107

107:                                              ; preds = %103
  %108 = add i64 %85, -1
  br label %109

109:                                              ; preds = %130, %107
  %110 = phi %"struct.std::__1::__hash_node_base.867"* [ %105, %107 ], [ %132, %130 ]
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %110, i64 1
  %112 = bitcast %"struct.std::__1::__hash_node_base.867"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %113, %9
  br i1 %114, label %125, label %115

115:                                              ; preds = %109
  br i1 %89, label %118, label %116

116:                                              ; preds = %115
  %117 = and i64 %113, %108
  br label %122

118:                                              ; preds = %115
  %119 = icmp ult i64 %113, %85
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = urem i64 %113, %85
  br label %122

122:                                              ; preds = %120, %118, %116
  %123 = phi i64 [ %117, %116 ], [ %121, %120 ], [ %113, %118 ]
  %124 = icmp eq i64 %123, %98
  br i1 %124, label %130, label %134

125:                                              ; preds = %109
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %110, i64 2
  %127 = bitcast %"struct.std::__1::__hash_node_base.867"* %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, %1
  br i1 %129, label %135, label %130

130:                                              ; preds = %125, %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %110, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.867"* %132, null
  br i1 %133, label %134, label %109

134:                                              ; preds = %130, %122, %103, %97, %84
  call void @abort() #14
  unreachable

135:                                              ; preds = %125
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %110, i64 3
  %137 = bitcast %"struct.std::__1::__hash_node_base.867"* %136 to i32**
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %146, label %140

140:                                              ; preds = %135
  %141 = ptrtoint i32* %138 to i64
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %110, i64 4
  %143 = bitcast %"struct.std::__1::__hash_node_base.867"* %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast i32* %138 to i8*
  call void @_ZdlPv(i8* %144) #13
  %145 = bitcast %"struct.std::__1::__hash_node_base.867"* %136 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #12
  br label %146

146:                                              ; preds = %140, %135
  %147 = bitcast %"class.std::__1::vector.324"* %3 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 16
  %149 = bitcast %"struct.std::__1::__hash_node_base.867"* %136 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %149, align 8
  %150 = bitcast i32** %8 to i64*
  %151 = load i64, i64* %150, align 16
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %110, i64 5
  %153 = bitcast %"struct.std::__1::__hash_node_base.867"* %152 to i64*
  store i64 %151, i64* %153, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void

154:                                              ; preds = %70, %272
  %155 = phi i32* [ %65, %70 ], [ %273, %272 ]
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i64
  %158 = load i64, i64* %71, align 8
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %207, label %160

160:                                              ; preds = %154
  %161 = call i64 @llvm.ctpop.i64(i64 %158) #12, !range !3
  %162 = icmp ugt i64 %161, 1
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = add i64 %158, 4294967295
  %165 = and i64 %164, %157
  br label %170

166:                                              ; preds = %160
  %167 = icmp ugt i64 %158, %157
  br i1 %167, label %170, label %168

168:                                              ; preds = %166
  %169 = urem i64 %157, %158
  br label %170

170:                                              ; preds = %168, %166, %163
  %171 = phi i64 [ %165, %163 ], [ %169, %168 ], [ %157, %166 ]
  %172 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %72, align 8
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %172, i64 %171
  %174 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base.891"* %174, null
  br i1 %175, label %207, label %176

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %174, i64 0, i32 0
  %178 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %177, align 8
  %179 = icmp eq %"struct.std::__1::__hash_node_base.891"* %178, null
  br i1 %179, label %207, label %180

180:                                              ; preds = %176
  %181 = add i64 %158, -1
  br label %182

182:                                              ; preds = %203, %180
  %183 = phi %"struct.std::__1::__hash_node_base.891"* [ %178, %180 ], [ %205, %203 ]
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %183, i64 1
  %185 = bitcast %"struct.std::__1::__hash_node_base.891"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = icmp eq i64 %186, %157
  br i1 %187, label %198, label %188

188:                                              ; preds = %182
  br i1 %162, label %191, label %189

189:                                              ; preds = %188
  %190 = and i64 %186, %181
  br label %195

191:                                              ; preds = %188
  %192 = icmp ult i64 %186, %158
  br i1 %192, label %195, label %193

193:                                              ; preds = %191
  %194 = urem i64 %186, %158
  br label %195

195:                                              ; preds = %193, %191, %189
  %196 = phi i64 [ %190, %189 ], [ %194, %193 ], [ %186, %191 ]
  %197 = icmp eq i64 %196, %171
  br i1 %197, label %203, label %207

198:                                              ; preds = %182
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %183, i64 2
  %200 = bitcast %"struct.std::__1::__hash_node_base.891"* %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, %156
  br i1 %202, label %208, label %203

203:                                              ; preds = %198, %195
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %183, i64 0, i32 0
  %205 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %204, align 8
  %206 = icmp eq %"struct.std::__1::__hash_node_base.891"* %205, null
  br i1 %206, label %207, label %182

207:                                              ; preds = %176, %170, %154, %203, %195
  call void @abort() #14
  unreachable

208:                                              ; preds = %198
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %183, i64 3
  %210 = bitcast %"struct.std::__1::__hash_node_base.891"* %209 to %"class.spvtools::opt::BasicBlock"**
  %211 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %210, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %73) #12
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22RemoveNonExistingEdgesEjE3$_1S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %74, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22RemoveNonExistingEdgesEjE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %75, align 8
  store i8* %4, i8** %76, align 8
  store i32 %1, i32* %78, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %211, %"class.std::__1::function.912"* nonnull dereferenceable(32) %5) #12
  %212 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %75, align 8
  %213 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %212, i64 0, i32 1
  %214 = load void (i8*)*, void (i8*)** %213, align 8
  %215 = icmp eq void (i8*)* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %208
  %217 = load i8*, i8** %76, align 8
  call void %214(i8* %217) #12
  br label %218

218:                                              ; preds = %208, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %73) #12
  %219 = load i8, i8* %4, align 1, !range !2
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %272, label %221

221:                                              ; preds = %218
  %222 = load i32*, i32** %7, align 8
  %223 = load i32*, i32** %8, align 16
  %224 = icmp eq i32* %222, %223
  %225 = ptrtoint i32* %223 to i64
  br i1 %224, label %229, label %226

226:                                              ; preds = %221
  store i32 %156, i32* %222, align 4
  %227 = getelementptr inbounds i32, i32* %222, i64 1
  %228 = ptrtoint i32* %227 to i64
  store i64 %228, i64* %79, align 8
  br label %272

229:                                              ; preds = %221
  %230 = ptrtoint i32* %222 to i64
  %231 = load i64, i64* %80, align 16
  %232 = sub i64 %230, %231
  %233 = ashr exact i64 %232, 2
  %234 = add nsw i64 %233, 1
  %235 = icmp ugt i64 %234, 4611686018427387903
  br i1 %235, label %236, label %238

236:                                              ; preds = %229
  %237 = bitcast %"class.std::__1::vector.324"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %237) #14
  unreachable

238:                                              ; preds = %229
  %239 = sub i64 %225, %231
  %240 = ashr exact i64 %239, 2
  %241 = icmp ult i64 %240, 2305843009213693951
  br i1 %241, label %242, label %250

242:                                              ; preds = %238
  %243 = ashr exact i64 %239, 1
  %244 = icmp ult i64 %243, %234
  %245 = select i1 %244, i64 %234, i64 %243
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %255, label %247

247:                                              ; preds = %242
  %248 = icmp ugt i64 %245, 4611686018427387903
  br i1 %248, label %249, label %250

249:                                              ; preds = %247
  call void @abort() #14
  unreachable

250:                                              ; preds = %247, %238
  %251 = phi i64 [ %245, %247 ], [ 4611686018427387903, %238 ]
  %252 = shl i64 %251, 2
  %253 = call i8* @_Znwm(i64 %252) #13
  %254 = bitcast i8* %253 to i32*
  br label %255

255:                                              ; preds = %250, %242
  %256 = phi i64 [ %251, %250 ], [ 0, %242 ]
  %257 = phi i8* [ %253, %250 ], [ null, %242 ]
  %258 = phi i32* [ %254, %250 ], [ null, %242 ]
  %259 = getelementptr inbounds i32, i32* %258, i64 %233
  %260 = getelementptr inbounds i32, i32* %258, i64 %256
  %261 = ptrtoint i32* %260 to i64
  store i32 %156, i32* %259, align 4
  %262 = getelementptr inbounds i32, i32* %259, i64 1
  %263 = ptrtoint i32* %262 to i64
  %264 = ptrtoint i32* %258 to i64
  %265 = icmp sgt i64 %232, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %255
  %267 = inttoptr i64 %231 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %257, i8* align 4 %267, i64 %232, i1 false) #12
  br label %268

268:                                              ; preds = %266, %255
  store i64 %264, i64* %80, align 16
  store i64 %263, i64* %79, align 8
  store i64 %261, i64* %81, align 16
  %269 = icmp eq i64 %231, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %268
  %271 = inttoptr i64 %231 to i8*
  call void @_ZdlPv(i8* %271) #13
  br label %272

272:                                              ; preds = %270, %268, %226, %218
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  %273 = getelementptr inbounds i32, i32* %155, i64 1
  %274 = icmp eq i32* %273, %68
  br i1 %274, label %82, label %154
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::list"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::list"*, align 8
  %6 = alloca %"class.std::__1::function.930", align 8
  %7 = alloca %"class.std::__1::function.943", align 8
  %8 = alloca %"class.std::__1::function.943", align 8
  %9 = alloca %"class.std::__1::function.949", align 8
  store %"class.std::__1::list"* %3, %"class.std::__1::list"** %5, align 8
  tail call void @_ZN8spvtools3opt3CFG27ComputeStructuredSuccessorsEPNS0_8FunctionE(%"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::Function"* %1)
  %10 = ptrtoint %"class.spvtools::opt::CFG"* %0 to i64
  %11 = getelementptr inbounds %"class.std::__1::function.930", %"class.std::__1::function.930"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function.930", %"class.std::__1::function.930"* %6, i64 0, i32 0, i32 2
  store %"class.std::__1::vector.936"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3opt10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNS4_3CFG22ComputeStructuredOrderEPNS4_8FunctionES6_PNS_4listIS6_S8_EEE3$_2SE_EEEESB_PKNS0_16__policy_storageESD_", %"class.std::__1::vector.936"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %11, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS5_8FunctionEPNS5_10BasicBlockEPNS_4listISA_NS_9allocatorISA_EEEEE3$_2FPKNS_6vectorISA_SD_EEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %12, align 8
  %13 = bitcast %"class.std::__1::function.930"* %6 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %7, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG22ComputeStructuredOrderEPNS3_8FunctionEPS4_PNS_4listISE_NS_9allocatorISE_EEEEE3$_3S7_EEEEvPKNS0_16__policy_storageES6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %14, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS5_8FunctionEPNS5_10BasicBlockEPNS_4listISA_NS_9allocatorISA_EEEEE3$_3FvPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %15, align 8
  %16 = ptrtoint %"class.std::__1::list"** %5 to i64
  %17 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %8, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %8, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG22ComputeStructuredOrderEPNS3_8FunctionEPS4_PNS_4listISE_NS_9allocatorISE_EEEEE3$_4S7_EEEEvPKNS0_16__policy_storageES6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %17, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS5_8FunctionEPNS5_10BasicBlockEPNS_4listISA_NS_9allocatorISA_EEEEE3$_4FvPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %18, align 8
  %19 = bitcast %"class.std::__1::function.943"* %8 to i64*
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %9, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %9, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3opt10BasicBlockES6_EE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG22ComputeStructuredOrderEPNS3_8FunctionEPS4_PNS_4listISE_NS_9allocatorISE_EEEEE3$_5S7_EEEEvPKNS0_16__policy_storageES6_S6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*)** %20, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS5_8FunctionEPNS5_10BasicBlockEPNS_4listISA_NS_9allocatorISA_EEEEE3$_5FvPKS9_SI_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %21, align 8
  call void @_ZN8spvtools3CFAINS_3opt10BasicBlockEE19DepthFirstTraversalEPKS2_NSt3__18functionIFPKNS6_6vectorIPS2_NS6_9allocatorIS9_EEEES5_EEENS7_IFvS5_EEESI_NS7_IFvS5_S5_EEE(%"class.spvtools::opt::BasicBlock"* %2, %"class.std::__1::function.930"* nonnull %6, %"class.std::__1::function.943"* nonnull %7, %"class.std::__1::function.943"* nonnull %8, %"class.std::__1::function.949"* nonnull %9)
  %22 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %22, i64 0, i32 1
  %24 = load void (i8*)*, void (i8*)** %23, align 8
  %25 = icmp eq void (i8*)* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %9, i64 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void %24(i8* %28) #12
  br label %29

29:                                               ; preds = %4, %26
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %32 = load void (i8*)*, void (i8*)** %31, align 8
  %33 = icmp eq void (i8*)* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %8, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void %32(i8* %36) #12
  br label %37

37:                                               ; preds = %29, %34
  %38 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %38, i64 0, i32 1
  %40 = load void (i8*)*, void (i8*)** %39, align 8
  %41 = icmp eq void (i8*)* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %7, i64 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void %40(i8* %44) #12
  br label %45

45:                                               ; preds = %37, %42
  %46 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %46, i64 0, i32 1
  %48 = load void (i8*)*, void (i8*)** %47, align 8
  %49 = icmp eq void (i8*)* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.std::__1::function.930", %"class.std::__1::function.930"* %6, i64 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void %48(i8* %52) #12
  br label %53

53:                                               ; preds = %45, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt3CFG27ComputeStructuredSuccessorsEPNS0_8FunctionE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1244", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca %"class.std::__1::tuple.1244", align 8
  %6 = alloca %"class.std::__1::tuple.1091", align 1
  %7 = alloca %"class.std::__1::tuple.1244", align 8
  %8 = alloca %"class.std::__1::tuple.1091", align 1
  %9 = alloca %"class.std::__1::tuple.1240", align 8
  %10 = alloca %"class.std::__1::tuple.1091", align 1
  %11 = alloca i32, align 4
  %12 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %13 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %14 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %15 = alloca %"class.std::__1::function.912", align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %80, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.839"* %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %20, %37
  %25 = phi %"struct.std::__1::__hash_node_base.839"* [ %27, %37 ], [ %22, %20 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %25, i64 3
  %29 = bitcast %"struct.std::__1::__hash_node_base.839"* %28 to %"class.spvtools::opt::BasicBlock"***
  %30 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %29, align 8
  %31 = icmp eq %"class.spvtools::opt::BasicBlock"** %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = ptrtoint %"class.spvtools::opt::BasicBlock"** %30 to i64
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %25, i64 4
  %35 = bitcast %"struct.std::__1::__hash_node_base.839"* %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %"class.spvtools::opt::BasicBlock"** %30 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %32, %24
  %38 = bitcast %"struct.std::__1::__hash_node_base.839"* %25 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  %39 = icmp eq %"struct.std::__1::__hash_node_base.839"* %27, null
  br i1 %39, label %40, label %24

40:                                               ; preds = %37, %20
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %21, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %62, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::unordered_map.834", %"class.std::__1::unordered_map.834"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = add i64 %42, -1
  %47 = and i64 %42, 3
  %48 = icmp ult i64 %46, 3
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = sub i64 %42, %47
  br label %63

51:                                               ; preds = %63, %44
  %52 = phi i64 [ 0, %44 ], [ %77, %63 ]
  %53 = icmp eq i64 %47, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %51, %54
  %55 = phi i64 [ %59, %54 ], [ %52, %51 ]
  %56 = phi i64 [ %60, %54 ], [ %47, %51 ]
  %57 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %45, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %57, i64 %55
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %58, align 8
  %59 = add nuw i64 %55, 1
  %60 = add i64 %56, -1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %54, !llvm.loop !4

62:                                               ; preds = %51, %54, %40
  store i64 0, i64* %17, align 8
  br label %80

63:                                               ; preds = %63, %49
  %64 = phi i64 [ 0, %49 ], [ %77, %63 ]
  %65 = phi i64 [ %50, %49 ], [ %78, %63 ]
  %66 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %45, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %66, i64 %64
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %67, align 8
  %68 = or i64 %64, 1
  %69 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %45, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %70, align 8
  %71 = or i64 %64, 2
  %72 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %45, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %73, align 8
  %74 = or i64 %64, 3
  %75 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %45, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %75, i64 %74
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %76, align 8
  %77 = add nuw i64 %64, 4
  %78 = add i64 %65, -4
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %51, label %63

80:                                               ; preds = %2, %62
  %81 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %82 = load %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"** %81, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %84 = load %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"** %83, align 8
  %85 = icmp eq %"class.std::__1::unique_ptr.815"* %82, %84
  br i1 %85, label %115, label %86

86:                                               ; preds = %80
  %87 = bitcast i32* %11 to i8*
  %88 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0
  %89 = bitcast %"class.std::__1::tuple.1240"* %9 to i8*
  %90 = getelementptr inbounds %"class.std::__1::tuple.1240", %"class.std::__1::tuple.1240"* %9, i64 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %10, i64 0, i32 0
  %92 = bitcast %"class.spvtools::opt::BasicBlock"** %12 to i8*
  %93 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.std::__1::unordered_map.834", %"class.std::__1::unordered_map.834"* %16, i64 0, i32 0
  %95 = bitcast %"class.std::__1::tuple.1244"* %7 to i8*
  %96 = getelementptr inbounds %"class.std::__1::tuple.1244", %"class.std::__1::tuple.1244"* %7, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %8, i64 0, i32 0
  %98 = bitcast %"class.spvtools::opt::BasicBlock"** %13 to i8*
  %99 = bitcast %"class.std::__1::tuple.1244"* %5 to i8*
  %100 = getelementptr inbounds %"class.std::__1::tuple.1244", %"class.std::__1::tuple.1244"* %5, i64 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %6, i64 0, i32 0
  %102 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.spvtools::opt::BasicBlock"** %14 to i8*
  %105 = bitcast %"class.std::__1::tuple.1244"* %3 to i8*
  %106 = getelementptr inbounds %"class.std::__1::tuple.1244", %"class.std::__1::tuple.1244"* %3, i64 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  %108 = bitcast %"class.std::__1::function.912"* %15 to i8*
  %109 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %15, i64 0, i32 0, i32 1, i32 0
  %110 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %15, i64 0, i32 0, i32 2
  %111 = bitcast %"class.std::__1::function.912"* %15 to %"class.spvtools::opt::BasicBlock"**
  %112 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %15, i64 0, i32 0, i32 0, i32 1
  %113 = bitcast [8 x i8]* %112 to %"class.spvtools::opt::CFG"**
  %114 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %15, i64 0, i32 0, i32 0, i32 0
  br label %116

115:                                              ; preds = %489, %80
  ret void

116:                                              ; preds = %86, %489
  %117 = phi %"class.std::__1::unique_ptr.815"* [ %82, %86 ], [ %490, %489 ]
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %118, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #12
  %120 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %119, i64 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %120, align 8
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %121, i64 0, i32 4
  %123 = load i8, i8* %122, align 1, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %121, i64 0, i32 3
  %127 = load i8, i8* %126, align 4, !range !2
  %128 = zext i8 %127 to i32
  %129 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %121, i32 %128) #12
  br label %130

130:                                              ; preds = %116, %125
  %131 = phi i32 [ %129, %125 ], [ 0, %116 ]
  store i32 %131, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  store i32* %11, i32** %90, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %91) #12
  %132 = call { %"struct.std::__1::__hash_node_base.867"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.863"* %88, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1240"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %10) #12
  %133 = extractvalue { %"struct.std::__1::__hash_node_base.867"*, i8 } %132, 0
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %133, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %91) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %133, i64 4
  %136 = bitcast %"struct.std::__1::__hash_node_base.867"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.867"* %134 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %137, %139
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #12
  br i1 %140, label %141, label %217

141:                                              ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #12
  store %"class.spvtools::opt::BasicBlock"* %93, %"class.spvtools::opt::BasicBlock"** %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #12
  store %"class.spvtools::opt::BasicBlock"** %12, %"class.spvtools::opt::BasicBlock"*** %96, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %97) #12
  %142 = call { %"struct.std::__1::__hash_node_base.839"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.835"* %94, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1244"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %8) #12
  %143 = extractvalue { %"struct.std::__1::__hash_node_base.839"*, i8 } %142, 0
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %143, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %97) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #12
  %145 = ptrtoint %"class.spvtools::opt::BasicBlock"* %119 to i64
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %143, i64 4
  %147 = bitcast %"struct.std::__1::__hash_node_base.839"* %146 to %"class.spvtools::opt::BasicBlock"***
  %148 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %147, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %143, i64 5
  %150 = bitcast %"struct.std::__1::__hash_node_base.839"* %149 to %"class.spvtools::opt::BasicBlock"***
  %151 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %150, align 8
  %152 = icmp ult %"class.spvtools::opt::BasicBlock"** %148, %151
  %153 = ptrtoint %"class.spvtools::opt::BasicBlock"** %151 to i64
  br i1 %152, label %154, label %159

154:                                              ; preds = %141
  %155 = bitcast %"class.spvtools::opt::BasicBlock"** %148 to i64*
  store i64 %145, i64* %155, align 8
  %156 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %148, i64 1
  %157 = ptrtoint %"class.spvtools::opt::BasicBlock"** %156 to i64
  %158 = bitcast %"struct.std::__1::__hash_node_base.839"* %146 to i64*
  store i64 %157, i64* %158, align 8
  br label %216

159:                                              ; preds = %141
  %160 = ptrtoint %"class.spvtools::opt::BasicBlock"** %148 to i64
  %161 = bitcast %"struct.std::__1::__hash_node_base.839"* %146 to i64*
  %162 = bitcast %"struct.std::__1::__hash_node_base.839"* %144 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = sub i64 %160, %163
  %165 = ashr exact i64 %164, 3
  %166 = add nsw i64 %165, 1
  %167 = icmp ugt i64 %166, 2305843009213693951
  br i1 %167, label %168, label %170

168:                                              ; preds = %159
  %169 = bitcast %"struct.std::__1::__hash_node_base.839"* %144 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %169) #14
  unreachable

170:                                              ; preds = %159
  %171 = bitcast %"struct.std::__1::__hash_node_base.839"* %149 to i64*
  %172 = sub i64 %153, %163
  %173 = ashr exact i64 %172, 3
  %174 = icmp ult i64 %173, 1152921504606846975
  br i1 %174, label %175, label %183

175:                                              ; preds = %170
  %176 = ashr exact i64 %172, 2
  %177 = icmp ult i64 %176, %166
  %178 = select i1 %177, i64 %166, i64 %176
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %188, label %180

180:                                              ; preds = %175
  %181 = icmp ugt i64 %178, 2305843009213693951
  br i1 %181, label %182, label %183

182:                                              ; preds = %180
  call void @abort() #14
  unreachable

183:                                              ; preds = %180, %170
  %184 = phi i64 [ %178, %180 ], [ 2305843009213693951, %170 ]
  %185 = shl i64 %184, 3
  %186 = call i8* @_Znwm(i64 %185) #13
  %187 = bitcast i8* %186 to %"class.spvtools::opt::BasicBlock"**
  br label %188

188:                                              ; preds = %183, %175
  %189 = phi i64 [ %184, %183 ], [ 0, %175 ]
  %190 = phi %"class.spvtools::opt::BasicBlock"** [ %187, %183 ], [ null, %175 ]
  %191 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %190, i64 %165
  %192 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %190, i64 %189
  %193 = ptrtoint %"class.spvtools::opt::BasicBlock"** %192 to i64
  %194 = bitcast %"class.spvtools::opt::BasicBlock"** %191 to i64*
  store i64 %145, i64* %194, align 8
  %195 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %191, i64 1
  %196 = ptrtoint %"class.spvtools::opt::BasicBlock"** %195 to i64
  %197 = bitcast %"struct.std::__1::__hash_node_base.839"* %144 to %"class.spvtools::opt::BasicBlock"***
  %198 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %197, align 8
  %199 = load i64, i64* %161, align 8
  %200 = ptrtoint %"class.spvtools::opt::BasicBlock"** %198 to i64
  %201 = sub i64 %199, %200
  %202 = ashr exact i64 %201, 3
  %203 = sub nsw i64 0, %202
  %204 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %191, i64 %203
  %205 = ptrtoint %"class.spvtools::opt::BasicBlock"** %204 to i64
  %206 = icmp sgt i64 %201, 0
  br i1 %206, label %207, label %211

207:                                              ; preds = %188
  %208 = bitcast %"class.spvtools::opt::BasicBlock"** %204 to i8*
  %209 = bitcast %"class.spvtools::opt::BasicBlock"** %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %208, i8* align 8 %209, i64 %201, i1 false) #12
  %210 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %197, align 8
  br label %211

211:                                              ; preds = %207, %188
  %212 = phi %"class.spvtools::opt::BasicBlock"** [ %198, %188 ], [ %210, %207 ]
  store i64 %205, i64* %162, align 8
  store i64 %196, i64* %161, align 8
  store i64 %193, i64* %171, align 8
  %213 = icmp eq %"class.spvtools::opt::BasicBlock"** %212, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %211
  %215 = bitcast %"class.spvtools::opt::BasicBlock"** %212 to i8*
  call void @_ZdlPv(i8* %215) #13
  br label %216

216:                                              ; preds = %154, %211, %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #12
  br label %217

217:                                              ; preds = %216, %130
  %218 = call i32 @_ZNK8spvtools3opt10BasicBlock17MergeBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %119) #12
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %482, label %220

220:                                              ; preds = %217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #12
  store %"class.spvtools::opt::BasicBlock"* %119, %"class.spvtools::opt::BasicBlock"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  store %"class.spvtools::opt::BasicBlock"** %13, %"class.spvtools::opt::BasicBlock"*** %100, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %101) #12
  %221 = call { %"struct.std::__1::__hash_node_base.839"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.835"* %94, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1244"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %6) #12
  %222 = extractvalue { %"struct.std::__1::__hash_node_base.839"*, i8 } %221, 0
  %223 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %222, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %101) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  %224 = zext i32 %218 to i64
  %225 = load i64, i64* %102, align 8
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %274, label %227

227:                                              ; preds = %220
  %228 = call i64 @llvm.ctpop.i64(i64 %225) #12, !range !3
  %229 = icmp ugt i64 %228, 1
  br i1 %229, label %233, label %230

230:                                              ; preds = %227
  %231 = add i64 %225, 4294967295
  %232 = and i64 %231, %224
  br label %237

233:                                              ; preds = %227
  %234 = icmp ugt i64 %225, %224
  br i1 %234, label %237, label %235

235:                                              ; preds = %233
  %236 = urem i64 %224, %225
  br label %237

237:                                              ; preds = %235, %233, %230
  %238 = phi i64 [ %232, %230 ], [ %236, %235 ], [ %224, %233 ]
  %239 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %103, align 8
  %240 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %239, i64 %238
  %241 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %240, align 8
  %242 = icmp eq %"struct.std::__1::__hash_node_base.891"* %241, null
  br i1 %242, label %274, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %241, i64 0, i32 0
  %245 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %244, align 8
  %246 = icmp eq %"struct.std::__1::__hash_node_base.891"* %245, null
  br i1 %246, label %274, label %247

247:                                              ; preds = %243
  %248 = add i64 %225, -1
  br label %249

249:                                              ; preds = %270, %247
  %250 = phi %"struct.std::__1::__hash_node_base.891"* [ %245, %247 ], [ %272, %270 ]
  %251 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %250, i64 1
  %252 = bitcast %"struct.std::__1::__hash_node_base.891"* %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = icmp eq i64 %253, %224
  br i1 %254, label %265, label %255

255:                                              ; preds = %249
  br i1 %229, label %258, label %256

256:                                              ; preds = %255
  %257 = and i64 %253, %248
  br label %262

258:                                              ; preds = %255
  %259 = icmp ult i64 %253, %225
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = urem i64 %253, %225
  br label %262

262:                                              ; preds = %260, %258, %256
  %263 = phi i64 [ %257, %256 ], [ %261, %260 ], [ %253, %258 ]
  %264 = icmp eq i64 %263, %238
  br i1 %264, label %270, label %274

265:                                              ; preds = %249
  %266 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %250, i64 2
  %267 = bitcast %"struct.std::__1::__hash_node_base.891"* %266 to i32*
  %268 = load i32, i32* %267, align 4
  %269 = icmp eq i32 %268, %218
  br i1 %269, label %275, label %270

270:                                              ; preds = %265, %262
  %271 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %250, i64 0, i32 0
  %272 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %271, align 8
  %273 = icmp eq %"struct.std::__1::__hash_node_base.891"* %272, null
  br i1 %273, label %274, label %249

274:                                              ; preds = %243, %237, %220, %270, %262
  call void @abort() #14
  unreachable

275:                                              ; preds = %265
  %276 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %250, i64 3
  %277 = bitcast %"struct.std::__1::__hash_node_base.891"* %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %222, i64 4
  %280 = bitcast %"struct.std::__1::__hash_node_base.839"* %279 to %"class.spvtools::opt::BasicBlock"***
  %281 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %280, align 8
  %282 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %222, i64 5
  %283 = bitcast %"struct.std::__1::__hash_node_base.839"* %282 to %"class.spvtools::opt::BasicBlock"***
  %284 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %283, align 8
  %285 = icmp ult %"class.spvtools::opt::BasicBlock"** %281, %284
  %286 = ptrtoint %"class.spvtools::opt::BasicBlock"** %284 to i64
  br i1 %285, label %287, label %292

287:                                              ; preds = %275
  %288 = bitcast %"class.spvtools::opt::BasicBlock"** %281 to i64*
  store i64 %278, i64* %288, align 8
  %289 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %281, i64 1
  %290 = ptrtoint %"class.spvtools::opt::BasicBlock"** %289 to i64
  %291 = bitcast %"struct.std::__1::__hash_node_base.839"* %279 to i64*
  store i64 %290, i64* %291, align 8
  br label %349

292:                                              ; preds = %275
  %293 = ptrtoint %"class.spvtools::opt::BasicBlock"** %281 to i64
  %294 = bitcast %"struct.std::__1::__hash_node_base.839"* %279 to i64*
  %295 = bitcast %"struct.std::__1::__hash_node_base.839"* %223 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = sub i64 %293, %296
  %298 = ashr exact i64 %297, 3
  %299 = add nsw i64 %298, 1
  %300 = icmp ugt i64 %299, 2305843009213693951
  br i1 %300, label %301, label %303

301:                                              ; preds = %292
  %302 = bitcast %"struct.std::__1::__hash_node_base.839"* %223 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %302) #14
  unreachable

303:                                              ; preds = %292
  %304 = bitcast %"struct.std::__1::__hash_node_base.839"* %282 to i64*
  %305 = sub i64 %286, %296
  %306 = ashr exact i64 %305, 3
  %307 = icmp ult i64 %306, 1152921504606846975
  br i1 %307, label %308, label %316

308:                                              ; preds = %303
  %309 = ashr exact i64 %305, 2
  %310 = icmp ult i64 %309, %299
  %311 = select i1 %310, i64 %299, i64 %309
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %321, label %313

313:                                              ; preds = %308
  %314 = icmp ugt i64 %311, 2305843009213693951
  br i1 %314, label %315, label %316

315:                                              ; preds = %313
  call void @abort() #14
  unreachable

316:                                              ; preds = %313, %303
  %317 = phi i64 [ %311, %313 ], [ 2305843009213693951, %303 ]
  %318 = shl i64 %317, 3
  %319 = call i8* @_Znwm(i64 %318) #13
  %320 = bitcast i8* %319 to %"class.spvtools::opt::BasicBlock"**
  br label %321

321:                                              ; preds = %316, %308
  %322 = phi i64 [ %317, %316 ], [ 0, %308 ]
  %323 = phi %"class.spvtools::opt::BasicBlock"** [ %320, %316 ], [ null, %308 ]
  %324 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %323, i64 %298
  %325 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %323, i64 %322
  %326 = ptrtoint %"class.spvtools::opt::BasicBlock"** %325 to i64
  %327 = bitcast %"class.spvtools::opt::BasicBlock"** %324 to i64*
  store i64 %278, i64* %327, align 8
  %328 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %324, i64 1
  %329 = ptrtoint %"class.spvtools::opt::BasicBlock"** %328 to i64
  %330 = bitcast %"struct.std::__1::__hash_node_base.839"* %223 to %"class.spvtools::opt::BasicBlock"***
  %331 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %330, align 8
  %332 = load i64, i64* %294, align 8
  %333 = ptrtoint %"class.spvtools::opt::BasicBlock"** %331 to i64
  %334 = sub i64 %332, %333
  %335 = ashr exact i64 %334, 3
  %336 = sub nsw i64 0, %335
  %337 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %324, i64 %336
  %338 = ptrtoint %"class.spvtools::opt::BasicBlock"** %337 to i64
  %339 = icmp sgt i64 %334, 0
  br i1 %339, label %340, label %344

340:                                              ; preds = %321
  %341 = bitcast %"class.spvtools::opt::BasicBlock"** %337 to i8*
  %342 = bitcast %"class.spvtools::opt::BasicBlock"** %331 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %341, i8* align 8 %342, i64 %334, i1 false) #12
  %343 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %330, align 8
  br label %344

344:                                              ; preds = %340, %321
  %345 = phi %"class.spvtools::opt::BasicBlock"** [ %331, %321 ], [ %343, %340 ]
  store i64 %338, i64* %295, align 8
  store i64 %329, i64* %294, align 8
  store i64 %326, i64* %304, align 8
  %346 = icmp eq %"class.spvtools::opt::BasicBlock"** %345, null
  br i1 %346, label %349, label %347

347:                                              ; preds = %344
  %348 = bitcast %"class.spvtools::opt::BasicBlock"** %345 to i8*
  call void @_ZdlPv(i8* %348) #13
  br label %349

349:                                              ; preds = %287, %344, %347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #12
  %350 = call i32 @_ZNK8spvtools3opt10BasicBlock20ContinueBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %119) #12
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %482, label %352

352:                                              ; preds = %349
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #12
  store %"class.spvtools::opt::BasicBlock"* %119, %"class.spvtools::opt::BasicBlock"** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  store %"class.spvtools::opt::BasicBlock"** %14, %"class.spvtools::opt::BasicBlock"*** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #12
  %353 = call { %"struct.std::__1::__hash_node_base.839"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.835"* %94, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %14, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1244"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %354 = extractvalue { %"struct.std::__1::__hash_node_base.839"*, i8 } %353, 0
  %355 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %354, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  %356 = zext i32 %350 to i64
  %357 = load i64, i64* %102, align 8
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %406, label %359

359:                                              ; preds = %352
  %360 = call i64 @llvm.ctpop.i64(i64 %357) #12, !range !3
  %361 = icmp ugt i64 %360, 1
  br i1 %361, label %365, label %362

362:                                              ; preds = %359
  %363 = add i64 %357, 4294967295
  %364 = and i64 %363, %356
  br label %369

365:                                              ; preds = %359
  %366 = icmp ugt i64 %357, %356
  br i1 %366, label %369, label %367

367:                                              ; preds = %365
  %368 = urem i64 %356, %357
  br label %369

369:                                              ; preds = %367, %365, %362
  %370 = phi i64 [ %364, %362 ], [ %368, %367 ], [ %356, %365 ]
  %371 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %103, align 8
  %372 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %371, i64 %370
  %373 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %372, align 8
  %374 = icmp eq %"struct.std::__1::__hash_node_base.891"* %373, null
  br i1 %374, label %406, label %375

375:                                              ; preds = %369
  %376 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %373, i64 0, i32 0
  %377 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %376, align 8
  %378 = icmp eq %"struct.std::__1::__hash_node_base.891"* %377, null
  br i1 %378, label %406, label %379

379:                                              ; preds = %375
  %380 = add i64 %357, -1
  br label %381

381:                                              ; preds = %402, %379
  %382 = phi %"struct.std::__1::__hash_node_base.891"* [ %377, %379 ], [ %404, %402 ]
  %383 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %382, i64 1
  %384 = bitcast %"struct.std::__1::__hash_node_base.891"* %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = icmp eq i64 %385, %356
  br i1 %386, label %397, label %387

387:                                              ; preds = %381
  br i1 %361, label %390, label %388

388:                                              ; preds = %387
  %389 = and i64 %385, %380
  br label %394

390:                                              ; preds = %387
  %391 = icmp ult i64 %385, %357
  br i1 %391, label %394, label %392

392:                                              ; preds = %390
  %393 = urem i64 %385, %357
  br label %394

394:                                              ; preds = %392, %390, %388
  %395 = phi i64 [ %389, %388 ], [ %393, %392 ], [ %385, %390 ]
  %396 = icmp eq i64 %395, %370
  br i1 %396, label %402, label %406

397:                                              ; preds = %381
  %398 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %382, i64 2
  %399 = bitcast %"struct.std::__1::__hash_node_base.891"* %398 to i32*
  %400 = load i32, i32* %399, align 4
  %401 = icmp eq i32 %400, %350
  br i1 %401, label %407, label %402

402:                                              ; preds = %397, %394
  %403 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %382, i64 0, i32 0
  %404 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %403, align 8
  %405 = icmp eq %"struct.std::__1::__hash_node_base.891"* %404, null
  br i1 %405, label %406, label %381

406:                                              ; preds = %375, %369, %352, %402, %394
  call void @abort() #14
  unreachable

407:                                              ; preds = %397
  %408 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %382, i64 3
  %409 = bitcast %"struct.std::__1::__hash_node_base.891"* %408 to i64*
  %410 = load i64, i64* %409, align 8
  %411 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %354, i64 4
  %412 = bitcast %"struct.std::__1::__hash_node_base.839"* %411 to %"class.spvtools::opt::BasicBlock"***
  %413 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %412, align 8
  %414 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %354, i64 5
  %415 = bitcast %"struct.std::__1::__hash_node_base.839"* %414 to %"class.spvtools::opt::BasicBlock"***
  %416 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %415, align 8
  %417 = icmp ult %"class.spvtools::opt::BasicBlock"** %413, %416
  %418 = ptrtoint %"class.spvtools::opt::BasicBlock"** %416 to i64
  br i1 %417, label %419, label %424

419:                                              ; preds = %407
  %420 = bitcast %"class.spvtools::opt::BasicBlock"** %413 to i64*
  store i64 %410, i64* %420, align 8
  %421 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %413, i64 1
  %422 = ptrtoint %"class.spvtools::opt::BasicBlock"** %421 to i64
  %423 = bitcast %"struct.std::__1::__hash_node_base.839"* %411 to i64*
  store i64 %422, i64* %423, align 8
  br label %481

424:                                              ; preds = %407
  %425 = ptrtoint %"class.spvtools::opt::BasicBlock"** %413 to i64
  %426 = bitcast %"struct.std::__1::__hash_node_base.839"* %411 to i64*
  %427 = bitcast %"struct.std::__1::__hash_node_base.839"* %355 to i64*
  %428 = load i64, i64* %427, align 8
  %429 = sub i64 %425, %428
  %430 = ashr exact i64 %429, 3
  %431 = add nsw i64 %430, 1
  %432 = icmp ugt i64 %431, 2305843009213693951
  br i1 %432, label %433, label %435

433:                                              ; preds = %424
  %434 = bitcast %"struct.std::__1::__hash_node_base.839"* %355 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %434) #14
  unreachable

435:                                              ; preds = %424
  %436 = bitcast %"struct.std::__1::__hash_node_base.839"* %414 to i64*
  %437 = sub i64 %418, %428
  %438 = ashr exact i64 %437, 3
  %439 = icmp ult i64 %438, 1152921504606846975
  br i1 %439, label %440, label %448

440:                                              ; preds = %435
  %441 = ashr exact i64 %437, 2
  %442 = icmp ult i64 %441, %431
  %443 = select i1 %442, i64 %431, i64 %441
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %453, label %445

445:                                              ; preds = %440
  %446 = icmp ugt i64 %443, 2305843009213693951
  br i1 %446, label %447, label %448

447:                                              ; preds = %445
  call void @abort() #14
  unreachable

448:                                              ; preds = %445, %435
  %449 = phi i64 [ %443, %445 ], [ 2305843009213693951, %435 ]
  %450 = shl i64 %449, 3
  %451 = call i8* @_Znwm(i64 %450) #13
  %452 = bitcast i8* %451 to %"class.spvtools::opt::BasicBlock"**
  br label %453

453:                                              ; preds = %448, %440
  %454 = phi i64 [ %449, %448 ], [ 0, %440 ]
  %455 = phi %"class.spvtools::opt::BasicBlock"** [ %452, %448 ], [ null, %440 ]
  %456 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %455, i64 %430
  %457 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %455, i64 %454
  %458 = ptrtoint %"class.spvtools::opt::BasicBlock"** %457 to i64
  %459 = bitcast %"class.spvtools::opt::BasicBlock"** %456 to i64*
  store i64 %410, i64* %459, align 8
  %460 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %456, i64 1
  %461 = ptrtoint %"class.spvtools::opt::BasicBlock"** %460 to i64
  %462 = bitcast %"struct.std::__1::__hash_node_base.839"* %355 to %"class.spvtools::opt::BasicBlock"***
  %463 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %462, align 8
  %464 = load i64, i64* %426, align 8
  %465 = ptrtoint %"class.spvtools::opt::BasicBlock"** %463 to i64
  %466 = sub i64 %464, %465
  %467 = ashr exact i64 %466, 3
  %468 = sub nsw i64 0, %467
  %469 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %456, i64 %468
  %470 = ptrtoint %"class.spvtools::opt::BasicBlock"** %469 to i64
  %471 = icmp sgt i64 %466, 0
  br i1 %471, label %472, label %476

472:                                              ; preds = %453
  %473 = bitcast %"class.spvtools::opt::BasicBlock"** %469 to i8*
  %474 = bitcast %"class.spvtools::opt::BasicBlock"** %463 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %473, i8* align 8 %474, i64 %466, i1 false) #12
  %475 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %462, align 8
  br label %476

476:                                              ; preds = %472, %453
  %477 = phi %"class.spvtools::opt::BasicBlock"** [ %463, %453 ], [ %475, %472 ]
  store i64 %470, i64* %427, align 8
  store i64 %461, i64* %426, align 8
  store i64 %458, i64* %436, align 8
  %478 = icmp eq %"class.spvtools::opt::BasicBlock"** %477, null
  br i1 %478, label %481, label %479

479:                                              ; preds = %476
  %480 = bitcast %"class.spvtools::opt::BasicBlock"** %477 to i8*
  call void @_ZdlPv(i8* %480) #13
  br label %481

481:                                              ; preds = %419, %476, %479
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #12
  br label %482

482:                                              ; preds = %481, %349, %217
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #12
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG27ComputeStructuredSuccessorsEPNS7_8FunctionEE3$_7S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %109, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG27ComputeStructuredSuccessorsEPNS5_8FunctionEE3$_7FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %110, align 8
  store %"class.spvtools::opt::BasicBlock"* %119, %"class.spvtools::opt::BasicBlock"** %111, align 8
  store %"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::CFG"** %113, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %119, %"class.std::__1::function.912"* nonnull dereferenceable(32) %15) #12
  %483 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %110, align 8
  %484 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %483, i64 0, i32 1
  %485 = load void (i8*)*, void (i8*)** %484, align 8
  %486 = icmp eq void (i8*)* %485, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %482
  %488 = load i8*, i8** %114, align 8
  call void %485(i8* %488) #12
  br label %489

489:                                              ; preds = %482, %487
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #12
  %490 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %117, i64 1
  %491 = icmp eq %"class.std::__1::unique_ptr.815"* %490, %84
  br i1 %491, label %115, label %116
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3CFAINS_3opt10BasicBlockEE19DepthFirstTraversalEPKS2_NSt3__18functionIFPKNS6_6vectorIPS2_NS6_9allocatorIS9_EEEES5_EEENS7_IFvS5_EEESI_NS7_IFvS5_S5_EEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.930"*, %"class.std::__1::function.943"*, %"class.std::__1::function.943"*, %"class.std::__1::function.949"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::unordered_set.1029", align 8
  %7 = alloca %"class.std::__1::vector.1192", align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast %"class.std::__1::unordered_set.1029"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.std::__1::unordered_set.1029", %"class.std::__1::unordered_set.1029"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::unordered_set.1029", %"class.std::__1::unordered_set.1029"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::unordered_set.1029", %"class.std::__1::unordered_set.1029"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::unordered_set.1029", %"class.std::__1::unordered_set.1029"* %6, i64 0, i32 0, i32 4, i64 0
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.1029", %"class.std::__1::unordered_set.1029"* %6, i64 0, i32 0, i32 3
  %16 = bitcast %"class.std::__1::__compressed_pair.1048"* %15 to i32*
  %17 = bitcast i8* %14 to i32*
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %16, align 8
  %18 = bitcast %"class.std::__1::vector.1192"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %7, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %7, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.1192", %"class.std::__1::vector.1192"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %21 to i64*
  %23 = bitcast %"class.std::__1::vector.1192"* %7 to i64*
  %24 = tail call i8* @_Znwm(i64 160) #13
  %25 = getelementptr inbounds i8, i8* %24, i64 160
  %26 = ptrtoint i8* %25 to i64
  %27 = insertelement <2 x i8*> undef, i8* %24, i32 0
  %28 = shufflevector <2 x i8*> %27, <2 x i8*> undef, <2 x i32> zeroinitializer
  %29 = ptrtoint <2 x i8*> %28 to <2 x i64>
  %30 = bitcast %"class.std::__1::vector.1192"* %7 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %30, align 16
  store i64 %26, i64* %22, align 16
  %31 = getelementptr inbounds %"class.std::__1::function.930", %"class.std::__1::function.930"* %1, i64 0, i32 0, i32 1, i32 0
  %32 = load %"class.std::__1::vector.936"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)*, %"class.std::__1::vector.936"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::function.930", %"class.std::__1::function.930"* %1, i64 0, i32 0, i32 0
  %34 = tail call %"class.std::__1::vector.936"* %32(%"union.std::__1::__function::__policy_storage"* %33, %"class.spvtools::opt::BasicBlock"* %0) #12
  %35 = bitcast %"class.std::__1::vector.936"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast i8* %24 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %0, %"class.spvtools::opt::BasicBlock"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %24, i64 8
  %39 = bitcast i8* %38 to i64*
  store i64 %36, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %24, i64 16
  %41 = ptrtoint i8* %40 to i64
  %42 = bitcast %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %20 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %2, i64 0, i32 0, i32 1, i32 0
  %44 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %2, i64 0, i32 0, i32 0
  tail call void %44(%"union.std::__1::__function::__policy_storage"* %45, %"class.spvtools::opt::BasicBlock"* %0) #12
  %46 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 4
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %5
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 3
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %48, i32 %55) #12
  br label %57

57:                                               ; preds = %5, %52
  %58 = phi i32 [ %56, %52 ], [ 0, %5 ]
  store i32 %58, i32* %8, align 4
  %59 = getelementptr inbounds %"class.std::__1::unordered_set.1029", %"class.std::__1::unordered_set.1029"* %6, i64 0, i32 0
  %60 = call { %"struct.std::__1::__hash_node_base.1034"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1030"* nonnull %59, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #12
  %61 = load %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %19, align 16
  %62 = load %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %20, align 8
  %63 = icmp eq %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %61, %62
  br i1 %63, label %269, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %4, i64 0, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %4, i64 0, i32 0, i32 0
  %67 = bitcast %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %20 to i64*
  %68 = bitcast i32* %9 to i8*
  %69 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %3, i64 0, i32 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.std::__1::function.943", %"class.std::__1::function.943"* %3, i64 0, i32 0, i32 0
  br label %71

71:                                               ; preds = %64, %265
  %72 = phi %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* [ %62, %64 ], [ %267, %265 ]
  %73 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %72, i64 -1, i32 0
  %74 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %73, align 8
  %75 = load %"class.std::__1::vector.936"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)*, %"class.std::__1::vector.936"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %31, align 8
  %76 = call %"class.std::__1::vector.936"* %75(%"union.std::__1::__function::__policy_storage"* %33, %"class.spvtools::opt::BasicBlock"* %74) #12
  %77 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %76, i64 0, i32 0, i32 1
  %78 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %77, align 8
  %79 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %72, i64 -1, i32 1, i32 0
  %80 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %79, align 8
  %81 = icmp eq %"class.spvtools::opt::BasicBlock"** %80, %78
  br i1 %81, label %82, label %87

82:                                               ; preds = %71
  %83 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %73, align 8
  %84 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %69, align 8
  call void %84(%"union.std::__1::__function::__policy_storage"* %70, %"class.spvtools::opt::BasicBlock"* %83) #12
  %85 = load %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %20, align 8
  %86 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %85, i64 -1
  store %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %86, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %20, align 8
  br label %265

87:                                               ; preds = %71
  %88 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %80, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %80, i64 1
  store %"class.spvtools::opt::BasicBlock"** %89, %"class.spvtools::opt::BasicBlock"*** %79, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %88, i64 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %90, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %91, i64 0, i32 4
  %93 = load i8, i8* %92, align 1, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %91, i64 0, i32 3
  %97 = load i8, i8* %96, align 4, !range !2
  %98 = zext i8 %97 to i32
  %99 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %91, i32 %98) #12
  br label %100

100:                                              ; preds = %87, %95
  %101 = phi i32 [ %99, %95 ], [ 0, %87 ]
  %102 = load %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %19, align 16
  %103 = load %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %20, align 8
  %104 = icmp eq %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %102, %103
  br i1 %104, label %128, label %107

105:                                              ; preds = %121
  %106 = icmp eq %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %124, %103
  br i1 %106, label %128, label %107

107:                                              ; preds = %100, %105
  %108 = phi %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* [ %124, %105 ], [ %102, %100 ]
  %109 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %108, i64 0, i32 0
  %110 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %109, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %110, i64 0, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 4
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 3
  %118 = load i8, i8* %117, align 4, !range !2
  %119 = zext i8 %118 to i32
  %120 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %112, i32 %119) #12
  br label %121

121:                                              ; preds = %116, %107
  %122 = phi i32 [ %120, %116 ], [ 0, %107 ]
  %123 = icmp eq i32 %122, %101
  %124 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %108, i64 1
  br i1 %123, label %125, label %105

125:                                              ; preds = %121
  %126 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %73, align 8
  %127 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*)** %65, align 8
  call void %127(%"union.std::__1::__function::__policy_storage"* %66, %"class.spvtools::opt::BasicBlock"* %126, %"class.spvtools::opt::BasicBlock"* %88) #12
  br label %128

128:                                              ; preds = %105, %100, %125
  %129 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %90, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 4
  %131 = load i8, i8* %130, align 1, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %138, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 3
  %135 = load i8, i8* %134, align 4, !range !2
  %136 = zext i8 %135 to i32
  %137 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %129, i32 %136) #12
  br label %138

138:                                              ; preds = %128, %133
  %139 = phi i32 [ %137, %133 ], [ 0, %128 ]
  %140 = zext i32 %139 to i64
  %141 = load i64, i64* %12, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %190, label %143

143:                                              ; preds = %138
  %144 = call i64 @llvm.ctpop.i64(i64 %141) #12, !range !3
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %143
  %147 = add i64 %141, 4294967295
  %148 = and i64 %147, %140
  br label %153

149:                                              ; preds = %143
  %150 = icmp ugt i64 %141, %140
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %140, %141
  br label %153

153:                                              ; preds = %151, %149, %146
  %154 = phi i64 [ %148, %146 ], [ %152, %151 ], [ %140, %149 ]
  %155 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %155, i64 %154
  %157 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %157, null
  br i1 %158, label %190, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %157, i64 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %161, null
  br i1 %162, label %190, label %163

163:                                              ; preds = %159
  %164 = add i64 %141, -1
  br label %165

165:                                              ; preds = %186, %163
  %166 = phi %"struct.std::__1::__hash_node_base.1034"* [ %161, %163 ], [ %188, %186 ]
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %166, i64 1
  %168 = bitcast %"struct.std::__1::__hash_node_base.1034"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = icmp eq i64 %169, %140
  br i1 %170, label %181, label %171

171:                                              ; preds = %165
  br i1 %145, label %174, label %172

172:                                              ; preds = %171
  %173 = and i64 %169, %164
  br label %178

174:                                              ; preds = %171
  %175 = icmp ult i64 %169, %141
  br i1 %175, label %178, label %176

176:                                              ; preds = %174
  %177 = urem i64 %169, %141
  br label %178

178:                                              ; preds = %176, %174, %172
  %179 = phi i64 [ %173, %172 ], [ %177, %176 ], [ %169, %174 ]
  %180 = icmp eq i64 %179, %154
  br i1 %180, label %186, label %190

181:                                              ; preds = %165
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %166, i64 2
  %183 = bitcast %"struct.std::__1::__hash_node_base.1034"* %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, %139
  br i1 %185, label %265, label %186

186:                                              ; preds = %181, %178
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %166, i64 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %188, null
  br i1 %189, label %190, label %165

190:                                              ; preds = %186, %178, %153, %138, %159
  %191 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %43, align 8
  call void %191(%"union.std::__1::__function::__policy_storage"* %45, %"class.spvtools::opt::BasicBlock"* %88) #12
  %192 = load %"class.std::__1::vector.936"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)*, %"class.std::__1::vector.936"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %31, align 8
  %193 = call %"class.std::__1::vector.936"* %192(%"union.std::__1::__function::__policy_storage"* %33, %"class.spvtools::opt::BasicBlock"* %88) #12
  %194 = bitcast %"class.std::__1::vector.936"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = load %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %20, align 8
  %197 = load %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %21, align 16
  %198 = icmp ult %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %196, %197
  %199 = ptrtoint %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %197 to i64
  br i1 %198, label %200, label %206

200:                                              ; preds = %190
  %201 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %196, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %88, %"class.spvtools::opt::BasicBlock"** %201, align 8
  %202 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %196, i64 0, i32 1, i32 0
  %203 = bitcast %"class.spvtools::opt::BasicBlock"*** %202 to i64*
  store i64 %195, i64* %203, align 8
  %204 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %196, i64 1
  %205 = ptrtoint %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %204 to i64
  store i64 %205, i64* %67, align 8
  br label %252

206:                                              ; preds = %190
  %207 = ptrtoint %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %196 to i64
  %208 = load i64, i64* %23, align 16
  %209 = sub i64 %207, %208
  %210 = ashr exact i64 %209, 4
  %211 = add nsw i64 %210, 1
  %212 = icmp ugt i64 %211, 1152921504606846975
  br i1 %212, label %213, label %215

213:                                              ; preds = %206
  %214 = bitcast %"class.std::__1::vector.1192"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %214) #14
  unreachable

215:                                              ; preds = %206
  %216 = sub i64 %199, %208
  %217 = ashr exact i64 %216, 4
  %218 = icmp ult i64 %217, 576460752303423487
  br i1 %218, label %219, label %227

219:                                              ; preds = %215
  %220 = ashr exact i64 %216, 3
  %221 = icmp ult i64 %220, %211
  %222 = select i1 %221, i64 %211, i64 %220
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %232, label %224

224:                                              ; preds = %219
  %225 = icmp ugt i64 %222, 1152921504606846975
  br i1 %225, label %226, label %227

226:                                              ; preds = %224
  call void @abort() #14
  unreachable

227:                                              ; preds = %224, %215
  %228 = phi i64 [ %222, %224 ], [ 1152921504606846975, %215 ]
  %229 = shl i64 %228, 4
  %230 = call i8* @_Znwm(i64 %229) #13
  %231 = bitcast i8* %230 to %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*
  br label %232

232:                                              ; preds = %227, %219
  %233 = phi i64 [ %228, %227 ], [ 0, %219 ]
  %234 = phi i8* [ %230, %227 ], [ null, %219 ]
  %235 = phi %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* [ %231, %227 ], [ null, %219 ]
  %236 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %235, i64 %210
  %237 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %235, i64 %233
  %238 = ptrtoint %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %237 to i64
  %239 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %236, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %88, %"class.spvtools::opt::BasicBlock"** %239, align 8
  %240 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %235, i64 %210, i32 1, i32 0
  %241 = bitcast %"class.spvtools::opt::BasicBlock"*** %240 to i64*
  store i64 %195, i64* %241, align 8
  %242 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %236, i64 1
  %243 = ptrtoint %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %242 to i64
  %244 = ptrtoint %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %235 to i64
  %245 = icmp sgt i64 %209, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %232
  %247 = inttoptr i64 %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %247, i64 %209, i1 false) #12
  br label %248

248:                                              ; preds = %246, %232
  store i64 %244, i64* %23, align 16
  store i64 %243, i64* %67, align 8
  store i64 %238, i64* %22, align 16
  %249 = icmp eq i64 %208, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %248
  %251 = inttoptr i64 %208 to i8*
  call void @_ZdlPv(i8* %251) #13
  br label %252

252:                                              ; preds = %200, %248, %250
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #12
  %253 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %90, align 8
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 4
  %255 = load i8, i8* %254, align 1, !range !2
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 3
  %259 = load i8, i8* %258, align 4, !range !2
  %260 = zext i8 %259 to i32
  %261 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %253, i32 %260) #12
  br label %262

262:                                              ; preds = %252, %257
  %263 = phi i32 [ %261, %257 ], [ 0, %252 ]
  store i32 %263, i32* %9, align 4
  %264 = call { %"struct.std::__1::__hash_node_base.1034"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1030"* nonnull %59, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #12
  br label %265

265:                                              ; preds = %181, %262, %82
  %266 = load %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %19, align 16
  %267 = load %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %20, align 8
  %268 = icmp eq %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %266, %267
  br i1 %268, label %269, label %71

269:                                              ; preds = %265, %57
  %270 = phi %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* [ %61, %57 ], [ %266, %265 ]
  %271 = icmp eq %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %270, null
  br i1 %271, label %276, label %272

272:                                              ; preds = %269
  %273 = ptrtoint %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %270 to i64
  %274 = bitcast %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"** %20 to i64*
  store i64 %273, i64* %274, align 8
  %275 = bitcast %"struct.spvtools::CFA<spvtools::opt::BasicBlock>::block_info"* %270 to i8*
  call void @_ZdlPv(i8* %275) #13
  br label %276

276:                                              ; preds = %269, %272
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  %277 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %13, align 8
  %278 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %277, null
  br i1 %278, label %285, label %279

279:                                              ; preds = %276, %279
  %280 = phi %"struct.std::__1::__hash_node_base.1034"* [ %282, %279 ], [ %277, %276 ]
  %281 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %280, i64 0, i32 0
  %282 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %281, align 8
  %283 = bitcast %"struct.std::__1::__hash_node_base.1034"* %280 to i8*
  call void @_ZdlPv(i8* %283) #13
  %284 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %282, null
  br i1 %284, label %285, label %279

285:                                              ; preds = %279, %276
  %286 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  store %"struct.std::__1::__hash_node_base.1034"** null, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %287 = icmp eq %"struct.std::__1::__hash_node_base.1034"** %286, null
  br i1 %287, label %290, label %288

288:                                              ; preds = %285
  %289 = bitcast %"struct.std::__1::__hash_node_base.1034"** %286 to i8*
  call void @_ZdlPv(i8* %289) #13
  br label %290

290:                                              ; preds = %285, %288
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt3CFG23ForEachBlockInPostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.955"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.936", align 8
  %5 = alloca %"class.std::__1::unordered_set.961", align 8
  %6 = bitcast %"class.std::__1::vector.936"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #12
  %9 = bitcast %"class.std::__1::unordered_set.961"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %5, i64 0, i32 0, i32 4, i64 0
  %13 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %5, i64 0, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.982"* %13 to i32*
  %15 = bitcast i8* %12 to i32*
  store i32 -1431655766, i32* %15, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %14, align 8
  call void @_ZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS0_10BasicBlockEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEEPNS4_13unordered_setIS3_NS4_4hashIS3_EENS4_8equal_toIS3_EES7_EE(%"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::vector.936"* nonnull %4, %"class.std::__1::unordered_set.961"* nonnull %5)
  %16 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %7, align 8
  %17 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %8, align 8
  %18 = icmp eq %"class.spvtools::opt::BasicBlock"** %16, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %2, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %2, i64 0, i32 0, i32 0
  br label %46

24:                                               ; preds = %54, %3
  %25 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %11, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.966"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24, %27
  %28 = phi %"struct.std::__1::__hash_node_base.966"* [ %30, %27 ], [ %25, %24 ]
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %28, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %29, align 8
  %31 = bitcast %"struct.std::__1::__hash_node_base.966"* %28 to i8*
  call void @_ZdlPv(i8* %31) #13
  %32 = icmp eq %"struct.std::__1::__hash_node_base.966"* %30, null
  br i1 %32, label %33, label %27

33:                                               ; preds = %27, %24
  %34 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %10, align 8
  store %"struct.std::__1::__hash_node_base.966"** null, %"struct.std::__1::__hash_node_base.966"*** %10, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.966"** %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = bitcast %"struct.std::__1::__hash_node_base.966"** %34 to i8*
  call void @_ZdlPv(i8* %37) #13
  br label %38

38:                                               ; preds = %33, %36
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #12
  %39 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %7, align 8
  %40 = icmp eq %"class.spvtools::opt::BasicBlock"** %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = ptrtoint %"class.spvtools::opt::BasicBlock"** %39 to i64
  %43 = bitcast %"class.spvtools::opt::BasicBlock"*** %8 to i64*
  store i64 %42, i64* %43, align 8
  %44 = bitcast %"class.spvtools::opt::BasicBlock"** %39 to i8*
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %38, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void

46:                                               ; preds = %19, %54
  %47 = phi %"class.spvtools::opt::BasicBlock"** [ %16, %19 ], [ %55, %54 ]
  %48 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %47, align 8
  %49 = icmp eq %"class.spvtools::opt::BasicBlock"* %20, %48
  %50 = icmp eq %"class.spvtools::opt::BasicBlock"* %21, %48
  %51 = or i1 %49, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %22, align 8
  call void %53(%"union.std::__1::__function::__policy_storage"* %23, %"class.spvtools::opt::BasicBlock"* %48) #12
  br label %54

54:                                               ; preds = %52, %46
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %47, i64 1
  %56 = icmp eq %"class.spvtools::opt::BasicBlock"** %55, %17
  br i1 %56, label %24, label %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS0_10BasicBlockEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEEPNS4_13unordered_setIS3_NS4_4hashIS3_EENS4_8equal_toIS3_EES7_EE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::vector.936"*, %"class.std::__1::unordered_set.961"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %6 = alloca %"class.std::__1::unordered_set.961"*, align 8
  %7 = alloca %"class.std::__1::vector.936", align 8
  %8 = alloca %"class.std::__1::function.996", align 8
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %5, align 8
  store %"class.std::__1::unordered_set.961"* %3, %"class.std::__1::unordered_set.961"** %6, align 8
  %9 = bitcast %"class.std::__1::vector.936"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %7, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %7, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = ptrtoint %"class.spvtools::opt::BasicBlock"* %1 to i64
  %14 = bitcast %"class.spvtools::opt::BasicBlock"*** %11 to i64*
  %15 = bitcast %"class.std::__1::vector.936"* %7 to i64*
  %16 = bitcast %"class.spvtools::opt::BasicBlock"*** %12 to i64*
  %17 = tail call i8* @_Znwm(i64 8) #13
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = ptrtoint i8* %18 to i64
  %20 = bitcast i8* %17 to i64*
  store i64 %13, i64* %20, align 8
  %21 = ptrtoint i8* %17 to i64
  store i64 %21, i64* %15, align 8
  store i64 %19, i64* %14, align 8
  store i64 %19, i64* %16, align 8
  %22 = bitcast i8* %18 to %"class.spvtools::opt::BasicBlock"**
  %23 = bitcast %"class.spvtools::opt::BasicBlock"** %5 to i64*
  %24 = bitcast %"class.std::__1::function.996"* %8 to i8*
  %25 = getelementptr inbounds %"class.std::__1::function.996", %"class.std::__1::function.996"* %8, i64 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.std::__1::function.996", %"class.std::__1::function.996"* %8, i64 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::function.996", %"class.std::__1::function.996"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %2, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.spvtools::opt::BasicBlock"*** %28 to i64*
  %31 = bitcast %"class.std::__1::vector.936"* %2 to i64*
  %32 = bitcast %"class.spvtools::opt::BasicBlock"*** %29 to i64*
  %33 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %2, i64 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %132, %4
  %35 = phi %"class.std::__1::unordered_set.961"* [ %3, %4 ], [ %133, %132 ]
  %36 = phi %"class.spvtools::opt::BasicBlock"** [ %22, %4 ], [ %129, %132 ]
  %37 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %36, i64 -1
  %38 = bitcast %"class.spvtools::opt::BasicBlock"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %23, align 8
  %40 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %35, i64 0, i32 0
  %41 = call { %"struct.std::__1::__hash_node_base.966"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.962"* %40, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %5, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %5) #12
  %42 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFbjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS7_10BasicBlockEPNS_6vectorISA_NS_9allocatorISA_EEEEPNS_13unordered_setISA_NS_4hashISA_EENS_8equal_toISA_EESD_EEE3$_8S2_EEEEbPKNS0_16__policy_storageEj", i1 (%"union.std::__1::__function::__policy_storage"*, i32)** %25, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %26, align 8
  %43 = call i8* @_Znwm(i64 24) #13, !noalias !6
  %44 = bitcast i8* %43 to %"class.std::__1::unordered_set.961"***
  store %"class.std::__1::unordered_set.961"** %6, %"class.std::__1::unordered_set.961"*** %44, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 8
  %46 = bitcast i8* %45 to %"class.std::__1::vector.936"**
  store %"class.std::__1::vector.936"* %7, %"class.std::__1::vector.936"** %46, align 8
  %47 = getelementptr inbounds i8, i8* %43, i64 16
  %48 = bitcast i8* %47 to %"class.spvtools::opt::CFG"**
  store %"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::CFG"** %48, align 8
  store i8* %43, i8** %27, align 8
  %49 = call zeroext i1 @_ZNK8spvtools3opt10BasicBlock23WhileEachSuccessorLabelERKNSt3__18functionIFbjEEE(%"class.spvtools::opt::BasicBlock"* %42, %"class.std::__1::function.996"* nonnull dereferenceable(32) %8) #12
  %50 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %26, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %50, i64 0, i32 1
  %52 = load void (i8*)*, void (i8*)** %51, align 8
  %53 = icmp eq void (i8*)* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %34
  %55 = load i8*, i8** %27, align 8
  call void %52(i8* %55) #12
  br label %56

56:                                               ; preds = %34, %54
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  %57 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %57, i64 -1
  %59 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %58, align 8
  %60 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %61 = icmp eq %"class.spvtools::opt::BasicBlock"* %59, %60
  %62 = ptrtoint %"class.spvtools::opt::BasicBlock"* %60 to i64
  br i1 %61, label %63, label %128

63:                                               ; preds = %56
  %64 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %28, align 8
  %65 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %29, align 8
  %66 = icmp eq %"class.spvtools::opt::BasicBlock"** %64, %65
  %67 = ptrtoint %"class.spvtools::opt::BasicBlock"** %65 to i64
  br i1 %66, label %72, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.spvtools::opt::BasicBlock"** %64 to i64*
  store i64 %62, i64* %69, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %64, i64 1
  %71 = ptrtoint %"class.spvtools::opt::BasicBlock"** %70 to i64
  store i64 %71, i64* %30, align 8
  br label %125

72:                                               ; preds = %63
  %73 = ptrtoint %"class.spvtools::opt::BasicBlock"** %64 to i64
  %74 = load i64, i64* %31, align 8
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 3
  %77 = add nsw i64 %76, 1
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = bitcast %"class.std::__1::vector.936"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #14
  unreachable

81:                                               ; preds = %72
  %82 = sub i64 %67, %74
  %83 = ashr exact i64 %82, 3
  %84 = icmp ult i64 %83, 1152921504606846975
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = ashr exact i64 %82, 2
  %87 = icmp ult i64 %86, %77
  %88 = select i1 %87, i64 %77, i64 %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = icmp ugt i64 %88, 2305843009213693951
  br i1 %91, label %92, label %93

92:                                               ; preds = %90
  call void @abort() #14
  unreachable

93:                                               ; preds = %90, %81
  %94 = phi i64 [ %88, %90 ], [ 2305843009213693951, %81 ]
  %95 = shl i64 %94, 3
  %96 = call i8* @_Znwm(i64 %95) #13
  %97 = bitcast i8* %96 to %"class.spvtools::opt::BasicBlock"**
  br label %98

98:                                               ; preds = %93, %85
  %99 = phi i64 [ %94, %93 ], [ 0, %85 ]
  %100 = phi %"class.spvtools::opt::BasicBlock"** [ %97, %93 ], [ null, %85 ]
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %100, i64 %76
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %100, i64 %99
  %103 = ptrtoint %"class.spvtools::opt::BasicBlock"** %102 to i64
  %104 = bitcast %"class.spvtools::opt::BasicBlock"** %101 to i64*
  store i64 %62, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %101, i64 1
  %106 = ptrtoint %"class.spvtools::opt::BasicBlock"** %105 to i64
  %107 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %33, align 8
  %108 = load i64, i64* %30, align 8
  %109 = ptrtoint %"class.spvtools::opt::BasicBlock"** %107 to i64
  %110 = sub i64 %108, %109
  %111 = ashr exact i64 %110, 3
  %112 = sub nsw i64 0, %111
  %113 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %101, i64 %112
  %114 = ptrtoint %"class.spvtools::opt::BasicBlock"** %113 to i64
  %115 = icmp sgt i64 %110, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %98
  %117 = bitcast %"class.spvtools::opt::BasicBlock"** %113 to i8*
  %118 = bitcast %"class.spvtools::opt::BasicBlock"** %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 %110, i1 false) #12
  %119 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %33, align 8
  br label %120

120:                                              ; preds = %116, %98
  %121 = phi %"class.spvtools::opt::BasicBlock"** [ %107, %98 ], [ %119, %116 ]
  store i64 %114, i64* %31, align 8
  store i64 %106, i64* %30, align 8
  store i64 %103, i64* %32, align 8
  %122 = icmp eq %"class.spvtools::opt::BasicBlock"** %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  %124 = bitcast %"class.spvtools::opt::BasicBlock"** %121 to i8*
  call void @_ZdlPv(i8* %124) #13
  br label %125

125:                                              ; preds = %68, %120, %123
  %126 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %126, i64 -1
  store %"class.spvtools::opt::BasicBlock"** %127, %"class.spvtools::opt::BasicBlock"*** %11, align 8
  br label %128

128:                                              ; preds = %125, %56
  %129 = phi %"class.spvtools::opt::BasicBlock"** [ %127, %125 ], [ %57, %56 ]
  %130 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %10, align 8
  %131 = icmp eq %"class.spvtools::opt::BasicBlock"** %130, %129
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = load %"class.std::__1::unordered_set.961"*, %"class.std::__1::unordered_set.961"** %6, align 8
  br label %34

134:                                              ; preds = %128
  %135 = icmp eq %"class.spvtools::opt::BasicBlock"** %129, null
  br i1 %135, label %140, label %136

136:                                              ; preds = %134
  %137 = ptrtoint %"class.spvtools::opt::BasicBlock"** %129 to i64
  %138 = bitcast %"class.spvtools::opt::BasicBlock"*** %11 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"class.spvtools::opt::BasicBlock"** %129 to i8*
  call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.955"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.988", align 8
  %5 = bitcast %"class.std::__1::function.988"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %2, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast [8 x i8]* %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %2, i64 0, i32 0, i32 2
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 0
  %14 = load i8* (i8*)*, i8* (i8*)** %13, align 8
  %15 = icmp eq i8* (i8*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  %17 = tail call i8* %14(i8* %7) #12
  br label %18

18:                                               ; preds = %3, %16
  %19 = phi i8* [ %7, %3 ], [ %17, %16 ]
  %20 = getelementptr inbounds %"class.std::__1::function.988", %"class.std::__1::function.988"* %4, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::function.988", %"class.std::__1::function.988"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG30ForEachBlockInReversePostOrderES5_RKNS_8functionIFvS5_EEEE3$_6S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %20, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %21, align 8
  %22 = tail call i8* @_Znwm(i64 32) #13, !noalias !11
  %23 = bitcast i8* %22 to i8**
  store i8* %19, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 24
  %27 = bitcast i8* %26 to %"struct.std::__1::__function::__policy"**
  store %"struct.std::__1::__function::__policy"* %12, %"struct.std::__1::__function::__policy"** %27, align 8
  %28 = load i8* (i8*)*, i8* (i8*)** %13, align 8
  %29 = icmp eq i8* (i8*)* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %18
  %31 = tail call i8* %28(i8* %19) #12
  store i8* %31, i8** %23, align 8
  br label %32

32:                                               ; preds = %18, %30
  %33 = getelementptr inbounds %"class.std::__1::function.988", %"class.std::__1::function.988"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %33, align 8
  %34 = call zeroext i1 @_ZN8spvtools3opt3CFG32WhileEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFbS3_EEE(%"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::function.988"* nonnull dereferenceable(32) %4)
  %35 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %21, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %35, i64 0, i32 1
  %37 = load void (i8*)*, void (i8*)** %36, align 8
  %38 = icmp eq void (i8*)* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %32
  %40 = load i8*, i8** %33, align 8
  call void %37(i8* %40) #12
  br label %41

41:                                               ; preds = %32, %39
  %42 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %43 = load void (i8*)*, void (i8*)** %42, align 8
  %44 = icmp eq void (i8*)* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  call void %43(i8* %19) #12
  br label %46

46:                                               ; preds = %41, %45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt3CFG32WhileEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFbS3_EEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.988"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.936", align 8
  %5 = alloca %"class.std::__1::unordered_set.961", align 8
  %6 = bitcast %"class.std::__1::vector.936"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #12
  %9 = bitcast %"class.std::__1::unordered_set.961"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %5, i64 0, i32 0, i32 4, i64 0
  %13 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %5, i64 0, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.982"* %13 to i32*
  %15 = bitcast i8* %12 to i32*
  store i32 -1431655766, i32* %15, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %14, align 8
  call void @_ZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS0_10BasicBlockEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEEPNS4_13unordered_setIS3_NS4_4hashIS3_EENS4_8equal_toIS3_EES7_EE(%"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::vector.936"* nonnull %4, %"class.std::__1::unordered_set.961"* nonnull %5)
  %16 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %8, align 8
  %17 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %7, align 8
  %18 = icmp eq %"class.spvtools::opt::BasicBlock"** %16, %17
  br i1 %18, label %40, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.std::__1::function.988", %"class.std::__1::function.988"* %2, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::function.988", %"class.std::__1::function.988"* %2, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %19, %37
  %25 = phi %"class.spvtools::opt::BasicBlock"** [ %17, %19 ], [ %38, %37 ]
  %26 = phi %"class.spvtools::opt::BasicBlock"** [ %16, %19 ], [ %27, %37 ]
  %27 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, i64 -1
  %28 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %29 = icmp eq %"class.spvtools::opt::BasicBlock"* %20, %28
  %30 = icmp eq %"class.spvtools::opt::BasicBlock"* %21, %28
  %31 = or i1 %29, %30
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %22, align 8
  %34 = call zeroext i1 %33(%"union.std::__1::__function::__policy_storage"* %23, %"class.spvtools::opt::BasicBlock"* %28) #12
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %7, align 8
  br label %37

37:                                               ; preds = %35, %24
  %38 = phi %"class.spvtools::opt::BasicBlock"** [ %36, %35 ], [ %25, %24 ]
  %39 = icmp eq %"class.spvtools::opt::BasicBlock"** %27, %38
  br i1 %39, label %40, label %24

40:                                               ; preds = %32, %37, %3
  %41 = phi i1 [ true, %3 ], [ true, %37 ], [ false, %32 ]
  %42 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %11, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.966"* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %40, %44
  %45 = phi %"struct.std::__1::__hash_node_base.966"* [ %47, %44 ], [ %42, %40 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %46, align 8
  %48 = bitcast %"struct.std::__1::__hash_node_base.966"* %45 to i8*
  call void @_ZdlPv(i8* %48) #13
  %49 = icmp eq %"struct.std::__1::__hash_node_base.966"* %47, null
  br i1 %49, label %50, label %44

50:                                               ; preds = %44, %40
  %51 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %10, align 8
  store %"struct.std::__1::__hash_node_base.966"** null, %"struct.std::__1::__hash_node_base.966"*** %10, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.966"** %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  %54 = bitcast %"struct.std::__1::__hash_node_base.966"** %51 to i8*
  call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #12
  %56 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %7, align 8
  %57 = icmp eq %"class.spvtools::opt::BasicBlock"** %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %55
  %59 = ptrtoint %"class.spvtools::opt::BasicBlock"** %56 to i64
  %60 = bitcast %"class.spvtools::opt::BasicBlock"*** %8 to i64*
  store i64 %59, i64* %60, align 8
  %61 = bitcast %"class.spvtools::opt::BasicBlock"** %56 to i8*
  call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret i1 %41
}

declare i32 @_ZNK8spvtools3opt10BasicBlock17MergeBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #3

declare i32 @_ZNK8spvtools3opt10BasicBlock20ContinueBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8spvtools3opt10BasicBlock23WhileEachSuccessorLabelERKNSt3__18functionIFbjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.996"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt3CFG15SplitLoopHeaderEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1122", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.std::__1::tuple.1240", align 8
  %7 = alloca %"class.std::__1::tuple.1091", align 1
  %8 = alloca %"class.std::__1::tuple.1122", align 8
  %9 = alloca %"class.std::__1::tuple.1091", align 1
  %10 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %11 = alloca %"class.std::__1::function.1137", align 8
  %12 = alloca %"class.std::__1::function.1137", align 8
  %13 = alloca %"class.std::__1::tuple.1240", align 8
  %14 = alloca %"class.std::__1::tuple.1091", align 1
  %15 = alloca %"class.std::__1::tuple.1122", align 8
  %16 = alloca %"class.std::__1::tuple.1091", align 1
  %17 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %18 = alloca %"class.std::__1::function.912", align 8
  %19 = alloca %"class.std::__1::tuple.1240", align 8
  %20 = alloca %"class.std::__1::tuple.1091", align 1
  %21 = alloca i32, align 4
  %22 = alloca %"class.std::__1::tuple", align 8
  %23 = alloca %"class.std::__1::tuple.1091", align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %"class.std::__1::tuple", align 8
  %28 = alloca %"class.std::__1::tuple.1091", align 1
  %29 = alloca i32, align 4
  %30 = alloca %"class.std::__1::tuple", align 8
  %31 = alloca %"class.std::__1::tuple.1091", align 1
  %32 = alloca i32, align 4
  %33 = alloca %"class.spvtools::opt::IRContext"*, align 8
  %34 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %35 = alloca %"class.std::__1::function.1004", align 8
  %36 = alloca %"class.std::__1::function.1004", align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca %"class.std::initializer_list", align 8
  %41 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %42 = alloca %"class.spvtools::utils::SmallVector", align 8
  %43 = alloca i32, align 4
  %44 = alloca %"class.std::__1::function.1013", align 8
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 0
  %48 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %47, align 8
  %49 = bitcast %"class.spvtools::opt::IRContext"** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 0
  %51 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %51, i64 0, i32 2
  %53 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %52, align 8
  store %"class.spvtools::opt::IRContext"* %53, %"class.spvtools::opt::IRContext"** %33, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %54, align 8
  %56 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %55) #12
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 5, i32 0, i32 2
  %60 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %60, i64 0, i32 2
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %955

64:                                               ; preds = %58
  %65 = tail call i8* @_Znwm(i64 48) #13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #12
  %66 = getelementptr inbounds i8, i8* %65, i64 37
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 5, i32 0, i32 1, i32 0
  %68 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 5, i32 0, i32 0
  tail call void %68(%"union.std::__1::__function::__policy_storage"* %69, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %65) #12
  tail call void @_ZdlPv(i8* nonnull %65) #13
  br label %955

70:                                               ; preds = %2
  %71 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %48, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"** %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %48, i64 0, i32 3, i32 0, i32 1
  %74 = load %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"** %73, align 8
  %75 = icmp eq %"class.std::__1::unique_ptr.815"* %72, %74
  br i1 %75, label %84, label %76

76:                                               ; preds = %70, %81
  %77 = phi %"class.std::__1::unique_ptr.815"* [ %82, %81 ], [ %72, %70 ]
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %78, align 8
  %80 = icmp eq %"class.spvtools::opt::BasicBlock"* %79, %1
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %77, i64 1
  %83 = icmp eq %"class.std::__1::unique_ptr.815"* %82, %74
  br i1 %83, label %84, label %76

84:                                               ; preds = %81, %76, %70
  %85 = phi %"class.std::__1::unique_ptr.815"* [ %72, %70 ], [ %74, %81 ], [ %77, %76 ]
  %86 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %86, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 4
  %89 = load i8, i8* %88, align 1, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 3
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = zext i8 %93 to i32
  %95 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %87, i32 %94) #12
  br label %96

96:                                               ; preds = %84, %91
  %97 = phi i32 [ %95, %91 ], [ 0, %84 ]
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %150, label %102

102:                                              ; preds = %96
  %103 = tail call i64 @llvm.ctpop.i64(i64 %100) #12, !range !3
  %104 = icmp ugt i64 %103, 1
  br i1 %104, label %108, label %105

105:                                              ; preds = %102
  %106 = add i64 %100, 4294967295
  %107 = and i64 %106, %98
  br label %112

108:                                              ; preds = %102
  %109 = icmp ugt i64 %100, %98
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = urem i64 %98, %100
  br label %112

112:                                              ; preds = %110, %108, %105
  %113 = phi i64 [ %107, %105 ], [ %111, %110 ], [ %98, %108 ]
  %114 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %115, i64 %113
  %117 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base.867"* %117, null
  br i1 %118, label %150, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %117, i64 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.867"* %121, null
  br i1 %122, label %150, label %123

123:                                              ; preds = %119
  %124 = add i64 %100, -1
  br label %125

125:                                              ; preds = %146, %123
  %126 = phi %"struct.std::__1::__hash_node_base.867"* [ %121, %123 ], [ %148, %146 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %126, i64 1
  %128 = bitcast %"struct.std::__1::__hash_node_base.867"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, %98
  br i1 %130, label %141, label %131

131:                                              ; preds = %125
  br i1 %104, label %134, label %132

132:                                              ; preds = %131
  %133 = and i64 %129, %124
  br label %138

134:                                              ; preds = %131
  %135 = icmp ult i64 %129, %100
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %129, %100
  br label %138

138:                                              ; preds = %136, %134, %132
  %139 = phi i64 [ %133, %132 ], [ %137, %136 ], [ %129, %134 ]
  %140 = icmp eq i64 %139, %113
  br i1 %140, label %146, label %150

141:                                              ; preds = %125
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %126, i64 2
  %143 = bitcast %"struct.std::__1::__hash_node_base.867"* %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, %97
  br i1 %145, label %151, label %146

146:                                              ; preds = %141, %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %126, i64 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %147, align 8
  %149 = icmp eq %"struct.std::__1::__hash_node_base.867"* %148, null
  br i1 %149, label %150, label %125

150:                                              ; preds = %146, %138, %119, %112, %96
  tail call void @abort() #14
  unreachable

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %126, i64 3
  %153 = bitcast %"struct.std::__1::__hash_node_base.867"* %152 to i32**
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %126, i64 4
  %155 = bitcast %"struct.std::__1::__hash_node_base.867"* %154 to i32**
  br label %156

156:                                              ; preds = %186, %151
  %157 = phi %"class.std::__1::unique_ptr.815"* [ %85, %151 ], [ %158, %186 ]
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %157, i64 1
  %159 = load %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"** %73, align 8
  %160 = icmp eq %"class.std::__1::unique_ptr.815"* %158, %159
  br i1 %160, label %190, label %161

161:                                              ; preds = %156
  %162 = load i32*, i32** %153, align 8
  %163 = load i32*, i32** %155, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %158, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %164, align 8
  %166 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %165, i64 0, i32 1, i32 0, i32 0, i32 0
  %167 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %166, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %167, i64 0, i32 4
  %169 = load i8, i8* %168, align 1, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %176, label %171

171:                                              ; preds = %161
  %172 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %167, i64 0, i32 3
  %173 = load i8, i8* %172, align 4, !range !2
  %174 = zext i8 %173 to i32
  %175 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %167, i32 %174) #12
  br label %176

176:                                              ; preds = %161, %171
  %177 = phi i32 [ %175, %171 ], [ 0, %161 ]
  %178 = icmp eq i32* %162, %163
  br i1 %178, label %186, label %179

179:                                              ; preds = %176, %183
  %180 = phi i32* [ %184, %183 ], [ %162, %176 ]
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %181, %177
  br i1 %182, label %186, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds i32, i32* %180, i64 1
  %185 = icmp eq i32* %184, %163
  br i1 %185, label %186, label %179

186:                                              ; preds = %179, %183, %176
  %187 = phi i32* [ %162, %176 ], [ %163, %183 ], [ %180, %179 ]
  %188 = load i32*, i32** %155, align 8
  %189 = icmp eq i32* %187, %188
  br i1 %189, label %156, label %190

190:                                              ; preds = %186, %156
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %158, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %191, align 8
  %193 = bitcast %"class.std::__1::function.912"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %193) #12
  %194 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %18, i64 0, i32 0, i32 1, i32 0
  %195 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %18, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS7_10BasicBlockEEUljE_S2_EEEEvPKNS0_16__policy_storageEj, void (%"union.std::__1::__function::__policy_storage"*, i32)** %194, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS5_10BasicBlockEEUljE_FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %195, align 8
  %196 = bitcast %"class.std::__1::function.912"* %18 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %196, align 8
  %197 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %18, i64 0, i32 0, i32 0, i32 1
  %198 = bitcast [8 x i8]* %197 to %"class.spvtools::opt::CFG"**
  store %"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::CFG"** %198, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::function.912"* nonnull dereferenceable(32) %18) #12
  %199 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %195, align 8
  %200 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %199, i64 0, i32 1
  %201 = load void (i8*)*, void (i8*)** %200, align 8
  %202 = icmp eq void (i8*)* %201, null
  br i1 %202, label %206, label %203

203:                                              ; preds = %190
  %204 = getelementptr inbounds %"class.std::__1::function.912", %"class.std::__1::function.912"* %18, i64 0, i32 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  call void %201(i8* %205) #12
  br label %206

206:                                              ; preds = %190, %203
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %193) #12
  %207 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %208 = bitcast %"class.spvtools::opt::Instruction"** %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = inttoptr i64 %209 to %"class.spvtools::opt::Instruction"*
  %211 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %210, i64 0, i32 2
  %212 = load i32, i32* %211, align 8
  %213 = icmp eq i32 %212, 245
  br i1 %213, label %214, label %224

214:                                              ; preds = %206, %214
  %215 = phi i64 [ %219, %214 ], [ %209, %206 ]
  %216 = inttoptr i64 %215 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %217 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %216, i64 0, i32 1
  %218 = bitcast %"class.spvtools::opt::Instruction"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = inttoptr i64 %219 to %"class.spvtools::opt::Instruction"*
  %221 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %220, i64 0, i32 2
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, 245
  br i1 %223, label %214, label %224

224:                                              ; preds = %214, %206
  %225 = phi i64 [ %209, %206 ], [ %219, %214 ]
  %226 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %227 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %34 to i64*
  store i64 %225, i64* %227, align 8
  %228 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10BasicBlock15SplitBasicBlockEPNS0_9IRContextEjNS0_15InstructionList8iteratorE(%"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::IRContext"* %226, i32 %56, %"class.spvtools::opt::InstructionList::iterator"* nonnull %34) #12
  %229 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %228, i64 0, i32 1, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 11
  %232 = load i32, i32* %231, align 8
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %239, label %235

235:                                              ; preds = %224
  %236 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %230, align 8
  %237 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 6, i32 0, i32 0, i32 0
  %238 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %237, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %238, %"class.spvtools::opt::Instruction"* %236) #12
  br label %239

239:                                              ; preds = %224, %235
  call void @_ZN8spvtools3opt3CFG13RegisterBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::BasicBlock"* %228)
  %240 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %241 = bitcast %"class.spvtools::opt::Instruction"** %230 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.spvtools::opt::Instruction"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243)
  %244 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %242, i64* %244, align 8
  %245 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %240, i64 0, i32 11
  %246 = load i32, i32* %245, align 8
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %252

249:                                              ; preds = %239
  %250 = ptrtoint %"class.spvtools::opt::IRContext"* %240 to i64
  %251 = bitcast %"class.spvtools::opt::IRContext"** %33 to i64*
  br label %263

252:                                              ; preds = %239
  %253 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %240, i64 0, i32 9, i32 0
  %254 = bitcast %"class.std::__1::tuple.1122"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #12
  %255 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"*** %255, align 8
  %256 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %256) #12
  %257 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %253, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1122"* nonnull dereferenceable(8) %15, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %16) #12
  %258 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %257, 0
  %259 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %258, i64 3
  %260 = bitcast %"struct.std::__1::__hash_node_base.115"* %259 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %256) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #12
  store %"class.spvtools::opt::BasicBlock"* %228, %"class.spvtools::opt::BasicBlock"** %260, align 8
  %261 = bitcast %"class.spvtools::opt::IRContext"** %33 to i64*
  %262 = load i64, i64* %261, align 8
  br label %263

263:                                              ; preds = %249, %252
  %264 = phi i64* [ %251, %249 ], [ %261, %252 ]
  %265 = phi i64 [ %250, %249 ], [ %262, %252 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243)
  %266 = bitcast %"class.std::__1::function.1004"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %266) #12
  %267 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %35, i64 0, i32 0, i32 1, i32 0
  %268 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %35, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG15SplitLoopHeaderEPNS3_10BasicBlockEE4$_10S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %267, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_10FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %268, align 8
  %269 = bitcast %"class.std::__1::function.1004"* %35 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %228, %"class.spvtools::opt::BasicBlock"** %269, align 8
  %270 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %35, i64 0, i32 0, i32 0, i32 1
  %271 = bitcast [8 x i8]* %270 to i64*
  store i64 %265, i64* %271, align 8
  %272 = bitcast %"class.std::__1::function.1137"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %272) #12
  %273 = ptrtoint %"class.std::__1::function.1004"* %35 to i64
  %274 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %12, i64 0, i32 0, i32 1, i32 0
  %275 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %12, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %274, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %275, align 8
  %276 = bitcast %"class.std::__1::function.1137"* %12 to i64*
  store i64 %273, i64* %276, align 8
  %277 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %230, align 8
  %278 = icmp eq %"class.spvtools::opt::Instruction"* %277, null
  %279 = inttoptr i64 %265 to %"class.spvtools::opt::IRContext"*
  %280 = ptrtoint %"class.spvtools::opt::BasicBlock"* %228 to i64
  br i1 %278, label %297, label %281

281:                                              ; preds = %263
  %282 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %282)
  store %"class.spvtools::opt::Instruction"* %277, %"class.spvtools::opt::Instruction"** %5, align 8
  %283 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %279, i64 0, i32 11
  %284 = load i32, i32* %283, align 8
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %296, label %287

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %279, i64 0, i32 9, i32 0
  %289 = bitcast %"class.std::__1::tuple.1122"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289) #12
  %290 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %290, align 8
  %291 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %291) #12
  %292 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %288, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1122"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %293 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %292, 0
  %294 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %293, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %291) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289) #12
  %295 = bitcast %"struct.std::__1::__hash_node_base.115"* %294 to i64*
  store i64 %280, i64* %295, align 8
  br label %296

296:                                              ; preds = %281, %287
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %282)
  br label %297

297:                                              ; preds = %296, %263
  %298 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %228, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %299 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %298, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %299, i64 0, i32 0, i32 3
  %301 = load i8, i8* %300, align 8, !range !2
  %302 = icmp ne i8 %301, 0
  %303 = icmp eq %"class.spvtools::opt::Instruction"* %299, null
  %304 = or i1 %303, %302
  br i1 %304, label %319, label %305

305:                                              ; preds = %297
  %306 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %12, i64 0, i32 0, i32 0
  br label %307

307:                                              ; preds = %310, %305
  %308 = phi %"class.spvtools::opt::Instruction"* [ %316, %310 ], [ %299, %305 ]
  %309 = icmp eq %"class.spvtools::opt::Instruction"* %308, null
  br i1 %309, label %319, label %310

310:                                              ; preds = %307
  %311 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %308, i64 0, i32 0, i32 1
  %312 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %311, align 8
  %313 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %312, i64 0, i32 0, i32 3
  %314 = load i8, i8* %313, align 8, !range !2
  %315 = icmp eq i8 %314, 0
  %316 = select i1 %315, %"class.spvtools::opt::Instruction"* %312, %"class.spvtools::opt::Instruction"* null
  %317 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %274, align 8
  %318 = call zeroext i1 %317(%"union.std::__1::__function::__policy_storage"* nonnull %306, %"class.spvtools::opt::Instruction"* nonnull %308) #12
  br i1 %318, label %307, label %319

319:                                              ; preds = %310, %307, %297
  %320 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %275, align 8
  %321 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %320, i64 0, i32 1
  %322 = load void (i8*)*, void (i8*)** %321, align 8
  %323 = icmp eq void (i8*)* %322, null
  br i1 %323, label %327, label %324

324:                                              ; preds = %319
  %325 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %12, i64 0, i32 0, i32 0, i32 0
  %326 = load i8*, i8** %325, align 8
  call void %322(i8* %326) #12
  br label %327

327:                                              ; preds = %319, %324
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %272) #12
  %328 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %268, align 8
  %329 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %328, i64 0, i32 1
  %330 = load void (i8*)*, void (i8*)** %329, align 8
  %331 = icmp eq void (i8*)* %330, null
  br i1 %331, label %335, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %35, i64 0, i32 0, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  call void %330(i8* %334) #12
  br label %335

335:                                              ; preds = %327, %332
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #12
  %336 = bitcast %"class.std::__1::function.1004"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %336) #12
  %337 = load i64, i64* %264, align 8
  %338 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %36, i64 0, i32 0, i32 1, i32 0
  %339 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %36, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG15SplitLoopHeaderEPNS3_10BasicBlockEE4$_11S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %338, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %339, align 8
  %340 = call i8* @_Znwm(i64 32) #13, !noalias !16
  %341 = bitcast i8* %340 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %192, %"class.spvtools::opt::BasicBlock"** %341, align 8
  %342 = getelementptr inbounds i8, i8* %340, i64 8
  %343 = bitcast i8* %342 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %343, align 8
  %344 = getelementptr inbounds i8, i8* %340, i64 16
  %345 = bitcast i8* %344 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %228, %"class.spvtools::opt::BasicBlock"** %345, align 8
  %346 = getelementptr inbounds i8, i8* %340, i64 24
  %347 = bitcast i8* %346 to i64*
  store i64 %337, i64* %347, align 8
  %348 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %36, i64 0, i32 0, i32 0, i32 0
  store i8* %340, i8** %348, align 8
  %349 = bitcast %"class.std::__1::function.1137"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %349) #12
  %350 = ptrtoint %"class.std::__1::function.1004"* %36 to i64
  %351 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %11, i64 0, i32 0, i32 1, i32 0
  %352 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %11, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %351, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %352, align 8
  %353 = bitcast %"class.std::__1::function.1137"* %11 to i64*
  store i64 %350, i64* %353, align 8
  %354 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %207, align 8
  %355 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %354, i64 0, i32 0, i32 3
  %356 = load i8, i8* %355, align 8, !range !2
  %357 = icmp ne i8 %356, 0
  %358 = icmp eq %"class.spvtools::opt::Instruction"* %354, null
  %359 = or i1 %358, %357
  br i1 %359, label %380, label %360

360:                                              ; preds = %335
  %361 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %11, i64 0, i32 0, i32 0
  br label %362

362:                                              ; preds = %371, %360
  %363 = phi %"class.spvtools::opt::Instruction"* [ %375, %371 ], [ %354, %360 ]
  %364 = icmp eq %"class.spvtools::opt::Instruction"* %363, null
  br i1 %364, label %378, label %365

365:                                              ; preds = %362
  %366 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %363, i64 0, i32 0, i32 1
  %367 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %366, align 8
  %368 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %363, i64 0, i32 2
  %369 = load i32, i32* %368, align 8
  %370 = icmp eq i32 %369, 245
  br i1 %370, label %371, label %378

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 0, i32 3
  %373 = load i8, i8* %372, align 8, !range !2
  %374 = icmp eq i8 %373, 0
  %375 = select i1 %374, %"class.spvtools::opt::Instruction"* %367, %"class.spvtools::opt::Instruction"* null
  %376 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %351, align 8
  %377 = call zeroext i1 %376(%"union.std::__1::__function::__policy_storage"* nonnull %361, %"class.spvtools::opt::Instruction"* nonnull %363) #12
  br i1 %377, label %362, label %378

378:                                              ; preds = %362, %365, %371
  %379 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %352, align 8
  br label %380

380:                                              ; preds = %378, %335
  %381 = phi %"struct.std::__1::__function::__policy"* [ %379, %378 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %335 ]
  %382 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %381, i64 0, i32 1
  %383 = load void (i8*)*, void (i8*)** %382, align 8
  %384 = icmp eq void (i8*)* %383, null
  br i1 %384, label %388, label %385

385:                                              ; preds = %380
  %386 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %11, i64 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  call void %383(i8* %387) #12
  br label %388

388:                                              ; preds = %380, %385
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %349) #12
  %389 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %339, align 8
  %390 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %389, i64 0, i32 1
  %391 = load void (i8*)*, void (i8*)** %390, align 8
  %392 = icmp eq void (i8*)* %391, null
  br i1 %392, label %395, label %393

393:                                              ; preds = %388
  %394 = load i8*, i8** %348, align 8
  call void %391(i8* %394) #12
  br label %395

395:                                              ; preds = %388, %393
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %336) #12
  %396 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %397 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %397) #12
  store i32 249, i32* %37, align 4
  %398 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %398) #12
  store i32 0, i32* %38, align 4
  %399 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %399) #12
  store i32 0, i32* %39, align 4
  %400 = bitcast %"class.std::initializer_list"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %400) #12
  %401 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %401) #12
  %402 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %41, i64 0, i64 0
  %403 = bitcast %"class.spvtools::utils::SmallVector"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %403) #12
  %404 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %230, align 8
  %405 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %404, i64 0, i32 4
  %406 = load i8, i8* %405, align 1, !range !2
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %413, label %408

408:                                              ; preds = %395
  %409 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %404, i64 0, i32 3
  %410 = load i8, i8* %409, align 4, !range !2
  %411 = zext i8 %410 to i32
  %412 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %404, i32 %411) #12
  br label %413

413:                                              ; preds = %395, %408
  %414 = phi i32 [ %412, %408 ], [ 0, %395 ]
  %415 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %42, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %415, align 8
  %416 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %42, i64 0, i32 1
  %417 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %42, i64 0, i32 2
  %418 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %42, i64 0, i32 3, i64 0
  %419 = bitcast i32** %417 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %418, %"struct.std::__1::aligned_storage<4, 4>::type"** %419, align 8
  %420 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %42, i64 0, i32 4
  %421 = bitcast %"class.std::__1::unique_ptr.489"* %420 to i64*
  store i64 0, i64* %421, align 8
  %422 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %418 to i32*
  store i64 1, i64* %416, align 8
  store i32 %414, i32* %422, align 8
  %423 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %41, i64 0, i64 0, i32 0
  store i32 1, i32* %423, align 8
  %424 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %41, i64 0, i64 0, i32 1
  %425 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %424, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %425, align 8
  %426 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %41, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %426, align 8
  %427 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %41, i64 0, i64 0, i32 1, i32 2
  %428 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %41, i64 0, i64 0, i32 1, i32 3, i64 0
  %429 = bitcast i32** %427 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %428, %"struct.std::__1::aligned_storage<4, 4>::type"** %429, align 8
  %430 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %41, i64 0, i64 0, i32 1, i32 4
  %431 = bitcast %"class.std::__1::unique_ptr.489"* %430 to i64*
  store i64 0, i64* %431, align 8
  %432 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %424, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %42) #12
  %433 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %40, i64 0, i32 0
  store %"struct.spvtools::opt::Operand"* %402, %"struct.spvtools::opt::Operand"** %433, align 8
  %434 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %40, i64 0, i32 1
  store i64 1, i64* %434, align 8
  %435 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJRPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NSA_14default_deleteISC_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** nonnull dereferenceable(8) %33, i32* nonnull dereferenceable(4) %37, i32* nonnull dereferenceable(4) %38, i32* nonnull dereferenceable(4) %39, %"class.std::initializer_list"* nonnull dereferenceable(16) %40)
  %436 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %435, i64 0, i32 0, i32 1
  %437 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %436, align 8
  %438 = icmp eq %"class.spvtools::opt::Instruction"* %437, null
  br i1 %438, label %452, label %439

439:                                              ; preds = %413
  %440 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %435, i64 0, i32 0, i32 2
  %441 = bitcast %"class.spvtools::opt::Instruction"** %440 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %437, i64 0, i32 0, i32 2
  %444 = bitcast %"class.spvtools::opt::Instruction"** %443 to i64*
  store i64 %442, i64* %444, align 8
  %445 = bitcast %"class.spvtools::opt::Instruction"** %436 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = bitcast %"class.spvtools::opt::Instruction"** %440 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %448 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %447, align 8
  %449 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %448, i64 0, i32 1
  %450 = bitcast %"class.spvtools::opt::Instruction"** %449 to i64*
  store i64 %446, i64* %450, align 8
  %451 = bitcast %"class.spvtools::opt::Instruction"** %436 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %451, i8 0, i64 16, i1 false) #12
  br label %452

452:                                              ; preds = %413, %439
  store %"class.spvtools::opt::Instruction"* %396, %"class.spvtools::opt::Instruction"** %436, align 8
  %453 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %454 = bitcast %"class.spvtools::opt::Instruction"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %435, i64 0, i32 0, i32 2
  %457 = bitcast %"class.spvtools::opt::Instruction"** %456 to i64*
  store i64 %455, i64* %457, align 8
  store %"class.spvtools::opt::Instruction"* %435, %"class.spvtools::opt::Instruction"** %453, align 8
  %458 = bitcast %"class.spvtools::opt::Instruction"** %456 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %459 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %458, align 8
  %460 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %459, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %435, %"class.spvtools::opt::Instruction"** %460, align 8
  %461 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %41, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %461, align 8
  %462 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %41, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %463 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %462, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %462, align 8
  %464 = icmp eq %"class.std::__1::vector.324"* %463, null
  br i1 %464, label %476, label %465

465:                                              ; preds = %452
  %466 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %463, i64 0, i32 0, i32 0
  %467 = load i32*, i32** %466, align 8
  %468 = icmp eq i32* %467, null
  br i1 %468, label %474, label %469

469:                                              ; preds = %465
  %470 = ptrtoint i32* %467 to i64
  %471 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %463, i64 0, i32 0, i32 1
  %472 = bitcast i32** %471 to i64*
  store i64 %470, i64* %472, align 8
  %473 = bitcast i32* %467 to i8*
  call void @_ZdlPv(i8* %473) #13
  br label %474

474:                                              ; preds = %469, %465
  %475 = bitcast %"class.std::__1::vector.324"* %463 to i8*
  call void @_ZdlPv(i8* %475) #13
  br label %476

476:                                              ; preds = %452, %474
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %415, align 8
  %477 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %478 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %477, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %477, align 8
  %479 = icmp eq %"class.std::__1::vector.324"* %478, null
  br i1 %479, label %491, label %480

480:                                              ; preds = %476
  %481 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %478, i64 0, i32 0, i32 0
  %482 = load i32*, i32** %481, align 8
  %483 = icmp eq i32* %482, null
  br i1 %483, label %489, label %484

484:                                              ; preds = %480
  %485 = ptrtoint i32* %482 to i64
  %486 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %478, i64 0, i32 0, i32 1
  %487 = bitcast i32** %486 to i64*
  store i64 %485, i64* %487, align 8
  %488 = bitcast i32* %482 to i8*
  call void @_ZdlPv(i8* %488) #13
  br label %489

489:                                              ; preds = %484, %480
  %490 = bitcast %"class.std::__1::vector.324"* %478 to i8*
  call void @_ZdlPv(i8* %490) #13
  br label %491

491:                                              ; preds = %476, %489
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %403) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %401) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %400) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %399) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %398) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %397) #12
  %492 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %493 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %453, align 8, !noalias !21
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %492, %"class.spvtools::opt::Instruction"* %493) #12
  %494 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %495 = load i64, i64* %454, align 8, !noalias !24
  %496 = bitcast %"class.spvtools::opt::Instruction"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %496)
  %497 = bitcast %"class.spvtools::opt::Instruction"** %10 to i64*
  store i64 %495, i64* %497, align 8
  %498 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %494, i64 0, i32 11
  %499 = load i32, i32* %498, align 8
  %500 = and i32 %499, 2
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %511, label %502

502:                                              ; preds = %491
  %503 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %494, i64 0, i32 9, i32 0
  %504 = bitcast %"class.std::__1::tuple.1122"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %504) #12
  %505 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %10, %"class.spvtools::opt::Instruction"*** %505, align 8
  %506 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %506) #12
  %507 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %503, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1122"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %9) #12
  %508 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %507, 0
  %509 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %508, i64 3
  %510 = bitcast %"struct.std::__1::__hash_node_base.115"* %509 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %506) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %504) #12
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %510, align 8
  br label %511

511:                                              ; preds = %491, %502
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %496)
  %512 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %512) #12
  %513 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %230, align 8
  %514 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %513, i64 0, i32 4
  %515 = load i8, i8* %514, align 1, !range !2
  %516 = icmp eq i8 %515, 0
  br i1 %516, label %522, label %517

517:                                              ; preds = %511
  %518 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %513, i64 0, i32 3
  %519 = load i8, i8* %518, align 4, !range !2
  %520 = zext i8 %519 to i32
  %521 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %513, i32 %520) #12
  br label %522

522:                                              ; preds = %511, %517
  %523 = phi i32 [ %521, %517 ], [ 0, %511 ]
  store i32 %523, i32* %43, align 4
  %524 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0
  %525 = bitcast %"class.std::__1::tuple.1240"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %525) #12
  %526 = getelementptr inbounds %"class.std::__1::tuple.1240", %"class.std::__1::tuple.1240"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %43, i32** %526, align 8
  %527 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %527) #12
  %528 = call { %"struct.std::__1::__hash_node_base.867"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.863"* %524, i32* nonnull dereferenceable(4) %43, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1240"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %7) #12
  %529 = extractvalue { %"struct.std::__1::__hash_node_base.867"*, i8 } %528, 0
  %530 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %529, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %527) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %525) #12
  %531 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %86, align 8
  %532 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %531, i64 0, i32 4
  %533 = load i8, i8* %532, align 1, !range !2
  %534 = icmp eq i8 %533, 0
  br i1 %534, label %540, label %535

535:                                              ; preds = %522
  %536 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %531, i64 0, i32 3
  %537 = load i8, i8* %536, align 4, !range !2
  %538 = zext i8 %537 to i32
  %539 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %531, i32 %538) #12
  br label %540

540:                                              ; preds = %522, %535
  %541 = phi i32 [ %539, %535 ], [ 0, %522 ]
  %542 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %529, i64 4
  %543 = bitcast %"struct.std::__1::__hash_node_base.867"* %542 to i32**
  %544 = load i32*, i32** %543, align 8
  %545 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %529, i64 5
  %546 = bitcast %"struct.std::__1::__hash_node_base.867"* %545 to i32**
  %547 = load i32*, i32** %546, align 8
  %548 = icmp ult i32* %544, %547
  %549 = ptrtoint i32* %547 to i64
  br i1 %548, label %550, label %554

550:                                              ; preds = %540
  store i32 %541, i32* %544, align 4
  %551 = getelementptr inbounds i32, i32* %544, i64 1
  %552 = ptrtoint i32* %551 to i64
  %553 = bitcast %"struct.std::__1::__hash_node_base.867"* %542 to i64*
  store i64 %552, i64* %553, align 8
  br label %610

554:                                              ; preds = %540
  %555 = ptrtoint i32* %544 to i64
  %556 = bitcast %"struct.std::__1::__hash_node_base.867"* %542 to i64*
  %557 = bitcast %"struct.std::__1::__hash_node_base.867"* %530 to i64*
  %558 = load i64, i64* %557, align 8
  %559 = sub i64 %555, %558
  %560 = ashr exact i64 %559, 2
  %561 = add nsw i64 %560, 1
  %562 = icmp ugt i64 %561, 4611686018427387903
  br i1 %562, label %563, label %565

563:                                              ; preds = %554
  %564 = bitcast %"struct.std::__1::__hash_node_base.867"* %530 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %564) #14
  unreachable

565:                                              ; preds = %554
  %566 = bitcast %"struct.std::__1::__hash_node_base.867"* %545 to i64*
  %567 = sub i64 %549, %558
  %568 = ashr exact i64 %567, 2
  %569 = icmp ult i64 %568, 2305843009213693951
  br i1 %569, label %570, label %578

570:                                              ; preds = %565
  %571 = ashr exact i64 %567, 1
  %572 = icmp ult i64 %571, %561
  %573 = select i1 %572, i64 %561, i64 %571
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %583, label %575

575:                                              ; preds = %570
  %576 = icmp ugt i64 %573, 4611686018427387903
  br i1 %576, label %577, label %578

577:                                              ; preds = %575
  call void @abort() #14
  unreachable

578:                                              ; preds = %575, %565
  %579 = phi i64 [ %573, %575 ], [ 4611686018427387903, %565 ]
  %580 = shl i64 %579, 2
  %581 = call i8* @_Znwm(i64 %580) #13
  %582 = bitcast i8* %581 to i32*
  br label %583

583:                                              ; preds = %578, %570
  %584 = phi i64 [ %579, %578 ], [ 0, %570 ]
  %585 = phi i32* [ %582, %578 ], [ null, %570 ]
  %586 = getelementptr inbounds i32, i32* %585, i64 %560
  %587 = getelementptr inbounds i32, i32* %585, i64 %584
  %588 = ptrtoint i32* %587 to i64
  store i32 %541, i32* %586, align 4
  %589 = getelementptr inbounds i32, i32* %586, i64 1
  %590 = ptrtoint i32* %589 to i64
  %591 = bitcast %"struct.std::__1::__hash_node_base.867"* %530 to i32**
  %592 = load i32*, i32** %591, align 8
  %593 = load i64, i64* %556, align 8
  %594 = ptrtoint i32* %592 to i64
  %595 = sub i64 %593, %594
  %596 = ashr exact i64 %595, 2
  %597 = sub nsw i64 0, %596
  %598 = getelementptr inbounds i32, i32* %586, i64 %597
  %599 = ptrtoint i32* %598 to i64
  %600 = icmp sgt i64 %595, 0
  br i1 %600, label %601, label %605

601:                                              ; preds = %583
  %602 = bitcast i32* %598 to i8*
  %603 = bitcast i32* %592 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %602, i8* align 4 %603, i64 %595, i1 false) #12
  %604 = load i32*, i32** %591, align 8
  br label %605

605:                                              ; preds = %601, %583
  %606 = phi i32* [ %592, %583 ], [ %604, %601 ]
  store i64 %599, i64* %557, align 8
  store i64 %590, i64* %556, align 8
  store i64 %588, i64* %566, align 8
  %607 = icmp eq i32* %606, null
  br i1 %607, label %610, label %608

608:                                              ; preds = %605
  %609 = bitcast i32* %606 to i8*
  call void @_ZdlPv(i8* %609) #13
  br label %610

610:                                              ; preds = %550, %605, %608
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %512) #12
  %611 = bitcast %"class.std::__1::function.1013"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %611) #12
  %612 = getelementptr inbounds %"class.std::__1::function.1013", %"class.std::__1::function.1013"* %44, i64 0, i32 0, i32 1, i32 0
  %613 = getelementptr inbounds %"class.std::__1::function.1013", %"class.std::__1::function.1013"* %44, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS8_10BasicBlockEE4$_12S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %612, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_12FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %613, align 8
  %614 = bitcast %"class.std::__1::function.1013"* %44 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %614, align 8
  %615 = getelementptr inbounds %"class.std::__1::function.1013", %"class.std::__1::function.1013"* %44, i64 0, i32 0, i32 0, i32 1
  %616 = bitcast [8 x i8]* %615 to i32*
  store i32 %56, i32* %616, align 8
  call void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"* %192, %"class.std::__1::function.1013"* nonnull dereferenceable(32) %44) #12
  %617 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %613, align 8
  %618 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %617, i64 0, i32 1
  %619 = load void (i8*)*, void (i8*)** %618, align 8
  %620 = icmp eq void (i8*)* %619, null
  br i1 %620, label %624, label %621

621:                                              ; preds = %610
  %622 = getelementptr inbounds %"class.std::__1::function.1013", %"class.std::__1::function.1013"* %44, i64 0, i32 0, i32 0, i32 0
  %623 = load i8*, i8** %622, align 8
  call void %619(i8* %623) #12
  br label %624

624:                                              ; preds = %610, %621
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %611) #12
  %625 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %192, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %626 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %625, align 8, !noalias !27
  %627 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %627, %"class.spvtools::opt::Instruction"* %626) #12
  %628 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %628) #12
  %629 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %230, align 8
  %630 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %629, i64 0, i32 4
  %631 = load i8, i8* %630, align 1, !range !2
  %632 = icmp eq i8 %631, 0
  br i1 %632, label %638, label %633

633:                                              ; preds = %624
  %634 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %629, i64 0, i32 3
  %635 = load i8, i8* %634, align 4, !range !2
  %636 = zext i8 %635 to i32
  %637 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %629, i32 %636) #12
  br label %638

638:                                              ; preds = %624, %633
  %639 = phi i32 [ %637, %633 ], [ 0, %624 ]
  store i32 %639, i32* %45, align 4
  %640 = bitcast %"class.std::__1::tuple.1240"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %640) #12
  %641 = getelementptr inbounds %"class.std::__1::tuple.1240", %"class.std::__1::tuple.1240"* %13, i64 0, i32 0, i32 0, i32 0
  store i32* %45, i32** %641, align 8
  %642 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %642) #12
  %643 = call { %"struct.std::__1::__hash_node_base.867"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.863"* %524, i32* nonnull dereferenceable(4) %45, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1240"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %14) #12
  %644 = extractvalue { %"struct.std::__1::__hash_node_base.867"*, i8 } %643, 0
  %645 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %644, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %642) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %640) #12
  %646 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %192, i64 0, i32 1, i32 0, i32 0, i32 0
  %647 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %646, align 8
  %648 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %647, i64 0, i32 4
  %649 = load i8, i8* %648, align 1, !range !2
  %650 = icmp eq i8 %649, 0
  br i1 %650, label %656, label %651

651:                                              ; preds = %638
  %652 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %647, i64 0, i32 3
  %653 = load i8, i8* %652, align 4, !range !2
  %654 = zext i8 %653 to i32
  %655 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %647, i32 %654) #12
  br label %656

656:                                              ; preds = %638, %651
  %657 = phi i32 [ %655, %651 ], [ 0, %638 ]
  %658 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %644, i64 4
  %659 = bitcast %"struct.std::__1::__hash_node_base.867"* %658 to i32**
  %660 = load i32*, i32** %659, align 8
  %661 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %644, i64 5
  %662 = bitcast %"struct.std::__1::__hash_node_base.867"* %661 to i32**
  %663 = load i32*, i32** %662, align 8
  %664 = icmp ult i32* %660, %663
  %665 = ptrtoint i32* %663 to i64
  br i1 %664, label %666, label %670

666:                                              ; preds = %656
  store i32 %657, i32* %660, align 4
  %667 = getelementptr inbounds i32, i32* %660, i64 1
  %668 = ptrtoint i32* %667 to i64
  %669 = bitcast %"struct.std::__1::__hash_node_base.867"* %658 to i64*
  store i64 %668, i64* %669, align 8
  br label %726

670:                                              ; preds = %656
  %671 = ptrtoint i32* %660 to i64
  %672 = bitcast %"struct.std::__1::__hash_node_base.867"* %658 to i64*
  %673 = bitcast %"struct.std::__1::__hash_node_base.867"* %645 to i64*
  %674 = load i64, i64* %673, align 8
  %675 = sub i64 %671, %674
  %676 = ashr exact i64 %675, 2
  %677 = add nsw i64 %676, 1
  %678 = icmp ugt i64 %677, 4611686018427387903
  br i1 %678, label %679, label %681

679:                                              ; preds = %670
  %680 = bitcast %"struct.std::__1::__hash_node_base.867"* %645 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %680) #14
  unreachable

681:                                              ; preds = %670
  %682 = bitcast %"struct.std::__1::__hash_node_base.867"* %661 to i64*
  %683 = sub i64 %665, %674
  %684 = ashr exact i64 %683, 2
  %685 = icmp ult i64 %684, 2305843009213693951
  br i1 %685, label %686, label %694

686:                                              ; preds = %681
  %687 = ashr exact i64 %683, 1
  %688 = icmp ult i64 %687, %677
  %689 = select i1 %688, i64 %677, i64 %687
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %699, label %691

691:                                              ; preds = %686
  %692 = icmp ugt i64 %689, 4611686018427387903
  br i1 %692, label %693, label %694

693:                                              ; preds = %691
  call void @abort() #14
  unreachable

694:                                              ; preds = %691, %681
  %695 = phi i64 [ %689, %691 ], [ 4611686018427387903, %681 ]
  %696 = shl i64 %695, 2
  %697 = call i8* @_Znwm(i64 %696) #13
  %698 = bitcast i8* %697 to i32*
  br label %699

699:                                              ; preds = %694, %686
  %700 = phi i64 [ %695, %694 ], [ 0, %686 ]
  %701 = phi i32* [ %698, %694 ], [ null, %686 ]
  %702 = getelementptr inbounds i32, i32* %701, i64 %676
  %703 = getelementptr inbounds i32, i32* %701, i64 %700
  %704 = ptrtoint i32* %703 to i64
  store i32 %657, i32* %702, align 4
  %705 = getelementptr inbounds i32, i32* %702, i64 1
  %706 = ptrtoint i32* %705 to i64
  %707 = bitcast %"struct.std::__1::__hash_node_base.867"* %645 to i32**
  %708 = load i32*, i32** %707, align 8
  %709 = load i64, i64* %672, align 8
  %710 = ptrtoint i32* %708 to i64
  %711 = sub i64 %709, %710
  %712 = ashr exact i64 %711, 2
  %713 = sub nsw i64 0, %712
  %714 = getelementptr inbounds i32, i32* %702, i64 %713
  %715 = ptrtoint i32* %714 to i64
  %716 = icmp sgt i64 %711, 0
  br i1 %716, label %717, label %721

717:                                              ; preds = %699
  %718 = bitcast i32* %714 to i8*
  %719 = bitcast i32* %708 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %718, i8* align 4 %719, i64 %711, i1 false) #12
  %720 = load i32*, i32** %707, align 8
  br label %721

721:                                              ; preds = %717, %699
  %722 = phi i32* [ %708, %699 ], [ %720, %717 ]
  store i64 %715, i64* %673, align 8
  store i64 %706, i64* %672, align 8
  store i64 %704, i64* %682, align 8
  %723 = icmp eq i32* %722, null
  br i1 %723, label %726, label %724

724:                                              ; preds = %721
  %725 = bitcast i32* %722 to i8*
  call void @_ZdlPv(i8* %725) #13
  br label %726

726:                                              ; preds = %666, %721, %724
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %628) #12
  %727 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %727) #12
  %728 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %86, align 8
  %729 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %728, i64 0, i32 4
  %730 = load i8, i8* %729, align 1, !range !2
  %731 = icmp eq i8 %730, 0
  br i1 %731, label %737, label %732

732:                                              ; preds = %726
  %733 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %728, i64 0, i32 3
  %734 = load i8, i8* %733, align 4, !range !2
  %735 = zext i8 %734 to i32
  %736 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %728, i32 %735) #12
  br label %737

737:                                              ; preds = %726, %732
  %738 = phi i32 [ %736, %732 ], [ 0, %726 ]
  store i32 %738, i32* %46, align 4
  %739 = bitcast %"class.std::__1::tuple.1240"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %739) #12
  %740 = getelementptr inbounds %"class.std::__1::tuple.1240", %"class.std::__1::tuple.1240"* %19, i64 0, i32 0, i32 0, i32 0
  store i32* %46, i32** %740, align 8
  %741 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %741) #12
  %742 = call { %"struct.std::__1::__hash_node_base.867"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.863"* %524, i32* nonnull dereferenceable(4) %46, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1240"* nonnull dereferenceable(8) %19, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %20) #12
  %743 = extractvalue { %"struct.std::__1::__hash_node_base.867"*, i8 } %742, 0
  %744 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %743, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %741) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %739) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %727) #12
  %745 = bitcast %"struct.std::__1::__hash_node_base.867"* %744 to i32**
  %746 = load i32*, i32** %745, align 8
  %747 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %743, i64 4
  %748 = bitcast %"struct.std::__1::__hash_node_base.867"* %747 to i32**
  %749 = load i32*, i32** %748, align 8
  %750 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %646, align 8
  %751 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %750, i64 0, i32 4
  %752 = load i8, i8* %751, align 1, !range !2
  %753 = icmp eq i8 %752, 0
  br i1 %753, label %759, label %754

754:                                              ; preds = %737
  %755 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %750, i64 0, i32 3
  %756 = load i8, i8* %755, align 4, !range !2
  %757 = zext i8 %756 to i32
  %758 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %750, i32 %757) #12
  br label %759

759:                                              ; preds = %737, %754
  %760 = phi i32 [ %758, %754 ], [ 0, %737 ]
  %761 = icmp eq i32* %746, %749
  br i1 %761, label %769, label %762

762:                                              ; preds = %759, %766
  %763 = phi i32* [ %767, %766 ], [ %746, %759 ]
  %764 = load i32, i32* %763, align 4
  %765 = icmp eq i32 %764, %760
  br i1 %765, label %769, label %766

766:                                              ; preds = %762
  %767 = getelementptr inbounds i32, i32* %763, i64 1
  %768 = icmp eq i32* %767, %749
  br i1 %768, label %769, label %762

769:                                              ; preds = %762, %766, %759
  %770 = phi i32* [ %746, %759 ], [ %749, %766 ], [ %763, %762 ]
  %771 = getelementptr inbounds i32, i32* %770, i64 1
  %772 = bitcast %"struct.std::__1::__hash_node_base.867"* %747 to i64*
  %773 = load i64, i64* %772, align 8
  %774 = ptrtoint i32* %771 to i64
  %775 = sub i64 %773, %774
  %776 = ashr exact i64 %775, 2
  %777 = icmp eq i64 %775, 0
  br i1 %777, label %781, label %778

778:                                              ; preds = %769
  %779 = bitcast i32* %770 to i8*
  %780 = bitcast i32* %771 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %779, i8* align 4 %780, i64 %775, i1 false) #12
  br label %781

781:                                              ; preds = %769, %778
  %782 = getelementptr inbounds i32, i32* %770, i64 %776
  store i32* %782, i32** %748, align 8
  %783 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %784 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %783, i64 0, i32 11
  %785 = load i32, i32* %784, align 8
  %786 = and i32 %785, 64
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %955, label %788

788:                                              ; preds = %781
  %789 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %47, align 8
  %790 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %783, %"class.spvtools::opt::Function"* %789) #12
  %791 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %86, align 8
  %792 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %791, i64 0, i32 4
  %793 = load i8, i8* %792, align 1, !range !2
  %794 = icmp eq i8 %793, 0
  br i1 %794, label %800, label %795

795:                                              ; preds = %788
  %796 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %791, i64 0, i32 3
  %797 = load i8, i8* %796, align 4, !range !2
  %798 = zext i8 %797 to i32
  %799 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %791, i32 %798) #12
  br label %800

800:                                              ; preds = %788, %795
  %801 = phi i32 [ %799, %795 ], [ 0, %788 ]
  %802 = zext i32 %801 to i64
  %803 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %790, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %804 = load i64, i64* %803, align 8
  %805 = icmp eq i64 %804, 0
  br i1 %805, label %854, label %806

806:                                              ; preds = %800
  %807 = call i64 @llvm.ctpop.i64(i64 %804) #12, !range !3
  %808 = icmp ugt i64 %807, 1
  br i1 %808, label %812, label %809

809:                                              ; preds = %806
  %810 = add i64 %804, 4294967295
  %811 = and i64 %810, %802
  br label %816

812:                                              ; preds = %806
  %813 = icmp ugt i64 %804, %802
  br i1 %813, label %816, label %814

814:                                              ; preds = %812
  %815 = urem i64 %802, %804
  br label %816

816:                                              ; preds = %814, %812, %809
  %817 = phi i64 [ %811, %809 ], [ %815, %814 ], [ %802, %812 ]
  %818 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %790, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %818, align 8
  %820 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %819, i64 %817
  %821 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %820, align 8
  %822 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %821, null
  br i1 %822, label %854, label %823

823:                                              ; preds = %816
  %824 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %821, i64 0, i32 0
  %825 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %824, align 8
  %826 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %825, null
  br i1 %826, label %854, label %827

827:                                              ; preds = %823
  %828 = add i64 %804, -1
  br label %829

829:                                              ; preds = %850, %827
  %830 = phi %"struct.std::__1::__hash_node_base.1056"* [ %825, %827 ], [ %852, %850 ]
  %831 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %830, i64 1
  %832 = bitcast %"struct.std::__1::__hash_node_base.1056"* %831 to i64*
  %833 = load i64, i64* %832, align 8
  %834 = icmp eq i64 %833, %802
  br i1 %834, label %845, label %835

835:                                              ; preds = %829
  br i1 %808, label %838, label %836

836:                                              ; preds = %835
  %837 = and i64 %833, %828
  br label %842

838:                                              ; preds = %835
  %839 = icmp ult i64 %833, %804
  br i1 %839, label %842, label %840

840:                                              ; preds = %838
  %841 = urem i64 %833, %804
  br label %842

842:                                              ; preds = %840, %838, %836
  %843 = phi i64 [ %837, %836 ], [ %841, %840 ], [ %833, %838 ]
  %844 = icmp eq i64 %843, %817
  br i1 %844, label %850, label %854

845:                                              ; preds = %829
  %846 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %830, i64 2
  %847 = bitcast %"struct.std::__1::__hash_node_base.1056"* %846 to i32*
  %848 = load i32, i32* %847, align 4
  %849 = icmp eq i32 %848, %801
  br i1 %849, label %856, label %850

850:                                              ; preds = %845, %842
  %851 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %830, i64 0, i32 0
  %852 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %851, align 8
  %853 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %852, null
  br i1 %853, label %854, label %829

854:                                              ; preds = %850, %842, %816, %800, %823
  %855 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %855)
  store i32 %56, i32* %21, align 4
  br label %869

856:                                              ; preds = %845
  %857 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %830, i64 3
  %858 = bitcast %"struct.std::__1::__hash_node_base.1056"* %857 to %"class.spvtools::opt::Loop"**
  %859 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %858, align 8
  %860 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %860)
  store i32 %56, i32* %21, align 4
  %861 = icmp eq %"class.spvtools::opt::Loop"* %859, null
  br i1 %861, label %869, label %862

862:                                              ; preds = %856, %862
  %863 = phi %"class.spvtools::opt::Loop"* [ %867, %862 ], [ %859, %856 ]
  %864 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %863, i64 0, i32 8, i32 0
  %865 = call { %"struct.std::__1::__hash_node_base.1034"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1030"* %864, i32* nonnull dereferenceable(4) %21, i32* nonnull dereferenceable(4) %21) #12
  %866 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %863, i64 0, i32 6
  %867 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %866, align 8
  %868 = icmp eq %"class.spvtools::opt::Loop"* %867, null
  br i1 %868, label %869, label %862

869:                                              ; preds = %862, %854, %856
  %870 = phi i1 [ true, %854 ], [ true, %856 ], [ false, %862 ]
  %871 = phi i8* [ %855, %854 ], [ %860, %856 ], [ %860, %862 ]
  %872 = phi %"class.spvtools::opt::Loop"* [ null, %854 ], [ null, %856 ], [ %859, %862 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %871)
  %873 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %872, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* %228, %"class.spvtools::opt::BasicBlock"** %873, align 8
  %874 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %874)
  store i32 %56, i32* %24, align 4
  %875 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %790, i64 0, i32 2, i32 0
  %876 = bitcast %"class.std::__1::tuple"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %876) #12
  %877 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0
  store i32* %24, i32** %877, align 8
  %878 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %878) #12
  %879 = call { %"struct.std::__1::__hash_node_base.1056"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1052"* %875, i32* nonnull dereferenceable(4) %24, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %22, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %23) #12
  %880 = extractvalue { %"struct.std::__1::__hash_node_base.1056"*, i8 } %879, 0
  %881 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %880, i64 3
  %882 = bitcast %"struct.std::__1::__hash_node_base.1056"* %881 to %"class.spvtools::opt::Loop"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %878) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %876) #12
  store %"class.spvtools::opt::Loop"* %872, %"class.spvtools::opt::Loop"** %882, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %874)
  %883 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %86, align 8
  %884 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %883, i64 0, i32 4
  %885 = load i8, i8* %884, align 1, !range !2
  %886 = icmp eq i8 %885, 0
  br i1 %886, label %892, label %887

887:                                              ; preds = %869
  %888 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %883, i64 0, i32 3
  %889 = load i8, i8* %888, align 4, !range !2
  %890 = zext i8 %889 to i32
  %891 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %883, i32 %890) #12
  br label %892

892:                                              ; preds = %869, %887
  %893 = phi i32 [ %891, %887 ], [ 0, %869 ]
  %894 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %894)
  store i32 %893, i32* %25, align 4
  br i1 %870, label %902, label %895

895:                                              ; preds = %892, %895
  %896 = phi %"class.spvtools::opt::Loop"* [ %900, %895 ], [ %872, %892 ]
  %897 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %896, i64 0, i32 8, i32 0
  %898 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.1030"* %897, i32* nonnull dereferenceable(4) %25) #12
  %899 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %896, i64 0, i32 6
  %900 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %899, align 8
  %901 = icmp eq %"class.spvtools::opt::Loop"* %900, null
  br i1 %901, label %902, label %895

902:                                              ; preds = %895, %892
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %894)
  call void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %872, %"class.spvtools::opt::BasicBlock"* %1) #12
  %903 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %872, i64 0, i32 6
  %904 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %903, align 8
  %905 = icmp eq %"class.spvtools::opt::Loop"* %904, null
  %906 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %86, align 8
  %907 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %906, i64 0, i32 4
  %908 = load i8, i8* %907, align 1, !range !2
  %909 = icmp eq i8 %908, 0
  br i1 %909, label %915, label %910

910:                                              ; preds = %902
  %911 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %906, i64 0, i32 3
  %912 = load i8, i8* %911, align 4, !range !2
  %913 = zext i8 %912 to i32
  %914 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %906, i32 %913) #12
  br label %915

915:                                              ; preds = %902, %910
  %916 = phi i32 [ %914, %910 ], [ 0, %902 ]
  br i1 %905, label %946, label %917

917:                                              ; preds = %915
  %918 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %918)
  store i32 %916, i32* %26, align 4
  br label %919

919:                                              ; preds = %917, %919
  %920 = phi %"class.spvtools::opt::Loop"* [ %924, %919 ], [ %904, %917 ]
  %921 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %920, i64 0, i32 8, i32 0
  %922 = call { %"struct.std::__1::__hash_node_base.1034"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1030"* %921, i32* nonnull dereferenceable(4) %26, i32* nonnull dereferenceable(4) %26) #12
  %923 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %920, i64 0, i32 6
  %924 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %923, align 8
  %925 = icmp eq %"class.spvtools::opt::Loop"* %924, null
  br i1 %925, label %926, label %919

926:                                              ; preds = %919
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %918)
  %927 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %86, align 8
  %928 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %927, i64 0, i32 4
  %929 = load i8, i8* %928, align 1, !range !2
  %930 = icmp eq i8 %929, 0
  br i1 %930, label %936, label %931

931:                                              ; preds = %926
  %932 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %927, i64 0, i32 3
  %933 = load i8, i8* %932, align 4, !range !2
  %934 = zext i8 %933 to i32
  %935 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %927, i32 %934) #12
  br label %936

936:                                              ; preds = %926, %931
  %937 = phi i32 [ %935, %931 ], [ 0, %926 ]
  %938 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %938)
  store i32 %937, i32* %29, align 4
  %939 = bitcast %"class.std::__1::tuple"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %939) #12
  %940 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %27, i64 0, i32 0, i32 0, i32 0
  store i32* %29, i32** %940, align 8
  %941 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %28, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %941) #12
  %942 = call { %"struct.std::__1::__hash_node_base.1056"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1052"* %875, i32* nonnull dereferenceable(4) %29, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %27, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %28) #12
  %943 = extractvalue { %"struct.std::__1::__hash_node_base.1056"*, i8 } %942, 0
  %944 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %943, i64 3
  %945 = bitcast %"struct.std::__1::__hash_node_base.1056"* %944 to %"class.spvtools::opt::Loop"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %941) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %939) #12
  store %"class.spvtools::opt::Loop"* %904, %"class.spvtools::opt::Loop"** %945, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %938)
  br label %955

946:                                              ; preds = %915
  %947 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %947)
  store i32 %916, i32* %32, align 4
  %948 = bitcast %"class.std::__1::tuple"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %948) #12
  %949 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %30, i64 0, i32 0, i32 0, i32 0
  store i32* %32, i32** %949, align 8
  %950 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %31, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %950) #12
  %951 = call { %"struct.std::__1::__hash_node_base.1056"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1052"* %875, i32* nonnull dereferenceable(4) %32, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %30, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %31) #12
  %952 = extractvalue { %"struct.std::__1::__hash_node_base.1056"*, i8 } %951, 0
  %953 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %952, i64 3
  %954 = bitcast %"struct.std::__1::__hash_node_base.1056"* %953 to %"class.spvtools::opt::Loop"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %950) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %948) #12
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %954, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %947)
  br label %955

955:                                              ; preds = %781, %64, %58, %946, %936
  %956 = phi %"class.spvtools::opt::BasicBlock"* [ %228, %936 ], [ %228, %946 ], [ %228, %781 ], [ null, %58 ], [ null, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  ret %"class.spvtools::opt::BasicBlock"* %956
}

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10BasicBlock15SplitBasicBlockEPNS0_9IRContextEjNS0_15InstructionList8iteratorE(%"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::IRContext"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJRPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NSA_14default_deleteISC_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::initializer_list"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector.487", align 8
  %7 = tail call i8* @_Znwm(i64 112) #13
  %8 = bitcast i8* %7 to %"class.spvtools::opt::Instruction"*
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %0, align 8
  %10 = load i32, i32* %1, align 4
  %11 = load i32, i32* %2, align 4
  %12 = load i32, i32* %3, align 4
  %13 = bitcast %"class.std::__1::vector.487"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 0
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #12
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %5
  %20 = icmp ugt i64 %17, 384307168202282325
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.487"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #14
  unreachable

23:                                               ; preds = %19
  %24 = mul i64 %17, 48
  %25 = tail call i8* @_Znwm(i64 %24) #13
  %26 = bitcast i8* %25 to %"struct.spvtools::opt::Operand"*
  %27 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"struct.spvtools::opt::Operand"** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector.487"* %6 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %26, i64 %17
  %31 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %30, %"struct.spvtools::opt::Operand"** %31, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 %17
  br label %33

33:                                               ; preds = %33, %23
  %34 = phi %"struct.spvtools::opt::Operand"* [ %50, %33 ], [ %26, %23 ]
  %35 = phi %"struct.spvtools::opt::Operand"* [ %49, %33 ], [ %15, %23 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %39, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 1
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 3, i64 0
  %45 = bitcast i32** %43 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %44, %"struct.std::__1::aligned_storage<4, 4>::type"** %45, align 8
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr.489"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %39, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %40) #12
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 1
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = icmp eq %"struct.spvtools::opt::Operand"* %49, %32
  br i1 %51, label %52, label %33

52:                                               ; preds = %33
  %53 = bitcast %"struct.spvtools::opt::Operand"** %27 to i64*
  %54 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  store i64 %54, i64* %53, align 8
  br label %55

55:                                               ; preds = %5, %52
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %8, %"class.spvtools::opt::IRContext"* %9, i32 %10, i32 %11, i32 %12, %"class.std::__1::vector.487"* nonnull dereferenceable(24) %6) #12
  %56 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %6, i64 0, i32 0, i32 0
  %57 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %56, align 8
  %58 = icmp eq %"struct.spvtools::opt::Operand"* %57, null
  br i1 %58, label %89, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.spvtools::opt::Operand"* %57 to i8*
  %61 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %6, i64 0, i32 0, i32 1
  %62 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %61, align 8
  %63 = icmp eq %"struct.spvtools::opt::Operand"* %62, %57
  br i1 %63, label %87, label %64

64:                                               ; preds = %59, %82
  %65 = phi %"struct.spvtools::opt::Operand"* [ %66, %82 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %68, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %68, align 8
  %70 = icmp eq %"class.std::__1::vector.324"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %69, i64 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint i32* %73 to i64
  %77 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %69, i64 0, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast i32* %73 to i8*
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %75, %71
  %81 = bitcast %"class.std::__1::vector.324"* %69 to i8*
  call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %80, %64
  %83 = icmp eq %"struct.spvtools::opt::Operand"* %66, %57
  br i1 %83, label %84, label %64

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector.487"* %6 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %59
  %88 = phi i8* [ %86, %84 ], [ %60, %59 ]
  store %"struct.spvtools::opt::Operand"* %57, %"struct.spvtools::opt::Operand"** %61, align 8
  call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %55, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  ret %"class.spvtools::opt::Instruction"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %3, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.324"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.324"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

declare void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1013"* dereferenceable(32)) local_unnamed_addr #3

declare %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #3

declare void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #12
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #12
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #12
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #12
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #12
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #12
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.499", %"class.std::__1::vector.499"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #12
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.499"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %38, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.324"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.324"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.487"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #13
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #12
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.891"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.887"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1091"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.891"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.891"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.891"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.891"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.891"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #13, !noalias !30
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !30
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !30
  store i32 %62, i32* %61, align 8, !noalias !30
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !30
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !30
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.891"**
  store %"struct.std::__1::__hash_node_base.891"* null, %"struct.std::__1::__hash_node_base.891"** %67, align 8, !noalias !30
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #12
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.887"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #12, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.891"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.891"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.891"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.891"* %110, %"struct.std::__1::__hash_node_base.891"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.891"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.891"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #12, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.891"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.891"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.891"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.891"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.891"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.891"*, i8 } undef, %"struct.std::__1::__hash_node_base.891"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.891"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.891"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.887"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.887"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.887"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.887"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.887"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.891"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.891"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.893", %"class.std::__1::__bucket_list_deallocator.893"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.891"* null, %"struct.std::__1::__hash_node_base.891"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !33

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.891"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.891"* null, %"struct.std::__1::__hash_node_base.891"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.891"* null, %"struct.std::__1::__hash_node_base.891"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.891"* null, %"struct.std::__1::__hash_node_base.891"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.891"* null, %"struct.std::__1::__hash_node_base.891"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.891"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.891"* %36, %"struct.std::__1::__hash_node_base.891"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.891"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.891"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.891"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.891"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.891"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.891"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.891"* %82, %"struct.std::__1::__hash_node_base.891"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.891"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.891"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.891"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.891"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.891"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.891"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.891"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.891"* %80, %"struct.std::__1::__hash_node_base.891"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.891"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.891"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.887", %"class.std::__1::__hash_table.887"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.891"** null, %"struct.std::__1::__hash_node_base.891"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.891"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.891"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.893", %"class.std::__1::__bucket_list_deallocator.893"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS7_10BasicBlockEEUljE_S2_EEEEvPKNS0_16__policy_storageEj(%"union.std::__1::__function::__policy_storage"*, i32) #0 comdat align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.anon.1110*
  call void @_ZNSt3__128__invoke_void_return_wrapperIvLb1EE6__callIJRZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS4_10BasicBlockEEUljE_jEEEvDpOT_(%class.anon.1110* dereferenceable(16) %4, i32* nonnull dereferenceable(4) %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__128__invoke_void_return_wrapperIvLb1EE6__callIJRZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS4_10BasicBlockEEUljE_jEEEvDpOT_(%class.anon.1110* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = getelementptr inbounds %class.anon.1110, %class.anon.1110* %0, i64 0, i32 1
  %5 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %4, align 8
  %6 = getelementptr inbounds %class.anon.1110, %class.anon.1110* %0, i64 0, i32 0
  %7 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = zext i8 %15 to i32
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 %16) #12
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ 0, %2 ]
  %20 = zext i32 %3 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %102, label %24

24:                                               ; preds = %18
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, 4294967295
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ugt i64 %22, %20
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.867"* %39, null
  br i1 %40, label %102, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.867"* %43, null
  br i1 %44, label %102, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.867"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.867"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %102

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.867"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %3
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.867"* %70, null
  br i1 %71, label %102, label %47

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %48, i64 3
  %74 = bitcast %"struct.std::__1::__hash_node_base.867"* %73 to i32**
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %48, i64 4
  %77 = bitcast %"struct.std::__1::__hash_node_base.867"* %76 to i32**
  %78 = load i32*, i32** %77, align 8
  %79 = icmp eq i32* %75, %78
  %80 = ptrtoint i32* %78 to i64
  br i1 %79, label %88, label %81

81:                                               ; preds = %72, %85
  %82 = phi i32* [ %86, %85 ], [ %75, %72 ]
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %19
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds i32, i32* %82, i64 1
  %87 = icmp eq i32* %86, %78
  br i1 %87, label %102, label %81

88:                                               ; preds = %81, %72
  %89 = phi i32* [ %75, %72 ], [ %82, %81 ]
  %90 = icmp eq i32* %89, %78
  br i1 %90, label %102, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds i32, i32* %89, i64 1
  %93 = ptrtoint i32* %92 to i64
  %94 = sub i64 %80, %93
  %95 = ashr exact i64 %94, 2
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %91
  %98 = bitcast i32* %89 to i8*
  %99 = bitcast i32* %92 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %94, i1 false) #12
  br label %100

100:                                              ; preds = %97, %91
  %101 = getelementptr inbounds i32, i32* %89, i64 %95
  store i32* %101, i32** %77, align 8
  br label %102

102:                                              ; preds = %60, %68, %85, %18, %34, %41, %88, %100
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1122"* dereferenceable(8), %"class.std::__1::tuple.1091"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.115"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.115"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.115"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.115"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.115"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #13, !noalias !34
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1122"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !34
  %75 = load i64, i64* %74, align 8, !noalias !34
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !34
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !34
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !34
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.115"**
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %81, align 8, !noalias !34
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #12
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.111"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #12, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.115"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.115"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.115"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.115"* %124, %"struct.std::__1::__hash_node_base.115"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.115"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.115"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #12, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.115"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.115"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.115"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.115"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.115"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } undef, %"struct.std::__1::__hash_node_base.115"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.115"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.111"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.111"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.111"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.111"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.111"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.115"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.115"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.117", %"class.std::__1::__bucket_list_deallocator.117"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !37

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.115"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.115"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.115"* %36, %"struct.std::__1::__hash_node_base.115"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.115"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.115"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.115"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.115"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.115"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.115"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.115"* %82, %"struct.std::__1::__hash_node_base.115"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.115"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.115"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.115"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.115"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.115"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.115"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.115"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.115"* %80, %"struct.std::__1::__hash_node_base.115"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.115"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.115"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.115"** null, %"struct.std::__1::__hash_node_base.115"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.115"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.115"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.117", %"class.std::__1::__bucket_list_deallocator.117"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1004"**
  %4 = load %"class.std::__1::function.1004"*, %"class.std::__1::function.1004"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1004"**
  %4 = load %"class.std::__1::function.1004"*, %"class.std::__1::function.1004"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.324"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.489", %"class.std::__1::unique_ptr.489"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %8, align 8
  store %"class.std::__1::vector.324"* %4, %"class.std::__1::vector.324"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.324"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.324"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.489", %"class.std::__1::unique_ptr.489"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %23, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.324"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.324"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %3, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.324"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.324"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1034"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1030"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.1034"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1034"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1034"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #13, !noalias !38
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !38
  store i32 %58, i32* %57, align 4, !noalias !38
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !38
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.1034"**
  store %"struct.std::__1::__hash_node_base.1034"* null, %"struct.std::__1::__hash_node_base.1034"** %61, align 8, !noalias !38
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #12
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.1030"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #12, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.1034"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.1034"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.1034"* %104, %"struct.std::__1::__hash_node_base.1034"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.1034"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #12, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.1034"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.1034"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.1034"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.1034"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.1034"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.1034"*, i8 } undef, %"struct.std::__1::__hash_node_base.1034"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.1034"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.1034"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.1030"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.1030"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.1030"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.1030"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1030"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1034"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1034"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1036", %"class.std::__1::__bucket_list_deallocator.1036"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1034"* null, %"struct.std::__1::__hash_node_base.1034"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !41

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1034"* null, %"struct.std::__1::__hash_node_base.1034"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1034"* null, %"struct.std::__1::__hash_node_base.1034"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1034"* null, %"struct.std::__1::__hash_node_base.1034"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1034"* null, %"struct.std::__1::__hash_node_base.1034"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1034"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1034"* %36, %"struct.std::__1::__hash_node_base.1034"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1034"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1034"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1034"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1034"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1034"* %82, %"struct.std::__1::__hash_node_base.1034"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1034"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1034"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1034"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1034"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1034"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1034"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1034"* %80, %"struct.std::__1::__hash_node_base.1034"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1034"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1034"** null, %"struct.std::__1::__hash_node_base.1034"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1034"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1034"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1036", %"class.std::__1::__bucket_list_deallocator.1036"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1056"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1052"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1091"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.1056"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1056"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.1056"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #13, !noalias !42
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !42
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !42
  store i32 %62, i32* %61, align 8, !noalias !42
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %64, align 8, !noalias !42
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !42
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1056"**
  store %"struct.std::__1::__hash_node_base.1056"* null, %"struct.std::__1::__hash_node_base.1056"** %67, align 8, !noalias !42
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #12
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1052"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #12, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.1056"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.1056"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.1056"* %110, %"struct.std::__1::__hash_node_base.1056"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.1056"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #12, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.1056"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.1056"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.1056"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1056"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.1056"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.1056"*, i8 } undef, %"struct.std::__1::__hash_node_base.1056"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.1056"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.1056"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1052"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1052"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1052"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1052"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1052"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1056"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1056"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1058", %"class.std::__1::__bucket_list_deallocator.1058"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1056"* null, %"struct.std::__1::__hash_node_base.1056"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !45

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1056"* null, %"struct.std::__1::__hash_node_base.1056"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1056"* null, %"struct.std::__1::__hash_node_base.1056"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1056"* null, %"struct.std::__1::__hash_node_base.1056"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1056"* null, %"struct.std::__1::__hash_node_base.1056"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1056"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1056"* %36, %"struct.std::__1::__hash_node_base.1056"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1056"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1056"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1056"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1056"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1056"* %82, %"struct.std::__1::__hash_node_base.1056"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1056"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1056"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1056"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1056"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1056"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1056"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1056"* %80, %"struct.std::__1::__hash_node_base.1056"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1056"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1056", %"struct.std::__1::__hash_node_base.1056"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1056"*, %"struct.std::__1::__hash_node_base.1056"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1056"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1052", %"class.std::__1::__hash_table.1052"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1056"**, %"struct.std::__1::__hash_node_base.1056"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1056"** null, %"struct.std::__1::__hash_node_base.1056"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1056"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1056"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1058", %"class.std::__1::__bucket_list_deallocator.1058"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.1030"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1162", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.1034"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1034"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1034"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1162"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1162"* nonnull sret %3, %"class.std::__1::__hash_table.1030"* %0, %"struct.std::__1::__hash_node_base.1034"* nonnull %33) #12
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1162", %"class.std::__1::unique_ptr.1162"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1161"*, %"struct.std::__1::__hash_node.1161"** %59, align 8
  store %"struct.std::__1::__hash_node.1161"* null, %"struct.std::__1::__hash_node.1161"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1161"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.1161"* %60 to i8*
  call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1162"* noalias sret, %"class.std::__1::__hash_table.1030"*, %"struct.std::__1::__hash_node_base.1034"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.1034"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.1034"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.1041", %"class.std::__1::__compressed_pair.1041"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1034"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.1034"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.1034"* null, %"struct.std::__1::__hash_node_base.1034"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.1034"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.1034"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.1034"* %25, %"struct.std::__1::__hash_node_base.1034"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.1034"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.1034"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.1034"* null, %"struct.std::__1::__hash_node_base.1034"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.1034"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1162"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1162", %"class.std::__1::unique_ptr.1162"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.1044"** %98 to %"class.std::__1::__compressed_pair.1041"**
  store %"class.std::__1::__compressed_pair.1041"* %30, %"class.std::__1::__compressed_pair.1041"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1162", %"class.std::__1::unique_ptr.1162"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.867"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.863"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1091"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.867"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.867"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.867"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.867"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.867"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #13, !noalias !46
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !46
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !46
  store i32 %62, i32* %61, align 8, !noalias !46
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #12, !noalias !46
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !46
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.867"**
  store %"struct.std::__1::__hash_node_base.867"* null, %"struct.std::__1::__hash_node_base.867"** %66, align 8, !noalias !46
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !3
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #12
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.863"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #12, !range !3
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.867"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.867"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.867"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.867"* %109, %"struct.std::__1::__hash_node_base.867"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.867"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.867"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #12, !range !3
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.867"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.867"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.867"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.867"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.867"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.867"*, i8 } undef, %"struct.std::__1::__hash_node_base.867"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.867"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.867"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.863"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.863"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.863"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.863"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.863"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.867"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.867"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.869", %"class.std::__1::__bucket_list_deallocator.869"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.867"* null, %"struct.std::__1::__hash_node_base.867"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !49

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.867"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.867"* null, %"struct.std::__1::__hash_node_base.867"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.867"* null, %"struct.std::__1::__hash_node_base.867"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.867"* null, %"struct.std::__1::__hash_node_base.867"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.867"* null, %"struct.std::__1::__hash_node_base.867"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.867"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.867"* %36, %"struct.std::__1::__hash_node_base.867"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.867"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.867"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.867"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.867"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.867"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.867"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.867"* %82, %"struct.std::__1::__hash_node_base.867"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.867"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.867"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.867"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.867"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.867"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.867"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.867"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.867"* %80, %"struct.std::__1::__hash_node_base.867"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.867"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.867"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.867"** null, %"struct.std::__1::__hash_node_base.867"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.867"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.867"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.869", %"class.std::__1::__bucket_list_deallocator.869"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG8AddEdgesEPNS7_10BasicBlockEE3$_0S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %7 = bitcast [8 x i8]* %6 to %"class.spvtools::opt::CFG"**
  %8 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %7, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  store i32 %1, i32* %5, align 4
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %8, i64 0, i32 4, i32 0
  %13 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #12
  %16 = call { %"struct.std::__1::__hash_node_base.867"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.863"* %12, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %17 = extractvalue { %"struct.std::__1::__hash_node_base.867"*, i8 } %16, 0
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %17, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %17, i64 4
  %20 = bitcast %"struct.std::__1::__hash_node_base.867"* %19 to i32**
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %17, i64 5
  %23 = bitcast %"struct.std::__1::__hash_node_base.867"* %22 to i32**
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %21, %24
  %26 = ptrtoint i32* %24 to i64
  br i1 %25, label %31, label %27

27:                                               ; preds = %2
  store i32 %10, i32* %21, align 4
  %28 = getelementptr inbounds i32, i32* %21, i64 1
  %29 = ptrtoint i32* %28 to i64
  %30 = bitcast %"struct.std::__1::__hash_node_base.867"* %19 to i64*
  store i64 %29, i64* %30, align 8
  br label %87

31:                                               ; preds = %2
  %32 = ptrtoint i32* %21 to i64
  %33 = bitcast %"struct.std::__1::__hash_node_base.867"* %19 to i64*
  %34 = bitcast %"struct.std::__1::__hash_node_base.867"* %18 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %32, %35
  %37 = ashr exact i64 %36, 2
  %38 = add nsw i64 %37, 1
  %39 = icmp ugt i64 %38, 4611686018427387903
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = bitcast %"struct.std::__1::__hash_node_base.867"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #14
  unreachable

42:                                               ; preds = %31
  %43 = bitcast %"struct.std::__1::__hash_node_base.867"* %22 to i64*
  %44 = sub i64 %26, %35
  %45 = ashr exact i64 %44, 2
  %46 = icmp ult i64 %45, 2305843009213693951
  br i1 %46, label %47, label %55

47:                                               ; preds = %42
  %48 = ashr exact i64 %44, 1
  %49 = icmp ult i64 %48, %38
  %50 = select i1 %49, i64 %38, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 4611686018427387903
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  call void @abort() #14
  unreachable

55:                                               ; preds = %52, %42
  %56 = phi i64 [ %50, %52 ], [ 4611686018427387903, %42 ]
  %57 = shl i64 %56, 2
  %58 = call i8* @_Znwm(i64 %57) #13
  %59 = bitcast i8* %58 to i32*
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi i32* [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds i32, i32* %62, i64 %37
  %64 = getelementptr inbounds i32, i32* %62, i64 %61
  %65 = ptrtoint i32* %64 to i64
  store i32 %10, i32* %63, align 4
  %66 = getelementptr inbounds i32, i32* %63, i64 1
  %67 = ptrtoint i32* %66 to i64
  %68 = bitcast %"struct.std::__1::__hash_node_base.867"* %18 to i32**
  %69 = load i32*, i32** %68, align 8
  %70 = load i64, i64* %33, align 8
  %71 = ptrtoint i32* %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 2
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds i32, i32* %63, i64 %74
  %76 = ptrtoint i32* %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %60
  %79 = bitcast i32* %75 to i8*
  %80 = bitcast i32* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 %72, i1 false) #12
  %81 = load i32*, i32** %68, align 8
  br label %82

82:                                               ; preds = %78, %60
  %83 = phi i32* [ %69, %60 ], [ %81, %78 ]
  store i64 %76, i64* %34, align 8
  store i64 %67, i64* %33, align 8
  store i64 %65, i64* %43, align 8
  %84 = icmp eq i32* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast i32* %83 to i8*
  call void @_ZdlPv(i8* %86) #13
  br label %87

87:                                               ; preds = %27, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG22RemoveNonExistingEdgesEjE3$_1S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #9 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 1, i8* %9, align 1
  br label %10

10:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1034"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1030"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.1034"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1034"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1034"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #13, !noalias !50
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !50
  store i32 %58, i32* %57, align 4, !noalias !50
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !50
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.1034"**
  store %"struct.std::__1::__hash_node_base.1034"* null, %"struct.std::__1::__hash_node_base.1034"** %61, align 8, !noalias !50
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #12
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.1030"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #12, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.1030", %"class.std::__1::__hash_table.1030"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.1034"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.1034"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.1034"* %104, %"struct.std::__1::__hash_node_base.1034"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.1034"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034", %"struct.std::__1::__hash_node_base.1034"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.1034"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #12, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.1034"**, %"struct.std::__1::__hash_node_base.1034"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1034"*, %"struct.std::__1::__hash_node_base.1034"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.1034"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.1034"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.1034"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.1034"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.1034"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.1034"*, i8 } undef, %"struct.std::__1::__hash_node_base.1034"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.1034"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.1034"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.std::__1::vector.936"* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3opt10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNS4_3CFG22ComputeStructuredOrderEPNS4_8FunctionES6_PNS_4listIS6_S8_EEE3$_2SE_EEEESB_PKNS0_16__policy_storageESD_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1208", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::BasicBlock"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::BasicBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"class.spvtools::opt::BasicBlock"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::CFG"**
  %10 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %10, i64 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::tuple.1208"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.std::__1::tuple.1208", %"class.std::__1::tuple.1208"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %5, %"class.spvtools::opt::BasicBlock"*** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #12
  %15 = call { %"struct.std::__1::__hash_node_base.839"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.835"* %11, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1208"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %16 = extractvalue { %"struct.std::__1::__hash_node_base.839"*, i8 } %15, 0
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %16, i64 3
  %18 = bitcast %"struct.std::__1::__hash_node_base.839"* %17 to %"class.std::__1::vector.936"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret %"class.std::__1::vector.936"* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.839"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.835"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1208"* dereferenceable(8), %"class.std::__1::tuple.1091"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.839"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.839"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.839"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.839"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.839"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %159, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 48) #13, !noalias !53
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1208"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !53
  %75 = load i64, i64* %74, align 8, !noalias !53
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !53
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #12, !noalias !53
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %20, i64* %79, align 8, !noalias !53
  %80 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.839"**
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %80, align 8, !noalias !53
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %22 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %23, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %69
  %92 = shl i64 %22, 1
  %93 = icmp ult i64 %22, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #12
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.835"* %0, i64 %103)
  %104 = load i64, i64* %21, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #12, !range !3
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %20
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %20, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %20, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %69
  %115 = phi i64 [ %22, %69 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %70, %69 ], [ %109, %107 ], [ %20, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.839"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.839"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %71 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.839"* %123 to i8**
  store i8* %71, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.839"* %123, %"struct.std::__1::__hash_node_base.839"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.839"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.839"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #12, !range !3
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.839"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.839"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %71 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.839"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %71, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.839"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %64, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %64 ]
  %161 = phi %"struct.std::__1::__hash_node_base.839"* [ %156, %155 ], [ %47, %64 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.839"*, i8 } undef, %"struct.std::__1::__hash_node_base.839"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.839"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.839"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.835"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.835"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.835"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.835"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.835"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.839"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.839"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.841", %"class.std::__1::__bucket_list_deallocator.841"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !56

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.839"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.839"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.839"* %36, %"struct.std::__1::__hash_node_base.839"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.839"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.839"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.839"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.839"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.839"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.839"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.839"* %82, %"struct.std::__1::__hash_node_base.839"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.839"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.839"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.839"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.839"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.839"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.839"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.839"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.839"* %80, %"struct.std::__1::__hash_node_base.839"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.839"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.839"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.839"** null, %"struct.std::__1::__hash_node_base.839"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.839"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.839"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.841", %"class.std::__1::__bucket_list_deallocator.841"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG22ComputeStructuredOrderEPNS3_8FunctionEPS4_PNS_4listISE_NS_9allocatorISE_EEEEE3$_3S7_EEEEvPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture, %"class.spvtools::opt::BasicBlock"* nocapture) #10 align 2 {
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG22ComputeStructuredOrderEPNS3_8FunctionEPS4_PNS_4listISE_NS_9allocatorISE_EEEEE3$_4S7_EEEEvPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) #11 align 2 {
  %3 = ptrtoint %"class.spvtools::opt::BasicBlock"* %1 to i64
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::list"***
  %5 = load %"class.std::__1::list"**, %"class.std::__1::list"*** %4, align 8
  %6 = load %"class.std::__1::list"*, %"class.std::__1::list"** %5, align 8
  %7 = tail call i8* @_Znwm(i64 24) #13, !noalias !57
  %8 = bitcast i8* %7 to %"struct.std::__1::__list_node_base"**
  %9 = getelementptr inbounds i8, i8* %7, i64 16
  %10 = bitcast i8* %9 to i64*
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 8
  %15 = bitcast i8* %14 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %13, %"struct.std::__1::__list_node_base"** %15, align 8
  %16 = bitcast %"struct.std::__1::__list_node_base"* %13 to i8**
  store i8* %7, i8** %16, align 8
  %17 = bitcast %"struct.std::__1::__list_node_base"** %12 to i8**
  store i8* %7, i8** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3opt10BasicBlockES6_EE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG22ComputeStructuredOrderEPNS3_8FunctionEPS4_PNS_4listISE_NS_9allocatorISE_EEEEE3$_5S7_EEEEvPKNS0_16__policy_storageES6_S6_"(%"union.std::__1::__function::__policy_storage"* nocapture, %"class.spvtools::opt::BasicBlock"* nocapture, %"class.spvtools::opt::BasicBlock"* nocapture) #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG30ForEachBlockInReversePostOrderES5_RKNS_8functionIFvS5_EEEE3$_6S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1238"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1238"*, %"class.std::__1::__function::__default_alloc_func.1238"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1238", %"class.std::__1::__function::__default_alloc_func.1238"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1238", %"class.std::__1::__function::__default_alloc_func.1238"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::BasicBlock"* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #13, !noalias !60
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 16, i1 false) #12
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = getelementptr inbounds i8, i8* %0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = bitcast i8* %3 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"struct.std::__1::__function::__policy"**
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to %"struct.std::__1::__function::__policy"**
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  store %"struct.std::__1::__function::__policy"* %12, %"struct.std::__1::__function::__policy"** %9, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 0
  %14 = load i8* (i8*)*, i8* (i8*)** %13, align 8
  %15 = icmp eq i8* (i8*)* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast i8* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i8* %14(i8* %18) #12
  %20 = bitcast i8* %2 to i8**
  store i8* %19, i8** %20, align 8
  br label %21

21:                                               ; preds = %1, %16
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEEvPv"(i8*) #0 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 24
  %3 = bitcast i8* %2 to %"struct.std::__1::__function::__policy"**
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.867"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.863"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1240"* dereferenceable(8), %"class.std::__1::tuple.1091"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.867"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.867"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.867"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.867"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.867"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #13, !noalias !65
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1240", %"class.std::__1::tuple.1240"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !65
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !65
  store i32 %62, i32* %61, align 8, !noalias !65
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #12, !noalias !65
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !65
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.867"**
  store %"struct.std::__1::__hash_node_base.867"* null, %"struct.std::__1::__hash_node_base.867"** %66, align 8, !noalias !65
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !3
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #12
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.863"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #12, !range !3
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.867"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.863", %"class.std::__1::__hash_table.863"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.867"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.867"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.867"* %109, %"struct.std::__1::__hash_node_base.867"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.867"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867", %"struct.std::__1::__hash_node_base.867"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.867"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #12, !range !3
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.867"**, %"struct.std::__1::__hash_node_base.867"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.867"*, %"struct.std::__1::__hash_node_base.867"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.867"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.867"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.867"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.867"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.867"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.867"*, i8 } undef, %"struct.std::__1::__hash_node_base.867"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.867"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.867"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.839"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.835"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1244"* dereferenceable(8), %"class.std::__1::tuple.1091"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.839"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.839"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.839"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.839"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.839"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %159, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 48) #13, !noalias !68
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1244"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !68
  %75 = load i64, i64* %74, align 8, !noalias !68
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !68
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #12, !noalias !68
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %20, i64* %79, align 8, !noalias !68
  %80 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.839"**
  store %"struct.std::__1::__hash_node_base.839"* null, %"struct.std::__1::__hash_node_base.839"** %80, align 8, !noalias !68
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %22 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %23, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %69
  %92 = shl i64 %22, 1
  %93 = icmp ult i64 %22, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #12
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.835"* %0, i64 %103)
  %104 = load i64, i64* %21, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #12, !range !3
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %20
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %20, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %20, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %69
  %115 = phi i64 [ %22, %69 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %70, %69 ], [ %109, %107 ], [ %20, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.839"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.835", %"class.std::__1::__hash_table.835"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.839"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %71 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.839"* %123 to i8**
  store i8* %71, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.839"* %123, %"struct.std::__1::__hash_node_base.839"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.839"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.839"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #12, !range !3
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.839"**, %"struct.std::__1::__hash_node_base.839"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839"*, %"struct.std::__1::__hash_node_base.839"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.839"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.839"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %71 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.839"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %71, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.839"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %64, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %64 ]
  %161 = phi %"struct.std::__1::__hash_node_base.839"* [ %156, %155 ], [ %47, %64 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.839"*, i8 } undef, %"struct.std::__1::__hash_node_base.839"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.839"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.839"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG27ComputeStructuredSuccessorsEPNS7_8FunctionEE3$_7S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1244", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %6 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %7 = bitcast [8 x i8]* %6 to %"class.spvtools::opt::CFG"**
  %8 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %7, align 8
  %9 = bitcast %"class.spvtools::opt::BasicBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.spvtools::opt::BasicBlock"** %5 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %8, i64 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::tuple.1244"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::tuple.1244", %"class.std::__1::tuple.1244"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %5, %"class.spvtools::opt::BasicBlock"*** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #12
  %17 = call { %"struct.std::__1::__hash_node_base.839"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.835"* %13, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1244"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %18 = extractvalue { %"struct.std::__1::__hash_node_base.839"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %18, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %20 = zext i32 %1 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %72, label %24

24:                                               ; preds = %2
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, 4294967295
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ugt i64 %22, %20
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.891"**, %"struct.std::__1::__hash_node_base.891"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.891"* %39, null
  br i1 %40, label %72, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.891"* %43, null
  br i1 %44, label %72, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.891"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.891"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %72

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.891"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %1
  br i1 %67, label %73, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.891"*, %"struct.std::__1::__hash_node_base.891"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.891"* %70, null
  br i1 %71, label %72, label %47

72:                                               ; preds = %68, %60, %41, %34, %2
  call void @abort() #14
  unreachable

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %48, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.891"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %18, i64 4
  %78 = bitcast %"struct.std::__1::__hash_node_base.839"* %77 to %"class.spvtools::opt::BasicBlock"***
  %79 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.839", %"struct.std::__1::__hash_node_base.839"* %18, i64 5
  %81 = bitcast %"struct.std::__1::__hash_node_base.839"* %80 to %"class.spvtools::opt::BasicBlock"***
  %82 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %81, align 8
  %83 = icmp ult %"class.spvtools::opt::BasicBlock"** %79, %82
  %84 = ptrtoint %"class.spvtools::opt::BasicBlock"** %82 to i64
  br i1 %83, label %85, label %90

85:                                               ; preds = %73
  %86 = bitcast %"class.spvtools::opt::BasicBlock"** %79 to i64*
  store i64 %76, i64* %86, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %79, i64 1
  %88 = ptrtoint %"class.spvtools::opt::BasicBlock"** %87 to i64
  %89 = bitcast %"struct.std::__1::__hash_node_base.839"* %77 to i64*
  store i64 %88, i64* %89, align 8
  br label %147

90:                                               ; preds = %73
  %91 = ptrtoint %"class.spvtools::opt::BasicBlock"** %79 to i64
  %92 = bitcast %"struct.std::__1::__hash_node_base.839"* %77 to i64*
  %93 = bitcast %"struct.std::__1::__hash_node_base.839"* %19 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %91, %94
  %96 = ashr exact i64 %95, 3
  %97 = add nsw i64 %96, 1
  %98 = icmp ugt i64 %97, 2305843009213693951
  br i1 %98, label %99, label %101

99:                                               ; preds = %90
  %100 = bitcast %"struct.std::__1::__hash_node_base.839"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %100) #14
  unreachable

101:                                              ; preds = %90
  %102 = bitcast %"struct.std::__1::__hash_node_base.839"* %80 to i64*
  %103 = sub i64 %84, %94
  %104 = ashr exact i64 %103, 3
  %105 = icmp ult i64 %104, 1152921504606846975
  br i1 %105, label %106, label %114

106:                                              ; preds = %101
  %107 = ashr exact i64 %103, 2
  %108 = icmp ult i64 %107, %97
  %109 = select i1 %108, i64 %97, i64 %107
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %106
  %112 = icmp ugt i64 %109, 2305843009213693951
  br i1 %112, label %113, label %114

113:                                              ; preds = %111
  call void @abort() #14
  unreachable

114:                                              ; preds = %111, %101
  %115 = phi i64 [ %109, %111 ], [ 2305843009213693951, %101 ]
  %116 = shl i64 %115, 3
  %117 = call i8* @_Znwm(i64 %116) #13
  %118 = bitcast i8* %117 to %"class.spvtools::opt::BasicBlock"**
  br label %119

119:                                              ; preds = %114, %106
  %120 = phi i64 [ %115, %114 ], [ 0, %106 ]
  %121 = phi %"class.spvtools::opt::BasicBlock"** [ %118, %114 ], [ null, %106 ]
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %121, i64 %96
  %123 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %121, i64 %120
  %124 = ptrtoint %"class.spvtools::opt::BasicBlock"** %123 to i64
  %125 = bitcast %"class.spvtools::opt::BasicBlock"** %122 to i64*
  store i64 %76, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %122, i64 1
  %127 = ptrtoint %"class.spvtools::opt::BasicBlock"** %126 to i64
  %128 = bitcast %"struct.std::__1::__hash_node_base.839"* %19 to %"class.spvtools::opt::BasicBlock"***
  %129 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %128, align 8
  %130 = load i64, i64* %92, align 8
  %131 = ptrtoint %"class.spvtools::opt::BasicBlock"** %129 to i64
  %132 = sub i64 %130, %131
  %133 = ashr exact i64 %132, 3
  %134 = sub nsw i64 0, %133
  %135 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %122, i64 %134
  %136 = ptrtoint %"class.spvtools::opt::BasicBlock"** %135 to i64
  %137 = icmp sgt i64 %132, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %119
  %139 = bitcast %"class.spvtools::opt::BasicBlock"** %135 to i8*
  %140 = bitcast %"class.spvtools::opt::BasicBlock"** %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 %132, i1 false) #12
  %141 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %128, align 8
  br label %142

142:                                              ; preds = %138, %119
  %143 = phi %"class.spvtools::opt::BasicBlock"** [ %129, %119 ], [ %141, %138 ]
  store i64 %136, i64* %93, align 8
  store i64 %127, i64* %92, align 8
  store i64 %124, i64* %102, align 8
  %144 = icmp eq %"class.spvtools::opt::BasicBlock"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.spvtools::opt::BasicBlock"** %143 to i8*
  call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %85, %142, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.966"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.962"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.966"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.966"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.966"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.966"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.966"* %62 to %"class.spvtools::opt::BasicBlock"**
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #13, !noalias !71
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !71
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !71
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !71
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.966"**
  store %"struct.std::__1::__hash_node_base.966"* null, %"struct.std::__1::__hash_node_base.966"** %75, align 8, !noalias !71
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #12
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.962"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #12, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.966"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.966"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.966"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.966"* %118, %"struct.std::__1::__hash_node_base.966"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.966"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.966"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #12, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.966"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.966"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.966"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.966"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.966"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.966"*, i8 } undef, %"struct.std::__1::__hash_node_base.966"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.966"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.966"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.962"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.962"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.962"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.962"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.962"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.966"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.966"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.968", %"class.std::__1::__bucket_list_deallocator.968"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.966"* null, %"struct.std::__1::__hash_node_base.966"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !74

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.966"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.966"* null, %"struct.std::__1::__hash_node_base.966"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.966"* null, %"struct.std::__1::__hash_node_base.966"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.966"* null, %"struct.std::__1::__hash_node_base.966"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.966"* null, %"struct.std::__1::__hash_node_base.966"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.966"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.966"* %36, %"struct.std::__1::__hash_node_base.966"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.966"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.966"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.966"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.966"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.966"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.966"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.966"* %82, %"struct.std::__1::__hash_node_base.966"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.966"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.966"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.966"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.966"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.966"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.966"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.966"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.966"* %80, %"struct.std::__1::__hash_node_base.966"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.966"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.966"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.962", %"class.std::__1::__hash_table.962"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.966"** null, %"struct.std::__1::__hash_node_base.966"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.966"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.966"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.968", %"class.std::__1::__bucket_list_deallocator.968"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS7_10BasicBlockEPNS_6vectorISA_NS_9allocatorISA_EEEEPNS_13unordered_setISA_NS_4hashISA_EENS_8equal_toISA_EESD_EEE3$_8S2_EEEEbPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca i32, align 4
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1263"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.1263"*, %"class.std::__1::__function::__default_alloc_func.1263"** %6, align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #12
  store i32 %1, i32* %5, align 4
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1263", %"class.std::__1::__function::__default_alloc_func.1263"* %7, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %10, i64 0, i32 5, i32 0
  %12 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #12
  %15 = call { %"struct.std::__1::__hash_node_base.891"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.887"* %11, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %16 = extractvalue { %"struct.std::__1::__hash_node_base.891"*, i8 } %15, 0
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.891", %"struct.std::__1::__hash_node_base.891"* %16, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %18 = bitcast %"struct.std::__1::__hash_node_base.891"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1263", %"class.std::__1::__function::__default_alloc_func.1263"* %7, i64 0, i32 0, i32 0
  %21 = load %"class.std::__1::unordered_set.961"**, %"class.std::__1::unordered_set.961"*** %20, align 8
  %22 = load %"class.std::__1::unordered_set.961"*, %"class.std::__1::unordered_set.961"** %21, align 8
  %23 = inttoptr i64 %19 to %"class.spvtools::opt::BasicBlock"*
  %24 = lshr i64 %19, 32
  %25 = shl i64 %19, 3
  %26 = and i64 %25, 4294967288
  %27 = add nuw nsw i64 %26, 8
  %28 = xor i64 %27, %24
  %29 = mul i64 %28, -7070675565921424023
  %30 = lshr i64 %29, 47
  %31 = xor i64 %29, %24
  %32 = xor i64 %31, %30
  %33 = mul i64 %32, -7070675565921424023
  %34 = lshr i64 %33, 47
  %35 = xor i64 %34, %33
  %36 = mul i64 %35, -7070675565921424023
  %37 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %88, label %40

40:                                               ; preds = %2
  %41 = call i64 @llvm.ctpop.i64(i64 %38) #12, !range !3
  %42 = icmp ugt i64 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = add i64 %38, -1
  %45 = and i64 %36, %44
  br label %50

46:                                               ; preds = %40
  %47 = icmp ult i64 %36, %38
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %36, %38
  br label %50

50:                                               ; preds = %48, %46, %43
  %51 = phi i64 [ %45, %43 ], [ %49, %48 ], [ %36, %46 ]
  %52 = getelementptr inbounds %"class.std::__1::unordered_set.961", %"class.std::__1::unordered_set.961"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.966"**, %"struct.std::__1::__hash_node_base.966"*** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %53, i64 %51
  %55 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.966"* %55, null
  br i1 %56, label %88, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %55, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base.966"* %59, null
  br i1 %60, label %88, label %61

61:                                               ; preds = %57
  %62 = add i64 %38, -1
  br label %63

63:                                               ; preds = %84, %61
  %64 = phi %"struct.std::__1::__hash_node_base.966"* [ %59, %61 ], [ %86, %84 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %64, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.966"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %36, %67
  br i1 %68, label %79, label %69

69:                                               ; preds = %63
  br i1 %42, label %72, label %70

70:                                               ; preds = %69
  %71 = and i64 %67, %62
  br label %76

72:                                               ; preds = %69
  %73 = icmp ult i64 %67, %38
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = urem i64 %67, %38
  br label %76

76:                                               ; preds = %74, %72, %70
  %77 = phi i64 [ %71, %70 ], [ %75, %74 ], [ %67, %72 ]
  %78 = icmp eq i64 %77, %51
  br i1 %78, label %84, label %88

79:                                               ; preds = %63
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %64, i64 2
  %81 = bitcast %"struct.std::__1::__hash_node_base.966"* %80 to %"class.spvtools::opt::BasicBlock"**
  %82 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %81, align 8
  %83 = icmp eq %"class.spvtools::opt::BasicBlock"* %82, %23
  br i1 %83, label %159, label %84

84:                                               ; preds = %79, %76
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.966", %"struct.std::__1::__hash_node_base.966"* %64, i64 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.966"*, %"struct.std::__1::__hash_node_base.966"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.966"* %86, null
  br i1 %87, label %88, label %63

88:                                               ; preds = %84, %76, %57, %50, %2
  %89 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1263", %"class.std::__1::__function::__default_alloc_func.1263"* %7, i64 0, i32 0, i32 1
  %90 = load %"class.std::__1::vector.936"*, %"class.std::__1::vector.936"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %90, i64 0, i32 0, i32 1
  %92 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %90, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %93, align 8
  %95 = icmp eq %"class.spvtools::opt::BasicBlock"** %92, %94
  %96 = ptrtoint %"class.spvtools::opt::BasicBlock"** %94 to i64
  br i1 %95, label %102, label %97

97:                                               ; preds = %88
  %98 = bitcast %"class.spvtools::opt::BasicBlock"** %92 to i64*
  store i64 %19, i64* %98, align 8
  %99 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %92, i64 1
  %100 = ptrtoint %"class.spvtools::opt::BasicBlock"** %99 to i64
  %101 = bitcast %"class.spvtools::opt::BasicBlock"*** %91 to i64*
  store i64 %100, i64* %101, align 8
  br label %159

102:                                              ; preds = %88
  %103 = ptrtoint %"class.spvtools::opt::BasicBlock"** %92 to i64
  %104 = bitcast %"class.spvtools::opt::BasicBlock"*** %91 to i64*
  %105 = bitcast %"class.std::__1::vector.936"* %90 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %103, %106
  %108 = ashr exact i64 %107, 3
  %109 = add nsw i64 %108, 1
  %110 = icmp ugt i64 %109, 2305843009213693951
  br i1 %110, label %111, label %113

111:                                              ; preds = %102
  %112 = bitcast %"class.std::__1::vector.936"* %90 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #14
  unreachable

113:                                              ; preds = %102
  %114 = bitcast %"class.spvtools::opt::BasicBlock"*** %93 to i64*
  %115 = sub i64 %96, %106
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, 1152921504606846975
  br i1 %117, label %118, label %126

118:                                              ; preds = %113
  %119 = ashr exact i64 %115, 2
  %120 = icmp ult i64 %119, %109
  %121 = select i1 %120, i64 %109, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 2305843009213693951
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  call void @abort() #14
  unreachable

126:                                              ; preds = %123, %113
  %127 = phi i64 [ %121, %123 ], [ 2305843009213693951, %113 ]
  %128 = shl i64 %127, 3
  %129 = call i8* @_Znwm(i64 %128) #13
  %130 = bitcast i8* %129 to %"class.spvtools::opt::BasicBlock"**
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi %"class.spvtools::opt::BasicBlock"** [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %133, i64 %108
  %135 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %133, i64 %132
  %136 = ptrtoint %"class.spvtools::opt::BasicBlock"** %135 to i64
  %137 = bitcast %"class.spvtools::opt::BasicBlock"** %134 to i64*
  store i64 %19, i64* %137, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %134, i64 1
  %139 = ptrtoint %"class.spvtools::opt::BasicBlock"** %138 to i64
  %140 = getelementptr inbounds %"class.std::__1::vector.936", %"class.std::__1::vector.936"* %90, i64 0, i32 0, i32 0
  %141 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %140, align 8
  %142 = load i64, i64* %104, align 8
  %143 = ptrtoint %"class.spvtools::opt::BasicBlock"** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %134, i64 %146
  %148 = ptrtoint %"class.spvtools::opt::BasicBlock"** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %131
  %151 = bitcast %"class.spvtools::opt::BasicBlock"** %147 to i8*
  %152 = bitcast %"class.spvtools::opt::BasicBlock"** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #12
  %153 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %140, align 8
  br label %154

154:                                              ; preds = %150, %131
  %155 = phi %"class.spvtools::opt::BasicBlock"** [ %141, %131 ], [ %153, %150 ]
  store i64 %148, i64* %105, align 8
  store i64 %139, i64* %104, align 8
  store i64 %136, i64* %114, align 8
  %156 = icmp eq %"class.spvtools::opt::BasicBlock"** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast %"class.spvtools::opt::BasicBlock"** %155 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %79, %97, %154, %157
  %160 = phi i1 [ false, %97 ], [ false, %154 ], [ false, %157 ], [ true, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #12
  ret i1 %160
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13, !noalias !75
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG15SplitLoopHeaderEPNS3_10BasicBlockEE4$_10S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1122", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %8 = bitcast [8 x i8]* %7 to %"class.spvtools::opt::IRContext"**
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 9, i32 0
  %20 = bitcast %"class.std::__1::tuple.1122"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #12
  %23 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %19, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1122"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %24 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %23, 0
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %24, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %26 = bitcast %"struct.std::__1::__hash_node_base.115"* %25 to i64*
  store i64 %11, i64* %26, align 8
  br label %27

27:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_3CFG15SplitLoopHeaderEPNS3_10BasicBlockEE4$_11S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1122", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.std::__1::vector.324", align 8
  %7 = alloca %"class.std::__1::vector.487", align 8
  %8 = alloca %"struct.spvtools::opt::Operand", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"struct.spvtools::opt::Operand", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %13 = alloca %"struct.spvtools::opt::Operand", align 8
  %14 = alloca %"class.spvtools::utils::SmallVector", align 8
  %15 = alloca %"struct.spvtools::opt::Operand", align 8
  %16 = alloca %"class.spvtools::utils::SmallVector", align 8
  %17 = alloca %"struct.spvtools::opt::Operand", align 8
  %18 = alloca %"class.spvtools::utils::SmallVector", align 8
  %19 = alloca %"struct.spvtools::opt::Operand", align 8
  %20 = alloca %"class.spvtools::utils::SmallVector", align 8
  %21 = alloca %"class.std::__1::unique_ptr.796", align 8
  %22 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1267"**
  %23 = load %"class.std::__1::__function::__default_alloc_func.1267"*, %"class.std::__1::__function::__default_alloc_func.1267"** %22, align 8
  %24 = bitcast %"class.std::__1::vector.324"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %6, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %6, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #12
  %28 = bitcast %"class.std::__1::vector.487"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %7, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %7, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #12
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %34 = bitcast %"struct.spvtools::opt::Operand"** %33 to i64*
  %35 = bitcast %"class.std::__1::vector.487"* %32 to i64*
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %38 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1267", %"class.std::__1::__function::__default_alloc_func.1267"* %23, i64 0, i32 0, i32 0
  %39 = bitcast i32** %26 to i64*
  %40 = bitcast %"class.std::__1::vector.324"* %6 to i64*
  %41 = bitcast i32** %27 to i64*
  %42 = bitcast %"struct.spvtools::opt::Operand"* %8 to i8*
  %43 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %48 = bitcast i32** %46 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %50 = bitcast %"class.std::__1::unique_ptr.489"* %49 to i64*
  %51 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %47 to i32*
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 0
  %53 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %53, i64 0, i32 0
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 2
  %57 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 3, i64 0
  %58 = bitcast i32** %56 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4
  %60 = bitcast %"class.std::__1::unique_ptr.489"* %59 to i64*
  %61 = bitcast %"struct.spvtools::opt::Operand"** %30 to i64*
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = bitcast %"struct.spvtools::opt::Operand"* %10 to i8*
  %66 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %70 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %72 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.489"* %72 to i64*
  %74 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %70 to i32*
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %76, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 1
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 2
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 3, i64 0
  %81 = bitcast i32** %79 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %82 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 4
  %83 = bitcast %"class.std::__1::unique_ptr.489"* %82 to i64*
  %84 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %87

87:                                               ; preds = %341, %2
  %88 = phi i32 [ 0, %2 ], [ %342, %341 ]
  %89 = load i64, i64* %34, align 8
  %90 = load i64, i64* %35, align 8
  %91 = sub i64 %89, %90
  %92 = sdiv exact i64 %91, 48
  %93 = load i8, i8* %36, align 4, !range !2
  %94 = icmp eq i8 %93, 0
  %95 = load i8, i8* %37, align 1, !range !2
  %96 = icmp eq i8 %95, 0
  %97 = select i1 %96, i32 1, i32 2
  %98 = xor i1 %96, true
  %99 = zext i1 %98 to i32
  %100 = select i1 %94, i32 %99, i32 %97
  %101 = trunc i64 %92 to i32
  %102 = sub i32 %101, %100
  %103 = icmp ult i32 %88, %102
  br i1 %103, label %110, label %104

104:                                              ; preds = %87
  %105 = load i64, i64* %39, align 8
  %106 = load i64, i64* %40, align 8
  %107 = sub i64 %105, %106
  %108 = ashr exact i64 %107, 2
  %109 = icmp ugt i64 %108, 2
  br i1 %109, label %343, label %604

110:                                              ; preds = %87
  %111 = add i32 %100, %88
  %112 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %111) #12
  %113 = or i32 %88, 1
  %114 = load i8, i8* %36, align 4, !range !2
  %115 = icmp eq i8 %114, 0
  %116 = load i8, i8* %37, align 1, !range !2
  %117 = icmp eq i8 %116, 0
  %118 = select i1 %117, i32 1, i32 2
  %119 = xor i1 %117, true
  %120 = zext i1 %119 to i32
  %121 = select i1 %115, i32 %120, i32 %118
  %122 = add i32 %121, %113
  %123 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %122) #12
  %124 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %38, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %124, i64 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %125, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 4
  %128 = load i8, i8* %127, align 1, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %110
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 3
  %132 = load i8, i8* %131, align 4, !range !2
  %133 = zext i8 %132 to i32
  %134 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %126, i32 %133) #12
  br label %135

135:                                              ; preds = %130, %110
  %136 = phi i32 [ %134, %130 ], [ 0, %110 ]
  %137 = icmp eq i32 %123, %136
  br i1 %137, label %138, label %235

138:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %42) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %47, %"struct.std::__1::aligned_storage<4, 4>::type"** %48, align 8
  store i64 0, i64* %50, align 8
  store i64 1, i64* %45, align 8
  store i32 %112, i32* %51, align 8
  store i32 1, i32* %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  store i64 0, i64* %55, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %57, %"struct.std::__1::aligned_storage<4, 4>::type"** %58, align 8
  store i64 0, i64* %60, align 8
  %139 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %53, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #12
  %140 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %30, align 8
  %141 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %142 = icmp ult %"struct.spvtools::opt::Operand"* %140, %141
  br i1 %142, label %143, label %157

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %140, i64 0, i32 0
  %145 = load i32, i32* %52, align 8
  store i32 %145, i32* %144, align 8
  %146 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %140, i64 0, i32 1
  %147 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %146, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %140, i64 0, i32 1, i32 1
  store i64 0, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %140, i64 0, i32 1, i32 2
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %140, i64 0, i32 1, i32 3, i64 0
  %151 = bitcast i32** %149 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %150, %"struct.std::__1::aligned_storage<4, 4>::type"** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %140, i64 0, i32 1, i32 4
  %153 = bitcast %"class.std::__1::unique_ptr.489"* %152 to i64*
  store i64 0, i64* %153, align 8
  %154 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %146, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %53) #12
  %155 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %140, i64 1
  %156 = ptrtoint %"struct.spvtools::opt::Operand"* %155 to i64
  store i64 %156, i64* %61, align 8
  br label %158

157:                                              ; preds = %138
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.487"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %8) #12
  br label %158

158:                                              ; preds = %157, %143
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %159 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %63, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %63, align 8
  %160 = icmp eq %"class.std::__1::vector.324"* %159, null
  br i1 %160, label %172, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %159, i64 0, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = icmp eq i32* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %161
  %166 = ptrtoint i32* %163 to i64
  %167 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %159, i64 0, i32 0, i32 1
  %168 = bitcast i32** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = bitcast i32* %163 to i8*
  call void @_ZdlPv(i8* %169) #13
  br label %170

170:                                              ; preds = %165, %161
  %171 = bitcast %"class.std::__1::vector.324"* %159 to i8*
  call void @_ZdlPv(i8* %171) #13
  br label %172

172:                                              ; preds = %170, %158
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %173 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %64, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %64, align 8
  %174 = icmp eq %"class.std::__1::vector.324"* %173, null
  br i1 %174, label %186, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %173, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = icmp eq i32* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = ptrtoint i32* %177 to i64
  %181 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %173, i64 0, i32 0, i32 1
  %182 = bitcast i32** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = bitcast i32* %177 to i8*
  call void @_ZdlPv(i8* %183) #13
  br label %184

184:                                              ; preds = %179, %175
  %185 = bitcast %"class.std::__1::vector.324"* %173 to i8*
  call void @_ZdlPv(i8* %185) #13
  br label %186

186:                                              ; preds = %184, %172
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %42) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %65) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %66) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  store i64 0, i64* %73, align 8
  store i64 1, i64* %68, align 8
  store i32 %123, i32* %74, align 8
  store i32 1, i32* %75, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  store i64 0, i64* %78, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %80, %"struct.std::__1::aligned_storage<4, 4>::type"** %81, align 8
  store i64 0, i64* %83, align 8
  %187 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %76, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #12
  %188 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %30, align 8
  %189 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %190 = icmp ult %"struct.spvtools::opt::Operand"* %188, %189
  br i1 %190, label %191, label %205

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %188, i64 0, i32 0
  %193 = load i32, i32* %75, align 8
  store i32 %193, i32* %192, align 8
  %194 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %188, i64 0, i32 1
  %195 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %194, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  %196 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %188, i64 0, i32 1, i32 1
  store i64 0, i64* %196, align 8
  %197 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %188, i64 0, i32 1, i32 2
  %198 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %188, i64 0, i32 1, i32 3, i64 0
  %199 = bitcast i32** %197 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %198, %"struct.std::__1::aligned_storage<4, 4>::type"** %199, align 8
  %200 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %188, i64 0, i32 1, i32 4
  %201 = bitcast %"class.std::__1::unique_ptr.489"* %200 to i64*
  store i64 0, i64* %201, align 8
  %202 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %194, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %76) #12
  %203 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %188, i64 1
  %204 = ptrtoint %"struct.spvtools::opt::Operand"* %203 to i64
  store i64 %204, i64* %61, align 8
  br label %206

205:                                              ; preds = %186
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.487"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %10) #12
  br label %206

206:                                              ; preds = %205, %191
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %207 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %85, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %85, align 8
  %208 = icmp eq %"class.std::__1::vector.324"* %207, null
  br i1 %208, label %220, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %207, i64 0, i32 0, i32 0
  %211 = load i32*, i32** %210, align 8
  %212 = icmp eq i32* %211, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %209
  %214 = ptrtoint i32* %211 to i64
  %215 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %207, i64 0, i32 0, i32 1
  %216 = bitcast i32** %215 to i64*
  store i64 %214, i64* %216, align 8
  %217 = bitcast i32* %211 to i8*
  call void @_ZdlPv(i8* %217) #13
  br label %218

218:                                              ; preds = %213, %209
  %219 = bitcast %"class.std::__1::vector.324"* %207 to i8*
  call void @_ZdlPv(i8* %219) #13
  br label %220

220:                                              ; preds = %218, %206
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %221 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %86, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %86, align 8
  %222 = icmp eq %"class.std::__1::vector.324"* %221, null
  br i1 %222, label %234, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %221, i64 0, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %221, i64 0, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %231) #13
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"class.std::__1::vector.324"* %221 to i8*
  call void @_ZdlPv(i8* %233) #13
  br label %234

234:                                              ; preds = %232, %220
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %65) #12
  br label %341

235:                                              ; preds = %135
  %236 = load i32*, i32** %26, align 8
  %237 = load i32*, i32** %27, align 8
  %238 = icmp eq i32* %236, %237
  %239 = ptrtoint i32* %237 to i64
  br i1 %238, label %243, label %240

240:                                              ; preds = %235
  store i32 %112, i32* %236, align 4
  %241 = getelementptr inbounds i32, i32* %236, i64 1
  %242 = ptrtoint i32* %241 to i64
  store i64 %242, i64* %39, align 8
  br label %288

243:                                              ; preds = %235
  %244 = ptrtoint i32* %236 to i64
  %245 = load i64, i64* %40, align 8
  %246 = sub i64 %244, %245
  %247 = ashr exact i64 %246, 2
  %248 = add nsw i64 %247, 1
  %249 = icmp ugt i64 %248, 4611686018427387903
  br i1 %249, label %250, label %252

250:                                              ; preds = %243
  %251 = bitcast %"class.std::__1::vector.324"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %251) #14
  unreachable

252:                                              ; preds = %243
  %253 = sub i64 %239, %245
  %254 = ashr exact i64 %253, 2
  %255 = icmp ult i64 %254, 2305843009213693951
  br i1 %255, label %256, label %264

256:                                              ; preds = %252
  %257 = ashr exact i64 %253, 1
  %258 = icmp ult i64 %257, %248
  %259 = select i1 %258, i64 %248, i64 %257
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %269, label %261

261:                                              ; preds = %256
  %262 = icmp ugt i64 %259, 4611686018427387903
  br i1 %262, label %263, label %264

263:                                              ; preds = %261
  call void @abort() #14
  unreachable

264:                                              ; preds = %261, %252
  %265 = phi i64 [ %259, %261 ], [ 4611686018427387903, %252 ]
  %266 = shl i64 %265, 2
  %267 = call i8* @_Znwm(i64 %266) #13
  %268 = bitcast i8* %267 to i32*
  br label %269

269:                                              ; preds = %264, %256
  %270 = phi i64 [ %265, %264 ], [ 0, %256 ]
  %271 = phi i8* [ %267, %264 ], [ null, %256 ]
  %272 = phi i32* [ %268, %264 ], [ null, %256 ]
  %273 = getelementptr inbounds i32, i32* %272, i64 %247
  %274 = getelementptr inbounds i32, i32* %272, i64 %270
  %275 = ptrtoint i32* %274 to i64
  store i32 %112, i32* %273, align 4
  %276 = getelementptr inbounds i32, i32* %273, i64 1
  %277 = ptrtoint i32* %276 to i64
  %278 = ptrtoint i32* %272 to i64
  %279 = icmp sgt i64 %246, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %269
  %281 = inttoptr i64 %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %271, i8* align 4 %281, i64 %246, i1 false) #12
  br label %282

282:                                              ; preds = %280, %269
  store i64 %278, i64* %40, align 8
  store i64 %277, i64* %39, align 8
  store i64 %275, i64* %41, align 8
  %283 = icmp eq i64 %245, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %282
  %285 = inttoptr i64 %245 to i8*
  call void @_ZdlPv(i8* %285) #13
  %286 = load i32*, i32** %26, align 8
  %287 = ptrtoint i32* %286 to i64
  br label %288

288:                                              ; preds = %284, %282, %240
  %289 = phi i64 [ %242, %240 ], [ %277, %282 ], [ %287, %284 ]
  %290 = phi i32* [ %241, %240 ], [ %276, %282 ], [ %286, %284 ]
  %291 = load i32*, i32** %27, align 8
  %292 = icmp eq i32* %290, %291
  br i1 %292, label %296, label %293

293:                                              ; preds = %288
  store i32 %123, i32* %290, align 4
  %294 = getelementptr inbounds i32, i32* %290, i64 1
  %295 = ptrtoint i32* %294 to i64
  store i64 %295, i64* %39, align 8
  br label %341

296:                                              ; preds = %288
  %297 = ptrtoint i32* %290 to i64
  %298 = load i64, i64* %40, align 8
  %299 = sub i64 %297, %298
  %300 = ashr exact i64 %299, 2
  %301 = add nsw i64 %300, 1
  %302 = icmp ugt i64 %301, 4611686018427387903
  br i1 %302, label %303, label %305

303:                                              ; preds = %296
  %304 = bitcast %"class.std::__1::vector.324"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %304) #14
  unreachable

305:                                              ; preds = %296
  %306 = icmp ult i64 %300, 2305843009213693951
  br i1 %306, label %307, label %315

307:                                              ; preds = %305
  %308 = ashr exact i64 %299, 1
  %309 = icmp ult i64 %308, %301
  %310 = select i1 %309, i64 %301, i64 %308
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %320, label %312

312:                                              ; preds = %307
  %313 = icmp ugt i64 %310, 4611686018427387903
  br i1 %313, label %314, label %315

314:                                              ; preds = %312
  call void @abort() #14
  unreachable

315:                                              ; preds = %312, %305
  %316 = phi i64 [ %310, %312 ], [ 4611686018427387903, %305 ]
  %317 = shl i64 %316, 2
  %318 = call i8* @_Znwm(i64 %317) #13
  %319 = bitcast i8* %318 to i32*
  br label %320

320:                                              ; preds = %315, %307
  %321 = phi i64 [ %316, %315 ], [ 0, %307 ]
  %322 = phi i32* [ %319, %315 ], [ null, %307 ]
  %323 = getelementptr inbounds i32, i32* %322, i64 %300
  %324 = getelementptr inbounds i32, i32* %322, i64 %321
  %325 = ptrtoint i32* %324 to i64
  store i32 %123, i32* %323, align 4
  %326 = getelementptr inbounds i32, i32* %323, i64 1
  %327 = ptrtoint i32* %326 to i64
  %328 = sub i64 %289, %298
  %329 = ashr exact i64 %328, 2
  %330 = sub nsw i64 0, %329
  %331 = getelementptr inbounds i32, i32* %323, i64 %330
  %332 = ptrtoint i32* %331 to i64
  %333 = icmp sgt i64 %328, 0
  br i1 %333, label %334, label %337

334:                                              ; preds = %320
  %335 = bitcast i32* %331 to i8*
  %336 = inttoptr i64 %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %335, i8* align 4 %336, i64 %328, i1 false) #12
  br label %337

337:                                              ; preds = %334, %320
  store i64 %332, i64* %40, align 8
  store i64 %327, i64* %39, align 8
  store i64 %325, i64* %41, align 8
  %338 = icmp eq i64 %298, 0
  br i1 %338, label %341, label %339

339:                                              ; preds = %337
  %340 = inttoptr i64 %298 to i8*
  call void @_ZdlPv(i8* %340) #13
  br label %341

341:                                              ; preds = %339, %337, %293, %234
  %342 = add i32 %88, 2
  br label %87

343:                                              ; preds = %104
  %344 = bitcast %"class.spvtools::opt::InstructionBuilder"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %344) #12
  %345 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %12, i64 0, i32 0
  %346 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %12, i64 0, i32 1
  %347 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %12, i64 0, i32 3
  %348 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1267", %"class.std::__1::__function::__default_alloc_func.1267"* %23, i64 0, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %344, i8 -86, i64 32, i1 false) #12
  %349 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %348, align 8
  %350 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1267", %"class.std::__1::__function::__default_alloc_func.1267"* %23, i64 0, i32 0, i32 1
  %351 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %350, align 8
  %352 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %351, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %353 = bitcast %"class.spvtools::opt::Instruction"** %352 to i64*
  %354 = load i64, i64* %353, align 8, !noalias !80
  %355 = inttoptr i64 %354 to %"class.spvtools::opt::Instruction"*
  %356 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %349, i64 0, i32 11
  %357 = load i32, i32* %356, align 8
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %343
  call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %349) #12
  br label %361

361:                                              ; preds = %360, %343
  %362 = lshr i64 %354, 32
  %363 = shl i64 %354, 3
  %364 = and i64 %363, 4294967288
  %365 = add nuw nsw i64 %364, 8
  %366 = xor i64 %365, %362
  %367 = mul i64 %366, -7070675565921424023
  %368 = lshr i64 %367, 47
  %369 = xor i64 %367, %362
  %370 = xor i64 %369, %368
  %371 = mul i64 %370, -7070675565921424023
  %372 = lshr i64 %371, 47
  %373 = xor i64 %372, %371
  %374 = mul i64 %373, -7070675565921424023
  %375 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %349, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %376 = load i64, i64* %375, align 8
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %430, label %378

378:                                              ; preds = %361
  %379 = call i64 @llvm.ctpop.i64(i64 %376) #12, !range !3
  %380 = icmp ugt i64 %379, 1
  br i1 %380, label %384, label %381

381:                                              ; preds = %378
  %382 = add i64 %376, -1
  %383 = and i64 %382, %374
  br label %388

384:                                              ; preds = %378
  %385 = icmp ult i64 %374, %376
  br i1 %385, label %388, label %386

386:                                              ; preds = %384
  %387 = urem i64 %374, %376
  br label %388

388:                                              ; preds = %386, %384, %381
  %389 = phi i64 [ %383, %381 ], [ %387, %386 ], [ %374, %384 ]
  %390 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %349, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %390, align 8
  %392 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %391, i64 %389
  %393 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %392, align 8
  %394 = icmp eq %"struct.std::__1::__hash_node_base.115"* %393, null
  br i1 %394, label %430, label %395

395:                                              ; preds = %388
  %396 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %393, i64 0, i32 0
  %397 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %396, align 8
  %398 = icmp eq %"struct.std::__1::__hash_node_base.115"* %397, null
  br i1 %398, label %430, label %399

399:                                              ; preds = %395
  %400 = add i64 %376, -1
  br label %401

401:                                              ; preds = %422, %399
  %402 = phi %"struct.std::__1::__hash_node_base.115"* [ %397, %399 ], [ %424, %422 ]
  %403 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %402, i64 1
  %404 = bitcast %"struct.std::__1::__hash_node_base.115"* %403 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = icmp eq i64 %405, %374
  br i1 %406, label %417, label %407

407:                                              ; preds = %401
  br i1 %380, label %410, label %408

408:                                              ; preds = %407
  %409 = and i64 %405, %400
  br label %414

410:                                              ; preds = %407
  %411 = icmp ult i64 %405, %376
  br i1 %411, label %414, label %412

412:                                              ; preds = %410
  %413 = urem i64 %405, %376
  br label %414

414:                                              ; preds = %412, %410, %408
  %415 = phi i64 [ %409, %408 ], [ %413, %412 ], [ %405, %410 ]
  %416 = icmp eq i64 %415, %389
  br i1 %416, label %422, label %430

417:                                              ; preds = %401
  %418 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %402, i64 2
  %419 = bitcast %"struct.std::__1::__hash_node_base.115"* %418 to %"class.spvtools::opt::Instruction"**
  %420 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %419, align 8
  %421 = icmp eq %"class.spvtools::opt::Instruction"* %420, %355
  br i1 %421, label %426, label %422

422:                                              ; preds = %417, %414
  %423 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %402, i64 0, i32 0
  %424 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %423, align 8
  %425 = icmp eq %"struct.std::__1::__hash_node_base.115"* %424, null
  br i1 %425, label %430, label %401

426:                                              ; preds = %417
  %427 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %402, i64 3
  %428 = bitcast %"struct.std::__1::__hash_node_base.115"* %427 to %"class.spvtools::opt::BasicBlock"**
  %429 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %428, align 8
  br label %430

430:                                              ; preds = %422, %414, %426, %395, %388, %361
  %431 = phi %"class.spvtools::opt::BasicBlock"* [ %429, %426 ], [ null, %388 ], [ null, %361 ], [ null, %395 ], [ null, %414 ], [ null, %422 ]
  store %"class.spvtools::opt::IRContext"* %349, %"class.spvtools::opt::IRContext"** %345, align 8
  store %"class.spvtools::opt::BasicBlock"* %431, %"class.spvtools::opt::BasicBlock"** %346, align 8
  %432 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %12, i64 0, i32 2
  %433 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %432 to i64*
  store i64 %354, i64* %433, align 8
  store i32 3, i32* %347, align 8
  %434 = load i8, i8* %36, align 4, !range !2
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %438, label %436

436:                                              ; preds = %430
  %437 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #12
  br label %438

438:                                              ; preds = %436, %430
  %439 = phi i32 [ %437, %436 ], [ 0, %430 ]
  %440 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %12, i32 %439, i32 245, %"class.std::__1::vector.324"* nonnull dereferenceable(24) %6, i32 0) #12
  %441 = bitcast %"struct.spvtools::opt::Operand"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %441) #12
  %442 = bitcast %"class.spvtools::utils::SmallVector"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %442) #12
  %443 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %440, i64 0, i32 4
  %444 = load i8, i8* %443, align 1, !range !2
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %451, label %446

446:                                              ; preds = %438
  %447 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %440, i64 0, i32 3
  %448 = load i8, i8* %447, align 4, !range !2
  %449 = zext i8 %448 to i32
  %450 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %440, i32 %449) #12
  br label %451

451:                                              ; preds = %446, %438
  %452 = phi i32 [ %450, %446 ], [ 0, %438 ]
  %453 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %453, align 8
  %454 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 1
  %455 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 2
  %456 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 3, i64 0
  %457 = bitcast i32** %455 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %456, %"struct.std::__1::aligned_storage<4, 4>::type"** %457, align 8
  %458 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4
  %459 = bitcast %"class.std::__1::unique_ptr.489"* %458 to i64*
  store i64 0, i64* %459, align 8
  %460 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %456 to i32*
  store i64 1, i64* %454, align 8
  store i32 %452, i32* %460, align 8
  %461 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 0
  store i32 1, i32* %461, align 8
  %462 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1
  %463 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %462, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %463, align 8
  %464 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 1
  store i64 0, i64* %464, align 8
  %465 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 2
  %466 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 3, i64 0
  %467 = bitcast i32** %465 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %466, %"struct.std::__1::aligned_storage<4, 4>::type"** %467, align 8
  %468 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 4
  %469 = bitcast %"class.std::__1::unique_ptr.489"* %468 to i64*
  store i64 0, i64* %469, align 8
  %470 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %462, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %14) #12
  %471 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %30, align 8
  %472 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %473 = icmp ult %"struct.spvtools::opt::Operand"* %471, %472
  br i1 %473, label %474, label %488

474:                                              ; preds = %451
  %475 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %471, i64 0, i32 0
  %476 = load i32, i32* %461, align 8
  store i32 %476, i32* %475, align 8
  %477 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %471, i64 0, i32 1
  %478 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %477, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %478, align 8
  %479 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %471, i64 0, i32 1, i32 1
  store i64 0, i64* %479, align 8
  %480 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %471, i64 0, i32 1, i32 2
  %481 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %471, i64 0, i32 1, i32 3, i64 0
  %482 = bitcast i32** %480 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %481, %"struct.std::__1::aligned_storage<4, 4>::type"** %482, align 8
  %483 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %471, i64 0, i32 1, i32 4
  %484 = bitcast %"class.std::__1::unique_ptr.489"* %483 to i64*
  store i64 0, i64* %484, align 8
  %485 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %477, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %462) #12
  %486 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %471, i64 1
  %487 = ptrtoint %"struct.spvtools::opt::Operand"* %486 to i64
  store i64 %487, i64* %61, align 8
  br label %489

488:                                              ; preds = %451
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.487"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %13) #12
  br label %489

489:                                              ; preds = %488, %474
  %490 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %490, align 8
  %491 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %492 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %491, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %491, align 8
  %493 = icmp eq %"class.std::__1::vector.324"* %492, null
  br i1 %493, label %505, label %494

494:                                              ; preds = %489
  %495 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %492, i64 0, i32 0, i32 0
  %496 = load i32*, i32** %495, align 8
  %497 = icmp eq i32* %496, null
  br i1 %497, label %503, label %498

498:                                              ; preds = %494
  %499 = ptrtoint i32* %496 to i64
  %500 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %492, i64 0, i32 0, i32 1
  %501 = bitcast i32** %500 to i64*
  store i64 %499, i64* %501, align 8
  %502 = bitcast i32* %496 to i8*
  call void @_ZdlPv(i8* %502) #13
  br label %503

503:                                              ; preds = %498, %494
  %504 = bitcast %"class.std::__1::vector.324"* %492 to i8*
  call void @_ZdlPv(i8* %504) #13
  br label %505

505:                                              ; preds = %503, %489
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %453, align 8
  %506 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %507 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %506, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %506, align 8
  %508 = icmp eq %"class.std::__1::vector.324"* %507, null
  br i1 %508, label %520, label %509

509:                                              ; preds = %505
  %510 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %507, i64 0, i32 0, i32 0
  %511 = load i32*, i32** %510, align 8
  %512 = icmp eq i32* %511, null
  br i1 %512, label %518, label %513

513:                                              ; preds = %509
  %514 = ptrtoint i32* %511 to i64
  %515 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %507, i64 0, i32 0, i32 1
  %516 = bitcast i32** %515 to i64*
  store i64 %514, i64* %516, align 8
  %517 = bitcast i32* %511 to i8*
  call void @_ZdlPv(i8* %517) #13
  br label %518

518:                                              ; preds = %513, %509
  %519 = bitcast %"class.std::__1::vector.324"* %507 to i8*
  call void @_ZdlPv(i8* %519) #13
  br label %520

520:                                              ; preds = %518, %505
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %442) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %441) #12
  %521 = bitcast %"struct.spvtools::opt::Operand"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %521) #12
  %522 = bitcast %"class.spvtools::utils::SmallVector"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %522) #12
  %523 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %350, align 8
  %524 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %523, i64 0, i32 1, i32 0, i32 0, i32 0
  %525 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %524, align 8
  %526 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %525, i64 0, i32 4
  %527 = load i8, i8* %526, align 1, !range !2
  %528 = icmp eq i8 %527, 0
  br i1 %528, label %534, label %529

529:                                              ; preds = %520
  %530 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %525, i64 0, i32 3
  %531 = load i8, i8* %530, align 4, !range !2
  %532 = zext i8 %531 to i32
  %533 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %525, i32 %532) #12
  br label %534

534:                                              ; preds = %529, %520
  %535 = phi i32 [ %533, %529 ], [ 0, %520 ]
  %536 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %536, align 8
  %537 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 1
  %538 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 2
  %539 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 3, i64 0
  %540 = bitcast i32** %538 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %539, %"struct.std::__1::aligned_storage<4, 4>::type"** %540, align 8
  %541 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 4
  %542 = bitcast %"class.std::__1::unique_ptr.489"* %541 to i64*
  store i64 0, i64* %542, align 8
  %543 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %539 to i32*
  store i64 1, i64* %537, align 8
  store i32 %535, i32* %543, align 8
  %544 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 0, i32 0
  store i32 1, i32* %544, align 8
  %545 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 0, i32 1
  %546 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %545, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %546, align 8
  %547 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 0, i32 1, i32 1
  store i64 0, i64* %547, align 8
  %548 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 0, i32 1, i32 2
  %549 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 0, i32 1, i32 3, i64 0
  %550 = bitcast i32** %548 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %549, %"struct.std::__1::aligned_storage<4, 4>::type"** %550, align 8
  %551 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 0, i32 1, i32 4
  %552 = bitcast %"class.std::__1::unique_ptr.489"* %551 to i64*
  store i64 0, i64* %552, align 8
  %553 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %545, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %16) #12
  %554 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %30, align 8
  %555 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %556 = icmp ult %"struct.spvtools::opt::Operand"* %554, %555
  br i1 %556, label %557, label %571

557:                                              ; preds = %534
  %558 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %554, i64 0, i32 0
  %559 = load i32, i32* %544, align 8
  store i32 %559, i32* %558, align 8
  %560 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %554, i64 0, i32 1
  %561 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %560, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %561, align 8
  %562 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %554, i64 0, i32 1, i32 1
  store i64 0, i64* %562, align 8
  %563 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %554, i64 0, i32 1, i32 2
  %564 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %554, i64 0, i32 1, i32 3, i64 0
  %565 = bitcast i32** %563 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %564, %"struct.std::__1::aligned_storage<4, 4>::type"** %565, align 8
  %566 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %554, i64 0, i32 1, i32 4
  %567 = bitcast %"class.std::__1::unique_ptr.489"* %566 to i64*
  store i64 0, i64* %567, align 8
  %568 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %560, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %545) #12
  %569 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %554, i64 1
  %570 = ptrtoint %"struct.spvtools::opt::Operand"* %569 to i64
  store i64 %570, i64* %61, align 8
  br label %572

571:                                              ; preds = %534
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.487"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %15) #12
  br label %572

572:                                              ; preds = %571, %557
  %573 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %573, align 8
  %574 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %575 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %574, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %574, align 8
  %576 = icmp eq %"class.std::__1::vector.324"* %575, null
  br i1 %576, label %588, label %577

577:                                              ; preds = %572
  %578 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %575, i64 0, i32 0, i32 0
  %579 = load i32*, i32** %578, align 8
  %580 = icmp eq i32* %579, null
  br i1 %580, label %586, label %581

581:                                              ; preds = %577
  %582 = ptrtoint i32* %579 to i64
  %583 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %575, i64 0, i32 0, i32 1
  %584 = bitcast i32** %583 to i64*
  store i64 %582, i64* %584, align 8
  %585 = bitcast i32* %579 to i8*
  call void @_ZdlPv(i8* %585) #13
  br label %586

586:                                              ; preds = %581, %577
  %587 = bitcast %"class.std::__1::vector.324"* %575 to i8*
  call void @_ZdlPv(i8* %587) #13
  br label %588

588:                                              ; preds = %586, %572
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %536, align 8
  %589 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %590 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %589, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %589, align 8
  %591 = icmp eq %"class.std::__1::vector.324"* %590, null
  br i1 %591, label %603, label %592

592:                                              ; preds = %588
  %593 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %590, i64 0, i32 0, i32 0
  %594 = load i32*, i32** %593, align 8
  %595 = icmp eq i32* %594, null
  br i1 %595, label %601, label %596

596:                                              ; preds = %592
  %597 = ptrtoint i32* %594 to i64
  %598 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %590, i64 0, i32 0, i32 1
  %599 = bitcast i32** %598 to i64*
  store i64 %597, i64* %599, align 8
  %600 = bitcast i32* %594 to i8*
  call void @_ZdlPv(i8* %600) #13
  br label %601

601:                                              ; preds = %596, %592
  %602 = bitcast %"class.std::__1::vector.324"* %590 to i8*
  call void @_ZdlPv(i8* %602) #13
  br label %603

603:                                              ; preds = %601, %588
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %522) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %521) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %344) #12
  br label %761

604:                                              ; preds = %104
  %605 = inttoptr i64 %106 to i32*
  %606 = bitcast %"struct.spvtools::opt::Operand"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %606) #12
  %607 = bitcast %"class.spvtools::utils::SmallVector"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %607) #12
  %608 = load i32, i32* %605, align 4
  %609 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %609, align 8
  %610 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 1
  %611 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 2
  %612 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 3, i64 0
  %613 = bitcast i32** %611 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %612, %"struct.std::__1::aligned_storage<4, 4>::type"** %613, align 8
  %614 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 4
  %615 = bitcast %"class.std::__1::unique_ptr.489"* %614 to i64*
  store i64 0, i64* %615, align 8
  %616 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %612 to i32*
  store i64 1, i64* %610, align 8
  store i32 %608, i32* %616, align 8
  %617 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 0, i32 0
  store i32 1, i32* %617, align 8
  %618 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 0, i32 1
  %619 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %618, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %619, align 8
  %620 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 0, i32 1, i32 1
  store i64 0, i64* %620, align 8
  %621 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 0, i32 1, i32 2
  %622 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 0, i32 1, i32 3, i64 0
  %623 = bitcast i32** %621 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %622, %"struct.std::__1::aligned_storage<4, 4>::type"** %623, align 8
  %624 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 0, i32 1, i32 4
  %625 = bitcast %"class.std::__1::unique_ptr.489"* %624 to i64*
  store i64 0, i64* %625, align 8
  %626 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %618, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %18) #12
  %627 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %30, align 8
  %628 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %629 = icmp ult %"struct.spvtools::opt::Operand"* %627, %628
  br i1 %629, label %630, label %644

630:                                              ; preds = %604
  %631 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %627, i64 0, i32 0
  %632 = load i32, i32* %617, align 8
  store i32 %632, i32* %631, align 8
  %633 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %627, i64 0, i32 1
  %634 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %633, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %634, align 8
  %635 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %627, i64 0, i32 1, i32 1
  store i64 0, i64* %635, align 8
  %636 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %627, i64 0, i32 1, i32 2
  %637 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %627, i64 0, i32 1, i32 3, i64 0
  %638 = bitcast i32** %636 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %637, %"struct.std::__1::aligned_storage<4, 4>::type"** %638, align 8
  %639 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %627, i64 0, i32 1, i32 4
  %640 = bitcast %"class.std::__1::unique_ptr.489"* %639 to i64*
  store i64 0, i64* %640, align 8
  %641 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %633, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %618) #12
  %642 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %627, i64 1
  %643 = ptrtoint %"struct.spvtools::opt::Operand"* %642 to i64
  store i64 %643, i64* %61, align 8
  br label %645

644:                                              ; preds = %604
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.487"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %17) #12
  br label %645

645:                                              ; preds = %644, %630
  %646 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %646, align 8
  %647 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %648 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %647, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %647, align 8
  %649 = icmp eq %"class.std::__1::vector.324"* %648, null
  br i1 %649, label %661, label %650

650:                                              ; preds = %645
  %651 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %648, i64 0, i32 0, i32 0
  %652 = load i32*, i32** %651, align 8
  %653 = icmp eq i32* %652, null
  br i1 %653, label %659, label %654

654:                                              ; preds = %650
  %655 = ptrtoint i32* %652 to i64
  %656 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %648, i64 0, i32 0, i32 1
  %657 = bitcast i32** %656 to i64*
  store i64 %655, i64* %657, align 8
  %658 = bitcast i32* %652 to i8*
  call void @_ZdlPv(i8* %658) #13
  br label %659

659:                                              ; preds = %654, %650
  %660 = bitcast %"class.std::__1::vector.324"* %648 to i8*
  call void @_ZdlPv(i8* %660) #13
  br label %661

661:                                              ; preds = %659, %645
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %609, align 8
  %662 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %663 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %662, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %662, align 8
  %664 = icmp eq %"class.std::__1::vector.324"* %663, null
  br i1 %664, label %676, label %665

665:                                              ; preds = %661
  %666 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %663, i64 0, i32 0, i32 0
  %667 = load i32*, i32** %666, align 8
  %668 = icmp eq i32* %667, null
  br i1 %668, label %674, label %669

669:                                              ; preds = %665
  %670 = ptrtoint i32* %667 to i64
  %671 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %663, i64 0, i32 0, i32 1
  %672 = bitcast i32** %671 to i64*
  store i64 %670, i64* %672, align 8
  %673 = bitcast i32* %667 to i8*
  call void @_ZdlPv(i8* %673) #13
  br label %674

674:                                              ; preds = %669, %665
  %675 = bitcast %"class.std::__1::vector.324"* %663 to i8*
  call void @_ZdlPv(i8* %675) #13
  br label %676

676:                                              ; preds = %674, %661
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %607) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %606) #12
  %677 = bitcast %"struct.spvtools::opt::Operand"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %677) #12
  %678 = bitcast %"class.spvtools::utils::SmallVector"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %678) #12
  %679 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1267", %"class.std::__1::__function::__default_alloc_func.1267"* %23, i64 0, i32 0, i32 1
  %680 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %679, align 8
  %681 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %680, i64 0, i32 1, i32 0, i32 0, i32 0
  %682 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %681, align 8
  %683 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %682, i64 0, i32 4
  %684 = load i8, i8* %683, align 1, !range !2
  %685 = icmp eq i8 %684, 0
  br i1 %685, label %691, label %686

686:                                              ; preds = %676
  %687 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %682, i64 0, i32 3
  %688 = load i8, i8* %687, align 4, !range !2
  %689 = zext i8 %688 to i32
  %690 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %682, i32 %689) #12
  br label %691

691:                                              ; preds = %686, %676
  %692 = phi i32 [ %690, %686 ], [ 0, %676 ]
  %693 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %693, align 8
  %694 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 1
  %695 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 2
  %696 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 3, i64 0
  %697 = bitcast i32** %695 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %696, %"struct.std::__1::aligned_storage<4, 4>::type"** %697, align 8
  %698 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4
  %699 = bitcast %"class.std::__1::unique_ptr.489"* %698 to i64*
  store i64 0, i64* %699, align 8
  %700 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %696 to i32*
  store i64 1, i64* %694, align 8
  store i32 %692, i32* %700, align 8
  %701 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %19, i64 0, i32 0
  store i32 1, i32* %701, align 8
  %702 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %19, i64 0, i32 1
  %703 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %702, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %703, align 8
  %704 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %19, i64 0, i32 1, i32 1
  store i64 0, i64* %704, align 8
  %705 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %19, i64 0, i32 1, i32 2
  %706 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %19, i64 0, i32 1, i32 3, i64 0
  %707 = bitcast i32** %705 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %706, %"struct.std::__1::aligned_storage<4, 4>::type"** %707, align 8
  %708 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %19, i64 0, i32 1, i32 4
  %709 = bitcast %"class.std::__1::unique_ptr.489"* %708 to i64*
  store i64 0, i64* %709, align 8
  %710 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %702, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %20) #12
  %711 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %30, align 8
  %712 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %713 = icmp ult %"struct.spvtools::opt::Operand"* %711, %712
  br i1 %713, label %714, label %728

714:                                              ; preds = %691
  %715 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %711, i64 0, i32 0
  %716 = load i32, i32* %701, align 8
  store i32 %716, i32* %715, align 8
  %717 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %711, i64 0, i32 1
  %718 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %717, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %718, align 8
  %719 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %711, i64 0, i32 1, i32 1
  store i64 0, i64* %719, align 8
  %720 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %711, i64 0, i32 1, i32 2
  %721 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %711, i64 0, i32 1, i32 3, i64 0
  %722 = bitcast i32** %720 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %721, %"struct.std::__1::aligned_storage<4, 4>::type"** %722, align 8
  %723 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %711, i64 0, i32 1, i32 4
  %724 = bitcast %"class.std::__1::unique_ptr.489"* %723 to i64*
  store i64 0, i64* %724, align 8
  %725 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %717, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %702) #12
  %726 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %711, i64 1
  %727 = ptrtoint %"struct.spvtools::opt::Operand"* %726 to i64
  store i64 %727, i64* %61, align 8
  br label %729

728:                                              ; preds = %691
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.487"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %19) #12
  br label %729

729:                                              ; preds = %728, %714
  %730 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %19, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %730, align 8
  %731 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %19, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %732 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %731, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %731, align 8
  %733 = icmp eq %"class.std::__1::vector.324"* %732, null
  br i1 %733, label %745, label %734

734:                                              ; preds = %729
  %735 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %732, i64 0, i32 0, i32 0
  %736 = load i32*, i32** %735, align 8
  %737 = icmp eq i32* %736, null
  br i1 %737, label %743, label %738

738:                                              ; preds = %734
  %739 = ptrtoint i32* %736 to i64
  %740 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %732, i64 0, i32 0, i32 1
  %741 = bitcast i32** %740 to i64*
  store i64 %739, i64* %741, align 8
  %742 = bitcast i32* %736 to i8*
  call void @_ZdlPv(i8* %742) #13
  br label %743

743:                                              ; preds = %738, %734
  %744 = bitcast %"class.std::__1::vector.324"* %732 to i8*
  call void @_ZdlPv(i8* %744) #13
  br label %745

745:                                              ; preds = %743, %729
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %693, align 8
  %746 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %747 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %746, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %746, align 8
  %748 = icmp eq %"class.std::__1::vector.324"* %747, null
  br i1 %748, label %760, label %749

749:                                              ; preds = %745
  %750 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %747, i64 0, i32 0, i32 0
  %751 = load i32*, i32** %750, align 8
  %752 = icmp eq i32* %751, null
  br i1 %752, label %758, label %753

753:                                              ; preds = %749
  %754 = ptrtoint i32* %751 to i64
  %755 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %747, i64 0, i32 0, i32 1
  %756 = bitcast i32** %755 to i64*
  store i64 %754, i64* %756, align 8
  %757 = bitcast i32* %751 to i8*
  call void @_ZdlPv(i8* %757) #13
  br label %758

758:                                              ; preds = %753, %749
  %759 = bitcast %"class.std::__1::vector.324"* %747 to i8*
  call void @_ZdlPv(i8* %759) #13
  br label %760

760:                                              ; preds = %758, %745
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %678) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %677) #12
  br label %761

761:                                              ; preds = %760, %603
  %762 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 0, i32 2
  %763 = bitcast %"class.spvtools::opt::Instruction"** %762 to i64*
  %764 = load i64, i64* %763, align 8
  %765 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 0, i32 1
  %766 = bitcast %"class.spvtools::opt::Instruction"** %765 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %767 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %766, align 8
  %768 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %767, i64 0, i32 2
  %769 = bitcast %"class.spvtools::opt::Instruction"** %768 to i64*
  store i64 %764, i64* %769, align 8
  %770 = bitcast %"class.spvtools::opt::Instruction"** %765 to i64*
  %771 = load i64, i64* %770, align 8
  %772 = bitcast %"class.spvtools::opt::Instruction"** %762 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %773 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %772, align 8
  %774 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %773, i64 0, i32 1
  %775 = bitcast %"class.spvtools::opt::Instruction"** %774 to i64*
  store i64 %771, i64* %775, align 8
  %776 = bitcast %"class.spvtools::opt::Instruction"** %765 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %776, i8 0, i64 16, i1 false) #12
  %777 = bitcast %"class.std::__1::unique_ptr.796"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %777) #12
  %778 = getelementptr inbounds %"class.std::__1::unique_ptr.796", %"class.std::__1::unique_ptr.796"* %21, i64 0, i32 0, i32 0, i32 0
  %779 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %780 = bitcast %"class.std::__1::unique_ptr.796"* %21 to i64*
  store i64 %779, i64* %780, align 8
  %781 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %32, i64 0, i32 0, i32 0
  %782 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %781, align 8
  %783 = load i8, i8* %36, align 4, !range !2
  %784 = icmp eq i8 %783, 0
  %785 = load i8, i8* %37, align 1, !range !2
  %786 = icmp eq i8 %785, 0
  %787 = select i1 %786, i64 1, i64 2
  %788 = xor i1 %786, true
  %789 = zext i1 %788 to i64
  %790 = select i1 %784, i64 %789, i64 %787
  %791 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %782, i64 %790
  %792 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %33, align 8
  %793 = icmp eq %"struct.spvtools::opt::Operand"* %791, %792
  br i1 %793, label %815, label %794

794:                                              ; preds = %761, %812
  %795 = phi %"struct.spvtools::opt::Operand"* [ %796, %812 ], [ %792, %761 ]
  %796 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %795, i64 -1
  %797 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %795, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %797, align 8
  %798 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %795, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %799 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %798, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %798, align 8
  %800 = icmp eq %"class.std::__1::vector.324"* %799, null
  br i1 %800, label %812, label %801

801:                                              ; preds = %794
  %802 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %799, i64 0, i32 0, i32 0
  %803 = load i32*, i32** %802, align 8
  %804 = icmp eq i32* %803, null
  br i1 %804, label %810, label %805

805:                                              ; preds = %801
  %806 = ptrtoint i32* %803 to i64
  %807 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %799, i64 0, i32 0, i32 1
  %808 = bitcast i32** %807 to i64*
  store i64 %806, i64* %808, align 8
  %809 = bitcast i32* %803 to i8*
  call void @_ZdlPv(i8* %809) #13
  br label %810

810:                                              ; preds = %805, %801
  %811 = bitcast %"class.std::__1::vector.324"* %799 to i8*
  call void @_ZdlPv(i8* %811) #13
  br label %812

812:                                              ; preds = %810, %794
  %813 = icmp eq %"struct.spvtools::opt::Operand"* %796, %791
  br i1 %813, label %814, label %794

814:                                              ; preds = %812
  store %"struct.spvtools::opt::Operand"* %791, %"struct.spvtools::opt::Operand"** %33, align 8
  br label %815

815:                                              ; preds = %814, %761
  %816 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %29, align 8
  %817 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %30, align 8
  %818 = call %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector.487"* %32, %"struct.spvtools::opt::Operand"* %791, %"struct.spvtools::opt::Operand"* %816, %"struct.spvtools::opt::Operand"* %817) #12
  %819 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1267", %"class.std::__1::__function::__default_alloc_func.1267"* %23, i64 0, i32 0, i32 2
  %820 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %819, align 8
  %821 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %820, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %822 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %821, align 8, !noalias !87
  %823 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt11Instruction12InsertBeforeEONSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.spvtools::opt::Instruction"* %822, %"class.std::__1::unique_ptr.796"* nonnull dereferenceable(8) %21) #12
  %824 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1267", %"class.std::__1::__function::__default_alloc_func.1267"* %23, i64 0, i32 0, i32 3
  %825 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %824, align 8
  %826 = bitcast %"class.spvtools::opt::BasicBlock"** %819 to i64*
  %827 = load i64, i64* %826, align 8
  %828 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %828) #12
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %5, align 8
  %829 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %825, i64 0, i32 11
  %830 = load i32, i32* %829, align 8
  %831 = and i32 %830, 2
  %832 = icmp eq i32 %831, 0
  br i1 %832, label %843, label %833

833:                                              ; preds = %815
  %834 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %825, i64 0, i32 9, i32 0
  %835 = bitcast %"class.std::__1::tuple.1122"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %835) #12
  %836 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %836, align 8
  %837 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %837) #12
  %838 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %834, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1122"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %839 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %838, 0
  %840 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %839, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %837) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %835) #12
  %841 = bitcast %"struct.std::__1::__hash_node_base.115"* %840 to i64*
  store i64 %827, i64* %841, align 8
  %842 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %824, align 8
  br label %843

843:                                              ; preds = %833, %815
  %844 = phi %"class.spvtools::opt::IRContext"* [ %825, %815 ], [ %842, %833 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %828) #12
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %844, %"class.spvtools::opt::Instruction"* %1) #12
  %845 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %778, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %778, align 8
  %846 = icmp eq %"class.spvtools::opt::Instruction"* %845, null
  br i1 %846, label %852, label %847

847:                                              ; preds = %843
  %848 = bitcast %"class.spvtools::opt::Instruction"* %845 to void (%"class.spvtools::opt::Instruction"*)***
  %849 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %848, align 8
  %850 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %849, i64 1
  %851 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %850, align 8
  call void %851(%"class.spvtools::opt::Instruction"* nonnull %845) #12
  br label %852

852:                                              ; preds = %847, %843
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %777) #12
  %853 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %29, align 8
  %854 = icmp eq %"struct.spvtools::opt::Operand"* %853, null
  br i1 %854, label %884, label %855

855:                                              ; preds = %852
  %856 = bitcast %"struct.spvtools::opt::Operand"* %853 to i8*
  %857 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %30, align 8
  %858 = icmp eq %"struct.spvtools::opt::Operand"* %857, %853
  br i1 %858, label %882, label %859

859:                                              ; preds = %855, %877
  %860 = phi %"struct.spvtools::opt::Operand"* [ %861, %877 ], [ %857, %855 ]
  %861 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %860, i64 -1
  %862 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %860, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %862, align 8
  %863 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %860, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %864 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %863, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %863, align 8
  %865 = icmp eq %"class.std::__1::vector.324"* %864, null
  br i1 %865, label %877, label %866

866:                                              ; preds = %859
  %867 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %864, i64 0, i32 0, i32 0
  %868 = load i32*, i32** %867, align 8
  %869 = icmp eq i32* %868, null
  br i1 %869, label %875, label %870

870:                                              ; preds = %866
  %871 = ptrtoint i32* %868 to i64
  %872 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %864, i64 0, i32 0, i32 1
  %873 = bitcast i32** %872 to i64*
  store i64 %871, i64* %873, align 8
  %874 = bitcast i32* %868 to i8*
  call void @_ZdlPv(i8* %874) #13
  br label %875

875:                                              ; preds = %870, %866
  %876 = bitcast %"class.std::__1::vector.324"* %864 to i8*
  call void @_ZdlPv(i8* %876) #13
  br label %877

877:                                              ; preds = %875, %859
  %878 = icmp eq %"struct.spvtools::opt::Operand"* %861, %853
  br i1 %878, label %879, label %859

879:                                              ; preds = %877
  %880 = bitcast %"class.std::__1::vector.487"* %7 to i8**
  %881 = load i8*, i8** %880, align 8
  br label %882

882:                                              ; preds = %879, %855
  %883 = phi i8* [ %881, %879 ], [ %856, %855 ]
  store %"struct.spvtools::opt::Operand"* %853, %"struct.spvtools::opt::Operand"** %30, align 8
  call void @_ZdlPv(i8* %883) #13
  br label %884

884:                                              ; preds = %882, %852
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  %885 = load i32*, i32** %25, align 8
  %886 = icmp eq i32* %885, null
  br i1 %886, label %890, label %887

887:                                              ; preds = %884
  %888 = ptrtoint i32* %885 to i64
  store i64 %888, i64* %39, align 8
  %889 = bitcast i32* %885 to i8*
  call void @_ZdlPv(i8* %889) #13
  br label %890

890:                                              ; preds = %884, %887
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt11Instruction12InsertBeforeEONSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.spvtools::opt::Instruction"*, %"class.std::__1::unique_ptr.796"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.487"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.487"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.487"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.489"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #12
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.489"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #12
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %91, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.324"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.324"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple.1122", align 8
  %3 = alloca %"class.std::__1::tuple.1091", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1137", align 8
  %6 = alloca %"class.std::__1::function.1004", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.115"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.115"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.115"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  %19 = icmp eq %"struct.std::__1::__hash_node_base.115"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !94

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.803"*, %"class.std::__1::unique_ptr.803"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.803"*, %"class.std::__1::unique_ptr.803"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.803"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1004"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1004"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1137"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1004"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1137"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1137", %"class.std::__1::function.1137"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1004", %"class.std::__1::function.1004"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple.1122"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.803"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.803", %"class.std::__1::unique_ptr.803"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.815"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.803", %"class.std::__1::unique_ptr.803"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.803"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.815"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #12
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #12
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #12
  %113 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1122"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %3) #12
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #12
  %116 = bitcast %"struct.std::__1::__hash_node_base.115"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #12
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #12
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #12
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #12
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #12
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.815"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.815"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1122", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple.1122"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1122"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %21 = bitcast %"struct.std::__1::__hash_node_base.115"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.324"* dereferenceable(24), i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::vector.487", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::unique_ptr.796", align 8
  %10 = bitcast %"class.std::__1::vector.487"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #12
  %14 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %3, i64 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.324"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %5
  %21 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  %22 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.489"* %28 to i64*
  %30 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %26 to i32*
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %37 = bitcast i32** %35 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.489"* %38 to i64*
  %40 = bitcast %"struct.spvtools::opt::Operand"** %12 to i64*
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %52

44:                                               ; preds = %105, %5
  %45 = bitcast %"class.std::__1::unique_ptr.796"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.796", %"class.std::__1::unique_ptr.796"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %46, align 8
  %47 = call i8* @_Znwm(i64 112) #13
  %48 = bitcast i8* %47 to %"class.spvtools::opt::Instruction"*
  %49 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %49, align 8
  %51 = icmp eq i32 %4, 0
  br i1 %51, label %112, label %129

52:                                               ; preds = %20, %105
  %53 = phi i64 [ %18, %20 ], [ %108, %105 ]
  %54 = phi i64 [ 0, %20 ], [ %106, %105 ]
  %55 = inttoptr i64 %53 to i32*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #12
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  %57 = load i32, i32* %56, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  store i64 0, i64* %29, align 8
  store i64 1, i64* %24, align 8
  store i32 %57, i32* %30, align 8
  store i32 1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  store i64 0, i64* %34, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %36, %"struct.std::__1::aligned_storage<4, 4>::type"** %37, align 8
  store i64 0, i64* %39, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %32, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #12
  %59 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %61 = icmp ult %"struct.spvtools::opt::Operand"* %59, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 0
  %64 = load i32, i32* %31, align 8
  store i32 %64, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 1
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 2
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.489"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %32) #12
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 1
  %75 = ptrtoint %"struct.spvtools::opt::Operand"* %74 to i64
  store i64 %75, i64* %40, align 8
  br label %77

76:                                               ; preds = %52
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.487"* nonnull %6, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #12
  br label %77

77:                                               ; preds = %62, %76
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %78 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %42, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %42, align 8
  %79 = icmp eq %"class.std::__1::vector.324"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %78, i64 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32* %82 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %78, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast i32* %82 to i8*
  call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %84, %80
  %90 = bitcast %"class.std::__1::vector.324"* %78 to i8*
  call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %77, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %92 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %43, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %43, align 8
  %93 = icmp eq %"class.std::__1::vector.324"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.324"* %92 to i8*
  call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %91, %103
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #12
  %106 = add nuw i64 %54, 1
  %107 = load i64, i64* %15, align 8
  %108 = load i64, i64* %17, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %106, %110
  br i1 %111, label %52, label %44

112:                                              ; preds = %44
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %113, align 8
  %115 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %114) #12
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 2
  %119 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %119, i64 0, i32 2
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = call i8* @_Znwm(i64 48) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %124, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #12
  %125 = getelementptr inbounds i8, i8* %124, i64 37
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 1, i32 0
  %127 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %126, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 0
  call void %127(%"union.std::__1::__function::__policy_storage"* %128, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %124) #12
  call void @_ZdlPv(i8* nonnull %124) #13
  br label %129

129:                                              ; preds = %123, %117, %112, %44
  %130 = phi i32 [ %4, %44 ], [ %115, %112 ], [ 0, %117 ], [ 0, %123 ]
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %48, %"class.spvtools::opt::IRContext"* %50, i32 %2, i32 %1, i32 %130, %"class.std::__1::vector.487"* nonnull dereferenceable(24) %6) #12
  %131 = ptrtoint i8* %47 to i64
  %132 = bitcast %"class.std::__1::unique_ptr.796"* %9 to i64*
  store i64 %131, i64* %132, align 8
  %133 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.796"* nonnull dereferenceable(8) %9)
  %134 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %46, align 8
  %135 = icmp eq %"class.spvtools::opt::Instruction"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %129
  %137 = bitcast %"class.spvtools::opt::Instruction"* %134 to void (%"class.spvtools::opt::Instruction"*)***
  %138 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %138, i64 1
  %140 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %139, align 8
  call void %140(%"class.spvtools::opt::Instruction"* nonnull %134) #12
  br label %141

141:                                              ; preds = %129, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %173, label %144

144:                                              ; preds = %141
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %171, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %152, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.324"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #13
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.324"* %153 to i8*
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = bitcast %"class.std::__1::vector.487"* %6 to i8**
  %170 = load i8*, i8** %169, align 8
  br label %171

171:                                              ; preds = %168, %144
  %172 = phi i8* [ %170, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %12, align 8
  call void @_ZdlPv(i8* %172) #13
  br label %173

173:                                              ; preds = %141, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  ret %"class.spvtools::opt::Instruction"* %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.796"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1122", align 8
  %4 = alloca %"class.std::__1::tuple.1091", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.796"* dereferenceable(8) %1) #12
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple.1122"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1091", %"class.std::__1::tuple.1091"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #12
  %32 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1122"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1091"* nonnull dereferenceable(1) %4) #12
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.115"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #12
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.796"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector.487"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.spvtools::opt::Operand"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.spvtools::opt::Operand"* %2 to i64
  %8 = ptrtoint %"struct.spvtools::opt::Operand"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 48
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %250

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.487", %"class.std::__1::vector.487"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = ptrtoint %"struct.spvtools::opt::Operand"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.spvtools::opt::Operand"** %16 to i64*
  br i1 %21, label %116, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 48
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2, i64 %25
  %29 = icmp eq %"struct.spvtools::opt::Operand"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.spvtools::opt::Operand"* [ %47, %30 ], [ %17, %27 ]
  %32 = phi %"struct.spvtools::opt::Operand"* [ %46, %30 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 1
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 2
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 3, i64 0
  %42 = bitcast i32** %40 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %41, %"struct.std::__1::aligned_storage<4, 4>::type"** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 4
  %44 = bitcast %"class.std::__1::unique_ptr.489"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %36, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %37) #12
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %30
  %50 = ptrtoint %"struct.spvtools::opt::Operand"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %250

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"struct.spvtools::opt::Operand"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"struct.spvtools::opt::Operand"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"struct.spvtools::opt::Operand"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %10
  %61 = ptrtoint %"struct.spvtools::opt::Operand"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 48
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %63
  %65 = icmp ult %"struct.spvtools::opt::Operand"* %64, %17
  br i1 %65, label %83, label %68

66:                                               ; preds = %83
  %67 = ptrtoint %"struct.spvtools::opt::Operand"* %100 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %102, label %71

71:                                               ; preds = %68, %71
  %72 = phi %"struct.spvtools::opt::Operand"* [ %75, %71 ], [ %58, %68 ]
  %73 = phi %"struct.spvtools::opt::Operand"* [ %74, %71 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %74, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %75, i64 0, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1, i32 1
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1, i32 1
  %81 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %79, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %80) #12
  %82 = icmp eq %"struct.spvtools::opt::Operand"* %74, %1
  br i1 %82, label %102, label %71

83:                                               ; preds = %56, %83
  %84 = phi %"struct.spvtools::opt::Operand"* [ %100, %83 ], [ %58, %56 ]
  %85 = phi %"struct.spvtools::opt::Operand"* [ %99, %83 ], [ %64, %56 ]
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %89, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 1
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 2
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 3, i64 0
  %95 = bitcast i32** %93 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %94, %"struct.std::__1::aligned_storage<4, 4>::type"** %95, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 4
  %97 = bitcast %"class.std::__1::unique_ptr.489"* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %90) #12
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 1
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 1
  %101 = icmp ult %"struct.spvtools::opt::Operand"* %99, %17
  br i1 %101, label %83, label %66

102:                                              ; preds = %71, %68
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %59, %2
  br i1 %103, label %250, label %104

104:                                              ; preds = %102, %104
  %105 = phi %"struct.spvtools::opt::Operand"* [ %114, %104 ], [ %1, %102 ]
  %106 = phi %"struct.spvtools::opt::Operand"* [ %113, %104 ], [ %2, %102 ]
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 0
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 1
  %112 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #12
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 1
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 1
  %115 = icmp eq %"struct.spvtools::opt::Operand"* %113, %59
  br i1 %115, label %250, label %104

116:                                              ; preds = %12
  %117 = bitcast %"class.std::__1::vector.487"* %0 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %18, %118
  %120 = sdiv exact i64 %119, 48
  %121 = add nsw i64 %120, %10
  %122 = icmp ugt i64 %121, 384307168202282325
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = bitcast %"class.std::__1::vector.487"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #14
  unreachable

125:                                              ; preds = %116
  %126 = sub i64 %15, %118
  %127 = sdiv exact i64 %126, 48
  %128 = icmp ult i64 %127, 192153584101141162
  br i1 %128, label %132, label %129

129:                                              ; preds = %125
  %130 = sub i64 %5, %118
  %131 = sdiv exact i64 %130, 48
  br label %139

132:                                              ; preds = %125
  %133 = shl nsw i64 %127, 1
  %134 = icmp ult i64 %133, %121
  %135 = select i1 %134, i64 %121, i64 %133
  %136 = sub i64 %5, %118
  %137 = sdiv exact i64 %136, 48
  %138 = icmp eq i64 %135, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %132, %129
  %140 = phi i64 [ %131, %129 ], [ %137, %132 ]
  %141 = phi i64 [ 384307168202282325, %129 ], [ %135, %132 ]
  %142 = mul i64 %141, 48
  %143 = tail call i8* @_Znwm(i64 %142) #13
  %144 = bitcast i8* %143 to %"struct.spvtools::opt::Operand"*
  br label %145

145:                                              ; preds = %139, %132
  %146 = phi i64 [ %140, %139 ], [ %137, %132 ]
  %147 = phi i64 [ %141, %139 ], [ 0, %132 ]
  %148 = phi %"struct.spvtools::opt::Operand"* [ %144, %139 ], [ null, %132 ]
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %146
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %147
  %151 = ptrtoint %"struct.spvtools::opt::Operand"* %150 to i64
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 %10
  br label %153

153:                                              ; preds = %145, %153
  %154 = phi %"struct.spvtools::opt::Operand"* [ %169, %153 ], [ %149, %145 ]
  %155 = phi %"struct.spvtools::opt::Operand"* [ %170, %153 ], [ %2, %145 ]
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 0
  %158 = load i32, i32* %157, align 8
  store i32 %158, i32* %156, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 1
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %159, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 1
  store i64 0, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 2
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 3, i64 0
  %165 = bitcast i32** %163 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %164, %"struct.std::__1::aligned_storage<4, 4>::type"** %165, align 8
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 4
  %167 = bitcast %"class.std::__1::unique_ptr.489"* %166 to i64*
  store i64 0, i64* %167, align 8
  %168 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %159, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %160) #12
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 1
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 1
  %171 = icmp eq %"struct.spvtools::opt::Operand"* %152, %169
  br i1 %171, label %172, label %153

172:                                              ; preds = %153
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  %174 = icmp eq %"struct.spvtools::opt::Operand"* %173, %1
  br i1 %174, label %194, label %175

175:                                              ; preds = %172, %175
  %176 = phi %"struct.spvtools::opt::Operand"* [ %192, %175 ], [ %149, %172 ]
  %177 = phi %"struct.spvtools::opt::Operand"* [ %178, %175 ], [ %1, %172 ]
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 0
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 0
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %179, align 8
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1, i32 1
  %184 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %182, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 1
  store i64 0, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 2
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 3, i64 0
  %188 = bitcast i32** %186 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %187, %"struct.std::__1::aligned_storage<4, 4>::type"** %188, align 8
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 4
  %190 = bitcast %"class.std::__1::unique_ptr.489"* %189 to i64*
  store i64 0, i64* %190, align 8
  %191 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %182, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %183) #12
  %192 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1
  %193 = icmp eq %"struct.spvtools::opt::Operand"* %178, %173
  br i1 %193, label %194, label %175

194:                                              ; preds = %175, %172
  %195 = phi %"struct.spvtools::opt::Operand"* [ %149, %172 ], [ %192, %175 ]
  %196 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %197 = icmp eq %"struct.spvtools::opt::Operand"* %196, %1
  br i1 %197, label %219, label %198

198:                                              ; preds = %194, %198
  %199 = phi %"struct.spvtools::opt::Operand"* [ %215, %198 ], [ %152, %194 ]
  %200 = phi %"struct.spvtools::opt::Operand"* [ %214, %198 ], [ %1, %194 ]
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 0
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  store i32 %203, i32* %201, align 8
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 1
  %206 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %204, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 1
  store i64 0, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 2
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 3, i64 0
  %210 = bitcast i32** %208 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %209, %"struct.std::__1::aligned_storage<4, 4>::type"** %210, align 8
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 4
  %212 = bitcast %"class.std::__1::unique_ptr.489"* %211 to i64*
  store i64 0, i64* %212, align 8
  %213 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %204, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %205) #12
  %214 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 1
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 1
  %216 = icmp eq %"struct.spvtools::opt::Operand"* %214, %196
  br i1 %216, label %217, label %198

217:                                              ; preds = %198
  %218 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  br label %219

219:                                              ; preds = %194, %217
  %220 = phi %"struct.spvtools::opt::Operand"* [ %218, %217 ], [ %1, %194 ]
  %221 = phi %"struct.spvtools::opt::Operand"* [ %215, %217 ], [ %152, %194 ]
  %222 = ptrtoint %"struct.spvtools::opt::Operand"* %195 to i64
  %223 = ptrtoint %"struct.spvtools::opt::Operand"* %221 to i64
  %224 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  store i64 %222, i64* %117, align 8
  store i64 %223, i64* %22, align 8
  store i64 %151, i64* %14, align 8
  %225 = icmp eq %"struct.spvtools::opt::Operand"* %220, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %219, %244
  %227 = phi %"struct.spvtools::opt::Operand"* [ %228, %244 ], [ %220, %219 ]
  %228 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1
  %229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %231 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %230, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %230, align 8
  %232 = icmp eq %"class.std::__1::vector.324"* %231, null
  br i1 %232, label %244, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %231, i64 0, i32 0, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = icmp eq i32* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %233
  %238 = ptrtoint i32* %235 to i64
  %239 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %231, i64 0, i32 0, i32 1
  %240 = bitcast i32** %239 to i64*
  store i64 %238, i64* %240, align 8
  %241 = bitcast i32* %235 to i8*
  tail call void @_ZdlPv(i8* %241) #13
  br label %242

242:                                              ; preds = %237, %233
  %243 = bitcast %"class.std::__1::vector.324"* %231 to i8*
  tail call void @_ZdlPv(i8* %243) #13
  br label %244

244:                                              ; preds = %242, %226
  %245 = icmp eq %"struct.spvtools::opt::Operand"* %228, %224
  br i1 %245, label %246, label %226

246:                                              ; preds = %244, %219
  %247 = icmp eq %"struct.spvtools::opt::Operand"* %224, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = bitcast %"struct.spvtools::opt::Operand"* %224 to i8*
  tail call void @_ZdlPv(i8* %249) #13
  br label %250

250:                                              ; preds = %104, %248, %246, %51, %102, %4
  %251 = phi %"struct.spvtools::opt::Operand"* [ %1, %4 ], [ %1, %102 ], [ %1, %51 ], [ %149, %246 ], [ %149, %248 ], [ %1, %104 ]
  ret %"struct.spvtools::opt::Operand"* %251
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.324"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.489", %"class.std::__1::unique_ptr.489"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.324"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.324"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.324"* nonnull %8, i32* %15, i32* %17) #12
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.324"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #14
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #13
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #12
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.489"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.324"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.324"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.324"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.324"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.324"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.324"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.324"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.324"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #13, !noalias !95
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS8_10BasicBlockEE4$_12S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::BasicBlock"**
  %5 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %14) #12
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ %15, %11 ], [ 0, %2 ]
  %18 = icmp eq i32 %3, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %21 = bitcast [8 x i8]* %20 to i32*
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %1, align 4
  br label %23

23:                                               ; preds = %16, %19
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!9 = distinct !{!9, !10, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!14 = distinct !{!14, !15, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!19 = distinct !{!19, !20, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!23 = distinct !{!23, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!26 = distinct !{!26, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!29 = distinct !{!29, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!33 = distinct !{!33, !5}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!37 = distinct !{!37, !5}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!41 = distinct !{!41, !5}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!45 = distinct !{!45, !5}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_"}
!49 = distinct !{!49, !5}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_ISZ_EEEEEEmOT_DpOT0_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_ISZ_EEEEEEmOT_DpOT0_"}
!56 = distinct !{!56, !5}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNSt3__14listIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__14listIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!60 = !{!61, !63}
!61 = distinct !{!61, !62, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!63 = distinct !{!63, !64, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS5_10BasicBlockERKNS_8functionIFvS8_EEEE3$_6FbS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!67 = distinct !{!67, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_ISS_EEEEEEmOT_DpOT0_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS6_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS6_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_ISY_EEEEEEmOT_DpOT0_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!74 = distinct !{!74, !5}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!77 = distinct !{!77, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!78 = distinct !{!78, !79, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG25ComputePostOrderTraversalEPNS5_10BasicBlockEPNS_6vectorIS8_NS_9allocatorIS8_EEEEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EESB_EEE3$_8FbjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!80 = !{!81, !83, !85}
!81 = distinct !{!81, !82, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!82 = distinct !{!82, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!83 = distinct !{!83, !84, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!84 = distinct !{!84, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!85 = distinct !{!85, !86, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!86 = distinct !{!86, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!87 = !{!88, !90, !92}
!88 = distinct !{!88, !89, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!89 = distinct !{!89, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!90 = distinct !{!90, !91, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!91 = distinct !{!91, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!92 = distinct !{!92, !93, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!93 = distinct !{!93, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!94 = distinct !{!94, !5}
!95 = !{!96, !98}
!96 = distinct !{!96, !97, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!98 = distinct !{!98, !99, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!99 = distinct !{!99, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt3CFG15SplitLoopHeaderEPNS5_10BasicBlockEE4$_11FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
