; ModuleID = '../../third_party/libgav1/src/src/post_filter/super_res.cc'
source_filename = "../../third_party/libgav1/src/src/post_filter/super_res.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.libgav1::PostFilter" = type <{ [2 x { i64, i64 }], %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::dsp::Dsp"*, i32, i32, i32, i32, i8, [3 x i8], [3 x i8], i8, i32, [4 x i8], i8*, i8*, i8, [8 x [4 x [8 x [2 x i8]]]], [3 x i8], [3 x %struct.anon], %"class.libgav1::Array2D.23"*, %"class.libgav1::Array2D.31"*, %"class.libgav1::LoopRestorationInfo"*, [2 x i8*], %"class.libgav1::YuvBuffer"*, %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"*, [3 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"*, i8, [7 x i8], %"class.libgav1::ThreadPool"*, i32, [9248 x i16], [4 x i8] }>
%"struct.libgav1::ObuFrameHeader" = type { i16, i16, i64, [7 x i16], i32, i32, i32, i32, i32, i32, i32, %"struct.libgav1::LoopRestoration", [32 x i32], i32, %"struct.std::__1::array", %"struct.libgav1::TileInfo", %"struct.libgav1::QuantizerParameters", %"struct.libgav1::Segmentation", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, %"struct.libgav1::Delta", %"struct.libgav1::Delta", [7 x i8], [8 x i8], %"struct.libgav1::LoopFilter", %"struct.libgav1::Cdef", %"struct.libgav1::FilmGrainParams" }
%"struct.libgav1::LoopRestoration" = type { [3 x i8], [3 x i32] }
%"struct.std::__1::array" = type { [8 x %"struct.libgav1::GlobalMotion"] }
%"struct.libgav1::GlobalMotion" = type { i8, [6 x i32], i16, i16, i16, i16 }
%"struct.libgav1::TileInfo" = type { i8, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32, [65 x i32], [65 x i32], i16, i8 }
%"struct.libgav1::QuantizerParameters" = type { i8, [3 x i8], [3 x i8], i8, [3 x i8] }
%"struct.libgav1::Segmentation" = type { i8, i8, i8, i8, i8, i8, [8 x [8 x i8]], [8 x [8 x i16]], [8 x i8], [8 x i8] }
%"struct.libgav1::Delta" = type { i8, i8, i8 }
%"struct.libgav1::LoopFilter" = type { %"struct.std::__1::array.0", i8, i8, i8, %"struct.std::__1::array.1", %"struct.std::__1::array.2" }
%"struct.std::__1::array.0" = type { [4 x i8] }
%"struct.std::__1::array.1" = type { [8 x i8] }
%"struct.std::__1::array.2" = type { [2 x i8] }
%"struct.libgav1::Cdef" = type { i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x i8] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array.3", %"struct.std::__1::array.1", %"struct.std::__1::array.1", %"struct.std::__1::array.4", %"struct.std::__1::array.5", %"class.libgav1::Array2D", %"class.libgav1::Array2D.7" }
%"struct.std::__1::array.3" = type { [8 x i8] }
%"struct.std::__1::array.4" = type { [8 x i8] }
%"struct.std::__1::array.5" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"class.libgav1::Array2D.7" = type { %"class.std::__1::unique_ptr.8", i64, i64, %"class.libgav1::Array2DView.14" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon }
%union.anon = type { i32 }
%"class.libgav1::Array2DView.14" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.7", %"class.libgav1::Array2D.15" }
%"class.libgav1::Array2D.15" = type { %"class.std::__1::unique_ptr.16", i64, i64, %"class.libgav1::Array2DView.22" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i8* }
%"class.libgav1::Array2DView.22" = type { i32, i32, i8* }
%"union.libgav1::CompoundMotionVector" = type { i64 }
%struct.anon = type { i32, i32, i32 }
%"class.libgav1::Array2D.23" = type { %"class.std::__1::unique_ptr.24", i64, i64, %"class.libgav1::Array2DView.30" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i16* }
%"class.libgav1::Array2DView.30" = type { i32, i32, i16* }
%"class.libgav1::Array2D.31" = type { %"class.std::__1::unique_ptr.32", i64, i64, %"class.libgav1::Array2DView.38" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i8* }
%"class.libgav1::Array2DView.38" = type { i32, i32, i8* }
%"class.libgav1::LoopRestorationInfo" = type { [3 x %"struct.libgav1::RestorationUnitInfo"*], %"class.libgav1::DynamicBuffer", [3 x i8], %"struct.libgav1::LoopRestoration"*, i8, i8, [3 x i32], [3 x i32], [3 x i32] }
%"class.libgav1::DynamicBuffer" = type { %"class.std::__1::unique_ptr.39", i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.libgav1::RestorationUnitInfo"* }
%"class.libgav1::BlockParametersHolder" = type { i32, i32, %"class.libgav1::DynamicBuffer.51", %"struct.std::__1::atomic", %"class.libgav1::Array2D.60" }
%"class.libgav1::DynamicBuffer.51" = type { %"class.std::__1::unique_ptr.52", i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::unique_ptr.55"* }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.libgav1::BlockParameters"* }
%"struct.libgav1::BlockParameters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x i8], [4 x i8], %"union.libgav1::CompoundMotionVector", %"struct.libgav1::PaletteModeInfo", %"class.std::__1::unique_ptr.64" }
%"struct.libgav1::PaletteModeInfo" = type { [2 x i8], [3 x [8 x i16]] }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.libgav1::PredictionParameters"* }
%"struct.libgav1::PredictionParameters" = type { i8, i8, [2 x i32], i8, i8, i32, i32, [2 x %"class.libgav1::Array2D.67"], i8, i8, i8, i32, i32, i8, i8, i8, %union.anon.69, [8 x i16], i32, i32, i32, [2 x %"struct.libgav1::MotionVector"], i32, [8 x [4 x i32]] }
%"class.libgav1::Array2D.67" = type { %"class.std::__1::unique_ptr.45", i64, i64, %"class.libgav1::Array2DView.68" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i8* }
%"class.libgav1::Array2DView.68" = type { i32, i32, i8* }
%union.anon.69 = type { [8 x %"union.libgav1::CompoundMotionVector"] }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.libgav1::Array2D.60" = type { %"class.std::__1::unique_ptr.61", i64, i64, %"class.libgav1::Array2DView.76" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.libgav1::BlockParameters"** }
%"class.libgav1::Array2DView.76" = type { i32, i32, %"struct.libgav1::BlockParameters"** }
%"class.libgav1::YuvBuffer" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i8], [3 x i8*], %"class.std::__1::unique_ptr.45", i64, i8, i8, [6 x i8] }>
%"class.libgav1::ThreadPool" = type { %"class.libgav1::Executor", %"class.std::__1::condition_variable", %"class.std::__1::mutex", %"class.libgav1::UnboundedQueue", %"class.std::__1::unique_ptr.81", i8, i32, [16 x i8] }
%"class.libgav1::Executor" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.77, %union.anon.79, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.77 = type { i64 }
%union.anon.79 = type { i64 }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.libgav1::UnboundedQueue" = type { %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64, %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64 }
%"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.libgav1::ThreadPool::WorkerThread"** }
%"class.libgav1::ThreadPool::WorkerThread" = type opaque
%"struct.std::__1::array.88" = type { [3 x i32] }
%"struct.std::__1::array.87" = type { [3 x i8*] }
%"class.std::__1::unique_lock" = type <{ %"class.std::__1::mutex"*, i8, [7 x i8] }>
%"class.libgav1::BlockingCounterImpl" = type <{ %"class.std::__1::mutex", %"class.std::__1::condition_variable", i32, i8, [3 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%class.anon = type { %"class.libgav1::PostFilter"*, %"struct.std::__1::array.87", %"struct.std::__1::array.88", i32, %"struct.std::__1::array.87", %"class.libgav1::BlockingCounterImpl"* }

@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter13ApplySuperResERKNSt3__15arrayIPhLm3EEERKNS2_IiLm3EEEiS6_b(%"class.libgav1::PostFilter"* readonly, %"struct.std::__1::array.87"* nocapture readonly dereferenceable(24), %"struct.std::__1::array.88"* nocapture readonly dereferenceable(12), i32, %"struct.std::__1::array.87"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  %10 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 33
  %11 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 3
  %12 = icmp sgt i32 %3, -1
  %13 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 24
  %14 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  br label %15

15:                                               ; preds = %152, %6
  %16 = phi i64 [ %153, %152 ], [ 0, %6 ]
  %17 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %7, align 8
  %18 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %17, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = shl i32 %19, 2
  %21 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %16
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = ashr i32 %20, %23
  %25 = load i8, i8* %8, align 8
  %26 = icmp sgt i8 %25, 9
  %27 = getelementptr inbounds %"struct.std::__1::array.87", %"struct.std::__1::array.87"* %1, i64 0, i32 0, i64 %16
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::array.87", %"struct.std::__1::array.87"* %4, i64 0, i32 0, i64 %16
  %30 = load i8*, i8** %29, align 8
  br i1 %26, label %31, label %95

31:                                               ; preds = %15
  %32 = bitcast i8* %30 to i16*
  %33 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %9, align 8
  %34 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %33, i64 0, i32 11, i64 %16
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = lshr i64 %36, 1
  br i1 %5, label %38, label %44

38:                                               ; preds = %31
  %39 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %10, align 8
  %40 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %39, i64 0, i32 11, i64 %16
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = lshr i64 %42, 1
  br label %44

44:                                               ; preds = %31, %38
  %45 = phi i64 [ %37, %31 ], [ %43, %38 ]
  %46 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %2, i64 0, i32 0, i64 %16
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %63

49:                                               ; preds = %44
  %50 = load %"struct.libgav1::dsp::Dsp"*, %"struct.libgav1::dsp::Dsp"** %11, align 8
  %51 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %50, i64 0, i32 26
  %52 = load void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)** %51, align 8
  %53 = icmp ne i64 %16, 0
  %54 = zext i1 %53 to i64
  %55 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 23, i64 %54
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 2
  %62 = load i32, i32* %61, align 4
  tail call void %52(i8* %56, i8* %28, i64 %37, i32 %47, i32 %24, i32 %58, i32 %60, i32 %62, i8* %30, i64 %45) #6
  br label %63

63:                                               ; preds = %49, %44
  br i1 %12, label %64, label %152

64:                                               ; preds = %63
  %65 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %13, align 8
  %66 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %65, i64 0, i32 13, i64 %16
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %65, i64 0, i32 11, i64 %16
  %69 = load i32, i32* %68, align 4
  %70 = mul nsw i32 %69, %3
  %71 = sext i32 %70 to i64
  %72 = lshr i64 %71, 1
  %73 = getelementptr inbounds i8, i8* %67, i64 8
  %74 = bitcast i8* %73 to i16*
  %75 = getelementptr inbounds i16, i16* %74, i64 %72
  %76 = load %"struct.libgav1::dsp::Dsp"*, %"struct.libgav1::dsp::Dsp"** %11, align 8
  %77 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %76, i64 0, i32 26
  %78 = load void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)** %77, align 8
  %79 = icmp ne i64 %16, 0
  %80 = zext i1 %79 to i64
  %81 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 23, i64 %80
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast i16* %75 to i8*
  %84 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = load i32, i32* %46, align 4
  %91 = sext i32 %90 to i64
  %92 = mul nsw i64 %45, %91
  %93 = getelementptr inbounds i16, i16* %32, i64 %92
  %94 = bitcast i16* %93 to i8*
  tail call void %78(i8* %82, i8* %83, i64 0, i32 1, i32 %24, i32 %85, i32 %87, i32 %89, i8* %94, i64 0) #6
  br label %152

95:                                               ; preds = %15
  %96 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %9, align 8
  %97 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %96, i64 0, i32 11, i64 %16
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  br i1 %5, label %100, label %105

100:                                              ; preds = %95
  %101 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %10, align 8
  %102 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %101, i64 0, i32 11, i64 %16
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  br label %105

105:                                              ; preds = %95, %100
  %106 = phi i64 [ %99, %95 ], [ %104, %100 ]
  %107 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %2, i64 0, i32 0, i64 %16
  %108 = load i32, i32* %107, align 4
  %109 = icmp sgt i32 %108, 0
  br i1 %109, label %110, label %124

110:                                              ; preds = %105
  %111 = load %"struct.libgav1::dsp::Dsp"*, %"struct.libgav1::dsp::Dsp"** %11, align 8
  %112 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %111, i64 0, i32 26
  %113 = load void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)** %112, align 8
  %114 = icmp ne i64 %16, 0
  %115 = zext i1 %114 to i64
  %116 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 23, i64 %115
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 2
  %123 = load i32, i32* %122, align 4
  tail call void %113(i8* %117, i8* %28, i64 %99, i32 %108, i32 %24, i32 %119, i32 %121, i32 %123, i8* %30, i64 %106) #6
  br label %124

124:                                              ; preds = %110, %105
  br i1 %12, label %125, label %152

125:                                              ; preds = %124
  %126 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %13, align 8
  %127 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %126, i64 0, i32 13, i64 %16
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %126, i64 0, i32 11, i64 %16
  %130 = load i32, i32* %129, align 4
  %131 = mul nsw i32 %130, %3
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %128, i64 4
  %134 = getelementptr inbounds i8, i8* %133, i64 %132
  %135 = load %"struct.libgav1::dsp::Dsp"*, %"struct.libgav1::dsp::Dsp"** %11, align 8
  %136 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %135, i64 0, i32 26
  %137 = load void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)** %136, align 8
  %138 = icmp ne i64 %16, 0
  %139 = zext i1 %138 to i64
  %140 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 23, i64 %139
  %141 = load i8*, i8** %140, align 8
  %142 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %16, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = load i32, i32* %107, align 4
  %149 = sext i32 %148 to i64
  %150 = mul nsw i64 %106, %149
  %151 = getelementptr inbounds i8, i8* %30, i64 %150
  tail call void %137(i8* %141, i8* %134, i64 0, i32 1, i32 %24, i32 %143, i32 %145, i32 %147, i8* %151, i64 0) #6
  br label %152

152:                                              ; preds = %124, %125, %63, %64
  %153 = add nuw nsw i64 %16, 1
  %154 = load i8, i8* %14, align 1
  %155 = sext i8 %154 to i64
  %156 = icmp slt i64 %153, %155
  br i1 %156, label %15, label %157

157:                                              ; preds = %152
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter32ApplySuperResForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"* readonly, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::array.87", align 8
  %6 = alloca %"struct.std::__1::array.87", align 8
  %7 = alloca %"struct.std::__1::array.88", align 4
  %8 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  %9 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %8, align 8
  %10 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 34
  %11 = load i8, i8* %10, align 8
  %12 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 55, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 55, i32 2, i64 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 55, i32 3, i64 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 55, i32 4, i64 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 55, i32 5, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %4, %15, %19, %23, %27
  %32 = and i8 %11, 2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %31, %27
  %35 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 2
  %36 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %35, align 8
  %37 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 1
  %40 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %36, i64 0, i32 0, i64 0
  %41 = load i8, i8* %40, align 4
  %42 = icmp ne i8 %41, 0
  br i1 %39, label %43, label %47

43:                                               ; preds = %34
  %44 = and i8 %11, 8
  %45 = icmp ne i8 %44, 0
  %46 = and i1 %45, %42
  br i1 %46, label %59, label %60

47:                                               ; preds = %34
  br i1 %42, label %56, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %36, i64 0, i32 0, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %36, i64 0, i32 0, i64 2
  %54 = load i8, i8* %53, align 2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %47, %48, %52
  %57 = and i8 %11, 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56, %43
  br label %60

60:                                               ; preds = %56, %31, %52, %59, %43
  %61 = phi i32 [ 0, %31 ], [ 2, %59 ], [ 0, %56 ], [ 0, %43 ], [ 0, %52 ]
  %62 = bitcast %"struct.std::__1::array.87"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #6
  %63 = bitcast %"struct.std::__1::array.87"* %6 to i8*
  %64 = bitcast %"struct.std::__1::array.87"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #6
  %65 = bitcast %"struct.std::__1::array.88"* %7 to i8*
  %66 = bitcast %"struct.std::__1::array.87"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %65) #6
  %67 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %7, i64 0, i32 0, i64 0
  store i32 -1431655766, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %7, i64 0, i32 0, i64 1
  store i32 -1431655766, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %7, i64 0, i32 0, i64 2
  store i32 -1431655766, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 7
  %71 = load i32, i32* %70, align 4
  %72 = sub nsw i32 %71, %1
  %73 = icmp slt i32 %72, %2
  %74 = select i1 %73, i32 %72, i32 %2
  %75 = select i1 %3, i32 0, i32 2
  %76 = sub nsw i32 %74, %75
  %77 = icmp sgt i32 %1, 0
  %78 = shl i32 %1, 2
  br i1 %77, label %87, label %79

79:                                               ; preds = %60
  %80 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  %81 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %80, align 8
  %82 = shl i32 %76, 2
  %83 = select i1 %3, i32 0, i32 %61
  %84 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i64
  br label %123

87:                                               ; preds = %60
  %88 = add i32 %78, -8
  %89 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  %90 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %89, align 8
  %91 = shl i32 %76, 2
  %92 = select i1 %3, i32 0, i32 %61
  %93 = sub nsw i32 %92, %61
  %94 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  %95 = load i8, i8* %94, align 1
  %96 = sext i8 %95 to i64
  br label %97

97:                                               ; preds = %87, %97
  %98 = phi i64 [ 0, %87 ], [ %121, %97 ]
  %99 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = ashr i32 %88, %101
  %103 = add nsw i32 %102, %61
  %104 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %90, i64 0, i32 11, i64 %98
  %105 = load i32, i32* %104, align 4
  %106 = mul nsw i32 %103, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 29, i64 %98
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 %107
  %111 = getelementptr inbounds %"struct.std::__1::array.87", %"struct.std::__1::array.87"* %5, i64 0, i32 0, i64 %98
  store i8* %110, i8** %111, align 8
  %112 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %98
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 %107
  %115 = getelementptr inbounds %"struct.std::__1::array.87", %"struct.std::__1::array.87"* %6, i64 0, i32 0, i64 %98
  store i8* %114, i8** %115, align 8
  %116 = lshr i32 8, %101
  %117 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %7, i64 0, i32 0, i64 %98
  %118 = ashr i32 %91, %101
  %119 = add i32 %93, %116
  %120 = add i32 %119, %118
  store i32 %120, i32* %117, align 4
  %121 = add nuw nsw i64 %98, 1
  %122 = icmp slt i64 %121, %96
  br i1 %122, label %97, label %146

123:                                              ; preds = %79, %123
  %124 = phi i64 [ 0, %79 ], [ %144, %123 ]
  %125 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = sext i8 %126 to i32
  %128 = ashr i32 %78, %127
  %129 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %81, i64 0, i32 11, i64 %124
  %130 = load i32, i32* %129, align 4
  %131 = mul nsw i32 %128, %130
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 29, i64 %124
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 %132
  %136 = getelementptr inbounds %"struct.std::__1::array.87", %"struct.std::__1::array.87"* %5, i64 0, i32 0, i64 %124
  store i8* %135, i8** %136, align 8
  %137 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %124
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %132
  %140 = getelementptr inbounds %"struct.std::__1::array.87", %"struct.std::__1::array.87"* %6, i64 0, i32 0, i64 %124
  store i8* %139, i8** %140, align 8
  %141 = ashr i32 %82, %127
  %142 = add nsw i32 %141, %83
  %143 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %7, i64 0, i32 0, i64 %124
  store i32 %142, i32* %143, align 4
  %144 = add nuw nsw i64 %124, 1
  %145 = icmp slt i64 %144, %86
  br i1 %145, label %123, label %146

146:                                              ; preds = %123, %97
  call void @_ZN7libgav110PostFilter13ApplySuperResERKNSt3__15arrayIPhLm3EEERKNS2_IiLm3EEEiS6_b(%"class.libgav1::PostFilter"* %0, %"struct.std::__1::array.87"* nonnull dereferenceable(24) %5, %"struct.std::__1::array.88"* nonnull dereferenceable(12) %7, i32 -1, %"struct.std::__1::array.87"* nonnull dereferenceable(24) %6, i1 zeroext false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %65) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter21ApplySuperResThreadedEv(%"class.libgav1::PostFilter"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_lock", align 8
  %3 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %4 = alloca %"struct.std::__1::array.87", align 8
  %5 = alloca %"struct.std::__1::array.87", align 8
  %6 = alloca %"struct.std::__1::array.88", align 4
  %7 = alloca %"class.std::__1::function", align 8
  %8 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 36
  %9 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %8, align 8
  %10 = tail call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* %9) #6
  %11 = add nsw i32 %10, 1
  %12 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = sdiv i32 %13, %11
  %15 = icmp sgt i32 %14, 1
  %16 = select i1 %15, i32 %14, i32 1
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp ne i8 %21, 0
  %23 = zext i1 %22 to i32
  %24 = add nuw nsw i32 %16, %23
  br label %25

25:                                               ; preds = %19, %1
  %26 = phi i32 [ %16, %1 ], [ %24, %19 ]
  %27 = sdiv i32 %13, %26
  %28 = icmp slt i32 %27, 1
  %29 = icmp sgt i32 %27, %11
  %30 = select i1 %29, i32 %11, i32 %27
  %31 = select i1 %28, i32 1, i32 %30
  %32 = add nsw i32 %31, -1
  %33 = mul nsw i32 %32, %26
  %34 = sub nsw i32 %13, %33
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp ne i8 %39, 0
  %41 = zext i1 %40 to i32
  %42 = add nsw i32 %34, %41
  br label %43

43:                                               ; preds = %37, %25
  %44 = phi i32 [ %34, %25 ], [ %42, %37 ]
  %45 = bitcast %"class.libgav1::BlockingCounterImpl"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %45) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 96, i1 false)
  %46 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 88, i1 false) #6
  store i32 %32, i32* %46, align 8
  %47 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %3, i64 0, i32 3
  store i8 0, i8* %47, align 4
  %48 = icmp sgt i32 %31, 0
  br i1 %48, label %49, label %66

49:                                               ; preds = %43
  %50 = bitcast %"struct.std::__1::array.87"* %4 to i8*
  %51 = bitcast %"struct.std::__1::array.87"* %5 to i8*
  %52 = bitcast %"struct.std::__1::array.88"* %6 to i8*
  %53 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %6, i64 0, i32 0, i64 0
  %54 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %6, i64 0, i32 0, i64 1
  %55 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %6, i64 0, i32 0, i64 2
  %56 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 12
  %57 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  %58 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  %59 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 24
  %60 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  %61 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 2
  %63 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"struct.std::__1::array.87"* %4 to i8*
  %65 = bitcast %"struct.std::__1::array.87"* %5 to i8*
  br label %85

66:                                               ; preds = %164, %43
  %67 = bitcast %"class.std::__1::unique_lock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #6
  %68 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 1
  %70 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %3, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 16, i1 false) #6
  store %"class.std::__1::mutex"* %70, %"class.std::__1::mutex"** %68, align 8
  store i8 1, i8* %69, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %70) #6
  %71 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %3, i64 0, i32 1
  %72 = load i32, i32* %46, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %66, %74
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %71, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %2) #6
  %75 = load i32, i32* %46, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %74

77:                                               ; preds = %74
  %78 = load i8, i8* %69, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %68, align 8
  br label %82

82:                                               ; preds = %80, %66
  %83 = phi %"class.std::__1::mutex"* [ %81, %80 ], [ %70, %66 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %83) #6
  br label %84

84:                                               ; preds = %77, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #6
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %71) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %45) #6
  ret void

85:                                               ; preds = %164, %49
  %86 = phi i32 [ 0, %49 ], [ %165, %164 ]
  %87 = phi i32 [ 0, %49 ], [ %166, %164 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %52) #6
  store i32 -1431655766, i32* %53, align 4
  store i32 -1431655766, i32* %54, align 4
  store i32 -1431655766, i32* %55, align 4
  %88 = load i32, i32* %56, align 8
  %89 = icmp slt i32 %86, %32
  %90 = select i1 %89, i32 %26, i32 %44
  %91 = shl i32 4, %88
  %92 = sext i32 %91 to i64
  br label %93

93:                                               ; preds = %93, %85
  %94 = phi i64 [ %137, %93 ], [ 0, %85 ]
  %95 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 29, i64 %94
  %96 = load i8*, i8** %95, align 8
  %97 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %57, align 8
  %98 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %97, i64 0, i32 11, i64 %94
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %94
  %101 = load i8, i8* %100, align 1
  %102 = sext i8 %101 to i32
  %103 = ashr i32 %87, %102
  %104 = mul nsw i32 %103, %99
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %96, i64 %105
  %107 = getelementptr inbounds %"struct.std::__1::array.87", %"struct.std::__1::array.87"* %4, i64 0, i32 0, i64 %94
  store i8* %106, i8** %107, align 8
  %108 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %94
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 %105
  %111 = getelementptr inbounds %"struct.std::__1::array.87", %"struct.std::__1::array.87"* %5, i64 0, i32 0, i64 %94
  store i8* %110, i8** %111, align 8
  %112 = ashr i32 %90, %102
  %113 = add nsw i32 %112, -1
  %114 = getelementptr inbounds %"struct.std::__1::array.88", %"struct.std::__1::array.88"* %6, i64 0, i32 0, i64 %94
  store i32 %113, i32* %114, align 4
  %115 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %58, align 8
  %116 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %115, i64 0, i32 6
  %117 = load i32, i32* %116, align 8
  %118 = shl i32 %117, 2
  %119 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %94
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = ashr i32 %118, %121
  %123 = mul nsw i32 %113, %99
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %106, i64 %124
  %126 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %59, align 8
  %127 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %126, i64 0, i32 13, i64 %94
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %126, i64 0, i32 11, i64 %94
  %130 = load i32, i32* %129, align 4
  %131 = mul nsw i32 %130, %86
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %128, i64 %92
  %134 = getelementptr inbounds i8, i8* %133, i64 %132
  %135 = shl i32 %122, %88
  %136 = sext i32 %135 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %134, i8* align 1 %125, i64 %136, i1 false)
  %137 = add nuw nsw i64 %94, 1
  %138 = load i8, i8* %60, align 1
  %139 = sext i8 %138 to i64
  %140 = icmp slt i64 %137, %139
  br i1 %140, label %93, label %141

141:                                              ; preds = %93
  br i1 %89, label %142, label %163

142:                                              ; preds = %141
  %143 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %8, align 8
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %61, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %62, align 8
  %144 = call i8* @_Znwm(i64 80) #7, !noalias !3
  %145 = bitcast i8* %144 to %"class.libgav1::PostFilter"**
  store %"class.libgav1::PostFilter"* %0, %"class.libgav1::PostFilter"** %145, align 8
  %146 = getelementptr inbounds i8, i8* %144, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* nonnull align 8 %50, i64 24, i1 false)
  %147 = getelementptr inbounds i8, i8* %144, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* nonnull align 4 %52, i64 12, i1 false)
  %148 = getelementptr inbounds i8, i8* %144, i64 44
  %149 = bitcast i8* %148 to i32*
  store i32 %86, i32* %149, align 4
  %150 = getelementptr inbounds i8, i8* %144, i64 48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* nonnull align 8 %51, i64 24, i1 false)
  %151 = getelementptr inbounds i8, i8* %144, i64 72
  %152 = bitcast i8* %151 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %3, %"class.libgav1::BlockingCounterImpl"** %152, align 8
  store i8* %144, i8** %63, align 8
  %153 = bitcast %"class.libgav1::ThreadPool"* %143 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %154 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %154, i64 2
  %156 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %155, align 8
  call void %156(%"class.libgav1::ThreadPool"* %143, %"class.std::__1::function"* nonnull %7) #6
  %157 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %62, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %157, i64 0, i32 1
  %159 = load void (i8*)*, void (i8*)** %158, align 8
  %160 = icmp eq void (i8*)* %159, null
  br i1 %160, label %164, label %161

161:                                              ; preds = %142
  %162 = load i8*, i8** %63, align 8
  call void %159(i8* %162) #6
  br label %164

163:                                              ; preds = %141
  call void @_ZN7libgav110PostFilter13ApplySuperResERKNSt3__15arrayIPhLm3EEERKNS2_IiLm3EEEiS6_b(%"class.libgav1::PostFilter"* %0, %"struct.std::__1::array.87"* nonnull dereferenceable(24) %4, %"struct.std::__1::array.88"* nonnull dereferenceable(12) %6, i32 %86, %"struct.std::__1::array.87"* nonnull dereferenceable(24) %5, i1 zeroext false)
  br label %164

164:                                              ; preds = %161, %142, %163
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %52) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #6
  %165 = add nuw nsw i32 %86, 1
  %166 = add nsw i32 %87, %26
  %167 = icmp eq i32 %165, %31
  br i1 %167, label %66, label %85
}

declare i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %3 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.libgav1::PostFilter"*, %"class.libgav1::PostFilter"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 4
  tail call void @_ZN7libgav110PostFilter13ApplySuperResERKNSt3__15arrayIPhLm3EEERKNS2_IiLm3EEEiS6_b(%"class.libgav1::PostFilter"* %5, %"struct.std::__1::array.87"* dereferenceable(24) %6, %"struct.std::__1::array.88"* dereferenceable(12) %7, i32 %9, %"struct.std::__1::array.87"* dereferenceable(24) %10, i1 zeroext false) #6
  %11 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 5
  %12 = load %"class.libgav1::BlockingCounterImpl"*, %"class.libgav1::BlockingCounterImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %12, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %13) #6
  %14 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %12, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, -1
  store i32 %16, i32* %14, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %12, i64 0, i32 1
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %19) #6
  br label %20

20:                                               ; preds = %1, %18
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %13) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #3

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 80) #7, !noalias !8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 80, i1 false) #6
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16)) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!6 = distinct !{!6, !7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!11 = distinct !{!11, !12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter21ApplySuperResThreadedEvE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
