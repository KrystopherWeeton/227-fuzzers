; ModuleID = '../../third_party/skia/src/sksl/SkSLInliner.cpp'
source_filename = "../../third_party/skia/src/sksl/SkSLInliner.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.23", %"class.std::__1::unordered_set", %"struct.SkSL::ASTNode"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.18" }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.SkSL::Variable"** }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.1", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.SkSL::Statement"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.48"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%class.CountReturnsAtEndOfControlFlow = type <{ %"class.SkSL::ProgramVisitor", i32, [4 x i8] }>
%"class.SkSL::ProgramVisitor" = type { %"class.SkSL::TProgramVisitor" }
%"class.SkSL::TProgramVisitor" = type { i32 (...)** }
%"class.SkSL::(anonymous namespace)::CountReturnsWithLimit" = type <{ %"class.SkSL::ProgramVisitor", i32, i32, i32, i32, i8, [7 x i8] }>
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set.62" }
%"class.std::__1::unordered_set.62" = type { %"class.std::__1::__hash_table.63" }
%"class.std::__1::__hash_table.63" = type <{ %"class.std::__1::unique_ptr.64", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.82", [4 x i8] }>
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::__hash_node_base.67"** }
%"struct.std::__1::__hash_node_base.67" = type { %"struct.std::__1::__hash_node_base.67"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator.69" }
%"class.std::__1::__bucket_list_deallocator.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base.67" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.87"* }
%"class.std::__1::vector.87" = type opaque
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.115" }
%"class.std::__1::__hash_table.115" = type <{ %"class.std::__1::unique_ptr.116", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base.119"** }
%"struct.std::__1::__hash_node_base.119" = type { %"struct.std::__1::__hash_node_base.119"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator.121" }
%"class.std::__1::__bucket_list_deallocator.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.119" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector.88", i8, %"class.std::__1::vector.96", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::unique_ptr.90"* }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"class.std::__1::unique_ptr.98"*, %"class.std::__1::unique_ptr.98"*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::unique_ptr.98"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.337" }
%"struct.std::__1::pair.337" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%class.SkSTArray.141 = type { %class.SkAlignedSTStorage.142, %class.SkTArray.143 }
%class.SkAlignedSTStorage.142 = type { [16 x i8] }
%class.SkTArray.143 = type { %"class.std::__1::unique_ptr"*, i64 }
%class.SkSTArray.150 = type { %class.SkAlignedSTStorage.151, %class.SkTArray.152 }
%class.SkAlignedSTStorage.151 = type { [4 x i8] }
%class.SkTArray.152 = type { i8*, i64 }
%"class.SkSL::ExternalFunction" = type { %"class.SkSL::Symbol" }
%"class.SkSL::FieldAccess" = type { %"class.SkSL::Expression", i32, i8, %"class.std::__1::unique_ptr" }
%"class.SkSL::VariableReference" = type <{ %"class.SkSL::Expression", %"class.SkSL::Variable"*, i8, [7 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.SkSL::Variable"** }
%"class.std::__1::tuple.393" = type { i8 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.23"*, i64 }
%"class.SkSL::Block" = type <{ %"class.SkSL::Statement", %class.SkSTArray, %"class.std::__1::shared_ptr", i8, [7 x i8] }>
%"class.SkSL::SwitchCase" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.23" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::FunctionCall" = type { %"class.SkSL::Expression", %"class.SkSL::FunctionDeclaration"*, %class.SkSTArray.141 }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap.174, %class.SkTHashMap.183 }
%class.SkTHashMap.174 = type { %class.SkTHashTable.175 }
%class.SkTHashTable.175 = type { i32, i32, %class.SkAutoTArray.176 }
%class.SkAutoTArray.176 = type { %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.339", [4 x i8] }
%"struct.std::__1::pair.base.339" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.183 = type { %class.SkTHashTable.184 }
%class.SkTHashTable.184 = type { i32, i32, %class.SkAutoTArray.185 }
%class.SkAutoTArray.185 = type { %"class.std::__1::unique_ptr.186" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.341", [4 x i8] }
%"struct.std::__1::pair.base.341" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>
%"class.std::__1::tuple.405" = type { %"struct.std::__1::__tuple_impl.406" }
%"struct.std::__1::__tuple_impl.406" = type { %"class.std::__1::__tuple_leaf.407" }
%"class.std::__1::__tuple_leaf.407" = type { %"class.SkSL::Variable"** }
%"struct.SkSL::InlineCandidate" = type { %"class.std::__1::shared_ptr", %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr"*, %"class.SkSL::FunctionDefinition"* }
%"class.std::__1::unordered_map.199" = type { %"class.std::__1::__hash_table.200" }
%"class.std::__1::__hash_table.200" = type <{ %"class.std::__1::unique_ptr.201", %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.216", %"class.std::__1::__compressed_pair.219", [4 x i8] }>
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203", %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::__hash_node_base.204"** }
%"struct.std::__1::__hash_node_base.204" = type { %"struct.std::__1::__hash_node_base.204"* }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.std::__1::__bucket_list_deallocator.206" }
%"class.std::__1::__bucket_list_deallocator.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::__hash_node_base.204" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%class.ContainsRecursiveCall = type { %"class.SkSL::ProgramVisitor", %"class.SkSL::FunctionDeclaration"* }
%"struct.std::__1::pair.226" = type <{ %"class.SkSL::FunctionDeclaration"*, i8, [7 x i8] }>
%"class.std::__1::unordered_map.228" = type { %"class.std::__1::__hash_table.229" }
%"class.std::__1::__hash_table.229" = type <{ %"class.std::__1::unique_ptr.230", %"class.std::__1::__compressed_pair.240", %"class.std::__1::__compressed_pair.245", %"class.std::__1::__compressed_pair.248", [4 x i8] }>
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232", %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::__hash_node_base.233"** }
%"struct.std::__1::__hash_node_base.233" = type { %"struct.std::__1::__hash_node_base.233"* }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.std::__1::__bucket_list_deallocator.235" }
%"class.std::__1::__bucket_list_deallocator.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.std::__1::__hash_node_base.233" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::pair.256" = type <{ %"class.SkSL::FunctionDeclaration"*, i32, [4 x i8] }>
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"*, %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.SkSL::ProgramElement"* }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.std::__1::unique_ptr.260"* }
%"struct.SkSL::InlineCandidateList" = type { %"class.std::__1::vector.271" }
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"*, %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"struct.SkSL::InlineCandidate"* }
%"class.std::__1::tuple.430" = type { %"struct.std::__1::__tuple_impl.431" }
%"struct.std::__1::__tuple_impl.431" = type { %"class.std::__1::__tuple_leaf.432" }
%"class.std::__1::__tuple_leaf.432" = type { %"class.SkSL::FunctionDeclaration"** }
%"class.SkSL::InlineCandidateAnalyzer" = type { %"struct.SkSL::InlineCandidateList"*, %"class.std::__1::vector.278", %"class.std::__1::vector.285", %"class.SkSL::FunctionDefinition"* }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"*, %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.std::__1::shared_ptr"* }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"class.std::__1::unique_ptr.23"**, %"class.std::__1::unique_ptr.23"**, %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.std::__1::unique_ptr.23"** }
%"class.std::__1::tuple.439" = type { %"struct.std::__1::__tuple_impl.440" }
%"struct.std::__1::__tuple_impl.440" = type { %"class.std::__1::__tuple_leaf.441" }
%"class.std::__1::__tuple_leaf.441" = type { %"class.std::__1::unique_ptr.23"** }
%"class.std::__1::unordered_map.296" = type { %"class.std::__1::__hash_table.297" }
%"class.std::__1::__hash_table.297" = type <{ %"class.std::__1::unique_ptr.298", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.318", [4 x i8] }>
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300", %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::__hash_node_base.301"** }
%"struct.std::__1::__hash_node_base.301" = type { %"struct.std::__1::__hash_node_base.301"* }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.std::__1::__bucket_list_deallocator.303" }
%"class.std::__1::__bucket_list_deallocator.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.std::__1::__hash_node_base.301" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" = type { [104 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.SkSL::Nop" = type { %"class.SkSL::Statement" }
%"class.SkSL::InlineMarker" = type { %"class.SkSL::Statement", %"class.SkSL::FunctionDeclaration"* }
%"class.SkSL::Literal.195" = type <{ %"class.SkSL::Expression", i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.SkSL::AnyConstructor" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr" }
%"class.SkSL::ExternalFunctionCall" = type { %"class.SkSL::Expression", %"class.SkSL::ExternalFunction"*, %class.SkSTArray.141 }

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE = comdat any

$_ZN4SkSL23InlineCandidateAnalyzer5visitERKNSt3__16vectorINS1_10unique_ptrINS_14ProgramElementENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEENS1_10shared_ptrINS_11SymbolTableEEEPNS_19InlineCandidateListE = comdat any

$_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE = comdat any

$_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZN4SkSL11SymbolTableD2Ev = comdat any

$_ZN4SkSL3NopD0Ev = comdat any

$_ZNK4SkSL3Nop11descriptionEv = comdat any

$_ZNK4SkSL3Nop7isEmptyEv = comdat any

$_ZNK4SkSL3Nop5cloneEv = comdat any

$_ZNK4SkSL9Statement7isEmptyEv = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNK4SkSL6LayouteqERKS0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN4SkSL12InlineMarkerD0Ev = comdat any

$_ZNK4SkSL12InlineMarker11descriptionEv = comdat any

$_ZNK4SkSL12InlineMarker7isEmptyEv = comdat any

$_ZNK4SkSL12InlineMarker5cloneEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL7LiteralIbED0Ev = comdat any

$_ZNK4SkSL7LiteralIbE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL10Expression19isConstantOrUniformEv = comdat any

$_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIbE5cloneEv = comdat any

$_ZNK4SkSL10Expression21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL10Expression15compareConstantERKS0_ = comdat any

$_ZNK4SkSL10Expression24getConstantSubexpressionEi = comdat any

$_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev = comdat any

$_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_ = comdat any

$_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb = comdat any

$_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE = comdat any

$_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZN4SkSL23InlineCandidateAnalyzer18addInlineCandidateEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE = comdat any

$_ZNSt3__16vectorIN4SkSL15InlineCandidateENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE8__appendEm = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN4SkSL20ExternalFunctionCallD2Ev = comdat any

$_ZN4SkSL20ExternalFunctionCallD0Ev = comdat any

$_ZNK4SkSL20ExternalFunctionCall11descriptionEv = comdat any

$_ZNK4SkSL20ExternalFunctionCall11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL20ExternalFunctionCall5cloneEv = comdat any

$_ZN4SkSL10SwitchCaseD2Ev = comdat any

$_ZN4SkSL10SwitchCaseD0Ev = comdat any

$_ZNK4SkSL10SwitchCase11descriptionEv = comdat any

$_ZNK4SkSL10SwitchCase5cloneEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_bEEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_iEEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS8_JRKNS_21piecewise_construct_tENS_5tupleIJRKS8_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = comdat any

$_ZTVN4SkSL3NopE = comdat any

$_ZTVN4SkSL12InlineMarkerE = comdat any

$_ZTVN4SkSL7LiteralIbEE = comdat any

$_ZTVN4SkSL20ExternalFunctionCallE = comdat any

$_ZTVN4SkSL10SwitchCaseE = comdat any

@.str = private unnamed_addr constant [34 x i8] c"inliner found non-void function '\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"' that fails to return a value on any path\00", align 1
@_ZTVZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEE30CountReturnsAtEndOfControlFlow = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::TProgramVisitor"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev to i8*), i8* bitcast (void (%class.CountReturnsAtEndOfControlFlow*)* @_ZZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEEN30CountReturnsAtEndOfControlFlowD0Ev to i8*), i8* bitcast (i1 (%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Expression"*)* @_ZZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEEN30CountReturnsAtEndOfControlFlow15visitExpressionERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Statement"*)* @_ZZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEEN30CountReturnsAtEndOfControlFlow14visitStatementERKNS_9StatementE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::ProgramElement"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr"*)* @_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.23"*)* @_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE to i8*)] }, align 8
@_ZTVN4SkSL12_GLOBAL__N_121CountReturnsWithLimitE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::TProgramVisitor"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev to i8*), i8* bitcast (void (%"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"*)* @_ZN4SkSL12_GLOBAL__N_121CountReturnsWithLimitD0Ev to i8*), i8* bitcast (i1 (%"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"*, %"class.SkSL::Expression"*)* @_ZN4SkSL12_GLOBAL__N_121CountReturnsWithLimit15visitExpressionERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"*, %"class.SkSL::Statement"*)* @_ZN4SkSL12_GLOBAL__N_121CountReturnsWithLimit14visitStatementERKNS_9StatementE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::ProgramElement"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr"*)* @_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.23"*)* @_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE to i8*)] }, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL3NopE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Nop"*)* @_ZN4SkSL3NopD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Nop"*)* @_ZNK4SkSL3Nop11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Nop"*)* @_ZNK4SkSL3Nop7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::Nop"*)* @_ZNK4SkSL3Nop5cloneEv to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN4SkSL12InlineMarkerE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::InlineMarker"*)* @_ZN4SkSL12InlineMarkerD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::InlineMarker"*)* @_ZNK4SkSL12InlineMarker11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::InlineMarker"*)* @_ZNK4SkSL12InlineMarker7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::InlineMarker"*)* @_ZNK4SkSL12InlineMarker5cloneEv to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [13 x i8] c"/* inlined: \00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c" */\00", align 1
@_ZTVN4SkSL7LiteralIbEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.195"*)* @_ZN4SkSL7LiteralIbED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.195"*)* @_ZNK4SkSL7LiteralIbE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.195"*)* @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.195"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.195"*, i32)* @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.195"*, i32)* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.195"*)* @_ZNK4SkSL7LiteralIbE5cloneEv to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZTVZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEE21ContainsRecursiveCall = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::TProgramVisitor"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev to i8*), i8* bitcast (void (%class.ContainsRecursiveCall*)* @_ZZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEEN21ContainsRecursiveCallD0Ev to i8*), i8* bitcast (i1 (%class.ContainsRecursiveCall*, %"class.SkSL::Expression"*)* @_ZZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEEN21ContainsRecursiveCall15visitExpressionERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%class.ContainsRecursiveCall*, %"class.SkSL::Statement"*)* @_ZZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEEN21ContainsRecursiveCall14visitStatementERKNS_9StatementE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::ProgramElement"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr"*)* @_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.23"*)* @_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE to i8*)] }, align 8
@_ZTVN4SkSL20ExternalFunctionCallE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::ExternalFunctionCall"*)* @_ZN4SkSL20ExternalFunctionCallD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ExternalFunctionCall"*)* @_ZN4SkSL20ExternalFunctionCallD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ExternalFunctionCall"*)* @_ZNK4SkSL20ExternalFunctionCall11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression15compareConstantERKS0_ to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::ExternalFunctionCall"*, i32)* @_ZNK4SkSL20ExternalFunctionCall11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)* @_ZNK4SkSL10Expression24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::ExternalFunctionCall"*)* @_ZNK4SkSL20ExternalFunctionCall5cloneEv to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZTVN4SkSL10SwitchCaseE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::SwitchCase"*)* @_ZN4SkSL10SwitchCaseD2Ev to i8*), i8* bitcast (void (%"class.SkSL::SwitchCase"*)* @_ZN4SkSL10SwitchCaseD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::SwitchCase"*)* @_ZNK4SkSL10SwitchCase11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::SwitchCase"*)* @_ZNK4SkSL10SwitchCase5cloneEv to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [12 x i8] c"case %s:\0A%s\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"default:\0A%s\00", align 1
@_ZTVN4SkSL8VariableE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL7Inliner19GetReturnComplexityERKNS_18FunctionDefinitionE(%"class.SkSL::FunctionDefinition"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.CountReturnsAtEndOfControlFlow, align 8
  %3 = alloca %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", align 8
  %4 = bitcast %class.CountReturnsAtEndOfControlFlow* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #15
  %5 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEE30CountReturnsAtEndOfControlFlow, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %2, i64 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %2, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0
  %9 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %7, %"class.SkSL::ProgramElement"* dereferenceable(16) %8) #15
  %10 = load i32, i32* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #15
  %11 = bitcast %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %3, i64 0, i32 1
  %14 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %3, i64 0, i32 2
  %15 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %3, i64 0, i32 3
  %16 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %3, i64 0, i32 4
  %17 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %3, i64 0, i32 5
  %18 = add nsw i32 %10, 1
  %19 = bitcast %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_121CountReturnsWithLimitE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 0, i32* %13, align 8
  store i32 0, i32* %14, align 4
  store i32 %18, i32* %15, align 8
  store i32 0, i32* %16, align 4
  store i8 0, i8* %17, align 8
  %20 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %3, i64 0, i32 0, i32 0
  %21 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %20, %"class.SkSL::ProgramElement"* dereferenceable(16) %8) #15
  %22 = load i32, i32* %13, align 8
  %23 = icmp sgt i32 %22, %10
  br i1 %23, label %33, label %24

24:                                               ; preds = %1
  %25 = icmp sgt i32 %22, 1
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = load i8, i8* %17, align 8, !range !2
  %28 = icmp ne i8 %27, 0
  %29 = load i32, i32* %14, align 4
  %30 = icmp sgt i32 %29, 1
  %31 = and i1 %28, %30
  %32 = zext i1 %31 to i32
  br label %33

33:                                               ; preds = %26, %24, %1
  %34 = phi i32 [ 2, %1 ], [ 1, %24 ], [ %32, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #15
  ret i32 %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4SkSL7Inliner18ensureScopedBlocksEPNS_9StatementES2_(%"class.SkSL::Inliner"* nocapture readnone, %"class.SkSL::Statement"*, %"class.SkSL::Statement"* readonly) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %"class.SkSL::Statement"* %1, null
  br i1 %4, label %39, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 16
  %9 = icmp ne %"class.SkSL::Statement"* %2, null
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %39

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %2, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %39 [
    i32 23, label %14
    i32 22, label %14
    i32 20, label %14
  ]

14:                                               ; preds = %11, %11, %11
  br label %15

15:                                               ; preds = %14, %30
  %16 = phi %"class.SkSL::Statement"* [ %35, %30 ], [ %1, %14 ]
  %17 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %16, i64 4
  %18 = bitcast %"class.SkSL::Statement"* %17 to i8*
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %39

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %16, i64 2, i32 0, i32 1
  %23 = bitcast i32* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 4294967294
  %26 = icmp eq i64 %25, 2
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 4
  %29 = bitcast %"class.SkSL::Statement"* %28 to i8*
  store i8 1, i8* %29, align 8
  br label %39

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %16, i64 2
  %32 = bitcast %"class.SkSL::Statement"* %31 to %"class.std::__1::unique_ptr.23"**
  %33 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %35, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 16
  br i1 %38, label %15, label %39

39:                                               ; preds = %15, %30, %11, %27, %3, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4SkSL7Inliner5resetEv(%"class.SkSL::Inliner"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 2
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"*, i32, %"class.std::__1::unordered_map"*, %"class.SkSL::SymbolTable"*, %"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkSTArray.141, align 8
  %7 = alloca %class.SkSTArray.141, align 8
  %8 = alloca %class.SkSTArray.141, align 8
  %9 = alloca %class.SkSTArray.141, align 8
  %10 = alloca %class.SkSTArray.141, align 8
  %11 = alloca %class.SkSTArray.141, align 8
  %12 = alloca %class.SkSTArray.150, align 8
  %13 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %921 [
    i32 30, label %15
    i32 31, label %38
    i32 43, label %38
    i32 45, label %38
    i32 33, label %45
    i32 34, label %138
    i32 35, label %231
    i32 36, label %247
    i32 37, label %263
    i32 38, label %279
    i32 39, label %295
    i32 40, label %311
    i32 41, label %404
    i32 42, label %551
    i32 44, label %558
    i32 47, label %577
    i32 46, label %673
    i32 48, label %680
    i32 49, label %701
    i32 50, label %717
    i32 51, label %732
    i32 52, label %739
    i32 53, label %794
    i32 54, label %823
    i32 55, label %830
  ]

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %17 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %19 = bitcast %"class.SkSL::Expression"* %18 to %"class.SkSL::Expression"**
  %20 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %19, align 8
  %21 = icmp eq %"class.SkSL::Expression"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %15
  %23 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %20) #15
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi %"class.SkSL::Expression"* [ %23, %22 ], [ null, %15 ]
  %26 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 1
  %29 = bitcast %"class.SkSL::Type"** %28 to %"class.SkSL::Expression"**
  %30 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %29, align 8
  %31 = icmp eq %"class.SkSL::Expression"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %30) #15
  br label %34

34:                                               ; preds = %24, %32
  %35 = phi %"class.SkSL::Expression"* [ %33, %32 ], [ null, %24 ]
  %36 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16BinaryExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorES9_(%"class.SkSL::Context"* dereferenceable(744) %17, %"class.SkSL::Expression"* %25, i32 %27, %"class.SkSL::Expression"* %35) #15
  %37 = ptrtoint %"class.SkSL::Expression"* %36 to i64
  br label %921

38:                                               ; preds = %5, %5, %5
  %39 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %40 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %40, i64 10
  %42 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %41, align 8
  %43 = tail call %"class.SkSL::Expression"* %42(%"class.SkSL::Expression"* %4) #15
  %44 = ptrtoint %"class.SkSL::Expression"* %43 to i64
  br label %921

45:                                               ; preds = %5
  %46 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %47 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %46, align 8
  %48 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 1
  %49 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %48, align 8
  %50 = tail call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %49, %"class.SkSL::SymbolTable"* %3) #15
  %51 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %52 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %7, i64 0, i32 0, i32 0, i64 0
  %53 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %7, i64 0, i32 0, i32 0, i64 16
  %54 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %7, i64 0, i32 0, i32 0, i64 24
  %55 = bitcast i8* %54 to i64*
  %56 = bitcast i8* %53 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false)
  store i8* %52, i8** %56, align 8, !alias.scope !3
  store i64 17179869184, i64* %55, align 8, !alias.scope !3
  %57 = bitcast i8* %53 to %class.SkTArray.143*
  %58 = getelementptr inbounds i32, i32* %51, i64 4
  %59 = getelementptr inbounds i32, i32* %51, i64 6
  %60 = bitcast i32* %59 to i64*
  %61 = load i64, i64* %60, align 8, !noalias !3
  %62 = lshr i64 %61, 1
  %63 = trunc i64 %62 to i32
  %64 = and i32 %63, 2147483647
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %45
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %57, i32 %64, i32 0) #15
  %67 = load i64, i64* %55, align 8
  %68 = shl i64 %67, 32
  %69 = and i64 %68, 4294967296
  %70 = and i64 %67, -4294967297
  %71 = or i64 %69, %70
  br label %72

72:                                               ; preds = %45, %66
  %73 = phi i64 [ %71, %66 ], [ 17179869184, %45 ]
  store i64 %73, i64* %55, align 8
  %74 = bitcast i32* %58 to %"class.std::__1::unique_ptr"**
  %75 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %74, align 8, !noalias !3
  %76 = icmp eq %"class.std::__1::unique_ptr"* %75, null
  br i1 %76, label %107, label %77

77:                                               ; preds = %72
  %78 = load i64, i64* %60, align 8, !noalias !3
  %79 = lshr i64 %78, 1
  %80 = and i64 %79, 2147483647
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 %80
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %107, label %83

83:                                               ; preds = %77
  %84 = bitcast i8* %53 to %"class.std::__1::unique_ptr"**
  br label %85

85:                                               ; preds = %83, %93
  %86 = phi %"class.std::__1::unique_ptr"* [ %75, %83 ], [ %105, %93 ]
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %87, align 8
  %89 = icmp eq %"class.SkSL::Expression"* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %88) #15
  %92 = ptrtoint %"class.SkSL::Expression"* %91 to i64
  br label %93

93:                                               ; preds = %85, %90
  %94 = phi i64 [ %92, %90 ], [ 0, %85 ]
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %57, i32 1, i32 1) #15
  %95 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %84, align 8
  %96 = load i64, i64* %55, align 8
  %97 = lshr i64 %96, 1
  %98 = and i64 %97, 2147483647
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 %98
  %100 = add i64 %96, 2
  %101 = and i64 %100, 4294967294
  %102 = and i64 %96, -4294967295
  %103 = or i64 %101, %102
  store i64 %103, i64* %55, align 8
  %104 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  store i64 %94, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %106 = icmp eq %"class.std::__1::unique_ptr"* %105, %81
  br i1 %106, label %107, label %85

107:                                              ; preds = %93, %72, %77
  %108 = call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorArray4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %47, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %50, %class.SkSTArray.141* nonnull %7) #15
  %109 = ptrtoint %"class.SkSL::Expression"* %108 to i64
  %110 = load i64, i64* %55, align 8
  %111 = and i64 %110, 4294967294
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %107
  %114 = bitcast i8* %53 to %"class.std::__1::unique_ptr"**
  br label %119

115:                                              ; preds = %130, %107
  %116 = phi i64 [ %110, %107 ], [ %132, %130 ]
  %117 = and i64 %116, 1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %921, label %136

119:                                              ; preds = %130, %113
  %120 = phi i64 [ 0, %113 ], [ %131, %130 ]
  %121 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %114, align 8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 %120, i32 0, i32 0, i32 0
  %123 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %122, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %122, align 8
  %124 = icmp eq %"class.SkSL::Expression"* %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %119
  %126 = bitcast %"class.SkSL::Expression"* %123 to void (%"class.SkSL::Expression"*)***
  %127 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %127, i64 1
  %129 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %128, align 8
  call void %129(%"class.SkSL::Expression"* nonnull %123) #15
  br label %130

130:                                              ; preds = %125, %119
  %131 = add nuw nsw i64 %120, 1
  %132 = load i64, i64* %55, align 8
  %133 = lshr i64 %132, 1
  %134 = and i64 %133, 2147483647
  %135 = icmp ult i64 %131, %134
  br i1 %135, label %119, label %115

136:                                              ; preds = %115
  %137 = load i8*, i8** %56, align 8
  call void @_Z7sk_freePv(i8* %137) #15
  br label %921

138:                                              ; preds = %5
  %139 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %140 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %139, align 8
  %141 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 1
  %142 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %141, align 8
  %143 = tail call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %142, %"class.SkSL::SymbolTable"* %3) #15
  %144 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %145 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %8, i64 0, i32 0, i32 0, i64 0
  %146 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %8, i64 0, i32 0, i32 0, i64 16
  %147 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %8, i64 0, i32 0, i32 0, i64 24
  %148 = bitcast i8* %147 to i64*
  %149 = bitcast i8* %146 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 16, i1 false)
  store i8* %145, i8** %149, align 8, !alias.scope !6
  store i64 17179869184, i64* %148, align 8, !alias.scope !6
  %150 = bitcast i8* %146 to %class.SkTArray.143*
  %151 = getelementptr inbounds i32, i32* %144, i64 4
  %152 = getelementptr inbounds i32, i32* %144, i64 6
  %153 = bitcast i32* %152 to i64*
  %154 = load i64, i64* %153, align 8, !noalias !6
  %155 = lshr i64 %154, 1
  %156 = trunc i64 %155 to i32
  %157 = and i32 %156, 2147483647
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %138
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %150, i32 %157, i32 0) #15
  %160 = load i64, i64* %148, align 8
  %161 = shl i64 %160, 32
  %162 = and i64 %161, 4294967296
  %163 = and i64 %160, -4294967297
  %164 = or i64 %162, %163
  br label %165

165:                                              ; preds = %138, %159
  %166 = phi i64 [ %164, %159 ], [ 17179869184, %138 ]
  store i64 %166, i64* %148, align 8
  %167 = bitcast i32* %151 to %"class.std::__1::unique_ptr"**
  %168 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %167, align 8, !noalias !6
  %169 = icmp eq %"class.std::__1::unique_ptr"* %168, null
  br i1 %169, label %200, label %170

170:                                              ; preds = %165
  %171 = load i64, i64* %153, align 8, !noalias !6
  %172 = lshr i64 %171, 1
  %173 = and i64 %172, 2147483647
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 %173
  %175 = icmp eq i64 %173, 0
  br i1 %175, label %200, label %176

176:                                              ; preds = %170
  %177 = bitcast i8* %146 to %"class.std::__1::unique_ptr"**
  br label %178

178:                                              ; preds = %176, %186
  %179 = phi %"class.std::__1::unique_ptr"* [ %168, %176 ], [ %198, %186 ]
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %179, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %180, align 8
  %182 = icmp eq %"class.SkSL::Expression"* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %178
  %184 = call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %181) #15
  %185 = ptrtoint %"class.SkSL::Expression"* %184 to i64
  br label %186

186:                                              ; preds = %178, %183
  %187 = phi i64 [ %185, %183 ], [ 0, %178 ]
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %150, i32 1, i32 1) #15
  %188 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %177, align 8
  %189 = load i64, i64* %148, align 8
  %190 = lshr i64 %189, 1
  %191 = and i64 %190, 2147483647
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %188, i64 %191
  %193 = add i64 %189, 2
  %194 = and i64 %193, 4294967294
  %195 = and i64 %189, -4294967295
  %196 = or i64 %194, %195
  store i64 %196, i64* %148, align 8
  %197 = bitcast %"class.std::__1::unique_ptr"* %192 to i64*
  store i64 %187, i64* %197, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %179, i64 1
  %199 = icmp eq %"class.std::__1::unique_ptr"* %198, %174
  br i1 %199, label %200, label %178

200:                                              ; preds = %186, %165, %170
  %201 = call %"class.SkSL::Expression"* @_ZN4SkSL19ConstructorCompound4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %140, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %143, %class.SkSTArray.141* nonnull %8) #15
  %202 = ptrtoint %"class.SkSL::Expression"* %201 to i64
  %203 = load i64, i64* %148, align 8
  %204 = and i64 %203, 4294967294
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %200
  %207 = bitcast i8* %146 to %"class.std::__1::unique_ptr"**
  br label %212

208:                                              ; preds = %223, %200
  %209 = phi i64 [ %203, %200 ], [ %225, %223 ]
  %210 = and i64 %209, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %921, label %229

212:                                              ; preds = %223, %206
  %213 = phi i64 [ 0, %206 ], [ %224, %223 ]
  %214 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %207, align 8
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %214, i64 %213, i32 0, i32 0, i32 0
  %216 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %215, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %215, align 8
  %217 = icmp eq %"class.SkSL::Expression"* %216, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %212
  %219 = bitcast %"class.SkSL::Expression"* %216 to void (%"class.SkSL::Expression"*)***
  %220 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %219, align 8
  %221 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %220, i64 1
  %222 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %221, align 8
  call void %222(%"class.SkSL::Expression"* nonnull %216) #15
  br label %223

223:                                              ; preds = %218, %212
  %224 = add nuw nsw i64 %213, 1
  %225 = load i64, i64* %148, align 8
  %226 = lshr i64 %225, 1
  %227 = and i64 %226, 2147483647
  %228 = icmp ult i64 %224, %227
  br i1 %228, label %212, label %208

229:                                              ; preds = %208
  %230 = load i8*, i8** %149, align 8
  call void @_Z7sk_freePv(i8* %230) #15
  br label %921

231:                                              ; preds = %5
  %232 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %233 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %232, align 8
  %234 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 1
  %235 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %234, align 8
  %236 = tail call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %235, %"class.SkSL::SymbolTable"* %3) #15
  %237 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %238 = bitcast i32* %237 to %"class.SkSL::Expression"**
  %239 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %238, align 8
  %240 = icmp eq %"class.SkSL::Expression"* %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %231
  %242 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %239) #15
  br label %243

243:                                              ; preds = %231, %241
  %244 = phi %"class.SkSL::Expression"* [ %242, %241 ], [ null, %231 ]
  %245 = tail call %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorCompoundCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %233, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %236, %"class.SkSL::Expression"* %244) #15
  %246 = ptrtoint %"class.SkSL::Expression"* %245 to i64
  br label %921

247:                                              ; preds = %5
  %248 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %249 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %248, align 8
  %250 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 1
  %251 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %250, align 8
  %252 = tail call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %251, %"class.SkSL::SymbolTable"* %3) #15
  %253 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %254 = bitcast i32* %253 to %"class.SkSL::Expression"**
  %255 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %254, align 8
  %256 = icmp eq %"class.SkSL::Expression"* %255, null
  br i1 %256, label %259, label %257

257:                                              ; preds = %247
  %258 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %255) #15
  br label %259

259:                                              ; preds = %247, %257
  %260 = phi %"class.SkSL::Expression"* [ %258, %257 ], [ null, %247 ]
  %261 = tail call %"class.SkSL::Expression"* @_ZN4SkSL25ConstructorDiagonalMatrix4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %249, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %252, %"class.SkSL::Expression"* %260) #15
  %262 = ptrtoint %"class.SkSL::Expression"* %261 to i64
  br label %921

263:                                              ; preds = %5
  %264 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %265 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %264, align 8
  %266 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 1
  %267 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %266, align 8
  %268 = tail call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %267, %"class.SkSL::SymbolTable"* %3) #15
  %269 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %270 = bitcast i32* %269 to %"class.SkSL::Expression"**
  %271 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %270, align 8
  %272 = icmp eq %"class.SkSL::Expression"* %271, null
  br i1 %272, label %275, label %273

273:                                              ; preds = %263
  %274 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %271) #15
  br label %275

275:                                              ; preds = %263, %273
  %276 = phi %"class.SkSL::Expression"* [ %274, %273 ], [ null, %263 ]
  %277 = tail call %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorMatrixResize4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %265, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %268, %"class.SkSL::Expression"* %276) #15
  %278 = ptrtoint %"class.SkSL::Expression"* %277 to i64
  br label %921

279:                                              ; preds = %5
  %280 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %281 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %280, align 8
  %282 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 1
  %283 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %282, align 8
  %284 = tail call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %283, %"class.SkSL::SymbolTable"* %3) #15
  %285 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %286 = bitcast i32* %285 to %"class.SkSL::Expression"**
  %287 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %286, align 8
  %288 = icmp eq %"class.SkSL::Expression"* %287, null
  br i1 %288, label %291, label %289

289:                                              ; preds = %279
  %290 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %287) #15
  br label %291

291:                                              ; preds = %279, %289
  %292 = phi %"class.SkSL::Expression"* [ %290, %289 ], [ null, %279 ]
  %293 = tail call %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %281, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %284, %"class.SkSL::Expression"* %292) #15
  %294 = ptrtoint %"class.SkSL::Expression"* %293 to i64
  br label %921

295:                                              ; preds = %5
  %296 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %297 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %296, align 8
  %298 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 1
  %299 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %298, align 8
  %300 = tail call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %299, %"class.SkSL::SymbolTable"* %3) #15
  %301 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %302 = bitcast i32* %301 to %"class.SkSL::Expression"**
  %303 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %302, align 8
  %304 = icmp eq %"class.SkSL::Expression"* %303, null
  br i1 %304, label %307, label %305

305:                                              ; preds = %295
  %306 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %303) #15
  br label %307

307:                                              ; preds = %295, %305
  %308 = phi %"class.SkSL::Expression"* [ %306, %305 ], [ null, %295 ]
  %309 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %297, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %300, %"class.SkSL::Expression"* %308) #15
  %310 = ptrtoint %"class.SkSL::Expression"* %309 to i64
  br label %921

311:                                              ; preds = %5
  %312 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %313 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %312, align 8
  %314 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 1
  %315 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %314, align 8
  %316 = tail call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %315, %"class.SkSL::SymbolTable"* %3) #15
  %317 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %318 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %9, i64 0, i32 0, i32 0, i64 0
  %319 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %9, i64 0, i32 0, i32 0, i64 16
  %320 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %9, i64 0, i32 0, i32 0, i64 24
  %321 = bitcast i8* %320 to i64*
  %322 = bitcast i8* %319 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %318, i8 -86, i64 16, i1 false)
  store i8* %318, i8** %322, align 8, !alias.scope !9
  store i64 17179869184, i64* %321, align 8, !alias.scope !9
  %323 = bitcast i8* %319 to %class.SkTArray.143*
  %324 = getelementptr inbounds i32, i32* %317, i64 4
  %325 = getelementptr inbounds i32, i32* %317, i64 6
  %326 = bitcast i32* %325 to i64*
  %327 = load i64, i64* %326, align 8, !noalias !9
  %328 = lshr i64 %327, 1
  %329 = trunc i64 %328 to i32
  %330 = and i32 %329, 2147483647
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %338, label %332

332:                                              ; preds = %311
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %323, i32 %330, i32 0) #15
  %333 = load i64, i64* %321, align 8
  %334 = shl i64 %333, 32
  %335 = and i64 %334, 4294967296
  %336 = and i64 %333, -4294967297
  %337 = or i64 %335, %336
  br label %338

338:                                              ; preds = %311, %332
  %339 = phi i64 [ %337, %332 ], [ 17179869184, %311 ]
  store i64 %339, i64* %321, align 8
  %340 = bitcast i32* %324 to %"class.std::__1::unique_ptr"**
  %341 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %340, align 8, !noalias !9
  %342 = icmp eq %"class.std::__1::unique_ptr"* %341, null
  br i1 %342, label %373, label %343

343:                                              ; preds = %338
  %344 = load i64, i64* %326, align 8, !noalias !9
  %345 = lshr i64 %344, 1
  %346 = and i64 %345, 2147483647
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %341, i64 %346
  %348 = icmp eq i64 %346, 0
  br i1 %348, label %373, label %349

349:                                              ; preds = %343
  %350 = bitcast i8* %319 to %"class.std::__1::unique_ptr"**
  br label %351

351:                                              ; preds = %349, %359
  %352 = phi %"class.std::__1::unique_ptr"* [ %341, %349 ], [ %371, %359 ]
  %353 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %352, i64 0, i32 0, i32 0, i32 0
  %354 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %353, align 8
  %355 = icmp eq %"class.SkSL::Expression"* %354, null
  br i1 %355, label %359, label %356

356:                                              ; preds = %351
  %357 = call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %354) #15
  %358 = ptrtoint %"class.SkSL::Expression"* %357 to i64
  br label %359

359:                                              ; preds = %351, %356
  %360 = phi i64 [ %358, %356 ], [ 0, %351 ]
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %323, i32 1, i32 1) #15
  %361 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %350, align 8
  %362 = load i64, i64* %321, align 8
  %363 = lshr i64 %362, 1
  %364 = and i64 %363, 2147483647
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %361, i64 %364
  %366 = add i64 %362, 2
  %367 = and i64 %366, 4294967294
  %368 = and i64 %362, -4294967295
  %369 = or i64 %367, %368
  store i64 %369, i64* %321, align 8
  %370 = bitcast %"class.std::__1::unique_ptr"* %365 to i64*
  store i64 %360, i64* %370, align 8
  %371 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %352, i64 1
  %372 = icmp eq %"class.std::__1::unique_ptr"* %371, %347
  br i1 %372, label %373, label %351

373:                                              ; preds = %359, %338, %343
  %374 = call %"class.SkSL::Expression"* @_ZN4SkSL17ConstructorStruct4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %313, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %316, %class.SkSTArray.141* nonnull %9) #15
  %375 = ptrtoint %"class.SkSL::Expression"* %374 to i64
  %376 = load i64, i64* %321, align 8
  %377 = and i64 %376, 4294967294
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %381, label %379

379:                                              ; preds = %373
  %380 = bitcast i8* %319 to %"class.std::__1::unique_ptr"**
  br label %385

381:                                              ; preds = %396, %373
  %382 = phi i64 [ %376, %373 ], [ %398, %396 ]
  %383 = and i64 %382, 1
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %921, label %402

385:                                              ; preds = %396, %379
  %386 = phi i64 [ 0, %379 ], [ %397, %396 ]
  %387 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %380, align 8
  %388 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %387, i64 %386, i32 0, i32 0, i32 0
  %389 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %388, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %388, align 8
  %390 = icmp eq %"class.SkSL::Expression"* %389, null
  br i1 %390, label %396, label %391

391:                                              ; preds = %385
  %392 = bitcast %"class.SkSL::Expression"* %389 to void (%"class.SkSL::Expression"*)***
  %393 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %392, align 8
  %394 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %393, i64 1
  %395 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %394, align 8
  call void %395(%"class.SkSL::Expression"* nonnull %389) #15
  br label %396

396:                                              ; preds = %391, %385
  %397 = add nuw nsw i64 %386, 1
  %398 = load i64, i64* %321, align 8
  %399 = lshr i64 %398, 1
  %400 = and i64 %399, 2147483647
  %401 = icmp ult i64 %397, %400
  br i1 %401, label %385, label %381

402:                                              ; preds = %381
  %403 = load i8*, i8** %322, align 8
  call void @_Z7sk_freePv(i8* %403) #15
  br label %921

404:                                              ; preds = %5
  %405 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %406 = bitcast %"class.SkSL::Expression"* %405 to %"class.SkSL::ExternalFunction"**
  %407 = load %"class.SkSL::ExternalFunction"*, %"class.SkSL::ExternalFunction"** %406, align 8
  %408 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %10, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %408) #15
  %409 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %410 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %10, i64 0, i32 0, i32 0, i64 16
  %411 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %10, i64 0, i32 0, i32 0, i64 24
  %412 = bitcast i8* %411 to i64*
  %413 = bitcast i8* %410 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %408, i8 -86, i64 16, i1 false)
  store i8* %408, i8** %413, align 8, !alias.scope !12
  store i64 17179869184, i64* %412, align 8, !alias.scope !12
  %414 = bitcast i8* %410 to %class.SkTArray.143*
  %415 = getelementptr inbounds i32, i32* %409, i64 4
  %416 = getelementptr inbounds i32, i32* %409, i64 6
  %417 = bitcast i32* %416 to i64*
  %418 = load i64, i64* %417, align 8, !noalias !12
  %419 = lshr i64 %418, 1
  %420 = trunc i64 %419 to i32
  %421 = and i32 %420, 2147483647
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %429, label %423

423:                                              ; preds = %404
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %414, i32 %421, i32 0) #15
  %424 = load i64, i64* %412, align 8
  %425 = shl i64 %424, 32
  %426 = and i64 %425, 4294967296
  %427 = and i64 %424, -4294967297
  %428 = or i64 %426, %427
  br label %429

429:                                              ; preds = %404, %423
  %430 = phi i64 [ %428, %423 ], [ 17179869184, %404 ]
  store i64 %430, i64* %412, align 8
  %431 = bitcast i32* %415 to %"class.std::__1::unique_ptr"**
  %432 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %431, align 8, !noalias !12
  %433 = icmp eq %"class.std::__1::unique_ptr"* %432, null
  br i1 %433, label %464, label %434

434:                                              ; preds = %429
  %435 = load i64, i64* %417, align 8, !noalias !12
  %436 = lshr i64 %435, 1
  %437 = and i64 %436, 2147483647
  %438 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %432, i64 %437
  %439 = icmp eq i64 %437, 0
  br i1 %439, label %464, label %440

440:                                              ; preds = %434
  %441 = bitcast i8* %410 to %"class.std::__1::unique_ptr"**
  br label %442

442:                                              ; preds = %440, %450
  %443 = phi %"class.std::__1::unique_ptr"* [ %432, %440 ], [ %462, %450 ]
  %444 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %443, i64 0, i32 0, i32 0, i32 0
  %445 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %444, align 8
  %446 = icmp eq %"class.SkSL::Expression"* %445, null
  br i1 %446, label %450, label %447

447:                                              ; preds = %442
  %448 = call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %445) #15
  %449 = ptrtoint %"class.SkSL::Expression"* %448 to i64
  br label %450

450:                                              ; preds = %442, %447
  %451 = phi i64 [ %449, %447 ], [ 0, %442 ]
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %414, i32 1, i32 1) #15
  %452 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %441, align 8
  %453 = load i64, i64* %412, align 8
  %454 = lshr i64 %453, 1
  %455 = and i64 %454, 2147483647
  %456 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %452, i64 %455
  %457 = add i64 %453, 2
  %458 = and i64 %457, 4294967294
  %459 = and i64 %453, -4294967295
  %460 = or i64 %458, %459
  store i64 %460, i64* %412, align 8
  %461 = bitcast %"class.std::__1::unique_ptr"* %456 to i64*
  store i64 %451, i64* %461, align 8
  %462 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %443, i64 1
  %463 = icmp eq %"class.std::__1::unique_ptr"* %462, %438
  br i1 %463, label %464, label %442

464:                                              ; preds = %450, %429, %434
  %465 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %6, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %465)
  %466 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #15
  %467 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %6, i64 0, i32 0, i32 0, i64 16
  %468 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %6, i64 0, i32 0, i32 0, i64 24
  %469 = bitcast i8* %468 to i64*
  %470 = bitcast i8* %467 to i8**
  store i8* %465, i8** %470, align 8
  store i64 17179869184, i64* %469, align 8
  %471 = bitcast i8* %467 to %class.SkTArray.143*
  %472 = call dereferenceable(16) %class.SkTArray.143* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.143* %471, %class.SkTArray.143* dereferenceable(16) %414) #15
  %473 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %407, i64 0, i32 0, i32 2
  %474 = bitcast %"class.SkSL::Type"** %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = bitcast i8* %466 to i32 (...)***
  %477 = getelementptr inbounds i8, i8* %466, i64 8
  %478 = bitcast i8* %477 to i32*
  store i32 %1, i32* %478, align 8
  %479 = getelementptr inbounds i8, i8* %466, i64 12
  %480 = bitcast i8* %479 to i32*
  store i32 41, i32* %480, align 4
  %481 = getelementptr inbounds i8, i8* %466, i64 16
  %482 = bitcast i8* %481 to i64*
  store i64 %475, i64* %482, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL20ExternalFunctionCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %476, align 8
  %483 = getelementptr inbounds i8, i8* %466, i64 24
  %484 = bitcast i8* %483 to %"class.SkSL::ExternalFunction"**
  store %"class.SkSL::ExternalFunction"* %407, %"class.SkSL::ExternalFunction"** %484, align 8
  %485 = getelementptr inbounds i8, i8* %466, i64 48
  %486 = getelementptr inbounds i8, i8* %466, i64 32
  %487 = getelementptr inbounds i8, i8* %466, i64 56
  %488 = bitcast i8* %487 to i64*
  %489 = bitcast i8* %485 to i8**
  store i8* %486, i8** %489, align 8
  store i64 17179869184, i64* %488, align 8
  %490 = bitcast i8* %485 to %class.SkTArray.143*
  %491 = call dereferenceable(16) %class.SkTArray.143* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.143* %490, %class.SkTArray.143* dereferenceable(16) %471) #15
  %492 = load i64, i64* %469, align 8
  %493 = and i64 %492, 4294967294
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %497, label %495

495:                                              ; preds = %464
  %496 = bitcast i8* %467 to %"class.std::__1::unique_ptr"**
  br label %501

497:                                              ; preds = %512, %464
  %498 = phi i64 [ %492, %464 ], [ %514, %512 ]
  %499 = and i64 %498, 1
  %500 = icmp eq i64 %499, 0
  br i1 %500, label %520, label %518

501:                                              ; preds = %512, %495
  %502 = phi i64 [ 0, %495 ], [ %513, %512 ]
  %503 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %496, align 8
  %504 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %503, i64 %502, i32 0, i32 0, i32 0
  %505 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %504, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %504, align 8
  %506 = icmp eq %"class.SkSL::Expression"* %505, null
  br i1 %506, label %512, label %507

507:                                              ; preds = %501
  %508 = bitcast %"class.SkSL::Expression"* %505 to void (%"class.SkSL::Expression"*)***
  %509 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %508, align 8
  %510 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %509, i64 1
  %511 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %510, align 8
  call void %511(%"class.SkSL::Expression"* nonnull %505) #15
  br label %512

512:                                              ; preds = %507, %501
  %513 = add nuw nsw i64 %502, 1
  %514 = load i64, i64* %469, align 8
  %515 = lshr i64 %514, 1
  %516 = and i64 %515, 2147483647
  %517 = icmp ult i64 %513, %516
  br i1 %517, label %501, label %497

518:                                              ; preds = %497
  %519 = load i8*, i8** %470, align 8
  call void @_Z7sk_freePv(i8* %519) #15
  br label %520

520:                                              ; preds = %518, %497
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %465)
  %521 = ptrtoint i8* %466 to i64
  %522 = load i64, i64* %412, align 8
  %523 = and i64 %522, 4294967294
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %527, label %525

525:                                              ; preds = %520
  %526 = bitcast i8* %410 to %"class.std::__1::unique_ptr"**
  br label %531

527:                                              ; preds = %542, %520
  %528 = phi i64 [ %522, %520 ], [ %544, %542 ]
  %529 = and i64 %528, 1
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %550, label %548

531:                                              ; preds = %542, %525
  %532 = phi i64 [ 0, %525 ], [ %543, %542 ]
  %533 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %526, align 8
  %534 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %533, i64 %532, i32 0, i32 0, i32 0
  %535 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %534, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %534, align 8
  %536 = icmp eq %"class.SkSL::Expression"* %535, null
  br i1 %536, label %542, label %537

537:                                              ; preds = %531
  %538 = bitcast %"class.SkSL::Expression"* %535 to void (%"class.SkSL::Expression"*)***
  %539 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %538, align 8
  %540 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %539, i64 1
  %541 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %540, align 8
  call void %541(%"class.SkSL::Expression"* nonnull %535) #15
  br label %542

542:                                              ; preds = %537, %531
  %543 = add nuw nsw i64 %532, 1
  %544 = load i64, i64* %412, align 8
  %545 = lshr i64 %544, 1
  %546 = and i64 %545, 2147483647
  %547 = icmp ult i64 %543, %546
  br i1 %547, label %531, label %527

548:                                              ; preds = %527
  %549 = load i8*, i8** %413, align 8
  call void @_Z7sk_freePv(i8* %549) #15
  br label %550

550:                                              ; preds = %527, %548
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %408) #15
  br label %921

551:                                              ; preds = %5
  %552 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %553 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %552, align 8
  %554 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %553, i64 10
  %555 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %554, align 8
  %556 = tail call %"class.SkSL::Expression"* %555(%"class.SkSL::Expression"* %4) #15
  %557 = ptrtoint %"class.SkSL::Expression"* %556 to i64
  br label %921

558:                                              ; preds = %5
  %559 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::FieldAccess"*
  %560 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %561 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %560, align 8
  %562 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %563 = bitcast i32* %562 to %"class.SkSL::Expression"**
  %564 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %563, align 8
  %565 = icmp eq %"class.SkSL::Expression"* %564, null
  br i1 %565, label %568, label %566

566:                                              ; preds = %558
  %567 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %564) #15
  br label %568

568:                                              ; preds = %558, %566
  %569 = phi %"class.SkSL::Expression"* [ %567, %566 ], [ null, %558 ]
  %570 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %571 = bitcast %"class.SkSL::Expression"* %570 to i32*
  %572 = load i32, i32* %571, align 8
  %573 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %559, i64 0, i32 2
  %574 = load i8, i8* %573, align 4
  %575 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744) %561, %"class.SkSL::Expression"* %569, i32 %572, i8 signext %574) #15
  %576 = ptrtoint %"class.SkSL::Expression"* %575 to i64
  br label %921

577:                                              ; preds = %5
  %578 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %579 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %578, align 8
  %580 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 1
  %581 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %580, align 8
  %582 = tail call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %581, %"class.SkSL::SymbolTable"* %3) #15
  %583 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %584 = bitcast %"class.SkSL::Expression"* %583 to %"class.SkSL::FunctionDeclaration"**
  %585 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %584, align 8
  %586 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %587 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %11, i64 0, i32 0, i32 0, i64 0
  %588 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %11, i64 0, i32 0, i32 0, i64 16
  %589 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %11, i64 0, i32 0, i32 0, i64 24
  %590 = bitcast i8* %589 to i64*
  %591 = bitcast i8* %588 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %587, i8 -86, i64 16, i1 false)
  store i8* %587, i8** %591, align 8, !alias.scope !15
  store i64 17179869184, i64* %590, align 8, !alias.scope !15
  %592 = bitcast i8* %588 to %class.SkTArray.143*
  %593 = getelementptr inbounds i32, i32* %586, i64 4
  %594 = getelementptr inbounds i32, i32* %586, i64 6
  %595 = bitcast i32* %594 to i64*
  %596 = load i64, i64* %595, align 8, !noalias !15
  %597 = lshr i64 %596, 1
  %598 = trunc i64 %597 to i32
  %599 = and i32 %598, 2147483647
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %607, label %601

601:                                              ; preds = %577
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %592, i32 %599, i32 0) #15
  %602 = load i64, i64* %590, align 8
  %603 = shl i64 %602, 32
  %604 = and i64 %603, 4294967296
  %605 = and i64 %602, -4294967297
  %606 = or i64 %604, %605
  br label %607

607:                                              ; preds = %577, %601
  %608 = phi i64 [ %606, %601 ], [ 17179869184, %577 ]
  store i64 %608, i64* %590, align 8
  %609 = bitcast i32* %593 to %"class.std::__1::unique_ptr"**
  %610 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %609, align 8, !noalias !15
  %611 = icmp eq %"class.std::__1::unique_ptr"* %610, null
  br i1 %611, label %642, label %612

612:                                              ; preds = %607
  %613 = load i64, i64* %595, align 8, !noalias !15
  %614 = lshr i64 %613, 1
  %615 = and i64 %614, 2147483647
  %616 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %610, i64 %615
  %617 = icmp eq i64 %615, 0
  br i1 %617, label %642, label %618

618:                                              ; preds = %612
  %619 = bitcast i8* %588 to %"class.std::__1::unique_ptr"**
  br label %620

620:                                              ; preds = %618, %628
  %621 = phi %"class.std::__1::unique_ptr"* [ %610, %618 ], [ %640, %628 ]
  %622 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %621, i64 0, i32 0, i32 0, i32 0
  %623 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %622, align 8
  %624 = icmp eq %"class.SkSL::Expression"* %623, null
  br i1 %624, label %628, label %625

625:                                              ; preds = %620
  %626 = call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %623) #15
  %627 = ptrtoint %"class.SkSL::Expression"* %626 to i64
  br label %628

628:                                              ; preds = %620, %625
  %629 = phi i64 [ %627, %625 ], [ 0, %620 ]
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %592, i32 1, i32 1) #15
  %630 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %619, align 8
  %631 = load i64, i64* %590, align 8
  %632 = lshr i64 %631, 1
  %633 = and i64 %632, 2147483647
  %634 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %630, i64 %633
  %635 = add i64 %631, 2
  %636 = and i64 %635, 4294967294
  %637 = and i64 %631, -4294967295
  %638 = or i64 %636, %637
  store i64 %638, i64* %590, align 8
  %639 = bitcast %"class.std::__1::unique_ptr"* %634 to i64*
  store i64 %629, i64* %639, align 8
  %640 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %621, i64 1
  %641 = icmp eq %"class.std::__1::unique_ptr"* %640, %616
  br i1 %641, label %642, label %620

642:                                              ; preds = %628, %607, %612
  %643 = call %"class.SkSL::Expression"* @_ZN4SkSL12FunctionCall4MakeERKNS_7ContextEiPKNS_4TypeERKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENSB_14default_deleteISD_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %579, i32 %1, %"class.SkSL::Type"* %582, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %585, %class.SkSTArray.141* nonnull %11) #15
  %644 = ptrtoint %"class.SkSL::Expression"* %643 to i64
  %645 = load i64, i64* %590, align 8
  %646 = and i64 %645, 4294967294
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %650, label %648

648:                                              ; preds = %642
  %649 = bitcast i8* %588 to %"class.std::__1::unique_ptr"**
  br label %654

650:                                              ; preds = %665, %642
  %651 = phi i64 [ %645, %642 ], [ %667, %665 ]
  %652 = and i64 %651, 1
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %921, label %671

654:                                              ; preds = %665, %648
  %655 = phi i64 [ 0, %648 ], [ %666, %665 ]
  %656 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %649, align 8
  %657 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %656, i64 %655, i32 0, i32 0, i32 0
  %658 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %657, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %657, align 8
  %659 = icmp eq %"class.SkSL::Expression"* %658, null
  br i1 %659, label %665, label %660

660:                                              ; preds = %654
  %661 = bitcast %"class.SkSL::Expression"* %658 to void (%"class.SkSL::Expression"*)***
  %662 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %661, align 8
  %663 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %662, i64 1
  %664 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %663, align 8
  call void %664(%"class.SkSL::Expression"* nonnull %658) #15
  br label %665

665:                                              ; preds = %660, %654
  %666 = add nuw nsw i64 %655, 1
  %667 = load i64, i64* %590, align 8
  %668 = lshr i64 %667, 1
  %669 = and i64 %668, 2147483647
  %670 = icmp ult i64 %666, %669
  br i1 %670, label %654, label %650

671:                                              ; preds = %650
  %672 = load i8*, i8** %591, align 8
  call void @_Z7sk_freePv(i8* %672) #15
  br label %921

673:                                              ; preds = %5
  %674 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %675 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %674, align 8
  %676 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %675, i64 10
  %677 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %676, align 8
  %678 = tail call %"class.SkSL::Expression"* %677(%"class.SkSL::Expression"* %4) #15
  %679 = ptrtoint %"class.SkSL::Expression"* %678 to i64
  br label %921

680:                                              ; preds = %5
  %681 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %682 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %681, align 8
  %683 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %684 = bitcast %"class.SkSL::Expression"* %683 to %"class.SkSL::Expression"**
  %685 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %684, align 8
  %686 = icmp eq %"class.SkSL::Expression"* %685, null
  br i1 %686, label %689, label %687

687:                                              ; preds = %680
  %688 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %685) #15
  br label %689

689:                                              ; preds = %680, %687
  %690 = phi %"class.SkSL::Expression"* [ %688, %687 ], [ null, %680 ]
  %691 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %692 = bitcast i32* %691 to %"class.SkSL::Expression"**
  %693 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %692, align 8
  %694 = icmp eq %"class.SkSL::Expression"* %693, null
  br i1 %694, label %697, label %695

695:                                              ; preds = %689
  %696 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %693) #15
  br label %697

697:                                              ; preds = %689, %695
  %698 = phi %"class.SkSL::Expression"* [ %696, %695 ], [ null, %689 ]
  %699 = tail call %"class.SkSL::Expression"* @_ZN4SkSL15IndexExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_(%"class.SkSL::Context"* dereferenceable(744) %682, %"class.SkSL::Expression"* %690, %"class.SkSL::Expression"* %698) #15
  %700 = ptrtoint %"class.SkSL::Expression"* %699 to i64
  br label %921

701:                                              ; preds = %5
  %702 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %703 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %702, align 8
  %704 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %705 = bitcast %"class.SkSL::Expression"* %704 to i32*
  %706 = load i32, i32* %705, align 8
  %707 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %708 = bitcast i32* %707 to %"class.SkSL::Expression"**
  %709 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %708, align 8
  %710 = icmp eq %"class.SkSL::Expression"* %709, null
  br i1 %710, label %713, label %711

711:                                              ; preds = %701
  %712 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %709) #15
  br label %713

713:                                              ; preds = %701, %711
  %714 = phi %"class.SkSL::Expression"* [ %712, %711 ], [ null, %701 ]
  %715 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression4MakeERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744) %703, i32 %706, %"class.SkSL::Expression"* %714) #15
  %716 = ptrtoint %"class.SkSL::Expression"* %715 to i64
  br label %921

717:                                              ; preds = %5
  %718 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %719 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %718, align 8
  %720 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %721 = bitcast %"class.SkSL::Expression"* %720 to %"class.SkSL::Expression"**
  %722 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %721, align 8
  %723 = icmp eq %"class.SkSL::Expression"* %722, null
  br i1 %723, label %726, label %724

724:                                              ; preds = %717
  %725 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %722) #15
  br label %726

726:                                              ; preds = %717, %724
  %727 = phi %"class.SkSL::Expression"* [ %725, %724 ], [ null, %717 ]
  %728 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %729 = load i32, i32* %728, align 8
  %730 = tail call %"class.SkSL::Expression"* @_ZN4SkSL17PostfixExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorE(%"class.SkSL::Context"* dereferenceable(744) %719, %"class.SkSL::Expression"* %727, i32 %729) #15
  %731 = ptrtoint %"class.SkSL::Expression"* %730 to i64
  br label %921

732:                                              ; preds = %5
  %733 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %734 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %733, align 8
  %735 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %734, i64 10
  %736 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %735, align 8
  %737 = tail call %"class.SkSL::Expression"* %736(%"class.SkSL::Expression"* %4) #15
  %738 = ptrtoint %"class.SkSL::Expression"* %737 to i64
  br label %921

739:                                              ; preds = %5
  %740 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %741 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %740, align 8
  %742 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %743 = bitcast %"class.SkSL::Expression"* %742 to %"class.SkSL::Expression"**
  %744 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %743, align 8
  %745 = icmp eq %"class.SkSL::Expression"* %744, null
  br i1 %745, label %748, label %746

746:                                              ; preds = %739
  %747 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %744) #15
  br label %748

748:                                              ; preds = %739, %746
  %749 = phi %"class.SkSL::Expression"* [ %747, %746 ], [ null, %739 ]
  %750 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %751 = bitcast i32* %750 to %class.SkSTArray.150*
  %752 = getelementptr inbounds %class.SkSTArray.150, %class.SkSTArray.150* %12, i64 0, i32 0, i32 0, i64 8
  %753 = getelementptr inbounds %class.SkSTArray.150, %class.SkSTArray.150* %12, i64 0, i32 0, i32 0, i64 0
  %754 = getelementptr inbounds %class.SkSTArray.150, %class.SkSTArray.150* %12, i64 0, i32 0, i32 0, i64 16
  %755 = bitcast i8* %754 to i64*
  %756 = bitcast i8* %752 to i8**
  store i8* %753, i8** %756, align 8
  store i64 34359738368, i64* %755, align 8
  %757 = icmp eq %class.SkSTArray.150* %12, %751
  br i1 %757, label %786, label %758

758:                                              ; preds = %748
  %759 = bitcast i8* %752 to %class.SkTArray.152*
  %760 = getelementptr inbounds i32, i32* %750, i64 2
  store i64 34359738368, i64* %755, align 8
  %761 = getelementptr inbounds i32, i32* %750, i64 4
  %762 = bitcast i32* %761 to i64*
  %763 = load i64, i64* %762, align 8
  %764 = lshr i64 %763, 1
  %765 = trunc i64 %764 to i32
  %766 = and i32 %765, 2147483647
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.152* %759, i32 %766, i32 0) #15
  %767 = load i64, i64* %762, align 8
  %768 = and i64 %767, 4294967294
  %769 = load i64, i64* %755, align 8
  %770 = and i64 %769, -4294967295
  %771 = or i64 %770, %768
  store i64 %771, i64* %755, align 8
  %772 = bitcast i32* %760 to i8**
  %773 = load i8*, i8** %772, align 8
  %774 = icmp eq i64 %768, 0
  br i1 %774, label %786, label %775

775:                                              ; preds = %758, %775
  %776 = phi i64 [ %781, %775 ], [ 0, %758 ]
  %777 = load i8*, i8** %756, align 8
  %778 = getelementptr inbounds i8, i8* %777, i64 %776
  %779 = getelementptr inbounds i8, i8* %773, i64 %776
  %780 = load i8, i8* %779, align 1
  store i8 %780, i8* %778, align 1
  %781 = add nuw nsw i64 %776, 1
  %782 = load i64, i64* %755, align 8
  %783 = lshr i64 %782, 1
  %784 = and i64 %783, 2147483647
  %785 = icmp ult i64 %781, %784
  br i1 %785, label %775, label %786

786:                                              ; preds = %775, %748, %758
  %787 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %741, %"class.SkSL::Expression"* %749, %class.SkSTArray.150* nonnull %12) #15
  %788 = ptrtoint %"class.SkSL::Expression"* %787 to i64
  %789 = load i64, i64* %755, align 8
  %790 = and i64 %789, 1
  %791 = icmp eq i64 %790, 0
  br i1 %791, label %921, label %792

792:                                              ; preds = %786
  %793 = load i8*, i8** %756, align 8
  call void @_Z7sk_freePv(i8* %793) #15
  br label %921

794:                                              ; preds = %5
  %795 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %796 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %795, align 8
  %797 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %798 = bitcast %"class.SkSL::Expression"* %797 to %"class.SkSL::Expression"**
  %799 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %798, align 8
  %800 = icmp eq %"class.SkSL::Expression"* %799, null
  br i1 %800, label %803, label %801

801:                                              ; preds = %794
  %802 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %799) #15
  br label %803

803:                                              ; preds = %794, %801
  %804 = phi %"class.SkSL::Expression"* [ %802, %801 ], [ null, %794 ]
  %805 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %806 = bitcast i32* %805 to %"class.SkSL::Expression"**
  %807 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %806, align 8
  %808 = icmp eq %"class.SkSL::Expression"* %807, null
  br i1 %808, label %811, label %809

809:                                              ; preds = %803
  %810 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %807) #15
  br label %811

811:                                              ; preds = %803, %809
  %812 = phi %"class.SkSL::Expression"* [ %810, %809 ], [ null, %803 ]
  %813 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 1
  %814 = bitcast %"class.SkSL::Type"** %813 to %"class.SkSL::Expression"**
  %815 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %814, align 8
  %816 = icmp eq %"class.SkSL::Expression"* %815, null
  br i1 %816, label %819, label %817

817:                                              ; preds = %811
  %818 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %815) #15
  br label %819

819:                                              ; preds = %811, %817
  %820 = phi %"class.SkSL::Expression"* [ %818, %817 ], [ null, %811 ]
  %821 = tail call %"class.SkSL::Expression"* @_ZN4SkSL17TernaryExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_S9_(%"class.SkSL::Context"* dereferenceable(744) %796, %"class.SkSL::Expression"* %804, %"class.SkSL::Expression"* %812, %"class.SkSL::Expression"* %820) #15
  %822 = ptrtoint %"class.SkSL::Expression"* %821 to i64
  br label %921

823:                                              ; preds = %5
  %824 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %825 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %824, align 8
  %826 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %825, i64 10
  %827 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %826, align 8
  %828 = tail call %"class.SkSL::Expression"* %827(%"class.SkSL::Expression"* %4) #15
  %829 = ptrtoint %"class.SkSL::Expression"* %828 to i64
  br label %921

830:                                              ; preds = %5
  %831 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1
  %832 = bitcast %"class.SkSL::Expression"* %831 to %"class.SkSL::Variable"**
  %833 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %832, align 8
  %834 = ptrtoint %"class.SkSL::Variable"* %833 to i64
  %835 = lshr i64 %834, 32
  %836 = shl i64 %834, 3
  %837 = and i64 %836, 4294967288
  %838 = add nuw nsw i64 %837, 8
  %839 = xor i64 %838, %835
  %840 = mul i64 %839, -7070675565921424023
  %841 = lshr i64 %840, 47
  %842 = xor i64 %840, %835
  %843 = xor i64 %842, %841
  %844 = mul i64 %843, -7070675565921424023
  %845 = lshr i64 %844, 47
  %846 = xor i64 %845, %844
  %847 = mul i64 %846, -7070675565921424023
  %848 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %849 = load i64, i64* %848, align 8
  %850 = icmp eq i64 %849, 0
  br i1 %850, label %912, label %851

851:                                              ; preds = %830
  %852 = tail call i64 @llvm.ctpop.i64(i64 %849) #15, !range !18
  %853 = icmp ugt i64 %852, 1
  br i1 %853, label %857, label %854

854:                                              ; preds = %851
  %855 = add i64 %849, -1
  %856 = and i64 %847, %855
  br label %861

857:                                              ; preds = %851
  %858 = icmp ult i64 %847, %849
  br i1 %858, label %861, label %859

859:                                              ; preds = %857
  %860 = urem i64 %847, %849
  br label %861

861:                                              ; preds = %859, %857, %854
  %862 = phi i64 [ %856, %854 ], [ %860, %859 ], [ %847, %857 ]
  %863 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %864 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %863, align 8
  %865 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %864, i64 %862
  %866 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %865, align 8
  %867 = icmp eq %"struct.std::__1::__hash_node_base.119"* %866, null
  br i1 %867, label %912, label %868

868:                                              ; preds = %861
  %869 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %866, i64 0, i32 0
  %870 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %869, align 8
  %871 = icmp eq %"struct.std::__1::__hash_node_base.119"* %870, null
  br i1 %871, label %912, label %872

872:                                              ; preds = %868
  %873 = add i64 %849, -1
  br label %874

874:                                              ; preds = %895, %872
  %875 = phi %"struct.std::__1::__hash_node_base.119"* [ %870, %872 ], [ %897, %895 ]
  %876 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %875, i64 1
  %877 = bitcast %"struct.std::__1::__hash_node_base.119"* %876 to i64*
  %878 = load i64, i64* %877, align 8
  %879 = icmp eq i64 %878, %847
  br i1 %879, label %890, label %880

880:                                              ; preds = %874
  br i1 %853, label %883, label %881

881:                                              ; preds = %880
  %882 = and i64 %878, %873
  br label %887

883:                                              ; preds = %880
  %884 = icmp ult i64 %878, %849
  br i1 %884, label %887, label %885

885:                                              ; preds = %883
  %886 = urem i64 %878, %849
  br label %887

887:                                              ; preds = %885, %883, %881
  %888 = phi i64 [ %882, %881 ], [ %886, %885 ], [ %878, %883 ]
  %889 = icmp eq i64 %888, %862
  br i1 %889, label %895, label %912

890:                                              ; preds = %874
  %891 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %875, i64 2
  %892 = bitcast %"struct.std::__1::__hash_node_base.119"* %891 to %"class.SkSL::Variable"**
  %893 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %892, align 8
  %894 = icmp eq %"class.SkSL::Variable"* %893, %833
  br i1 %894, label %899, label %895

895:                                              ; preds = %890, %887
  %896 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %875, i64 0, i32 0
  %897 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %896, align 8
  %898 = icmp eq %"struct.std::__1::__hash_node_base.119"* %897, null
  br i1 %898, label %912, label %874

899:                                              ; preds = %890
  %900 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %875, i64 3
  %901 = bitcast %"struct.std::__1::__hash_node_base.119"* %900 to %"class.SkSL::Expression"**
  %902 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %901, align 8
  %903 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %904 = bitcast i32* %903 to i8*
  %905 = load i8, i8* %904, align 8
  %906 = bitcast %"class.SkSL::Expression"* %902 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %907 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %906, align 8
  %908 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %907, i64 10
  %909 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %908, align 8
  %910 = tail call %"class.SkSL::Expression"* %909(%"class.SkSL::Expression"* %902) #15
  tail call void @_ZN4SkSL8Analysis13UpdateRefKindEPNS_10ExpressionENS_15VariableRefKindE(%"class.SkSL::Expression"* %910, i8 signext %905) #15
  %911 = ptrtoint %"class.SkSL::Expression"* %910 to i64
  br label %921

912:                                              ; preds = %887, %895, %861, %830, %868
  %913 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 0, i32 0, i32 1
  %914 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %4, i64 1, i32 0, i32 1
  %915 = bitcast i32* %914 to i8*
  %916 = load i8, i8* %915, align 8
  %917 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #15
  %918 = bitcast i8* %917 to %"class.SkSL::VariableReference"*
  %919 = load i32, i32* %913, align 4
  tail call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %918, i32 %919, %"class.SkSL::Variable"* %833, i8 signext %916) #15
  %920 = ptrtoint i8* %917 to i64
  br label %921

921:                                              ; preds = %5, %899, %912, %792, %786, %671, %650, %402, %381, %229, %208, %136, %115, %823, %819, %732, %726, %713, %697, %673, %568, %551, %550, %307, %291, %275, %259, %243, %38, %34
  %922 = phi i64 [ %829, %823 ], [ %822, %819 ], [ %738, %732 ], [ %731, %726 ], [ %716, %713 ], [ %700, %697 ], [ %679, %673 ], [ %576, %568 ], [ %557, %551 ], [ %521, %550 ], [ %310, %307 ], [ %294, %291 ], [ %278, %275 ], [ %262, %259 ], [ %246, %243 ], [ %44, %38 ], [ %37, %34 ], [ %109, %115 ], [ %109, %136 ], [ %202, %208 ], [ %202, %229 ], [ %375, %381 ], [ %375, %402 ], [ %644, %650 ], [ %644, %671 ], [ %788, %786 ], [ %788, %792 ], [ %911, %899 ], [ %920, %912 ], [ 0, %5 ]
  %923 = inttoptr i64 %922 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %923
}

declare %"class.SkSL::Expression"* @_ZN4SkSL16BinaryExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorES9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32, %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorArray4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray.141*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

declare %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"*, %"class.SkSL::SymbolTable"*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL19ConstructorCompound4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray.141*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorCompoundCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL25ConstructorDiagonalMatrix4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorMatrixResize4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL17ConstructorStruct4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray.141*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32, i8 signext) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL12FunctionCall4MakeERKNS_7ContextEiPKNS_4TypeERKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENSB_14default_deleteISD_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %class.SkSTArray.141*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL15IndexExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression4MakeERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL17PostfixExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %class.SkSTArray.150*) local_unnamed_addr #4

declare %"class.SkSL::Expression"* @_ZN4SkSL17TernaryExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_S9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEb(%"class.SkSL::Inliner"*, i32, %"class.std::__1::unordered_map"*, %"class.SkSL::SymbolTable"*, %"class.std::__1::unique_ptr"*, i32, %"class.SkSL::Statement"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.393", align 1
  %11 = alloca %"class.std::__1::unique_ptr.90", align 8
  %12 = alloca %class.SkSTArray, align 8
  %13 = alloca %"class.std::__1::shared_ptr", align 8
  %14 = alloca %class.SkSTArray, align 8
  %15 = alloca %class.SkSTArray, align 8
  %16 = alloca %"class.std::__1::shared_ptr", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::Variable"*, align 8
  %20 = zext i1 %7 to i8
  %21 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  switch i32 %25, label %650 [
    i32 16, label %26
    i32 17, label %131
    i32 18, label %131
    i32 19, label %131
    i32 20, label %138
    i32 21, label %159
    i32 22, label %172
    i32 23, label %225
    i32 24, label %258
    i32 25, label %258
    i32 26, label %265
    i32 27, label %319
    i32 29, label %494
  ]

26:                                               ; preds = %8
  %27 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %12, i64 0, i32 0, i32 0, i64 0
  %28 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %12, i64 0, i32 0, i32 0, i64 16
  %29 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %12, i64 0, i32 0, i32 0, i64 24
  %30 = bitcast i8* %29 to i64*
  %31 = bitcast i8* %28 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  store i8* %27, i8** %31, align 8, !alias.scope !19
  store i64 17179869184, i64* %30, align 8, !alias.scope !19
  %32 = bitcast i8* %28 to %class.SkTArray*
  %33 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2
  %34 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2, i32 0, i32 1
  %35 = bitcast i32* %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !19
  %37 = lshr i64 %36, 1
  %38 = trunc i64 %37 to i32
  %39 = and i32 %38, 2147483647
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %26
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %32, i32 %39, i32 0) #15
  %42 = load i64, i64* %30, align 8, !alias.scope !19
  %43 = shl i64 %42, 32
  %44 = and i64 %43, 4294967296
  %45 = and i64 %42, -4294967297
  %46 = or i64 %44, %45
  br label %47

47:                                               ; preds = %26, %41
  %48 = phi i64 [ %46, %41 ], [ 17179869184, %26 ]
  store i64 %48, i64* %30, align 8, !alias.scope !19
  %49 = bitcast %"class.SkSL::Statement"* %33 to %"class.std::__1::unique_ptr.23"**
  %50 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %49, align 8, !noalias !19
  %51 = icmp eq %"class.std::__1::unique_ptr.23"* %50, null
  br i1 %51, label %82, label %52

52:                                               ; preds = %47
  %53 = load i64, i64* %35, align 8, !noalias !19
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %50, i64 %55
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %82, label %58

58:                                               ; preds = %52
  %59 = bitcast i8* %28 to %"class.std::__1::unique_ptr.23"**
  br label %60

60:                                               ; preds = %58, %68
  %61 = phi %"class.std::__1::unique_ptr.23"* [ %50, %58 ], [ %80, %68 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  %64 = icmp eq %"class.SkSL::Statement"* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = call %"class.SkSL::Statement"* @_ZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEb(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.std::__1::unique_ptr"* %4, i32 %5, %"class.SkSL::Statement"* nonnull dereferenceable(16) %63, i1 zeroext %7) #15
  %67 = ptrtoint %"class.SkSL::Statement"* %66 to i64
  br label %68

68:                                               ; preds = %60, %65
  %69 = phi i64 [ %67, %65 ], [ 0, %60 ]
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %32, i32 1, i32 1) #15
  %70 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %59, align 8, !alias.scope !19
  %71 = load i64, i64* %30, align 8, !alias.scope !19
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %70, i64 %73
  %75 = add i64 %71, 2
  %76 = and i64 %75, 4294967294
  %77 = and i64 %71, -4294967295
  %78 = or i64 %76, %77
  store i64 %78, i64* %30, align 8, !alias.scope !19
  %79 = bitcast %"class.std::__1::unique_ptr.23"* %74 to i64*
  store i64 %69, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %61, i64 1
  %81 = icmp eq %"class.std::__1::unique_ptr.23"* %80, %56
  br i1 %81, label %82, label %60

82:                                               ; preds = %68, %47, %52
  %83 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 3
  %84 = bitcast %"class.SkSL::Statement"* %83 to %"class.SkSL::SymbolTable"**
  %85 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %84, align 8
  %86 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 3, i32 0, i32 1
  %87 = bitcast i32* %86 to %"class.std::__1::__shared_weak_count"**
  %88 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %87, align 8
  %89 = icmp eq %"class.std::__1::__shared_weak_count"* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %88, i64 0, i32 0, i32 1
  %92 = atomicrmw add i64* %91, i64 1 monotonic
  br label %93

93:                                               ; preds = %90, %82
  %94 = call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"* %85, %"class.std::__1::__shared_weak_count"* %88)
  %95 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %94, 0
  %96 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %94, 1
  %97 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 4
  %98 = bitcast %"class.SkSL::Statement"* %97 to i8*
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp ne i8 %99, 0
  %101 = call %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32 %1, %class.SkSTArray* nonnull %12, %"class.SkSL::SymbolTable"* %95, %"class.std::__1::__shared_weak_count"* %96, i1 zeroext %100) #15
  %102 = ptrtoint %"class.SkSL::Block"* %101 to i64
  %103 = load i64, i64* %30, align 8
  %104 = and i64 %103, 4294967294
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %93
  %107 = bitcast i8* %28 to %"class.std::__1::unique_ptr.23"**
  br label %112

108:                                              ; preds = %123, %93
  %109 = phi i64 [ %103, %93 ], [ %125, %123 ]
  %110 = and i64 %109, 1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %650, label %129

112:                                              ; preds = %123, %106
  %113 = phi i64 [ 0, %106 ], [ %124, %123 ]
  %114 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %107, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %114, i64 %113, i32 0, i32 0, i32 0
  %116 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %115, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %115, align 8
  %117 = icmp eq %"class.SkSL::Statement"* %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %112
  %119 = bitcast %"class.SkSL::Statement"* %116 to void (%"class.SkSL::Statement"*)***
  %120 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %120, i64 1
  %122 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %121, align 8
  call void %122(%"class.SkSL::Statement"* nonnull %116) #15
  br label %123

123:                                              ; preds = %118, %112
  %124 = add nuw nsw i64 %113, 1
  %125 = load i64, i64* %30, align 8
  %126 = lshr i64 %125, 1
  %127 = and i64 %126, 2147483647
  %128 = icmp ult i64 %124, %127
  br i1 %128, label %112, label %108

129:                                              ; preds = %108
  %130 = load i8*, i8** %31, align 8
  call void @_Z7sk_freePv(i8* %130) #15
  br label %650

131:                                              ; preds = %8, %8, %8
  %132 = bitcast %"class.SkSL::Statement"* %6 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %133 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %132, align 8
  %134 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %133, i64 4
  %135 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %134, align 8
  %136 = tail call %"class.SkSL::Statement"* %135(%"class.SkSL::Statement"* %6) #15
  %137 = ptrtoint %"class.SkSL::Statement"* %136 to i64
  br label %650

138:                                              ; preds = %8
  %139 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %140 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %139, align 8
  %141 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1
  %142 = bitcast %"class.SkSL::Statement"* %141 to %"class.SkSL::Statement"**
  %143 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %142, align 8
  %144 = icmp eq %"class.SkSL::Statement"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %138
  %146 = tail call %"class.SkSL::Statement"* @_ZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEb(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.std::__1::unique_ptr"* %4, i32 %5, %"class.SkSL::Statement"* nonnull dereferenceable(16) %143, i1 zeroext %7) #15
  br label %147

147:                                              ; preds = %138, %145
  %148 = phi %"class.SkSL::Statement"* [ %146, %145 ], [ null, %138 ]
  %149 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1, i32 0, i32 1
  %150 = bitcast i32* %149 to %"class.SkSL::Expression"**
  %151 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %150, align 8
  %152 = icmp eq %"class.SkSL::Expression"* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %147
  %154 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %151) #15
  br label %155

155:                                              ; preds = %147, %153
  %156 = phi %"class.SkSL::Expression"* [ %154, %153 ], [ null, %147 ]
  %157 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11DoStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEE(%"class.SkSL::Context"* dereferenceable(744) %140, %"class.SkSL::Statement"* %148, %"class.SkSL::Expression"* %156) #15
  %158 = ptrtoint %"class.SkSL::Statement"* %157 to i64
  br label %650

159:                                              ; preds = %8
  %160 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %161 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %160, align 8
  %162 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1
  %163 = bitcast %"class.SkSL::Statement"* %162 to %"class.SkSL::Expression"**
  %164 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %163, align 8
  %165 = icmp eq %"class.SkSL::Expression"* %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %159
  %167 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %164) #15
  br label %168

168:                                              ; preds = %159, %166
  %169 = phi %"class.SkSL::Expression"* [ %167, %166 ], [ null, %159 ]
  %170 = tail call %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744) %161, %"class.SkSL::Expression"* %169) #15
  %171 = ptrtoint %"class.SkSL::Statement"* %170 to i64
  br label %650

172:                                              ; preds = %8
  %173 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2
  %174 = bitcast %"class.SkSL::Statement"* %173 to %"class.SkSL::Statement"**
  %175 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %174, align 8
  %176 = icmp eq %"class.SkSL::Statement"* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %172
  %178 = tail call %"class.SkSL::Statement"* @_ZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEb(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.std::__1::unique_ptr"* %4, i32 %5, %"class.SkSL::Statement"* nonnull dereferenceable(16) %175, i1 zeroext %7) #15
  br label %179

179:                                              ; preds = %172, %177
  %180 = phi %"class.SkSL::Statement"* [ %178, %177 ], [ null, %172 ]
  %181 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %182 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %181, align 8
  %183 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2, i32 0, i32 1
  %184 = bitcast i32* %183 to %"class.SkSL::Expression"**
  %185 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %184, align 8
  %186 = icmp eq %"class.SkSL::Expression"* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %179
  %188 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %185) #15
  br label %189

189:                                              ; preds = %179, %187
  %190 = phi %"class.SkSL::Expression"* [ %188, %187 ], [ null, %179 ]
  %191 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 3
  %192 = bitcast %"class.SkSL::Statement"* %191 to %"class.SkSL::Expression"**
  %193 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %192, align 8
  %194 = icmp eq %"class.SkSL::Expression"* %193, null
  br i1 %194, label %197, label %195

195:                                              ; preds = %189
  %196 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %193) #15
  br label %197

197:                                              ; preds = %189, %195
  %198 = phi %"class.SkSL::Expression"* [ %196, %195 ], [ null, %189 ]
  %199 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 3, i32 0, i32 1
  %200 = bitcast i32* %199 to %"class.SkSL::Statement"**
  %201 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %200, align 8
  %202 = icmp eq %"class.SkSL::Statement"* %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %197
  %204 = tail call %"class.SkSL::Statement"* @_ZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEb(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.std::__1::unique_ptr"* %4, i32 %5, %"class.SkSL::Statement"* nonnull dereferenceable(16) %201, i1 zeroext %7) #15
  br label %205

205:                                              ; preds = %197, %203
  %206 = phi %"class.SkSL::Statement"* [ %204, %203 ], [ null, %197 ]
  %207 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1
  %208 = bitcast %"class.SkSL::Statement"* %207 to %"class.SkSL::SymbolTable"**
  %209 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %208, align 8
  %210 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1, i32 0, i32 1
  %211 = bitcast i32* %210 to %"class.std::__1::__shared_weak_count"**
  %212 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %211, align 8
  %213 = icmp eq %"class.std::__1::__shared_weak_count"* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %205
  %215 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %212, i64 0, i32 0, i32 1
  %216 = atomicrmw add i64* %215, i64 1 monotonic
  br label %217

217:                                              ; preds = %214, %205
  %218 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"* %209, %"class.std::__1::__shared_weak_count"* %212)
  %219 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %13, i64 0, i32 0
  %220 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %218, 0
  store %"class.SkSL::SymbolTable"* %220, %"class.SkSL::SymbolTable"** %219, align 8
  %221 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %13, i64 0, i32 1
  %222 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %218, 1
  store %"class.std::__1::__shared_weak_count"* %222, %"class.std::__1::__shared_weak_count"** %221, align 8
  %223 = tail call %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement4MakeERKNS_7ContextEiNSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEESC_S9_NS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %182, i32 %1, %"class.SkSL::Statement"* %180, %"class.SkSL::Expression"* %190, %"class.SkSL::Expression"* %198, %"class.SkSL::Statement"* %206, %"class.std::__1::shared_ptr"* nonnull byval(%"class.std::__1::shared_ptr") align 8 %13) #15
  %224 = ptrtoint %"class.SkSL::Statement"* %223 to i64
  br label %650

225:                                              ; preds = %8
  %226 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %227 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %226, align 8
  %228 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2, i32 0, i32 1
  %229 = bitcast i32* %228 to i8*
  %230 = load i8, i8* %229, align 8, !range !2
  %231 = icmp ne i8 %230, 0
  %232 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1
  %233 = bitcast %"class.SkSL::Statement"* %232 to %"class.SkSL::Expression"**
  %234 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %233, align 8
  %235 = icmp eq %"class.SkSL::Expression"* %234, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %225
  %237 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %234) #15
  br label %238

238:                                              ; preds = %225, %236
  %239 = phi %"class.SkSL::Expression"* [ %237, %236 ], [ null, %225 ]
  %240 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1, i32 0, i32 1
  %241 = bitcast i32* %240 to %"class.SkSL::Statement"**
  %242 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %241, align 8
  %243 = icmp eq %"class.SkSL::Statement"* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %238
  %245 = tail call %"class.SkSL::Statement"* @_ZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEb(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.std::__1::unique_ptr"* %4, i32 %5, %"class.SkSL::Statement"* nonnull dereferenceable(16) %242, i1 zeroext %7) #15
  br label %246

246:                                              ; preds = %238, %244
  %247 = phi %"class.SkSL::Statement"* [ %245, %244 ], [ null, %238 ]
  %248 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2
  %249 = bitcast %"class.SkSL::Statement"* %248 to %"class.SkSL::Statement"**
  %250 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %249, align 8
  %251 = icmp eq %"class.SkSL::Statement"* %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %246
  %253 = tail call %"class.SkSL::Statement"* @_ZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEb(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.std::__1::unique_ptr"* %4, i32 %5, %"class.SkSL::Statement"* nonnull dereferenceable(16) %250, i1 zeroext %7) #15
  br label %254

254:                                              ; preds = %246, %252
  %255 = phi %"class.SkSL::Statement"* [ %253, %252 ], [ null, %246 ]
  %256 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IfStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEESC_(%"class.SkSL::Context"* dereferenceable(744) %227, i32 %1, i1 zeroext %231, %"class.SkSL::Expression"* %239, %"class.SkSL::Statement"* %247, %"class.SkSL::Statement"* %255) #15
  %257 = ptrtoint %"class.SkSL::Statement"* %256 to i64
  br label %650

258:                                              ; preds = %8, %8
  %259 = bitcast %"class.SkSL::Statement"* %6 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %260 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %259, align 8
  %261 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %260, i64 4
  %262 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %261, align 8
  %263 = tail call %"class.SkSL::Statement"* %262(%"class.SkSL::Statement"* %6) #15
  %264 = ptrtoint %"class.SkSL::Statement"* %263 to i64
  br label %650

265:                                              ; preds = %8
  %266 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1
  %267 = bitcast %"class.SkSL::Statement"* %266 to %"class.SkSL::Expression"**
  %268 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %267, align 8
  %269 = icmp eq %"class.SkSL::Expression"* %268, null
  br i1 %269, label %270, label %278

270:                                              ; preds = %265
  %271 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #15
  %272 = getelementptr inbounds i8, i8* %271, i64 8
  %273 = bitcast i8* %272 to i32*
  store i32 -1, i32* %273, align 8
  %274 = getelementptr inbounds i8, i8* %271, i64 12
  %275 = bitcast i8* %274 to i32*
  store i32 25, i32* %275, align 4
  %276 = bitcast i8* %271 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL3NopE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %276, align 8
  %277 = ptrtoint i8* %271 to i64
  br label %650

278:                                              ; preds = %265
  %279 = icmp slt i32 %5, 1
  br i1 %279, label %280, label %300

280:                                              ; preds = %278
  %281 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %268) #15
  %282 = ptrtoint %"class.SkSL::Expression"* %281 to i64
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %284 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %283, align 8
  %285 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %282, i64* %285, align 8
  %286 = icmp eq %"class.SkSL::Expression"* %284, null
  br i1 %286, label %292, label %287

287:                                              ; preds = %280
  %288 = bitcast %"class.SkSL::Expression"* %284 to void (%"class.SkSL::Expression"*)***
  %289 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %288, align 8
  %290 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %289, i64 1
  %291 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %290, align 8
  tail call void %291(%"class.SkSL::Expression"* nonnull %284) #15
  br label %292

292:                                              ; preds = %287, %280
  %293 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #15
  %294 = getelementptr inbounds i8, i8* %293, i64 8
  %295 = bitcast i8* %294 to i32*
  store i32 -1, i32* %295, align 8
  %296 = getelementptr inbounds i8, i8* %293, i64 12
  %297 = bitcast i8* %296 to i32*
  store i32 25, i32* %297, align 4
  %298 = bitcast i8* %293 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL3NopE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %298, align 8
  %299 = ptrtoint i8* %293 to i64
  br label %650

300:                                              ; preds = %278
  %301 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %302 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %301, align 8
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %304 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %303, align 8
  %305 = bitcast %"class.SkSL::Expression"* %304 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %306 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %305, align 8
  %307 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %306, i64 10
  %308 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %307, align 8
  %309 = tail call %"class.SkSL::Expression"* %308(%"class.SkSL::Expression"* %304) #15
  tail call void @_ZN4SkSL8Analysis13UpdateRefKindEPNS_10ExpressionENS_15VariableRefKindE(%"class.SkSL::Expression"* %309, i8 signext 1) #15
  %310 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %267, align 8
  %311 = icmp eq %"class.SkSL::Expression"* %310, null
  br i1 %311, label %314, label %312

312:                                              ; preds = %300
  %313 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %310) #15
  br label %314

314:                                              ; preds = %312, %300
  %315 = phi %"class.SkSL::Expression"* [ %313, %312 ], [ null, %300 ]
  %316 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16BinaryExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorES9_(%"class.SkSL::Context"* dereferenceable(744) %302, %"class.SkSL::Expression"* %309, i32 64, %"class.SkSL::Expression"* %315) #15
  %317 = tail call %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744) %302, %"class.SkSL::Expression"* %316) #15
  %318 = ptrtoint %"class.SkSL::Statement"* %317 to i64
  br label %650

319:                                              ; preds = %8
  %320 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %14, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %320) #15
  %321 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %14, i64 0, i32 0, i32 0, i64 16
  %322 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %14, i64 0, i32 0, i32 0, i64 24
  %323 = bitcast i8* %322 to i64*
  %324 = bitcast i8* %321 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %320, i8 -86, i64 16, i1 false)
  store i8* %320, i8** %324, align 8
  store i64 17179869184, i64* %323, align 8
  %325 = bitcast i8* %321 to %class.SkTArray*
  %326 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 3
  %327 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 3, i32 0, i32 1
  %328 = bitcast i32* %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = lshr i64 %329, 1
  %331 = trunc i64 %330 to i32
  %332 = and i32 %331, 2147483647
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %340, label %334

334:                                              ; preds = %319
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %325, i32 %332, i32 0) #15
  %335 = load i64, i64* %323, align 8
  %336 = shl i64 %335, 32
  %337 = and i64 %336, 4294967296
  %338 = and i64 %335, -4294967297
  %339 = or i64 %337, %338
  br label %340

340:                                              ; preds = %319, %334
  %341 = phi i64 [ %339, %334 ], [ 17179869184, %319 ]
  store i64 %341, i64* %323, align 8
  %342 = bitcast %"class.SkSL::Statement"* %326 to %"class.std::__1::unique_ptr.23"**
  %343 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %342, align 8
  %344 = icmp eq %"class.std::__1::unique_ptr.23"* %343, null
  br i1 %344, label %353, label %345

345:                                              ; preds = %340
  %346 = load i64, i64* %328, align 8
  %347 = lshr i64 %346, 1
  %348 = and i64 %347, 2147483647
  %349 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %343, i64 %348
  %350 = icmp eq i64 %348, 0
  br i1 %350, label %353, label %351

351:                                              ; preds = %345
  %352 = bitcast i8* %321 to %"class.std::__1::unique_ptr.23"**
  br label %451

353:                                              ; preds = %469, %340, %345
  %354 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %355 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %354, align 8
  %356 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1
  %357 = bitcast %"class.SkSL::Statement"* %356 to i8*
  %358 = load i8, i8* %357, align 8, !range !2
  %359 = icmp ne i8 %358, 0
  %360 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1, i32 0, i32 1
  %361 = bitcast i32* %360 to %"class.SkSL::Expression"**
  %362 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %361, align 8
  %363 = icmp eq %"class.SkSL::Expression"* %362, null
  br i1 %363, label %366, label %364

364:                                              ; preds = %353
  %365 = call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %362) #15
  br label %366

366:                                              ; preds = %353, %364
  %367 = phi %"class.SkSL::Expression"* [ %365, %364 ], [ null, %353 ]
  %368 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %15, i64 0, i32 0, i32 0, i64 16
  %369 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %15, i64 0, i32 0, i32 0, i64 0
  %370 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %15, i64 0, i32 0, i32 0, i64 24
  %371 = bitcast i8* %370 to i64*
  %372 = bitcast i8* %368 to i8**
  store i8* %369, i8** %372, align 8
  store i64 17179869184, i64* %371, align 8
  %373 = bitcast i8* %368 to %class.SkTArray*
  %374 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %373, %class.SkTArray* dereferenceable(16) %325) #15
  %375 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 4
  %376 = bitcast %"class.SkSL::Statement"* %375 to %"class.SkSL::SymbolTable"**
  %377 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %376, align 8
  %378 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 4, i32 0, i32 1
  %379 = bitcast i32* %378 to %"class.std::__1::__shared_weak_count"**
  %380 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %379, align 8
  %381 = icmp eq %"class.std::__1::__shared_weak_count"* %380, null
  br i1 %381, label %385, label %382

382:                                              ; preds = %366
  %383 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %380, i64 0, i32 0, i32 1
  %384 = atomicrmw add i64* %383, i64 1 monotonic
  br label %385

385:                                              ; preds = %366, %382
  %386 = call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"* %377, %"class.std::__1::__shared_weak_count"* %380)
  %387 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %16, i64 0, i32 0
  %388 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %386, 0
  store %"class.SkSL::SymbolTable"* %388, %"class.SkSL::SymbolTable"** %387, align 8
  %389 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %16, i64 0, i32 1
  %390 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %386, 1
  store %"class.std::__1::__shared_weak_count"* %390, %"class.std::__1::__shared_weak_count"** %389, align 8
  %391 = call %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ENS5_INS_9StatementENS7_ISB_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %355, i32 %1, i1 zeroext %359, %"class.SkSL::Expression"* %367, %class.SkSTArray* nonnull %15, %"class.std::__1::shared_ptr"* nonnull byval(%"class.std::__1::shared_ptr") align 8 %16) #15
  %392 = ptrtoint %"class.SkSL::Statement"* %391 to i64
  %393 = load i64, i64* %371, align 8
  %394 = and i64 %393, 4294967294
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %398, label %396

396:                                              ; preds = %385
  %397 = bitcast i8* %368 to %"class.std::__1::unique_ptr.23"**
  br label %402

398:                                              ; preds = %413, %385
  %399 = phi i64 [ %393, %385 ], [ %415, %413 ]
  %400 = and i64 %399, 1
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %421, label %419

402:                                              ; preds = %413, %396
  %403 = phi i64 [ 0, %396 ], [ %414, %413 ]
  %404 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %397, align 8
  %405 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %404, i64 %403, i32 0, i32 0, i32 0
  %406 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %405, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %405, align 8
  %407 = icmp eq %"class.SkSL::Statement"* %406, null
  br i1 %407, label %413, label %408

408:                                              ; preds = %402
  %409 = bitcast %"class.SkSL::Statement"* %406 to void (%"class.SkSL::Statement"*)***
  %410 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %409, align 8
  %411 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %410, i64 1
  %412 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %411, align 8
  call void %412(%"class.SkSL::Statement"* nonnull %406) #15
  br label %413

413:                                              ; preds = %408, %402
  %414 = add nuw nsw i64 %403, 1
  %415 = load i64, i64* %371, align 8
  %416 = lshr i64 %415, 1
  %417 = and i64 %416, 2147483647
  %418 = icmp ult i64 %414, %417
  br i1 %418, label %402, label %398

419:                                              ; preds = %398
  %420 = load i8*, i8** %372, align 8
  call void @_Z7sk_freePv(i8* %420) #15
  br label %421

421:                                              ; preds = %398, %419
  %422 = load i64, i64* %323, align 8
  %423 = and i64 %422, 4294967294
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %427, label %425

425:                                              ; preds = %421
  %426 = bitcast i8* %321 to %"class.std::__1::unique_ptr.23"**
  br label %431

427:                                              ; preds = %442, %421
  %428 = phi i64 [ %422, %421 ], [ %444, %442 ]
  %429 = and i64 %428, 1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %450, label %448

431:                                              ; preds = %442, %425
  %432 = phi i64 [ 0, %425 ], [ %443, %442 ]
  %433 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %426, align 8
  %434 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %433, i64 %432, i32 0, i32 0, i32 0
  %435 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %434, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %434, align 8
  %436 = icmp eq %"class.SkSL::Statement"* %435, null
  br i1 %436, label %442, label %437

437:                                              ; preds = %431
  %438 = bitcast %"class.SkSL::Statement"* %435 to void (%"class.SkSL::Statement"*)***
  %439 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %438, align 8
  %440 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %439, i64 1
  %441 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %440, align 8
  call void %441(%"class.SkSL::Statement"* nonnull %435) #15
  br label %442

442:                                              ; preds = %437, %431
  %443 = add nuw nsw i64 %432, 1
  %444 = load i64, i64* %323, align 8
  %445 = lshr i64 %444, 1
  %446 = and i64 %445, 2147483647
  %447 = icmp ult i64 %443, %446
  br i1 %447, label %431, label %427

448:                                              ; preds = %427
  %449 = load i8*, i8** %324, align 8
  call void @_Z7sk_freePv(i8* %449) #15
  br label %450

450:                                              ; preds = %427, %448
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %320) #15
  br label %650

451:                                              ; preds = %351, %469
  %452 = phi %"class.std::__1::unique_ptr.23"* [ %343, %351 ], [ %492, %469 ]
  %453 = bitcast %"class.std::__1::unique_ptr.23"* %452 to %"class.SkSL::SwitchCase"**
  %454 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %453, align 8
  %455 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %454, i64 0, i32 1, i32 0, i32 0, i32 0
  %456 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %455, align 8
  %457 = icmp eq %"class.SkSL::Expression"* %456, null
  br i1 %457, label %460, label %458

458:                                              ; preds = %451
  %459 = call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %456) #15
  br label %460

460:                                              ; preds = %451, %458
  %461 = phi %"class.SkSL::Expression"* [ %459, %458 ], [ null, %451 ]
  %462 = ptrtoint %"class.SkSL::Expression"* %461 to i64
  %463 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %454, i64 0, i32 2, i32 0, i32 0, i32 0
  %464 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %463, align 8
  %465 = icmp eq %"class.SkSL::Statement"* %464, null
  br i1 %465, label %469, label %466

466:                                              ; preds = %460
  %467 = call %"class.SkSL::Statement"* @_ZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEb(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.std::__1::unique_ptr"* %4, i32 %5, %"class.SkSL::Statement"* nonnull dereferenceable(16) %464, i1 zeroext %7) #15
  %468 = ptrtoint %"class.SkSL::Statement"* %467 to i64
  br label %469

469:                                              ; preds = %460, %466
  %470 = phi i64 [ %468, %466 ], [ 0, %460 ]
  %471 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #15
  %472 = getelementptr inbounds i8, i8* %471, i64 8
  %473 = bitcast i8* %472 to i32*
  store i32 %1, i32* %473, align 8
  %474 = getelementptr inbounds i8, i8* %471, i64 12
  %475 = bitcast i8* %474 to i32*
  store i32 28, i32* %475, align 4
  %476 = bitcast i8* %471 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %476, align 8
  %477 = getelementptr inbounds i8, i8* %471, i64 16
  %478 = bitcast i8* %477 to i64*
  store i64 %462, i64* %478, align 8
  %479 = getelementptr inbounds i8, i8* %471, i64 24
  %480 = bitcast i8* %479 to i64*
  store i64 %470, i64* %480, align 8
  %481 = ptrtoint i8* %471 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %325, i32 1, i32 1) #15
  %482 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %352, align 8
  %483 = load i64, i64* %323, align 8
  %484 = lshr i64 %483, 1
  %485 = and i64 %484, 2147483647
  %486 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %482, i64 %485
  %487 = add i64 %483, 2
  %488 = and i64 %487, 4294967294
  %489 = and i64 %483, -4294967295
  %490 = or i64 %488, %489
  store i64 %490, i64* %323, align 8
  %491 = bitcast %"class.std::__1::unique_ptr.23"* %486 to i64*
  store i64 %481, i64* %491, align 8
  %492 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %452, i64 1
  %493 = icmp eq %"class.std::__1::unique_ptr.23"* %492, %349
  br i1 %493, label %353, label %451

494:                                              ; preds = %8
  %495 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2, i32 0, i32 1
  %496 = bitcast i32* %495 to %"class.SkSL::Expression"**
  %497 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %496, align 8
  %498 = icmp eq %"class.SkSL::Expression"* %497, null
  br i1 %498, label %501, label %499

499:                                              ; preds = %494
  %500 = tail call %"class.SkSL::Expression"* @_ZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_(%"class.SkSL::Inliner"* %0, i32 %1, %"class.std::__1::unordered_map"* %2, %"class.SkSL::SymbolTable"* %3, %"class.SkSL::Expression"* nonnull dereferenceable(24) %497) #15
  br label %501

501:                                              ; preds = %494, %499
  %502 = phi %"class.SkSL::Expression"* [ %500, %499 ], [ null, %494 ]
  %503 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1
  %504 = bitcast %"class.SkSL::Statement"* %503 to %"class.SkSL::Variable"**
  %505 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %504, align 8
  %506 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 1
  %507 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %505, i64 0, i32 0, i32 1, i32 0
  %508 = load i8*, i8** %507, align 8
  %509 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %505, i64 0, i32 0, i32 1, i32 1
  %510 = load i64, i64* %509, align 8
  %511 = icmp ugt i64 %510, -17
  br i1 %511, label %512, label %514

512:                                              ; preds = %501
  %513 = bitcast %"class.SkSL::String"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %513) #16
  unreachable

514:                                              ; preds = %501
  %515 = icmp ult i64 %510, 23
  br i1 %515, label %524, label %516

516:                                              ; preds = %514
  %517 = add nuw i64 %510, 16
  %518 = and i64 %517, -16
  %519 = tail call i8* @_Znwm(i64 %518) #17
  %520 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %519, i8** %520, align 8
  %521 = or i64 %518, -9223372036854775808
  %522 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %521, i64* %522, align 8
  %523 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %510, i64* %523, align 8
  br label %530

524:                                              ; preds = %514
  %525 = trunc i64 %510 to i8
  %526 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %527 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %526, i64 0, i32 1, i32 0
  store i8 %525, i8* %527, align 1
  %528 = bitcast %"class.SkSL::String"* %18 to i8*
  %529 = icmp eq i64 %510, 0
  br i1 %529, label %532, label %530

530:                                              ; preds = %524, %516
  %531 = phi i8* [ %519, %516 ], [ %528, %524 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %531, i8* align 1 %508, i64 %510, i1 false) #15
  br label %532

532:                                              ; preds = %524, %530
  %533 = phi i8* [ %528, %524 ], [ %531, %530 ]
  %534 = getelementptr inbounds i8, i8* %533, i64 %510
  store i8 0, i8* %534, align 1
  call void @_ZN4SkSL7Mangler10uniqueNameENS_6StringEPNS_11SymbolTableE(%"class.SkSL::String"* nonnull sret %17, %"class.SkSL::Mangler"* %506, %"class.SkSL::String"* nonnull %18, %"class.SkSL::SymbolTable"* %3) #15
  %535 = call %"class.SkSL::String"* @_ZN4SkSL11SymbolTable21takeOwnershipOfStringENS_6StringE(%"class.SkSL::SymbolTable"* %3, %"class.SkSL::String"* nonnull %17) #15
  %536 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %537 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %536, i64 0, i32 1, i32 0
  %538 = load i8, i8* %537, align 1
  %539 = icmp slt i8 %538, 0
  br i1 %539, label %540, label %543

540:                                              ; preds = %532
  %541 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load i8*, i8** %541, align 8
  call void @_ZdlPv(i8* %542) #17
  br label %543

543:                                              ; preds = %532, %540
  %544 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %545 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %544, i64 0, i32 1, i32 0
  %546 = load i8, i8* %545, align 1
  %547 = icmp slt i8 %546, 0
  br i1 %547, label %548, label %551

548:                                              ; preds = %543
  %549 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %550 = load i8*, i8** %549, align 8
  call void @_ZdlPv(i8* %550) #17
  br label %551

551:                                              ; preds = %543, %548
  %552 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %505, i64 0, i32 2
  %553 = bitcast %"struct.SkSL::Modifiers"** %552 to i64*
  %554 = load i64, i64* %553, align 8
  %555 = bitcast %"class.SkSL::String"* %535 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %555, i64 0, i32 1, i32 0
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %562

559:                                              ; preds = %551
  %560 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %535, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  br label %564

562:                                              ; preds = %551
  %563 = bitcast %"class.SkSL::String"* %535 to i8*
  br label %564

564:                                              ; preds = %559, %562
  %565 = phi i8* [ %561, %559 ], [ %563, %562 ]
  %566 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %505, i64 0, i32 0, i32 2
  %567 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %566, align 8
  %568 = call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %567, %"class.SkSL::SymbolTable"* %3) #15
  %569 = ptrtoint %"class.SkSL::Type"* %568 to i64
  %570 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %505, i64 0, i32 3
  %571 = load i8, i8* %570, align 8
  %572 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #15
  %573 = bitcast i8* %572 to %"class.SkSL::Variable"*
  %574 = call i64 @strlen(i8* %565) #18
  %575 = bitcast i8* %572 to i32 (...)***
  %576 = getelementptr inbounds i8, i8* %572, i64 8
  %577 = bitcast i8* %576 to i32*
  store i32 %1, i32* %577, align 8
  %578 = getelementptr inbounds i8, i8* %572, i64 12
  %579 = bitcast i8* %578 to i32*
  store i32 15, i32* %579, align 4
  %580 = getelementptr inbounds i8, i8* %572, i64 16
  %581 = bitcast i8* %580 to i8**
  store i8* %565, i8** %581, align 8
  %582 = getelementptr inbounds i8, i8* %572, i64 24
  %583 = bitcast i8* %582 to i64*
  store i64 %574, i64* %583, align 8
  %584 = getelementptr inbounds i8, i8* %572, i64 32
  %585 = bitcast i8* %584 to i64*
  store i64 %569, i64* %585, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %575, align 8
  %586 = getelementptr inbounds i8, i8* %572, i64 40
  %587 = bitcast i8* %586 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %587, align 8
  %588 = getelementptr inbounds i8, i8* %572, i64 48
  %589 = bitcast i8* %588 to i64*
  store i64 %554, i64* %589, align 8
  %590 = getelementptr inbounds i8, i8* %572, i64 56
  store i8 %571, i8* %590, align 8
  %591 = getelementptr inbounds i8, i8* %572, i64 57
  store i8 %20, i8* %591, align 1
  %592 = ptrtoint i8* %572 to i64
  %593 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #15
  %594 = bitcast i8* %593 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %594, i32 %1, %"class.SkSL::Variable"* %573, i8 signext 0) #15
  %595 = ptrtoint i8* %593 to i64
  %596 = bitcast %"class.SkSL::Variable"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %596) #15
  store %"class.SkSL::Variable"* %505, %"class.SkSL::Variable"** %19, align 8
  %597 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0
  %598 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %598) #15
  %599 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Variable"** %19, %"class.SkSL::Variable"*** %599, align 8
  %600 = getelementptr inbounds %"class.std::__1::tuple.393", %"class.std::__1::tuple.393"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %600) #15
  %601 = call { %"struct.std::__1::__hash_node_base.119"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.115"* %597, %"class.SkSL::Variable"** nonnull dereferenceable(8) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.393"* nonnull dereferenceable(1) %10) #15
  %602 = extractvalue { %"struct.std::__1::__hash_node_base.119"*, i8 } %601, 0
  %603 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %602, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %600) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %598) #15
  %604 = bitcast %"struct.std::__1::__hash_node_base.119"* %603 to %"class.SkSL::Expression"**
  %605 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %604, align 8
  %606 = bitcast %"struct.std::__1::__hash_node_base.119"* %603 to i64*
  store i64 %595, i64* %606, align 8
  %607 = icmp eq %"class.SkSL::Expression"* %605, null
  br i1 %607, label %613, label %608

608:                                              ; preds = %564
  %609 = bitcast %"class.SkSL::Expression"* %605 to void (%"class.SkSL::Expression"*)***
  %610 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %609, align 8
  %611 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %610, i64 1
  %612 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %611, align 8
  call void %612(%"class.SkSL::Expression"* nonnull %605) #15
  br label %613

613:                                              ; preds = %608, %564
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %596) #15
  %614 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %615 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %614, align 8
  %616 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 1, i32 0, i32 1
  %617 = bitcast i32* %616 to %"class.SkSL::Type"**
  %618 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %617, align 8
  %619 = call %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"* %618, %"class.SkSL::SymbolTable"* %3) #15
  %620 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2
  %621 = bitcast %"class.SkSL::Statement"* %620 to i32*
  %622 = load i32, i32* %621, align 8
  %623 = call %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration4MakeERKNS_7ContextEPNS_8VariableEPKNS_4TypeEiNSt3__110unique_ptrINS_10ExpressionENS9_14default_deleteISB_EEEE(%"class.SkSL::Context"* dereferenceable(744) %615, %"class.SkSL::Variable"* %573, %"class.SkSL::Type"* %619, i32 %622, %"class.SkSL::Expression"* %502) #15
  %624 = ptrtoint %"class.SkSL::Statement"* %623 to i64
  %625 = bitcast %"class.std::__1::unique_ptr.90"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %625) #15
  %626 = bitcast %"class.std::__1::unique_ptr.90"* %11 to i64*
  store i64 %592, i64* %626, align 8
  %627 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %3, i64 0, i32 1, i32 0, i32 1
  %628 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %627, align 8
  %629 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %630 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %629, align 8
  %631 = icmp ult %"class.std::__1::unique_ptr.90"* %628, %630
  br i1 %631, label %632, label %638

632:                                              ; preds = %613
  %633 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %633, align 8
  %634 = bitcast %"class.std::__1::unique_ptr.90"* %628 to i64*
  store i64 %592, i64* %634, align 8
  %635 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %628, i64 1
  %636 = ptrtoint %"class.std::__1::unique_ptr.90"* %635 to i64
  %637 = bitcast %"class.std::__1::unique_ptr.90"** %627 to i64*
  store i64 %636, i64* %637, align 8
  br label %640

638:                                              ; preds = %613
  %639 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %3, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.88"* %639, %"class.std::__1::unique_ptr.90"* nonnull dereferenceable(8) %11) #15
  br label %640

640:                                              ; preds = %638, %632
  %641 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %11, i64 0, i32 0, i32 0, i32 0
  %642 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %641, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %641, align 8
  %643 = icmp eq %"class.SkSL::Symbol"* %642, null
  br i1 %643, label %649, label %644

644:                                              ; preds = %640
  %645 = bitcast %"class.SkSL::Symbol"* %642 to void (%"class.SkSL::Symbol"*)***
  %646 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %645, align 8
  %647 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %646, i64 1
  %648 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %647, align 8
  call void %648(%"class.SkSL::Symbol"* nonnull %642) #15
  br label %649

649:                                              ; preds = %640, %644
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %625) #15
  br label %650

650:                                              ; preds = %8, %129, %108, %270, %292, %314, %649, %450, %258, %254, %217, %168, %155, %131
  %651 = phi i64 [ %624, %649 ], [ %392, %450 ], [ %299, %292 ], [ %318, %314 ], [ %277, %270 ], [ %264, %258 ], [ %257, %254 ], [ %224, %217 ], [ %171, %168 ], [ %158, %155 ], [ %137, %131 ], [ %102, %108 ], [ %102, %129 ], [ 0, %8 ]
  %652 = inttoptr i64 %651 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %652
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32, %class.SkSTArray*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.SkSL::SymbolTable"* %0 to i64
  %4 = icmp eq %"class.SkSL::SymbolTable"* %0, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %2
  %6 = ptrtoint %"class.std::__1::__shared_weak_count"* %1 to i64
  %7 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %5
  %11 = tail call i8* @_Znwm(i64 128) #17
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 24
  %15 = bitcast i8* %14 to i64*
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 32
  %17 = bitcast i8* %16 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %1, %"class.std::__1::__shared_weak_count"** %17, align 8
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 1 monotonic
  br label %22

22:                                               ; preds = %19, %10
  %23 = phi i1 [ %18, %19 ], [ true, %10 ]
  %24 = getelementptr inbounds i8, i8* %11, i64 40
  %25 = getelementptr inbounds i8, i8* %11, i64 72
  %26 = getelementptr inbounds i8, i8* %11, i64 120
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 6
  %28 = bitcast %"class.SkSL::ErrorReporter"** %27 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 48, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false)
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %29, i64* %30, align 8
  br i1 %23, label %41, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %33 = atomicrmw add i64* %32, i64 -1 acq_rel
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %37 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %38 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %38, i64 2
  %40 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, align 8
  tail call void %40(%"class.std::__1::__shared_count"* %36) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #15
  br label %41

41:                                               ; preds = %22, %31, %35
  %42 = ptrtoint i8* %14 to i64
  %43 = ptrtoint i8* %11 to i64
  br label %56

44:                                               ; preds = %2
  %45 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %48 = atomicrmw add i64* %47, i64 -1 acq_rel
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %52 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %53 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %53, i64 2
  %55 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, align 8
  tail call void %55(%"class.std::__1::__shared_count"* %51) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #15
  br label %56

56:                                               ; preds = %5, %41, %44, %46, %50
  %57 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %3, %5 ], [ %42, %41 ]
  %58 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %6, %5 ], [ %43, %41 ]
  %59 = inttoptr i64 %57 to %"class.SkSL::SymbolTable"*
  %60 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.SkSL::SymbolTable"* %59, 0
  %61 = inttoptr i64 %58 to %"class.std::__1::__shared_weak_count"*
  %62 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %60, %"class.std::__1::__shared_weak_count"* %61, 1
  ret { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %62
}

declare %"class.SkSL::Statement"* @_ZN4SkSL11DoStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Statement"*, %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*) local_unnamed_addr #4

declare %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement4MakeERKNS_7ContextEiNSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEESC_S9_NS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Statement"*, %"class.SkSL::Expression"*, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.std::__1::shared_ptr"* byval(%"class.std::__1::shared_ptr") align 8) local_unnamed_addr #4

declare %"class.SkSL::Statement"* @_ZN4SkSL11IfStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEESC_(%"class.SkSL::Context"* dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.SkSL::Statement"*) local_unnamed_addr #4

declare %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ENS5_INS_9StatementENS7_ISB_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %class.SkSTArray*, %"class.std::__1::shared_ptr"* byval(%"class.std::__1::shared_ptr") align 8) local_unnamed_addr #4

declare %"class.SkSL::String"* @_ZN4SkSL11SymbolTable21takeOwnershipOfStringENS_6StringE(%"class.SkSL::SymbolTable"*, %"class.SkSL::String"*) local_unnamed_addr #4

declare void @_ZN4SkSL7Mangler10uniqueNameENS_6StringEPNS_11SymbolTableE(%"class.SkSL::String"* sret, %"class.SkSL::Mangler"*, %"class.SkSL::String"*, %"class.SkSL::SymbolTable"*) local_unnamed_addr #4

declare %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration4MakeERKNS_7ContextEPNS_8VariableEPKNS_4TypeEiNSt3__110unique_ptrINS_10ExpressionENS9_14default_deleteISB_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.SkSL::Expression"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } @_ZN4SkSL7Inliner18makeInlineVariableERKNS_6StringEPKNS_4TypeEPNS_11SymbolTableENS_9ModifiersEbPNSt3__110unique_ptrINS_10ExpressionENSA_14default_deleteISC_EEEE(%"class.SkSL::Inliner"*, %"class.SkSL::String"* nocapture readonly dereferenceable(24), %"class.SkSL::Type"*, %"class.SkSL::SymbolTable"*, %"struct.SkSL::Modifiers"* nocapture readnone byval(%"struct.SkSL::Modifiers") align 8, i1 zeroext, %"class.std::__1::unique_ptr"* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::unique_ptr.90", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"struct.SkSL::Modifiers", align 8
  %12 = zext i1 %5 to i8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 18
  %14 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %13, align 8
  %15 = icmp eq %"class.SkSL::Type"* %14, null
  %16 = select i1 %15, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %14
  %17 = ptrtoint %"class.SkSL::Type"* %16 to i64
  %18 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 1
  %19 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %7
  %24 = bitcast %"class.SkSL::String"* %10 to i8*
  %25 = bitcast %"class.SkSL::String"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 24, i1 false) #15
  br label %32

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %27, i8* %29, i64 %31) #15
  br label %32

32:                                               ; preds = %23, %26
  call void @_ZN4SkSL7Mangler10uniqueNameENS_6StringEPNS_11SymbolTableE(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::Mangler"* %18, %"class.SkSL::String"* nonnull %10, %"class.SkSL::SymbolTable"* %3) #15
  %33 = call %"class.SkSL::String"* @_ZN4SkSL11SymbolTable21takeOwnershipOfStringENS_6StringE(%"class.SkSL::SymbolTable"* %3, %"class.SkSL::String"* nonnull %9) #15
  %34 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #17
  br label %41

41:                                               ; preds = %32, %38
  %42 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #17
  br label %49

49:                                               ; preds = %41, %46
  %50 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %51 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %50, align 8
  %52 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %51, i64 0, i32 3
  %53 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %52, align 8
  %54 = bitcast %"struct.SkSL::Modifiers"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %54) #15
  %55 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %11, i64 0, i32 0, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %11, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %11, i64 0, i32 0, i32 12, i32 0
  %58 = bitcast i32* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 -1, i64 40, i1 false) #15
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8** %57, align 8
  %59 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %11, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %11, i64 0, i32 0, i32 13
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %11, i64 0, i32 1
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %53, i64 0, i32 0, i32 0
  %63 = call { %"struct.std::__1::__hash_node_base.67"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.63"* %62, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %11, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %11) #15
  %64 = extractvalue { %"struct.std::__1::__hash_node_base.67"*, i8 } %63, 0
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %64, i64 2
  %66 = ptrtoint %"struct.std::__1::__hash_node_base.67"* %65 to i64
  %67 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %49
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  br label %76

74:                                               ; preds = %49
  %75 = bitcast %"class.SkSL::String"* %33 to i8*
  br label %76

76:                                               ; preds = %71, %74
  %77 = phi i8* [ %73, %71 ], [ %75, %74 ]
  %78 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #15
  %79 = bitcast i8* %78 to %"class.SkSL::Variable"*
  %80 = call i64 @strlen(i8* %77) #18
  %81 = bitcast i8* %78 to i32 (...)***
  %82 = getelementptr inbounds i8, i8* %78, i64 8
  %83 = bitcast i8* %82 to i32*
  store i32 -1, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %78, i64 12
  %85 = bitcast i8* %84 to i32*
  store i32 15, i32* %85, align 4
  %86 = getelementptr inbounds i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to i8**
  store i8* %77, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %78, i64 24
  %89 = bitcast i8* %88 to i64*
  store i64 %80, i64* %89, align 8
  %90 = getelementptr inbounds i8, i8* %78, i64 32
  %91 = bitcast i8* %90 to i64*
  store i64 %17, i64* %91, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %92 = getelementptr inbounds i8, i8* %78, i64 40
  %93 = bitcast i8* %92 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %93, align 8
  %94 = getelementptr inbounds i8, i8* %78, i64 48
  %95 = bitcast i8* %94 to i64*
  store i64 %66, i64* %95, align 8
  %96 = getelementptr inbounds i8, i8* %78, i64 56
  store i8 2, i8* %96, align 8
  %97 = getelementptr inbounds i8, i8* %78, i64 57
  store i8 %12, i8* %97, align 1
  %98 = ptrtoint i8* %78 to i64
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %54) #15
  %99 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %50, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %100, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %100, align 8
  %102 = call %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration4MakeERKNS_7ContextEPNS_8VariableEPKNS_4TypeEiNSt3__110unique_ptrINS_10ExpressionENS9_14default_deleteISB_EEEE(%"class.SkSL::Context"* dereferenceable(744) %99, %"class.SkSL::Variable"* %79, %"class.SkSL::Type"* %16, i32 0, %"class.SkSL::Expression"* %101) #15
  %103 = bitcast i8* %78 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %3, %"class.SkSL::Symbol"* %103) #15
  %104 = bitcast %"class.std::__1::unique_ptr.90"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #15
  %105 = bitcast %"class.std::__1::unique_ptr.90"* %8 to i64*
  store i64 %98, i64* %105, align 8
  %106 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %3, i64 0, i32 1, i32 0, i32 1
  %107 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %106, align 8
  %108 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %109 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %108, align 8
  %110 = icmp ult %"class.std::__1::unique_ptr.90"* %107, %109
  br i1 %110, label %111, label %117

111:                                              ; preds = %76
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %112, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.90"* %107 to i64*
  store i64 %98, i64* %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %107, i64 1
  %115 = ptrtoint %"class.std::__1::unique_ptr.90"* %114 to i64
  %116 = bitcast %"class.std::__1::unique_ptr.90"** %106 to i64*
  store i64 %115, i64* %116, align 8
  br label %119

117:                                              ; preds = %76
  %118 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %3, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.88"* %118, %"class.std::__1::unique_ptr.90"* nonnull dereferenceable(8) %8) #15
  br label %119

119:                                              ; preds = %117, %111
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %8, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %120, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %120, align 8
  %122 = icmp eq %"class.SkSL::Symbol"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  %124 = bitcast %"class.SkSL::Symbol"* %121 to void (%"class.SkSL::Symbol"*)***
  %125 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %125, i64 1
  %127 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %126, align 8
  call void %127(%"class.SkSL::Symbol"* nonnull %121) #15
  br label %128

128:                                              ; preds = %123, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #15
  %129 = insertvalue { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } undef, %"class.SkSL::Variable"* %79, 0
  %130 = insertvalue { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } %129, %"class.SkSL::Statement"* %102, 1
  ret { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } %130
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.SkSL::Block"*, %"class.SkSL::Expression"* } @_ZN4SkSL7Inliner10inlineCallEPNS_12FunctionCallENSt3__110shared_ptrINS_11SymbolTableEEERKNS_12ProgramUsageEPKNS_19FunctionDeclarationE(%"class.SkSL::Inliner"*, %"class.SkSL::FunctionCall"* nocapture readonly, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, %"class.SkSL::ProgramUsage"* dereferenceable(32), %"class.SkSL::FunctionDeclaration"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::tuple.405", align 8
  %8 = alloca %"class.std::__1::tuple.393", align 1
  %9 = alloca %"class.std::__1::tuple.405", align 8
  %10 = alloca %"class.std::__1::tuple.393", align 1
  %11 = alloca %class.CountReturnsAtEndOfControlFlow, align 8
  %12 = alloca %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", align 8
  %13 = alloca %class.SkSTArray, align 8
  %14 = alloca %"class.std::__1::unique_ptr", align 8
  %15 = alloca %"class.std::__1::unique_ptr", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"struct.SkSL::Modifiers", align 8
  %18 = alloca %"class.std::__1::unordered_map", align 8
  %19 = alloca %"class.SkSL::Variable"*, align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"struct.SkSL::Modifiers", align 8
  %22 = alloca %class.SkSTArray, align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 1
  %29 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %29, i64 0, i32 1
  %31 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %30, align 8
  %32 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = bitcast %"class.SkSL::Statement"** %32 to %"class.SkSL::Block"**
  %34 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %33, align 8
  %35 = bitcast %class.CountReturnsAtEndOfControlFlow* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #15
  %36 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %11, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEE30CountReturnsAtEndOfControlFlow, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %11, i64 0, i32 1
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %11, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %31, i64 0, i32 0
  %40 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %38, %"class.SkSL::ProgramElement"* dereferenceable(16) %39) #15
  %41 = load i32, i32* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #15
  %42 = bitcast %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %12, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %12, i64 0, i32 1
  %45 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %12, i64 0, i32 2
  %46 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %12, i64 0, i32 3
  %47 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %12, i64 0, i32 4
  %48 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %12, i64 0, i32 5
  %49 = add nsw i32 %41, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 32, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_121CountReturnsWithLimitE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  store i32 0, i32* %44, align 8
  store i32 0, i32* %45, align 4
  store i32 %49, i32* %46, align 8
  store i32 0, i32* %47, align 4
  store i8 0, i8* %48, align 8
  %50 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %12, i64 0, i32 0, i32 0
  %51 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %50, %"class.SkSL::ProgramElement"* dereferenceable(16) %39) #15
  %52 = load i32, i32* %44, align 8
  %53 = icmp sgt i32 %52, %41
  br i1 %53, label %63, label %54

54:                                               ; preds = %6
  %55 = icmp sgt i32 %52, 1
  br i1 %55, label %63, label %56

56:                                               ; preds = %54
  %57 = load i8, i8* %48, align 8, !range !2
  %58 = icmp ne i8 %57, 0
  %59 = load i32, i32* %45, align 4
  %60 = icmp sgt i32 %59, 1
  %61 = and i1 %58, %60
  %62 = zext i1 %61 to i32
  br label %63

63:                                               ; preds = %6, %54, %56
  %64 = phi i32 [ 2, %6 ], [ 1, %54 ], [ %62, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #15
  %65 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %13, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #15
  %66 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %13, i64 0, i32 0, i32 0, i64 16
  %67 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %13, i64 0, i32 0, i32 0, i64 24
  %68 = bitcast i8* %67 to i64*
  %69 = bitcast i8* %66 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 16, i1 false)
  store i8* %65, i8** %69, align 8
  store i64 17179869184, i64* %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %71 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = lshr i64 %73, 1
  %75 = and i64 %74, 2147483647
  %76 = add nuw nsw i64 %75, 2
  %77 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %34, i64 0, i32 1, i32 0, i32 0, i64 16
  %78 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %34, i64 0, i32 1, i32 0, i32 0, i64 24
  %79 = bitcast i8* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = lshr i64 %80, 1
  %82 = and i64 %81, 2147483647
  %83 = add nuw nsw i64 %76, %82
  %84 = trunc i64 %83 to i32
  %85 = bitcast i8* %66 to %class.SkTArray*
  %86 = icmp sgt i32 %84, 0
  br i1 %86, label %87, label %93

87:                                               ; preds = %63
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %85, i32 %84, i32 0) #15
  %88 = load i64, i64* %68, align 8
  %89 = shl i64 %88, 32
  %90 = and i64 %89, 4294967296
  %91 = and i64 %88, -4294967297
  %92 = or i64 %90, %91
  br label %93

93:                                               ; preds = %63, %87
  %94 = phi i64 [ %92, %87 ], [ 17179869184, %63 ]
  store i64 %94, i64* %68, align 8
  %95 = bitcast %"class.SkSL::FunctionDeclaration"** %28 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #15
  %98 = getelementptr inbounds i8, i8* %97, i64 8
  %99 = bitcast i8* %98 to i32*
  store i32 -1, i32* %99, align 8
  %100 = getelementptr inbounds i8, i8* %97, i64 12
  %101 = bitcast i8* %100 to i32*
  store i32 24, i32* %101, align 4
  %102 = bitcast i8* %97 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL12InlineMarkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds i8, i8* %97, i64 16
  %104 = bitcast i8* %103 to i64*
  store i64 %96, i64* %104, align 8
  %105 = ptrtoint i8* %97 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %85, i32 1, i32 1) #15
  %106 = bitcast i8* %66 to %"class.std::__1::unique_ptr.23"**
  %107 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %106, align 8
  %108 = load i64, i64* %68, align 8
  %109 = lshr i64 %108, 1
  %110 = and i64 %109, 2147483647
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %107, i64 %110
  %112 = add i64 %108, 2
  %113 = and i64 %112, 4294967294
  %114 = and i64 %108, -4294967295
  %115 = or i64 %113, %114
  store i64 %115, i64* %68, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.23"* %111 to i64*
  store i64 %105, i64* %116, align 8
  %117 = bitcast %"class.std::__1::unique_ptr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #15
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 0, i64* %119, align 8
  %120 = icmp eq i32 %64, 0
  br i1 %120, label %217, label %121

121:                                              ; preds = %93
  %122 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %31, i64 0, i32 1
  %123 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %122, align 8
  %124 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %123, i64 0, i32 4
  %125 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %124, align 8
  %126 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %125, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  %128 = icmp eq i32 %127, 12
  br i1 %128, label %217, label %129

129:                                              ; preds = %121
  %130 = bitcast %"class.std::__1::unique_ptr"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #15
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 0, i64* %132, align 8
  %133 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #15
  %134 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %123, i64 0, i32 0, i32 1, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %123, i64 0, i32 0, i32 1, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, -17
  br i1 %138, label %139, label %141

139:                                              ; preds = %129
  %140 = bitcast %"class.SkSL::String"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %140) #16
  unreachable

141:                                              ; preds = %129
  %142 = icmp ult i64 %137, 23
  br i1 %142, label %152, label %143

143:                                              ; preds = %141
  %144 = add nuw i64 %137, 16
  %145 = and i64 %144, -16
  %146 = call i8* @_Znwm(i64 %145) #17
  %147 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %146, i8** %147, align 8
  %148 = or i64 %145, -9223372036854775808
  %149 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %137, i64* %150, align 8
  %151 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %157

152:                                              ; preds = %141
  %153 = trunc i64 %137 to i8
  %154 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  store i8 %153, i8* %155, align 1
  %156 = icmp eq i64 %137, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %152, %143
  %158 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %154, %152 ], [ %151, %143 ]
  %159 = phi i8* [ %133, %152 ], [ %146, %143 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %159, i8* align 1 %135, i64 %137, i1 false) #15
  br label %160

160:                                              ; preds = %152, %157
  %161 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %154, %152 ], [ %158, %157 ]
  %162 = phi i8* [ %133, %152 ], [ %159, %157 ]
  %163 = getelementptr inbounds i8, i8* %162, i64 %137
  store i8 0, i8* %163, align 1
  %164 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %122, align 8
  %165 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %164, i64 0, i32 4
  %166 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %165, align 8
  %167 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %17, i64 0, i32 0, i32 0
  store i32 0, i32* %167, align 8
  %168 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %17, i64 0, i32 0, i32 1
  %169 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %17, i64 0, i32 0, i32 12, i32 0
  %170 = bitcast i32* %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %170, i8 -1, i64 40, i1 false) #15
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8** %169, align 8
  %171 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %17, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %17, i64 0, i32 0, i32 13
  store i32 0, i32* %172, align 8
  %173 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %17, i64 0, i32 1
  store i32 0, i32* %173, align 8
  %174 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %5, i64 0, i32 5
  %175 = load i8, i8* %174, align 8, !range !2
  %176 = icmp ne i8 %175, 0
  %177 = call { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } @_ZN4SkSL7Inliner18makeInlineVariableERKNS_6StringEPKNS_4TypeEPNS_11SymbolTableENS_9ModifiersEbPNSt3__110unique_ptrINS_10ExpressionENSA_14default_deleteISC_EEEE(%"class.SkSL::Inliner"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %16, %"class.SkSL::Type"* %166, %"class.SkSL::SymbolTable"* %2, %"struct.SkSL::Modifiers"* nonnull byval(%"struct.SkSL::Modifiers") align 8 %17, i1 zeroext %176, %"class.std::__1::unique_ptr"* nonnull %15)
  %178 = extractvalue { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } %177, 0
  %179 = extractvalue { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } %177, 1
  %180 = ptrtoint %"class.SkSL::Statement"* %179 to i64
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %160
  %185 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %186) #17
  br label %187

187:                                              ; preds = %160, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #15
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %85, i32 1, i32 1) #15
  %188 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %106, align 8
  %189 = load i64, i64* %68, align 8
  %190 = lshr i64 %189, 1
  %191 = and i64 %190, 2147483647
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %188, i64 %191
  %193 = add i64 %189, 2
  %194 = and i64 %193, 4294967294
  %195 = and i64 %189, -4294967295
  %196 = or i64 %194, %195
  store i64 %196, i64* %68, align 8
  %197 = bitcast %"class.std::__1::unique_ptr.23"* %192 to i64*
  store i64 %180, i64* %197, align 8
  %198 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #15
  %199 = bitcast i8* %198 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %199, i32 -1, %"class.SkSL::Variable"* %178, i8 signext 0) #15
  %200 = ptrtoint i8* %198 to i64
  %201 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %118, align 8
  store i64 %200, i64* %119, align 8
  %202 = icmp eq %"class.SkSL::Expression"* %201, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %187
  %204 = bitcast %"class.SkSL::Expression"* %201 to void (%"class.SkSL::Expression"*)***
  %205 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %205, i64 1
  %207 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %206, align 8
  call void %207(%"class.SkSL::Expression"* nonnull %201) #15
  br label %208

208:                                              ; preds = %187, %203
  %209 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %131, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %131, align 8
  %210 = icmp eq %"class.SkSL::Expression"* %209, null
  br i1 %210, label %216, label %211

211:                                              ; preds = %208
  %212 = bitcast %"class.SkSL::Expression"* %209 to void (%"class.SkSL::Expression"*)***
  %213 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %212, align 8
  %214 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %213, i64 1
  %215 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %214, align 8
  call void %215(%"class.SkSL::Expression"* nonnull %209) #15
  br label %216

216:                                              ; preds = %208, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #15
  br label %217

217:                                              ; preds = %93, %216, %121
  %218 = bitcast %"class.std::__1::unordered_map"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %218) #15
  %219 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %221 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 4, i64 0
  %222 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0, i32 3
  %223 = bitcast %"class.std::__1::__compressed_pair.135"* %222 to i32*
  %224 = bitcast i8* %221 to i32*
  store i32 -1431655766, i32* %224, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %218, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %223, align 8
  %225 = load i64, i64* %72, align 8
  %226 = and i64 %225, 4294967294
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %248, label %228

228:                                              ; preds = %217
  %229 = bitcast %"class.SkSL::Variable"** %19 to i8*
  %230 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %31, i64 0, i32 1
  %231 = bitcast i8* %70 to %"class.std::__1::unique_ptr"**
  %232 = bitcast %"class.SkSL::String"* %20 to i8*
  %233 = bitcast %"class.SkSL::Variable"** %19 to %"class.SkSL::Symbol"**
  %234 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %236 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %237 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  %239 = bitcast %"struct.SkSL::Modifiers"* %21 to i8*
  %240 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %5, i64 0, i32 5
  %241 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %18, i64 0, i32 0
  %242 = bitcast %"class.std::__1::tuple.405"* %9 to i8*
  %243 = getelementptr inbounds %"class.std::__1::tuple.405", %"class.std::__1::tuple.405"* %9, i64 0, i32 0, i32 0, i32 0
  %244 = getelementptr inbounds %"class.std::__1::tuple.393", %"class.std::__1::tuple.393"* %10, i64 0, i32 0
  %245 = bitcast %"class.std::__1::tuple.405"* %7 to i8*
  %246 = getelementptr inbounds %"class.std::__1::tuple.405", %"class.std::__1::tuple.405"* %7, i64 0, i32 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.std::__1::tuple.393", %"class.std::__1::tuple.393"* %8, i64 0, i32 0
  br label %260

248:                                              ; preds = %382, %217
  %249 = bitcast i8* %77 to %"class.std::__1::unique_ptr.23"**
  %250 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %249, align 8
  %251 = icmp eq %"class.std::__1::unique_ptr.23"* %250, null
  br i1 %251, label %388, label %252

252:                                              ; preds = %248
  %253 = load i64, i64* %79, align 8
  %254 = lshr i64 %253, 1
  %255 = and i64 %254, 2147483647
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %250, i64 %255
  %257 = icmp eq i64 %255, 0
  br i1 %257, label %388, label %258

258:                                              ; preds = %252
  %259 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %5, i64 0, i32 5
  br label %429

260:                                              ; preds = %228, %382
  %261 = phi i64 [ 0, %228 ], [ %383, %382 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #15
  store %"class.SkSL::Variable"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Variable"*), %"class.SkSL::Variable"** %19, align 8
  %262 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %230, align 8
  %263 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %262, i64 0, i32 3, i32 0, i32 0
  %264 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %263, align 8
  %265 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %264, i64 %261
  %266 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %265, align 8
  store %"class.SkSL::Variable"* %266, %"class.SkSL::Variable"** %19, align 8
  %267 = call { i64, i32 } @_ZNK4SkSL12ProgramUsage3getERKNS_8VariableE(%"class.SkSL::ProgramUsage"* %4, %"class.SkSL::Variable"* dereferenceable(64) %266) #15
  %268 = extractvalue { i64, i32 } %267, 1
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %308

270:                                              ; preds = %260
  %271 = extractvalue { i64, i32 } %267, 0
  %272 = lshr i64 %271, 32
  %273 = trunc i64 %272 to i32
  %274 = icmp sgt i32 %273, 1
  %275 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %231, align 8
  %276 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 %261, i32 0, i32 0, i32 0
  %277 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %276, align 8
  br i1 %274, label %278, label %280

278:                                              ; preds = %270
  %279 = call zeroext i1 @_ZN4SkSL8Analysis19IsTrivialExpressionERKNS_10ExpressionE(%"class.SkSL::Expression"* dereferenceable(24) %277) #15
  br i1 %279, label %286, label %308

280:                                              ; preds = %270
  %281 = bitcast %"class.SkSL::Expression"* %277 to i1 (%"class.SkSL::Expression"*, i32)***
  %282 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %281, align 8
  %283 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %282, i64 7
  %284 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %283, align 8
  %285 = call zeroext i1 %284(%"class.SkSL::Expression"* %277, i32 0) #15
  br i1 %285, label %308, label %286

286:                                              ; preds = %280, %278
  %287 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %231, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %287, i64 %261, i32 0, i32 0, i32 0
  %289 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %288, align 8
  %290 = bitcast %"class.SkSL::Expression"* %289 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %291 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %290, align 8
  %292 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %291, i64 10
  %293 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %292, align 8
  %294 = call %"class.SkSL::Expression"* %293(%"class.SkSL::Expression"* %289) #15
  %295 = ptrtoint %"class.SkSL::Expression"* %294 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %245) #15
  store %"class.SkSL::Variable"** %19, %"class.SkSL::Variable"*** %246, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %247) #15
  %296 = call { %"struct.std::__1::__hash_node_base.119"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.115"* nonnull %241, %"class.SkSL::Variable"** nonnull dereferenceable(8) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.405"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.393"* nonnull dereferenceable(1) %8) #15
  %297 = extractvalue { %"struct.std::__1::__hash_node_base.119"*, i8 } %296, 0
  %298 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %297, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %247) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #15
  %299 = bitcast %"struct.std::__1::__hash_node_base.119"* %298 to %"class.SkSL::Expression"**
  %300 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %299, align 8
  %301 = bitcast %"struct.std::__1::__hash_node_base.119"* %298 to i64*
  store i64 %295, i64* %301, align 8
  %302 = icmp eq %"class.SkSL::Expression"* %300, null
  br i1 %302, label %382, label %303

303:                                              ; preds = %286
  %304 = bitcast %"class.SkSL::Expression"* %300 to void (%"class.SkSL::Expression"*)***
  %305 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %304, align 8
  %306 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %305, i64 1
  %307 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %306, align 8
  call void %307(%"class.SkSL::Expression"* nonnull %300) #15
  br label %382

308:                                              ; preds = %260, %278, %280
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #15
  %309 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %233, align 8
  %310 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %309, i64 0, i32 1, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %309, i64 0, i32 1, i32 1
  %313 = load i64, i64* %312, align 8
  %314 = icmp ugt i64 %313, -17
  br i1 %314, label %315, label %317

315:                                              ; preds = %308
  %316 = bitcast %"class.SkSL::String"* %20 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %316) #16
  unreachable

317:                                              ; preds = %308
  %318 = icmp ult i64 %313, 23
  br i1 %318, label %324, label %319

319:                                              ; preds = %317
  %320 = add nuw i64 %313, 16
  %321 = and i64 %320, -16
  %322 = call i8* @_Znwm(i64 %321) #17
  store i8* %322, i8** %234, align 8
  %323 = or i64 %321, -9223372036854775808
  store i64 %323, i64* %235, align 8
  store i64 %313, i64* %236, align 8
  br label %327

324:                                              ; preds = %317
  %325 = trunc i64 %313 to i8
  store i8 %325, i8* %238, align 1
  %326 = icmp eq i64 %313, 0
  br i1 %326, label %329, label %327

327:                                              ; preds = %324, %319
  %328 = phi i8* [ %322, %319 ], [ %232, %324 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %328, i8* align 1 %311, i64 %313, i1 false) #15
  br label %329

329:                                              ; preds = %324, %327
  %330 = phi i8* [ %232, %324 ], [ %328, %327 ]
  %331 = getelementptr inbounds i8, i8* %330, i64 %313
  store i8 0, i8* %331, align 1
  %332 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %231, align 8
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %332, i64 %261, i32 0, i32 0, i32 0
  %334 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %333, align 8
  %335 = bitcast %"class.SkSL::Expression"* %334 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %336 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %335, align 8
  %337 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %336, i64 3
  %338 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %337, align 8
  %339 = call dereferenceable(184) %"class.SkSL::Type"* %338(%"class.SkSL::Expression"* %334) #15
  %340 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %19, align 8
  %341 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %340, i64 0, i32 2
  %342 = bitcast %"struct.SkSL::Modifiers"** %341 to i8**
  %343 = load i8*, i8** %342, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %239, i8* align 8 %343, i64 80, i1 false)
  %344 = load i8, i8* %240, align 8, !range !2
  %345 = icmp ne i8 %344, 0
  %346 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %231, align 8
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %346, i64 %261
  %348 = call { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } @_ZN4SkSL7Inliner18makeInlineVariableERKNS_6StringEPKNS_4TypeEPNS_11SymbolTableENS_9ModifiersEbPNSt3__110unique_ptrINS_10ExpressionENSA_14default_deleteISC_EEEE(%"class.SkSL::Inliner"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %20, %"class.SkSL::Type"* %339, %"class.SkSL::SymbolTable"* %2, %"struct.SkSL::Modifiers"* nonnull byval(%"struct.SkSL::Modifiers") align 8 %21, i1 zeroext %345, %"class.std::__1::unique_ptr"* %347)
  %349 = extractvalue { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } %348, 0
  %350 = extractvalue { %"class.SkSL::Variable"*, %"class.SkSL::Statement"* } %348, 1
  %351 = ptrtoint %"class.SkSL::Statement"* %350 to i64
  %352 = load i8, i8* %238, align 1
  %353 = icmp slt i8 %352, 0
  br i1 %353, label %354, label %356

354:                                              ; preds = %329
  %355 = load i8*, i8** %234, align 8
  call void @_ZdlPv(i8* %355) #17
  br label %356

356:                                              ; preds = %329, %354
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #15
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %85, i32 1, i32 1) #15
  %357 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %106, align 8
  %358 = load i64, i64* %68, align 8
  %359 = lshr i64 %358, 1
  %360 = and i64 %359, 2147483647
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %357, i64 %360
  %362 = add i64 %358, 2
  %363 = and i64 %362, 4294967294
  %364 = and i64 %358, -4294967295
  %365 = or i64 %363, %364
  store i64 %365, i64* %68, align 8
  %366 = bitcast %"class.std::__1::unique_ptr.23"* %361 to i64*
  store i64 %351, i64* %366, align 8
  %367 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #15
  %368 = bitcast i8* %367 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %368, i32 -1, %"class.SkSL::Variable"* %349, i8 signext 0) #15
  %369 = ptrtoint i8* %367 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #15
  store %"class.SkSL::Variable"** %19, %"class.SkSL::Variable"*** %243, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %244) #15
  %370 = call { %"struct.std::__1::__hash_node_base.119"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.115"* nonnull %241, %"class.SkSL::Variable"** nonnull dereferenceable(8) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.405"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.393"* nonnull dereferenceable(1) %10) #15
  %371 = extractvalue { %"struct.std::__1::__hash_node_base.119"*, i8 } %370, 0
  %372 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %371, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %244) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #15
  %373 = bitcast %"struct.std::__1::__hash_node_base.119"* %372 to %"class.SkSL::Expression"**
  %374 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %373, align 8
  %375 = bitcast %"struct.std::__1::__hash_node_base.119"* %372 to i64*
  store i64 %369, i64* %375, align 8
  %376 = icmp eq %"class.SkSL::Expression"* %374, null
  br i1 %376, label %382, label %377

377:                                              ; preds = %356
  %378 = bitcast %"class.SkSL::Expression"* %374 to void (%"class.SkSL::Expression"*)***
  %379 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %378, align 8
  %380 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %379, i64 1
  %381 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %380, align 8
  call void %381(%"class.SkSL::Expression"* nonnull %374) #15
  br label %382

382:                                              ; preds = %377, %356, %286, %303
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #15
  %383 = add nuw nsw i64 %261, 1
  %384 = load i64, i64* %72, align 8
  %385 = lshr i64 %384, 1
  %386 = and i64 %385, 2147483647
  %387 = icmp ult i64 %383, %386
  br i1 %387, label %260, label %248

388:                                              ; preds = %429, %248, %252
  %389 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %22, i64 0, i32 0, i32 0, i64 16
  %390 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %22, i64 0, i32 0, i32 0, i64 0
  %391 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %22, i64 0, i32 0, i32 0, i64 24
  %392 = bitcast i8* %391 to i64*
  %393 = bitcast i8* %389 to i8**
  store i8* %390, i8** %393, align 8
  store i64 17179869184, i64* %392, align 8
  %394 = bitcast i8* %389 to %class.SkTArray*
  %395 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %394, %class.SkTArray* dereferenceable(16) %85) #15
  %396 = call %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32 %27, %class.SkSTArray* nonnull %22, %"class.SkSL::SymbolTable"* null, %"class.std::__1::__shared_weak_count"* null, i1 zeroext false) #15
  %397 = ptrtoint %"class.SkSL::Block"* %396 to i64
  %398 = load i64, i64* %392, align 8
  %399 = and i64 %398, 4294967294
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %403, label %401

401:                                              ; preds = %388
  %402 = bitcast i8* %389 to %"class.std::__1::unique_ptr.23"**
  br label %407

403:                                              ; preds = %418, %388
  %404 = phi i64 [ %398, %388 ], [ %420, %418 ]
  %405 = and i64 %404, 1
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %426, label %424

407:                                              ; preds = %418, %401
  %408 = phi i64 [ 0, %401 ], [ %419, %418 ]
  %409 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %402, align 8
  %410 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %409, i64 %408, i32 0, i32 0, i32 0
  %411 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %410, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %410, align 8
  %412 = icmp eq %"class.SkSL::Statement"* %411, null
  br i1 %412, label %418, label %413

413:                                              ; preds = %407
  %414 = bitcast %"class.SkSL::Statement"* %411 to void (%"class.SkSL::Statement"*)***
  %415 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %414, align 8
  %416 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %415, i64 1
  %417 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %416, align 8
  call void %417(%"class.SkSL::Statement"* nonnull %411) #15
  br label %418

418:                                              ; preds = %413, %407
  %419 = add nuw nsw i64 %408, 1
  %420 = load i64, i64* %392, align 8
  %421 = lshr i64 %420, 1
  %422 = and i64 %421, 2147483647
  %423 = icmp ult i64 %419, %422
  br i1 %423, label %407, label %403

424:                                              ; preds = %403
  %425 = load i8*, i8** %393, align 8
  call void @_Z7sk_freePv(i8* %425) #15
  br label %426

426:                                              ; preds = %403, %424
  %427 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %118, align 8
  %428 = icmp eq %"class.SkSL::Expression"* %427, null
  br i1 %428, label %451, label %449

429:                                              ; preds = %258, %429
  %430 = phi %"class.std::__1::unique_ptr.23"* [ %250, %258 ], [ %447, %429 ]
  %431 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %430, i64 0, i32 0, i32 0, i32 0
  %432 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %431, align 8
  %433 = load i8, i8* %259, align 8, !range !2
  %434 = icmp ne i8 %433, 0
  %435 = call %"class.SkSL::Statement"* @_ZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEb(%"class.SkSL::Inliner"* %0, i32 %27, %"class.std::__1::unordered_map"* nonnull %18, %"class.SkSL::SymbolTable"* %2, %"class.std::__1::unique_ptr"* nonnull %14, i32 %64, %"class.SkSL::Statement"* dereferenceable(16) %432, i1 zeroext %434)
  %436 = ptrtoint %"class.SkSL::Statement"* %435 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %85, i32 1, i32 1) #15
  %437 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %106, align 8
  %438 = load i64, i64* %68, align 8
  %439 = lshr i64 %438, 1
  %440 = and i64 %439, 2147483647
  %441 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %437, i64 %440
  %442 = add i64 %438, 2
  %443 = and i64 %442, 4294967294
  %444 = and i64 %438, -4294967295
  %445 = or i64 %443, %444
  store i64 %445, i64* %68, align 8
  %446 = bitcast %"class.std::__1::unique_ptr.23"* %441 to i64*
  store i64 %436, i64* %446, align 8
  %447 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %430, i64 1
  %448 = icmp eq %"class.std::__1::unique_ptr.23"* %447, %256
  br i1 %448, label %388, label %429

449:                                              ; preds = %426
  %450 = ptrtoint %"class.SkSL::Expression"* %427 to i64
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %118, align 8
  br label %543

451:                                              ; preds = %426
  %452 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %31, i64 0, i32 1
  %453 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %452, align 8
  %454 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %453, i64 0, i32 4
  %455 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %454, align 8
  %456 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %455, i64 0, i32 3
  %457 = load i32, i32* %456, align 8
  %458 = icmp eq i32 %457, 12
  %459 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %460 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %459, align 8
  br i1 %458, label %461, label %475

461:                                              ; preds = %451
  %462 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %460, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %463 = bitcast %"class.SkSL::Type"** %462 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #15
  %466 = bitcast i8* %465 to i32 (...)***
  %467 = getelementptr inbounds i8, i8* %465, i64 8
  %468 = bitcast i8* %467 to i32*
  store i32 %27, i32* %468, align 8
  %469 = getelementptr inbounds i8, i8* %465, i64 12
  %470 = bitcast i8* %469 to i32*
  store i32 31, i32* %470, align 4
  %471 = getelementptr inbounds i8, i8* %465, i64 16
  %472 = bitcast i8* %471 to i64*
  store i64 %464, i64* %472, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %466, align 8
  %473 = getelementptr inbounds i8, i8* %465, i64 24
  store i8 0, i8* %473, align 8
  %474 = ptrtoint i8* %465 to i64
  br label %543

475:                                              ; preds = %451
  %476 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %460, i64 0, i32 1
  %477 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %476, align 8
  %478 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %31, i64 0, i32 0, i32 0, i32 1
  %479 = load i32, i32* %478, align 8
  %480 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %480) #15
  %481 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %481) #15
  %482 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %453, i64 0, i32 0, i32 1, i32 0
  %483 = load i8*, i8** %482, align 8
  %484 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %453, i64 0, i32 0, i32 1, i32 1
  %485 = load i64, i64* %484, align 8
  %486 = icmp ugt i64 %485, -17
  br i1 %486, label %487, label %489

487:                                              ; preds = %475
  %488 = bitcast %"class.SkSL::String"* %25 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %488) #16
  unreachable

489:                                              ; preds = %475
  %490 = icmp ult i64 %485, 23
  br i1 %490, label %499, label %491

491:                                              ; preds = %489
  %492 = add nuw i64 %485, 16
  %493 = and i64 %492, -16
  %494 = call i8* @_Znwm(i64 %493) #17
  %495 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %494, i8** %495, align 8
  %496 = or i64 %493, -9223372036854775808
  %497 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %496, i64* %497, align 8
  %498 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %485, i64* %498, align 8
  br label %504

499:                                              ; preds = %489
  %500 = trunc i64 %485 to i8
  %501 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %502 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %501, i64 0, i32 1, i32 0
  store i8 %500, i8* %502, align 1
  %503 = icmp eq i64 %485, 0
  br i1 %503, label %506, label %504

504:                                              ; preds = %499, %491
  %505 = phi i8* [ %494, %491 ], [ %481, %499 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %505, i8* align 1 %483, i64 %485, i1 false) #15
  br label %506

506:                                              ; preds = %499, %504
  %507 = phi i8* [ %481, %499 ], [ %505, %504 ]
  %508 = getelementptr inbounds i8, i8* %507, i64 %485
  store i8 0, i8* %508, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %25) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0)) #15
  %509 = bitcast %"class.SkSL::ErrorReporter"* %477 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %510 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %509, align 8
  %511 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %510, i64 2
  %512 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %511, align 8
  call void %512(%"class.SkSL::ErrorReporter"* %477, i32 %479, %"class.SkSL::String"* nonnull %23) #15
  %513 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %514 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %513, i64 0, i32 1, i32 0
  %515 = load i8, i8* %514, align 1
  %516 = icmp slt i8 %515, 0
  br i1 %516, label %517, label %520

517:                                              ; preds = %506
  %518 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %519 = load i8*, i8** %518, align 8
  call void @_ZdlPv(i8* %519) #17
  br label %520

520:                                              ; preds = %506, %517
  %521 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %522 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %521, i64 0, i32 1, i32 0
  %523 = load i8, i8* %522, align 1
  %524 = icmp slt i8 %523, 0
  br i1 %524, label %525, label %528

525:                                              ; preds = %520
  %526 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = load i8*, i8** %526, align 8
  call void @_ZdlPv(i8* %527) #17
  br label %528

528:                                              ; preds = %520, %525
  %529 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %530 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %529, i64 0, i32 1, i32 0
  %531 = load i8, i8* %530, align 1
  %532 = icmp slt i8 %531, 0
  br i1 %532, label %533, label %536

533:                                              ; preds = %528
  %534 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %535 = load i8*, i8** %534, align 8
  call void @_ZdlPv(i8* %535) #17
  br label %536

536:                                              ; preds = %528, %533
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %481) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %480) #15
  %537 = icmp eq %"class.SkSL::Block"* %396, null
  br i1 %537, label %543, label %538

538:                                              ; preds = %536
  %539 = bitcast %"class.SkSL::Block"* %396 to void (%"class.SkSL::Block"*)***
  %540 = load void (%"class.SkSL::Block"*)**, void (%"class.SkSL::Block"*)*** %539, align 8
  %541 = getelementptr inbounds void (%"class.SkSL::Block"*)*, void (%"class.SkSL::Block"*)** %540, i64 1
  %542 = load void (%"class.SkSL::Block"*)*, void (%"class.SkSL::Block"*)** %541, align 8
  call void %542(%"class.SkSL::Block"* nonnull %396) #15
  br label %543

543:                                              ; preds = %538, %536, %449, %461
  %544 = phi i64 [ %450, %449 ], [ %474, %461 ], [ 0, %536 ], [ 0, %538 ]
  %545 = phi i64 [ %397, %449 ], [ %397, %461 ], [ 0, %536 ], [ 0, %538 ]
  %546 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %220, align 8
  %547 = icmp eq %"struct.std::__1::__hash_node_base.119"* %546, null
  br i1 %547, label %564, label %548

548:                                              ; preds = %543, %561
  %549 = phi %"struct.std::__1::__hash_node_base.119"* [ %551, %561 ], [ %546, %543 ]
  %550 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %549, i64 0, i32 0
  %551 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %550, align 8
  %552 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %549, i64 3
  %553 = bitcast %"struct.std::__1::__hash_node_base.119"* %552 to %"class.SkSL::Expression"**
  %554 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %553, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %553, align 8
  %555 = icmp eq %"class.SkSL::Expression"* %554, null
  br i1 %555, label %561, label %556

556:                                              ; preds = %548
  %557 = bitcast %"class.SkSL::Expression"* %554 to void (%"class.SkSL::Expression"*)***
  %558 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %557, align 8
  %559 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %558, i64 1
  %560 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %559, align 8
  call void %560(%"class.SkSL::Expression"* nonnull %554) #15
  br label %561

561:                                              ; preds = %556, %548
  %562 = bitcast %"struct.std::__1::__hash_node_base.119"* %549 to i8*
  call void @_ZdlPv(i8* %562) #17
  %563 = icmp eq %"struct.std::__1::__hash_node_base.119"* %551, null
  br i1 %563, label %564, label %548

564:                                              ; preds = %561, %543
  %565 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %219, align 8
  store %"struct.std::__1::__hash_node_base.119"** null, %"struct.std::__1::__hash_node_base.119"*** %219, align 8
  %566 = icmp eq %"struct.std::__1::__hash_node_base.119"** %565, null
  br i1 %566, label %569, label %567

567:                                              ; preds = %564
  %568 = bitcast %"struct.std::__1::__hash_node_base.119"** %565 to i8*
  call void @_ZdlPv(i8* %568) #17
  br label %569

569:                                              ; preds = %564, %567
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %218) #15
  %570 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %118, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %118, align 8
  %571 = icmp eq %"class.SkSL::Expression"* %570, null
  br i1 %571, label %577, label %572

572:                                              ; preds = %569
  %573 = bitcast %"class.SkSL::Expression"* %570 to void (%"class.SkSL::Expression"*)***
  %574 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %573, align 8
  %575 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %574, i64 1
  %576 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %575, align 8
  call void %576(%"class.SkSL::Expression"* nonnull %570) #15
  br label %577

577:                                              ; preds = %569, %572
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #15
  %578 = load i64, i64* %68, align 8
  %579 = and i64 %578, 4294967294
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %585

581:                                              ; preds = %596, %577
  %582 = phi i64 [ %578, %577 ], [ %598, %596 ]
  %583 = and i64 %582, 1
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %604, label %602

585:                                              ; preds = %577, %596
  %586 = phi i64 [ %597, %596 ], [ 0, %577 ]
  %587 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %106, align 8
  %588 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %587, i64 %586, i32 0, i32 0, i32 0
  %589 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %588, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %588, align 8
  %590 = icmp eq %"class.SkSL::Statement"* %589, null
  br i1 %590, label %596, label %591

591:                                              ; preds = %585
  %592 = bitcast %"class.SkSL::Statement"* %589 to void (%"class.SkSL::Statement"*)***
  %593 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %592, align 8
  %594 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %593, i64 1
  %595 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %594, align 8
  call void %595(%"class.SkSL::Statement"* nonnull %589) #15
  br label %596

596:                                              ; preds = %591, %585
  %597 = add nuw nsw i64 %586, 1
  %598 = load i64, i64* %68, align 8
  %599 = lshr i64 %598, 1
  %600 = and i64 %599, 2147483647
  %601 = icmp ult i64 %597, %600
  br i1 %601, label %585, label %581

602:                                              ; preds = %581
  %603 = load i8*, i8** %69, align 8
  call void @_Z7sk_freePv(i8* %603) #15
  br label %604

604:                                              ; preds = %581, %602
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #15
  %605 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %605, label %616, label %606

606:                                              ; preds = %604
  %607 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %608 = atomicrmw add i64* %607, i64 -1 acq_rel
  %609 = icmp eq i64 %608, 0
  br i1 %609, label %610, label %616

610:                                              ; preds = %606
  %611 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %612 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %613 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %612, align 8
  %614 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %613, i64 2
  %615 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %614, align 8
  call void %615(%"class.std::__1::__shared_count"* %611) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #15
  br label %616

616:                                              ; preds = %604, %606, %610
  %617 = inttoptr i64 %545 to %"class.SkSL::Block"*
  %618 = insertvalue { %"class.SkSL::Block"*, %"class.SkSL::Expression"* } undef, %"class.SkSL::Block"* %617, 0
  %619 = inttoptr i64 %544 to %"class.SkSL::Expression"*
  %620 = insertvalue { %"class.SkSL::Block"*, %"class.SkSL::Expression"* } %618, %"class.SkSL::Expression"* %619, 1
  ret { %"class.SkSL::Block"*, %"class.SkSL::Expression"* } %620
}

declare { i64, i32 } @_ZNK4SkSL12ProgramUsage3getERKNS_8VariableE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::Variable"* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN4SkSL8Analysis19IsTrivialExpressionERKNS_10ExpressionE(%"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL7Inliner14isSafeToInlineEPKNS_18FunctionDefinitionE(%"class.SkSL::Inliner"* nocapture readonly, %"class.SkSL::FunctionDefinition"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CountReturnsAtEndOfControlFlow, align 8
  %4 = alloca %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", align 8
  %5 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %6 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 4
  %8 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 13
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %65, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 2499
  %16 = icmp eq %"class.SkSL::FunctionDefinition"* %1, null
  %17 = or i1 %16, %15
  br i1 %17, label %65, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 1
  %20 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %20, i64 0, i32 2
  %22 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %21, align 8
  %23 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 512
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %65

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %20, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %20, i64 0, i32 3, i32 0, i32 1
  %31 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %30, align 8
  %32 = icmp eq %"class.SkSL::Variable"** %29, %31
  br i1 %32, label %45, label %35

33:                                               ; preds = %35
  %34 = icmp eq %"class.SkSL::Variable"** %44, %31
  br i1 %34, label %45, label %35

35:                                               ; preds = %27, %33
  %36 = phi %"class.SkSL::Variable"** [ %44, %33 ], [ %29, %27 ]
  %37 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %37, i64 0, i32 2
  %39 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %38, align 8
  %40 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 4
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %36, i64 1
  br i1 %43, label %33, label %65

45:                                               ; preds = %33, %27
  %46 = bitcast %class.CountReturnsAtEndOfControlFlow* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEE30CountReturnsAtEndOfControlFlow, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %3, i64 0, i32 1
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %3, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 0
  %51 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %49, %"class.SkSL::ProgramElement"* dereferenceable(16) %50) #15
  %52 = load i32, i32* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  %53 = bitcast %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #15
  %54 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %4, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %4, i64 0, i32 1
  %56 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %4, i64 0, i32 2
  %57 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %4, i64 0, i32 3
  %58 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %4, i64 0, i32 4
  %59 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %4, i64 0, i32 5
  %60 = add nsw i32 %52, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 32, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_121CountReturnsWithLimitE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  store i32 0, i32* %55, align 8
  store i32 0, i32* %56, align 4
  store i32 %60, i32* %57, align 8
  store i32 0, i32* %58, align 4
  store i8 0, i8* %59, align 8
  %61 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %4, i64 0, i32 0, i32 0
  %62 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %61, %"class.SkSL::ProgramElement"* dereferenceable(16) %50) #15
  %63 = load i32, i32* %55, align 8
  %64 = icmp sle i32 %63, %52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #15
  br label %65

65:                                               ; preds = %35, %18, %12, %2, %45
  %66 = phi i1 [ %64, %45 ], [ false, %2 ], [ false, %12 ], [ false, %18 ], [ false, %35 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL7Inliner21candidateCanBeInlinedERKNS_15InlineCandidateEPNSt3__113unordered_mapIPKNS_19FunctionDeclarationEbNS4_4hashIS8_EENS4_8equal_toIS8_EENS4_9allocatorINS4_4pairIKS8_bEEEEEE(%"class.SkSL::Inliner"* nocapture readonly, %"struct.SkSL::InlineCandidate"* nocapture readonly dereferenceable(48), %"class.std::__1::unordered_map.199"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.ContainsRecursiveCall, align 8
  %5 = alloca %"struct.std::__1::pair.226", align 8
  %6 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %1, i64 0, i32 3
  %7 = bitcast %"class.std::__1::unique_ptr"** %6 to %"class.SkSL::FunctionCall"***
  %8 = load %"class.SkSL::FunctionCall"**, %"class.SkSL::FunctionCall"*** %7, align 8
  %9 = load %"class.SkSL::FunctionCall"*, %"class.SkSL::FunctionCall"** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %9, i64 0, i32 1
  %11 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.226"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = ptrtoint %"class.SkSL::FunctionDeclaration"* %11 to i64
  %14 = bitcast %"struct.std::__1::pair.226"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %5, i64 0, i32 1
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::unordered_map.199", %"class.std::__1::unordered_map.199"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %5, i64 0, i32 0
  %18 = call { %"struct.std::__1::__hash_node_base.204"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_bEEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.200"* %16, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %17, %"struct.std::__1::pair.226"* nonnull dereferenceable(16) %5) #15
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.204"*, i8 } %18, 0
  %20 = extractvalue { %"struct.std::__1::__hash_node_base.204"*, i8 } %18, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %19, i64 3
  %24 = bitcast %"struct.std::__1::__hash_node_base.204"* %23 to i8*
  %25 = load i8, i8* %24, align 8, !range !2
  br label %48

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %11, i64 0, i32 1
  %28 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %27, align 8
  %29 = call zeroext i1 @_ZN4SkSL7Inliner14isSafeToInlineEPKNS_18FunctionDefinitionE(%"class.SkSL::Inliner"* %0, %"class.SkSL::FunctionDefinition"* %28)
  br i1 %29, label %30, label %44

30:                                               ; preds = %26
  %31 = bitcast %class.ContainsRecursiveCall* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #15
  %32 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEE21ContainsRecursiveCall, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %4, i64 0, i32 1
  store %"class.SkSL::FunctionDeclaration"* %11, %"class.SkSL::FunctionDeclaration"** %33, align 8
  %34 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %27, align 8
  %35 = icmp eq %"class.SkSL::FunctionDefinition"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %4, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %34, i64 0, i32 0
  %39 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %37, %"class.SkSL::ProgramElement"* dereferenceable(16) %38) #15
  %40 = xor i1 %39, true
  %41 = zext i1 %40 to i8
  br label %42

42:                                               ; preds = %30, %36
  %43 = phi i8 [ %41, %36 ], [ 1, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #15
  br label %44

44:                                               ; preds = %42, %26
  %45 = phi i8 [ 0, %26 ], [ %43, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %19, i64 3
  %47 = bitcast %"struct.std::__1::__hash_node_base.204"* %46 to i8*
  store i8 %45, i8* %47, align 8
  br label %48

48:                                               ; preds = %22, %44
  %49 = phi i8 [ %25, %22 ], [ %45, %44 ]
  %50 = icmp ne i8 %49, 0
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL7Inliner15getFunctionSizeERKNS_19FunctionDeclarationEPNSt3__113unordered_mapIPS2_iNS4_4hashIS6_EENS4_8equal_toIS6_EENS4_9allocatorINS4_4pairIKS6_iEEEEEE(%"class.SkSL::Inliner"* nocapture readonly, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %"class.std::__1::unordered_map.228"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.256", align 8
  %5 = bitcast %"struct.std::__1::pair.256"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = ptrtoint %"class.SkSL::FunctionDeclaration"* %1 to i64
  %7 = bitcast %"struct.std::__1::pair.256"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.256", %"struct.std::__1::pair.256"* %4, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::pair.256", %"struct.std::__1::pair.256"* %4, i64 0, i32 0
  %11 = call { %"struct.std::__1::__hash_node_base.233"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_iEEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.229"* %9, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %10, %"struct.std::__1::pair.256"* nonnull dereferenceable(16) %4) #15
  %12 = extractvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } %11, 0
  %13 = extractvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } %11, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %12, i64 3
  %17 = bitcast %"struct.std::__1::__hash_node_base.233"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  br label %31

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 1
  %21 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %23 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %22, align 8
  %24 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %23, i64 0, i32 4
  %25 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %24, align 8
  %26 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %25, i64 0, i32 1, i32 13
  %27 = load i32, i32* %26, align 8
  %28 = call i32 @_ZN4SkSL8Analysis18NodeCountUpToLimitERKNS_18FunctionDefinitionEi(%"class.SkSL::FunctionDefinition"* dereferenceable(88) %21, i32 %27) #15
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %12, i64 3
  %30 = bitcast %"struct.std::__1::__hash_node_base.233"* %29 to i32*
  store i32 %28, i32* %30, align 8
  br label %31

31:                                               ; preds = %15, %19
  %32 = phi i32 [ %18, %15 ], [ %28, %19 ]
  ret i32 %32
}

declare i32 @_ZN4SkSL8Analysis18NodeCountUpToLimitERKNS_18FunctionDefinitionEi(%"class.SkSL::FunctionDefinition"* dereferenceable(88), i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL7Inliner18buildCandidateListERKNSt3__16vectorINS1_10unique_ptrINS_14ProgramElementENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEENS1_10shared_ptrINS_11SymbolTableEEEPNS_12ProgramUsageEPNS_19InlineCandidateListE(%"class.SkSL::Inliner"*, %"class.std::__1::vector.258"* dereferenceable(24), %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, %"class.SkSL::ProgramUsage"*, %"struct.SkSL::InlineCandidateList"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::tuple.430", align 8
  %8 = alloca %"class.std::__1::tuple.393", align 1
  %9 = alloca %"struct.std::__1::pair.256", align 8
  %10 = alloca %"class.std::__1::tuple.430", align 8
  %11 = alloca %"class.std::__1::tuple.393", align 1
  %12 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %13 = alloca %"class.std::__1::tuple.430", align 8
  %14 = alloca %"class.std::__1::tuple.393", align 1
  %15 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %16 = alloca %class.ContainsRecursiveCall, align 8
  %17 = alloca %"struct.std::__1::pair.226", align 8
  %18 = alloca %class.ContainsRecursiveCall, align 8
  %19 = alloca %"struct.std::__1::pair.226", align 8
  %20 = alloca %"class.SkSL::InlineCandidateAnalyzer", align 8
  %21 = alloca %"class.std::__1::unordered_map.199", align 8
  %22 = alloca %"class.std::__1::unordered_map.228", align 8
  %23 = alloca %"class.std::__1::unordered_map.228", align 8
  %24 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %25 = bitcast %"class.SkSL::InlineCandidateAnalyzer"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %25) #15
  %26 = bitcast %"class.SkSL::InlineCandidateAnalyzer"* %20 to i64*
  store i64 -6148914691236517206, i64* %26, align 8
  %27 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %20, i64 0, i32 1
  %28 = bitcast %"class.std::__1::vector.278"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 56, i1 false) #15
  %29 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %32 = atomicrmw add i64* %31, i64 1 monotonic
  br label %33

33:                                               ; preds = %6, %30
  call void @_ZN4SkSL23InlineCandidateAnalyzer5visitERKNSt3__16vectorINS1_10unique_ptrINS_14ProgramElementENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEENS1_10shared_ptrINS_11SymbolTableEEEPNS_19InlineCandidateListE(%"class.SkSL::InlineCandidateAnalyzer"* nonnull %20, %"class.std::__1::vector.258"* dereferenceable(24) %1, %"class.SkSL::SymbolTable"* %2, %"class.std::__1::__shared_weak_count"* %3, %"struct.SkSL::InlineCandidateList"* %5)
  %34 = getelementptr inbounds %"struct.SkSL::InlineCandidateList", %"struct.SkSL::InlineCandidateList"* %5, i64 0, i32 0, i32 0, i32 0
  %35 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %34, align 8
  %36 = getelementptr inbounds %"struct.SkSL::InlineCandidateList", %"struct.SkSL::InlineCandidateList"* %5, i64 0, i32 0, i32 0, i32 1
  %37 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %36, align 8
  %38 = icmp eq %"struct.SkSL::InlineCandidate"* %35, %37
  br i1 %38, label %474, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.std::__1::unordered_map.199"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #15
  %41 = getelementptr inbounds %"class.std::__1::unordered_map.199", %"class.std::__1::unordered_map.199"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::unordered_map.199", %"class.std::__1::unordered_map.199"* %21, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::unordered_map.199", %"class.std::__1::unordered_map.199"* %21, i64 0, i32 0, i32 4, i64 0
  %44 = getelementptr inbounds %"class.std::__1::unordered_map.199", %"class.std::__1::unordered_map.199"* %21, i64 0, i32 0, i32 3
  %45 = bitcast %"class.std::__1::__compressed_pair.219"* %44 to i32*
  %46 = bitcast i8* %43 to i32*
  store i32 -1431655766, i32* %46, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %45, align 8
  %47 = bitcast %"struct.std::__1::pair.226"* %19 to i8*
  %48 = bitcast %"struct.std::__1::pair.226"* %19 to i64*
  %49 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %19, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %19, i64 0, i32 0
  %51 = bitcast %class.ContainsRecursiveCall* %18 to i8*
  %52 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %18, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %18, i64 0, i32 1
  %54 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %18, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::unordered_map.199", %"class.std::__1::unordered_map.199"* %21, i64 0, i32 0
  br label %56

56:                                               ; preds = %94, %39
  %57 = phi %"struct.SkSL::InlineCandidate"* [ %35, %39 ], [ %95, %94 ]
  %58 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %57, i64 0, i32 3
  %59 = bitcast %"class.std::__1::unique_ptr"** %58 to %"class.SkSL::FunctionCall"***
  %60 = load %"class.SkSL::FunctionCall"**, %"class.SkSL::FunctionCall"*** %59, align 8
  %61 = load %"class.SkSL::FunctionCall"*, %"class.SkSL::FunctionCall"** %60, align 8
  %62 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %61, i64 0, i32 1
  %63 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #15
  %64 = ptrtoint %"class.SkSL::FunctionDeclaration"* %63 to i64
  store i64 %64, i64* %48, align 8
  store i8 0, i8* %49, align 8
  %65 = call { %"struct.std::__1::__hash_node_base.204"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_bEEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.200"* nonnull %55, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %50, %"struct.std::__1::pair.226"* nonnull dereferenceable(16) %19) #15
  %66 = extractvalue { %"struct.std::__1::__hash_node_base.204"*, i8 } %65, 0
  %67 = extractvalue { %"struct.std::__1::__hash_node_base.204"*, i8 } %65, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #15
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %66, i64 3
  %71 = bitcast %"struct.std::__1::__hash_node_base.204"* %70 to i8*
  %72 = load i8, i8* %71, align 8, !range !2
  br label %91

73:                                               ; preds = %56
  %74 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %63, i64 0, i32 1
  %75 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %74, align 8
  %76 = call zeroext i1 @_ZN4SkSL7Inliner14isSafeToInlineEPKNS_18FunctionDefinitionE(%"class.SkSL::Inliner"* %0, %"class.SkSL::FunctionDefinition"* %75) #15
  br i1 %76, label %77, label %87

77:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEE21ContainsRecursiveCall, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  store %"class.SkSL::FunctionDeclaration"* %63, %"class.SkSL::FunctionDeclaration"** %53, align 8
  %78 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %74, align 8
  %79 = icmp eq %"class.SkSL::FunctionDefinition"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %78, i64 0, i32 0
  %82 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %54, %"class.SkSL::ProgramElement"* dereferenceable(16) %81) #15
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i8
  br label %85

85:                                               ; preds = %80, %77
  %86 = phi i8 [ %84, %80 ], [ 1, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #15
  br label %87

87:                                               ; preds = %85, %73
  %88 = phi i8 [ 0, %73 ], [ %86, %85 ]
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %66, i64 3
  %90 = bitcast %"struct.std::__1::__hash_node_base.204"* %89 to i8*
  store i8 %88, i8* %90, align 8
  br label %91

91:                                               ; preds = %87, %69
  %92 = phi i8 [ %72, %69 ], [ %88, %87 ]
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %57, i64 1
  %96 = icmp eq %"struct.SkSL::InlineCandidate"* %95, %37
  br i1 %96, label %97, label %56

97:                                               ; preds = %94
  %98 = ptrtoint %"struct.SkSL::InlineCandidate"* %37 to i64
  br label %188

99:                                               ; preds = %91
  %100 = ptrtoint %"struct.SkSL::InlineCandidate"* %57 to i64
  %101 = icmp eq %"struct.SkSL::InlineCandidate"* %57, %37
  br i1 %101, label %188, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %57, i64 1
  %104 = icmp eq %"struct.SkSL::InlineCandidate"* %103, %37
  br i1 %104, label %188, label %105

105:                                              ; preds = %102
  %106 = bitcast %"struct.std::__1::pair.226"* %17 to i8*
  %107 = bitcast %"struct.std::__1::pair.226"* %17 to i64*
  %108 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %17, i64 0, i32 1
  %109 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %17, i64 0, i32 0
  %110 = bitcast %class.ContainsRecursiveCall* %16 to i8*
  %111 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %16, i64 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %16, i64 0, i32 1
  %113 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %16, i64 0, i32 0, i32 0
  br label %114

114:                                              ; preds = %184, %105
  %115 = phi %"struct.SkSL::InlineCandidate"* [ %103, %105 ], [ %186, %184 ]
  %116 = phi %"struct.SkSL::InlineCandidate"* [ %57, %105 ], [ %115, %184 ]
  %117 = phi i64 [ %100, %105 ], [ %185, %184 ]
  %118 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %116, i64 1, i32 3
  %119 = bitcast %"class.std::__1::unique_ptr"** %118 to %"class.SkSL::FunctionCall"***
  %120 = load %"class.SkSL::FunctionCall"**, %"class.SkSL::FunctionCall"*** %119, align 8
  %121 = load %"class.SkSL::FunctionCall"*, %"class.SkSL::FunctionCall"** %120, align 8
  %122 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %121, i64 0, i32 1
  %123 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %122, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #15
  %124 = ptrtoint %"class.SkSL::FunctionDeclaration"* %123 to i64
  store i64 %124, i64* %107, align 8
  store i8 0, i8* %108, align 8
  %125 = call { %"struct.std::__1::__hash_node_base.204"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_bEEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.200"* nonnull %55, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %109, %"struct.std::__1::pair.226"* nonnull dereferenceable(16) %17) #15
  %126 = extractvalue { %"struct.std::__1::__hash_node_base.204"*, i8 } %125, 0
  %127 = extractvalue { %"struct.std::__1::__hash_node_base.204"*, i8 } %125, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #15
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %114
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %126, i64 3
  %131 = bitcast %"struct.std::__1::__hash_node_base.204"* %130 to i8*
  %132 = load i8, i8* %131, align 8, !range !2
  br label %151

133:                                              ; preds = %114
  %134 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %123, i64 0, i32 1
  %135 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %134, align 8
  %136 = call zeroext i1 @_ZN4SkSL7Inliner14isSafeToInlineEPKNS_18FunctionDefinitionE(%"class.SkSL::Inliner"* %0, %"class.SkSL::FunctionDefinition"* %135) #15
  br i1 %136, label %137, label %147

137:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEE21ContainsRecursiveCall, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  store %"class.SkSL::FunctionDeclaration"* %123, %"class.SkSL::FunctionDeclaration"** %112, align 8
  %138 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %134, align 8
  %139 = icmp eq %"class.SkSL::FunctionDefinition"* %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %138, i64 0, i32 0
  %142 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %113, %"class.SkSL::ProgramElement"* dereferenceable(16) %141) #15
  %143 = xor i1 %142, true
  %144 = zext i1 %143 to i8
  br label %145

145:                                              ; preds = %140, %137
  %146 = phi i8 [ %144, %140 ], [ 1, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #15
  br label %147

147:                                              ; preds = %145, %133
  %148 = phi i8 [ 0, %133 ], [ %146, %145 ]
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %126, i64 3
  %150 = bitcast %"struct.std::__1::__hash_node_base.204"* %149 to i8*
  store i8 %148, i8* %150, align 8
  br label %151

151:                                              ; preds = %147, %129
  %152 = phi i8 [ %132, %129 ], [ %148, %147 ]
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %184, label %154

154:                                              ; preds = %151
  %155 = inttoptr i64 %117 to %"struct.SkSL::InlineCandidate"*
  %156 = bitcast %"struct.SkSL::InlineCandidate"* %115 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %116, i64 1, i32 0, i32 1
  %159 = bitcast %"class.std::__1::__shared_weak_count"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"struct.SkSL::InlineCandidate"* %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 16, i1 false) #15
  %162 = inttoptr i64 %117 to i64*
  store i64 %157, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %155, i64 0, i32 0, i32 1
  %164 = bitcast %"class.std::__1::__shared_weak_count"** %163 to i64*
  %165 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %163, align 8
  store i64 %160, i64* %164, align 8
  %166 = icmp eq %"class.std::__1::__shared_weak_count"* %165, null
  br i1 %166, label %177, label %167

167:                                              ; preds = %154
  %168 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %165, i64 0, i32 0, i32 1
  %169 = atomicrmw add i64* %168, i64 -1 acq_rel
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %177

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %165, i64 0, i32 0
  %173 = bitcast %"class.std::__1::__shared_weak_count"* %165 to void (%"class.std::__1::__shared_count"*)***
  %174 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %174, i64 2
  %176 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %175, align 8
  call void %176(%"class.std::__1::__shared_count"* %172) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %165) #15
  br label %177

177:                                              ; preds = %171, %167, %154
  %178 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %155, i64 0, i32 1
  %179 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %116, i64 1, i32 1
  %180 = bitcast %"class.std::__1::unique_ptr.23"** %178 to i8*
  %181 = bitcast %"class.std::__1::unique_ptr.23"** %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 32, i1 false) #15
  %182 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %155, i64 1
  %183 = ptrtoint %"struct.SkSL::InlineCandidate"* %182 to i64
  br label %184

184:                                              ; preds = %177, %151
  %185 = phi i64 [ %117, %151 ], [ %183, %177 ]
  %186 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %115, i64 1
  %187 = icmp eq %"struct.SkSL::InlineCandidate"* %186, %37
  br i1 %187, label %188, label %114

188:                                              ; preds = %184, %97, %99, %102
  %189 = phi i64 [ %100, %99 ], [ %98, %97 ], [ %100, %102 ], [ %185, %184 ]
  %190 = inttoptr i64 %189 to %"struct.SkSL::InlineCandidate"*
  %191 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %36, align 8
  %192 = icmp eq %"struct.SkSL::InlineCandidate"* %191, %190
  br i1 %192, label %212, label %193

193:                                              ; preds = %188, %209
  %194 = phi %"struct.SkSL::InlineCandidate"* [ %195, %209 ], [ %191, %188 ]
  %195 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %194, i64 -1
  %196 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %194, i64 -1, i32 0, i32 1
  %197 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %196, align 8
  %198 = icmp eq %"class.std::__1::__shared_weak_count"* %197, null
  br i1 %198, label %209, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %197, i64 0, i32 0, i32 1
  %201 = atomicrmw add i64* %200, i64 -1 acq_rel
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %209

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %197, i64 0, i32 0
  %205 = bitcast %"class.std::__1::__shared_weak_count"* %197 to void (%"class.std::__1::__shared_count"*)***
  %206 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %205, align 8
  %207 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %206, i64 2
  %208 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %207, align 8
  call void %208(%"class.std::__1::__shared_count"* %204) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %197) #15
  br label %209

209:                                              ; preds = %203, %199, %193
  %210 = icmp eq %"struct.SkSL::InlineCandidate"* %195, %190
  br i1 %210, label %211, label %193

211:                                              ; preds = %209
  store %"struct.SkSL::InlineCandidate"* %190, %"struct.SkSL::InlineCandidate"** %36, align 8
  br label %212

212:                                              ; preds = %188, %211
  %213 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %214 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %213, align 8
  %215 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %214, i64 0, i32 4
  %216 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %215, align 8
  %217 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %216, i64 0, i32 1, i32 13
  %218 = load i32, i32* %217, align 8
  %219 = icmp eq i32 %218, 2147483647
  br i1 %219, label %459, label %220

220:                                              ; preds = %212
  %221 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %34, align 8
  %222 = icmp eq %"struct.SkSL::InlineCandidate"* %221, %190
  br i1 %222, label %459, label %223

223:                                              ; preds = %220
  %224 = bitcast %"class.std::__1::unordered_map.228"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %224) #15
  %225 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %22, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %227 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %22, i64 0, i32 0, i32 4, i64 0
  %228 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %22, i64 0, i32 0, i32 3
  %229 = bitcast %"class.std::__1::__compressed_pair.248"* %228 to i32*
  %230 = bitcast i8* %227 to i32*
  store i32 -1431655766, i32* %230, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %229, align 8
  %231 = bitcast %"class.std::__1::unordered_map.228"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %231) #15
  %232 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %23, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %23, i64 0, i32 0, i32 4, i64 0
  %235 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %23, i64 0, i32 0, i32 3
  %236 = bitcast %"class.std::__1::__compressed_pair.248"* %235 to i32*
  %237 = bitcast i8* %234 to i32*
  store i32 -1431655766, i32* %237, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %231, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %236, align 8
  %238 = bitcast %"struct.std::__1::pair.256"* %9 to i8*
  %239 = bitcast %"struct.std::__1::pair.256"* %9 to i64*
  %240 = getelementptr inbounds %"struct.std::__1::pair.256", %"struct.std::__1::pair.256"* %9, i64 0, i32 1
  %241 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %22, i64 0, i32 0
  %242 = getelementptr inbounds %"struct.std::__1::pair.256", %"struct.std::__1::pair.256"* %9, i64 0, i32 0
  %243 = bitcast %"class.SkSL::FunctionDeclaration"** %24 to i8*
  %244 = getelementptr inbounds %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.228"* %23, i64 0, i32 0
  %245 = bitcast %"class.std::__1::tuple.430"* %7 to i8*
  %246 = getelementptr inbounds %"class.std::__1::tuple.430", %"class.std::__1::tuple.430"* %7, i64 0, i32 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.std::__1::tuple.393", %"class.std::__1::tuple.393"* %8, i64 0, i32 0
  br label %421

248:                                              ; preds = %449
  %249 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %34, align 8
  %250 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %36, align 8
  %251 = icmp eq %"struct.SkSL::InlineCandidate"* %249, %250
  br i1 %251, label %291, label %252

252:                                              ; preds = %248
  %253 = bitcast %"class.SkSL::FunctionDeclaration"** %15 to i8*
  %254 = bitcast %"class.std::__1::tuple.430"* %13 to i8*
  %255 = getelementptr inbounds %"class.std::__1::tuple.430", %"class.std::__1::tuple.430"* %13, i64 0, i32 0, i32 0, i32 0
  %256 = getelementptr inbounds %"class.std::__1::tuple.393", %"class.std::__1::tuple.393"* %14, i64 0, i32 0
  br label %257

257:                                              ; preds = %286, %252
  %258 = phi %"struct.SkSL::InlineCandidate"* [ %249, %252 ], [ %287, %286 ]
  %259 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %258, i64 0, i32 3
  %260 = bitcast %"class.std::__1::unique_ptr"** %259 to %"class.SkSL::FunctionCall"***
  %261 = load %"class.SkSL::FunctionCall"**, %"class.SkSL::FunctionCall"*** %260, align 8
  %262 = load %"class.SkSL::FunctionCall"*, %"class.SkSL::FunctionCall"** %261, align 8
  %263 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %262, i64 0, i32 1
  %264 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %263, align 8
  %265 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %264, i64 0, i32 2
  %266 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %265, align 8
  %267 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %266, i64 0, i32 1
  %268 = load i32, i32* %267, align 8
  %269 = and i32 %268, 256
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %286

271:                                              ; preds = %257
  %272 = call i32 @_ZNK4SkSL12ProgramUsage3getERKNS_19FunctionDeclarationE(%"class.SkSL::ProgramUsage"* %4, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %264) #15
  %273 = icmp eq i32 %272, 1
  br i1 %273, label %286, label %274

274:                                              ; preds = %271
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #15
  store %"class.SkSL::FunctionDeclaration"* %264, %"class.SkSL::FunctionDeclaration"** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #15
  store %"class.SkSL::FunctionDeclaration"** %15, %"class.SkSL::FunctionDeclaration"*** %255, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %256) #15
  %275 = call { %"struct.std::__1::__hash_node_base.233"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.229"* nonnull %244, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.430"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.393"* nonnull dereferenceable(1) %14) #15
  %276 = extractvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } %275, 0
  %277 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %276, i64 3
  %278 = bitcast %"struct.std::__1::__hash_node_base.233"* %277 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %256) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #15
  %279 = load i32, i32* %278, align 4
  %280 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %213, align 8
  %281 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %280, i64 0, i32 4
  %282 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %281, align 8
  %283 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %282, i64 0, i32 1, i32 13
  %284 = load i32, i32* %283, align 8
  %285 = icmp sgt i32 %279, %284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #15
  br i1 %285, label %291, label %286

286:                                              ; preds = %274, %271, %257
  %287 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %258, i64 1
  %288 = icmp eq %"struct.SkSL::InlineCandidate"* %287, %250
  br i1 %288, label %289, label %257

289:                                              ; preds = %286
  %290 = ptrtoint %"struct.SkSL::InlineCandidate"* %250 to i64
  br label %368

291:                                              ; preds = %274, %248
  %292 = phi %"struct.SkSL::InlineCandidate"* [ %249, %248 ], [ %258, %274 ]
  %293 = ptrtoint %"struct.SkSL::InlineCandidate"* %292 to i64
  %294 = icmp eq %"struct.SkSL::InlineCandidate"* %292, %250
  br i1 %294, label %368, label %295

295:                                              ; preds = %291
  %296 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %292, i64 1
  %297 = icmp eq %"struct.SkSL::InlineCandidate"* %296, %250
  br i1 %297, label %368, label %298

298:                                              ; preds = %295
  %299 = bitcast %"class.SkSL::FunctionDeclaration"** %12 to i8*
  %300 = bitcast %"class.std::__1::tuple.430"* %10 to i8*
  %301 = getelementptr inbounds %"class.std::__1::tuple.430", %"class.std::__1::tuple.430"* %10, i64 0, i32 0, i32 0, i32 0
  %302 = getelementptr inbounds %"class.std::__1::tuple.393", %"class.std::__1::tuple.393"* %11, i64 0, i32 0
  br label %303

303:                                              ; preds = %364, %298
  %304 = phi %"struct.SkSL::InlineCandidate"* [ %296, %298 ], [ %366, %364 ]
  %305 = phi %"struct.SkSL::InlineCandidate"* [ %292, %298 ], [ %304, %364 ]
  %306 = phi i64 [ %293, %298 ], [ %365, %364 ]
  %307 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %305, i64 1, i32 3
  %308 = bitcast %"class.std::__1::unique_ptr"** %307 to %"class.SkSL::FunctionCall"***
  %309 = load %"class.SkSL::FunctionCall"**, %"class.SkSL::FunctionCall"*** %308, align 8
  %310 = load %"class.SkSL::FunctionCall"*, %"class.SkSL::FunctionCall"** %309, align 8
  %311 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %310, i64 0, i32 1
  %312 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %311, align 8
  %313 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %312, i64 0, i32 2
  %314 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %313, align 8
  %315 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %314, i64 0, i32 1
  %316 = load i32, i32* %315, align 8
  %317 = and i32 %316, 256
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %334

319:                                              ; preds = %303
  %320 = call i32 @_ZNK4SkSL12ProgramUsage3getERKNS_19FunctionDeclarationE(%"class.SkSL::ProgramUsage"* %4, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %312) #15
  %321 = icmp eq i32 %320, 1
  br i1 %321, label %334, label %322

322:                                              ; preds = %319
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %299) #15
  store %"class.SkSL::FunctionDeclaration"* %312, %"class.SkSL::FunctionDeclaration"** %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #15
  store %"class.SkSL::FunctionDeclaration"** %12, %"class.SkSL::FunctionDeclaration"*** %301, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %302) #15
  %323 = call { %"struct.std::__1::__hash_node_base.233"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.229"* nonnull %244, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.430"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.393"* nonnull dereferenceable(1) %11) #15
  %324 = extractvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } %323, 0
  %325 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %324, i64 3
  %326 = bitcast %"struct.std::__1::__hash_node_base.233"* %325 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %302) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #15
  %327 = load i32, i32* %326, align 4
  %328 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %213, align 8
  %329 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %328, i64 0, i32 4
  %330 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %329, align 8
  %331 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %330, i64 0, i32 1, i32 13
  %332 = load i32, i32* %331, align 8
  %333 = icmp sgt i32 %327, %332
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %299) #15
  br i1 %333, label %364, label %334

334:                                              ; preds = %322, %319, %303
  %335 = inttoptr i64 %306 to %"struct.SkSL::InlineCandidate"*
  %336 = bitcast %"struct.SkSL::InlineCandidate"* %304 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %305, i64 1, i32 0, i32 1
  %339 = bitcast %"class.std::__1::__shared_weak_count"** %338 to i64*
  %340 = load i64, i64* %339, align 8
  %341 = bitcast %"struct.SkSL::InlineCandidate"* %304 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %341, i8 0, i64 16, i1 false) #15
  %342 = inttoptr i64 %306 to i64*
  store i64 %337, i64* %342, align 8
  %343 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %335, i64 0, i32 0, i32 1
  %344 = bitcast %"class.std::__1::__shared_weak_count"** %343 to i64*
  %345 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %343, align 8
  store i64 %340, i64* %344, align 8
  %346 = icmp eq %"class.std::__1::__shared_weak_count"* %345, null
  br i1 %346, label %357, label %347

347:                                              ; preds = %334
  %348 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %345, i64 0, i32 0, i32 1
  %349 = atomicrmw add i64* %348, i64 -1 acq_rel
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %351, label %357

351:                                              ; preds = %347
  %352 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %345, i64 0, i32 0
  %353 = bitcast %"class.std::__1::__shared_weak_count"* %345 to void (%"class.std::__1::__shared_count"*)***
  %354 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %353, align 8
  %355 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %354, i64 2
  %356 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %355, align 8
  call void %356(%"class.std::__1::__shared_count"* %352) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %345) #15
  br label %357

357:                                              ; preds = %351, %347, %334
  %358 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %335, i64 0, i32 1
  %359 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %305, i64 1, i32 1
  %360 = bitcast %"class.std::__1::unique_ptr.23"** %358 to i8*
  %361 = bitcast %"class.std::__1::unique_ptr.23"** %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %360, i8* align 8 %361, i64 32, i1 false) #15
  %362 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %335, i64 1
  %363 = ptrtoint %"struct.SkSL::InlineCandidate"* %362 to i64
  br label %364

364:                                              ; preds = %357, %322
  %365 = phi i64 [ %306, %322 ], [ %363, %357 ]
  %366 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %304, i64 1
  %367 = icmp eq %"struct.SkSL::InlineCandidate"* %366, %250
  br i1 %367, label %368, label %303

368:                                              ; preds = %364, %289, %291, %295
  %369 = phi i64 [ %293, %291 ], [ %290, %289 ], [ %293, %295 ], [ %365, %364 ]
  %370 = inttoptr i64 %369 to %"struct.SkSL::InlineCandidate"*
  %371 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %36, align 8
  %372 = icmp eq %"struct.SkSL::InlineCandidate"* %371, %370
  br i1 %372, label %392, label %373

373:                                              ; preds = %368, %389
  %374 = phi %"struct.SkSL::InlineCandidate"* [ %375, %389 ], [ %371, %368 ]
  %375 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %374, i64 -1
  %376 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %374, i64 -1, i32 0, i32 1
  %377 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %376, align 8
  %378 = icmp eq %"class.std::__1::__shared_weak_count"* %377, null
  br i1 %378, label %389, label %379

379:                                              ; preds = %373
  %380 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %377, i64 0, i32 0, i32 1
  %381 = atomicrmw add i64* %380, i64 -1 acq_rel
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %389

383:                                              ; preds = %379
  %384 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %377, i64 0, i32 0
  %385 = bitcast %"class.std::__1::__shared_weak_count"* %377 to void (%"class.std::__1::__shared_count"*)***
  %386 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %385, align 8
  %387 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %386, i64 2
  %388 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %387, align 8
  call void %388(%"class.std::__1::__shared_count"* %384) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %377) #15
  br label %389

389:                                              ; preds = %383, %379, %373
  %390 = icmp eq %"struct.SkSL::InlineCandidate"* %375, %370
  br i1 %390, label %391, label %373

391:                                              ; preds = %389
  store %"struct.SkSL::InlineCandidate"* %370, %"struct.SkSL::InlineCandidate"** %36, align 8
  br label %392

392:                                              ; preds = %368, %391
  %393 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %233, align 8
  %394 = icmp eq %"struct.std::__1::__hash_node_base.233"* %393, null
  br i1 %394, label %401, label %395

395:                                              ; preds = %392, %395
  %396 = phi %"struct.std::__1::__hash_node_base.233"* [ %398, %395 ], [ %393, %392 ]
  %397 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %396, i64 0, i32 0
  %398 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %397, align 8
  %399 = bitcast %"struct.std::__1::__hash_node_base.233"* %396 to i8*
  call void @_ZdlPv(i8* %399) #17
  %400 = icmp eq %"struct.std::__1::__hash_node_base.233"* %398, null
  br i1 %400, label %401, label %395

401:                                              ; preds = %395, %392
  %402 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %232, align 8
  store %"struct.std::__1::__hash_node_base.233"** null, %"struct.std::__1::__hash_node_base.233"*** %232, align 8
  %403 = icmp eq %"struct.std::__1::__hash_node_base.233"** %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %401
  %405 = bitcast %"struct.std::__1::__hash_node_base.233"** %402 to i8*
  call void @_ZdlPv(i8* %405) #17
  br label %406

406:                                              ; preds = %401, %404
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %231) #15
  %407 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %226, align 8
  %408 = icmp eq %"struct.std::__1::__hash_node_base.233"* %407, null
  br i1 %408, label %415, label %409

409:                                              ; preds = %406, %409
  %410 = phi %"struct.std::__1::__hash_node_base.233"* [ %412, %409 ], [ %407, %406 ]
  %411 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %410, i64 0, i32 0
  %412 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %411, align 8
  %413 = bitcast %"struct.std::__1::__hash_node_base.233"* %410 to i8*
  call void @_ZdlPv(i8* %413) #17
  %414 = icmp eq %"struct.std::__1::__hash_node_base.233"* %412, null
  br i1 %414, label %415, label %409

415:                                              ; preds = %409, %406
  %416 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %225, align 8
  store %"struct.std::__1::__hash_node_base.233"** null, %"struct.std::__1::__hash_node_base.233"*** %225, align 8
  %417 = icmp eq %"struct.std::__1::__hash_node_base.233"** %416, null
  br i1 %417, label %420, label %418

418:                                              ; preds = %415
  %419 = bitcast %"struct.std::__1::__hash_node_base.233"** %416 to i8*
  call void @_ZdlPv(i8* %419) #17
  br label %420

420:                                              ; preds = %415, %418
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %224) #15
  br label %459

421:                                              ; preds = %223, %449
  %422 = phi %"struct.SkSL::InlineCandidate"* [ %221, %223 ], [ %457, %449 ]
  %423 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %422, i64 0, i32 3
  %424 = bitcast %"class.std::__1::unique_ptr"** %423 to %"class.SkSL::FunctionCall"***
  %425 = load %"class.SkSL::FunctionCall"**, %"class.SkSL::FunctionCall"*** %424, align 8
  %426 = load %"class.SkSL::FunctionCall"*, %"class.SkSL::FunctionCall"** %425, align 8
  %427 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %426, i64 0, i32 1
  %428 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %427, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %238) #15
  %429 = ptrtoint %"class.SkSL::FunctionDeclaration"* %428 to i64
  store i64 %429, i64* %239, align 8
  store i32 0, i32* %240, align 8
  %430 = call { %"struct.std::__1::__hash_node_base.233"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_iEEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.229"* nonnull %241, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %242, %"struct.std::__1::pair.256"* nonnull dereferenceable(16) %9) #15
  %431 = extractvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } %430, 0
  %432 = extractvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } %430, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %238) #15
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %434, label %438

434:                                              ; preds = %421
  %435 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %431, i64 3
  %436 = bitcast %"struct.std::__1::__hash_node_base.233"* %435 to i32*
  %437 = load i32, i32* %436, align 8
  br label %449

438:                                              ; preds = %421
  %439 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %428, i64 0, i32 1
  %440 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %439, align 8
  %441 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %213, align 8
  %442 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %441, i64 0, i32 4
  %443 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %442, align 8
  %444 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %443, i64 0, i32 1, i32 13
  %445 = load i32, i32* %444, align 8
  %446 = call i32 @_ZN4SkSL8Analysis18NodeCountUpToLimitERKNS_18FunctionDefinitionEi(%"class.SkSL::FunctionDefinition"* dereferenceable(88) %440, i32 %445) #15
  %447 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %431, i64 3
  %448 = bitcast %"struct.std::__1::__hash_node_base.233"* %447 to i32*
  store i32 %446, i32* %448, align 8
  br label %449

449:                                              ; preds = %434, %438
  %450 = phi i32 [ %437, %434 ], [ %446, %438 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #15
  store %"class.SkSL::FunctionDeclaration"* %428, %"class.SkSL::FunctionDeclaration"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %245) #15
  store %"class.SkSL::FunctionDeclaration"** %24, %"class.SkSL::FunctionDeclaration"*** %246, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %247) #15
  %451 = call { %"struct.std::__1::__hash_node_base.233"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.229"* nonnull %244, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %24, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.430"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.393"* nonnull dereferenceable(1) %8) #15
  %452 = extractvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } %451, 0
  %453 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %452, i64 3
  %454 = bitcast %"struct.std::__1::__hash_node_base.233"* %453 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %247) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #15
  %455 = load i32, i32* %454, align 4
  %456 = add nsw i32 %455, %450
  store i32 %456, i32* %454, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #15
  %457 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %422, i64 1
  %458 = icmp eq %"struct.SkSL::InlineCandidate"* %457, %190
  br i1 %458, label %248, label %421

459:                                              ; preds = %212, %220, %420
  %460 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %42, align 8
  %461 = icmp eq %"struct.std::__1::__hash_node_base.204"* %460, null
  br i1 %461, label %468, label %462

462:                                              ; preds = %459, %462
  %463 = phi %"struct.std::__1::__hash_node_base.204"* [ %465, %462 ], [ %460, %459 ]
  %464 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %463, i64 0, i32 0
  %465 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %464, align 8
  %466 = bitcast %"struct.std::__1::__hash_node_base.204"* %463 to i8*
  call void @_ZdlPv(i8* %466) #17
  %467 = icmp eq %"struct.std::__1::__hash_node_base.204"* %465, null
  br i1 %467, label %468, label %462

468:                                              ; preds = %462, %459
  %469 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %41, align 8
  store %"struct.std::__1::__hash_node_base.204"** null, %"struct.std::__1::__hash_node_base.204"*** %41, align 8
  %470 = icmp eq %"struct.std::__1::__hash_node_base.204"** %469, null
  br i1 %470, label %473, label %471

471:                                              ; preds = %468
  %472 = bitcast %"struct.std::__1::__hash_node_base.204"** %469 to i8*
  call void @_ZdlPv(i8* %472) #17
  br label %473

473:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #15
  br label %474

474:                                              ; preds = %33, %473
  %475 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %20, i64 0, i32 2, i32 0, i32 0
  %476 = load %"class.std::__1::unique_ptr.23"**, %"class.std::__1::unique_ptr.23"*** %475, align 8
  %477 = icmp eq %"class.std::__1::unique_ptr.23"** %476, null
  br i1 %477, label %483, label %478

478:                                              ; preds = %474
  %479 = ptrtoint %"class.std::__1::unique_ptr.23"** %476 to i64
  %480 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %20, i64 0, i32 2, i32 0, i32 1
  %481 = bitcast %"class.std::__1::unique_ptr.23"*** %480 to i64*
  store i64 %479, i64* %481, align 8
  %482 = bitcast %"class.std::__1::unique_ptr.23"** %476 to i8*
  call void @_ZdlPv(i8* %482) #17
  br label %483

483:                                              ; preds = %478, %474
  %484 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %27, i64 0, i32 0, i32 0
  %485 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %484, align 8
  %486 = icmp eq %"class.std::__1::shared_ptr"* %485, null
  br i1 %486, label %515, label %487

487:                                              ; preds = %483
  %488 = bitcast %"class.std::__1::shared_ptr"* %485 to i8*
  %489 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %20, i64 0, i32 1, i32 0, i32 1
  %490 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %489, align 8
  %491 = icmp eq %"class.std::__1::shared_ptr"* %490, %485
  br i1 %491, label %513, label %492

492:                                              ; preds = %487, %508
  %493 = phi %"class.std::__1::shared_ptr"* [ %494, %508 ], [ %490, %487 ]
  %494 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %493, i64 -1
  %495 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %493, i64 -1, i32 1
  %496 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %495, align 8
  %497 = icmp eq %"class.std::__1::__shared_weak_count"* %496, null
  br i1 %497, label %508, label %498

498:                                              ; preds = %492
  %499 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %496, i64 0, i32 0, i32 1
  %500 = atomicrmw add i64* %499, i64 -1 acq_rel
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %508

502:                                              ; preds = %498
  %503 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %496, i64 0, i32 0
  %504 = bitcast %"class.std::__1::__shared_weak_count"* %496 to void (%"class.std::__1::__shared_count"*)***
  %505 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %504, align 8
  %506 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %505, i64 2
  %507 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %506, align 8
  call void %507(%"class.std::__1::__shared_count"* %503) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %496) #15
  br label %508

508:                                              ; preds = %502, %498, %492
  %509 = icmp eq %"class.std::__1::shared_ptr"* %494, %485
  br i1 %509, label %510, label %492

510:                                              ; preds = %508
  %511 = bitcast %"class.std::__1::vector.278"* %27 to i8**
  %512 = load i8*, i8** %511, align 8
  br label %513

513:                                              ; preds = %510, %487
  %514 = phi i8* [ %512, %510 ], [ %488, %487 ]
  store %"class.std::__1::shared_ptr"* %485, %"class.std::__1::shared_ptr"** %489, align 8
  call void @_ZdlPv(i8* %514) #17
  br label %515

515:                                              ; preds = %483, %513
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %25) #15
  br i1 %29, label %526, label %516

516:                                              ; preds = %515
  %517 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %518 = atomicrmw add i64* %517, i64 -1 acq_rel
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %520, label %526

520:                                              ; preds = %516
  %521 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %522 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %523 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %522, align 8
  %524 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %523, i64 2
  %525 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %524, align 8
  call void %525(%"class.std::__1::__shared_count"* %521) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #15
  br label %526

526:                                              ; preds = %515, %516, %520
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL23InlineCandidateAnalyzer5visitERKNSt3__16vectorINS1_10unique_ptrINS_14ProgramElementENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEENS1_10shared_ptrINS_11SymbolTableEEEPNS_19InlineCandidateListE(%"class.SkSL::InlineCandidateAnalyzer"*, %"class.std::__1::vector.258"* dereferenceable(24), %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, %"struct.SkSL::InlineCandidateList"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::shared_ptr", align 8
  %7 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %6, i64 0, i32 0
  store %"class.SkSL::SymbolTable"* %2, %"class.SkSL::SymbolTable"** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %6, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %3, %"class.std::__1::__shared_weak_count"** %8, align 8
  %9 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 0
  store %"struct.SkSL::InlineCandidateList"* %4, %"struct.SkSL::InlineCandidateList"** %9, align 8
  %10 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %13 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %12, align 8
  %14 = icmp eq %"class.std::__1::shared_ptr"* %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %5
  %16 = ptrtoint %"class.SkSL::SymbolTable"* %2 to i64
  %17 = bitcast %"class.std::__1::shared_ptr"* %11 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %11, i64 0, i32 1
  %19 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %8, align 8
  store %"class.std::__1::__shared_weak_count"* %19, %"class.std::__1::__shared_weak_count"** %18, align 8
  %20 = icmp eq %"class.std::__1::__shared_weak_count"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %19, i64 0, i32 0, i32 1
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  br label %24

24:                                               ; preds = %21, %15
  %25 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %11, i64 1
  %26 = ptrtoint %"class.std::__1::shared_ptr"* %25 to i64
  %27 = bitcast %"class.std::__1::shared_ptr"** %10 to i64*
  store i64 %26, i64* %27, align 8
  br label %30

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.278"* %29, %"class.std::__1::shared_ptr"* nonnull dereferenceable(16) %6) #15
  br label %30

30:                                               ; preds = %24, %28
  %31 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %1, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %1, i64 0, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.260"* %32, %34
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 3
  %38 = bitcast %"class.SkSL::FunctionDefinition"** %37 to %"class.SkSL::ProgramElement"**
  br label %69

39:                                               ; preds = %79, %30
  %40 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %10, align 8
  %41 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %40, i64 -1, i32 1
  %42 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %41, align 8
  %43 = icmp eq %"class.std::__1::__shared_weak_count"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %42, i64 0, i32 0, i32 1
  %46 = atomicrmw add i64* %45, i64 -1 acq_rel
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %42, i64 0, i32 0
  %50 = bitcast %"class.std::__1::__shared_weak_count"* %42 to void (%"class.std::__1::__shared_count"*)***
  %51 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %51, i64 2
  %53 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %52, align 8
  call void %53(%"class.std::__1::__shared_count"* %49) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %42) #15
  br label %54

54:                                               ; preds = %39, %44, %48
  %55 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %40, i64 -1
  store %"class.std::__1::shared_ptr"* %55, %"class.std::__1::shared_ptr"** %10, align 8
  store %"struct.SkSL::InlineCandidateList"* null, %"struct.SkSL::InlineCandidateList"** %9, align 8
  %56 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %8, align 8
  %57 = icmp eq %"class.std::__1::__shared_weak_count"* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %56, i64 0, i32 0, i32 1
  %60 = atomicrmw add i64* %59, i64 -1 acq_rel
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %56, i64 0, i32 0
  %64 = bitcast %"class.std::__1::__shared_weak_count"* %56 to void (%"class.std::__1::__shared_count"*)***
  %65 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %65, i64 2
  %67 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %66, align 8
  call void %67(%"class.std::__1::__shared_count"* %63) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %56) #15
  br label %68

68:                                               ; preds = %54, %58, %62
  ret void

69:                                               ; preds = %36, %79
  %70 = phi %"class.std::__1::unique_ptr.260"* [ %32, %36 ], [ %80, %79 ]
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %71, align 8
  %73 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %72, i64 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %79

76:                                               ; preds = %69
  store %"class.SkSL::ProgramElement"* %72, %"class.SkSL::ProgramElement"** %38, align 8
  %77 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %72, i64 2
  %78 = bitcast %"class.SkSL::ProgramElement"* %77 to %"class.std::__1::unique_ptr.23"*
  call void @_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr.23"* %78, i1 zeroext true) #15
  br label %79

79:                                               ; preds = %69, %76
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %70, i64 1
  %81 = icmp eq %"class.std::__1::unique_ptr.260"* %80, %34
  br i1 %81, label %39, label %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL7Inliner7analyzeERKNSt3__16vectorINS1_10unique_ptrINS_14ProgramElementENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEENS1_10shared_ptrINS_11SymbolTableEEEPNS_12ProgramUsageE(%"class.SkSL::Inliner"*, %"class.std::__1::vector.258"* dereferenceable(24), %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, %"class.SkSL::ProgramUsage"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::tuple.439", align 8
  %7 = alloca %"class.std::__1::tuple.393", align 1
  %8 = alloca %"struct.SkSL::InlineCandidateList", align 8
  %9 = alloca %"class.std::__1::unordered_map.296", align 8
  %10 = alloca %"class.std::__1::unique_ptr.23"*, align 8
  %11 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 0
  %12 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %12, i64 0, i32 4
  %14 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %13, align 8
  %15 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %14, i64 0, i32 1, i32 13
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %318, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.SkSL::Inliner", %"class.SkSL::Inliner"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 2499
  br i1 %21, label %318, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.SkSL::InlineCandidateList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"struct.SkSL::InlineCandidateList", %"struct.SkSL::InlineCandidateList"* %8, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.SkSL::InlineCandidateList", %"struct.SkSL::InlineCandidateList"* %8, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #15
  %26 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %29 = atomicrmw add i64* %28, i64 1 monotonic
  br label %30

30:                                               ; preds = %22, %27
  call void @_ZN4SkSL7Inliner18buildCandidateListERKNSt3__16vectorINS1_10unique_ptrINS_14ProgramElementENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEENS1_10shared_ptrINS_11SymbolTableEEEPNS_12ProgramUsageEPNS_19InlineCandidateListE(%"class.SkSL::Inliner"* %0, %"class.std::__1::vector.258"* dereferenceable(24) %1, %"class.SkSL::SymbolTable"* %2, %"class.std::__1::__shared_weak_count"* %3, %"class.SkSL::ProgramUsage"* %4, %"struct.SkSL::InlineCandidateList"* nonnull %8)
  %31 = bitcast %"class.std::__1::unordered_map.296"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::unordered_map.296", %"class.std::__1::unordered_map.296"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::unordered_map.296", %"class.std::__1::unordered_map.296"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::unordered_map.296", %"class.std::__1::unordered_map.296"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::unordered_map.296", %"class.std::__1::unordered_map.296"* %9, i64 0, i32 0, i32 4, i64 0
  %36 = getelementptr inbounds %"class.std::__1::unordered_map.296", %"class.std::__1::unordered_map.296"* %9, i64 0, i32 0, i32 3
  %37 = bitcast %"class.std::__1::__compressed_pair.318"* %36 to i32*
  %38 = bitcast i8* %35 to i32*
  store i32 -1431655766, i32* %38, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %37, align 8
  %39 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %24, align 8
  %40 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %25, align 8
  %41 = icmp eq %"struct.SkSL::InlineCandidate"* %39, %40
  br i1 %41, label %281, label %42

42:                                               ; preds = %30
  %43 = bitcast %"class.std::__1::unique_ptr.23"** %10 to i8*
  %44 = bitcast %"class.std::__1::unique_ptr.23"** %10 to i64*
  %45 = bitcast %"class.std::__1::unique_ptr.23"** %10 to %"class.SkSL::Block"***
  %46 = getelementptr inbounds %"class.std::__1::unordered_map.296", %"class.std::__1::unordered_map.296"* %9, i64 0, i32 0
  %47 = bitcast %"class.std::__1::tuple.439"* %6 to i8*
  %48 = getelementptr inbounds %"class.std::__1::tuple.439", %"class.std::__1::tuple.439"* %6, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::tuple.393", %"class.std::__1::tuple.393"* %7, i64 0, i32 0
  br label %50

50:                                               ; preds = %247, %42
  %51 = phi i8 [ 0, %42 ], [ 1, %247 ]
  %52 = phi %"struct.SkSL::InlineCandidate"* [ %39, %42 ], [ %266, %247 ]
  %53 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %52, i64 0, i32 3
  %54 = bitcast %"class.std::__1::unique_ptr"** %53 to %"class.SkSL::FunctionCall"***
  %55 = load %"class.SkSL::FunctionCall"**, %"class.SkSL::FunctionCall"*** %54, align 8
  %56 = load %"class.SkSL::FunctionCall"*, %"class.SkSL::FunctionCall"** %55, align 8
  %57 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %52, i64 0, i32 0, i32 0
  %58 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %57, align 8
  %59 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %52, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %59, align 8
  %61 = icmp eq %"class.std::__1::__shared_weak_count"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0, i32 1
  %64 = atomicrmw add i64* %63, i64 1 monotonic
  br label %65

65:                                               ; preds = %50, %62
  %66 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %52, i64 0, i32 4
  %67 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %66, align 8
  %68 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %67, i64 0, i32 1
  %69 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %68, align 8
  %70 = call { %"class.SkSL::Block"*, %"class.SkSL::Expression"* } @_ZN4SkSL7Inliner10inlineCallEPNS_12FunctionCallENSt3__110shared_ptrINS_11SymbolTableEEERKNS_12ProgramUsageEPKNS_19FunctionDeclarationE(%"class.SkSL::Inliner"* %0, %"class.SkSL::FunctionCall"* %56, %"class.SkSL::SymbolTable"* %58, %"class.std::__1::__shared_weak_count"* %60, %"class.SkSL::ProgramUsage"* dereferenceable(32) %4, %"class.SkSL::FunctionDeclaration"* %69)
  %71 = extractvalue { %"class.SkSL::Block"*, %"class.SkSL::Expression"* } %70, 0
  %72 = extractvalue { %"class.SkSL::Block"*, %"class.SkSL::Expression"* } %70, 1
  %73 = ptrtoint %"class.SkSL::Expression"* %72 to i64
  %74 = icmp ne %"class.SkSL::Block"* %71, null
  %75 = icmp ne %"class.SkSL::Expression"* %72, null
  %76 = or i1 %74, %75
  br i1 %76, label %77, label %269

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %71, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %52, i64 0, i32 1
  %80 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %81, align 8
  %83 = icmp eq %"class.SkSL::Block"* %71, null
  br i1 %83, label %118, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %71, i64 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 16
  %88 = icmp ne %"class.SkSL::Statement"* %82, null
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %118

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %82, i64 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  switch i32 %92, label %118 [
    i32 23, label %93
    i32 22, label %93
    i32 20, label %93
  ]

93:                                               ; preds = %90, %90, %90
  br label %94

94:                                               ; preds = %93, %109
  %95 = phi %"class.SkSL::Statement"* [ %114, %109 ], [ %78, %93 ]
  %96 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %95, i64 4
  %97 = bitcast %"class.SkSL::Statement"* %96 to i8*
  %98 = load i8, i8* %97, align 8, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %118

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %95, i64 2, i32 0, i32 1
  %102 = bitcast i32* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %103, 4294967294
  %105 = icmp eq i64 %104, 2
  br i1 %105, label %109, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %78, i64 4
  %108 = bitcast %"class.SkSL::Statement"* %107 to i8*
  store i8 1, i8* %108, align 8
  br label %118

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %95, i64 2
  %111 = bitcast %"class.SkSL::Statement"* %110 to %"class.std::__1::unique_ptr.23"**
  %112 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %113, align 8
  %115 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %114, i64 0, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 16
  br i1 %117, label %94, label %118

118:                                              ; preds = %94, %109, %77, %84, %90, %106
  call void @_ZN4SkSL12ProgramUsage3addEPKNS_9StatementE(%"class.SkSL::ProgramUsage"* %4, %"class.SkSL::Statement"* %78) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #15
  store %"class.std::__1::unique_ptr.23"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.23"*), %"class.std::__1::unique_ptr.23"** %10, align 8
  %119 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %52, i64 0, i32 2
  %120 = bitcast %"class.std::__1::unique_ptr.23"** %119 to i64*
  %121 = load i64, i64* %33, align 8
  %122 = icmp eq i64 %121, 0
  %123 = call i64 @llvm.ctpop.i64(i64 %121) #15, !range !18
  %124 = icmp ugt i64 %123, 1
  %125 = add i64 %121, -1
  %126 = add i64 %121, -1
  %127 = load i64, i64* %120, align 8
  store i64 %127, i64* %44, align 8
  %128 = lshr i64 %127, 32
  %129 = shl i64 %127, 3
  %130 = and i64 %129, 4294967288
  %131 = add nuw nsw i64 %130, 8
  %132 = xor i64 %131, %128
  %133 = mul i64 %132, -7070675565921424023
  %134 = lshr i64 %133, 47
  %135 = xor i64 %133, %128
  %136 = xor i64 %135, %134
  %137 = mul i64 %136, -7070675565921424023
  br i1 %122, label %203, label %138

138:                                              ; preds = %118
  %139 = lshr i64 %137, 47
  %140 = xor i64 %139, %137
  br label %141

141:                                              ; preds = %138, %187
  %142 = phi i64 [ %127, %138 ], [ %190, %187 ]
  %143 = phi i64 [ %140, %138 ], [ %202, %187 ]
  %144 = mul i64 %143, -7070675565921424023
  %145 = inttoptr i64 %142 to %"class.std::__1::unique_ptr.23"*
  br i1 %124, label %148, label %146

146:                                              ; preds = %141
  %147 = and i64 %144, %125
  br label %152

148:                                              ; preds = %141
  %149 = icmp ult i64 %144, %121
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %144, %121
  br label %152

152:                                              ; preds = %150, %148, %146
  %153 = phi i64 [ %147, %146 ], [ %151, %150 ], [ %144, %148 ]
  %154 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %32, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %154, i64 %153
  %156 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %155, align 8
  %157 = icmp eq %"struct.std::__1::__hash_node_base.301"* %156, null
  br i1 %157, label %203, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %156, i64 0, i32 0
  %160 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %159, align 8
  %161 = icmp eq %"struct.std::__1::__hash_node_base.301"* %160, null
  br i1 %161, label %203, label %162

162:                                              ; preds = %158, %183
  %163 = phi %"struct.std::__1::__hash_node_base.301"* [ %185, %183 ], [ %160, %158 ]
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %163, i64 1
  %165 = bitcast %"struct.std::__1::__hash_node_base.301"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, %144
  br i1 %167, label %178, label %168

168:                                              ; preds = %162
  br i1 %124, label %171, label %169

169:                                              ; preds = %168
  %170 = and i64 %166, %126
  br label %175

171:                                              ; preds = %168
  %172 = icmp ult i64 %166, %121
  br i1 %172, label %175, label %173

173:                                              ; preds = %171
  %174 = urem i64 %166, %121
  br label %175

175:                                              ; preds = %173, %171, %169
  %176 = phi i64 [ %170, %169 ], [ %174, %173 ], [ %166, %171 ]
  %177 = icmp eq i64 %176, %153
  br i1 %177, label %183, label %203

178:                                              ; preds = %162
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %163, i64 2
  %180 = bitcast %"struct.std::__1::__hash_node_base.301"* %179 to %"class.std::__1::unique_ptr.23"**
  %181 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %180, align 8
  %182 = icmp eq %"class.std::__1::unique_ptr.23"* %181, %145
  br i1 %182, label %187, label %183

183:                                              ; preds = %178, %175
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %163, i64 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %184, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base.301"* %185, null
  br i1 %186, label %203, label %162

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %163, i64 3
  %189 = bitcast %"struct.std::__1::__hash_node_base.301"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %44, align 8
  %191 = lshr i64 %190, 32
  %192 = shl i64 %190, 3
  %193 = and i64 %192, 4294967288
  %194 = add nuw nsw i64 %193, 8
  %195 = xor i64 %194, %191
  %196 = mul i64 %195, -7070675565921424023
  %197 = lshr i64 %196, 47
  %198 = xor i64 %196, %191
  %199 = xor i64 %198, %197
  %200 = mul i64 %199, -7070675565921424023
  %201 = lshr i64 %200, 47
  %202 = xor i64 %201, %200
  br i1 %122, label %203, label %141

203:                                              ; preds = %158, %187, %152, %175, %183, %118
  %204 = phi i64 [ %127, %118 ], [ %142, %183 ], [ %142, %175 ], [ %142, %152 ], [ %190, %187 ], [ %142, %158 ]
  %205 = inttoptr i64 %204 to %"class.std::__1::unique_ptr.23"*
  %206 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %71, i64 0, i32 1, i32 0, i32 0, i64 16
  %207 = bitcast i8* %206 to %class.SkTArray*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %207, i32 1, i32 1) #15
  %208 = bitcast i8* %206 to %"class.std::__1::unique_ptr.23"**
  %209 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %208, align 8
  %210 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %71, i64 0, i32 1, i32 0, i32 0, i64 24
  %211 = bitcast i8* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = lshr i64 %212, 1
  %214 = and i64 %213, 2147483647
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %209, i64 %214
  %216 = add i64 %212, 2
  %217 = and i64 %216, 4294967294
  %218 = and i64 %212, -4294967295
  %219 = or i64 %217, %218
  store i64 %219, i64* %211, align 8
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %205, i64 0, i32 0, i32 0, i32 0
  %221 = inttoptr i64 %204 to i64*
  %222 = load i64, i64* %221, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %220, align 8
  %223 = bitcast %"class.std::__1::unique_ptr.23"* %215 to i64*
  store i64 %222, i64* %223, align 8
  %224 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %10, align 8
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %224, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %225, align 8
  store %"class.SkSL::Statement"* %78, %"class.SkSL::Statement"** %225, align 8
  %227 = icmp eq %"class.SkSL::Statement"* %226, null
  br i1 %227, label %233, label %228

228:                                              ; preds = %203
  %229 = bitcast %"class.SkSL::Statement"* %226 to void (%"class.SkSL::Statement"*)***
  %230 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %230, i64 1
  %232 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %231, align 8
  call void %232(%"class.SkSL::Statement"* nonnull %226) #15
  br label %233

233:                                              ; preds = %203, %228
  %234 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %53, align 8
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %234, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %235, align 8
  call void @_ZN4SkSL12ProgramUsage7replaceEPKNS_10ExpressionES3_(%"class.SkSL::ProgramUsage"* %4, %"class.SkSL::Expression"* %236, %"class.SkSL::Expression"* %72) #15
  %237 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %53, align 8
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %238, align 8
  %240 = bitcast %"class.std::__1::unique_ptr"* %237 to i64*
  store i64 %73, i64* %240, align 8
  %241 = icmp eq %"class.SkSL::Expression"* %239, null
  br i1 %241, label %247, label %242

242:                                              ; preds = %233
  %243 = bitcast %"class.SkSL::Expression"* %239 to void (%"class.SkSL::Expression"*)***
  %244 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %243, align 8
  %245 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %244, i64 1
  %246 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %245, align 8
  call void %246(%"class.SkSL::Expression"* nonnull %239) #15
  br label %247

247:                                              ; preds = %242, %233
  %248 = load %"class.SkSL::Block"**, %"class.SkSL::Block"*** %45, align 8
  %249 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %248, align 8
  %250 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %249, i64 0, i32 1, i32 0, i32 0, i64 16
  %251 = bitcast i8* %250 to %"class.std::__1::unique_ptr.23"**
  %252 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %251, align 8
  %253 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %249, i64 0, i32 1, i32 0, i32 0, i64 24
  %254 = bitcast i8* %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = lshr i64 %255, 1
  %257 = and i64 %256, 2147483647
  %258 = add nsw i64 %257, -1
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %252, i64 %258
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  store %"class.std::__1::unique_ptr.23"** %10, %"class.std::__1::unique_ptr.23"*** %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %49) #15
  %260 = call { %"struct.std::__1::__hash_node_base.301"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS8_JRKNS_21piecewise_construct_tENS_5tupleIJRKS8_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.297"* nonnull %46, %"class.std::__1::unique_ptr.23"** nonnull dereferenceable(8) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.439"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.393"* nonnull dereferenceable(1) %7) #15
  %261 = extractvalue { %"struct.std::__1::__hash_node_base.301"*, i8 } %260, 0
  %262 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %261, i64 3
  %263 = bitcast %"struct.std::__1::__hash_node_base.301"* %262 to %"class.std::__1::unique_ptr.23"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %49) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  store %"class.std::__1::unique_ptr.23"* %259, %"class.std::__1::unique_ptr.23"** %263, align 8
  %264 = load i32, i32* %19, align 4
  %265 = icmp sgt i32 %264, 2499
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #15
  %266 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %52, i64 1
  %267 = icmp eq %"struct.SkSL::InlineCandidate"* %266, %40
  %268 = or i1 %265, %267
  br i1 %268, label %269, label %50

269:                                              ; preds = %65, %247
  %270 = phi i8 [ 1, %247 ], [ %51, %65 ]
  %271 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %34, align 8
  %272 = and i8 %270, 1
  %273 = icmp ne i8 %272, 0
  %274 = icmp eq %"struct.std::__1::__hash_node_base.301"* %271, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269, %275
  %276 = phi %"struct.std::__1::__hash_node_base.301"* [ %278, %275 ], [ %271, %269 ]
  %277 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %276, i64 0, i32 0
  %278 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %277, align 8
  %279 = bitcast %"struct.std::__1::__hash_node_base.301"* %276 to i8*
  call void @_ZdlPv(i8* %279) #17
  %280 = icmp eq %"struct.std::__1::__hash_node_base.301"* %278, null
  br i1 %280, label %281, label %275

281:                                              ; preds = %275, %30, %269
  %282 = phi i1 [ %273, %269 ], [ false, %30 ], [ %273, %275 ]
  %283 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %32, align 8
  store %"struct.std::__1::__hash_node_base.301"** null, %"struct.std::__1::__hash_node_base.301"*** %32, align 8
  %284 = icmp eq %"struct.std::__1::__hash_node_base.301"** %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %281
  %286 = bitcast %"struct.std::__1::__hash_node_base.301"** %283 to i8*
  call void @_ZdlPv(i8* %286) #17
  br label %287

287:                                              ; preds = %281, %285
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #15
  %288 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %24, align 8
  %289 = icmp eq %"struct.SkSL::InlineCandidate"* %288, null
  br i1 %289, label %317, label %290

290:                                              ; preds = %287
  %291 = bitcast %"struct.SkSL::InlineCandidate"* %288 to i8*
  %292 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %25, align 8
  %293 = icmp eq %"struct.SkSL::InlineCandidate"* %292, %288
  br i1 %293, label %315, label %294

294:                                              ; preds = %290, %310
  %295 = phi %"struct.SkSL::InlineCandidate"* [ %296, %310 ], [ %292, %290 ]
  %296 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %295, i64 -1
  %297 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %295, i64 -1, i32 0, i32 1
  %298 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %297, align 8
  %299 = icmp eq %"class.std::__1::__shared_weak_count"* %298, null
  br i1 %299, label %310, label %300

300:                                              ; preds = %294
  %301 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %298, i64 0, i32 0, i32 1
  %302 = atomicrmw add i64* %301, i64 -1 acq_rel
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %304, label %310

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %298, i64 0, i32 0
  %306 = bitcast %"class.std::__1::__shared_weak_count"* %298 to void (%"class.std::__1::__shared_count"*)***
  %307 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %307, i64 2
  %309 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %308, align 8
  call void %309(%"class.std::__1::__shared_count"* %305) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %298) #15
  br label %310

310:                                              ; preds = %304, %300, %294
  %311 = icmp eq %"struct.SkSL::InlineCandidate"* %296, %288
  br i1 %311, label %312, label %294

312:                                              ; preds = %310
  %313 = bitcast %"struct.SkSL::InlineCandidateList"* %8 to i8**
  %314 = load i8*, i8** %313, align 8
  br label %315

315:                                              ; preds = %312, %290
  %316 = phi i8* [ %314, %312 ], [ %291, %290 ]
  store %"struct.SkSL::InlineCandidate"* %288, %"struct.SkSL::InlineCandidate"** %25, align 8
  call void @_ZdlPv(i8* %316) #17
  br label %317

317:                                              ; preds = %287, %315
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  br label %318

318:                                              ; preds = %18, %5, %317
  %319 = phi i1 [ %282, %317 ], [ false, %5 ], [ false, %18 ]
  %320 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %320, label %331, label %321

321:                                              ; preds = %318
  %322 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %323 = atomicrmw add i64* %322, i64 -1 acq_rel
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %331

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %327 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %328 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %328, i64 2
  %330 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %329, align 8
  call void %330(%"class.std::__1::__shared_count"* %326) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #15
  br label %331

331:                                              ; preds = %318, %321, %325
  ret i1 %319
}

declare void @_ZN4SkSL12ProgramUsage3addEPKNS_9StatementE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::Statement"*) local_unnamed_addr #4

declare void @_ZN4SkSL12ProgramUsage7replaceEPKNS_10ExpressionES3_(%"class.SkSL::ProgramUsage"*, %"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEEN30CountReturnsAtEndOfControlFlowD0Ev(%class.CountReturnsAtEndOfControlFlow*) unnamed_addr #5 align 2 {
  %2 = bitcast %class.CountReturnsAtEndOfControlFlow* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEEN30CountReturnsAtEndOfControlFlow15visitExpressionERKNS_10ExpressionE(%class.CountReturnsAtEndOfControlFlow* nocapture readnone, %"class.SkSL::Expression"* nocapture readnone dereferenceable(24)) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL12_GLOBAL__N_136count_returns_at_end_of_control_flowERKNS_18FunctionDefinitionEEN30CountReturnsAtEndOfControlFlow14visitStatementERKNS_9StatementE(%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %28 [
    i32 16, label %5
    i32 27, label %31
    i32 20, label %31
    i32 22, label %31
    i32 26, label %24
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2, i32 0, i32 1
  %7 = bitcast i32* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 1
  %10 = and i64 %9, 2147483647
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2
  %14 = bitcast %"class.SkSL::Statement"* %13 to %"class.std::__1::unique_ptr.23"**
  %15 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %14, align 8
  %16 = add nsw i64 %10, -1
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %15, i64 %16, i32 0, i32 0, i32 0
  %18 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %17, align 8
  %19 = bitcast %class.CountReturnsAtEndOfControlFlow* %0 to i1 (%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Statement"*)***
  %20 = load i1 (%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Statement"*)**, i1 (%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Statement"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Statement"*)*, i1 (%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Statement"*)** %20, i64 3
  %22 = load i1 (%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Statement"*)*, i1 (%class.CountReturnsAtEndOfControlFlow*, %"class.SkSL::Statement"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%class.CountReturnsAtEndOfControlFlow* %0, %"class.SkSL::Statement"* dereferenceable(16) %18) #15
  br label %31

24:                                               ; preds = %2
  %25 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  br label %28

28:                                               ; preds = %2, %24
  %29 = getelementptr inbounds %class.CountReturnsAtEndOfControlFlow, %class.CountReturnsAtEndOfControlFlow* %0, i64 0, i32 0, i32 0
  %30 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor"* %29, %"class.SkSL::Statement"* dereferenceable(16) %1) #15
  br label %31

31:                                               ; preds = %2, %2, %2, %12, %5, %28
  %32 = phi i1 [ %30, %28 ], [ false, %5 ], [ %23, %12 ], [ false, %2 ], [ false, %2 ], [ false, %2 ]
  ret i1 %32
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"*, %"class.SkSL::ProgramElement"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramVisitor", %"class.SkSL::ProgramVisitor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  %6 = bitcast %"class.SkSL::ProgramVisitor"* %0 to i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)***
  %7 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)**, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)** %7, i64 2
  %9 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.SkSL::TProgramVisitor"* %3, %"class.SkSL::Expression"* dereferenceable(24) %5) #15
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE(%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.23"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramVisitor", %"class.SkSL::ProgramVisitor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %4, align 8
  %6 = bitcast %"class.SkSL::ProgramVisitor"* %0 to i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)***
  %7 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)**, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)** %7, i64 3
  %9 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.SkSL::TProgramVisitor"* %3, %"class.SkSL::Statement"* dereferenceable(16) %5) #15
  ret i1 %10
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE15visitExpressionERKNS_10ExpressionE(%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #4

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4SkSL12_GLOBAL__N_121CountReturnsWithLimitD0Ev(%"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4SkSL12_GLOBAL__N_121CountReturnsWithLimit15visitExpressionERKNS_10ExpressionE(%"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* nocapture readnone, %"class.SkSL::Expression"* nocapture readnone dereferenceable(24)) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4SkSL12_GLOBAL__N_121CountReturnsWithLimit14visitStatementERKNS_9StatementE(%"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %49 [
    i32 26, label %5
    i32 29, label %21
    i32 16, label %30
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %10, align 4
  %13 = icmp slt i32 %11, %12
  %14 = select i1 %13, i32 %12, i32 %11
  store i32 %14, i32* %9, align 4
  %15 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %8, %16
  br i1 %17, label %18, label %52

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 0, i32 0
  %20 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor"* %19, %"class.SkSL::Statement"* dereferenceable(16) %1) #15
  br label %52

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 5
  store i8 1, i8* %26, align 8
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 0, i32 0
  %29 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor"* %28, %"class.SkSL::Statement"* dereferenceable(16) %1) #15
  br label %52

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 4
  %32 = bitcast %"class.SkSL::Statement"* %31 to i8*
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %36, %34
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 0, i32 0
  %39 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor"* %38, %"class.SkSL::Statement"* dereferenceable(16) %1) #15
  %40 = load i32, i32* %35, align 4
  %41 = sub nsw i32 %40, %34
  store i32 %41, i32* %35, align 4
  %42 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %41, 2
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %52

47:                                               ; preds = %30
  %48 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 5
  store i8 0, i8* %48, align 8
  br label %52

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit", %"class.SkSL::(anonymous namespace)::CountReturnsWithLimit"* %0, i64 0, i32 0, i32 0
  %51 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor"* %50, %"class.SkSL::Statement"* dereferenceable(16) %1) #15
  br label %52

52:                                               ; preds = %30, %47, %18, %5, %49, %27
  %53 = phi i1 [ %51, %49 ], [ %29, %27 ], [ true, %5 ], [ %20, %18 ], [ %39, %47 ], [ %39, %30 ]
  ret i1 %53
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.143, %class.SkTArray.143* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #15
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.143, %class.SkTArray.143* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #15
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.143* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #15
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

declare void @_ZN4SkSL8Analysis13UpdateRefKindEPNS_10ExpressionENS_15VariableRefKindE(%"class.SkSL::Expression"*, i8 signext) local_unnamed_addr #4

declare void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"*, i32, %"class.SkSL::Variable"*, i8 signext) unnamed_addr #4

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #15
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage"* %2 to %"class.SkSL::SymbolTable"*
  tail call void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"* %3) #15
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  %4 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #17
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__forward_list_node"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7, %24
  %12 = phi %"struct.std::__1::__forward_list_node"* [ %15, %24 ], [ %9, %7 ]
  %13 = bitcast %"struct.std::__1::__forward_list_node"* %12 to i8*
  %14 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 1
  %17 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #17
  br label %24

24:                                               ; preds = %21, %11
  tail call void @_ZdlPv(i8* %13) #17
  %25 = icmp eq %"struct.std::__1::__forward_list_node"* %15, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %24, %7
  store %"struct.std::__1::__forward_list_node"* null, %"struct.std::__1::__forward_list_node"** %8, align 8
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.98"*, %"class.std::__1::unique_ptr.98"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.98"* %29, null
  br i1 %30, label %54, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.std::__1::unique_ptr.98"* %29 to i8*
  %33 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.98"*, %"class.std::__1::unique_ptr.98"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.98"* %34, %29
  br i1 %35, label %52, label %36

36:                                               ; preds = %31, %47
  %37 = phi %"class.std::__1::unique_ptr.98"* [ %38, %47 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.98"* %37, i64 -1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.98"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %39, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %39, align 8
  %41 = icmp eq %"class.SkSL::IRNode"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.SkSL::IRNode"* %40 to void (%"class.SkSL::IRNode"*)***
  %44 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %44, i64 1
  %46 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %45, align 8
  tail call void %46(%"class.SkSL::IRNode"* nonnull %40) #15
  br label %47

47:                                               ; preds = %42, %36
  %48 = icmp eq %"class.std::__1::unique_ptr.98"* %38, %29
  br i1 %48, label %49, label %36

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.96"* %27 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %31
  %53 = phi i8* [ %51, %49 ], [ %32, %31 ]
  store %"class.std::__1::unique_ptr.98"* %29, %"class.std::__1::unique_ptr.98"** %33, align 8
  tail call void @_ZdlPv(i8* %53) #17
  br label %54

54:                                               ; preds = %26, %52
  %55 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.90"* %57, null
  br i1 %58, label %82, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.std::__1::unique_ptr.90"* %57 to i8*
  %61 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.90"* %62, %57
  br i1 %63, label %80, label %64

64:                                               ; preds = %59, %75
  %65 = phi %"class.std::__1::unique_ptr.90"* [ %66, %75 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %65, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %67, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %67, align 8
  %69 = icmp eq %"class.SkSL::Symbol"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.SkSL::Symbol"* %68 to void (%"class.SkSL::Symbol"*)***
  %72 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %72, i64 1
  %74 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %73, align 8
  tail call void %74(%"class.SkSL::Symbol"* nonnull %68) #15
  br label %75

75:                                               ; preds = %70, %64
  %76 = icmp eq %"class.std::__1::unique_ptr.90"* %66, %57
  br i1 %76, label %77, label %64

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.88"* %55 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %59
  %81 = phi i8* [ %79, %77 ], [ %60, %59 ]
  store %"class.std::__1::unique_ptr.90"* %57, %"class.std::__1::unique_ptr.90"** %61, align 8
  tail call void @_ZdlPv(i8* %81) #17
  br label %82

82:                                               ; preds = %54, %80
  %83 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 0, i32 1
  %84 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %83, align 8
  %85 = icmp eq %"class.std::__1::__shared_weak_count"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0, i32 1
  %88 = atomicrmw add i64* %87, i64 -1 acq_rel
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0
  %92 = bitcast %"class.std::__1::__shared_weak_count"* %84 to void (%"class.std::__1::__shared_count"*)***
  %93 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %93, i64 2
  %95 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %94, align 8
  tail call void %95(%"class.std::__1::__shared_count"* %91) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %84) #15
  br label %96

96:                                               ; preds = %82, %86, %90
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3NopD0Ev(%"class.SkSL::Nop"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.SkSL::Nop"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL3Nop11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Nop"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 1, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  store i8 59, i8* %5, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL3Nop7isEmptyEv(%"class.SkSL::Nop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL3Nop5cloneEv(%"class.SkSL::Nop"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #15
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 12
  %6 = bitcast i8* %5 to i32*
  store i32 25, i32* %6, align 4
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL3NopE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = bitcast i8* %2 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL9Statement7isEmptyEv(%"class.SkSL::Statement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.67"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.63"*, %"struct.SkSL::Modifiers"* dereferenceable(80), %"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 8
  %11 = xor i64 %10, %6
  %12 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = shl nsw i64 %14, 16
  %16 = xor i64 %11, %15
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %74, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #15, !range !18
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %16, %24
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %23, %26, %28
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.67"* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.67"* %39, null
  br i1 %40, label %74, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  %43 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  br label %44

44:                                               ; preds = %41, %70
  %45 = phi %"struct.std::__1::__hash_node_base.67"* [ %39, %41 ], [ %72, %70 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.67"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %16
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %22, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %42
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %18
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %18
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %31
  br i1 %59, label %60, label %74

60:                                               ; preds = %44, %57
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.67"* %61 to %"struct.SkSL::Layout"*
  %63 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %62, %"struct.SkSL::Layout"* dereferenceable(72) %43) #15
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %45, i64 11
  %66 = bitcast %"struct.std::__1::__hash_node_base.67"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* %4, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %160, label %70

70:                                               ; preds = %64, %60
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %45, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.67"* %72, null
  br i1 %73, label %74, label %44

74:                                               ; preds = %57, %70, %37, %30, %3
  %75 = phi i64 [ %31, %30 ], [ -6148914691236517206, %3 ], [ %31, %37 ], [ %31, %70 ], [ %31, %57 ]
  %76 = tail call i8* @_Znwm(i64 96) #17, !noalias !22
  %77 = getelementptr inbounds i8, i8* %76, i64 16
  %78 = bitcast %"struct.SkSL::Modifiers"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 80, i1 false) #15, !noalias !22
  %79 = getelementptr inbounds i8, i8* %76, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %16, i64* %80, align 8, !noalias !22
  %81 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base.67"**
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %81, align 8, !noalias !22
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %18 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %19, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %74
  %93 = shl i64 %18, 1
  %94 = icmp ult i64 %18, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %18) #15, !range !18
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #15
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.63"* %0, i64 %104)
  %105 = load i64, i64* %17, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #15, !range !18
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %16
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %16, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %16, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %74
  %116 = phi i64 [ %18, %74 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %75, %74 ], [ %110, %108 ], [ %16, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.67"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.67"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %76 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.67"* %124 to i8**
  store i8* %76, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.67"* %124, %"struct.std::__1::__hash_node_base.67"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.67"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.67"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #15, !range !18
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.67"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.67"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %76 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.67"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %76, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base.67"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.67"* [ %157, %156 ], [ %45, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.67"*, i8 } undef, %"struct.std::__1::__hash_node_base.67"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.67"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.67"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.63"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !18
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.63"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !18
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !18
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.63"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"*, %"struct.SkSL::Layout"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %81

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %81

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %81

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %81

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %81

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %81

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %81

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %81

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %81

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %81

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12
  %70 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %69, i8* %71, i64 %73) #15
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 13
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br label %81

81:                                               ; preds = %75, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  %82 = phi i1 [ false, %68 ], [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %80, %75 ]
  ret i1 %82
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #4

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.63"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %151, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.63"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.67"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.67"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.69", %"class.std::__1::__bucket_list_deallocator.69"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !25

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.67"* %38, null
  br i1 %39, label %159, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.67"* null, %"struct.std::__1::__hash_node_base.67"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.67"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !18
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.67"* %36, %"struct.std::__1::__hash_node_base.67"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.67"* %75, null
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %145
  %80 = phi %"struct.std::__1::__hash_node_base.67"* [ %75, %77 ], [ %149, %145 ]
  %81 = phi i64 [ %71, %77 ], [ %147, %145 ]
  %82 = phi %"struct.std::__1::__hash_node_base.67"* [ %38, %77 ], [ %146, %145 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.67"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %145, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.67"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %80, i64 11
  %102 = bitcast %"struct.std::__1::__hash_node_base.67"* %101 to i32*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %80, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.67"* %104, null
  br i1 %105, label %131, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %80, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.67"* %107 to %"struct.SkSL::Layout"*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %104, i64 2
  %110 = bitcast %"struct.std::__1::__hash_node_base.67"* %109 to %"struct.SkSL::Layout"*
  %111 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %110) #15
  br i1 %111, label %117, label %131

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.67"* %82, %"struct.std::__1::__hash_node_base.67"** %97, align 8
  br label %145

113:                                              ; preds = %126
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %129, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base.67"* %114 to %"struct.SkSL::Layout"*
  %116 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %115) #15
  br i1 %116, label %117, label %131

117:                                              ; preds = %106, %113
  %118 = phi %"struct.std::__1::__hash_node_base.67"* [ %127, %113 ], [ %80, %106 ]
  %119 = phi %"struct.std::__1::__hash_node_base.67"** [ %128, %113 ], [ %103, %106 ]
  %120 = phi %"struct.std::__1::__hash_node_base.67"* [ %129, %113 ], [ %104, %106 ]
  %121 = load i32, i32* %102, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %120, i64 11
  %123 = bitcast %"struct.std::__1::__hash_node_base.67"* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %121, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %117
  %127 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %119, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %127, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.67"* %129, null
  br i1 %130, label %131, label %113

131:                                              ; preds = %113, %126, %117, %106, %100
  %132 = phi %"struct.std::__1::__hash_node_base.67"* [ %80, %100 ], [ %80, %106 ], [ %118, %117 ], [ %127, %126 ], [ %127, %113 ]
  %133 = bitcast %"struct.std::__1::__hash_node_base.67"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base.67"* %82 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %136, i64 %93
  %138 = bitcast %"struct.std::__1::__hash_node_base.67"** %137 to i64**
  %139 = load i64*, i64** %138, align 8
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %133, align 8
  %141 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %141, i64 %93
  %143 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %143, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.67"* %80, %"struct.std::__1::__hash_node_base.67"** %144, align 8
  br label %145

145:                                              ; preds = %92, %131, %112
  %146 = phi %"struct.std::__1::__hash_node_base.67"* [ %80, %112 ], [ %82, %131 ], [ %80, %92 ]
  %147 = phi i64 [ %93, %112 ], [ %81, %131 ], [ %81, %92 ]
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.67", %"struct.std::__1::__hash_node_base.67"* %146, i64 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base.67"*, %"struct.std::__1::__hash_node_base.67"** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base.67"* %149, null
  br i1 %150, label %159, label %79

151:                                              ; preds = %2
  %152 = getelementptr inbounds %"class.std::__1::__hash_table.63", %"class.std::__1::__hash_table.63"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base.67"**, %"struct.std::__1::__hash_node_base.67"*** %152, align 8
  store %"struct.std::__1::__hash_node_base.67"** null, %"struct.std::__1::__hash_node_base.67"*** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base.67"** %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = bitcast %"struct.std::__1::__hash_node_base.67"** %153 to i8*
  tail call void @_ZdlPv(i8* %156) #17
  br label %157

157:                                              ; preds = %151, %155
  %158 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.69", %"class.std::__1::__bucket_list_deallocator.69"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %158, align 8
  br label %159

159:                                              ; preds = %145, %70, %35, %157
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12InlineMarkerD0Ev(%"class.SkSL::InlineMarker"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.SkSL::InlineMarker"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL12InlineMarker11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::InlineMarker"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 12, i8* %9, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i64 12, i1 false) #15
  %10 = getelementptr inbounds i8, i8* %7, i64 12
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.SkSL::InlineMarker", %"class.SkSL::InlineMarker"* %1, i64 0, i32 1
  %12 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %12, i64 0, i32 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %12, i64 0, i32 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* %14, i64 %16) #15
  %17 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %18 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  store i8 3, i8* %19, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3, i1 false) #15
  %20 = getelementptr inbounds i8, i8* %17, i64 3
  store i8 0, i8* %20, align 1
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #15
  %21 = load i8, i8* %19, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #17
  br label %26

26:                                               ; preds = %2, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  %27 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #17
  br label %34

34:                                               ; preds = %26, %31
  %35 = load i8, i8* %9, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #17
  br label %40

40:                                               ; preds = %34, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL12InlineMarker7isEmptyEv(%"class.SkSL::InlineMarker"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL12InlineMarker5cloneEv(%"class.SkSL::InlineMarker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::InlineMarker", %"class.SkSL::InlineMarker"* %0, i64 0, i32 1
  %3 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #15
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 24, i32* %9, align 4
  %10 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL12InlineMarkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to i64*
  store i64 %4, i64* %12, align 8
  %13 = bitcast i8* %5 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %13
}

declare void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIbED0Ev(%"class.SkSL::Literal.195"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.195"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIbE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.195"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.195", %"class.SkSL::Literal.195"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)
  %7 = select i1 %5, i64 5, i64 4
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #15
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv(%"class.SkSL::Literal.195"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.195"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 31
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.195", %"class.SkSL::Literal.195"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %9, %13
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i32 [ %15, %6 ], [ -1, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression19isConstantOrUniformEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to i1 (%"class.SkSL::Expression"*)***
  %3 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %3, i64 4
  %5 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.SkSL::Expression"* %0) #15
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.195"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #15
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #15
  ret { i64, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi(%"class.SkSL::Literal.195"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.195", %"class.SkSL::Literal.195"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE5cloneEv(%"class.SkSL::Literal.195"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.195", %"class.SkSL::Literal.195"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.195", %"class.SkSL::Literal.195"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.SkSL::Literal.195", %"class.SkSL::Literal.195"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #15
  %9 = load i32, i32* %2, align 4
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 31, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 %4, i8* %17, align 8
  %18 = bitcast i8* %8 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression21isCompileTimeConstantEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL10Expression15compareConstantERKS0_(%"class.SkSL::Expression"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL10Expression24getConstantSubexpressionEi(%"class.SkSL::Expression"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.SkSL::Expression"* null
}

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev(%"class.SkSL::TProgramVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEEN21ContainsRecursiveCallD0Ev(%class.ContainsRecursiveCall*) unnamed_addr #5 align 2 {
  %2 = bitcast %class.ContainsRecursiveCall* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEEN21ContainsRecursiveCall15visitExpressionERKNS_10ExpressionE(%class.ContainsRecursiveCall*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 47
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %8 = bitcast %"class.SkSL::Expression"* %7 to %"class.SkSL::FunctionDeclaration"**
  %9 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %8, align 8
  %10 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %0, i64 0, i32 1
  %11 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK4SkSL19FunctionDeclaration7matchesERKS0_(%"class.SkSL::FunctionDeclaration"* %9, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %11) #15
  br i1 %12, label %16, label %13

13:                                               ; preds = %6, %2
  %14 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %0, i64 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE15visitExpressionERKNS_10ExpressionE(%"class.SkSL::TProgramVisitor"* %14, %"class.SkSL::Expression"* dereferenceable(24) %1) #15
  br label %16

16:                                               ; preds = %6, %13
  %17 = phi i1 [ %15, %13 ], [ true, %6 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL12_GLOBAL__N_123contains_recursive_callERKNS_19FunctionDeclarationEEN21ContainsRecursiveCall14visitStatementERKNS_9StatementE(%class.ContainsRecursiveCall*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 24
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %8 = bitcast %"class.SkSL::Statement"* %7 to %"class.SkSL::FunctionDeclaration"**
  %9 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %8, align 8
  %10 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %0, i64 0, i32 1
  %11 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK4SkSL19FunctionDeclaration7matchesERKS0_(%"class.SkSL::FunctionDeclaration"* %9, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %11) #15
  br i1 %12, label %16, label %13

13:                                               ; preds = %6, %2
  %14 = getelementptr inbounds %class.ContainsRecursiveCall, %class.ContainsRecursiveCall* %0, i64 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor"* %14, %"class.SkSL::Statement"* dereferenceable(16) %1) #15
  br label %16

16:                                               ; preds = %6, %13
  %17 = phi i1 [ %15, %13 ], [ true, %6 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK4SkSL19FunctionDeclaration7matchesERKS0_(%"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.278"*, %"class.std::__1::shared_ptr"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::shared_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.278"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.278"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::shared_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::shared_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::shared_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::shared_ptr"* %38 to i64
  %40 = bitcast %"class.std::__1::shared_ptr"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::shared_ptr"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %1, i64 0, i32 1
  %45 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %44, align 8
  store %"class.std::__1::__shared_weak_count"* %45, %"class.std::__1::__shared_weak_count"** %43, align 8
  %46 = icmp eq %"class.std::__1::__shared_weak_count"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %45, i64 0, i32 0, i32 1
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  br label %50

50:                                               ; preds = %34, %47
  %51 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %37, i64 1
  %52 = ptrtoint %"class.std::__1::shared_ptr"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 0
  %54 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %53, align 8
  %55 = ptrtoint %"class.std::__1::shared_ptr"* %54 to i64
  %56 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  %57 = icmp eq %"class.std::__1::shared_ptr"* %56, %54
  br i1 %57, label %140, label %58

58:                                               ; preds = %50
  %59 = getelementptr %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %56, i64 -1, i32 0
  %60 = ptrtoint %"class.SkSL::SymbolTable"** %59 to i64
  %61 = sub i64 %60, %55
  %62 = lshr i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %83, label %66

66:                                               ; preds = %58, %66
  %67 = phi %"class.std::__1::shared_ptr"* [ %70, %66 ], [ %37, %58 ]
  %68 = phi %"class.std::__1::shared_ptr"* [ %71, %66 ], [ %56, %58 ]
  %69 = phi i64 [ %81, %66 ], [ %64, %58 ]
  %70 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %68, i64 -1
  %72 = bitcast %"class.std::__1::shared_ptr"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::shared_ptr"* %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %67, i64 -1, i32 1
  %76 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %68, i64 -1, i32 1
  %77 = bitcast %"class.std::__1::__shared_weak_count"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::__shared_weak_count"** %75 to i64*
  store i64 %78, i64* %79, align 8
  %80 = bitcast %"class.std::__1::shared_ptr"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #15
  %81 = add i64 %69, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %66, !llvm.loop !27

83:                                               ; preds = %66, %58
  %84 = phi %"class.std::__1::shared_ptr"* [ undef, %58 ], [ %70, %66 ]
  %85 = phi %"class.std::__1::shared_ptr"* [ %37, %58 ], [ %70, %66 ]
  %86 = phi %"class.std::__1::shared_ptr"* [ %56, %58 ], [ %71, %66 ]
  %87 = icmp ult i64 %61, 48
  br i1 %87, label %136, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::shared_ptr"* [ %124, %88 ], [ %85, %83 ]
  %90 = phi %"class.std::__1::shared_ptr"* [ %125, %88 ], [ %86, %83 ]
  %91 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %89, i64 -1
  %92 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %90, i64 -1
  %93 = bitcast %"class.std::__1::shared_ptr"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::shared_ptr"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %89, i64 -1, i32 1
  %97 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %90, i64 -1, i32 1
  %98 = bitcast %"class.std::__1::__shared_weak_count"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::__shared_weak_count"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = bitcast %"class.std::__1::shared_ptr"* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #15
  %102 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %89, i64 -2
  %103 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %90, i64 -2
  %104 = bitcast %"class.std::__1::shared_ptr"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::shared_ptr"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %89, i64 -2, i32 1
  %108 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %90, i64 -2, i32 1
  %109 = bitcast %"class.std::__1::__shared_weak_count"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.std::__1::__shared_weak_count"** %107 to i64*
  store i64 %110, i64* %111, align 8
  %112 = bitcast %"class.std::__1::shared_ptr"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #15
  %113 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %89, i64 -3
  %114 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %90, i64 -3
  %115 = bitcast %"class.std::__1::shared_ptr"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.std::__1::shared_ptr"* %113 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %89, i64 -3, i32 1
  %119 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %90, i64 -3, i32 1
  %120 = bitcast %"class.std::__1::__shared_weak_count"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::__shared_weak_count"** %118 to i64*
  store i64 %121, i64* %122, align 8
  %123 = bitcast %"class.std::__1::shared_ptr"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #15
  %124 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %89, i64 -4
  %125 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %90, i64 -4
  %126 = bitcast %"class.std::__1::shared_ptr"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::shared_ptr"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %89, i64 -4, i32 1
  %130 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %90, i64 -4, i32 1
  %131 = bitcast %"class.std::__1::__shared_weak_count"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.std::__1::__shared_weak_count"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = bitcast %"class.std::__1::shared_ptr"* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #15
  %135 = icmp eq %"class.std::__1::shared_ptr"* %125, %54
  br i1 %135, label %136, label %88

136:                                              ; preds = %88, %83
  %137 = phi %"class.std::__1::shared_ptr"* [ %84, %83 ], [ %124, %88 ]
  %138 = load i64, i64* %6, align 8
  %139 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  br label %140

140:                                              ; preds = %50, %136
  %141 = phi %"class.std::__1::shared_ptr"* [ %139, %136 ], [ %54, %50 ]
  %142 = phi %"class.std::__1::shared_ptr"* [ %137, %136 ], [ %37, %50 ]
  %143 = phi i64 [ %138, %136 ], [ %55, %50 ]
  %144 = ptrtoint %"class.std::__1::shared_ptr"* %142 to i64
  store i64 %144, i64* %6, align 8
  store i64 %52, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %145 = inttoptr i64 %143 to %"class.std::__1::shared_ptr"*
  %146 = icmp eq %"class.std::__1::shared_ptr"* %141, %145
  br i1 %146, label %165, label %147

147:                                              ; preds = %140, %163
  %148 = phi %"class.std::__1::shared_ptr"* [ %149, %163 ], [ %141, %140 ]
  %149 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %148, i64 -1
  %150 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %148, i64 -1, i32 1
  %151 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %150, align 8
  %152 = icmp eq %"class.std::__1::__shared_weak_count"* %151, null
  br i1 %152, label %163, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %151, i64 0, i32 0, i32 1
  %155 = atomicrmw add i64* %154, i64 -1 acq_rel
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %163

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %151, i64 0, i32 0
  %159 = bitcast %"class.std::__1::__shared_weak_count"* %151 to void (%"class.std::__1::__shared_count"*)***
  %160 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %160, i64 2
  %162 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %161, align 8
  tail call void %162(%"class.std::__1::__shared_count"* %158) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %151) #15
  br label %163

163:                                              ; preds = %157, %153, %147
  %164 = icmp eq %"class.std::__1::shared_ptr"* %149, %145
  br i1 %164, label %165, label %147

165:                                              ; preds = %163, %140
  %166 = icmp eq i64 %143, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = inttoptr i64 %143 to i8*
  tail call void @_ZdlPv(i8* %168) #17
  br label %169

169:                                              ; preds = %165, %167
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb(%"class.SkSL::InlineCandidateAnalyzer"*, %"class.std::__1::unique_ptr.23"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::shared_ptr", align 8
  %5 = ptrtoint %"class.std::__1::unique_ptr.23"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %6, align 8
  %8 = icmp eq %"class.SkSL::Statement"* %7, null
  br i1 %8, label %321, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.23"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.285"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 1, i32 0, i32 1
  %20 = bitcast %"class.std::__1::shared_ptr"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.278"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 4
  %26 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.23"**
  br i1 %2, label %27, label %87

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.23"**, %"class.std::__1::unique_ptr.23"*** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.23"** %29, %26
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = inttoptr i64 %13 to i64*
  store i64 %5, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %26, i64 1
  %34 = ptrtoint %"class.std::__1::unique_ptr.23"** %33 to i64
  store i64 %34, i64* %12, align 8
  br label %87

35:                                               ; preds = %27
  %36 = ptrtoint %"class.std::__1::unique_ptr.23"** %29 to i64
  %37 = sub i64 %36, %15
  %38 = ashr exact i64 %37, 3
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 2305843009213693951
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::vector.285"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #16
  unreachable

43:                                               ; preds = %35
  %44 = bitcast %"class.std::__1::unique_ptr.23"*** %28 to i64*
  %45 = icmp ult i64 %38, 1152921504606846975
  br i1 %45, label %46, label %54

46:                                               ; preds = %43
  %47 = ashr exact i64 %37, 2
  %48 = icmp ult i64 %47, %39
  %49 = select i1 %48, i64 %39, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #16
  unreachable

54:                                               ; preds = %51, %43
  %55 = phi i64 [ %49, %51 ], [ 2305843009213693951, %43 ]
  %56 = shl i64 %55, 3
  %57 = tail call i8* @_Znwm(i64 %56) #17
  %58 = bitcast i8* %57 to %"class.std::__1::unique_ptr.23"**
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi %"class.std::__1::unique_ptr.23"** [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %61, i64 %38
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %61, i64 %60
  %64 = ptrtoint %"class.std::__1::unique_ptr.23"** %63 to i64
  %65 = bitcast %"class.std::__1::unique_ptr.23"** %62 to i64*
  store i64 %5, i64* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %62, i64 1
  %67 = ptrtoint %"class.std::__1::unique_ptr.23"** %66 to i64
  %68 = getelementptr inbounds %"class.std::__1::vector.285", %"class.std::__1::vector.285"* %10, i64 0, i32 0, i32 0
  %69 = load %"class.std::__1::unique_ptr.23"**, %"class.std::__1::unique_ptr.23"*** %68, align 8
  %70 = load i64, i64* %12, align 8
  %71 = ptrtoint %"class.std::__1::unique_ptr.23"** %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %62, i64 %74
  %76 = ptrtoint %"class.std::__1::unique_ptr.23"** %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %59
  %79 = bitcast %"class.std::__1::unique_ptr.23"** %75 to i8*
  %80 = bitcast %"class.std::__1::unique_ptr.23"** %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %72, i1 false) #15
  %81 = load %"class.std::__1::unique_ptr.23"**, %"class.std::__1::unique_ptr.23"*** %68, align 8
  br label %82

82:                                               ; preds = %78, %59
  %83 = phi %"class.std::__1::unique_ptr.23"** [ %69, %59 ], [ %81, %78 ]
  store i64 %76, i64* %14, align 8
  store i64 %67, i64* %12, align 8
  store i64 %64, i64* %44, align 8
  %84 = icmp eq %"class.std::__1::unique_ptr.23"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.std::__1::unique_ptr.23"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #17
  br label %87

87:                                               ; preds = %85, %82, %31, %9
  %88 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %6, align 8
  %89 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  switch i32 %90, label %273 [
    i32 17, label %274
    i32 18, label %274
    i32 19, label %274
    i32 24, label %274
    i32 25, label %274
    i32 16, label %91
    i32 20, label %175
    i32 21, label %178
    i32 22, label %181
    i32 23, label %212
    i32 26, label %219
    i32 27, label %222
    i32 29, label %270
  ]

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 3
  %93 = bitcast %"class.SkSL::Statement"* %92 to %"class.SkSL::SymbolTable"**
  %94 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %93, align 8
  %95 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 3, i32 0, i32 1
  %96 = bitcast i32* %95 to %"class.std::__1::__shared_weak_count"**
  %97 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %96, align 8
  %98 = icmp eq %"class.std::__1::__shared_weak_count"* %97, null
  br i1 %98, label %99, label %103

99:                                               ; preds = %91
  %100 = icmp eq %"class.SkSL::SymbolTable"* %94, null
  br i1 %100, label %158, label %101

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::shared_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #15
  br label %124

103:                                              ; preds = %91
  %104 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %97, i64 0, i32 0, i32 1
  %105 = atomicrmw add i64* %104, i64 1 monotonic
  %106 = icmp ne %"class.SkSL::SymbolTable"* %94, null
  %107 = atomicrmw add i64* %104, i64 -1 acq_rel
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %115

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %97, i64 0, i32 0
  %111 = bitcast %"class.std::__1::__shared_weak_count"* %97 to void (%"class.std::__1::__shared_count"*)***
  %112 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %112, i64 2
  %114 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %113, align 8
  tail call void %114(%"class.std::__1::__shared_count"* %110) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %97) #15
  br i1 %106, label %116, label %158

115:                                              ; preds = %103
  br i1 %106, label %116, label %158

116:                                              ; preds = %109, %115
  %117 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %96, align 8
  %118 = bitcast %"class.std::__1::shared_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #15
  %119 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %93, align 8
  %120 = icmp eq %"class.std::__1::__shared_weak_count"* %117, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %117, i64 0, i32 0, i32 1
  %123 = atomicrmw add i64* %122, i64 1 monotonic
  br label %124

124:                                              ; preds = %101, %116, %121
  %125 = phi %"class.SkSL::SymbolTable"* [ %94, %101 ], [ %119, %116 ], [ %119, %121 ]
  %126 = phi i8* [ %102, %101 ], [ %118, %116 ], [ %118, %121 ]
  %127 = phi %"class.std::__1::__shared_weak_count"* [ null, %101 ], [ null, %116 ], [ %117, %121 ]
  %128 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %4, i64 0, i32 0
  store %"class.SkSL::SymbolTable"* %125, %"class.SkSL::SymbolTable"** %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %4, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %127, %"class.std::__1::__shared_weak_count"** %129, align 8
  %130 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %19, align 8
  %131 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %132 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %131, align 8
  %133 = icmp ult %"class.std::__1::shared_ptr"* %130, %132
  br i1 %133, label %134, label %143

134:                                              ; preds = %124
  %135 = ptrtoint %"class.SkSL::SymbolTable"* %125 to i64
  %136 = bitcast %"class.std::__1::shared_ptr"* %130 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %130, i64 0, i32 1
  %138 = bitcast %"class.std::__1::__shared_weak_count"** %129 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.std::__1::__shared_weak_count"** %137 to i64*
  store i64 %139, i64* %140, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 16, i1 false) #15
  %141 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %130, i64 1
  %142 = ptrtoint %"class.std::__1::shared_ptr"* %141 to i64
  store i64 %142, i64* %20, align 8
  br label %144

143:                                              ; preds = %124
  call void @_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.278"* %18, %"class.std::__1::shared_ptr"* nonnull dereferenceable(16) %4) #15
  br label %144

144:                                              ; preds = %134, %143
  %145 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %129, align 8
  %146 = icmp eq %"class.std::__1::__shared_weak_count"* %145, null
  br i1 %146, label %157, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %145, i64 0, i32 0, i32 1
  %149 = atomicrmw add i64* %148, i64 -1 acq_rel
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %145, i64 0, i32 0
  %153 = bitcast %"class.std::__1::__shared_weak_count"* %145 to void (%"class.std::__1::__shared_count"*)***
  %154 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %154, i64 2
  %156 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %155, align 8
  call void %156(%"class.std::__1::__shared_count"* %152) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %145) #15
  br label %157

157:                                              ; preds = %144, %147, %151
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #15
  br label %158

158:                                              ; preds = %99, %109, %157, %115
  %159 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 2
  %160 = bitcast %"class.SkSL::Statement"* %159 to %"class.std::__1::unique_ptr.23"**
  %161 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %160, align 8
  %162 = icmp eq %"class.std::__1::unique_ptr.23"* %161, null
  br i1 %162, label %274, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 2, i32 0, i32 1
  %165 = bitcast i32* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = lshr i64 %166, 1
  %168 = and i64 %167, 2147483647
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %161, i64 %168
  %170 = icmp eq i64 %168, 0
  br i1 %170, label %274, label %171

171:                                              ; preds = %163, %171
  %172 = phi %"class.std::__1::unique_ptr.23"* [ %173, %171 ], [ %161, %163 ]
  call void @_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr.23"* %172, i1 zeroext true)
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %172, i64 1
  %174 = icmp eq %"class.std::__1::unique_ptr.23"* %173, %169
  br i1 %174, label %274, label %171

175:                                              ; preds = %87
  %176 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 1
  %177 = bitcast %"class.SkSL::Statement"* %176 to %"class.std::__1::unique_ptr.23"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr.23"* %177, i1 zeroext true)
  br label %274

178:                                              ; preds = %87
  %179 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 1
  %180 = bitcast %"class.SkSL::Statement"* %179 to %"class.std::__1::unique_ptr"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %180)
  br label %274

181:                                              ; preds = %87
  %182 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 1
  %183 = bitcast %"class.SkSL::Statement"* %182 to %"class.std::__1::shared_ptr"*
  %184 = bitcast %"class.SkSL::Statement"* %182 to %"class.SkSL::SymbolTable"**
  %185 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %184, align 8
  %186 = icmp eq %"class.SkSL::SymbolTable"* %185, null
  %187 = ptrtoint %"class.SkSL::SymbolTable"* %185 to i64
  br i1 %186, label %207, label %188

188:                                              ; preds = %181
  %189 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %19, align 8
  %190 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %191 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %190, align 8
  %192 = icmp eq %"class.std::__1::shared_ptr"* %189, %191
  br i1 %192, label %206, label %193

193:                                              ; preds = %188
  %194 = bitcast %"class.std::__1::shared_ptr"* %189 to i64*
  store i64 %187, i64* %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %189, i64 0, i32 1
  %196 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 1, i32 0, i32 1
  %197 = bitcast i32* %196 to %"class.std::__1::__shared_weak_count"**
  %198 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %197, align 8
  store %"class.std::__1::__shared_weak_count"* %198, %"class.std::__1::__shared_weak_count"** %195, align 8
  %199 = icmp eq %"class.std::__1::__shared_weak_count"* %198, null
  br i1 %199, label %203, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %198, i64 0, i32 0, i32 1
  %202 = atomicrmw add i64* %201, i64 1 monotonic
  br label %203

203:                                              ; preds = %200, %193
  %204 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %189, i64 1
  %205 = ptrtoint %"class.std::__1::shared_ptr"* %204 to i64
  store i64 %205, i64* %20, align 8
  br label %207

206:                                              ; preds = %188
  tail call void @_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.278"* %18, %"class.std::__1::shared_ptr"* dereferenceable(16) %183) #15
  br label %207

207:                                              ; preds = %181, %206, %203
  %208 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 2
  %209 = bitcast %"class.SkSL::Statement"* %208 to %"class.std::__1::unique_ptr.23"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr.23"* %209, i1 zeroext false)
  %210 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 3, i32 0, i32 1
  %211 = bitcast i32* %210 to %"class.std::__1::unique_ptr.23"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr.23"* %211, i1 zeroext true)
  br label %274

212:                                              ; preds = %87
  %213 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 1
  %214 = bitcast %"class.SkSL::Statement"* %213 to %"class.std::__1::unique_ptr"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %214)
  %215 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 1, i32 0, i32 1
  %216 = bitcast i32* %215 to %"class.std::__1::unique_ptr.23"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr.23"* %216, i1 zeroext true)
  %217 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 2
  %218 = bitcast %"class.SkSL::Statement"* %217 to %"class.std::__1::unique_ptr.23"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr.23"* %218, i1 zeroext true)
  br label %274

219:                                              ; preds = %87
  %220 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 1
  %221 = bitcast %"class.SkSL::Statement"* %220 to %"class.std::__1::unique_ptr"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %221)
  br label %274

222:                                              ; preds = %87
  %223 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 4
  %224 = bitcast %"class.SkSL::Statement"* %223 to %"class.std::__1::shared_ptr"*
  %225 = bitcast %"class.SkSL::Statement"* %223 to %"class.SkSL::SymbolTable"**
  %226 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %225, align 8
  %227 = icmp eq %"class.SkSL::SymbolTable"* %226, null
  %228 = ptrtoint %"class.SkSL::SymbolTable"* %226 to i64
  br i1 %227, label %248, label %229

229:                                              ; preds = %222
  %230 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %19, align 8
  %231 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %232 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %231, align 8
  %233 = icmp eq %"class.std::__1::shared_ptr"* %230, %232
  br i1 %233, label %247, label %234

234:                                              ; preds = %229
  %235 = bitcast %"class.std::__1::shared_ptr"* %230 to i64*
  store i64 %228, i64* %235, align 8
  %236 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %230, i64 0, i32 1
  %237 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 4, i32 0, i32 1
  %238 = bitcast i32* %237 to %"class.std::__1::__shared_weak_count"**
  %239 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %238, align 8
  store %"class.std::__1::__shared_weak_count"* %239, %"class.std::__1::__shared_weak_count"** %236, align 8
  %240 = icmp eq %"class.std::__1::__shared_weak_count"* %239, null
  br i1 %240, label %244, label %241

241:                                              ; preds = %234
  %242 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %239, i64 0, i32 0, i32 1
  %243 = atomicrmw add i64* %242, i64 1 monotonic
  br label %244

244:                                              ; preds = %241, %234
  %245 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %230, i64 1
  %246 = ptrtoint %"class.std::__1::shared_ptr"* %245 to i64
  store i64 %246, i64* %20, align 8
  br label %248

247:                                              ; preds = %229
  tail call void @_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.278"* %18, %"class.std::__1::shared_ptr"* dereferenceable(16) %224) #15
  br label %248

248:                                              ; preds = %222, %247, %244
  %249 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 1, i32 0, i32 1
  %250 = bitcast i32* %249 to %"class.std::__1::unique_ptr"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %250)
  %251 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 3
  %252 = bitcast %"class.SkSL::Statement"* %251 to %"class.std::__1::unique_ptr.23"**
  %253 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %252, align 8
  %254 = icmp eq %"class.std::__1::unique_ptr.23"* %253, null
  br i1 %254, label %274, label %255

255:                                              ; preds = %248
  %256 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 3, i32 0, i32 1
  %257 = bitcast i32* %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = lshr i64 %258, 1
  %260 = and i64 %259, 2147483647
  %261 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %253, i64 %260
  %262 = icmp eq i64 %260, 0
  br i1 %262, label %274, label %263

263:                                              ; preds = %255, %263
  %264 = phi %"class.std::__1::unique_ptr.23"* [ %268, %263 ], [ %253, %255 ]
  %265 = bitcast %"class.std::__1::unique_ptr.23"* %264 to %"class.SkSL::SwitchCase"**
  %266 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %265, align 8
  %267 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %266, i64 0, i32 2
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer14visitStatementEPNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEEb(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr.23"* %267, i1 zeroext true)
  %268 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %264, i64 1
  %269 = icmp eq %"class.std::__1::unique_ptr.23"* %268, %261
  br i1 %269, label %274, label %263

270:                                              ; preds = %87
  %271 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %88, i64 2, i32 0, i32 1
  %272 = bitcast i32* %271 to %"class.std::__1::unique_ptr"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %272)
  br label %274

273:                                              ; preds = %87
  tail call void @llvm.trap()
  unreachable

274:                                              ; preds = %263, %171, %248, %158, %255, %163, %87, %87, %87, %87, %87, %270, %219, %212, %207, %178, %175
  %275 = load i64, i64* %20, align 8
  %276 = load i64, i64* %22, align 8
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 4
  %279 = icmp ugt i64 %25, %278
  %280 = inttoptr i64 %276 to %"class.std::__1::shared_ptr"*
  %281 = inttoptr i64 %275 to %"class.std::__1::shared_ptr"*
  br i1 %279, label %282, label %284

282:                                              ; preds = %274
  %283 = sub nsw i64 %25, %278
  call void @_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.278"* %18, i64 %283) #15
  br label %308

284:                                              ; preds = %274
  %285 = icmp ult i64 %25, %278
  br i1 %285, label %286, label %308

286:                                              ; preds = %284
  %287 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %280, i64 %25
  %288 = icmp eq %"class.std::__1::shared_ptr"* %287, %281
  br i1 %288, label %307, label %289

289:                                              ; preds = %286, %305
  %290 = phi %"class.std::__1::shared_ptr"* [ %291, %305 ], [ %281, %286 ]
  %291 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %290, i64 -1
  %292 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %290, i64 -1, i32 1
  %293 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %292, align 8
  %294 = icmp eq %"class.std::__1::__shared_weak_count"* %293, null
  br i1 %294, label %305, label %295

295:                                              ; preds = %289
  %296 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %293, i64 0, i32 0, i32 1
  %297 = atomicrmw add i64* %296, i64 -1 acq_rel
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %305

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %293, i64 0, i32 0
  %301 = bitcast %"class.std::__1::__shared_weak_count"* %293 to void (%"class.std::__1::__shared_count"*)***
  %302 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %302, i64 2
  %304 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %303, align 8
  call void %304(%"class.std::__1::__shared_count"* %300) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %293) #15
  br label %305

305:                                              ; preds = %299, %295, %289
  %306 = icmp eq %"class.std::__1::shared_ptr"* %291, %287
  br i1 %306, label %307, label %289

307:                                              ; preds = %305, %286
  store %"class.std::__1::shared_ptr"* %287, %"class.std::__1::shared_ptr"** %19, align 8
  br label %308

308:                                              ; preds = %282, %284, %307
  %309 = load i64, i64* %12, align 8
  %310 = load i64, i64* %14, align 8
  %311 = sub i64 %309, %310
  %312 = ashr exact i64 %311, 3
  %313 = icmp ugt i64 %17, %312
  %314 = inttoptr i64 %310 to %"class.std::__1::unique_ptr.23"**
  br i1 %313, label %315, label %317

315:                                              ; preds = %308
  %316 = sub nsw i64 %17, %312
  call void @_ZNSt3__16vectorIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector.285"* %10, i64 %316) #15
  br label %321

317:                                              ; preds = %308
  %318 = icmp ult i64 %17, %312
  br i1 %318, label %319, label %321

319:                                              ; preds = %317
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %314, i64 %17
  store %"class.std::__1::unique_ptr.23"** %320, %"class.std::__1::unique_ptr.23"*** %11, align 8
  br label %321

321:                                              ; preds = %3, %319, %317, %315
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %94, label %6

6:                                                ; preds = %2, %76
  %7 = phi %"class.SkSL::Expression"* [ %79, %76 ], [ %4, %2 ]
  %8 = phi %"class.std::__1::unique_ptr"* [ %77, %76 ], [ %1, %2 ]
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %93 [
    i32 31, label %94
    i32 42, label %94
    i32 44, label %94
    i32 45, label %94
    i32 46, label %94
    i32 43, label %94
    i32 51, label %94
    i32 54, label %94
    i32 55, label %94
    i32 30, label %11
    i32 33, label %19
    i32 34, label %19
    i32 35, label %19
    i32 36, label %19
    i32 37, label %19
    i32 38, label %19
    i32 39, label %19
    i32 40, label %19
    i32 41, label %34
    i32 47, label %52
    i32 48, label %71
    i32 50, label %81
    i32 49, label %84
    i32 52, label %87
    i32 53, label %90
  ]

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1
  %13 = bitcast %"class.SkSL::Expression"* %12 to %"class.std::__1::unique_ptr"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %13)
  %14 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %16 [
    i32 59, label %94
    i32 57, label %94
  ]

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1, i32 1
  %18 = bitcast %"class.SkSL::Type"** %17 to %"class.std::__1::unique_ptr"*
  br label %76

19:                                               ; preds = %6, %6, %6, %6, %6, %6, %6, %6
  %20 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZN4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* nonnull %7) #15
  %21 = bitcast %"class.SkSL::AnyConstructor"* %20 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %22 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %21, align 8
  %23 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %22, i64 11
  %24 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %23, align 8
  %25 = tail call { %"class.std::__1::unique_ptr"*, i64 } %24(%"class.SkSL::AnyConstructor"* %20) #15
  %26 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %25, 0
  %27 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %25, 1
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 %27
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %94, label %30

30:                                               ; preds = %19, %30
  %31 = phi %"class.std::__1::unique_ptr"* [ %32, %30 ], [ %26, %19 ]
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %31)
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 1
  %33 = icmp eq %"class.std::__1::unique_ptr"* %32, %28
  br i1 %33, label %94, label %30

34:                                               ; preds = %6
  %35 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1, i32 0, i32 1
  %36 = getelementptr inbounds i32, i32* %35, i64 4
  %37 = bitcast i32* %36 to %"class.std::__1::unique_ptr"**
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %39 = icmp eq %"class.std::__1::unique_ptr"* %38, null
  br i1 %39, label %94, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds i32, i32* %35, i64 6
  %42 = bitcast i32* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 %45
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %94, label %48

48:                                               ; preds = %40, %48
  %49 = phi %"class.std::__1::unique_ptr"* [ %50, %48 ], [ %38, %40 ]
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %49)
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 1
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %46
  br i1 %51, label %94, label %48

52:                                               ; preds = %6
  %53 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1, i32 0, i32 1
  %54 = getelementptr inbounds i32, i32* %53, i64 4
  %55 = bitcast i32* %54 to %"class.std::__1::unique_ptr"**
  %56 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %55, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr"* %56, null
  br i1 %57, label %66, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds i32, i32* %53, i64 6
  %60 = bitcast i32* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = lshr i64 %61, 1
  %63 = and i64 %62, 2147483647
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 %63
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %67, %52, %58
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer18addInlineCandidateEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %8)
  br label %94

67:                                               ; preds = %58, %67
  %68 = phi %"class.std::__1::unique_ptr"* [ %69, %67 ], [ %56, %58 ]
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %68)
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 1
  %70 = icmp eq %"class.std::__1::unique_ptr"* %69, %64
  br i1 %70, label %66, label %67

71:                                               ; preds = %6
  %72 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1
  %73 = bitcast %"class.SkSL::Expression"* %72 to %"class.std::__1::unique_ptr"*
  tail call void @_ZN4SkSL23InlineCandidateAnalyzer15visitExpressionEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"* %0, %"class.std::__1::unique_ptr"* %73)
  %74 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1, i32 0, i32 1
  %75 = bitcast i32* %74 to %"class.std::__1::unique_ptr"*
  br label %76

76:                                               ; preds = %71, %81, %84, %87, %90, %16
  %77 = phi %"class.std::__1::unique_ptr"* [ %75, %71 ], [ %83, %81 ], [ %86, %84 ], [ %89, %87 ], [ %92, %90 ], [ %18, %16 ]
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %78, align 8
  %80 = icmp eq %"class.SkSL::Expression"* %79, null
  br i1 %80, label %94, label %6

81:                                               ; preds = %6
  %82 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1
  %83 = bitcast %"class.SkSL::Expression"* %82 to %"class.std::__1::unique_ptr"*
  br label %76

84:                                               ; preds = %6
  %85 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1, i32 0, i32 1
  %86 = bitcast i32* %85 to %"class.std::__1::unique_ptr"*
  br label %76

87:                                               ; preds = %6
  %88 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1
  %89 = bitcast %"class.SkSL::Expression"* %88 to %"class.std::__1::unique_ptr"*
  br label %76

90:                                               ; preds = %6
  %91 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 1
  %92 = bitcast %"class.SkSL::Expression"* %91 to %"class.std::__1::unique_ptr"*
  br label %76

93:                                               ; preds = %6
  tail call void @llvm.trap()
  unreachable

94:                                               ; preds = %6, %6, %6, %6, %6, %6, %6, %6, %6, %11, %11, %76, %48, %30, %34, %2, %40, %19, %66
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.278"*, %"class.std::__1::shared_ptr"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::shared_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.278"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.278"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::shared_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::shared_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::shared_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::shared_ptr"* %38 to i64
  %40 = bitcast %"class.std::__1::shared_ptr"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::shared_ptr"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %1, i64 0, i32 1
  %45 = bitcast %"class.std::__1::__shared_weak_count"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::__shared_weak_count"** %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = bitcast %"class.std::__1::shared_ptr"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #15
  %49 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %37, i64 1
  %50 = ptrtoint %"class.std::__1::shared_ptr"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %51, align 8
  %53 = ptrtoint %"class.std::__1::shared_ptr"* %52 to i64
  %54 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  %55 = icmp eq %"class.std::__1::shared_ptr"* %54, %52
  br i1 %55, label %138, label %56

56:                                               ; preds = %34
  %57 = getelementptr %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %54, i64 -1, i32 0
  %58 = ptrtoint %"class.SkSL::SymbolTable"** %57 to i64
  %59 = sub i64 %58, %53
  %60 = lshr i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %56, %64
  %65 = phi %"class.std::__1::shared_ptr"* [ %68, %64 ], [ %37, %56 ]
  %66 = phi %"class.std::__1::shared_ptr"* [ %69, %64 ], [ %54, %56 ]
  %67 = phi i64 [ %79, %64 ], [ %62, %56 ]
  %68 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %65, i64 -1
  %69 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %66, i64 -1
  %70 = bitcast %"class.std::__1::shared_ptr"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::shared_ptr"* %68 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %65, i64 -1, i32 1
  %74 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %66, i64 -1, i32 1
  %75 = bitcast %"class.std::__1::__shared_weak_count"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::__shared_weak_count"** %73 to i64*
  store i64 %76, i64* %77, align 8
  %78 = bitcast %"class.std::__1::shared_ptr"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #15
  %79 = add i64 %67, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %64, !llvm.loop !28

81:                                               ; preds = %64, %56
  %82 = phi %"class.std::__1::shared_ptr"* [ undef, %56 ], [ %68, %64 ]
  %83 = phi %"class.std::__1::shared_ptr"* [ %37, %56 ], [ %68, %64 ]
  %84 = phi %"class.std::__1::shared_ptr"* [ %54, %56 ], [ %69, %64 ]
  %85 = icmp ult i64 %59, 48
  br i1 %85, label %134, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"class.std::__1::shared_ptr"* [ %122, %86 ], [ %83, %81 ]
  %88 = phi %"class.std::__1::shared_ptr"* [ %123, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -1
  %90 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -1
  %91 = bitcast %"class.std::__1::shared_ptr"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.std::__1::shared_ptr"* %89 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -1, i32 1
  %95 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -1, i32 1
  %96 = bitcast %"class.std::__1::__shared_weak_count"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::__shared_weak_count"** %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = bitcast %"class.std::__1::shared_ptr"* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #15
  %100 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -2
  %101 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -2
  %102 = bitcast %"class.std::__1::shared_ptr"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::shared_ptr"* %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -2, i32 1
  %106 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -2, i32 1
  %107 = bitcast %"class.std::__1::__shared_weak_count"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::__shared_weak_count"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = bitcast %"class.std::__1::shared_ptr"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 16, i1 false) #15
  %111 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -3
  %112 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -3
  %113 = bitcast %"class.std::__1::shared_ptr"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::shared_ptr"* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -3, i32 1
  %117 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -3, i32 1
  %118 = bitcast %"class.std::__1::__shared_weak_count"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::__shared_weak_count"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = bitcast %"class.std::__1::shared_ptr"* %112 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #15
  %122 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -4
  %123 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -4
  %124 = bitcast %"class.std::__1::shared_ptr"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.std::__1::shared_ptr"* %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -4, i32 1
  %128 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -4, i32 1
  %129 = bitcast %"class.std::__1::__shared_weak_count"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.std::__1::__shared_weak_count"** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = bitcast %"class.std::__1::shared_ptr"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 16, i1 false) #15
  %133 = icmp eq %"class.std::__1::shared_ptr"* %123, %52
  br i1 %133, label %134, label %86

134:                                              ; preds = %86, %81
  %135 = phi %"class.std::__1::shared_ptr"* [ %82, %81 ], [ %122, %86 ]
  %136 = load i64, i64* %6, align 8
  %137 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  br label %138

138:                                              ; preds = %34, %134
  %139 = phi %"class.std::__1::shared_ptr"* [ %137, %134 ], [ %52, %34 ]
  %140 = phi %"class.std::__1::shared_ptr"* [ %135, %134 ], [ %37, %34 ]
  %141 = phi i64 [ %136, %134 ], [ %53, %34 ]
  %142 = ptrtoint %"class.std::__1::shared_ptr"* %140 to i64
  store i64 %142, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %143 = inttoptr i64 %141 to %"class.std::__1::shared_ptr"*
  %144 = icmp eq %"class.std::__1::shared_ptr"* %139, %143
  br i1 %144, label %163, label %145

145:                                              ; preds = %138, %161
  %146 = phi %"class.std::__1::shared_ptr"* [ %147, %161 ], [ %139, %138 ]
  %147 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %146, i64 -1
  %148 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %146, i64 -1, i32 1
  %149 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %148, align 8
  %150 = icmp eq %"class.std::__1::__shared_weak_count"* %149, null
  br i1 %150, label %161, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %149, i64 0, i32 0, i32 1
  %153 = atomicrmw add i64* %152, i64 -1 acq_rel
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %149, i64 0, i32 0
  %157 = bitcast %"class.std::__1::__shared_weak_count"* %149 to void (%"class.std::__1::__shared_count"*)***
  %158 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %158, i64 2
  %160 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %159, align 8
  tail call void %160(%"class.std::__1::__shared_count"* %156) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %149) #15
  br label %161

161:                                              ; preds = %155, %151, %145
  %162 = icmp eq %"class.std::__1::shared_ptr"* %147, %143
  br i1 %162, label %163, label %145

163:                                              ; preds = %161, %138
  %164 = icmp eq i64 %141, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %141 to i8*
  tail call void @_ZdlPv(i8* %166) #17
  br label %167

167:                                              ; preds = %163, %165
  ret void
}

declare dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZN4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL23InlineCandidateAnalyzer18addInlineCandidateEPNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::InlineCandidateAnalyzer"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.SkSL::InlineCandidate", align 8
  %4 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 0
  %5 = load %"struct.SkSL::InlineCandidateList"*, %"struct.SkSL::InlineCandidateList"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::InlineCandidateList", %"struct.SkSL::InlineCandidateList"* %5, i64 0, i32 0
  %7 = bitcast %"struct.SkSL::InlineCandidate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %9, i64 -1
  %11 = bitcast %"class.std::__1::shared_ptr"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.SkSL::InlineCandidate"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %9, i64 -1, i32 1
  %16 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %15, align 8
  store %"class.std::__1::__shared_weak_count"* %16, %"class.std::__1::__shared_weak_count"** %14, align 8
  %17 = icmp eq %"class.std::__1::__shared_weak_count"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0, i32 1
  %20 = atomicrmw add i64* %19, i64 1 monotonic
  br label %21

21:                                               ; preds = %2, %18
  %22 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %3, i64 0, i32 1
  %23 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 2, i32 0, i32 1
  %24 = load %"class.std::__1::unique_ptr.23"**, %"class.std::__1::unique_ptr.23"*** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %24, i64 -1
  %26 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr.23"**, %"class.std::__1::unique_ptr.23"*** %26, align 8
  br label %28

28:                                               ; preds = %39, %21
  %29 = phi %"class.std::__1::unique_ptr.23"** [ %25, %21 ], [ %32, %39 ]
  %30 = icmp eq %"class.std::__1::unique_ptr.23"** %29, %27
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %29, i64 -1
  %33 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %35, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 16
  br i1 %38, label %39, label %44

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %35, i64 4
  %41 = bitcast %"class.SkSL::Statement"* %40 to i8*
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %28, label %44

44:                                               ; preds = %28, %31, %39
  %45 = phi %"class.std::__1::unique_ptr.23"* [ %33, %39 ], [ null, %28 ], [ %33, %31 ]
  store %"class.std::__1::unique_ptr.23"* %45, %"class.std::__1::unique_ptr.23"** %22, align 8
  %46 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %3, i64 0, i32 2
  %47 = bitcast %"class.std::__1::unique_ptr.23"** %25 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.23"** %46 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %3, i64 0, i32 3
  store %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"** %50, align 8
  %51 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %3, i64 0, i32 4
  %52 = getelementptr inbounds %"class.SkSL::InlineCandidateAnalyzer", %"class.SkSL::InlineCandidateAnalyzer"* %0, i64 0, i32 3
  %53 = bitcast %"class.SkSL::FunctionDefinition"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.SkSL::FunctionDefinition"** %51 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.SkSL::InlineCandidateList", %"struct.SkSL::InlineCandidateList"* %5, i64 0, i32 0, i32 0, i32 1
  %57 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %56, align 8
  %58 = getelementptr inbounds %"struct.SkSL::InlineCandidateList", %"struct.SkSL::InlineCandidateList"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %59 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %58, align 8
  %60 = icmp ult %"struct.SkSL::InlineCandidate"* %57, %59
  br i1 %60, label %61, label %73

61:                                               ; preds = %44
  %62 = bitcast %"struct.SkSL::InlineCandidate"* %57 to i64*
  store i64 %12, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %57, i64 0, i32 0, i32 1
  %64 = bitcast %"class.std::__1::__shared_weak_count"** %14 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__shared_weak_count"** %63 to i64*
  store i64 %65, i64* %66, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #15
  %67 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %57, i64 0, i32 1
  %68 = bitcast %"class.std::__1::unique_ptr.23"** %67 to i8*
  %69 = bitcast %"class.std::__1::unique_ptr.23"** %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 32, i1 false) #15
  %70 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %57, i64 1
  %71 = ptrtoint %"struct.SkSL::InlineCandidate"* %70 to i64
  %72 = bitcast %"struct.SkSL::InlineCandidate"** %56 to i64*
  store i64 %71, i64* %72, align 8
  br label %74

73:                                               ; preds = %44
  call void @_ZNSt3__16vectorIN4SkSL15InlineCandidateENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.271"* %6, %"struct.SkSL::InlineCandidate"* nonnull dereferenceable(48) %3) #15
  br label %74

74:                                               ; preds = %61, %73
  %75 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  %76 = icmp eq %"class.std::__1::__shared_weak_count"* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %75, i64 0, i32 0, i32 1
  %79 = atomicrmw add i64* %78, i64 -1 acq_rel
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %75, i64 0, i32 0
  %83 = bitcast %"class.std::__1::__shared_weak_count"* %75 to void (%"class.std::__1::__shared_count"*)***
  %84 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %84, i64 2
  %86 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %85, align 8
  call void %86(%"class.std::__1::__shared_count"* %82) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %75) #15
  br label %87

87:                                               ; preds = %74, %77, %81
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4SkSL15InlineCandidateENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.271"*, %"struct.SkSL::InlineCandidate"* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.SkSL::InlineCandidate"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.271"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.271"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.SkSL::InlineCandidate"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #17
  %30 = bitcast i8* %29 to %"struct.SkSL::InlineCandidate"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.SkSL::InlineCandidate"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %33, i64 %32
  %36 = ptrtoint %"struct.SkSL::InlineCandidate"* %35 to i64
  %37 = bitcast %"struct.SkSL::InlineCandidate"* %1 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"struct.SkSL::InlineCandidate"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %33, i64 %9, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %1, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__shared_weak_count"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::__shared_weak_count"** %40 to i64*
  store i64 %43, i64* %44, align 8
  %45 = bitcast %"struct.SkSL::InlineCandidate"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #15
  %46 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %33, i64 %9, i32 1
  %47 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %1, i64 0, i32 1
  %48 = bitcast %"class.std::__1::unique_ptr.23"** %46 to i8*
  %49 = bitcast %"class.std::__1::unique_ptr.23"** %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 32, i1 false) #15
  %50 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %34, i64 1
  %51 = ptrtoint %"struct.SkSL::InlineCandidate"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %52, align 8
  %54 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %3, align 8
  %55 = icmp eq %"struct.SkSL::InlineCandidate"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.SkSL::InlineCandidate"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.SkSL::InlineCandidate"* [ %61, %58 ], [ %34, %31 ]
  %60 = phi %"struct.SkSL::InlineCandidate"* [ %62, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %59, i64 -1
  %62 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %60, i64 -1
  %63 = bitcast %"struct.SkSL::InlineCandidate"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"struct.SkSL::InlineCandidate"* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %59, i64 -1, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %60, i64 -1, i32 0, i32 1
  %68 = bitcast %"class.std::__1::__shared_weak_count"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::__shared_weak_count"** %66 to i64*
  store i64 %69, i64* %70, align 8
  %71 = bitcast %"struct.SkSL::InlineCandidate"* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #15
  %72 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %59, i64 -1, i32 1
  %73 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %60, i64 -1, i32 1
  %74 = bitcast %"class.std::__1::unique_ptr.23"** %72 to i8*
  %75 = bitcast %"class.std::__1::unique_ptr.23"** %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 32, i1 false) #15
  %76 = icmp eq %"struct.SkSL::InlineCandidate"* %62, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.SkSL::InlineCandidate"*, %"struct.SkSL::InlineCandidate"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.SkSL::InlineCandidate"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.SkSL::InlineCandidate"* [ %34, %56 ], [ %61, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.SkSL::InlineCandidate"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.SkSL::InlineCandidate"*
  %86 = icmp eq %"struct.SkSL::InlineCandidate"* %81, %85
  br i1 %86, label %105, label %87

87:                                               ; preds = %80, %103
  %88 = phi %"struct.SkSL::InlineCandidate"* [ %89, %103 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.SkSL::InlineCandidate", %"struct.SkSL::InlineCandidate"* %88, i64 -1, i32 0, i32 1
  %91 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %90, align 8
  %92 = icmp eq %"class.std::__1::__shared_weak_count"* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %91, i64 0, i32 0, i32 1
  %95 = atomicrmw add i64* %94, i64 -1 acq_rel
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %91, i64 0, i32 0
  %99 = bitcast %"class.std::__1::__shared_weak_count"* %91 to void (%"class.std::__1::__shared_count"*)***
  %100 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %100, i64 2
  %102 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %101, align 8
  tail call void %102(%"class.std::__1::__shared_count"* %98) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %91) #15
  br label %103

103:                                              ; preds = %97, %93, %87
  %104 = icmp eq %"struct.SkSL::InlineCandidate"* %89, %85
  br i1 %104, label %105, label %87

105:                                              ; preds = %103, %80
  %106 = icmp eq i64 %83, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %108) #17
  br label %109

109:                                              ; preds = %105, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10shared_ptrIN4SkSL11SymbolTableEEENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.278"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::shared_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::shared_ptr"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::shared_ptr"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %13, i64 %18, i32 0
  %20 = bitcast %"class.SkSL::SymbolTable"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #15
  %26 = ptrtoint %"class.std::__1::shared_ptr"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %223

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.278"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.278"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %38 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #17
  %54 = bitcast i8* %53 to %"class.std::__1::shared_ptr"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.std::__1::shared_ptr"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %57, i64 %33
  %59 = ptrtoint %"class.std::__1::shared_ptr"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %57, i64 %56
  %61 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %58, i64 %1
  %62 = shl nsw i64 %1, 4
  %63 = add i64 %62, -16
  %64 = lshr exact i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.std::__1::shared_ptr"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 16, i1 false) #15
  %73 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %69, i64 1
  %74 = ptrtoint %"class.std::__1::shared_ptr"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !29

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::shared_ptr"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.std::__1::shared_ptr"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 112
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.std::__1::shared_ptr"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #15
  %87 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %84, i64 1
  %88 = bitcast %"class.std::__1::shared_ptr"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #15
  %89 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %84, i64 2
  %90 = bitcast %"class.std::__1::shared_ptr"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #15
  %91 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %84, i64 3
  %92 = bitcast %"class.std::__1::shared_ptr"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #15
  %93 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %84, i64 4
  %94 = bitcast %"class.std::__1::shared_ptr"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #15
  %95 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %84, i64 5
  %96 = bitcast %"class.std::__1::shared_ptr"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #15
  %97 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %84, i64 6
  %98 = bitcast %"class.std::__1::shared_ptr"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #15
  %99 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %84, i64 7
  %100 = bitcast %"class.std::__1::shared_ptr"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #15
  %101 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %84, i64 8
  %102 = ptrtoint %"class.std::__1::shared_ptr"* %101 to i64
  %103 = icmp eq %"class.std::__1::shared_ptr"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.std::__1::shared_ptr"* %60 to i64
  %106 = ptrtoint %"class.std::__1::shared_ptr"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %107, align 8
  %109 = ptrtoint %"class.std::__1::shared_ptr"* %108 to i64
  %110 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %6, align 8
  %111 = icmp eq %"class.std::__1::shared_ptr"* %110, %108
  br i1 %111, label %195, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %110, i64 -1, i32 0
  %114 = ptrtoint %"class.SkSL::SymbolTable"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %137, label %120

120:                                              ; preds = %112, %120
  %121 = phi %"class.std::__1::shared_ptr"* [ %124, %120 ], [ %58, %112 ]
  %122 = phi %"class.std::__1::shared_ptr"* [ %125, %120 ], [ %110, %112 ]
  %123 = phi i64 [ %135, %120 ], [ %118, %112 ]
  %124 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %121, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %122, i64 -1
  %126 = bitcast %"class.std::__1::shared_ptr"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::shared_ptr"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %121, i64 -1, i32 1
  %130 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %122, i64 -1, i32 1
  %131 = bitcast %"class.std::__1::__shared_weak_count"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.std::__1::__shared_weak_count"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = bitcast %"class.std::__1::shared_ptr"* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #15
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %120, !llvm.loop !30

137:                                              ; preds = %120, %112
  %138 = phi %"class.std::__1::shared_ptr"* [ undef, %112 ], [ %124, %120 ]
  %139 = phi %"class.std::__1::shared_ptr"* [ %58, %112 ], [ %124, %120 ]
  %140 = phi %"class.std::__1::shared_ptr"* [ %110, %112 ], [ %125, %120 ]
  %141 = icmp ult i64 %115, 48
  br i1 %141, label %190, label %142

142:                                              ; preds = %137, %142
  %143 = phi %"class.std::__1::shared_ptr"* [ %178, %142 ], [ %139, %137 ]
  %144 = phi %"class.std::__1::shared_ptr"* [ %179, %142 ], [ %140, %137 ]
  %145 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %143, i64 -1
  %146 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %144, i64 -1
  %147 = bitcast %"class.std::__1::shared_ptr"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::shared_ptr"* %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %143, i64 -1, i32 1
  %151 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %144, i64 -1, i32 1
  %152 = bitcast %"class.std::__1::__shared_weak_count"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.std::__1::__shared_weak_count"** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = bitcast %"class.std::__1::shared_ptr"* %146 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 16, i1 false) #15
  %156 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %143, i64 -2
  %157 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %144, i64 -2
  %158 = bitcast %"class.std::__1::shared_ptr"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.std::__1::shared_ptr"* %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %143, i64 -2, i32 1
  %162 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %144, i64 -2, i32 1
  %163 = bitcast %"class.std::__1::__shared_weak_count"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.std::__1::__shared_weak_count"** %161 to i64*
  store i64 %164, i64* %165, align 8
  %166 = bitcast %"class.std::__1::shared_ptr"* %157 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 16, i1 false) #15
  %167 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %143, i64 -3
  %168 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %144, i64 -3
  %169 = bitcast %"class.std::__1::shared_ptr"* %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.std::__1::shared_ptr"* %167 to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %143, i64 -3, i32 1
  %173 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %144, i64 -3, i32 1
  %174 = bitcast %"class.std::__1::__shared_weak_count"** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.std::__1::__shared_weak_count"** %172 to i64*
  store i64 %175, i64* %176, align 8
  %177 = bitcast %"class.std::__1::shared_ptr"* %168 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 16, i1 false) #15
  %178 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %143, i64 -4
  %179 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %144, i64 -4
  %180 = bitcast %"class.std::__1::shared_ptr"* %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.std::__1::shared_ptr"* %178 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %143, i64 -4, i32 1
  %184 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %144, i64 -4, i32 1
  %185 = bitcast %"class.std::__1::__shared_weak_count"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.std::__1::__shared_weak_count"** %183 to i64*
  store i64 %186, i64* %187, align 8
  %188 = bitcast %"class.std::__1::shared_ptr"* %179 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 16, i1 false) #15
  %189 = icmp eq %"class.std::__1::shared_ptr"* %179, %108
  br i1 %189, label %190, label %142

190:                                              ; preds = %142, %137
  %191 = phi %"class.std::__1::shared_ptr"* [ %138, %137 ], [ %178, %142 ]
  %192 = ptrtoint %"class.std::__1::shared_ptr"* %191 to i64
  %193 = load i64, i64* %30, align 8
  %194 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %6, align 8
  br label %195

195:                                              ; preds = %104, %190
  %196 = phi %"class.std::__1::shared_ptr"* [ %194, %190 ], [ %108, %104 ]
  %197 = phi i64 [ %192, %190 ], [ %59, %104 ]
  %198 = phi i64 [ %193, %190 ], [ %109, %104 ]
  store i64 %197, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %199 = inttoptr i64 %198 to %"class.std::__1::shared_ptr"*
  %200 = icmp eq %"class.std::__1::shared_ptr"* %196, %199
  br i1 %200, label %219, label %201

201:                                              ; preds = %195, %217
  %202 = phi %"class.std::__1::shared_ptr"* [ %203, %217 ], [ %196, %195 ]
  %203 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %202, i64 -1
  %204 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %202, i64 -1, i32 1
  %205 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %204, align 8
  %206 = icmp eq %"class.std::__1::__shared_weak_count"* %205, null
  br i1 %206, label %217, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %205, i64 0, i32 0, i32 1
  %209 = atomicrmw add i64* %208, i64 -1 acq_rel
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %217

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %205, i64 0, i32 0
  %213 = bitcast %"class.std::__1::__shared_weak_count"* %205 to void (%"class.std::__1::__shared_count"*)***
  %214 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %214, i64 2
  %216 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %215, align 8
  tail call void %216(%"class.std::__1::__shared_count"* %212) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %205) #15
  br label %217

217:                                              ; preds = %211, %207, %201
  %218 = icmp eq %"class.std::__1::shared_ptr"* %203, %199
  br i1 %218, label %219, label %201

219:                                              ; preds = %217, %195
  %220 = icmp eq i64 %198, 0
  br i1 %220, label %223, label %221

221:                                              ; preds = %219
  %222 = inttoptr i64 %198 to i8*
  tail call void @_ZdlPv(i8* %222) #17
  br label %223

223:                                              ; preds = %221, %219, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector.285"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.285", %"class.std::__1::vector.285"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.23"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.285", %"class.std::__1::vector.285"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.23"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.23"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %13, i64 %18
  %20 = bitcast %"class.std::__1::unique_ptr.23"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #15
  %26 = ptrtoint %"class.std::__1::unique_ptr.23"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.285"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.285"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #17
  %54 = bitcast i8* %53 to %"class.std::__1::unique_ptr.23"**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.std::__1::unique_ptr.23"** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %57, i64 %33
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %57, i64 %56
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %58, i64 %1
  %61 = bitcast %"class.std::__1::unique_ptr.23"** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #15
  %63 = ptrtoint %"class.std::__1::unique_ptr.23"** %59 to i64
  %64 = ptrtoint %"class.std::__1::unique_ptr.23"** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.285", %"class.std::__1::vector.285"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.std::__1::unique_ptr.23"**, %"class.std::__1::unique_ptr.23"*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.std::__1::unique_ptr.23"** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %58, i64 %71
  %73 = ptrtoint %"class.std::__1::unique_ptr.23"** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.std::__1::unique_ptr.23"** %72 to i8*
  %77 = bitcast %"class.std::__1::unique_ptr.23"** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #15
  %78 = load %"class.std::__1::unique_ptr.23"**, %"class.std::__1::unique_ptr.23"*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.std::__1::unique_ptr.23"** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.std::__1::unique_ptr.23"** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.std::__1::unique_ptr.23"** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #17
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.23"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %42, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %42, align 8
  %44 = icmp eq %"class.SkSL::Statement"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Statement"* %43 to void (%"class.SkSL::Statement"*)***
  %47 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, align 8
  tail call void %49(%"class.SkSL::Statement"* nonnull %43) #15
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %62, align 8
  %64 = icmp eq %"class.SkSL::Statement"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Statement"* %63 to void (%"class.SkSL::Statement"*)***
  %67 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %68, align 8
  tail call void %69(%"class.SkSL::Statement"* nonnull %63) #15
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #15
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.23"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %61, align 8
  %63 = icmp eq %"class.SkSL::Statement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Statement"* %62 to void (%"class.SkSL::Statement"*)***
  %66 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, align 8
  tail call void %68(%"class.SkSL::Statement"* nonnull %62) #15
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #15
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.152*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.152, %class.SkTArray.152* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 1) #15
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.152, %class.SkTArray.152* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %56, %50 ]
  %52 = getelementptr inbounds i8, i8* %44, i64 %51
  %53 = load i8*, i8** %49, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %52, align 1
  %56 = add nuw nsw i64 %51, 1
  %57 = load i64, i64* %4, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %50, label %61

61:                                               ; preds = %50, %35
  %62 = phi i64 [ %45, %35 ], [ %57, %50 ]
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkTArray.152, %class.SkTArray.152* %0, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %67) #15
  %68 = load i64, i64* %4, align 8
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i64 [ %62, %61 ], [ %68, %65 ]
  %71 = getelementptr inbounds %class.SkTArray.152, %class.SkTArray.152* %0, i64 0, i32 0
  store i8* %44, i8** %71, align 8
  %72 = and i64 %70, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %69, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.143* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.143*, %class.SkTArray.143* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.143* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.143, %class.SkTArray.143* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.143, %class.SkTArray.143* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.143, %class.SkTArray.143* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.143* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.143, %class.SkTArray.143* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #15
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #15
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.143* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20ExternalFunctionCallD2Ev(%"class.SkSL::ExternalFunctionCall"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL20ExternalFunctionCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %18, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %18, align 8
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.SkSL::Expression"* %19 to void (%"class.SkSL::Expression"*)***
  %23 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %23, i64 1
  %25 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %24, align 8
  tail call void %25(%"class.SkSL::Expression"* nonnull %19) #15
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #15
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20ExternalFunctionCallD0Ev(%"class.SkSL::ExternalFunctionCall"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL20ExternalFunctionCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %18, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %18, align 8
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.SkSL::Expression"* %19 to void (%"class.SkSL::Expression"*)***
  %23 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %23, i64 1
  %25 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %24, align 8
  tail call void %25(%"class.SkSL::Expression"* nonnull %19) #15
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #15
  br label %35

35:                                               ; preds = %11, %32
  %36 = bitcast %"class.SkSL::ExternalFunctionCall"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %36) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL20ExternalFunctionCall11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ExternalFunctionCall"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = bitcast %"class.SkSL::String"* %3 to i8*
  %8 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %9 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %1, i64 0, i32 1
  %10 = load %"class.SkSL::ExternalFunction"*, %"class.SkSL::ExternalFunction"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %10, i64 0, i32 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %10, i64 0, i32 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #16
  unreachable

18:                                               ; preds = %2
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #17
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %7, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %12, i64 %14, i1 false) #15
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %7, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #15
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #17
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  %48 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #15
  %50 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %51 = bitcast i8* %50 to %"class.std::__1::unique_ptr"**
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %51, align 8
  %53 = icmp eq %"class.std::__1::unique_ptr"* %52, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 %59
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %47, %54
  %63 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %76

64:                                               ; preds = %54
  %65 = bitcast %"class.SkSL::String"* %5 to i8*
  %66 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.SkSL::String"* %6 to i8*
  %70 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = bitcast %"class.SkSL::String"* %6 to i16*
  %73 = getelementptr inbounds i8, i8* %69, i64 2
  %74 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  br label %85

76:                                               ; preds = %105, %62
  %77 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %63, %62 ], [ %74, %105 ]
  %78 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #15
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %83) #17
  br label %84

84:                                               ; preds = %76, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #15
  ret void

85:                                               ; preds = %64, %105
  %86 = phi %"class.std::__1::unique_ptr"* [ %52, %64 ], [ %106, %105 ]
  %87 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #15
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %88, align 8
  %90 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %89, i64 0, i32 0
  %91 = bitcast %"class.SkSL::Expression"* %89 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %92 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %92, i64 2
  %94 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %93, align 8
  call void %94(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %90) #15
  %95 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #15
  %96 = load i8, i8* %67, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %85
  %99 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %99) #17
  br label %100

100:                                              ; preds = %85, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #15
  store i8 2, i8* %71, align 1
  store i16 8236, i16* %72, align 8
  store i8 0, i8* %73, align 2
  %101 = load i8, i8* %75, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %104) #17
  br label %105

105:                                              ; preds = %103, %100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %69, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #15
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %107 = icmp eq %"class.std::__1::unique_ptr"* %106, %60
  br i1 %107, label %76, label %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL20ExternalFunctionCall11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::ExternalFunctionCall"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %6 = bitcast i8* %5 to %"class.std::__1::unique_ptr"**
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = and i64 %13, 2147483647
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %14
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %29, label %19

17:                                               ; preds = %19
  %18 = icmp eq %"class.std::__1::unique_ptr"* %28, %15
  br i1 %18, label %29, label %19

19:                                               ; preds = %9, %17
  %20 = phi %"class.std::__1::unique_ptr"* [ %28, %17 ], [ %7, %9 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %21, align 8
  %23 = bitcast %"class.SkSL::Expression"* %22 to i1 (%"class.SkSL::Expression"*, i32)***
  %24 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %24, i64 7
  %26 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.SkSL::Expression"* %22, i32 %1) #15
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  br i1 %27, label %29, label %17

29:                                               ; preds = %17, %19, %4, %9, %2
  %30 = phi i1 [ true, %2 ], [ false, %9 ], [ false, %4 ], [ false, %17 ], [ true, %19 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL20ExternalFunctionCall5cloneEv(%"class.SkSL::ExternalFunctionCall"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.SkSTArray.141, align 8
  %3 = alloca %class.SkSTArray.141, align 8
  %4 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #15
  %5 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %3, i64 0, i32 0, i32 0, i64 16
  %6 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %3, i64 0, i32 0, i32 0, i64 24
  %7 = bitcast i8* %6 to i64*
  %8 = bitcast i8* %5 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false)
  store i8* %4, i8** %8, align 8
  store i64 17179869184, i64* %7, align 8
  %9 = bitcast i8* %5 to %class.SkTArray.143*
  %10 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %1
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %9, i32 %16, i32 0) #15
  %19 = load i64, i64* %7, align 8
  %20 = shl i64 %19, 32
  %21 = and i64 %20, 4294967296
  %22 = and i64 %19, -4294967297
  %23 = or i64 %21, %22
  br label %24

24:                                               ; preds = %1, %18
  %25 = phi i64 [ %23, %18 ], [ 17179869184, %1 ]
  store i64 %25, i64* %7, align 8
  %26 = bitcast i8* %10 to %"class.std::__1::unique_ptr"**
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = load i64, i64* %12, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 %32
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = bitcast i8* %5 to %"class.std::__1::unique_ptr"**
  br label %128

37:                                               ; preds = %128, %24, %29
  %38 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 1
  %40 = load %"class.SkSL::ExternalFunction"*, %"class.SkSL::ExternalFunction"** %39, align 8
  %41 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %2, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41)
  %42 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #15
  %43 = load i32, i32* %38, align 4
  %44 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %2, i64 0, i32 0, i32 0, i64 16
  %45 = getelementptr inbounds %class.SkSTArray.141, %class.SkSTArray.141* %2, i64 0, i32 0, i32 0, i64 24
  %46 = bitcast i8* %45 to i64*
  %47 = bitcast i8* %44 to i8**
  store i8* %41, i8** %47, align 8
  store i64 17179869184, i64* %46, align 8
  %48 = bitcast i8* %44 to %class.SkTArray.143*
  %49 = call dereferenceable(16) %class.SkTArray.143* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.143* %48, %class.SkTArray.143* dereferenceable(16) %9) #15
  %50 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %40, i64 0, i32 0, i32 2
  %51 = bitcast %"class.SkSL::Type"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i8* %42 to i32 (...)***
  %54 = getelementptr inbounds i8, i8* %42, i64 8
  %55 = bitcast i8* %54 to i32*
  store i32 %43, i32* %55, align 8
  %56 = getelementptr inbounds i8, i8* %42, i64 12
  %57 = bitcast i8* %56 to i32*
  store i32 41, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %42, i64 16
  %59 = bitcast i8* %58 to i64*
  store i64 %52, i64* %59, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL20ExternalFunctionCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %60 = getelementptr inbounds i8, i8* %42, i64 24
  %61 = bitcast i8* %60 to %"class.SkSL::ExternalFunction"**
  store %"class.SkSL::ExternalFunction"* %40, %"class.SkSL::ExternalFunction"** %61, align 8
  %62 = getelementptr inbounds i8, i8* %42, i64 48
  %63 = getelementptr inbounds i8, i8* %42, i64 32
  %64 = getelementptr inbounds i8, i8* %42, i64 56
  %65 = bitcast i8* %64 to i64*
  %66 = bitcast i8* %62 to i8**
  store i8* %63, i8** %66, align 8
  store i64 17179869184, i64* %65, align 8
  %67 = bitcast i8* %62 to %class.SkTArray.143*
  %68 = call dereferenceable(16) %class.SkTArray.143* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.143* %67, %class.SkTArray.143* dereferenceable(16) %48) #15
  %69 = load i64, i64* %46, align 8
  %70 = and i64 %69, 4294967294
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %37
  %73 = bitcast i8* %44 to %"class.std::__1::unique_ptr"**
  br label %78

74:                                               ; preds = %89, %37
  %75 = phi i64 [ %69, %37 ], [ %91, %89 ]
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %97, label %95

78:                                               ; preds = %89, %72
  %79 = phi i64 [ 0, %72 ], [ %90, %89 ]
  %80 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %73, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 %79, i32 0, i32 0, i32 0
  %82 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %81, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %81, align 8
  %83 = icmp eq %"class.SkSL::Expression"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %78
  %85 = bitcast %"class.SkSL::Expression"* %82 to void (%"class.SkSL::Expression"*)***
  %86 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %86, i64 1
  %88 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %87, align 8
  call void %88(%"class.SkSL::Expression"* nonnull %82) #15
  br label %89

89:                                               ; preds = %84, %78
  %90 = add nuw nsw i64 %79, 1
  %91 = load i64, i64* %46, align 8
  %92 = lshr i64 %91, 1
  %93 = and i64 %92, 2147483647
  %94 = icmp ult i64 %90, %93
  br i1 %94, label %78, label %74

95:                                               ; preds = %74
  %96 = load i8*, i8** %47, align 8
  call void @_Z7sk_freePv(i8* %96) #15
  br label %97

97:                                               ; preds = %95, %74
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41)
  %98 = load i64, i64* %7, align 8
  %99 = and i64 %98, 4294967294
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast i8* %5 to %"class.std::__1::unique_ptr"**
  br label %107

103:                                              ; preds = %118, %97
  %104 = phi i64 [ %98, %97 ], [ %120, %118 ]
  %105 = and i64 %104, 1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %126, label %124

107:                                              ; preds = %118, %101
  %108 = phi i64 [ 0, %101 ], [ %119, %118 ]
  %109 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %102, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %109, i64 %108, i32 0, i32 0, i32 0
  %111 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %110, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %110, align 8
  %112 = icmp eq %"class.SkSL::Expression"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = bitcast %"class.SkSL::Expression"* %111 to void (%"class.SkSL::Expression"*)***
  %115 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %115, i64 1
  %117 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %116, align 8
  call void %117(%"class.SkSL::Expression"* nonnull %111) #15
  br label %118

118:                                              ; preds = %113, %107
  %119 = add nuw nsw i64 %108, 1
  %120 = load i64, i64* %7, align 8
  %121 = lshr i64 %120, 1
  %122 = and i64 %121, 2147483647
  %123 = icmp ult i64 %119, %122
  br i1 %123, label %107, label %103

124:                                              ; preds = %103
  %125 = load i8*, i8** %8, align 8
  call void @_Z7sk_freePv(i8* %125) #15
  br label %126

126:                                              ; preds = %103, %124
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #15
  %127 = bitcast i8* %42 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %127

128:                                              ; preds = %35, %128
  %129 = phi %"class.std::__1::unique_ptr"* [ %27, %35 ], [ %148, %128 ]
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %129, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %130, align 8
  %132 = bitcast %"class.SkSL::Expression"* %131 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %133 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %132, align 8
  %134 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %133, i64 10
  %135 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %134, align 8
  %136 = call %"class.SkSL::Expression"* %135(%"class.SkSL::Expression"* %131) #15
  %137 = ptrtoint %"class.SkSL::Expression"* %136 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.143* %9, i32 1, i32 1) #15
  %138 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 8
  %139 = load i64, i64* %7, align 8
  %140 = lshr i64 %139, 1
  %141 = and i64 %140, 2147483647
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 %141
  %143 = add i64 %139, 2
  %144 = and i64 %143, 4294967294
  %145 = and i64 %139, -4294967295
  %146 = or i64 %144, %145
  store i64 %146, i64* %7, align 8
  %147 = bitcast %"class.std::__1::unique_ptr"* %142 to i64*
  store i64 %137, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %129, i64 1
  %149 = icmp eq %"class.std::__1::unique_ptr"* %148, %33
  br i1 %149, label %37, label %128
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #4

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL10SwitchCaseD2Ev(%"class.SkSL::SwitchCase"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %17 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %17, i64 1
  %19 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, align 8
  tail call void %19(%"class.SkSL::Expression"* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL10SwitchCaseD0Ev(%"class.SkSL::SwitchCase"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %17 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %17, i64 1
  %19 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, align 8
  tail call void %19(%"class.SkSL::Expression"* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.SkSL::SwitchCase"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL10SwitchCase11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::SwitchCase"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  %8 = icmp eq %"class.SkSL::Expression"* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Expression"* %7 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %13 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %13, i64 2
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %14, align 8
  call void %15(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::IRNode"* %11) #15
  %16 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %19, i8* %21, i8* %10
  %23 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %25, i64 0, i32 0
  %27 = bitcast %"class.SkSL::Statement"* %25 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %28 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %28, i64 2
  %30 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %29, align 8
  call void %30(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %26) #15
  %31 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = select i1 %34, i8* %36, i8* %23
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %37) #15
  %38 = load i8, i8* %32, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %9
  %41 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %41) #17
  br label %42

42:                                               ; preds = %9, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  %43 = load i8, i8* %17, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %42
  %46 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %46) #17
  br label %67

47:                                               ; preds = %2
  %48 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %49, align 8
  %51 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %50, i64 0, i32 0
  %52 = bitcast %"class.SkSL::Statement"* %50 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %53 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %53, i64 2
  %55 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %54, align 8
  call void %55(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %51) #15
  %56 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = select i1 %59, i8* %61, i8* %48
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0), i8* %62) #15
  %63 = load i8, i8* %57, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %47
  %66 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %66) #17
  br label %67

67:                                               ; preds = %65, %47, %45, %42
  %68 = phi i8* [ %10, %42 ], [ %10, %45 ], [ %48, %47 ], [ %48, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL10SwitchCase5cloneEv(%"class.SkSL::SwitchCase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %8 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %8, i64 10
  %10 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %9, align 8
  %11 = tail call %"class.SkSL::Expression"* %10(%"class.SkSL::Expression"* nonnull %4) #15
  %12 = ptrtoint %"class.SkSL::Expression"* %11 to i64
  br label %13

13:                                               ; preds = %1, %6
  %14 = phi i64 [ %12, %6 ], [ 0, %1 ]
  %15 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %15, align 8
  %17 = bitcast %"class.SkSL::Statement"* %16 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %18 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %18, i64 4
  %20 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %19, align 8
  %21 = tail call %"class.SkSL::Statement"* %20(%"class.SkSL::Statement"* %16) #15
  %22 = ptrtoint %"class.SkSL::Statement"* %21 to i64
  %23 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #15
  %24 = load i32, i32* %2, align 4
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 12
  %28 = bitcast i8* %27 to i32*
  store i32 28, i32* %28, align 4
  %29 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %14, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %23, i64 24
  %33 = bitcast i8* %32 to i64*
  store i64 %22, i64* %33, align 8
  %34 = bitcast i8* %23 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %34
}

declare void @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.119"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.115"*, %"class.SkSL::Variable"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.393"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::Variable"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::Variable"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !18
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.119"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.119"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.119"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.119"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.119"* %65 to %"class.SkSL::Variable"**
  %67 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %66, align 8
  %68 = icmp eq %"class.SkSL::Variable"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #17, !noalias !31
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !31
  %75 = load i64, i64* %74, align 8, !noalias !31
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !31
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8, !noalias !31
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !31
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.119"**
  store %"struct.std::__1::__hash_node_base.119"* null, %"struct.std::__1::__hash_node_base.119"** %81, align 8, !noalias !31
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !18
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #15
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm(%"class.std::__1::__hash_table.115"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #15, !range !18
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.119"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.119"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.119"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.119"* %124, %"struct.std::__1::__hash_node_base.119"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.119"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.119"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #15, !range !18
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.119"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.119"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.119"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.119"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.119"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.119"*, i8 } undef, %"struct.std::__1::__hash_node_base.119"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.119"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.119"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm(%"class.std::__1::__hash_table.115"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !18
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table.115"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !18
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !18
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table.115"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table.115"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.115"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.119"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.119"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.121", %"class.std::__1::__bucket_list_deallocator.121"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.119"* null, %"struct.std::__1::__hash_node_base.119"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !34

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.119"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.119"* null, %"struct.std::__1::__hash_node_base.119"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.119"* null, %"struct.std::__1::__hash_node_base.119"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.119"* null, %"struct.std::__1::__hash_node_base.119"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.119"* null, %"struct.std::__1::__hash_node_base.119"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.119"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !18
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.119"* %36, %"struct.std::__1::__hash_node_base.119"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.119"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.119"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.119"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.119"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.119"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.119"* %101 to %"class.SkSL::Variable"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.119"* %82, %"struct.std::__1::__hash_node_base.119"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.119"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.119"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.119"* %110 to %"class.SkSL::Variable"**
  %112 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %102, align 8
  %113 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %111, align 8
  %114 = icmp eq %"class.SkSL::Variable"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.119"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.119"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.119"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.119"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.119"* %80, %"struct.std::__1::__hash_node_base.119"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.119"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.119"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.119"** null, %"struct.std::__1::__hash_node_base.119"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.119"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.119"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #17
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.121", %"class.std::__1::__bucket_list_deallocator.121"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.88"*, %"class.std::__1::unique_ptr.90"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.90"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.88"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.88"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.90"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.90"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.90"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.90"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.90"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.90"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.90"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.90"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.90"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.90"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.90"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.90"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.90"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !35

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.90"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.90"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.90"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.90"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.90"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.90"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.90"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.90"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.90"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.90"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.90"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.90"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.90"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.90"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.90"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.90"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.90"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.90"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.90"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.90"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.90"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.90"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.90"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.90"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.90"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.90"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.90"*
  %138 = icmp eq %"class.std::__1::unique_ptr.90"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.90"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.90"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #17
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, %"class.SkSL::Symbol"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.119"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.115"*, %"class.SkSL::Variable"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.405"* dereferenceable(8), %"class.std::__1::tuple.393"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::Variable"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::Variable"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !18
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.119"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.119"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.119"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.119"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.119"* %65 to %"class.SkSL::Variable"**
  %67 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %66, align 8
  %68 = icmp eq %"class.SkSL::Variable"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #17, !noalias !36
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.405"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !36
  %75 = load i64, i64* %74, align 8, !noalias !36
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !36
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8, !noalias !36
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !36
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.119"**
  store %"struct.std::__1::__hash_node_base.119"* null, %"struct.std::__1::__hash_node_base.119"** %81, align 8, !noalias !36
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !18
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #15
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm(%"class.std::__1::__hash_table.115"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #15, !range !18
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.119"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.115", %"class.std::__1::__hash_table.115"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.119"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.119"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.119"* %124, %"struct.std::__1::__hash_node_base.119"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.119"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119", %"struct.std::__1::__hash_node_base.119"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.119"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #15, !range !18
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.119"**, %"struct.std::__1::__hash_node_base.119"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.119"*, %"struct.std::__1::__hash_node_base.119"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.119"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.119"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.119"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.119"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.119"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.119"*, i8 } undef, %"struct.std::__1::__hash_node_base.119"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.119"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.119"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.204"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_bEEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.200"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"struct.std::__1::pair.226"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to %"class.SkSL::FunctionDeclaration"*
  br i1 %21, label %67, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #15, !range !18
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.204"* %38, null
  br i1 %39, label %67, label %40

40:                                               ; preds = %33
  %41 = add i64 %20, -1
  br label %42

42:                                               ; preds = %40, %62
  %43 = phi %"struct.std::__1::__hash_node_base.204"* [ %45, %62 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.204"* %45, null
  br i1 %46, label %67, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %45, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.204"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %62, label %52

52:                                               ; preds = %47
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %41
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %20
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %20
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %62, label %67

62:                                               ; preds = %47, %59
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %45, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.204"* %63 to %"class.SkSL::FunctionDeclaration"**
  %65 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %64, align 8
  %66 = icmp eq %"class.SkSL::FunctionDeclaration"* %65, %22
  br i1 %66, label %153, label %42

67:                                               ; preds = %42, %59, %33, %3
  %68 = phi i64 [ %34, %33 ], [ -6148914691236517206, %3 ], [ %34, %59 ], [ %34, %42 ]
  %69 = tail call i8* @_Znwm(i64 32) #17, !noalias !39
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast %"struct.std::__1::pair.226"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 16, i1 false) #15, !noalias !39
  %72 = getelementptr inbounds i8, i8* %69, i64 8
  %73 = bitcast i8* %72 to i64*
  store i64 %18, i64* %73, align 8, !noalias !39
  %74 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.204"**
  store %"struct.std::__1::__hash_node_base.204"* null, %"struct.std::__1::__hash_node_base.204"** %74, align 8, !noalias !39
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 2, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 1
  %78 = uitofp i64 %77 to float
  %79 = uitofp i64 %20 to float
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 3, i32 0, i32 0
  %81 = load float, float* %80, align 4
  %82 = fmul float %81, %79
  %83 = fcmp olt float %82, %78
  %84 = or i1 %21, %83
  br i1 %84, label %85, label %108

85:                                               ; preds = %67
  %86 = shl i64 %20, 1
  %87 = icmp ult i64 %20, 3
  %88 = tail call i64 @llvm.ctpop.i64(i64 %20) #15, !range !18
  %89 = icmp ugt i64 %88, 1
  %90 = or i1 %87, %89
  %91 = zext i1 %90 to i64
  %92 = or i64 %86, %91
  %93 = fdiv float %78, %81
  %94 = tail call float @llvm.ceil.f32(float %93) #15
  %95 = fptoui float %94 to i64
  %96 = icmp ult i64 %92, %95
  %97 = select i1 %96, i64 %95, i64 %92
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.200"* %0, i64 %97)
  %98 = load i64, i64* %19, align 8
  %99 = tail call i64 @llvm.ctpop.i64(i64 %98) #15, !range !18
  %100 = icmp ugt i64 %99, 1
  br i1 %100, label %104, label %101

101:                                              ; preds = %85
  %102 = add i64 %98, -1
  %103 = and i64 %102, %18
  br label %108

104:                                              ; preds = %85
  %105 = icmp ult i64 %18, %98
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = urem i64 %18, %98
  br label %108

108:                                              ; preds = %106, %104, %101, %67
  %109 = phi i64 [ %20, %67 ], [ %98, %101 ], [ %98, %104 ], [ %98, %106 ]
  %110 = phi i64 [ %68, %67 ], [ %103, %101 ], [ %18, %104 ], [ %107, %106 ]
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %112, i64 %110
  %114 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.204"* %114, null
  br i1 %115, label %116, label %142

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 1, i32 0, i32 0
  %118 = bitcast %"struct.std::__1::__hash_node_base.204"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8* %69 to i64*
  store i64 %119, i64* %120, align 8
  %121 = bitcast %"struct.std::__1::__hash_node_base.204"* %117 to i8**
  store i8* %69, i8** %121, align 8
  store %"struct.std::__1::__hash_node_base.204"* %117, %"struct.std::__1::__hash_node_base.204"** %113, align 8
  %122 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %74, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.204"* %122, null
  br i1 %123, label %149, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %122, i64 1
  %126 = bitcast %"struct.std::__1::__hash_node_base.204"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = tail call i64 @llvm.ctpop.i64(i64 %109) #15, !range !18
  %129 = icmp ugt i64 %128, 1
  br i1 %129, label %133, label %130

130:                                              ; preds = %124
  %131 = add i64 %109, -1
  %132 = and i64 %127, %131
  br label %137

133:                                              ; preds = %124
  %134 = icmp ult i64 %127, %109
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = urem i64 %127, %109
  br label %137

137:                                              ; preds = %130, %133, %135
  %138 = phi i64 [ %132, %130 ], [ %136, %135 ], [ %127, %133 ]
  %139 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %111, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %139, i64 %138
  %141 = bitcast %"struct.std::__1::__hash_node_base.204"** %140 to i8**
  br label %147

142:                                              ; preds = %108
  %143 = bitcast %"struct.std::__1::__hash_node_base.204"* %114 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast i8* %69 to i64*
  store i64 %144, i64* %145, align 8
  %146 = bitcast %"struct.std::__1::__hash_node_base.204"* %114 to i8**
  br label %147

147:                                              ; preds = %137, %142
  %148 = phi i8** [ %146, %142 ], [ %141, %137 ]
  store i8* %69, i8** %148, align 8
  br label %149

149:                                              ; preds = %147, %116
  %150 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.204"*
  %151 = load i64, i64* %75, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %75, align 8
  br label %153

153:                                              ; preds = %62, %149
  %154 = phi i8 [ 1, %149 ], [ 0, %62 ]
  %155 = phi %"struct.std::__1::__hash_node_base.204"* [ %150, %149 ], [ %45, %62 ]
  %156 = insertvalue { %"struct.std::__1::__hash_node_base.204"*, i8 } undef, %"struct.std::__1::__hash_node_base.204"* %155, 0
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.204"*, i8 } %156, i8 %154, 1
  ret { %"struct.std::__1::__hash_node_base.204"*, i8 } %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.200"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !18
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.200"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !18
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !18
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.200"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.200"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.200"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.204"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.204"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.206", %"class.std::__1::__bucket_list_deallocator.206"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.204"* null, %"struct.std::__1::__hash_node_base.204"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !42

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.204"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.204"* null, %"struct.std::__1::__hash_node_base.204"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.204"* null, %"struct.std::__1::__hash_node_base.204"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.204"* null, %"struct.std::__1::__hash_node_base.204"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.204"* null, %"struct.std::__1::__hash_node_base.204"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.204"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !18
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.204"* %36, %"struct.std::__1::__hash_node_base.204"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.204"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.204"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.204"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.204"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.204"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.204"* %101 to %"class.SkSL::FunctionDeclaration"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.204"* %82, %"struct.std::__1::__hash_node_base.204"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.204"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.204"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.204"* %110 to %"class.SkSL::FunctionDeclaration"**
  %112 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %102, align 8
  %113 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %111, align 8
  %114 = icmp eq %"class.SkSL::FunctionDeclaration"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.204"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.204"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.204"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.204"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.204"* %80, %"struct.std::__1::__hash_node_base.204"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.204"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.204", %"struct.std::__1::__hash_node_base.204"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.204"*, %"struct.std::__1::__hash_node_base.204"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.204"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.200", %"class.std::__1::__hash_table.200"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.204"**, %"struct.std::__1::__hash_node_base.204"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.204"** null, %"struct.std::__1::__hash_node_base.204"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.204"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.204"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #17
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.206", %"class.std::__1::__bucket_list_deallocator.206"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.233"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_iEEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.229"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"struct.std::__1::pair.256"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to %"class.SkSL::FunctionDeclaration"*
  br i1 %21, label %67, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #15, !range !18
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.233"* %38, null
  br i1 %39, label %67, label %40

40:                                               ; preds = %33
  %41 = add i64 %20, -1
  br label %42

42:                                               ; preds = %40, %62
  %43 = phi %"struct.std::__1::__hash_node_base.233"* [ %45, %62 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.233"* %45, null
  br i1 %46, label %67, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %45, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.233"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %62, label %52

52:                                               ; preds = %47
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %41
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %20
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %20
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %62, label %67

62:                                               ; preds = %47, %59
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %45, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.233"* %63 to %"class.SkSL::FunctionDeclaration"**
  %65 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %64, align 8
  %66 = icmp eq %"class.SkSL::FunctionDeclaration"* %65, %22
  br i1 %66, label %153, label %42

67:                                               ; preds = %42, %59, %33, %3
  %68 = phi i64 [ %34, %33 ], [ -6148914691236517206, %3 ], [ %34, %59 ], [ %34, %42 ]
  %69 = tail call i8* @_Znwm(i64 32) #17, !noalias !43
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast %"struct.std::__1::pair.256"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 16, i1 false) #15, !noalias !43
  %72 = getelementptr inbounds i8, i8* %69, i64 8
  %73 = bitcast i8* %72 to i64*
  store i64 %18, i64* %73, align 8, !noalias !43
  %74 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.233"**
  store %"struct.std::__1::__hash_node_base.233"* null, %"struct.std::__1::__hash_node_base.233"** %74, align 8, !noalias !43
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 2, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 1
  %78 = uitofp i64 %77 to float
  %79 = uitofp i64 %20 to float
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 3, i32 0, i32 0
  %81 = load float, float* %80, align 4
  %82 = fmul float %81, %79
  %83 = fcmp olt float %82, %78
  %84 = or i1 %21, %83
  br i1 %84, label %85, label %108

85:                                               ; preds = %67
  %86 = shl i64 %20, 1
  %87 = icmp ult i64 %20, 3
  %88 = tail call i64 @llvm.ctpop.i64(i64 %20) #15, !range !18
  %89 = icmp ugt i64 %88, 1
  %90 = or i1 %87, %89
  %91 = zext i1 %90 to i64
  %92 = or i64 %86, %91
  %93 = fdiv float %78, %81
  %94 = tail call float @llvm.ceil.f32(float %93) #15
  %95 = fptoui float %94 to i64
  %96 = icmp ult i64 %92, %95
  %97 = select i1 %96, i64 %95, i64 %92
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.229"* %0, i64 %97)
  %98 = load i64, i64* %19, align 8
  %99 = tail call i64 @llvm.ctpop.i64(i64 %98) #15, !range !18
  %100 = icmp ugt i64 %99, 1
  br i1 %100, label %104, label %101

101:                                              ; preds = %85
  %102 = add i64 %98, -1
  %103 = and i64 %102, %18
  br label %108

104:                                              ; preds = %85
  %105 = icmp ult i64 %18, %98
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = urem i64 %18, %98
  br label %108

108:                                              ; preds = %106, %104, %101, %67
  %109 = phi i64 [ %20, %67 ], [ %98, %101 ], [ %98, %104 ], [ %98, %106 ]
  %110 = phi i64 [ %68, %67 ], [ %103, %101 ], [ %18, %104 ], [ %107, %106 ]
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %112, i64 %110
  %114 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.233"* %114, null
  br i1 %115, label %116, label %142

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 1, i32 0, i32 0
  %118 = bitcast %"struct.std::__1::__hash_node_base.233"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8* %69 to i64*
  store i64 %119, i64* %120, align 8
  %121 = bitcast %"struct.std::__1::__hash_node_base.233"* %117 to i8**
  store i8* %69, i8** %121, align 8
  store %"struct.std::__1::__hash_node_base.233"* %117, %"struct.std::__1::__hash_node_base.233"** %113, align 8
  %122 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %74, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.233"* %122, null
  br i1 %123, label %149, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %122, i64 1
  %126 = bitcast %"struct.std::__1::__hash_node_base.233"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = tail call i64 @llvm.ctpop.i64(i64 %109) #15, !range !18
  %129 = icmp ugt i64 %128, 1
  br i1 %129, label %133, label %130

130:                                              ; preds = %124
  %131 = add i64 %109, -1
  %132 = and i64 %127, %131
  br label %137

133:                                              ; preds = %124
  %134 = icmp ult i64 %127, %109
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = urem i64 %127, %109
  br label %137

137:                                              ; preds = %130, %133, %135
  %138 = phi i64 [ %132, %130 ], [ %136, %135 ], [ %127, %133 ]
  %139 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %111, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %139, i64 %138
  %141 = bitcast %"struct.std::__1::__hash_node_base.233"** %140 to i8**
  br label %147

142:                                              ; preds = %108
  %143 = bitcast %"struct.std::__1::__hash_node_base.233"* %114 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast i8* %69 to i64*
  store i64 %144, i64* %145, align 8
  %146 = bitcast %"struct.std::__1::__hash_node_base.233"* %114 to i8**
  br label %147

147:                                              ; preds = %137, %142
  %148 = phi i8** [ %146, %142 ], [ %141, %137 ]
  store i8* %69, i8** %148, align 8
  br label %149

149:                                              ; preds = %147, %116
  %150 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.233"*
  %151 = load i64, i64* %75, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %75, align 8
  br label %153

153:                                              ; preds = %62, %149
  %154 = phi i8 [ 1, %149 ], [ 0, %62 ]
  %155 = phi %"struct.std::__1::__hash_node_base.233"* [ %150, %149 ], [ %45, %62 ]
  %156 = insertvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } undef, %"struct.std::__1::__hash_node_base.233"* %155, 0
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } %156, i8 %154, 1
  ret { %"struct.std::__1::__hash_node_base.233"*, i8 } %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.229"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !18
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.229"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !18
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !18
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.229"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.229"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.229"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.233"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.233"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.235", %"class.std::__1::__bucket_list_deallocator.235"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.233"* null, %"struct.std::__1::__hash_node_base.233"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !46

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.233"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.233"* null, %"struct.std::__1::__hash_node_base.233"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.233"* null, %"struct.std::__1::__hash_node_base.233"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.233"* null, %"struct.std::__1::__hash_node_base.233"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.233"* null, %"struct.std::__1::__hash_node_base.233"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.233"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !18
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.233"* %36, %"struct.std::__1::__hash_node_base.233"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.233"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.233"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.233"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.233"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.233"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.233"* %101 to %"class.SkSL::FunctionDeclaration"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.233"* %82, %"struct.std::__1::__hash_node_base.233"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.233"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.233"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.233"* %110 to %"class.SkSL::FunctionDeclaration"**
  %112 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %102, align 8
  %113 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %111, align 8
  %114 = icmp eq %"class.SkSL::FunctionDeclaration"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.233"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.233"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.233"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.233"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.233"* %80, %"struct.std::__1::__hash_node_base.233"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.233"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.233"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.233"** null, %"struct.std::__1::__hash_node_base.233"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.233"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.233"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #17
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.235", %"class.std::__1::__bucket_list_deallocator.235"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.233"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.229"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.430"* dereferenceable(8), %"class.std::__1::tuple.393"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::FunctionDeclaration"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !18
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.233"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.233"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.233"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.233"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.233"* %65 to %"class.SkSL::FunctionDeclaration"**
  %67 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %66, align 8
  %68 = icmp eq %"class.SkSL::FunctionDeclaration"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #17, !noalias !47
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.430"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !47
  %75 = load i64, i64* %74, align 8, !noalias !47
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !47
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !47
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !47
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.233"**
  store %"struct.std::__1::__hash_node_base.233"* null, %"struct.std::__1::__hash_node_base.233"** %81, align 8, !noalias !47
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !18
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #15
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.229"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #15, !range !18
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.233"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.229", %"class.std::__1::__hash_table.229"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.233"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.233"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.233"* %124, %"struct.std::__1::__hash_node_base.233"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.233"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.233"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #15, !range !18
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.233"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.233"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.233"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.233"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.233"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } undef, %"struct.std::__1::__hash_node_base.233"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.233"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.233"*, i8 } %164
}

declare i32 @_ZNK4SkSL12ProgramUsage3getERKNS_19FunctionDeclarationE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.301"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS8_JRKNS_21piecewise_construct_tENS_5tupleIJRKS8_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.297"*, %"class.std::__1::unique_ptr.23"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.439"* dereferenceable(8), %"class.std::__1::tuple.393"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::unique_ptr.23"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.23"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !18
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.301"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.301"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.301"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.301"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.301"* %65 to %"class.std::__1::unique_ptr.23"**
  %67 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %66, align 8
  %68 = icmp eq %"class.std::__1::unique_ptr.23"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #17, !noalias !50
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.439"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !50
  %75 = load i64, i64* %74, align 8, !noalias !50
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !50
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.std::__1::unique_ptr.23"**
  store %"class.std::__1::unique_ptr.23"* null, %"class.std::__1::unique_ptr.23"** %78, align 8, !noalias !50
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !50
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.301"**
  store %"struct.std::__1::__hash_node_base.301"* null, %"struct.std::__1::__hash_node_base.301"** %81, align 8, !noalias !50
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !18
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #15
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.297"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #15, !range !18
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.301"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.301"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.301"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.301"* %124, %"struct.std::__1::__hash_node_base.301"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.301"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.301"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #15, !range !18
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.301"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.301"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.301"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.301"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.301"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.301"*, i8 } undef, %"struct.std::__1::__hash_node_base.301"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.301"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.301"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.297"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !18
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.297"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !18
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !18
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.297"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.297"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.297"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.301"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.301"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.303", %"class.std::__1::__bucket_list_deallocator.303"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.301"* null, %"struct.std::__1::__hash_node_base.301"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !53

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.301"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.301"* null, %"struct.std::__1::__hash_node_base.301"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.301"* null, %"struct.std::__1::__hash_node_base.301"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.301"* null, %"struct.std::__1::__hash_node_base.301"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.301"* null, %"struct.std::__1::__hash_node_base.301"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.301"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !18
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.301"* %36, %"struct.std::__1::__hash_node_base.301"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.301"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.301"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.301"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.301"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.301"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.301"* %101 to %"class.std::__1::unique_ptr.23"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.301"* %82, %"struct.std::__1::__hash_node_base.301"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.301"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.301"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.301"* %110 to %"class.std::__1::unique_ptr.23"**
  %112 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %102, align 8
  %113 = load %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"** %111, align 8
  %114 = icmp eq %"class.std::__1::unique_ptr.23"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.301"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.301"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.301"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.301"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.301"* %80, %"struct.std::__1::__hash_node_base.301"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.301"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.301", %"struct.std::__1::__hash_node_base.301"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.301"*, %"struct.std::__1::__hash_node_base.301"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.301"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.297", %"class.std::__1::__hash_table.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.301"**, %"struct.std::__1::__hash_node_base.301"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.301"** null, %"struct.std::__1::__hash_node_base.301"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.301"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.301"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #17
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.303", %"class.std::__1::__bucket_list_deallocator.303"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE: argument 0"}
!5 = distinct !{!5, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE: argument 0"}
!8 = distinct !{!8, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE: argument 0"}
!11 = distinct !{!11, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE: argument 0"}
!14 = distinct !{!14, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE: argument 0"}
!17 = distinct !{!17, !"_ZZN4SkSL7Inliner16inlineExpressionEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableERKS7_ENK3$_1clERK9SkSTArrayILi2ESA_Lb0EE"}
!18 = !{i64 0, i64 65}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEbENK3$_2clERKNS_5BlockE: argument 0"}
!21 = distinct !{!21, !"_ZZN4SkSL7Inliner15inlineStatementEiPNSt3__113unordered_mapIPKNS_8VariableENS1_10unique_ptrINS_10ExpressionENS1_14default_deleteIS7_EEEENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_SA_EEEEEEPNS_11SymbolTableEPSA_NS0_16ReturnComplexityERKNS_9StatementEbENK3$_2clERKNS_5BlockE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.disable"}
!27 = distinct !{!27, !26}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !26}
!30 = distinct !{!30, !26}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSR_IJEEEEEENS6_INS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSK_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSR_IJEEEEEENS6_INS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSK_ISX_EEEEEEmOT_DpOT0_"}
!34 = distinct !{!34, !26}
!35 = distinct !{!35, !26}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSR_IJEEEEEENS6_INS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSK_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS_10unique_ptrINS2_10ExpressionENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSR_IJEEEEEENS6_INS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSK_ISY_EEEEEEmOT_DpOT0_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIKS5_bEEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEbEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIKS5_bEEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_"}
!42 = distinct !{!42, !26}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIKS5_iEEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIKS5_iEEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_"}
!46 = distinct !{!46, !26}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS8_EEENSP_IJEEEEEENS2_INS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPNS_10unique_ptrIN4SkSL9StatementENS_14default_deleteIS4_EEEES8_EENS_22__unordered_map_hasherIS8_S9_NS_4hashIS8_EENS_8equal_toIS8_EELb1EEENS_21__unordered_map_equalIS8_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS8_EEENSP_IJEEEEEENS2_INS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISW_EEEEEEmOT_DpOT0_"}
!53 = distinct !{!53, !26}
