; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/dead_branch_elim_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/dead_branch_elim_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::DeadBranchElimPass" = type { %"class.spvtools::opt::MemPass" }
%"class.spvtools::opt::MemPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1048" = type { i8 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::unordered_set.933" = type { %"class.std::__1::__hash_table.934" }
%"class.std::__1::__hash_table.934" = type <{ %"class.std::__1::unique_ptr.935", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.950", %"class.std::__1::__compressed_pair.954", [4 x i8] }>
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937", %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"struct.std::__1::__hash_node_base.938"** }
%"struct.std::__1::__hash_node_base.938" = type { %"struct.std::__1::__hash_node_base.938"* }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.std::__1::__bucket_list_deallocator.940" }
%"class.std::__1::__bucket_list_deallocator.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"struct.std::__1::__hash_node_base.938" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.959" = type { %"class.std::__1::__vector_base.960" }
%"class.std::__1::__vector_base.960" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.961" }
%"struct.std::__1::pair" = type <{ %"class.spvtools::opt::BasicBlock"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.966" = type { %"class.std::__1::__vector_base.967" }
%"class.std::__1::__vector_base.967" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::function.975" = type { %"class.std::__1::__function::__policy_func.979" }
%"class.std::__1::__function::__policy_func.979" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.980", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.980" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.981" = type { %"class.std::__1::__function::__policy_func.985" }
%"class.std::__1::__function::__policy_func.985" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.986", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.986" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::function.1027" = type { %"class.std::__1::__function::__policy_func.1031" }
%"class.std::__1::__function::__policy_func.1031" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1032", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1032" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.1034" = type { %"class.std::__1::__function::__policy_func.1038" }
%"class.std::__1::__function::__policy_func.1038" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1039", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1039" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::tuple.1128" = type { %"struct.std::__1::__tuple_impl.1129" }
%"struct.std::__1::__tuple_impl.1129" = type { %"class.std::__1::__tuple_leaf.1130" }
%"class.std::__1::__tuple_leaf.1130" = type { %"class.spvtools::opt::BasicBlock"** }
%"struct.std::__1::__hash_node.1100" = type { %"struct.std::__1::__hash_node_base.938", i64, %"class.spvtools::opt::BasicBlock"* }
%"class.std::initializer_list.932" = type { i32*, i64 }
%"class.std::__1::allocator.12" = type { i8 }
%"class.std::initializer_list" = type { %"struct.spvtools::opt::Operand"*, i64 }
%"struct.std::__1::default_delete.44" = type { i8 }
%"class.std::__1::function.1015" = type { %"class.std::__1::__function::__policy_func.1019" }
%"class.std::__1::__function::__policy_func.1019" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1020", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1020" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* }
%"class.std::__1::__tree_node.1082" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1042" }
%"struct.std::__1::pair.1042" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.1061" = type { %"class.std::__1::__function::__policy_func.1065" }
%"class.std::__1::__function::__policy_func.1065" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1066", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1066" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__function::__default_alloc_func.1118" = type { %class.anon }
%class.anon = type { i32*, i32*, i32*, i32* }
%"class.spvtools::opt::TreeDFIterator" = type { %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::stack" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.1142", i32, i32 }
%"class.std::__1::vector.1142" = type { %"class.std::__1::__vector_base.1143" }
%"class.std::__1::__vector_base.1143" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer.1158", i64, %"class.std::__1::__compressed_pair.1166" }
%"struct.std::__1::__split_buffer.1158" = type { %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"**, %"class.std::__1::__compressed_pair.1161" }
%"struct.std::__1::pair.1159" = type { %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::__wrap_iter.1160" }
%"class.std::__1::__wrap_iter.1160" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"struct.std::__1::pair.1159"** }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.1142", %"class.std::__1::map.1149", i8, [7 x i8] }>
%"class.std::__1::map.1149" = type { %"class.std::__1::__tree.1150" }
%"class.std::__1::__tree.1150" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1151", %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__split_buffer.1170" = type { %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"**, %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1162", %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.std::__1::allocator.1164"* }
%"class.std::__1::allocator.1164" = type { i8 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1181" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__function::__default_alloc_func.1197" = type { %class.anon.1033 }
%class.anon.1033 = type { i32, %"class.std::__1::unordered_set.910"*, %"class.std::__1::vector.3"*, i8* }
%"class.std::__1::__function::__default_alloc_func.1199" = type { %class.anon.1040 }
%class.anon.1040 = type <{ %"class.spvtools::opt::DeadBranchElimPass"*, %"class.spvtools::opt::StructuredCFGAnalysis"*, i32, [4 x i8] }>

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_ = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEj = comdat any

$_ZN8spvtools3opt7MemPassD2Ev = comdat any

$_ZN8spvtools3opt18DeadBranchElimPassD0Ev = comdat any

$_ZNK8spvtools3opt18DeadBranchElimPass4nameEv = comdat any

$_ZN8spvtools3opt18DeadBranchElimPass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZN8spvtools3opt7MemPassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJ18spv_operand_type_tSt16initializer_listIjEEEEvDpOT_ = comdat any

$_ZNSt3__19allocatorIN8spvtools3opt7OperandEE9constructIS3_J18spv_operand_type_tSt16initializer_listIjEEEEvPT_DpOT0_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt13DominatorTree5beginEv = comdat any

$_ZN8spvtools3opt8Function21MoveBasicBlockToAfterEjPNS0_10BasicBlockE = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_ = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm = comdat any

$_ZN8spvtools3opt14TreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt7MemPassE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

@_ZTVN8spvtools3opt18DeadBranchElimPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::DeadBranchElimPass"*)* @_ZN8spvtools3opt18DeadBranchElimPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::DeadBranchElimPass"*)* @_ZNK8spvtools3opt18DeadBranchElimPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::DeadBranchElimPass"*)* @_ZN8spvtools3opt18DeadBranchElimPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::DeadBranchElimPass"*)* @_ZN8spvtools3opt18DeadBranchElimPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt7MemPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"eliminate-dead-branches\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass13FixBlockOrderEvE3$_2FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass13FixBlockOrderEvE3$_3FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass7ProcessEvE3$_4FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass17GetConstConditionEjPb(%"class.spvtools::opt::DeadBranchElimPass"* nocapture, i32, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #11
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #12
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #12
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #12
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %1) #12
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  switch i32 %40, label %60 [
    i32 46, label %41
    i32 42, label %41
    i32 41, label %42
    i32 168, label %43
  ]

41:                                               ; preds = %35, %35
  store i8 0, i8* %2, align 1
  br label %60

42:                                               ; preds = %35
  store i8 1, i8* %2, align 1
  br label %60

43:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 3
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 4
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i32 1, i32 2
  %51 = xor i1 %49, true
  %52 = zext i1 %51 to i32
  %53 = select i1 %46, i32 %52, i32 %50
  %54 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %38, i32 %53) #12
  %55 = call zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass17GetConstConditionEjPb(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %54, i8* nonnull %4)
  br i1 %55, label %56, label %59

56:                                               ; preds = %43
  %57 = load i8, i8* %4, align 1, !range !2
  %58 = xor i8 %57, 1
  store i8 %58, i8* %2, align 1
  br label %59

59:                                               ; preds = %56, %43
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br label %60

60:                                               ; preds = %35, %59, %42, %41
  %61 = phi i1 [ %55, %59 ], [ true, %42 ], [ true, %41 ], [ false, %35 ]
  ret i1 %61
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass15GetConstIntegerEjPj(%"class.spvtools::opt::DeadBranchElimPass"* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #11
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #12
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #12
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #12
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %36, i32 %1) #12
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 0) #12
  br label %43

43:                                               ; preds = %34, %41
  %44 = phi i32 [ %42, %41 ], [ 0, %34 ]
  %45 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 11
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %74

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %51, align 8
  %53 = tail call i8* @_Znwm(i64 104) #11
  %54 = bitcast i8* %53 to %"class.spvtools::opt::analysis::DefUseManager"*
  %55 = getelementptr inbounds i8, i8* %53, i64 32
  %56 = bitcast i8* %55 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %53, i64 48
  %58 = getelementptr inbounds i8, i8* %53, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #12
  %59 = bitcast i8* %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 64
  %61 = getelementptr inbounds i8, i8* %53, i64 96
  %62 = bitcast i8* %61 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %62, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %54, %"class.spvtools::opt::Module"* %52) #12
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 6
  %64 = ptrtoint i8* %53 to i64
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %65, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.62"* %63 to i64*
  store i64 %64, i64* %67, align 8
  %68 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %66, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %50
  %70 = bitcast %"class.std::__1::unique_ptr.62"* %63 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %70, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %66) #12
  br label %71

71:                                               ; preds = %69, %50
  %72 = load i32, i32* %46, align 8
  %73 = or i32 %72, 1
  store i32 %73, i32* %46, align 8
  br label %74

74:                                               ; preds = %43, %71
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 6, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %75, align 8
  %77 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %76, i32 %44) #12
  %78 = icmp eq %"class.spvtools::opt::Instruction"* %77, null
  br i1 %78, label %111, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 2
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 21
  br i1 %82, label %83, label %111

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 3
  %85 = load i8, i8* %84, align 4, !range !2
  %86 = icmp eq i8 %85, 0
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 4
  %88 = load i8, i8* %87, align 1, !range !2
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, i32 1, i32 2
  %91 = xor i1 %89, true
  %92 = zext i1 %91 to i32
  %93 = select i1 %86, i32 %92, i32 %90
  %94 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %77, i32 %93) #12
  %95 = icmp eq i32 %94, 32
  br i1 %95, label %96, label %111

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 2
  %98 = load i32, i32* %97, align 8
  switch i32 %98, label %111 [
    i32 43, label %99
    i32 46, label %110
  ]

99:                                               ; preds = %96
  %100 = load i8, i8* %38, align 4, !range !2
  %101 = icmp eq i8 %100, 0
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 4
  %103 = load i8, i8* %102, align 1, !range !2
  %104 = icmp eq i8 %103, 0
  %105 = select i1 %104, i32 1, i32 2
  %106 = xor i1 %104, true
  %107 = zext i1 %106 to i32
  %108 = select i1 %101, i32 %107, i32 %105
  %109 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 %108) #12
  store i32 %109, i32* %2, align 4
  br label %111

110:                                              ; preds = %96
  store i32 0, i32* %2, align 4
  br label %111

111:                                              ; preds = %96, %83, %74, %79, %110, %99
  %112 = phi i1 [ true, %99 ], [ true, %110 ], [ false, %79 ], [ false, %74 ], [ false, %83 ], [ false, %96 ]
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18DeadBranchElimPass9AddBranchEjPNS0_10BasicBlockE(%"class.spvtools::opt::DeadBranchElimPass"* nocapture readonly, i32, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.1048", align 1
  %6 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = tail call i8* @_Znwm(i64 112) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #12
  %15 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %20 = bitcast i32** %18 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %19, %"struct.std::__1::aligned_storage<4, 4>::type"** %20, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %22 = bitcast %"class.std::__1::unique_ptr.0"* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %19 to i32*
  store i64 1, i64* %17, align 8
  store i32 %1, i32* %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %24, align 8
  %25 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 2
  %29 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 3, i64 0
  %30 = bitcast i32** %28 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %29, %"struct.std::__1::aligned_storage<4, 4>::type"** %30, align 8
  %31 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4
  %32 = bitcast %"class.std::__1::unique_ptr.0"* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %25, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #12
  %34 = call i8* @_Znwm(i64 48) #11
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %34, i64 48
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.spvtools::opt::Operand"** %38 to i8**
  store i8* %37, i8** %39, align 8
  %40 = bitcast i8* %34 to i32*
  %41 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = getelementptr inbounds i8, i8* %34, i64 8
  %44 = bitcast i8* %43 to %"class.spvtools::utils::SmallVector"*
  %45 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %46 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %34, i64 16
  %48 = bitcast i8* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %34, i64 24
  %50 = getelementptr inbounds i8, i8* %34, i64 32
  %51 = bitcast i8* %49 to i8**
  store i8* %50, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %34, i64 40
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %44, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %45) #12
  %55 = getelementptr inbounds i8, i8* %34, i64 48
  %56 = bitcast i8* %10 to %"class.spvtools::opt::Instruction"*
  %57 = bitcast %"struct.spvtools::opt::Operand"** %35 to i64*
  %58 = ptrtoint i8* %55 to i64
  store i64 %58, i64* %57, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %56, %"class.spvtools::opt::IRContext"* %12, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #12
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %59, align 8
  %61 = icmp eq %"struct.spvtools::opt::Operand"* %60, null
  br i1 %61, label %90, label %62

62:                                               ; preds = %3
  %63 = bitcast %"struct.spvtools::opt::Operand"* %60 to i8*
  %64 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %35, align 8
  %65 = icmp eq %"struct.spvtools::opt::Operand"* %64, %60
  br i1 %65, label %88, label %66

66:                                               ; preds = %62, %84
  %67 = phi %"struct.spvtools::opt::Operand"* [ %68, %84 ], [ %64, %62 ]
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %70, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %70, align 8
  %72 = icmp eq %"class.std::__1::vector.3"* %71, null
  br i1 %72, label %84, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %71, i64 0, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = icmp eq i32* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = ptrtoint i32* %75 to i64
  %79 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %71, i64 0, i32 0, i32 1
  %80 = bitcast i32** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = bitcast i32* %75 to i8*
  call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %77, %73
  %83 = bitcast %"class.std::__1::vector.3"* %71 to i8*
  call void @_ZdlPv(i8* %83) #11
  br label %84

84:                                               ; preds = %82, %66
  %85 = icmp eq %"struct.spvtools::opt::Operand"* %68, %60
  br i1 %85, label %86, label %66

86:                                               ; preds = %84
  %87 = load i8*, i8** %36, align 8
  br label %88

88:                                               ; preds = %86, %62
  %89 = phi i8* [ %87, %86 ], [ %63, %62 ]
  store %"struct.spvtools::opt::Operand"* %60, %"struct.spvtools::opt::Operand"** %35, align 8
  call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %3, %88
  %91 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %93 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %92, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %92, align 8
  %94 = icmp eq %"class.std::__1::vector.3"* %93, null
  br i1 %94, label %106, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %93, i64 0, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = icmp eq i32* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %95
  %100 = ptrtoint i32* %97 to i64
  %101 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %93, i64 0, i32 0, i32 1
  %102 = bitcast i32** %101 to i64*
  store i64 %100, i64* %102, align 8
  %103 = bitcast i32* %97 to i8*
  call void @_ZdlPv(i8* %103) #11
  br label %104

104:                                              ; preds = %99, %95
  %105 = bitcast %"class.std::__1::vector.3"* %93 to i8*
  call void @_ZdlPv(i8* %105) #11
  br label %106

106:                                              ; preds = %90, %104
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %107 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %107, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %107, align 8
  %109 = icmp eq %"class.std::__1::vector.3"* %108, null
  br i1 %109, label %121, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = icmp eq i32* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = ptrtoint i32* %112 to i64
  %116 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 1
  %117 = bitcast i32** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast i32* %112 to i8*
  call void @_ZdlPv(i8* %118) #11
  br label %119

119:                                              ; preds = %114, %110
  %120 = bitcast %"class.std::__1::vector.3"* %108 to i8*
  call void @_ZdlPv(i8* %120) #11
  br label %121

121:                                              ; preds = %106, %119
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  %122 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %122, i64 0, i32 11
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %122, i64 0, i32 6, i32 0, i32 0, i32 0
  %129 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %128, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %129, %"class.spvtools::opt::Instruction"* nonnull %56) #12
  %130 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %130, i64 0, i32 11
  %132 = load i32, i32* %131, align 8
  br label %133

133:                                              ; preds = %121, %127
  %134 = phi i32 [ %124, %121 ], [ %132, %127 ]
  %135 = phi %"class.spvtools::opt::IRContext"* [ %122, %121 ], [ %130, %127 ]
  %136 = bitcast %"class.spvtools::opt::Instruction"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136)
  %137 = bitcast %"class.spvtools::opt::Instruction"** %6 to i8**
  store i8* %10, i8** %137, align 8
  %138 = and i32 %134, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %135, i64 0, i32 9, i32 0
  %142 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #12
  %143 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %6, %"class.spvtools::opt::Instruction"*** %143, align 8
  %144 = getelementptr inbounds %"class.std::__1::tuple.1048", %"class.std::__1::tuple.1048"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %144) #12
  %145 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %141, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1048"* nonnull dereferenceable(1) %5) #12
  %146 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %145, 0
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %146, i64 3
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"* %147 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %144) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #12
  store %"class.spvtools::opt::BasicBlock"* %2, %"class.spvtools::opt::BasicBlock"** %148, align 8
  br label %149

149:                                              ; preds = %133, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136)
  %150 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1
  %151 = getelementptr inbounds i8, i8* %10, i64 8
  %152 = bitcast i8* %151 to %"class.spvtools::opt::Instruction"**
  %153 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %152, align 8
  %154 = icmp eq %"class.spvtools::opt::Instruction"* %153, null
  br i1 %154, label %167, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds i8, i8* %10, i64 16
  %157 = bitcast i8* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %153, i64 0, i32 0, i32 2
  %160 = bitcast %"class.spvtools::opt::Instruction"** %159 to i64*
  store i64 %158, i64* %160, align 8
  %161 = bitcast i8* %151 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast i8* %156 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %164 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %163, align 8
  %165 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %164, i64 0, i32 1
  %166 = bitcast %"class.spvtools::opt::Instruction"** %165 to i64*
  store i64 %162, i64* %166, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 16, i1 false) #12
  br label %167

167:                                              ; preds = %149, %155
  store %"class.spvtools::opt::Instruction"* %150, %"class.spvtools::opt::Instruction"** %152, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %169 = bitcast %"class.spvtools::opt::Instruction"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds i8, i8* %10, i64 16
  %172 = bitcast i8* %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast %"class.spvtools::opt::Instruction"** %168 to i8**
  store i8* %10, i8** %173, align 8
  %174 = inttoptr i64 %170 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %175 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %174, i64 0, i32 1
  %176 = bitcast %"class.spvtools::opt::Instruction"** %175 to i8**
  store i8* %10, i8** %176, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt18DeadBranchElimPass14GetParentBlockEj(%"class.spvtools::opt::DeadBranchElimPass"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 104) #11
  %13 = bitcast i8* %12 to %"class.spvtools::opt::analysis::DefUseManager"*
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = getelementptr inbounds i8, i8* %12, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #12
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 64
  %20 = getelementptr inbounds i8, i8* %12, i64 96
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %21, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %13, %"class.spvtools::opt::Module"* %11) #12
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6
  %23 = ptrtoint i8* %12 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.62"* %22 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %9
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %22 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %29, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %25) #12
  br label %30

30:                                               ; preds = %28, %9
  %31 = load i32, i32* %5, align 8
  %32 = or i32 %31, 1
  store i32 %32, i32* %5, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %34, align 8
  %36 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %35, i32 %1) #12
  %37 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %4, %"class.spvtools::opt::Instruction"* %36)
  ret %"class.spvtools::opt::BasicBlock"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #12, !range !3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS0_8FunctionEPNSt3__113unordered_setIPNS0_10BasicBlockENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::DeadBranchElimPass"*, %"class.spvtools::opt::Function"*, %"class.std::__1::unordered_set.933"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.959", align 8
  %5 = alloca %"class.std::__1::unordered_set.933", align 8
  %6 = alloca %"class.std::__1::vector.966", align 8
  %7 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::function.975", align 8
  %14 = alloca %"class.std::__1::function.981", align 8
  %15 = bitcast %"class.std::__1::vector.959"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.std::__1::vector.959", %"class.std::__1::vector.959"* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.959", %"class.std::__1::vector.959"* %4, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.959", %"class.std::__1::vector.959"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #12
  %19 = bitcast %"class.std::__1::unordered_set.933"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %5, i64 0, i32 0, i32 4, i64 0
  %24 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %5, i64 0, i32 0, i32 3
  %25 = bitcast %"class.std::__1::__compressed_pair.954"* %24 to i32*
  %26 = bitcast i8* %23 to i32*
  store i32 -1431655766, i32* %26, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %25, align 8
  %27 = bitcast %"class.std::__1::vector.966"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %6, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %6, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #12
  %31 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr.40"** %31 to i64**
  %33 = load i64*, i64** %32, align 8
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.spvtools::opt::BasicBlock"*** %29 to i64*
  %36 = bitcast %"class.std::__1::vector.966"* %6 to i64*
  %37 = bitcast %"class.spvtools::opt::BasicBlock"*** %30 to i64*
  %38 = tail call i8* @_Znwm(i64 8) #11
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast i8* %38 to i64*
  store i64 %34, i64* %41, align 8
  %42 = ptrtoint i8* %38 to i64
  store i64 %42, i64* %36, align 8
  store i64 %40, i64* %35, align 8
  store i64 %40, i64* %37, align 8
  %43 = bitcast i8* %39 to %"class.spvtools::opt::BasicBlock"**
  %44 = bitcast %"class.spvtools::opt::BasicBlock"** %7 to i8*
  %45 = bitcast %"class.spvtools::opt::BasicBlock"** %7 to i64*
  %46 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %2, i64 0, i32 0
  %47 = bitcast i32* %8 to i8*
  %48 = bitcast i32* %10 to i8*
  %49 = bitcast i32* %11 to i8*
  %50 = bitcast i32* %12 to i8*
  %51 = bitcast %"class.std::__1::function.975"* %13 to i8*
  %52 = getelementptr inbounds %"class.std::__1::function.975", %"class.std::__1::function.975"* %13, i64 0, i32 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.std::__1::function.975", %"class.std::__1::function.975"* %13, i64 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::__1::function.975", %"class.std::__1::function.975"* %13, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::function.975", %"class.std::__1::function.975"* %13, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %57 = bitcast %"struct.std::__1::pair"** %17 to i64*
  %58 = bitcast %"class.std::__1::vector.959"* %4 to i64*
  %59 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %60 = bitcast %"class.spvtools::opt::BasicBlock"*** %29 to i64*
  %61 = bitcast %"class.std::__1::vector.966"* %6 to i64*
  %62 = bitcast %"class.spvtools::opt::BasicBlock"*** %30 to i64*
  %63 = bitcast %"class.std::__1::function.981"* %14 to i8*
  %64 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %14, i64 0, i32 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %14, i64 0, i32 0, i32 2
  %66 = bitcast %"class.std::__1::function.981"* %14 to %"class.std::__1::vector.966"**
  %67 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %14, i64 0, i32 0, i32 0, i32 1
  %68 = bitcast [8 x i8]* %67 to %"class.spvtools::opt::DeadBranchElimPass"**
  %69 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %14, i64 0, i32 0, i32 0, i32 0
  br label %70

70:                                               ; preds = %3, %469
  %71 = phi %"class.spvtools::opt::BasicBlock"** [ %43, %3 ], [ %471, %469 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %7, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %71, i64 -1
  %73 = bitcast %"class.spvtools::opt::BasicBlock"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %45, align 8
  store %"class.spvtools::opt::BasicBlock"** %72, %"class.spvtools::opt::BasicBlock"*** %29, align 8
  %75 = call { %"struct.std::__1::__hash_node_base.938"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.934"* %46, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %7, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %7) #12
  %76 = extractvalue { %"struct.std::__1::__hash_node_base.938"*, i8 } %75, 1
  %77 = and i8 %76, 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %469, label %79

79:                                               ; preds = %70
  %80 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %81 = call i32 @_ZNK8spvtools3opt10BasicBlock20ContinueBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %80) #12
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %79
  %84 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %84, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %85, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %86, i64 0, i32 4
  %88 = load i8, i8* %87, align 1, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %86, i64 0, i32 3
  %92 = load i8, i8* %91, align 4, !range !2
  %93 = zext i8 %92 to i32
  %94 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %86, i32 %93) #12
  %95 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  br label %96

96:                                               ; preds = %83, %90
  %97 = phi %"class.spvtools::opt::BasicBlock"* [ %95, %90 ], [ %84, %83 ]
  %98 = phi i32 [ %94, %90 ], [ 0, %83 ]
  %99 = call i32 @_ZNK8spvtools3opt10BasicBlock17MergeBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %97) #12
  call void @_ZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNSt3__113unordered_setIPNS0_10BasicBlockENS2_4hashIS5_EENS2_8equal_toIS5_EENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %81, i32 %98, i32 %99, %"class.std::__1::unordered_set.933"* nonnull %5)
  br label %100

100:                                              ; preds = %79, %96
  %101 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %101, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8, !noalias !4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #12
  store i32 0, i32* %8, align 4
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  switch i32 %105, label %459 [
    i32 250, label %106
    i32 251, label %134
  ]

106:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  store i8 -86, i8* %9, align 1
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 3
  %108 = load i8, i8* %107, align 4, !range !2
  %109 = icmp eq i8 %108, 0
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 4
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = icmp eq i8 %111, 0
  %113 = select i1 %112, i32 1, i32 2
  %114 = xor i1 %112, true
  %115 = zext i1 %114 to i32
  %116 = select i1 %109, i32 %115, i32 %113
  %117 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %103, i32 %116) #12
  %118 = call zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass17GetConstConditionEjPb(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %117, i8* nonnull %9)
  br i1 %118, label %119, label %133

119:                                              ; preds = %106
  %120 = load i8, i8* %9, align 1, !range !2
  %121 = icmp eq i8 %120, 0
  %122 = select i1 %121, i32 2, i32 1
  %123 = load i8, i8* %107, align 4, !range !2
  %124 = icmp eq i8 %123, 0
  %125 = load i8, i8* %110, align 1, !range !2
  %126 = icmp eq i8 %125, 0
  %127 = select i1 %126, i32 1, i32 2
  %128 = xor i1 %126, true
  %129 = zext i1 %128 to i32
  %130 = select i1 %124, i32 %129, i32 %127
  %131 = add nuw nsw i32 %130, %122
  %132 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %103, i32 %131) #12
  store i32 %132, i32* %8, align 4
  br label %133

133:                                              ; preds = %119, %106
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  br label %191

134:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #12
  store i32 -1431655766, i32* %10, align 4
  %135 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 3
  %136 = load i8, i8* %135, align 4, !range !2
  %137 = icmp eq i8 %136, 0
  %138 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 4
  %139 = load i8, i8* %138, align 1, !range !2
  %140 = icmp eq i8 %139, 0
  %141 = select i1 %140, i32 1, i32 2
  %142 = xor i1 %140, true
  %143 = zext i1 %142 to i32
  %144 = select i1 %137, i32 %143, i32 %141
  %145 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %103, i32 %144) #12
  %146 = call zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass15GetConstIntegerEjPj(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %145, i32* nonnull %10)
  br i1 %146, label %147, label %190

147:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #12
  store i32 0, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #12
  store i32 -1431655766, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS8_8FunctionEPNS_13unordered_setIPNS8_10BasicBlockENS_4hashISE_EENS_8equal_toISE_EENS_9allocatorISE_EEEEE3$_0S3_EEEEbPKNS0_16__policy_storageES2_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %52, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %53, align 8
  %148 = call i8* @_Znwm(i64 32) #11, !noalias !7
  %149 = bitcast i8* %148 to i32**
  store i32* %11, i32** %149, align 8
  %150 = getelementptr inbounds i8, i8* %148, i64 8
  %151 = bitcast i8* %150 to i32**
  store i32* %12, i32** %151, align 8
  %152 = getelementptr inbounds i8, i8* %148, i64 16
  %153 = bitcast i8* %152 to i32**
  store i32* %10, i32** %153, align 8
  %154 = getelementptr inbounds i8, i8* %148, i64 24
  %155 = bitcast i8* %154 to i32**
  store i32* %8, i32** %155, align 8
  store i8* %148, i8** %54, align 8
  %156 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 6, i32 0, i32 0
  %157 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %156, align 8
  %158 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 6, i32 0, i32 1
  %159 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %158, align 8
  %160 = icmp eq %"struct.spvtools::opt::Operand"* %157, %159
  br i1 %160, label %182, label %161

161:                                              ; preds = %147, %177
  %162 = phi %"struct.spvtools::opt::Operand"* [ %178, %177 ], [ %157, %147 ]
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 8
  %165 = and i32 %164, -2
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %177, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %162, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %169 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %168, align 8
  %170 = icmp eq %"class.std::__1::vector.3"* %169, null
  %171 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %169, i64 0, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %162, i64 0, i32 1, i32 2
  %173 = select i1 %170, i32** %172, i32** %171
  %174 = load i32*, i32** %173, align 8
  %175 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %52, align 8
  %176 = call zeroext i1 %175(%"union.std::__1::__function::__policy_storage"* nonnull %55, i32* %174) #12
  br i1 %176, label %177, label %180

177:                                              ; preds = %167, %161
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %162, i64 1
  %179 = icmp eq %"struct.spvtools::opt::Operand"* %178, %159
  br i1 %179, label %180, label %161

180:                                              ; preds = %177, %167
  %181 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %53, align 8
  br label %182

182:                                              ; preds = %180, %147
  %183 = phi %"struct.std::__1::__function::__policy"* [ %181, %180 ], [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %147 ]
  %184 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %183, i64 0, i32 1
  %185 = load void (i8*)*, void (i8*)** %184, align 8
  %186 = icmp eq void (i8*)* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %182
  %188 = load i8*, i8** %54, align 8
  call void %185(i8* %188) #12
  br label %189

189:                                              ; preds = %182, %187
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #12
  br label %190

190:                                              ; preds = %189, %134
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #12
  br label %191

191:                                              ; preds = %190, %133
  %192 = load i32, i32* %8, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %459, label %194

194:                                              ; preds = %191
  %195 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %196 = ptrtoint %"class.spvtools::opt::BasicBlock"* %195 to i64
  %197 = lshr i64 %196, 32
  %198 = shl i64 %196, 3
  %199 = and i64 %198, 4294967288
  %200 = add nuw nsw i64 %199, 8
  %201 = xor i64 %200, %197
  %202 = mul i64 %201, -7070675565921424023
  %203 = lshr i64 %202, 47
  %204 = xor i64 %202, %197
  %205 = xor i64 %204, %203
  %206 = mul i64 %205, -7070675565921424023
  %207 = lshr i64 %206, 47
  %208 = xor i64 %207, %206
  %209 = mul i64 %208, -7070675565921424023
  %210 = load i64, i64* %21, align 8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %345, label %212

212:                                              ; preds = %194
  %213 = call i64 @llvm.ctpop.i64(i64 %210) #12, !range !3
  %214 = icmp ugt i64 %213, 1
  br i1 %214, label %218, label %215

215:                                              ; preds = %212
  %216 = add i64 %210, -1
  %217 = and i64 %209, %216
  br label %222

218:                                              ; preds = %212
  %219 = icmp ult i64 %209, %210
  br i1 %219, label %222, label %220

220:                                              ; preds = %218
  %221 = urem i64 %209, %210
  br label %222

222:                                              ; preds = %220, %218, %215
  %223 = phi i64 [ %217, %215 ], [ %221, %220 ], [ %209, %218 ]
  %224 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %20, align 8
  %225 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %224, i64 %223
  %226 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %225, align 8
  %227 = icmp eq %"struct.std::__1::__hash_node_base.938"* %226, null
  br i1 %227, label %345, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %226, i64 0, i32 0
  %230 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %229, align 8
  %231 = icmp eq %"struct.std::__1::__hash_node_base.938"* %230, null
  br i1 %231, label %345, label %232

232:                                              ; preds = %228
  %233 = add i64 %210, -1
  br label %234

234:                                              ; preds = %255, %232
  %235 = phi %"struct.std::__1::__hash_node_base.938"* [ %230, %232 ], [ %257, %255 ]
  %236 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %235, i64 1
  %237 = bitcast %"struct.std::__1::__hash_node_base.938"* %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = icmp eq i64 %209, %238
  br i1 %239, label %250, label %240

240:                                              ; preds = %234
  br i1 %214, label %243, label %241

241:                                              ; preds = %240
  %242 = and i64 %238, %233
  br label %247

243:                                              ; preds = %240
  %244 = icmp ult i64 %238, %210
  br i1 %244, label %247, label %245

245:                                              ; preds = %243
  %246 = urem i64 %238, %210
  br label %247

247:                                              ; preds = %245, %243, %241
  %248 = phi i64 [ %242, %241 ], [ %246, %245 ], [ %238, %243 ]
  %249 = icmp eq i64 %248, %223
  br i1 %249, label %255, label %345

250:                                              ; preds = %234
  %251 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %235, i64 2
  %252 = bitcast %"struct.std::__1::__hash_node_base.938"* %251 to %"class.spvtools::opt::BasicBlock"**
  %253 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %252, align 8
  %254 = icmp eq %"class.spvtools::opt::BasicBlock"* %253, %195
  br i1 %254, label %259, label %255

255:                                              ; preds = %250, %247
  %256 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %235, i64 0, i32 0
  %257 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %256, align 8
  %258 = icmp eq %"struct.std::__1::__hash_node_base.938"* %257, null
  br i1 %258, label %345, label %234

259:                                              ; preds = %250
  %260 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %56, align 8
  %261 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %260, i64 0, i32 11
  %262 = load i32, i32* %261, align 8
  %263 = and i32 %262, 2048
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %267

265:                                              ; preds = %259
  call void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"* %260) #12
  %266 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  br label %267

267:                                              ; preds = %259, %265
  %268 = phi %"class.spvtools::opt::BasicBlock"* [ %195, %259 ], [ %266, %265 ]
  %269 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %260, i64 0, i32 27, i32 0, i32 0, i32 0
  %270 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %269, align 8
  %271 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %268, i64 0, i32 1, i32 0, i32 0, i32 0
  %272 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %271, align 8
  %273 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %272, i64 0, i32 4
  %274 = load i8, i8* %273, align 1, !range !2
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %281, label %276

276:                                              ; preds = %267
  %277 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %272, i64 0, i32 3
  %278 = load i8, i8* %277, align 4, !range !2
  %279 = zext i8 %278 to i32
  %280 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %272, i32 %279) #12
  br label %281

281:                                              ; preds = %267, %276
  %282 = phi i32 [ %280, %276 ], [ 0, %267 ]
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %270, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %285 = load i64, i64* %284, align 8
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %339, label %287

287:                                              ; preds = %281
  %288 = call i64 @llvm.ctpop.i64(i64 %285) #12, !range !3
  %289 = icmp ugt i64 %288, 1
  br i1 %289, label %293, label %290

290:                                              ; preds = %287
  %291 = add i64 %285, 4294967295
  %292 = and i64 %291, %283
  br label %297

293:                                              ; preds = %287
  %294 = icmp ugt i64 %285, %283
  br i1 %294, label %297, label %295

295:                                              ; preds = %293
  %296 = urem i64 %283, %285
  br label %297

297:                                              ; preds = %295, %293, %290
  %298 = phi i64 [ %292, %290 ], [ %296, %295 ], [ %283, %293 ]
  %299 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %270, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load %"struct.std::__1::__hash_node_base.881"**, %"struct.std::__1::__hash_node_base.881"*** %299, align 8
  %301 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %300, i64 %298
  %302 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %301, align 8
  %303 = icmp eq %"struct.std::__1::__hash_node_base.881"* %302, null
  br i1 %303, label %339, label %304

304:                                              ; preds = %297
  %305 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %302, i64 0, i32 0
  %306 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %305, align 8
  %307 = icmp eq %"struct.std::__1::__hash_node_base.881"* %306, null
  br i1 %307, label %339, label %308

308:                                              ; preds = %304
  %309 = add i64 %285, -1
  br label %310

310:                                              ; preds = %331, %308
  %311 = phi %"struct.std::__1::__hash_node_base.881"* [ %306, %308 ], [ %333, %331 ]
  %312 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %311, i64 1
  %313 = bitcast %"struct.std::__1::__hash_node_base.881"* %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = icmp eq i64 %314, %283
  br i1 %315, label %326, label %316

316:                                              ; preds = %310
  br i1 %289, label %319, label %317

317:                                              ; preds = %316
  %318 = and i64 %314, %309
  br label %323

319:                                              ; preds = %316
  %320 = icmp ult i64 %314, %285
  br i1 %320, label %323, label %321

321:                                              ; preds = %319
  %322 = urem i64 %314, %285
  br label %323

323:                                              ; preds = %321, %319, %317
  %324 = phi i64 [ %318, %317 ], [ %322, %321 ], [ %314, %319 ]
  %325 = icmp eq i64 %324, %298
  br i1 %325, label %331, label %339

326:                                              ; preds = %310
  %327 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %311, i64 2
  %328 = bitcast %"struct.std::__1::__hash_node_base.881"* %327 to i32*
  %329 = load i32, i32* %328, align 4
  %330 = icmp eq i32 %329, %282
  br i1 %330, label %335, label %331

331:                                              ; preds = %326, %323
  %332 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %311, i64 0, i32 0
  %333 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %332, align 8
  %334 = icmp eq %"struct.std::__1::__hash_node_base.881"* %333, null
  br i1 %334, label %339, label %310

335:                                              ; preds = %326
  %336 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %311, i64 3
  %337 = bitcast %"struct.std::__1::__hash_node_base.881"* %336 to i32*
  %338 = load i32, i32* %337, align 4
  br label %339

339:                                              ; preds = %323, %331, %281, %297, %304, %335
  %340 = phi i32 [ %338, %335 ], [ 0, %297 ], [ 0, %281 ], [ 0, %304 ], [ 0, %331 ], [ 0, %323 ]
  %341 = load i32, i32* %8, align 4
  %342 = icmp eq i32 %341, %340
  br i1 %342, label %343, label %459

343:                                              ; preds = %339
  %344 = load i64, i64* %45, align 8
  br label %345

345:                                              ; preds = %247, %255, %343, %228, %194, %222
  %346 = phi i32 [ %340, %343 ], [ %192, %228 ], [ %192, %194 ], [ %192, %222 ], [ %192, %255 ], [ %192, %247 ]
  %347 = phi i64 [ %344, %343 ], [ %196, %228 ], [ %196, %194 ], [ %196, %222 ], [ %196, %255 ], [ %196, %247 ]
  %348 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %349 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %350 = icmp ult %"struct.std::__1::pair"* %348, %349
  %351 = ptrtoint %"struct.std::__1::pair"* %349 to i64
  br i1 %350, label %352, label %357

352:                                              ; preds = %345
  %353 = bitcast %"struct.std::__1::pair"* %348 to i64*
  store i64 %347, i64* %353, align 8
  %354 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %348, i64 0, i32 1
  store i32 %346, i32* %354, align 8
  %355 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %348, i64 1
  %356 = ptrtoint %"struct.std::__1::pair"* %355 to i64
  store i64 %356, i64* %57, align 8
  br label %403

357:                                              ; preds = %345
  %358 = ptrtoint %"struct.std::__1::pair"* %348 to i64
  %359 = load i64, i64* %58, align 8
  %360 = sub i64 %358, %359
  %361 = ashr exact i64 %360, 4
  %362 = add nsw i64 %361, 1
  %363 = icmp ugt i64 %362, 1152921504606846975
  br i1 %363, label %364, label %366

364:                                              ; preds = %357
  %365 = bitcast %"class.std::__1::vector.959"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %365) #13
  unreachable

366:                                              ; preds = %357
  %367 = sub i64 %351, %359
  %368 = ashr exact i64 %367, 4
  %369 = icmp ult i64 %368, 576460752303423487
  br i1 %369, label %370, label %378

370:                                              ; preds = %366
  %371 = ashr exact i64 %367, 3
  %372 = icmp ult i64 %371, %362
  %373 = select i1 %372, i64 %362, i64 %371
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %383, label %375

375:                                              ; preds = %370
  %376 = icmp ugt i64 %373, 1152921504606846975
  br i1 %376, label %377, label %378

377:                                              ; preds = %375
  call void @abort() #13
  unreachable

378:                                              ; preds = %375, %366
  %379 = phi i64 [ %373, %375 ], [ 1152921504606846975, %366 ]
  %380 = shl i64 %379, 4
  %381 = call i8* @_Znwm(i64 %380) #11
  %382 = bitcast i8* %381 to %"struct.std::__1::pair"*
  br label %383

383:                                              ; preds = %378, %370
  %384 = phi i64 [ %379, %378 ], [ 0, %370 ]
  %385 = phi i8* [ %381, %378 ], [ null, %370 ]
  %386 = phi %"struct.std::__1::pair"* [ %382, %378 ], [ null, %370 ]
  %387 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %386, i64 %361
  %388 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %386, i64 %384
  %389 = ptrtoint %"struct.std::__1::pair"* %388 to i64
  %390 = bitcast %"struct.std::__1::pair"* %387 to i64*
  store i64 %347, i64* %390, align 8
  %391 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %386, i64 %361, i32 1
  store i32 %346, i32* %391, align 8
  %392 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %387, i64 1
  %393 = ptrtoint %"struct.std::__1::pair"* %392 to i64
  %394 = ptrtoint %"struct.std::__1::pair"* %386 to i64
  %395 = icmp sgt i64 %360, 0
  br i1 %395, label %396, label %398

396:                                              ; preds = %383
  %397 = inttoptr i64 %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %385, i8* align 8 %397, i64 %360, i1 false) #12
  br label %398

398:                                              ; preds = %396, %383
  store i64 %394, i64* %58, align 8
  store i64 %393, i64* %57, align 8
  store i64 %389, i64* %59, align 8
  %399 = icmp eq i64 %359, 0
  br i1 %399, label %403, label %400

400:                                              ; preds = %398
  %401 = inttoptr i64 %359 to i8*
  call void @_ZdlPv(i8* %401) #11
  %402 = load i32, i32* %8, align 4
  br label %403

403:                                              ; preds = %352, %398, %400
  %404 = phi i32 [ %346, %352 ], [ %346, %398 ], [ %402, %400 ]
  %405 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt18DeadBranchElimPass14GetParentBlockEj(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %404)
  %406 = ptrtoint %"class.spvtools::opt::BasicBlock"* %405 to i64
  %407 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %29, align 8
  %408 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %30, align 8
  %409 = icmp ult %"class.spvtools::opt::BasicBlock"** %407, %408
  %410 = ptrtoint %"class.spvtools::opt::BasicBlock"** %408 to i64
  br i1 %409, label %411, label %415

411:                                              ; preds = %403
  %412 = bitcast %"class.spvtools::opt::BasicBlock"** %407 to i64*
  store i64 %406, i64* %412, align 8
  %413 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %407, i64 1
  %414 = ptrtoint %"class.spvtools::opt::BasicBlock"** %413 to i64
  store i64 %414, i64* %60, align 8
  br label %468

415:                                              ; preds = %403
  %416 = ptrtoint %"class.spvtools::opt::BasicBlock"** %407 to i64
  %417 = load i64, i64* %61, align 8
  %418 = sub i64 %416, %417
  %419 = ashr exact i64 %418, 3
  %420 = add nsw i64 %419, 1
  %421 = icmp ugt i64 %420, 2305843009213693951
  br i1 %421, label %422, label %424

422:                                              ; preds = %415
  %423 = bitcast %"class.std::__1::vector.966"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %423) #13
  unreachable

424:                                              ; preds = %415
  %425 = sub i64 %410, %417
  %426 = ashr exact i64 %425, 3
  %427 = icmp ult i64 %426, 1152921504606846975
  br i1 %427, label %428, label %436

428:                                              ; preds = %424
  %429 = ashr exact i64 %425, 2
  %430 = icmp ult i64 %429, %420
  %431 = select i1 %430, i64 %420, i64 %429
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %441, label %433

433:                                              ; preds = %428
  %434 = icmp ugt i64 %431, 2305843009213693951
  br i1 %434, label %435, label %436

435:                                              ; preds = %433
  call void @abort() #13
  unreachable

436:                                              ; preds = %433, %424
  %437 = phi i64 [ %431, %433 ], [ 2305843009213693951, %424 ]
  %438 = shl i64 %437, 3
  %439 = call i8* @_Znwm(i64 %438) #11
  %440 = bitcast i8* %439 to %"class.spvtools::opt::BasicBlock"**
  br label %441

441:                                              ; preds = %436, %428
  %442 = phi i64 [ %437, %436 ], [ 0, %428 ]
  %443 = phi i8* [ %439, %436 ], [ null, %428 ]
  %444 = phi %"class.spvtools::opt::BasicBlock"** [ %440, %436 ], [ null, %428 ]
  %445 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %444, i64 %419
  %446 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %444, i64 %442
  %447 = ptrtoint %"class.spvtools::opt::BasicBlock"** %446 to i64
  %448 = bitcast %"class.spvtools::opt::BasicBlock"** %445 to i64*
  store i64 %406, i64* %448, align 8
  %449 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %445, i64 1
  %450 = ptrtoint %"class.spvtools::opt::BasicBlock"** %449 to i64
  %451 = ptrtoint %"class.spvtools::opt::BasicBlock"** %444 to i64
  %452 = icmp sgt i64 %418, 0
  br i1 %452, label %453, label %455

453:                                              ; preds = %441
  %454 = inttoptr i64 %417 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %443, i8* align 8 %454, i64 %418, i1 false) #12
  br label %455

455:                                              ; preds = %453, %441
  store i64 %451, i64* %61, align 8
  store i64 %450, i64* %60, align 8
  store i64 %447, i64* %62, align 8
  %456 = icmp eq i64 %417, 0
  br i1 %456, label %468, label %457

457:                                              ; preds = %455
  %458 = inttoptr i64 %417 to i8*
  call void @_ZdlPv(i8* %458) #11
  br label %468

459:                                              ; preds = %100, %191, %339
  %460 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63) #12
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS7_8FunctionEPNS_13unordered_setIPNS7_10BasicBlockENS_4hashISD_EENS_8equal_toISD_EENS_9allocatorISD_EEEEE3$_1S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %64, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %65, align 8
  store %"class.std::__1::vector.966"* %6, %"class.std::__1::vector.966"** %66, align 8
  store %"class.spvtools::opt::DeadBranchElimPass"* %0, %"class.spvtools::opt::DeadBranchElimPass"** %68, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %460, %"class.std::__1::function.981"* nonnull dereferenceable(32) %14) #12
  %461 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %65, align 8
  %462 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %461, i64 0, i32 1
  %463 = load void (i8*)*, void (i8*)** %462, align 8
  %464 = icmp eq void (i8*)* %463, null
  br i1 %464, label %467, label %465

465:                                              ; preds = %459
  %466 = load i8*, i8** %69, align 8
  call void %463(i8* %466) #12
  br label %467

467:                                              ; preds = %459, %465
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63) #12
  br label %468

468:                                              ; preds = %457, %455, %411, %467
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #12
  br label %469

469:                                              ; preds = %70, %468
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #12
  %470 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %28, align 8
  %471 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %29, align 8
  %472 = icmp eq %"class.spvtools::opt::BasicBlock"** %470, %471
  br i1 %472, label %473, label %70

473:                                              ; preds = %469
  %474 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %475 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %476 = icmp eq %"struct.std::__1::pair"* %474, %475
  br i1 %476, label %479, label %509

477:                                              ; preds = %509
  %478 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %28, align 8
  br label %479

479:                                              ; preds = %477, %473
  %480 = phi %"class.spvtools::opt::BasicBlock"** [ %470, %473 ], [ %478, %477 ]
  %481 = phi i1 [ false, %473 ], [ %518, %477 ]
  %482 = icmp eq %"class.spvtools::opt::BasicBlock"** %480, null
  br i1 %482, label %487, label %483

483:                                              ; preds = %479
  %484 = ptrtoint %"class.spvtools::opt::BasicBlock"** %480 to i64
  %485 = bitcast %"class.spvtools::opt::BasicBlock"*** %29 to i64*
  store i64 %484, i64* %485, align 8
  %486 = bitcast %"class.spvtools::opt::BasicBlock"** %480 to i8*
  call void @_ZdlPv(i8* %486) #11
  br label %487

487:                                              ; preds = %479, %483
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %488 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %22, align 8
  %489 = icmp eq %"struct.std::__1::__hash_node_base.938"* %488, null
  br i1 %489, label %496, label %490

490:                                              ; preds = %487, %490
  %491 = phi %"struct.std::__1::__hash_node_base.938"* [ %493, %490 ], [ %488, %487 ]
  %492 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %491, i64 0, i32 0
  %493 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %492, align 8
  %494 = bitcast %"struct.std::__1::__hash_node_base.938"* %491 to i8*
  call void @_ZdlPv(i8* %494) #11
  %495 = icmp eq %"struct.std::__1::__hash_node_base.938"* %493, null
  br i1 %495, label %496, label %490

496:                                              ; preds = %490, %487
  %497 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %20, align 8
  store %"struct.std::__1::__hash_node_base.938"** null, %"struct.std::__1::__hash_node_base.938"*** %20, align 8
  %498 = icmp eq %"struct.std::__1::__hash_node_base.938"** %497, null
  br i1 %498, label %501, label %499

499:                                              ; preds = %496
  %500 = bitcast %"struct.std::__1::__hash_node_base.938"** %497 to i8*
  call void @_ZdlPv(i8* %500) #11
  br label %501

501:                                              ; preds = %496, %499
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #12
  %502 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %503 = icmp eq %"struct.std::__1::pair"* %502, null
  br i1 %503, label %508, label %504

504:                                              ; preds = %501
  %505 = ptrtoint %"struct.std::__1::pair"* %502 to i64
  %506 = bitcast %"struct.std::__1::pair"** %17 to i64*
  store i64 %505, i64* %506, align 8
  %507 = bitcast %"struct.std::__1::pair"* %502 to i8*
  call void @_ZdlPv(i8* %507) #11
  br label %508

508:                                              ; preds = %501, %504
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  ret i1 %481

509:                                              ; preds = %473, %509
  %510 = phi i1 [ %518, %509 ], [ false, %473 ]
  %511 = phi %"struct.std::__1::pair"* [ %512, %509 ], [ %474, %473 ]
  %512 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %511, i64 -1
  %513 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %512, i64 0, i32 0
  %514 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %513, align 8
  %515 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %511, i64 -1, i32 1
  %516 = load i32, i32* %515, align 8
  %517 = call zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass14SimplifyBranchEPNS0_10BasicBlockEj(%"class.spvtools::opt::DeadBranchElimPass"* %0, %"class.spvtools::opt::BasicBlock"* %514, i32 %516)
  %518 = or i1 %510, %517
  %519 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %520 = icmp eq %"struct.std::__1::pair"* %512, %519
  br i1 %520, label %477, label %509
}

declare i32 @_ZNK8spvtools3opt10BasicBlock20ContinueBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNSt3__113unordered_setIPNS0_10BasicBlockENS2_4hashIS5_EENS2_8equal_toIS5_EENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::DeadBranchElimPass"* nocapture readonly, i32, i32, i32, %"class.std::__1::unordered_set.933"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::unordered_set.910", align 8
  %10 = alloca %"class.std::__1::vector.3", align 8
  %11 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.std::__1::function.1027", align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %14 = bitcast %"class.std::__1::unordered_set.910"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %9, i64 0, i32 0, i32 4, i64 0
  %18 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %9, i64 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.929"* %18 to i32*
  %20 = bitcast i8* %17 to i32*
  store i32 -1431655766, i32* %20, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %9, i64 0, i32 0
  %22 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* nonnull %21, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %6) #12
  %23 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* nonnull %21, i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %7) #12
  %24 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* nonnull %21, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #12
  %25 = bitcast %"class.std::__1::vector.3"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i32** %27 to i64*
  %30 = bitcast %"class.std::__1::vector.3"* %10 to i64*
  %31 = bitcast i32** %28 to i64*
  %32 = call i8* @_Znwm(i64 4) #11
  %33 = bitcast i8* %32 to i32*
  %34 = getelementptr inbounds i8, i8* %32, i64 4
  %35 = ptrtoint i8* %34 to i64
  %36 = load i32, i32* %6, align 4
  store i32 %36, i32* %33, align 4
  %37 = ptrtoint i8* %32 to i64
  store i64 %37, i64* %30, align 8
  store i64 %35, i64* %29, align 8
  store i64 %35, i64* %31, align 8
  %38 = bitcast i8* %34 to i32*
  %39 = bitcast %"class.spvtools::opt::BasicBlock"** %11 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.std::__1::function.1027"* %13 to i8*
  %42 = getelementptr inbounds %"class.std::__1::function.1027", %"class.std::__1::function.1027"* %13, i64 0, i32 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::function.1027", %"class.std::__1::function.1027"* %13, i64 0, i32 0, i32 2
  %44 = getelementptr inbounds %"class.std::__1::function.1027", %"class.std::__1::function.1027"* %13, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %4, i64 0, i32 0
  br label %46

46:                                               ; preds = %5, %72
  %47 = phi i32* [ %38, %5 ], [ %74, %72 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 -1
  %49 = load i32, i32* %48, align 4
  store i32* %48, i32** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %11, align 8
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %40, align 8
  %51 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %50, i32 %49)
  store %"class.spvtools::opt::BasicBlock"* %51, %"class.spvtools::opt::BasicBlock"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #12
  store i8 0, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #12
  %52 = load i32, i32* %7, align 4
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS8_10BasicBlockENS_4hashISC_EENS_8equal_toISC_EENS_9allocatorISC_EEEEE3$_5S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %42, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %43, align 8
  %53 = call i8* @_Znwm(i64 32) #11, !noalias !12
  %54 = bitcast i8* %53 to i32*
  store i32 %52, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 8
  %56 = bitcast i8* %55 to %"class.std::__1::unordered_set.910"**
  store %"class.std::__1::unordered_set.910"* %9, %"class.std::__1::unordered_set.910"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %53, i64 16
  %58 = bitcast i8* %57 to %"class.std::__1::vector.3"**
  store %"class.std::__1::vector.3"* %10, %"class.std::__1::vector.3"** %58, align 8
  %59 = getelementptr inbounds i8, i8* %53, i64 24
  %60 = bitcast i8* %59 to i8**
  store i8* %12, i8** %60, align 8
  store i8* %53, i8** %44, align 8
  call void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"* %51, %"class.std::__1::function.1027"* nonnull dereferenceable(32) %13) #12
  %61 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %43, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %61, i64 0, i32 1
  %63 = load void (i8*)*, void (i8*)** %62, align 8
  %64 = icmp eq void (i8*)* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %46
  %66 = load i8*, i8** %44, align 8
  call void %63(i8* %66) #12
  br label %67

67:                                               ; preds = %46, %65
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #12
  %68 = load i8, i8* %12, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = call { %"struct.std::__1::__hash_node_base.938"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.934"* %45, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %11, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %11) #12
  br label %72

72:                                               ; preds = %67, %70
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  %73 = load i32*, i32** %26, align 8
  %74 = load i32*, i32** %27, align 8
  %75 = icmp eq i32* %73, %74
  br i1 %75, label %76, label %46

76:                                               ; preds = %72
  %77 = icmp eq i32* %73, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %76
  %79 = ptrtoint i32* %73 to i64
  %80 = bitcast i32** %27 to i64*
  store i64 %79, i64* %80, align 8
  %81 = bitcast i32* %73 to i8*
  call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %76, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  %83 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %16, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.915"* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %82, %85
  %86 = phi %"struct.std::__1::__hash_node_base.915"* [ %88, %85 ], [ %83, %82 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %86, i64 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %87, align 8
  %89 = bitcast %"struct.std::__1::__hash_node_base.915"* %86 to i8*
  call void @_ZdlPv(i8* %89) #11
  %90 = icmp eq %"struct.std::__1::__hash_node_base.915"* %88, null
  br i1 %90, label %91, label %85

91:                                               ; preds = %85, %82
  %92 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %15, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %15, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base.915"** %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = bitcast %"struct.std::__1::__hash_node_base.915"** %92 to i8*
  call void @_ZdlPv(i8* %95) #11
  br label %96

96:                                               ; preds = %91, %94
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #12
  ret void
}

declare i32 @_ZNK8spvtools3opt10BasicBlock17MergeBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.981"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass14SimplifyBranchEPNS0_10BasicBlockEj(%"class.spvtools::opt::DeadBranchElimPass"*, %"class.spvtools::opt::BasicBlock"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.1048", align 1
  %6 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"struct.spvtools::opt::Operand", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.std::__1::unique_ptr.21", align 8
  %11 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* %1) #12
  %12 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8, !noalias !17
  %14 = icmp eq %"class.spvtools::opt::Instruction"* %11, null
  br i1 %14, label %303, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 247
  br i1 %18, label %19, label %303

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %21 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %20, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 0, i32 3
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, %"class.spvtools::opt::Instruction"* %21, %"class.spvtools::opt::Instruction"* null
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 251
  br i1 %28, label %29, label %226

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %30, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 4
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 3
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = zext i8 %37 to i32
  %39 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %31, i32 %38) #12
  br label %40

40:                                               ; preds = %29, %35
  %41 = phi i32 [ %39, %35 ], [ 0, %29 ]
  %42 = tail call zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEj(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %41)
  br i1 %42, label %43, label %226

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 6
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 6, i32 0, i32 1
  %46 = bitcast %"struct.spvtools::opt::Operand"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = sdiv exact i64 %50, 48
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 3
  %53 = load i8, i8* %52, align 4, !range !2
  %54 = icmp eq i8 %53, 0
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 4
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  %58 = select i1 %57, i32 1, i32 2
  %59 = xor i1 %57, true
  %60 = zext i1 %59 to i32
  %61 = select i1 %54, i32 %60, i32 %58
  %62 = trunc i64 %51 to i32
  %63 = sub i32 %62, %61
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %307, label %65

65:                                               ; preds = %43
  %66 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #12
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #12
  %70 = inttoptr i64 %49 to %"struct.spvtools::opt::Operand"*
  %71 = zext i1 %59 to i64
  %72 = select i1 %57, i64 1, i64 2
  %73 = select i1 %54, i64 %71, i64 %72
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 %73
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* dereferenceable(48) %74) #12
  %75 = bitcast %"struct.spvtools::opt::Operand"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %75) #12
  %76 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %76) #12
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %79 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %81 = bitcast i32** %79 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %80, %"struct.std::__1::aligned_storage<4, 4>::type"** %81, align 8
  %82 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %83 = bitcast %"class.std::__1::unique_ptr.0"* %82 to i64*
  store i64 0, i64* %83, align 8
  %84 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %80 to i32*
  store i64 1, i64* %78, align 8
  store i32 %2, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 0
  store i32 1, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1
  %87 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %86, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 1
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 2
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 3, i64 0
  %91 = bitcast i32** %89 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %90, %"struct.std::__1::aligned_storage<4, 4>::type"** %91, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4
  %93 = bitcast %"class.std::__1::unique_ptr.0"* %92 to i64*
  store i64 0, i64* %93, align 8
  %94 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %86, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #12
  %95 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %68, align 8
  %96 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %69, align 8
  %97 = icmp ult %"struct.spvtools::opt::Operand"* %95, %96
  br i1 %97, label %98, label %113

98:                                               ; preds = %65
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 0, i32 0
  %100 = load i32, i32* %85, align 8
  store i32 %100, i32* %99, align 8
  %101 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 0, i32 1
  %102 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %101, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 0, i32 1, i32 1
  store i64 0, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 0, i32 1, i32 2
  %105 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 0, i32 1, i32 3, i64 0
  %106 = bitcast i32** %104 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %105, %"struct.std::__1::aligned_storage<4, 4>::type"** %106, align 8
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 0, i32 1, i32 4
  %108 = bitcast %"class.std::__1::unique_ptr.0"* %107 to i64*
  store i64 0, i64* %108, align 8
  %109 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %101, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %86) #12
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 1
  %111 = ptrtoint %"struct.spvtools::opt::Operand"* %110 to i64
  %112 = bitcast %"struct.spvtools::opt::Operand"** %68 to i64*
  store i64 %111, i64* %112, align 8
  br label %114

113:                                              ; preds = %65
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %8) #12
  br label %114

114:                                              ; preds = %98, %113
  %115 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  %116 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %117 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %116, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %116, align 8
  %118 = icmp eq %"class.std::__1::vector.3"* %117, null
  br i1 %118, label %130, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %117, i64 0, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = icmp eq i32* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  %124 = ptrtoint i32* %121 to i64
  %125 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %117, i64 0, i32 0, i32 1
  %126 = bitcast i32** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = bitcast i32* %121 to i8*
  call void @_ZdlPv(i8* %127) #11
  br label %128

128:                                              ; preds = %123, %119
  %129 = bitcast %"class.std::__1::vector.3"* %117 to i8*
  call void @_ZdlPv(i8* %129) #11
  br label %130

130:                                              ; preds = %114, %128
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %131 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %132 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %131, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %131, align 8
  %133 = icmp eq %"class.std::__1::vector.3"* %132, null
  br i1 %133, label %145, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %132, i64 0, i32 0, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %134
  %139 = ptrtoint i32* %136 to i64
  %140 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %132, i64 0, i32 0, i32 1
  %141 = bitcast i32** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = bitcast i32* %136 to i8*
  call void @_ZdlPv(i8* %142) #11
  br label %143

143:                                              ; preds = %138, %134
  %144 = bitcast %"class.std::__1::vector.3"* %132 to i8*
  call void @_ZdlPv(i8* %144) #11
  br label %145

145:                                              ; preds = %130, %143
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %75) #12
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %44, i64 0, i32 0, i32 0
  %147 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %146, align 8
  %148 = load i8, i8* %52, align 4, !range !2
  %149 = icmp eq i8 %148, 0
  %150 = load i8, i8* %55, align 1, !range !2
  %151 = icmp eq i8 %150, 0
  %152 = select i1 %151, i64 1, i64 2
  %153 = xor i1 %151, true
  %154 = zext i1 %153 to i64
  %155 = select i1 %149, i64 %154, i64 %152
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %147, i64 %155
  %157 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %45, align 8
  %158 = icmp eq %"struct.spvtools::opt::Operand"* %156, %157
  br i1 %158, label %180, label %159

159:                                              ; preds = %145, %177
  %160 = phi %"struct.spvtools::opt::Operand"* [ %161, %177 ], [ %157, %145 ]
  %161 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 -1
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %164 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %163, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %163, align 8
  %165 = icmp eq %"class.std::__1::vector.3"* %164, null
  br i1 %165, label %177, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %164, i64 0, i32 0, i32 0
  %168 = load i32*, i32** %167, align 8
  %169 = icmp eq i32* %168, null
  br i1 %169, label %175, label %170

170:                                              ; preds = %166
  %171 = ptrtoint i32* %168 to i64
  %172 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %164, i64 0, i32 0, i32 1
  %173 = bitcast i32** %172 to i64*
  store i64 %171, i64* %173, align 8
  %174 = bitcast i32* %168 to i8*
  call void @_ZdlPv(i8* %174) #11
  br label %175

175:                                              ; preds = %170, %166
  %176 = bitcast %"class.std::__1::vector.3"* %164 to i8*
  call void @_ZdlPv(i8* %176) #11
  br label %177

177:                                              ; preds = %175, %159
  %178 = icmp eq %"struct.spvtools::opt::Operand"* %161, %156
  br i1 %178, label %179, label %159

179:                                              ; preds = %177
  store %"struct.spvtools::opt::Operand"* %156, %"struct.spvtools::opt::Operand"** %45, align 8
  br label %180

180:                                              ; preds = %145, %179
  %181 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %67, align 8
  %182 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %68, align 8
  %183 = call %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"* %44, %"struct.spvtools::opt::Operand"* %156, %"struct.spvtools::opt::Operand"* %181, %"struct.spvtools::opt::Operand"* %182) #12
  %184 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %185 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %184, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %185, i64 0, i32 11
  %187 = load i32, i32* %186, align 8
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %180
  %191 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %185, i64 0, i32 6, i32 0, i32 0, i32 0
  %192 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %191, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %192, %"class.spvtools::opt::Instruction"* %13) #12
  br label %193

193:                                              ; preds = %180, %190
  %194 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %67, align 8
  %195 = icmp eq %"struct.spvtools::opt::Operand"* %194, null
  br i1 %195, label %225, label %196

196:                                              ; preds = %193
  %197 = bitcast %"struct.spvtools::opt::Operand"* %194 to i8*
  %198 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %68, align 8
  %199 = icmp eq %"struct.spvtools::opt::Operand"* %198, %194
  br i1 %199, label %223, label %200

200:                                              ; preds = %196, %218
  %201 = phi %"struct.spvtools::opt::Operand"* [ %202, %218 ], [ %198, %196 ]
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %201, i64 -1
  %203 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %201, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %203, align 8
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %201, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %205 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %204, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %204, align 8
  %206 = icmp eq %"class.std::__1::vector.3"* %205, null
  br i1 %206, label %218, label %207

207:                                              ; preds = %200
  %208 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %205, i64 0, i32 0, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = icmp eq i32* %209, null
  br i1 %210, label %216, label %211

211:                                              ; preds = %207
  %212 = ptrtoint i32* %209 to i64
  %213 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %205, i64 0, i32 0, i32 1
  %214 = bitcast i32** %213 to i64*
  store i64 %212, i64* %214, align 8
  %215 = bitcast i32* %209 to i8*
  call void @_ZdlPv(i8* %215) #11
  br label %216

216:                                              ; preds = %211, %207
  %217 = bitcast %"class.std::__1::vector.3"* %205 to i8*
  call void @_ZdlPv(i8* %217) #11
  br label %218

218:                                              ; preds = %216, %200
  %219 = icmp eq %"struct.spvtools::opt::Operand"* %202, %194
  br i1 %219, label %220, label %200

220:                                              ; preds = %218
  %221 = bitcast %"class.std::__1::vector"* %7 to i8**
  %222 = load i8*, i8** %221, align 8
  br label %223

223:                                              ; preds = %220, %196
  %224 = phi i8* [ %222, %220 ], [ %197, %196 ]
  store %"struct.spvtools::opt::Operand"* %194, %"struct.spvtools::opt::Operand"** %68, align 8
  call void @_ZdlPv(i8* %224) #11
  br label %225

225:                                              ; preds = %193, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #12
  br label %307

226:                                              ; preds = %40, %19
  %227 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %228 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %227, align 8
  %229 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %228, i64 0, i32 11
  %230 = load i32, i32* %229, align 8
  %231 = and i32 %230, 2048
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %226
  tail call void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"* %228) #12
  br label %234

234:                                              ; preds = %226, %233
  %235 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %228, i64 0, i32 27, i32 0, i32 0, i32 0
  %236 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %235, align 8
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 3
  %238 = load i8, i8* %237, align 4, !range !2
  %239 = icmp eq i8 %238, 0
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 4
  %241 = load i8, i8* %240, align 1, !range !2
  %242 = icmp eq i8 %241, 0
  %243 = select i1 %242, i32 1, i32 2
  %244 = xor i1 %242, true
  %245 = zext i1 %244 to i32
  %246 = select i1 %239, i32 %245, i32 %243
  %247 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %11, i32 %246) #12
  %248 = tail call i32 @_ZN8spvtools3opt21StructuredCFGAnalysis14LoopMergeBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"* %236, i32 %2) #12
  %249 = tail call i32 @_ZN8spvtools3opt21StructuredCFGAnalysis17LoopContinueBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"* %236, i32 %2) #12
  %250 = tail call i32 @_ZN8spvtools3opt21StructuredCFGAnalysis16SwitchMergeBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"* %236, i32 %2) #12
  %251 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18DeadBranchElimPass31FindFirstExitFromSelectionMergeEjjjjj(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %2, i32 %247, i32 %248, i32 %249, i32 %250)
  tail call void @_ZN8spvtools3opt18DeadBranchElimPass9AddBranchEjPNS0_10BasicBlockE(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %2, %"class.spvtools::opt::BasicBlock"* %1)
  %252 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %227, align 8
  %253 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %252, %"class.spvtools::opt::Instruction"* %13) #12
  %254 = icmp eq %"class.spvtools::opt::Instruction"* %251, null
  br i1 %254, label %255, label %258

255:                                              ; preds = %234
  %256 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %227, align 8
  %257 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %256, %"class.spvtools::opt::Instruction"* nonnull %11) #12
  br label %307

258:                                              ; preds = %234
  %259 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %260 = bitcast %"class.spvtools::opt::Instruction"** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.spvtools::opt::Instruction"** %20 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %263 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %262, align 8
  %264 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %263, i64 0, i32 2
  %265 = bitcast %"class.spvtools::opt::Instruction"** %264 to i64*
  store i64 %261, i64* %265, align 8
  %266 = bitcast %"class.spvtools::opt::Instruction"** %20 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.spvtools::opt::Instruction"** %259 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %269 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %268, align 8
  %270 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %269, i64 0, i32 1
  %271 = bitcast %"class.spvtools::opt::Instruction"** %270 to i64*
  store i64 %267, i64* %271, align 8
  %272 = bitcast %"class.spvtools::opt::Instruction"** %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 0, i64 16, i1 false) #12
  %273 = bitcast %"class.std::__1::unique_ptr.21"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #12
  %274 = ptrtoint %"class.spvtools::opt::Instruction"* %11 to i64
  %275 = bitcast %"class.std::__1::unique_ptr.21"* %10 to i64*
  store i64 %274, i64* %275, align 8
  %276 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt11Instruction12InsertBeforeEONSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.spvtools::opt::Instruction"* nonnull %251, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %10) #12
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %10, i64 0, i32 0, i32 0, i32 0
  %278 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %277, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %277, align 8
  %279 = icmp eq %"class.spvtools::opt::Instruction"* %278, null
  br i1 %279, label %285, label %280

280:                                              ; preds = %258
  %281 = bitcast %"class.spvtools::opt::Instruction"* %278 to void (%"class.spvtools::opt::Instruction"*)***
  %282 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %281, align 8
  %283 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %282, i64 1
  %284 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %283, align 8
  call void %284(%"class.spvtools::opt::Instruction"* nonnull %278) #12
  br label %285

285:                                              ; preds = %258, %280
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #12
  %286 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %227, align 8
  %287 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %286, %"class.spvtools::opt::Instruction"* nonnull %251)
  %288 = bitcast %"class.spvtools::opt::Instruction"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288)
  store %"class.spvtools::opt::Instruction"* %11, %"class.spvtools::opt::Instruction"** %6, align 8
  %289 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %286, i64 0, i32 11
  %290 = load i32, i32* %289, align 8
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %302, label %293

293:                                              ; preds = %285
  %294 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %286, i64 0, i32 9, i32 0
  %295 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295) #12
  %296 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %6, %"class.spvtools::opt::Instruction"*** %296, align 8
  %297 = getelementptr inbounds %"class.std::__1::tuple.1048", %"class.std::__1::tuple.1048"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %297) #12
  %298 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %294, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1048"* nonnull dereferenceable(1) %5) #12
  %299 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %298, 0
  %300 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %299, i64 3
  %301 = bitcast %"struct.std::__1::__hash_node_base.178"* %300 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %297) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295) #12
  store %"class.spvtools::opt::BasicBlock"* %287, %"class.spvtools::opt::BasicBlock"** %301, align 8
  br label %302

302:                                              ; preds = %285, %293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288)
  br label %307

303:                                              ; preds = %3, %15
  tail call void @_ZN8spvtools3opt18DeadBranchElimPass9AddBranchEjPNS0_10BasicBlockE(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %2, %"class.spvtools::opt::BasicBlock"* %1)
  %304 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %305 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %304, align 8
  %306 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %305, %"class.spvtools::opt::Instruction"* %13) #12
  br label %307

307:                                              ; preds = %303, %225, %302, %255, %43
  %308 = phi i1 [ false, %43 ], [ true, %255 ], [ true, %302 ], [ true, %225 ], [ true, %303 ]
  ret i1 %308
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEj(%"class.spvtools::opt::DeadBranchElimPass"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1034", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %5, i32 %1)
  %7 = tail call i32 @_ZNK8spvtools3opt10BasicBlock17MergeBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %6) #12
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 2048
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"* %8) #12
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 11
  %16 = load i32, i32* %15, align 8
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i32 [ %10, %2 ], [ %16, %13 ]
  %19 = phi %"class.spvtools::opt::IRContext"* [ %8, %2 ], [ %14, %13 ]
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 27, i32 0, i32 0, i32 0
  %21 = bitcast %"class.spvtools::opt::StructuredCFGAnalysis"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 11
  %24 = and i32 %18, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %50

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %27, align 8
  %29 = tail call i8* @_Znwm(i64 104) #11
  %30 = bitcast i8* %29 to %"class.spvtools::opt::analysis::DefUseManager"*
  %31 = getelementptr inbounds i8, i8* %29, i64 32
  %32 = bitcast i8* %31 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %29, i64 48
  %34 = getelementptr inbounds i8, i8* %29, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #12
  %35 = bitcast i8* %34 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %29, i64 64
  %37 = getelementptr inbounds i8, i8* %29, i64 96
  %38 = bitcast i8* %37 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %38, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %30, %"class.spvtools::opt::Module"* %28) #12
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 6
  %40 = ptrtoint i8* %29 to i64
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %39, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %41, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.62"* %39 to i64*
  store i64 %40, i64* %43, align 8
  %44 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %42, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %26
  %46 = bitcast %"class.std::__1::unique_ptr.62"* %39 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %46, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %42) #12
  br label %47

47:                                               ; preds = %45, %26
  %48 = load i32, i32* %23, align 8
  %49 = or i32 %48, 1
  store i32 %49, i32* %23, align 8
  br label %50

50:                                               ; preds = %17, %47
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 6, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %51, align 8
  %53 = bitcast %"class.std::__1::function.1034"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #12
  %54 = getelementptr inbounds %"class.std::__1::function.1034", %"class.std::__1::function.1034"* %3, i64 0, i32 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.std::__1::function.1034", %"class.std::__1::function.1034"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %54, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %55, align 8
  %56 = tail call i8* @_Znwm(i64 24) #11, !noalias !20
  %57 = bitcast i8* %56 to %"class.spvtools::opt::DeadBranchElimPass"**
  store %"class.spvtools::opt::DeadBranchElimPass"* %0, %"class.spvtools::opt::DeadBranchElimPass"** %57, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 8
  %59 = bitcast i8* %58 to i64*
  store i64 %22, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 16
  %61 = bitcast i8* %60 to i32*
  store i32 %1, i32* %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::function.1034", %"class.std::__1::function.1034"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %56, i8** %62, align 8
  %63 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEjRKNSt3__18functionIFbPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %52, i32 %7, %"class.std::__1::function.1034"* nonnull dereferenceable(32) %3) #12
  %64 = xor i1 %63, true
  %65 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %55, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %65, i64 0, i32 1
  %67 = load void (i8*)*, void (i8*)** %66, align 8
  %68 = icmp eq void (i8*)* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %50
  %70 = load i8*, i8** %62, align 8
  call void %67(i8* %70) #12
  br label %71

71:                                               ; preds = %69, %50
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #12
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18DeadBranchElimPass31FindFirstExitFromSelectionMergeEjjjjj(%"class.spvtools::opt::DeadBranchElimPass"* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = icmp eq i32 %1, %2
  %8 = icmp eq i32 %1, %3
  %9 = or i1 %7, %8
  %10 = icmp eq i32 %1, %4
  %11 = or i1 %10, %9
  br i1 %11, label %174, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = icmp eq i32 %3, %2
  %15 = icmp eq i32 %4, %2
  %16 = icmp eq i32 %5, %2
  br label %17

17:                                               ; preds = %12, %167
  %18 = phi i32 [ %1, %12 ], [ %168, %167 ]
  %19 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %20 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %19, i32 %18)
  %21 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %20, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %22 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, align 8, !noalias !25
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %174 [
    i32 250, label %25
    i32 251, label %95
    i32 249, label %152
  ]

25:                                               ; preds = %17
  %26 = tail call i32 @_ZNK8spvtools3opt10BasicBlock17MergeBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %20) #12
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %167

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 3
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 4
  %31 = load i8, i8* %29, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  %33 = load i8, i8* %30, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i32 1, i32 2
  %36 = xor i1 %34, true
  %37 = zext i1 %36 to i32
  %38 = select i1 %32, i32 %37, i32 %35
  %39 = add nuw nsw i32 %38, 1
  %40 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %39) #12
  %41 = icmp ne i32 %40, %3
  %42 = or i1 %14, %41
  br i1 %42, label %56, label %82

43:                                               ; preds = %69
  %44 = load i8, i8* %29, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = load i8, i8* %30, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i32 1, i32 2
  %49 = xor i1 %47, true
  %50 = zext i1 %49 to i32
  %51 = select i1 %45, i32 %50, i32 %48
  %52 = add nuw nsw i32 %51, 2
  %53 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %52) #12
  %54 = icmp ne i32 %53, %3
  %55 = or i1 %14, %54
  br i1 %55, label %176, label %82

56:                                               ; preds = %28
  %57 = load i8, i8* %29, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  %59 = load i8, i8* %30, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %60, i32 1, i32 2
  %62 = xor i1 %60, true
  %63 = zext i1 %62 to i32
  %64 = select i1 %58, i32 %63, i32 %61
  %65 = add nuw nsw i32 %64, 1
  %66 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %65) #12
  %67 = icmp ne i32 %66, %4
  %68 = or i1 %15, %67
  br i1 %68, label %69, label %82

69:                                               ; preds = %56
  %70 = load i8, i8* %29, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = load i8, i8* %30, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i32 1, i32 2
  %75 = xor i1 %73, true
  %76 = zext i1 %75 to i32
  %77 = select i1 %71, i32 %76, i32 %74
  %78 = add nuw nsw i32 %77, 1
  %79 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %78) #12
  %80 = icmp ne i32 %79, %5
  %81 = or i1 %16, %80
  br i1 %81, label %43, label %82

82:                                               ; preds = %69, %189, %56, %176, %28, %43
  %83 = phi i32 [ 2, %28 ], [ 1, %43 ], [ 2, %56 ], [ 1, %176 ], [ 2, %69 ], [ 1, %189 ]
  %84 = load i8, i8* %29, align 4, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = load i8, i8* %30, align 1, !range !2
  %87 = icmp eq i8 %86, 0
  %88 = select i1 %87, i32 1, i32 2
  %89 = xor i1 %87, true
  %90 = zext i1 %89 to i32
  %91 = select i1 %85, i32 %90, i32 %88
  %92 = add nuw nsw i32 %83, %91
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %92) #12
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %174, label %167

95:                                               ; preds = %17
  %96 = tail call i32 @_ZNK8spvtools3opt10BasicBlock17MergeBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %20) #12
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %167

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 6
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 6, i32 0, i32 1
  %101 = bitcast %"struct.spvtools::opt::Operand"** %100 to i64*
  %102 = bitcast %"class.std::__1::vector"* %99 to i64*
  %103 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 3
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 4
  br label %105

105:                                              ; preds = %98, %145
  %106 = phi i32 [ %146, %145 ], [ 0, %98 ]
  %107 = phi i8 [ %147, %145 ], [ 0, %98 ]
  %108 = phi i32 [ %148, %145 ], [ 1, %98 ]
  %109 = load i64, i64* %101, align 8
  %110 = load i64, i64* %102, align 8
  %111 = sub i64 %109, %110
  %112 = sdiv exact i64 %111, 48
  %113 = load i8, i8* %103, align 4, !range !2
  %114 = icmp eq i8 %113, 0
  %115 = load i8, i8* %104, align 1, !range !2
  %116 = icmp eq i8 %115, 0
  %117 = select i1 %116, i32 1, i32 2
  %118 = xor i1 %116, true
  %119 = zext i1 %118 to i32
  %120 = select i1 %114, i32 %119, i32 %117
  %121 = trunc i64 %112 to i32
  %122 = sub i32 %121, %120
  %123 = icmp ult i32 %108, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %105
  %125 = icmp eq i32 %106, 0
  br i1 %125, label %174, label %149

126:                                              ; preds = %105
  %127 = add i32 %120, %108
  %128 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %127) #12
  %129 = icmp eq i32 %128, %2
  br i1 %129, label %145, label %130

130:                                              ; preds = %126
  %131 = icmp eq i32 %128, %3
  %132 = icmp eq i32 %128, %4
  %133 = or i1 %131, %132
  br i1 %133, label %145, label %134

134:                                              ; preds = %130
  %135 = load i8, i8* %103, align 4, !range !2
  %136 = icmp eq i8 %135, 0
  %137 = load i8, i8* %104, align 1, !range !2
  %138 = icmp eq i8 %137, 0
  %139 = select i1 %138, i32 1, i32 2
  %140 = xor i1 %138, true
  %141 = zext i1 %140 to i32
  %142 = select i1 %136, i32 %141, i32 %139
  %143 = add i32 %142, %108
  %144 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %143) #12
  br label %145

145:                                              ; preds = %126, %130, %134
  %146 = phi i32 [ %144, %134 ], [ %106, %130 ], [ %106, %126 ]
  %147 = phi i8 [ %107, %134 ], [ %107, %130 ], [ 1, %126 ]
  %148 = add i32 %108, 2
  br label %105

149:                                              ; preds = %124
  %150 = and i8 %107, 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %167, label %174

152:                                              ; preds = %17
  %153 = tail call i32 @_ZNK8spvtools3opt10BasicBlock17MergeBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %20) #12
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %167

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 3
  %157 = load i8, i8* %156, align 4, !range !2
  %158 = icmp eq i8 %157, 0
  %159 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 4
  %160 = load i8, i8* %159, align 1, !range !2
  %161 = icmp eq i8 %160, 0
  %162 = select i1 %161, i32 1, i32 2
  %163 = xor i1 %161, true
  %164 = zext i1 %163 to i32
  %165 = select i1 %158, i32 %164, i32 %162
  %166 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %165) #12
  br label %167

167:                                              ; preds = %82, %25, %95, %155, %152, %149
  %168 = phi i32 [ %166, %155 ], [ %153, %152 ], [ %96, %95 ], [ %93, %82 ], [ %26, %25 ], [ %106, %149 ]
  %169 = icmp eq i32 %168, %2
  %170 = icmp eq i32 %168, %3
  %171 = or i1 %169, %170
  %172 = icmp eq i32 %168, %4
  %173 = or i1 %172, %171
  br i1 %173, label %174, label %17

174:                                              ; preds = %189, %167, %82, %17, %124, %149, %6
  %175 = phi %"class.spvtools::opt::Instruction"* [ null, %6 ], [ %22, %189 ], [ null, %167 ], [ %22, %82 ], [ null, %17 ], [ null, %124 ], [ %22, %149 ]
  ret %"class.spvtools::opt::Instruction"* %175

176:                                              ; preds = %43
  %177 = load i8, i8* %29, align 4, !range !2
  %178 = icmp eq i8 %177, 0
  %179 = load i8, i8* %30, align 1, !range !2
  %180 = icmp eq i8 %179, 0
  %181 = select i1 %180, i32 1, i32 2
  %182 = xor i1 %180, true
  %183 = zext i1 %182 to i32
  %184 = select i1 %178, i32 %183, i32 %181
  %185 = add nuw nsw i32 %184, 2
  %186 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %185) #12
  %187 = icmp ne i32 %186, %4
  %188 = or i1 %15, %187
  br i1 %188, label %189, label %82

189:                                              ; preds = %176
  %190 = load i8, i8* %29, align 4, !range !2
  %191 = icmp eq i8 %190, 0
  %192 = load i8, i8* %30, align 1, !range !2
  %193 = icmp eq i8 %192, 0
  %194 = select i1 %193, i32 1, i32 2
  %195 = xor i1 %193, true
  %196 = zext i1 %195 to i32
  %197 = select i1 %191, i32 %196, i32 %194
  %198 = add nuw nsw i32 %197, 2
  %199 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %198) #12
  %200 = icmp ne i32 %199, %5
  %201 = or i1 %16, %200
  br i1 %201, label %174, label %82
}

declare i32 @_ZN8spvtools3opt21StructuredCFGAnalysis14LoopMergeBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"*, i32) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt21StructuredCFGAnalysis17LoopContinueBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"*, i32) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt21StructuredCFGAnalysis16SwitchMergeBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt11Instruction12InsertBeforeEONSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.spvtools::opt::Instruction"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18DeadBranchElimPass32MarkUnreachableStructuredTargetsERKNSt3__113unordered_setIPNS0_10BasicBlockENS2_4hashIS5_EENS2_8equal_toIS5_EENS2_9allocatorIS5_EEEEPSC_PNS2_13unordered_mapIS5_S5_S7_S9_NSA_INS2_4pairIKS5_S5_EEEEEE(%"class.spvtools::opt::DeadBranchElimPass"* nocapture readonly, %"class.std::__1::unordered_set.933"* nocapture readonly dereferenceable(40), %"class.std::__1::unordered_set.933"*, %"class.std::__1::unordered_map.989"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple.1128", align 8
  %6 = alloca %"class.std::__1::tuple.1048", align 1
  %7 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %8 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %9 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.std::__1::__hash_node_base.938"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.spvtools::opt::BasicBlock"** %7 to i8*
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %2, i64 0, i32 0
  %18 = bitcast %"class.spvtools::opt::BasicBlock"** %8 to i8*
  %19 = getelementptr inbounds %"class.std::__1::unordered_map.989", %"class.std::__1::unordered_map.989"* %3, i64 0, i32 0
  %20 = bitcast %"class.std::__1::tuple.1128"* %5 to i8*
  %21 = getelementptr inbounds %"class.std::__1::tuple.1128", %"class.std::__1::tuple.1128"* %5, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::tuple.1048", %"class.std::__1::tuple.1048"* %6, i64 0, i32 0
  br label %24

23:                                               ; preds = %173, %4
  ret void

24:                                               ; preds = %13, %173
  %25 = phi i64 [ %11, %13 ], [ %175, %173 ]
  %26 = inttoptr i64 %25 to %"struct.std::__1::__hash_node.1100"*
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node.1100", %"struct.std::__1::__hash_node.1100"* %26, i64 0, i32 2
  %28 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %29 = call i32 @_ZNK8spvtools3opt10BasicBlock17MergeBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %28) #12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %173, label %31

31:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %7, align 8
  %32 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt18DeadBranchElimPass14GetParentBlockEj(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %29)
  store %"class.spvtools::opt::BasicBlock"* %32, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %33 = ptrtoint %"class.spvtools::opt::BasicBlock"* %32 to i64
  %34 = lshr i64 %33, 32
  %35 = shl i64 %33, 3
  %36 = and i64 %35, 4294967288
  %37 = add nuw nsw i64 %36, 8
  %38 = xor i64 %37, %34
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %39, %34
  %42 = xor i64 %41, %40
  %43 = mul i64 %42, -7070675565921424023
  %44 = lshr i64 %43, 47
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = load i64, i64* %15, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %96, label %49

49:                                               ; preds = %31
  %50 = call i64 @llvm.ctpop.i64(i64 %47) #12, !range !3
  %51 = icmp ugt i64 %50, 1
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = add i64 %47, -1
  %54 = and i64 %46, %53
  br label %59

55:                                               ; preds = %49
  %56 = icmp ult i64 %46, %47
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %46, %47
  br label %59

59:                                               ; preds = %57, %55, %52
  %60 = phi i64 [ %54, %52 ], [ %58, %57 ], [ %46, %55 ]
  %61 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %16, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %61, i64 %60
  %63 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.938"* %63, null
  br i1 %64, label %96, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %63, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.938"* %67, null
  br i1 %68, label %96, label %69

69:                                               ; preds = %65
  %70 = add i64 %47, -1
  br label %71

71:                                               ; preds = %92, %69
  %72 = phi %"struct.std::__1::__hash_node_base.938"* [ %67, %69 ], [ %94, %92 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %72, i64 1
  %74 = bitcast %"struct.std::__1::__hash_node_base.938"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %46, %75
  br i1 %76, label %87, label %77

77:                                               ; preds = %71
  br i1 %51, label %80, label %78

78:                                               ; preds = %77
  %79 = and i64 %75, %70
  br label %84

80:                                               ; preds = %77
  %81 = icmp ult i64 %75, %47
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = urem i64 %75, %47
  br label %84

84:                                               ; preds = %82, %80, %78
  %85 = phi i64 [ %79, %78 ], [ %83, %82 ], [ %75, %80 ]
  %86 = icmp eq i64 %85, %60
  br i1 %86, label %92, label %96

87:                                               ; preds = %71
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %72, i64 2
  %89 = bitcast %"struct.std::__1::__hash_node_base.938"* %88 to %"class.spvtools::opt::BasicBlock"**
  %90 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %89, align 8
  %91 = icmp eq %"class.spvtools::opt::BasicBlock"* %90, %32
  br i1 %91, label %98, label %92

92:                                               ; preds = %87, %84
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %72, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.938"* %94, null
  br i1 %95, label %96, label %71

96:                                               ; preds = %92, %84, %59, %31, %65
  %97 = call { %"struct.std::__1::__hash_node_base.938"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.934"* %17, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %7, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %7) #12
  br label %98

98:                                               ; preds = %87, %96
  %99 = call i32 @_ZNK8spvtools3opt10BasicBlock20ContinueBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %28) #12
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %172, label %101

101:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %8, align 8
  %102 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt18DeadBranchElimPass14GetParentBlockEj(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %99)
  store %"class.spvtools::opt::BasicBlock"* %102, %"class.spvtools::opt::BasicBlock"** %8, align 8
  %103 = ptrtoint %"class.spvtools::opt::BasicBlock"* %102 to i64
  %104 = lshr i64 %103, 32
  %105 = shl i64 %103, 3
  %106 = and i64 %105, 4294967288
  %107 = add nuw nsw i64 %106, 8
  %108 = xor i64 %107, %104
  %109 = mul i64 %108, -7070675565921424023
  %110 = lshr i64 %109, 47
  %111 = xor i64 %109, %104
  %112 = xor i64 %111, %110
  %113 = mul i64 %112, -7070675565921424023
  %114 = lshr i64 %113, 47
  %115 = xor i64 %114, %113
  %116 = mul i64 %115, -7070675565921424023
  %117 = load i64, i64* %15, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %166, label %119

119:                                              ; preds = %101
  %120 = call i64 @llvm.ctpop.i64(i64 %117) #12, !range !3
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = add i64 %117, -1
  %124 = and i64 %116, %123
  br label %129

125:                                              ; preds = %119
  %126 = icmp ult i64 %116, %117
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %116, %117
  br label %129

129:                                              ; preds = %127, %125, %122
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %116, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %16, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %131, i64 %130
  %133 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.938"* %133, null
  br i1 %134, label %166, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %133, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.938"* %137, null
  br i1 %138, label %166, label %139

139:                                              ; preds = %135
  %140 = add i64 %117, -1
  br label %141

141:                                              ; preds = %162, %139
  %142 = phi %"struct.std::__1::__hash_node_base.938"* [ %137, %139 ], [ %164, %162 ]
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %142, i64 1
  %144 = bitcast %"struct.std::__1::__hash_node_base.938"* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %116, %145
  br i1 %146, label %157, label %147

147:                                              ; preds = %141
  br i1 %121, label %150, label %148

148:                                              ; preds = %147
  %149 = and i64 %145, %140
  br label %154

150:                                              ; preds = %147
  %151 = icmp ult i64 %145, %117
  br i1 %151, label %154, label %152

152:                                              ; preds = %150
  %153 = urem i64 %145, %117
  br label %154

154:                                              ; preds = %152, %150, %148
  %155 = phi i64 [ %149, %148 ], [ %153, %152 ], [ %145, %150 ]
  %156 = icmp eq i64 %155, %130
  br i1 %156, label %162, label %166

157:                                              ; preds = %141
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %142, i64 2
  %159 = bitcast %"struct.std::__1::__hash_node_base.938"* %158 to %"class.spvtools::opt::BasicBlock"**
  %160 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %159, align 8
  %161 = icmp eq %"class.spvtools::opt::BasicBlock"* %160, %102
  br i1 %161, label %171, label %162

162:                                              ; preds = %157, %154
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %142, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.938"* %164, null
  br i1 %165, label %166, label %141

166:                                              ; preds = %162, %154, %129, %101, %135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store %"class.spvtools::opt::BasicBlock"** %8, %"class.spvtools::opt::BasicBlock"*** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #12
  %167 = call { %"struct.std::__1::__hash_node_base.994"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.990"* %19, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1128"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1048"* nonnull dereferenceable(1) %6) #12
  %168 = extractvalue { %"struct.std::__1::__hash_node_base.994"*, i8 } %167, 0
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %168, i64 3
  %170 = bitcast %"struct.std::__1::__hash_node_base.994"* %169 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  store %"class.spvtools::opt::BasicBlock"* %28, %"class.spvtools::opt::BasicBlock"** %170, align 8
  br label %171

171:                                              ; preds = %157, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %172

172:                                              ; preds = %98, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br label %173

173:                                              ; preds = %24, %172
  %174 = inttoptr i64 %25 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass23FixPhiNodesInLiveBlocksEPNS0_8FunctionERKNSt3__113unordered_setIPNS0_10BasicBlockENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEERKNS4_13unordered_mapIS7_S7_S9_SB_NSC_INS4_4pairIKS7_S7_EEEEEE(%"class.spvtools::opt::DeadBranchElimPass"*, %"class.spvtools::opt::Function"*, %"class.std::__1::unordered_set.933"* nocapture readonly dereferenceable(40), %"class.std::__1::unordered_map.989"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::initializer_list.932", align 8
  %8 = alloca [1 x i32], align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::initializer_list.932", align 8
  %11 = alloca [1 x i32], align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::initializer_list.932", align 8
  %14 = alloca [1 x i32], align 4
  %15 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.40"* %16, %18
  br i1 %19, label %54, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::vector"* %5 to i8*
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"struct.spvtools::opt::Operand"** %25 to i64*
  %28 = getelementptr inbounds %"class.std::__1::unordered_map.989", %"class.std::__1::unordered_map.989"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::unordered_map.989", %"class.std::__1::unordered_map.989"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast i32* %6 to i8*
  %32 = bitcast %"class.std::initializer_list.932"* %7 to i8*
  %33 = bitcast [1 x i32]* %8 to i8*
  %34 = getelementptr inbounds [1 x i32], [1 x i32]* %8, i64 0, i64 0
  %35 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0
  %36 = getelementptr inbounds %"class.std::initializer_list.932", %"class.std::initializer_list.932"* %7, i64 0, i32 0
  %37 = getelementptr inbounds %"class.std::initializer_list.932", %"class.std::initializer_list.932"* %7, i64 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2
  %39 = bitcast %"class.std::__1::__compressed_pair.9"* %38 to %"class.std::__1::allocator.12"*
  %40 = bitcast %"class.std::__1::vector"* %5 to i64*
  %41 = bitcast i32* %9 to i8*
  %42 = bitcast %"class.std::initializer_list.932"* %10 to i8*
  %43 = bitcast [1 x i32]* %11 to i8*
  %44 = getelementptr inbounds [1 x i32], [1 x i32]* %11, i64 0, i64 0
  %45 = getelementptr inbounds %"class.std::initializer_list.932", %"class.std::initializer_list.932"* %10, i64 0, i32 0
  %46 = getelementptr inbounds %"class.std::initializer_list.932", %"class.std::initializer_list.932"* %10, i64 0, i32 1
  %47 = bitcast i32* %12 to i8*
  %48 = bitcast %"class.std::initializer_list.932"* %13 to i8*
  %49 = bitcast [1 x i32]* %14 to i8*
  %50 = getelementptr inbounds [1 x i32], [1 x i32]* %14, i64 0, i64 0
  %51 = getelementptr inbounds %"class.std::initializer_list.932", %"class.std::initializer_list.932"* %13, i64 0, i32 0
  %52 = getelementptr inbounds %"class.std::initializer_list.932", %"class.std::initializer_list.932"* %13, i64 0, i32 1
  %53 = bitcast %"class.std::__1::vector"* %5 to i8**
  br label %58

54:                                               ; preds = %812, %4
  %55 = phi i8 [ 0, %4 ], [ %813, %812 ]
  %56 = and i8 %55, 1
  %57 = icmp ne i8 %56, 0
  ret i1 %57

58:                                               ; preds = %20, %812
  %59 = phi i8 [ 0, %20 ], [ %813, %812 ]
  %60 = phi %"class.std::__1::unique_ptr.40"* [ %16, %20 ], [ %814, %812 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %61, align 8
  %63 = ptrtoint %"class.spvtools::opt::BasicBlock"* %62 to i64
  %64 = lshr i64 %63, 32
  %65 = shl i64 %63, 3
  %66 = and i64 %65, 4294967288
  %67 = add nuw nsw i64 %66, 8
  %68 = xor i64 %67, %64
  %69 = mul i64 %68, -7070675565921424023
  %70 = lshr i64 %69, 47
  %71 = xor i64 %69, %64
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7070675565921424023
  %74 = lshr i64 %73, 47
  %75 = xor i64 %74, %73
  %76 = mul i64 %75, -7070675565921424023
  %77 = load i64, i64* %21, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %812, label %79

79:                                               ; preds = %58
  %80 = call i64 @llvm.ctpop.i64(i64 %77) #12, !range !3
  %81 = icmp ugt i64 %80, 1
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  %83 = add i64 %77, -1
  %84 = and i64 %76, %83
  br label %89

85:                                               ; preds = %79
  %86 = icmp ult i64 %76, %77
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = urem i64 %76, %77
  br label %89

89:                                               ; preds = %87, %85, %82
  %90 = phi i64 [ %84, %82 ], [ %88, %87 ], [ %76, %85 ]
  %91 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %22, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %91, i64 %90
  %93 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %92, align 8
  %94 = icmp eq %"struct.std::__1::__hash_node_base.938"* %93, null
  br i1 %94, label %812, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %93, i64 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.938"* %97, null
  br i1 %98, label %812, label %99

99:                                               ; preds = %95
  %100 = add i64 %77, -1
  br label %101

101:                                              ; preds = %122, %99
  %102 = phi %"struct.std::__1::__hash_node_base.938"* [ %97, %99 ], [ %124, %122 ]
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %102, i64 1
  %104 = bitcast %"struct.std::__1::__hash_node_base.938"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %76, %105
  br i1 %106, label %117, label %107

107:                                              ; preds = %101
  br i1 %81, label %110, label %108

108:                                              ; preds = %107
  %109 = and i64 %105, %100
  br label %114

110:                                              ; preds = %107
  %111 = icmp ult i64 %105, %77
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %105, %77
  br label %114

114:                                              ; preds = %112, %110, %108
  %115 = phi i64 [ %109, %108 ], [ %113, %112 ], [ %105, %110 ]
  %116 = icmp eq i64 %115, %90
  br i1 %116, label %122, label %812

117:                                              ; preds = %101
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %102, i64 2
  %119 = bitcast %"struct.std::__1::__hash_node_base.938"* %118 to %"class.spvtools::opt::BasicBlock"**
  %120 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %119, align 8
  %121 = icmp eq %"class.spvtools::opt::BasicBlock"* %120, %62
  br i1 %121, label %126, label %122

122:                                              ; preds = %117, %114
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %102, i64 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %123, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base.938"* %124, null
  br i1 %125, label %812, label %101

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %62, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %128 = bitcast %"class.spvtools::opt::Instruction"** %127 to i64*
  %129 = load i64, i64* %128, align 8, !noalias !28
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %62, i64 0, i32 2, i32 0, i32 1
  %131 = inttoptr i64 %129 to %"class.spvtools::opt::Instruction"*
  %132 = icmp eq %"class.spvtools::opt::Instruction"* %130, %131
  br i1 %132, label %812, label %133

133:                                              ; preds = %126, %809
  %134 = phi %"class.spvtools::opt::Instruction"* [ %810, %809 ], [ %131, %126 ]
  %135 = phi i8 [ %778, %809 ], [ %59, %126 ]
  %136 = phi i64 [ %777, %809 ], [ %129, %126 ]
  %137 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %134, i64 0, i32 2
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 245
  br i1 %139, label %140, label %812

140:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #12
  %141 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %134, i64 0, i32 6, i32 0, i32 0
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* dereferenceable(48) %142) #12
  %143 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %144 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  %145 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %146 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %143, i64 1
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %144, %145
  br i1 %147, label %164, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %144, i64 0, i32 0
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %146, i64 0, i32 0
  %151 = load i32, i32* %150, align 8
  store i32 %151, i32* %149, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %144, i64 0, i32 1
  %153 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %143, i64 1, i32 1
  %154 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %152, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %154, align 8
  %155 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %144, i64 0, i32 1, i32 1
  store i64 0, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %144, i64 0, i32 1, i32 2
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %144, i64 0, i32 1, i32 3, i64 0
  %158 = bitcast i32** %156 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %157, %"struct.std::__1::aligned_storage<4, 4>::type"** %158, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %144, i64 0, i32 1, i32 4
  %160 = bitcast %"class.std::__1::unique_ptr.0"* %159 to i64*
  store i64 0, i64* %160, align 8
  %161 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %152, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %153) #12
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %144, i64 1
  %163 = ptrtoint %"struct.spvtools::opt::Operand"* %162 to i64
  store i64 %163, i64* %27, align 8
  br label %165

164:                                              ; preds = %140
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* dereferenceable(48) %146) #12
  br label %165

165:                                              ; preds = %148, %164
  %166 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %134, i64 0, i32 6
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %134, i64 0, i32 6, i32 0, i32 1
  %168 = bitcast %"struct.spvtools::opt::Operand"** %167 to i64*
  %169 = bitcast %"class.std::__1::vector"* %166 to i64*
  %170 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %134, i64 0, i32 3
  %171 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %134, i64 0, i32 4
  br label %172

172:                                              ; preds = %568, %165
  %173 = phi i8 [ 0, %165 ], [ %569, %568 ]
  %174 = phi i8 [ 0, %165 ], [ %570, %568 ]
  %175 = phi i32 [ 1, %165 ], [ %571, %568 ]
  %176 = load i64, i64* %168, align 8
  %177 = load i64, i64* %169, align 8
  %178 = sub i64 %176, %177
  %179 = sdiv exact i64 %178, 48
  %180 = load i8, i8* %170, align 4, !range !2
  %181 = icmp eq i8 %180, 0
  %182 = load i8, i8* %171, align 1, !range !2
  %183 = icmp eq i8 %182, 0
  %184 = select i1 %183, i32 1, i32 2
  %185 = xor i1 %183, true
  %186 = zext i1 %185 to i32
  %187 = select i1 %181, i32 %186, i32 %184
  %188 = trunc i64 %179 to i32
  %189 = sub i32 %188, %187
  %190 = icmp ult i32 %175, %189
  br i1 %190, label %194, label %191

191:                                              ; preds = %172
  %192 = and i8 %173, 1
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %771, label %572

194:                                              ; preds = %172
  %195 = add i32 %187, %175
  %196 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %134, i32 %195) #12
  %197 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt18DeadBranchElimPass14GetParentBlockEj(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %196)
  %198 = ptrtoint %"class.spvtools::opt::BasicBlock"* %197 to i64
  %199 = lshr i64 %198, 32
  %200 = shl i64 %198, 3
  %201 = and i64 %200, 4294967288
  %202 = add nuw nsw i64 %201, 8
  %203 = xor i64 %202, %199
  %204 = mul i64 %203, -7070675565921424023
  %205 = lshr i64 %204, 47
  %206 = xor i64 %204, %199
  %207 = xor i64 %206, %205
  %208 = mul i64 %207, -7070675565921424023
  %209 = lshr i64 %208, 47
  %210 = xor i64 %209, %208
  %211 = mul i64 %210, -7070675565921424023
  %212 = load i64, i64* %28, align 8
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %448, label %214

214:                                              ; preds = %194
  %215 = call i64 @llvm.ctpop.i64(i64 %212) #12, !range !3
  %216 = icmp ugt i64 %215, 1
  br i1 %216, label %220, label %217

217:                                              ; preds = %214
  %218 = add i64 %212, -1
  %219 = and i64 %211, %218
  br label %224

220:                                              ; preds = %214
  %221 = icmp ult i64 %211, %212
  br i1 %221, label %224, label %222

222:                                              ; preds = %220
  %223 = urem i64 %211, %212
  br label %224

224:                                              ; preds = %222, %220, %217
  %225 = phi i64 [ %219, %217 ], [ %223, %222 ], [ %211, %220 ]
  %226 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %29, align 8
  %227 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %226, i64 %225
  %228 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %227, align 8
  %229 = icmp eq %"struct.std::__1::__hash_node_base.994"* %228, null
  br i1 %229, label %448, label %230

230:                                              ; preds = %224
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %228, i64 0, i32 0
  %232 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %231, align 8
  %233 = icmp eq %"struct.std::__1::__hash_node_base.994"* %232, null
  br i1 %233, label %448, label %234

234:                                              ; preds = %230
  %235 = add i64 %212, -1
  br label %236

236:                                              ; preds = %257, %234
  %237 = phi %"struct.std::__1::__hash_node_base.994"* [ %232, %234 ], [ %259, %257 ]
  %238 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %237, i64 1
  %239 = bitcast %"struct.std::__1::__hash_node_base.994"* %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = icmp eq i64 %211, %240
  br i1 %241, label %252, label %242

242:                                              ; preds = %236
  br i1 %216, label %245, label %243

243:                                              ; preds = %242
  %244 = and i64 %240, %235
  br label %249

245:                                              ; preds = %242
  %246 = icmp ult i64 %240, %212
  br i1 %246, label %249, label %247

247:                                              ; preds = %245
  %248 = urem i64 %240, %212
  br label %249

249:                                              ; preds = %247, %245, %243
  %250 = phi i64 [ %244, %243 ], [ %248, %247 ], [ %240, %245 ]
  %251 = icmp eq i64 %250, %225
  br i1 %251, label %257, label %448

252:                                              ; preds = %236
  %253 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %237, i64 2
  %254 = bitcast %"struct.std::__1::__hash_node_base.994"* %253 to %"class.spvtools::opt::BasicBlock"**
  %255 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %254, align 8
  %256 = icmp eq %"class.spvtools::opt::BasicBlock"* %255, %197
  br i1 %256, label %261, label %257

257:                                              ; preds = %252, %249
  %258 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %237, i64 0, i32 0
  %259 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %258, align 8
  %260 = icmp eq %"struct.std::__1::__hash_node_base.994"* %259, null
  br i1 %260, label %448, label %236

261:                                              ; preds = %252
  %262 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %237, i64 3
  %263 = bitcast %"struct.std::__1::__hash_node_base.994"* %262 to %"class.spvtools::opt::BasicBlock"**
  %264 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %263, align 8
  %265 = icmp eq %"class.spvtools::opt::BasicBlock"* %264, %62
  br i1 %265, label %266, label %448

266:                                              ; preds = %261
  %267 = load i64, i64* %168, align 8
  %268 = load i64, i64* %169, align 8
  %269 = sub i64 %267, %268
  %270 = sdiv exact i64 %269, 48
  %271 = load i8, i8* %170, align 4, !range !2
  %272 = icmp eq i8 %271, 0
  %273 = load i8, i8* %171, align 1, !range !2
  %274 = icmp eq i8 %273, 0
  %275 = select i1 %274, i32 1, i32 2
  %276 = xor i1 %274, true
  %277 = zext i1 %276 to i32
  %278 = select i1 %272, i32 %277, i32 %275
  %279 = trunc i64 %270 to i32
  %280 = sub i32 %279, %278
  %281 = icmp ugt i32 %280, 4
  br i1 %281, label %282, label %448

282:                                              ; preds = %266
  %283 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %30, align 8
  %284 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %283, i64 0, i32 11
  %285 = load i32, i32* %284, align 8
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %314

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %283, i64 0, i32 4, i32 0, i32 0, i32 0
  %290 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %289, align 8
  %291 = call i8* @_Znwm(i64 104) #11
  %292 = bitcast i8* %291 to %"class.spvtools::opt::analysis::DefUseManager"*
  %293 = getelementptr inbounds i8, i8* %291, i64 32
  %294 = bitcast i8* %293 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %291, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %294, align 4
  %295 = getelementptr inbounds i8, i8* %291, i64 48
  %296 = getelementptr inbounds i8, i8* %291, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %295, i8 0, i64 16, i1 false) #12
  %297 = bitcast i8* %296 to i8**
  store i8* %295, i8** %297, align 8
  %298 = getelementptr inbounds i8, i8* %291, i64 64
  %299 = getelementptr inbounds i8, i8* %291, i64 96
  %300 = bitcast i8* %299 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %298, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %300, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %292, %"class.spvtools::opt::Module"* %290) #12
  %301 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %283, i64 0, i32 6
  %302 = ptrtoint i8* %291 to i64
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %301, i64 0, i32 0, i32 0, i32 0
  %304 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %303, align 8
  %305 = bitcast %"class.std::__1::unique_ptr.62"* %301 to i64*
  store i64 %302, i64* %305, align 8
  %306 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %304, null
  br i1 %306, label %309, label %307

307:                                              ; preds = %288
  %308 = bitcast %"class.std::__1::unique_ptr.62"* %301 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %308, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %304) #12
  br label %309

309:                                              ; preds = %307, %288
  %310 = load i32, i32* %284, align 8
  %311 = or i32 %310, 1
  store i32 %311, i32* %284, align 8
  %312 = load i8, i8* %170, align 4, !range !2
  %313 = load i8, i8* %171, align 1, !range !2
  br label %314

314:                                              ; preds = %282, %309
  %315 = phi i8 [ %273, %282 ], [ %313, %309 ]
  %316 = phi i8 [ %271, %282 ], [ %312, %309 ]
  %317 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %283, i64 0, i32 6, i32 0, i32 0, i32 0
  %318 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %317, align 8
  %319 = add nsw i32 %175, -1
  %320 = icmp eq i8 %316, 0
  %321 = icmp eq i8 %315, 0
  %322 = select i1 %321, i32 1, i32 2
  %323 = xor i1 %321, true
  %324 = zext i1 %323 to i32
  %325 = select i1 %320, i32 %324, i32 %322
  %326 = add i32 %325, %319
  %327 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %134, i32 %326) #12
  %328 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %318, i32 %327) #12
  %329 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %328, i64 0, i32 2
  %330 = load i32, i32* %329, align 8
  %331 = icmp eq i32 %330, 1
  br i1 %331, label %332, label %399

332:                                              ; preds = %314
  %333 = load i8, i8* %170, align 4, !range !2
  %334 = icmp eq i8 %333, 0
  %335 = load i8, i8* %171, align 1, !range !2
  %336 = icmp eq i8 %335, 0
  %337 = select i1 %336, i32 1, i32 2
  %338 = xor i1 %336, true
  %339 = zext i1 %338 to i32
  %340 = select i1 %334, i32 %339, i32 %337
  %341 = add i32 %340, %319
  %342 = zext i32 %341 to i64
  %343 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %344 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %343, i64 %342
  %345 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  %346 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %347 = icmp eq %"struct.spvtools::opt::Operand"* %345, %346
  br i1 %347, label %364, label %348

348:                                              ; preds = %332
  %349 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %345, i64 0, i32 0
  %350 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %344, i64 0, i32 0
  %351 = load i32, i32* %350, align 8
  store i32 %351, i32* %349, align 8
  %352 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %345, i64 0, i32 1
  %353 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %343, i64 %342, i32 1
  %354 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %352, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %354, align 8
  %355 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %345, i64 0, i32 1, i32 1
  store i64 0, i64* %355, align 8
  %356 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %345, i64 0, i32 1, i32 2
  %357 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %345, i64 0, i32 1, i32 3, i64 0
  %358 = bitcast i32** %356 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %357, %"struct.std::__1::aligned_storage<4, 4>::type"** %358, align 8
  %359 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %345, i64 0, i32 1, i32 4
  %360 = bitcast %"class.std::__1::unique_ptr.0"* %359 to i64*
  store i64 0, i64* %360, align 8
  %361 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %352, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %353) #12
  %362 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %345, i64 1
  %363 = ptrtoint %"struct.spvtools::opt::Operand"* %362 to i64
  store i64 %363, i64* %27, align 8
  br label %366

364:                                              ; preds = %332
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* dereferenceable(48) %344) #12
  %365 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  br label %366

366:                                              ; preds = %348, %364
  %367 = phi %"struct.spvtools::opt::Operand"* [ %362, %348 ], [ %365, %364 ]
  %368 = load i8, i8* %170, align 4, !range !2
  %369 = icmp eq i8 %368, 0
  %370 = load i8, i8* %171, align 1, !range !2
  %371 = icmp eq i8 %370, 0
  %372 = select i1 %371, i32 1, i32 2
  %373 = xor i1 %371, true
  %374 = zext i1 %373 to i32
  %375 = select i1 %369, i32 %374, i32 %372
  %376 = add i32 %375, %175
  %377 = zext i32 %376 to i64
  %378 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %379 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %378, i64 %377
  %380 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %381 = icmp eq %"struct.spvtools::opt::Operand"* %367, %380
  br i1 %381, label %398, label %382

382:                                              ; preds = %366
  %383 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %367, i64 0, i32 0
  %384 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %379, i64 0, i32 0
  %385 = load i32, i32* %384, align 8
  store i32 %385, i32* %383, align 8
  %386 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %367, i64 0, i32 1
  %387 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %378, i64 %377, i32 1
  %388 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %386, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %388, align 8
  %389 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %367, i64 0, i32 1, i32 1
  store i64 0, i64* %389, align 8
  %390 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %367, i64 0, i32 1, i32 2
  %391 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %367, i64 0, i32 1, i32 3, i64 0
  %392 = bitcast i32** %390 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %391, %"struct.std::__1::aligned_storage<4, 4>::type"** %392, align 8
  %393 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %367, i64 0, i32 1, i32 4
  %394 = bitcast %"class.std::__1::unique_ptr.0"* %393 to i64*
  store i64 0, i64* %394, align 8
  %395 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %386, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %387) #12
  %396 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %367, i64 1
  %397 = ptrtoint %"struct.spvtools::opt::Operand"* %396 to i64
  store i64 %397, i64* %27, align 8
  br label %568

398:                                              ; preds = %366
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* dereferenceable(48) %379) #12
  br label %568

399:                                              ; preds = %314
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #12
  store i32 1, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  %400 = load i8, i8* %170, align 4, !range !2
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %404, label %402

402:                                              ; preds = %399
  %403 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %134, i32 0) #12
  br label %404

404:                                              ; preds = %399, %402
  %405 = phi i32 [ %403, %402 ], [ 0, %399 ]
  %406 = call i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"* %35, i32 %405) #12
  store i32 %406, i32* %34, align 4
  store i32* %34, i32** %36, align 8
  store i64 1, i64* %37, align 8
  %407 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  %408 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %409 = icmp ult %"struct.spvtools::opt::Operand"* %407, %408
  br i1 %409, label %410, label %413

410:                                              ; preds = %404
  call void @_ZNSt3__19allocatorIN8spvtools3opt7OperandEE9constructIS3_J18spv_operand_type_tSt16initializer_listIjEEEEvPT_DpOT0_(%"class.std::__1::allocator.12"* %39, %"struct.spvtools::opt::Operand"* %407, i32* nonnull dereferenceable(4) %6, %"class.std::initializer_list.932"* nonnull dereferenceable(16) %7) #12
  %411 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %407, i64 1
  %412 = ptrtoint %"struct.spvtools::opt::Operand"* %411 to i64
  store i64 %412, i64* %27, align 8
  br label %415

413:                                              ; preds = %404
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJ18spv_operand_type_tSt16initializer_listIjEEEEvDpOT_(%"class.std::__1::vector"* nonnull %5, i32* nonnull dereferenceable(4) %6, %"class.std::initializer_list.932"* nonnull dereferenceable(16) %7) #12
  %414 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  br label %415

415:                                              ; preds = %410, %413
  %416 = phi %"struct.spvtools::opt::Operand"* [ %411, %410 ], [ %414, %413 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #12
  %417 = load i8, i8* %170, align 4, !range !2
  %418 = icmp eq i8 %417, 0
  %419 = load i8, i8* %171, align 1, !range !2
  %420 = icmp eq i8 %419, 0
  %421 = select i1 %420, i32 1, i32 2
  %422 = xor i1 %420, true
  %423 = zext i1 %422 to i32
  %424 = select i1 %418, i32 %423, i32 %421
  %425 = add i32 %424, %175
  %426 = zext i32 %425 to i64
  %427 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %428 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %427, i64 %426
  %429 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %430 = icmp eq %"struct.spvtools::opt::Operand"* %416, %429
  br i1 %430, label %447, label %431

431:                                              ; preds = %415
  %432 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %416, i64 0, i32 0
  %433 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %428, i64 0, i32 0
  %434 = load i32, i32* %433, align 8
  store i32 %434, i32* %432, align 8
  %435 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %416, i64 0, i32 1
  %436 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %427, i64 %426, i32 1
  %437 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %435, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %437, align 8
  %438 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %416, i64 0, i32 1, i32 1
  store i64 0, i64* %438, align 8
  %439 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %416, i64 0, i32 1, i32 2
  %440 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %416, i64 0, i32 1, i32 3, i64 0
  %441 = bitcast i32** %439 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %440, %"struct.std::__1::aligned_storage<4, 4>::type"** %441, align 8
  %442 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %416, i64 0, i32 1, i32 4
  %443 = bitcast %"class.std::__1::unique_ptr.0"* %442 to i64*
  store i64 0, i64* %443, align 8
  %444 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %435, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %436) #12
  %445 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %416, i64 1
  %446 = ptrtoint %"struct.spvtools::opt::Operand"* %445 to i64
  store i64 %446, i64* %27, align 8
  br label %568

447:                                              ; preds = %415
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* dereferenceable(48) %428) #12
  br label %568

448:                                              ; preds = %257, %249, %230, %194, %224, %261, %266
  %449 = load i64, i64* %21, align 8
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %568, label %451

451:                                              ; preds = %448
  %452 = call i64 @llvm.ctpop.i64(i64 %449) #12, !range !3
  %453 = icmp ugt i64 %452, 1
  br i1 %453, label %457, label %454

454:                                              ; preds = %451
  %455 = add i64 %449, -1
  %456 = and i64 %455, %211
  br label %461

457:                                              ; preds = %451
  %458 = icmp ult i64 %211, %449
  br i1 %458, label %461, label %459

459:                                              ; preds = %457
  %460 = urem i64 %211, %449
  br label %461

461:                                              ; preds = %459, %457, %454
  %462 = phi i64 [ %456, %454 ], [ %460, %459 ], [ %211, %457 ]
  %463 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %22, align 8
  %464 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %463, i64 %462
  %465 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %464, align 8
  %466 = icmp eq %"struct.std::__1::__hash_node_base.938"* %465, null
  br i1 %466, label %568, label %467

467:                                              ; preds = %461
  %468 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %465, i64 0, i32 0
  %469 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %468, align 8
  %470 = icmp eq %"struct.std::__1::__hash_node_base.938"* %469, null
  br i1 %470, label %568, label %471

471:                                              ; preds = %467
  %472 = add i64 %449, -1
  br label %473

473:                                              ; preds = %494, %471
  %474 = phi %"struct.std::__1::__hash_node_base.938"* [ %469, %471 ], [ %496, %494 ]
  %475 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %474, i64 1
  %476 = bitcast %"struct.std::__1::__hash_node_base.938"* %475 to i64*
  %477 = load i64, i64* %476, align 8
  %478 = icmp eq i64 %211, %477
  br i1 %478, label %489, label %479

479:                                              ; preds = %473
  br i1 %453, label %482, label %480

480:                                              ; preds = %479
  %481 = and i64 %477, %472
  br label %486

482:                                              ; preds = %479
  %483 = icmp ult i64 %477, %449
  br i1 %483, label %486, label %484

484:                                              ; preds = %482
  %485 = urem i64 %477, %449
  br label %486

486:                                              ; preds = %484, %482, %480
  %487 = phi i64 [ %481, %480 ], [ %485, %484 ], [ %477, %482 ]
  %488 = icmp eq i64 %487, %462
  br i1 %488, label %494, label %568

489:                                              ; preds = %473
  %490 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %474, i64 2
  %491 = bitcast %"struct.std::__1::__hash_node_base.938"* %490 to %"class.spvtools::opt::BasicBlock"**
  %492 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %491, align 8
  %493 = icmp eq %"class.spvtools::opt::BasicBlock"* %492, %197
  br i1 %493, label %498, label %494

494:                                              ; preds = %489, %486
  %495 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %474, i64 0, i32 0
  %496 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %495, align 8
  %497 = icmp eq %"struct.std::__1::__hash_node_base.938"* %496, null
  br i1 %497, label %568, label %473

498:                                              ; preds = %489
  %499 = call zeroext i1 @_ZNK8spvtools3opt10BasicBlock11IsSuccessorEPKS1_(%"class.spvtools::opt::BasicBlock"* %197, %"class.spvtools::opt::BasicBlock"* %62) #12
  br i1 %499, label %500, label %568

500:                                              ; preds = %498
  %501 = add nsw i32 %175, -1
  %502 = load i8, i8* %170, align 4, !range !2
  %503 = icmp eq i8 %502, 0
  %504 = load i8, i8* %171, align 1, !range !2
  %505 = icmp eq i8 %504, 0
  %506 = select i1 %505, i32 1, i32 2
  %507 = xor i1 %505, true
  %508 = zext i1 %507 to i32
  %509 = select i1 %503, i32 %508, i32 %506
  %510 = add i32 %501, %509
  %511 = zext i32 %510 to i64
  %512 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %513 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %512, i64 %511
  %514 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  %515 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %516 = icmp eq %"struct.spvtools::opt::Operand"* %514, %515
  br i1 %516, label %533, label %517

517:                                              ; preds = %500
  %518 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 0
  %519 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %513, i64 0, i32 0
  %520 = load i32, i32* %519, align 8
  store i32 %520, i32* %518, align 8
  %521 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1
  %522 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %512, i64 %511, i32 1
  %523 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %521, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %523, align 8
  %524 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1, i32 1
  store i64 0, i64* %524, align 8
  %525 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1, i32 2
  %526 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1, i32 3, i64 0
  %527 = bitcast i32** %525 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %526, %"struct.std::__1::aligned_storage<4, 4>::type"** %527, align 8
  %528 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1, i32 4
  %529 = bitcast %"class.std::__1::unique_ptr.0"* %528 to i64*
  store i64 0, i64* %529, align 8
  %530 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %521, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %522) #12
  %531 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 1
  %532 = ptrtoint %"struct.spvtools::opt::Operand"* %531 to i64
  store i64 %532, i64* %27, align 8
  br label %535

533:                                              ; preds = %500
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* dereferenceable(48) %513) #12
  %534 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  br label %535

535:                                              ; preds = %517, %533
  %536 = phi %"struct.spvtools::opt::Operand"* [ %531, %517 ], [ %534, %533 ]
  %537 = load i8, i8* %170, align 4, !range !2
  %538 = icmp eq i8 %537, 0
  %539 = load i8, i8* %171, align 1, !range !2
  %540 = icmp eq i8 %539, 0
  %541 = select i1 %540, i32 1, i32 2
  %542 = xor i1 %540, true
  %543 = zext i1 %542 to i32
  %544 = select i1 %538, i32 %543, i32 %541
  %545 = add i32 %544, %175
  %546 = zext i32 %545 to i64
  %547 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %548 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %547, i64 %546
  %549 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %550 = icmp eq %"struct.spvtools::opt::Operand"* %536, %549
  br i1 %550, label %567, label %551

551:                                              ; preds = %535
  %552 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %536, i64 0, i32 0
  %553 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %548, i64 0, i32 0
  %554 = load i32, i32* %553, align 8
  store i32 %554, i32* %552, align 8
  %555 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %536, i64 0, i32 1
  %556 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %547, i64 %546, i32 1
  %557 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %555, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %557, align 8
  %558 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %536, i64 0, i32 1, i32 1
  store i64 0, i64* %558, align 8
  %559 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %536, i64 0, i32 1, i32 2
  %560 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %536, i64 0, i32 1, i32 3, i64 0
  %561 = bitcast i32** %559 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %560, %"struct.std::__1::aligned_storage<4, 4>::type"** %561, align 8
  %562 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %536, i64 0, i32 1, i32 4
  %563 = bitcast %"class.std::__1::unique_ptr.0"* %562 to i64*
  store i64 0, i64* %563, align 8
  %564 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %555, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %556) #12
  %565 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %536, i64 1
  %566 = ptrtoint %"struct.spvtools::opt::Operand"* %565 to i64
  store i64 %566, i64* %27, align 8
  br label %568

567:                                              ; preds = %535
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* dereferenceable(48) %548) #12
  br label %568

568:                                              ; preds = %486, %494, %467, %448, %461, %567, %551, %447, %431, %398, %382, %498
  %569 = phi i8 [ 1, %498 ], [ %173, %382 ], [ %173, %398 ], [ 1, %431 ], [ 1, %447 ], [ %173, %551 ], [ %173, %567 ], [ 1, %461 ], [ 1, %448 ], [ 1, %467 ], [ 1, %494 ], [ 1, %486 ]
  %570 = phi i8 [ %174, %498 ], [ 1, %382 ], [ 1, %398 ], [ 1, %431 ], [ 1, %447 ], [ %174, %551 ], [ %174, %567 ], [ %174, %461 ], [ %174, %448 ], [ %174, %467 ], [ %174, %494 ], [ %174, %486 ]
  %571 = add i32 %175, 2
  br label %172

572:                                              ; preds = %191
  %573 = call i32 @_ZNK8spvtools3opt10BasicBlock20ContinueBlockIdIfAnyEv(%"class.spvtools::opt::BasicBlock"* %62) #12
  %574 = and i8 %174, 1
  %575 = icmp eq i8 %574, 0
  %576 = icmp ne i32 %573, 0
  %577 = and i1 %575, %576
  br i1 %577, label %578, label %674

578:                                              ; preds = %572
  %579 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt18DeadBranchElimPass14GetParentBlockEj(%"class.spvtools::opt::DeadBranchElimPass"* %0, i32 %573)
  %580 = ptrtoint %"class.spvtools::opt::BasicBlock"* %579 to i64
  %581 = lshr i64 %580, 32
  %582 = shl i64 %580, 3
  %583 = and i64 %582, 4294967288
  %584 = add nuw nsw i64 %583, 8
  %585 = xor i64 %584, %581
  %586 = mul i64 %585, -7070675565921424023
  %587 = lshr i64 %586, 47
  %588 = xor i64 %586, %581
  %589 = xor i64 %588, %587
  %590 = mul i64 %589, -7070675565921424023
  %591 = lshr i64 %590, 47
  %592 = xor i64 %591, %590
  %593 = mul i64 %592, -7070675565921424023
  %594 = load i64, i64* %28, align 8
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %674, label %596

596:                                              ; preds = %578
  %597 = call i64 @llvm.ctpop.i64(i64 %594) #12, !range !3
  %598 = icmp ugt i64 %597, 1
  br i1 %598, label %602, label %599

599:                                              ; preds = %596
  %600 = add i64 %594, -1
  %601 = and i64 %593, %600
  br label %606

602:                                              ; preds = %596
  %603 = icmp ult i64 %593, %594
  br i1 %603, label %606, label %604

604:                                              ; preds = %602
  %605 = urem i64 %593, %594
  br label %606

606:                                              ; preds = %604, %602, %599
  %607 = phi i64 [ %601, %599 ], [ %605, %604 ], [ %593, %602 ]
  %608 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %29, align 8
  %609 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %608, i64 %607
  %610 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %609, align 8
  %611 = icmp eq %"struct.std::__1::__hash_node_base.994"* %610, null
  br i1 %611, label %674, label %612

612:                                              ; preds = %606
  %613 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %610, i64 0, i32 0
  %614 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %613, align 8
  %615 = icmp eq %"struct.std::__1::__hash_node_base.994"* %614, null
  br i1 %615, label %674, label %616

616:                                              ; preds = %612
  %617 = add i64 %594, -1
  br label %618

618:                                              ; preds = %639, %616
  %619 = phi %"struct.std::__1::__hash_node_base.994"* [ %614, %616 ], [ %641, %639 ]
  %620 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %619, i64 1
  %621 = bitcast %"struct.std::__1::__hash_node_base.994"* %620 to i64*
  %622 = load i64, i64* %621, align 8
  %623 = icmp eq i64 %593, %622
  br i1 %623, label %634, label %624

624:                                              ; preds = %618
  br i1 %598, label %627, label %625

625:                                              ; preds = %624
  %626 = and i64 %622, %617
  br label %631

627:                                              ; preds = %624
  %628 = icmp ult i64 %622, %594
  br i1 %628, label %631, label %629

629:                                              ; preds = %627
  %630 = urem i64 %622, %594
  br label %631

631:                                              ; preds = %629, %627, %625
  %632 = phi i64 [ %626, %625 ], [ %630, %629 ], [ %622, %627 ]
  %633 = icmp eq i64 %632, %607
  br i1 %633, label %639, label %674

634:                                              ; preds = %618
  %635 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %619, i64 2
  %636 = bitcast %"struct.std::__1::__hash_node_base.994"* %635 to %"class.spvtools::opt::BasicBlock"**
  %637 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %636, align 8
  %638 = icmp eq %"class.spvtools::opt::BasicBlock"* %637, %579
  br i1 %638, label %643, label %639

639:                                              ; preds = %634, %631
  %640 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %619, i64 0, i32 0
  %641 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %640, align 8
  %642 = icmp eq %"struct.std::__1::__hash_node_base.994"* %641, null
  br i1 %642, label %674, label %618

643:                                              ; preds = %634
  %644 = load i64, i64* %27, align 8
  %645 = load i64, i64* %40, align 8
  %646 = sub i64 %644, %645
  %647 = sdiv exact i64 %646, 48
  %648 = icmp ugt i64 %647, 4
  br i1 %648, label %649, label %674

649:                                              ; preds = %643
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #12
  store i32 1, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #12
  %650 = load i8, i8* %170, align 4, !range !2
  %651 = icmp eq i8 %650, 0
  br i1 %651, label %654, label %652

652:                                              ; preds = %649
  %653 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %134, i32 0) #12
  br label %654

654:                                              ; preds = %649, %652
  %655 = phi i32 [ %653, %652 ], [ 0, %649 ]
  %656 = call i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"* %35, i32 %655) #12
  store i32 %656, i32* %44, align 4
  store i32* %44, i32** %45, align 8
  store i64 1, i64* %46, align 8
  %657 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  %658 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %659 = icmp ult %"struct.spvtools::opt::Operand"* %657, %658
  br i1 %659, label %660, label %663

660:                                              ; preds = %654
  call void @_ZNSt3__19allocatorIN8spvtools3opt7OperandEE9constructIS3_J18spv_operand_type_tSt16initializer_listIjEEEEvPT_DpOT0_(%"class.std::__1::allocator.12"* %39, %"struct.spvtools::opt::Operand"* %657, i32* nonnull dereferenceable(4) %9, %"class.std::initializer_list.932"* nonnull dereferenceable(16) %10) #12
  %661 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %657, i64 1
  %662 = ptrtoint %"struct.spvtools::opt::Operand"* %661 to i64
  store i64 %662, i64* %27, align 8
  br label %665

663:                                              ; preds = %654
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJ18spv_operand_type_tSt16initializer_listIjEEEEvDpOT_(%"class.std::__1::vector"* nonnull %5, i32* nonnull dereferenceable(4) %9, %"class.std::initializer_list.932"* nonnull dereferenceable(16) %10) #12
  %664 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  br label %665

665:                                              ; preds = %660, %663
  %666 = phi %"struct.spvtools::opt::Operand"* [ %661, %660 ], [ %664, %663 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #12
  store i32 1, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #12
  store i32 %573, i32* %50, align 4
  store i32* %50, i32** %51, align 8
  store i64 1, i64* %52, align 8
  %667 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %668 = icmp ult %"struct.spvtools::opt::Operand"* %666, %667
  br i1 %668, label %669, label %672

669:                                              ; preds = %665
  call void @_ZNSt3__19allocatorIN8spvtools3opt7OperandEE9constructIS3_J18spv_operand_type_tSt16initializer_listIjEEEEvPT_DpOT0_(%"class.std::__1::allocator.12"* %39, %"struct.spvtools::opt::Operand"* %666, i32* nonnull dereferenceable(4) %12, %"class.std::initializer_list.932"* nonnull dereferenceable(16) %13) #12
  %670 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %666, i64 1
  %671 = ptrtoint %"struct.spvtools::opt::Operand"* %670 to i64
  store i64 %671, i64* %27, align 8
  br label %673

672:                                              ; preds = %665
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJ18spv_operand_type_tSt16initializer_listIjEEEEvDpOT_(%"class.std::__1::vector"* nonnull %5, i32* nonnull dereferenceable(4) %12, %"class.std::initializer_list.932"* nonnull dereferenceable(16) %13) #12
  br label %673

673:                                              ; preds = %669, %672
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #12
  br label %674

674:                                              ; preds = %631, %639, %572, %612, %578, %606, %673, %643
  %675 = load i64, i64* %27, align 8
  %676 = load i64, i64* %40, align 8
  %677 = sub i64 %675, %676
  %678 = icmp eq i64 %677, 192
  %679 = inttoptr i64 %676 to %"struct.spvtools::opt::Operand"*
  br i1 %678, label %680, label %702

680:                                              ; preds = %674
  %681 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %679, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %682 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %681, align 8
  %683 = icmp eq %"class.std::__1::vector.3"* %682, null
  %684 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %682, i64 0, i32 0, i32 0
  %685 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %679, i64 2, i32 1, i32 2
  %686 = select i1 %683, i32** %685, i32** %684
  %687 = load i32*, i32** %686, align 8
  %688 = load i32, i32* %687, align 4
  %689 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %30, align 8
  %690 = load i8, i8* %171, align 1, !range !2
  %691 = icmp eq i8 %690, 0
  br i1 %691, label %696, label %692

692:                                              ; preds = %680
  %693 = load i8, i8* %170, align 4, !range !2
  %694 = zext i8 %693 to i32
  %695 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %134, i32 %694) #12
  br label %696

696:                                              ; preds = %680, %692
  %697 = phi i32 [ %695, %692 ], [ 0, %680 ]
  %698 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %689, i32 %697, i32 %688) #12
  %699 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %30, align 8
  %700 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %699, %"class.spvtools::opt::Instruction"* %134) #12
  %701 = ptrtoint %"class.spvtools::opt::Instruction"* %700 to i64
  br label %776

702:                                              ; preds = %674
  %703 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %30, align 8
  %704 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %703, i64 0, i32 11
  %705 = load i32, i32* %704, align 8
  %706 = and i32 %705, 1
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %708, label %732

708:                                              ; preds = %702
  %709 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %703, i64 0, i32 4, i32 0, i32 0, i32 0
  %710 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %709, align 8
  %711 = call i8* @_Znwm(i64 104) #11
  %712 = bitcast i8* %711 to %"class.spvtools::opt::analysis::DefUseManager"*
  %713 = getelementptr inbounds i8, i8* %711, i64 32
  %714 = bitcast i8* %713 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %711, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %714, align 4
  %715 = getelementptr inbounds i8, i8* %711, i64 48
  %716 = getelementptr inbounds i8, i8* %711, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %715, i8 0, i64 16, i1 false) #12
  %717 = bitcast i8* %716 to i8**
  store i8* %715, i8** %717, align 8
  %718 = getelementptr inbounds i8, i8* %711, i64 64
  %719 = getelementptr inbounds i8, i8* %711, i64 96
  %720 = bitcast i8* %719 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %718, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %720, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %712, %"class.spvtools::opt::Module"* %710) #12
  %721 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %703, i64 0, i32 6
  %722 = ptrtoint i8* %711 to i64
  %723 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %721, i64 0, i32 0, i32 0, i32 0
  %724 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %723, align 8
  %725 = bitcast %"class.std::__1::unique_ptr.62"* %721 to i64*
  store i64 %722, i64* %725, align 8
  %726 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %724, null
  br i1 %726, label %729, label %727

727:                                              ; preds = %708
  %728 = bitcast %"class.std::__1::unique_ptr.62"* %721 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %728, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %724) #12
  br label %729

729:                                              ; preds = %727, %708
  %730 = load i32, i32* %704, align 8
  %731 = or i32 %730, 1
  store i32 %731, i32* %704, align 8
  br label %732

732:                                              ; preds = %702, %729
  %733 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %703, i64 0, i32 6, i32 0, i32 0, i32 0
  %734 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %733, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager27EraseUseRecordsOfOperandIdsEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %734, %"class.spvtools::opt::Instruction"* %134) #12
  call void @_ZN8spvtools3opt11Instruction15ReplaceOperandsERKNSt3__16vectorINS0_7OperandENS2_9allocatorIS4_EEEE(%"class.spvtools::opt::Instruction"* %134, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #12
  %735 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %30, align 8
  %736 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %735, i64 0, i32 11
  %737 = load i32, i32* %736, align 8
  %738 = and i32 %737, 1
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %740, label %764

740:                                              ; preds = %732
  %741 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %735, i64 0, i32 4, i32 0, i32 0, i32 0
  %742 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %741, align 8
  %743 = call i8* @_Znwm(i64 104) #11
  %744 = bitcast i8* %743 to %"class.spvtools::opt::analysis::DefUseManager"*
  %745 = getelementptr inbounds i8, i8* %743, i64 32
  %746 = bitcast i8* %745 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %743, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %746, align 4
  %747 = getelementptr inbounds i8, i8* %743, i64 48
  %748 = getelementptr inbounds i8, i8* %743, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %747, i8 0, i64 16, i1 false) #12
  %749 = bitcast i8* %748 to i8**
  store i8* %747, i8** %749, align 8
  %750 = getelementptr inbounds i8, i8* %743, i64 64
  %751 = getelementptr inbounds i8, i8* %743, i64 96
  %752 = bitcast i8* %751 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %750, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %752, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %744, %"class.spvtools::opt::Module"* %742) #12
  %753 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %735, i64 0, i32 6
  %754 = ptrtoint i8* %743 to i64
  %755 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %753, i64 0, i32 0, i32 0, i32 0
  %756 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %755, align 8
  %757 = bitcast %"class.std::__1::unique_ptr.62"* %753 to i64*
  store i64 %754, i64* %757, align 8
  %758 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %756, null
  br i1 %758, label %761, label %759

759:                                              ; preds = %740
  %760 = bitcast %"class.std::__1::unique_ptr.62"* %753 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %760, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %756) #12
  br label %761

761:                                              ; preds = %759, %740
  %762 = load i32, i32* %736, align 8
  %763 = or i32 %762, 1
  store i32 %763, i32* %736, align 8
  br label %764

764:                                              ; preds = %732, %761
  %765 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %735, i64 0, i32 6, i32 0, i32 0, i32 0
  %766 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %765, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %766, %"class.spvtools::opt::Instruction"* %134) #12
  %767 = inttoptr i64 %136 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %768 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %767, i64 0, i32 1
  %769 = bitcast %"class.spvtools::opt::Instruction"** %768 to i64*
  %770 = load i64, i64* %769, align 8
  br label %776

771:                                              ; preds = %191
  %772 = inttoptr i64 %136 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %773 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %772, i64 0, i32 1
  %774 = bitcast %"class.spvtools::opt::Instruction"** %773 to i64*
  %775 = load i64, i64* %774, align 8
  br label %776

776:                                              ; preds = %696, %764, %771
  %777 = phi i64 [ %775, %771 ], [ %701, %696 ], [ %770, %764 ]
  %778 = phi i8 [ %135, %771 ], [ 1, %696 ], [ 1, %764 ]
  %779 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %24, align 8
  %780 = icmp eq %"struct.spvtools::opt::Operand"* %779, null
  br i1 %780, label %809, label %781

781:                                              ; preds = %776
  %782 = bitcast %"struct.spvtools::opt::Operand"* %779 to i8*
  %783 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %25, align 8
  %784 = icmp eq %"struct.spvtools::opt::Operand"* %783, %779
  br i1 %784, label %807, label %785

785:                                              ; preds = %781, %803
  %786 = phi %"struct.spvtools::opt::Operand"* [ %787, %803 ], [ %783, %781 ]
  %787 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %786, i64 -1
  %788 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %786, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %788, align 8
  %789 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %786, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %790 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %789, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %789, align 8
  %791 = icmp eq %"class.std::__1::vector.3"* %790, null
  br i1 %791, label %803, label %792

792:                                              ; preds = %785
  %793 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %790, i64 0, i32 0, i32 0
  %794 = load i32*, i32** %793, align 8
  %795 = icmp eq i32* %794, null
  br i1 %795, label %801, label %796

796:                                              ; preds = %792
  %797 = ptrtoint i32* %794 to i64
  %798 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %790, i64 0, i32 0, i32 1
  %799 = bitcast i32** %798 to i64*
  store i64 %797, i64* %799, align 8
  %800 = bitcast i32* %794 to i8*
  call void @_ZdlPv(i8* %800) #11
  br label %801

801:                                              ; preds = %796, %792
  %802 = bitcast %"class.std::__1::vector.3"* %790 to i8*
  call void @_ZdlPv(i8* %802) #11
  br label %803

803:                                              ; preds = %801, %785
  %804 = icmp eq %"struct.spvtools::opt::Operand"* %787, %779
  br i1 %804, label %805, label %785

805:                                              ; preds = %803
  %806 = load i8*, i8** %53, align 8
  br label %807

807:                                              ; preds = %805, %781
  %808 = phi i8* [ %806, %805 ], [ %782, %781 ]
  store %"struct.spvtools::opt::Operand"* %779, %"struct.spvtools::opt::Operand"** %25, align 8
  call void @_ZdlPv(i8* %808) #11
  br label %809

809:                                              ; preds = %776, %807
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  %810 = inttoptr i64 %777 to %"class.spvtools::opt::Instruction"*
  %811 = icmp eq %"class.spvtools::opt::Instruction"* %130, %810
  br i1 %811, label %812, label %133

812:                                              ; preds = %114, %122, %133, %809, %126, %95, %58, %89
  %813 = phi i8 [ %59, %89 ], [ %59, %58 ], [ %59, %95 ], [ %59, %126 ], [ %135, %133 ], [ %778, %809 ], [ %59, %122 ], [ %59, %114 ]
  %814 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %60, i64 1
  %815 = icmp eq %"class.std::__1::unique_ptr.40"* %814, %18
  br i1 %815, label %54, label %58
}

declare i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt10BasicBlock11IsSuccessorEPKS1_(%"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager27EraseUseRecordsOfOperandIdsEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt11Instruction15ReplaceOperandsERKNSt3__16vectorINS0_7OperandENS2_9allocatorIS4_EEEE(%"class.spvtools::opt::Instruction"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass15EraseDeadBlocksEPNS0_8FunctionERKNSt3__113unordered_setIPNS0_10BasicBlockENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEESG_RKNS4_13unordered_mapIS7_S7_S9_SB_NSC_INS4_4pairIKS7_S7_EEEEEE(%"class.spvtools::opt::DeadBranchElimPass"*, %"class.spvtools::opt::Function"*, %"class.std::__1::unordered_set.933"* nocapture readonly dereferenceable(40), %"class.std::__1::unordered_set.933"* nocapture readonly dereferenceable(40), %"class.std::__1::unordered_map.989"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.1048", align 1
  %8 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.1048", align 1
  %11 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %12 = alloca %"class.spvtools::opt::IRContext"*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::initializer_list", align 8
  %17 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %18 = alloca %"class.spvtools::utils::SmallVector", align 8
  %19 = alloca %"class.spvtools::opt::IRContext"*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %"class.std::initializer_list", align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3
  %25 = bitcast %"class.std::__1::vector.38"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %27, align 8
  %29 = inttoptr i64 %26 to %"class.std::__1::unique_ptr.40"*
  %30 = icmp eq %"class.std::__1::unique_ptr.40"* %28, %29
  br i1 %30, label %89, label %31

31:                                               ; preds = %5
  %32 = getelementptr inbounds %"class.std::__1::unordered_map.989", %"class.std::__1::unordered_map.989"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::unordered_map.989", %"class.std::__1::unordered_map.989"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0
  %35 = bitcast %"class.spvtools::opt::IRContext"** %12 to i8*
  %36 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %37 = bitcast %"class.spvtools::opt::IRContext"** %36 to i64*
  %38 = bitcast %"class.spvtools::opt::IRContext"** %12 to i64*
  %39 = bitcast i32* %13 to i8*
  %40 = bitcast i32* %14 to i8*
  %41 = bitcast i32* %15 to i8*
  %42 = bitcast %"class.std::initializer_list"* %16 to i8*
  %43 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %17 to i8*
  %44 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0
  %45 = bitcast %"class.spvtools::utils::SmallVector"* %18 to i8*
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 0
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 1
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 2
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %51 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  %53 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %49 to i32*
  %54 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 0
  %55 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %55, i64 0, i32 0
  %57 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 1
  %58 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 2
  %59 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 3, i64 0
  %60 = bitcast i32** %58 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %61 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 4
  %62 = bitcast %"class.std::__1::unique_ptr.0"* %61 to i64*
  %63 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %16, i64 0, i32 0
  %64 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %16, i64 0, i32 1
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = bitcast %"class.spvtools::opt::Instruction"** %8 to i8*
  %67 = bitcast %"class.spvtools::opt::Instruction"** %8 to i64*
  %68 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %69 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::tuple.1048", %"class.std::__1::tuple.1048"* %7, i64 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.spvtools::opt::IRContext"** %19 to i8*
  %74 = bitcast %"class.spvtools::opt::IRContext"** %19 to i64*
  %75 = bitcast i32* %20 to i8*
  %76 = bitcast i32* %21 to i8*
  %77 = bitcast i32* %22 to i8*
  %78 = bitcast %"class.std::initializer_list"* %23 to i8*
  %79 = bitcast %"class.spvtools::opt::Instruction"** %11 to i8*
  %80 = bitcast %"class.spvtools::opt::Instruction"** %11 to i64*
  %81 = bitcast %"class.std::__1::tuple"* %9 to i8*
  %82 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::tuple.1048", %"class.std::__1::tuple.1048"* %10, i64 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %24, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  br label %93

89:                                               ; preds = %568, %5
  %90 = phi i8 [ 0, %5 ], [ %570, %568 ]
  %91 = and i8 %90, 1
  %92 = icmp ne i8 %91, 0
  ret i1 %92

93:                                               ; preds = %31, %568
  %94 = phi i8 [ 0, %31 ], [ %570, %568 ]
  %95 = phi i64 [ %26, %31 ], [ %571, %568 ]
  %96 = inttoptr i64 %95 to %"class.std::__1::unique_ptr.40"*
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %99 = ptrtoint %"class.spvtools::opt::BasicBlock"* %98 to i64
  %100 = lshr i64 %99, 32
  %101 = shl i64 %99, 3
  %102 = and i64 %101, 4294967288
  %103 = add nuw nsw i64 %102, 8
  %104 = xor i64 %103, %100
  %105 = mul i64 %104, -7070675565921424023
  %106 = lshr i64 %105, 47
  %107 = xor i64 %105, %100
  %108 = xor i64 %107, %106
  %109 = mul i64 %108, -7070675565921424023
  %110 = lshr i64 %109, 47
  %111 = xor i64 %110, %109
  %112 = mul i64 %111, -7070675565921424023
  %113 = load i64, i64* %32, align 8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %360, label %115

115:                                              ; preds = %93
  %116 = call i64 @llvm.ctpop.i64(i64 %113) #12, !range !3
  %117 = icmp ugt i64 %116, 1
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = add i64 %113, -1
  %120 = and i64 %112, %119
  br label %125

121:                                              ; preds = %115
  %122 = icmp ult i64 %112, %113
  br i1 %122, label %125, label %123

123:                                              ; preds = %121
  %124 = urem i64 %112, %113
  br label %125

125:                                              ; preds = %123, %121, %118
  %126 = phi i64 [ %120, %118 ], [ %124, %123 ], [ %112, %121 ]
  %127 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %33, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %127, i64 %126
  %129 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.994"* %129, null
  br i1 %130, label %360, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %129, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.994"* %133, null
  br i1 %134, label %360, label %135

135:                                              ; preds = %131
  %136 = add i64 %113, -1
  br label %137

137:                                              ; preds = %158, %135
  %138 = phi %"struct.std::__1::__hash_node_base.994"* [ %133, %135 ], [ %160, %158 ]
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %138, i64 1
  %140 = bitcast %"struct.std::__1::__hash_node_base.994"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %112, %141
  br i1 %142, label %153, label %143

143:                                              ; preds = %137
  br i1 %117, label %146, label %144

144:                                              ; preds = %143
  %145 = and i64 %141, %136
  br label %150

146:                                              ; preds = %143
  %147 = icmp ult i64 %141, %113
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = urem i64 %141, %113
  br label %150

150:                                              ; preds = %148, %146, %144
  %151 = phi i64 [ %145, %144 ], [ %149, %148 ], [ %141, %146 ]
  %152 = icmp eq i64 %151, %126
  br i1 %152, label %158, label %360

153:                                              ; preds = %137
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %138, i64 2
  %155 = bitcast %"struct.std::__1::__hash_node_base.994"* %154 to %"class.spvtools::opt::BasicBlock"**
  %156 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %155, align 8
  %157 = icmp eq %"class.spvtools::opt::BasicBlock"* %156, %98
  br i1 %157, label %162, label %158

158:                                              ; preds = %153, %150
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %138, i64 0, i32 0
  %160 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %159, align 8
  %161 = icmp eq %"struct.std::__1::__hash_node_base.994"* %160, null
  br i1 %161, label %360, label %137

162:                                              ; preds = %153
  br i1 %117, label %165, label %163

163:                                              ; preds = %162
  %164 = and i64 %112, %136
  br label %169

165:                                              ; preds = %162
  %166 = icmp ult i64 %112, %113
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = urem i64 %112, %113
  br label %169

169:                                              ; preds = %167, %165, %163
  %170 = phi i64 [ %164, %163 ], [ %168, %167 ], [ %112, %165 ]
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %127, i64 %170
  %172 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %171, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node_base.994"* %172, null
  br i1 %173, label %203, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %172, i64 0, i32 0
  %176 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %175, align 8
  %177 = icmp eq %"struct.std::__1::__hash_node_base.994"* %176, null
  br i1 %177, label %203, label %178

178:                                              ; preds = %174, %199
  %179 = phi %"struct.std::__1::__hash_node_base.994"* [ %201, %199 ], [ %176, %174 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %179, i64 1
  %181 = bitcast %"struct.std::__1::__hash_node_base.994"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %112, %182
  br i1 %183, label %194, label %184

184:                                              ; preds = %178
  br i1 %117, label %187, label %185

185:                                              ; preds = %184
  %186 = and i64 %182, %136
  br label %191

187:                                              ; preds = %184
  %188 = icmp ult i64 %182, %113
  br i1 %188, label %191, label %189

189:                                              ; preds = %187
  %190 = urem i64 %182, %113
  br label %191

191:                                              ; preds = %189, %187, %185
  %192 = phi i64 [ %186, %185 ], [ %190, %189 ], [ %182, %187 ]
  %193 = icmp eq i64 %192, %170
  br i1 %193, label %199, label %203

194:                                              ; preds = %178
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %179, i64 2
  %196 = bitcast %"struct.std::__1::__hash_node_base.994"* %195 to %"class.spvtools::opt::BasicBlock"**
  %197 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %196, align 8
  %198 = icmp eq %"class.spvtools::opt::BasicBlock"* %197, %98
  br i1 %198, label %203, label %199

199:                                              ; preds = %194, %191
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %179, i64 0, i32 0
  %201 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %200, align 8
  %202 = icmp eq %"struct.std::__1::__hash_node_base.994"* %201, null
  br i1 %202, label %203, label %178

203:                                              ; preds = %191, %194, %199, %169, %174
  %204 = phi %"struct.std::__1::__hash_node_base.994"* [ null, %169 ], [ null, %174 ], [ %179, %194 ], [ null, %199 ], [ null, %191 ]
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %204, i64 3
  %206 = bitcast %"struct.std::__1::__hash_node_base.994"* %205 to %"class.spvtools::opt::BasicBlock"**
  %207 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %206, align 8
  %208 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %207, i64 0, i32 1, i32 0, i32 0, i32 0
  %209 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %208, align 8
  %210 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %209, i64 0, i32 4
  %211 = load i8, i8* %210, align 1, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %219, label %213

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %209, i64 0, i32 3
  %215 = load i8, i8* %214, align 4, !range !2
  %216 = zext i8 %215 to i32
  %217 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %209, i32 %216) #12
  %218 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  br label %219

219:                                              ; preds = %203, %213
  %220 = phi %"class.spvtools::opt::BasicBlock"* [ %218, %213 ], [ %98, %203 ]
  %221 = phi i32 [ %217, %213 ], [ 0, %203 ]
  %222 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %220, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %223 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %222, align 8, !noalias !35
  %224 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %220, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %225 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %224, align 8, !noalias !42
  %226 = icmp eq %"class.spvtools::opt::Instruction"* %223, %225
  br i1 %226, label %227, label %246

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %223, i64 0, i32 2
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %229, 249
  br i1 %230, label %231, label %246

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %223, i64 0, i32 3
  %233 = load i8, i8* %232, align 4, !range !2
  %234 = icmp eq i8 %233, 0
  %235 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %223, i64 0, i32 4
  %236 = load i8, i8* %235, align 1, !range !2
  %237 = icmp eq i8 %236, 0
  %238 = select i1 %237, i32 1, i32 2
  %239 = xor i1 %237, true
  %240 = zext i1 %239 to i32
  %241 = select i1 %234, i32 %240, i32 %238
  %242 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %223, i32 %241) #12
  %243 = icmp eq i32 %242, %221
  br i1 %243, label %357, label %244

244:                                              ; preds = %231
  %245 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  br label %246

246:                                              ; preds = %244, %219, %227
  %247 = phi %"class.spvtools::opt::BasicBlock"* [ %245, %244 ], [ %220, %219 ], [ %220, %227 ]
  call void @_ZN8spvtools3opt7MemPass12KillAllInstsEPNS0_10BasicBlockEb(%"class.spvtools::opt::MemPass"* %34, %"class.spvtools::opt::BasicBlock"* %247, i1 zeroext false) #12
  %248 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %249 = load i64, i64* %37, align 8
  store i64 %249, i64* %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #12
  store i32 249, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #12
  store i32 0, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #12
  store i32 0, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %43) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  store i64 0, i64* %52, align 8
  store i64 1, i64* %47, align 8
  store i32 %221, i32* %53, align 8
  store i32 1, i32* %54, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  store i64 0, i64* %57, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %59, %"struct.std::__1::aligned_storage<4, 4>::type"** %60, align 8
  store i64 0, i64* %62, align 8
  %250 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %55, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %18) #12
  store %"struct.spvtools::opt::Operand"* %44, %"struct.spvtools::opt::Operand"** %63, align 8
  store i64 1, i64* %64, align 8
  %251 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** nonnull dereferenceable(8) %12, i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %14, i32* nonnull dereferenceable(4) %15, %"class.std::initializer_list"* nonnull dereferenceable(16) %16)
  %252 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %248, i64 0, i32 2, i32 0, i32 1
  %253 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %251, i64 0, i32 0, i32 1
  %254 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %253, align 8
  %255 = icmp eq %"class.spvtools::opt::Instruction"* %254, null
  br i1 %255, label %269, label %256

256:                                              ; preds = %246
  %257 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %251, i64 0, i32 0, i32 2
  %258 = bitcast %"class.spvtools::opt::Instruction"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %254, i64 0, i32 0, i32 2
  %261 = bitcast %"class.spvtools::opt::Instruction"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = bitcast %"class.spvtools::opt::Instruction"** %253 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast %"class.spvtools::opt::Instruction"** %257 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %265 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %264, align 8
  %266 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %265, i64 0, i32 1
  %267 = bitcast %"class.spvtools::opt::Instruction"** %266 to i64*
  store i64 %263, i64* %267, align 8
  %268 = bitcast %"class.spvtools::opt::Instruction"** %253 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %268, i8 0, i64 16, i1 false) #12
  br label %269

269:                                              ; preds = %246, %256
  store %"class.spvtools::opt::Instruction"* %252, %"class.spvtools::opt::Instruction"** %253, align 8
  %270 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %248, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %271 = bitcast %"class.spvtools::opt::Instruction"** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %251, i64 0, i32 0, i32 2
  %274 = bitcast %"class.spvtools::opt::Instruction"** %273 to i64*
  store i64 %272, i64* %274, align 8
  store %"class.spvtools::opt::Instruction"* %251, %"class.spvtools::opt::Instruction"** %270, align 8
  %275 = bitcast %"class.spvtools::opt::Instruction"** %273 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %276 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %275, align 8
  %277 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %276, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %251, %"class.spvtools::opt::Instruction"** %277, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %278 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %88, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %88, align 8
  %279 = icmp eq %"class.std::__1::vector.3"* %278, null
  br i1 %279, label %291, label %280

280:                                              ; preds = %269
  %281 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %278, i64 0, i32 0, i32 0
  %282 = load i32*, i32** %281, align 8
  %283 = icmp eq i32* %282, null
  br i1 %283, label %289, label %284

284:                                              ; preds = %280
  %285 = ptrtoint i32* %282 to i64
  %286 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %278, i64 0, i32 0, i32 1
  %287 = bitcast i32** %286 to i64*
  store i64 %285, i64* %287, align 8
  %288 = bitcast i32* %282 to i8*
  call void @_ZdlPv(i8* %288) #11
  br label %289

289:                                              ; preds = %284, %280
  %290 = bitcast %"class.std::__1::vector.3"* %278 to i8*
  call void @_ZdlPv(i8* %290) #11
  br label %291

291:                                              ; preds = %269, %289
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %292 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %65, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %65, align 8
  %293 = icmp eq %"class.std::__1::vector.3"* %292, null
  br i1 %293, label %305, label %294

294:                                              ; preds = %291
  %295 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %292, i64 0, i32 0, i32 0
  %296 = load i32*, i32** %295, align 8
  %297 = icmp eq i32* %296, null
  br i1 %297, label %303, label %298

298:                                              ; preds = %294
  %299 = ptrtoint i32* %296 to i64
  %300 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %292, i64 0, i32 0, i32 1
  %301 = bitcast i32** %300 to i64*
  store i64 %299, i64* %301, align 8
  %302 = bitcast i32* %296 to i8*
  call void @_ZdlPv(i8* %302) #11
  br label %303

303:                                              ; preds = %298, %294
  %304 = bitcast %"class.std::__1::vector.3"* %292 to i8*
  call void @_ZdlPv(i8* %304) #11
  br label %305

305:                                              ; preds = %291, %303
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  %306 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %36, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %306, i64 0, i32 11
  %308 = load i32, i32* %307, align 8
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %335

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %306, i64 0, i32 4, i32 0, i32 0, i32 0
  %313 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %312, align 8
  %314 = call i8* @_Znwm(i64 104) #11
  %315 = bitcast i8* %314 to %"class.spvtools::opt::analysis::DefUseManager"*
  %316 = getelementptr inbounds i8, i8* %314, i64 32
  %317 = bitcast i8* %316 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %317, align 4
  %318 = getelementptr inbounds i8, i8* %314, i64 48
  %319 = getelementptr inbounds i8, i8* %314, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %318, i8 0, i64 16, i1 false) #12
  %320 = bitcast i8* %319 to i8**
  store i8* %318, i8** %320, align 8
  %321 = getelementptr inbounds i8, i8* %314, i64 64
  %322 = getelementptr inbounds i8, i8* %314, i64 96
  %323 = bitcast i8* %322 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %321, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %323, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %315, %"class.spvtools::opt::Module"* %313) #12
  %324 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %306, i64 0, i32 6
  %325 = ptrtoint i8* %314 to i64
  %326 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %324, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %326, align 8
  %328 = bitcast %"class.std::__1::unique_ptr.62"* %324 to i64*
  store i64 %325, i64* %328, align 8
  %329 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %327, null
  br i1 %329, label %332, label %330

330:                                              ; preds = %311
  %331 = bitcast %"class.std::__1::unique_ptr.62"* %324 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %331, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %327) #12
  br label %332

332:                                              ; preds = %330, %311
  %333 = load i32, i32* %307, align 8
  %334 = or i32 %333, 1
  store i32 %334, i32* %307, align 8
  br label %335

335:                                              ; preds = %305, %332
  %336 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %306, i64 0, i32 6, i32 0, i32 0, i32 0
  %337 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %336, align 8
  %338 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %339 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %338, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %340 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %339, align 8, !noalias !45
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %337, %"class.spvtools::opt::Instruction"* %340) #12
  %341 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %36, align 8
  %342 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %343 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %342, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %344 = bitcast %"class.spvtools::opt::Instruction"** %343 to i64*
  %345 = load i64, i64* %344, align 8, !noalias !48
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  store i64 %345, i64* %67, align 8
  %346 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %341, i64 0, i32 11
  %347 = load i32, i32* %346, align 8
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %356, label %350

350:                                              ; preds = %335
  %351 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %341, i64 0, i32 9, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #12
  store %"class.spvtools::opt::Instruction"** %8, %"class.spvtools::opt::Instruction"*** %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %70) #12
  %352 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %351, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1048"* nonnull dereferenceable(1) %7) #12
  %353 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %352, 0
  %354 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %353, i64 3
  %355 = bitcast %"struct.std::__1::__hash_node_base.178"* %354 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %70) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #12
  store %"class.spvtools::opt::BasicBlock"* %342, %"class.spvtools::opt::BasicBlock"** %355, align 8
  br label %356

356:                                              ; preds = %335, %350
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  br label %357

357:                                              ; preds = %231, %356
  %358 = phi i8 [ 1, %356 ], [ %94, %231 ]
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %96, i64 1
  br label %568

360:                                              ; preds = %158, %150, %125, %93, %131
  %361 = load i64, i64* %71, align 8
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %473, label %363

363:                                              ; preds = %360
  %364 = call i64 @llvm.ctpop.i64(i64 %361) #12, !range !3
  %365 = icmp ugt i64 %364, 1
  br i1 %365, label %369, label %366

366:                                              ; preds = %363
  %367 = add i64 %361, -1
  %368 = and i64 %367, %112
  br label %373

369:                                              ; preds = %363
  %370 = icmp ult i64 %112, %361
  br i1 %370, label %373, label %371

371:                                              ; preds = %369
  %372 = urem i64 %112, %361
  br label %373

373:                                              ; preds = %371, %369, %366
  %374 = phi i64 [ %368, %366 ], [ %372, %371 ], [ %112, %369 ]
  %375 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %72, align 8
  %376 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %375, i64 %374
  %377 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %376, align 8
  %378 = icmp eq %"struct.std::__1::__hash_node_base.938"* %377, null
  br i1 %378, label %473, label %379

379:                                              ; preds = %373
  %380 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %377, i64 0, i32 0
  %381 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %380, align 8
  %382 = icmp eq %"struct.std::__1::__hash_node_base.938"* %381, null
  br i1 %382, label %473, label %383

383:                                              ; preds = %379
  %384 = add i64 %361, -1
  br label %385

385:                                              ; preds = %406, %383
  %386 = phi %"struct.std::__1::__hash_node_base.938"* [ %381, %383 ], [ %408, %406 ]
  %387 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %386, i64 1
  %388 = bitcast %"struct.std::__1::__hash_node_base.938"* %387 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = icmp eq i64 %112, %389
  br i1 %390, label %401, label %391

391:                                              ; preds = %385
  br i1 %365, label %394, label %392

392:                                              ; preds = %391
  %393 = and i64 %389, %384
  br label %398

394:                                              ; preds = %391
  %395 = icmp ult i64 %389, %361
  br i1 %395, label %398, label %396

396:                                              ; preds = %394
  %397 = urem i64 %389, %361
  br label %398

398:                                              ; preds = %396, %394, %392
  %399 = phi i64 [ %393, %392 ], [ %397, %396 ], [ %389, %394 ]
  %400 = icmp eq i64 %399, %374
  br i1 %400, label %406, label %473

401:                                              ; preds = %385
  %402 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %386, i64 2
  %403 = bitcast %"struct.std::__1::__hash_node_base.938"* %402 to %"class.spvtools::opt::BasicBlock"**
  %404 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %403, align 8
  %405 = icmp eq %"class.spvtools::opt::BasicBlock"* %404, %98
  br i1 %405, label %410, label %406

406:                                              ; preds = %401, %398
  %407 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %386, i64 0, i32 0
  %408 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %407, align 8
  %409 = icmp eq %"struct.std::__1::__hash_node_base.938"* %408, null
  br i1 %409, label %473, label %385

410:                                              ; preds = %401
  %411 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %98, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %412 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %411, align 8, !noalias !51
  %413 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %98, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %414 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %413, align 8, !noalias !58
  %415 = icmp eq %"class.spvtools::opt::Instruction"* %412, %414
  br i1 %415, label %416, label %420

416:                                              ; preds = %410
  %417 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %412, i64 0, i32 2
  %418 = load i32, i32* %417, align 8
  %419 = icmp eq i32 %418, 255
  br i1 %419, label %470, label %420

420:                                              ; preds = %410, %416
  call void @_ZN8spvtools3opt7MemPass12KillAllInstsEPNS0_10BasicBlockEb(%"class.spvtools::opt::MemPass"* %34, %"class.spvtools::opt::BasicBlock"* %98, i1 zeroext false) #12
  %421 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #12
  %422 = load i64, i64* %37, align 8
  store i64 %422, i64* %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #12
  store i32 255, i32* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #12
  store i32 0, i32* %21, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #12
  store i32 0, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 16, i1 false) #12
  %423 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** nonnull dereferenceable(8) %19, i32* nonnull dereferenceable(4) %20, i32* nonnull dereferenceable(4) %21, i32* nonnull dereferenceable(4) %22, %"class.std::initializer_list"* nonnull dereferenceable(16) %23)
  %424 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %421, i64 0, i32 2, i32 0, i32 1
  %425 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %423, i64 0, i32 0, i32 1
  %426 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %425, align 8
  %427 = icmp eq %"class.spvtools::opt::Instruction"* %426, null
  br i1 %427, label %441, label %428

428:                                              ; preds = %420
  %429 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %423, i64 0, i32 0, i32 2
  %430 = bitcast %"class.spvtools::opt::Instruction"** %429 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %426, i64 0, i32 0, i32 2
  %433 = bitcast %"class.spvtools::opt::Instruction"** %432 to i64*
  store i64 %431, i64* %433, align 8
  %434 = bitcast %"class.spvtools::opt::Instruction"** %425 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = bitcast %"class.spvtools::opt::Instruction"** %429 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %437 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %436, align 8
  %438 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %437, i64 0, i32 1
  %439 = bitcast %"class.spvtools::opt::Instruction"** %438 to i64*
  store i64 %435, i64* %439, align 8
  %440 = bitcast %"class.spvtools::opt::Instruction"** %425 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %440, i8 0, i64 16, i1 false) #12
  br label %441

441:                                              ; preds = %420, %428
  store %"class.spvtools::opt::Instruction"* %424, %"class.spvtools::opt::Instruction"** %425, align 8
  %442 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %421, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %443 = bitcast %"class.spvtools::opt::Instruction"** %442 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %423, i64 0, i32 0, i32 2
  %446 = bitcast %"class.spvtools::opt::Instruction"** %445 to i64*
  store i64 %444, i64* %446, align 8
  store %"class.spvtools::opt::Instruction"* %423, %"class.spvtools::opt::Instruction"** %442, align 8
  %447 = bitcast %"class.spvtools::opt::Instruction"** %445 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %448 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %447, align 8
  %449 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %448, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %423, %"class.spvtools::opt::Instruction"** %449, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #12
  %450 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %36, align 8
  %451 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %452 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %451, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %453 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %452, align 8, !noalias !61
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %450, %"class.spvtools::opt::Instruction"* %453) #12
  %454 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %36, align 8
  %455 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %456 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %455, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %457 = bitcast %"class.spvtools::opt::Instruction"** %456 to i64*
  %458 = load i64, i64* %457, align 8, !noalias !64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  store i64 %458, i64* %80, align 8
  %459 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %454, i64 0, i32 11
  %460 = load i32, i32* %459, align 8
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %469, label %463

463:                                              ; preds = %441
  %464 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %454, i64 0, i32 9, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  store %"class.spvtools::opt::Instruction"** %11, %"class.spvtools::opt::Instruction"*** %82, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %83) #12
  %465 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %464, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1048"* nonnull dereferenceable(1) %10) #12
  %466 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %465, 0
  %467 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %466, i64 3
  %468 = bitcast %"struct.std::__1::__hash_node_base.178"* %467 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %83) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  store %"class.spvtools::opt::BasicBlock"* %455, %"class.spvtools::opt::BasicBlock"** %468, align 8
  br label %469

469:                                              ; preds = %441, %463
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  br label %470

470:                                              ; preds = %416, %469
  %471 = phi i8 [ 1, %469 ], [ %94, %416 ]
  %472 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %96, i64 1
  br label %568

473:                                              ; preds = %406, %398, %373, %360, %379
  %474 = load i64, i64* %84, align 8
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %523, label %476

476:                                              ; preds = %473
  %477 = call i64 @llvm.ctpop.i64(i64 %474) #12, !range !3
  %478 = icmp ugt i64 %477, 1
  br i1 %478, label %482, label %479

479:                                              ; preds = %476
  %480 = add i64 %474, -1
  %481 = and i64 %480, %112
  br label %486

482:                                              ; preds = %476
  %483 = icmp ult i64 %112, %474
  br i1 %483, label %486, label %484

484:                                              ; preds = %482
  %485 = urem i64 %112, %474
  br label %486

486:                                              ; preds = %484, %482, %479
  %487 = phi i64 [ %481, %479 ], [ %485, %484 ], [ %112, %482 ]
  %488 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %85, align 8
  %489 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %488, i64 %487
  %490 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %489, align 8
  %491 = icmp eq %"struct.std::__1::__hash_node_base.938"* %490, null
  br i1 %491, label %523, label %492

492:                                              ; preds = %486
  %493 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %490, i64 0, i32 0
  %494 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %493, align 8
  %495 = icmp eq %"struct.std::__1::__hash_node_base.938"* %494, null
  br i1 %495, label %523, label %496

496:                                              ; preds = %492
  %497 = add i64 %474, -1
  br label %498

498:                                              ; preds = %519, %496
  %499 = phi %"struct.std::__1::__hash_node_base.938"* [ %494, %496 ], [ %521, %519 ]
  %500 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %499, i64 1
  %501 = bitcast %"struct.std::__1::__hash_node_base.938"* %500 to i64*
  %502 = load i64, i64* %501, align 8
  %503 = icmp eq i64 %112, %502
  br i1 %503, label %514, label %504

504:                                              ; preds = %498
  br i1 %478, label %507, label %505

505:                                              ; preds = %504
  %506 = and i64 %502, %497
  br label %511

507:                                              ; preds = %504
  %508 = icmp ult i64 %502, %474
  br i1 %508, label %511, label %509

509:                                              ; preds = %507
  %510 = urem i64 %502, %474
  br label %511

511:                                              ; preds = %509, %507, %505
  %512 = phi i64 [ %506, %505 ], [ %510, %509 ], [ %502, %507 ]
  %513 = icmp eq i64 %512, %487
  br i1 %513, label %519, label %523

514:                                              ; preds = %498
  %515 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %499, i64 2
  %516 = bitcast %"struct.std::__1::__hash_node_base.938"* %515 to %"class.spvtools::opt::BasicBlock"**
  %517 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %516, align 8
  %518 = icmp eq %"class.spvtools::opt::BasicBlock"* %517, %98
  br i1 %518, label %566, label %519

519:                                              ; preds = %514, %511
  %520 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %499, i64 0, i32 0
  %521 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %520, align 8
  %522 = icmp eq %"struct.std::__1::__hash_node_base.938"* %521, null
  br i1 %522, label %523, label %498

523:                                              ; preds = %519, %511, %486, %473, %492
  call void @_ZN8spvtools3opt7MemPass12KillAllInstsEPNS0_10BasicBlockEb(%"class.spvtools::opt::MemPass"* %34, %"class.spvtools::opt::BasicBlock"* %98, i1 zeroext true) #12
  %524 = load i64, i64* %25, align 8
  %525 = sub i64 %95, %524
  %526 = ashr exact i64 %525, 3
  %527 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %96, i64 1
  %528 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %27, align 8
  %529 = icmp eq %"class.std::__1::unique_ptr.40"* %527, %528
  br i1 %529, label %549, label %530

530:                                              ; preds = %523, %542
  %531 = phi %"class.std::__1::unique_ptr.40"* [ %544, %542 ], [ %96, %523 ]
  %532 = phi %"class.std::__1::unique_ptr.40"* [ %543, %542 ], [ %527, %523 ]
  %533 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %532, i64 0, i32 0, i32 0, i32 0
  %534 = bitcast %"class.std::__1::unique_ptr.40"* %532 to i64*
  %535 = load i64, i64* %534, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %533, align 8
  %536 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %531, i64 0, i32 0, i32 0, i32 0
  %537 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %536, align 8
  %538 = bitcast %"class.std::__1::unique_ptr.40"* %531 to i64*
  store i64 %535, i64* %538, align 8
  %539 = icmp eq %"class.spvtools::opt::BasicBlock"* %537, null
  br i1 %539, label %542, label %540

540:                                              ; preds = %530
  %541 = bitcast %"class.std::__1::unique_ptr.40"* %531 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %541, %"class.spvtools::opt::BasicBlock"* nonnull %537) #12
  br label %542

542:                                              ; preds = %540, %530
  %543 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %532, i64 1
  %544 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %531, i64 1
  %545 = icmp eq %"class.std::__1::unique_ptr.40"* %543, %528
  br i1 %545, label %546, label %530

546:                                              ; preds = %542
  %547 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %27, align 8
  %548 = icmp eq %"class.std::__1::unique_ptr.40"* %547, %544
  br i1 %548, label %562, label %549

549:                                              ; preds = %546, %523
  %550 = phi %"class.std::__1::unique_ptr.40"* [ %544, %546 ], [ %96, %523 ]
  %551 = phi %"class.std::__1::unique_ptr.40"* [ %547, %546 ], [ %527, %523 ]
  br label %552

552:                                              ; preds = %560, %549
  %553 = phi %"class.std::__1::unique_ptr.40"* [ %554, %560 ], [ %551, %549 ]
  %554 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %553, i64 -1
  %555 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %554, i64 0, i32 0, i32 0, i32 0
  %556 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %555, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %555, align 8
  %557 = icmp eq %"class.spvtools::opt::BasicBlock"* %556, null
  br i1 %557, label %560, label %558

558:                                              ; preds = %552
  %559 = bitcast %"class.std::__1::unique_ptr.40"* %554 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %559, %"class.spvtools::opt::BasicBlock"* nonnull %556) #12
  br label %560

560:                                              ; preds = %558, %552
  %561 = icmp eq %"class.std::__1::unique_ptr.40"* %554, %550
  br i1 %561, label %562, label %552

562:                                              ; preds = %560, %546
  %563 = phi %"class.std::__1::unique_ptr.40"* [ %544, %546 ], [ %550, %560 ]
  store %"class.std::__1::unique_ptr.40"* %563, %"class.std::__1::unique_ptr.40"** %27, align 8
  %564 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %86, align 8
  %565 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %564, i64 %526
  br label %568

566:                                              ; preds = %514
  %567 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %96, i64 1
  br label %568

568:                                              ; preds = %470, %566, %562, %357
  %569 = phi %"class.std::__1::unique_ptr.40"* [ %565, %562 ], [ %567, %566 ], [ %472, %470 ], [ %359, %357 ]
  %570 = phi i8 [ 1, %562 ], [ %94, %566 ], [ %471, %470 ], [ %358, %357 ]
  %571 = ptrtoint %"class.std::__1::unique_ptr.40"* %569 to i64
  %572 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %27, align 8
  %573 = icmp eq %"class.std::__1::unique_ptr.40"* %572, %569
  br i1 %573, label %89, label %93
}

declare void @_ZN8spvtools3opt7MemPass12KillAllInstsEPNS0_10BasicBlockEb(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::BasicBlock"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::initializer_list"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = tail call i8* @_Znwm(i64 112) #11
  %8 = bitcast i8* %7 to %"class.spvtools::opt::Instruction"*
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %0, align 8
  %10 = load i32, i32* %1, align 4
  %11 = load i32, i32* %2, align 4
  %12 = load i32, i32* %3, align 4
  %13 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 0
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #12
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %5
  %20 = icmp ugt i64 %17, 384307168202282325
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #13
  unreachable

23:                                               ; preds = %19
  %24 = mul i64 %17, 48
  %25 = tail call i8* @_Znwm(i64 %24) #11
  %26 = bitcast i8* %25 to %"struct.spvtools::opt::Operand"*
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"struct.spvtools::opt::Operand"** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %26, i64 %17
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %30, %"struct.spvtools::opt::Operand"** %31, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 %17
  br label %33

33:                                               ; preds = %33, %23
  %34 = phi %"struct.spvtools::opt::Operand"* [ %50, %33 ], [ %26, %23 ]
  %35 = phi %"struct.spvtools::opt::Operand"* [ %49, %33 ], [ %15, %23 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %39, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 1
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 3, i64 0
  %45 = bitcast i32** %43 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %44, %"struct.std::__1::aligned_storage<4, 4>::type"** %45, align 8
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr.0"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %39, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %40) #12
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 1
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = icmp eq %"struct.spvtools::opt::Operand"* %49, %32
  br i1 %51, label %52, label %33

52:                                               ; preds = %33
  %53 = bitcast %"struct.spvtools::opt::Operand"** %27 to i64*
  %54 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  store i64 %54, i64* %53, align 8
  br label %55

55:                                               ; preds = %5, %52
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %8, %"class.spvtools::opt::IRContext"* %9, i32 %10, i32 %11, i32 %12, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #12
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %57 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %56, align 8
  %58 = icmp eq %"struct.spvtools::opt::Operand"* %57, null
  br i1 %58, label %89, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.spvtools::opt::Operand"* %57 to i8*
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %62 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %61, align 8
  %63 = icmp eq %"struct.spvtools::opt::Operand"* %62, %57
  br i1 %63, label %87, label %64

64:                                               ; preds = %59, %82
  %65 = phi %"struct.spvtools::opt::Operand"* [ %66, %82 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %68, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %68, align 8
  %70 = icmp eq %"class.std::__1::vector.3"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint i32* %73 to i64
  %77 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast i32* %73 to i8*
  call void @_ZdlPv(i8* %79) #11
  br label %80

80:                                               ; preds = %75, %71
  %81 = bitcast %"class.std::__1::vector.3"* %69 to i8*
  call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %80, %64
  %83 = icmp eq %"struct.spvtools::opt::Operand"* %66, %57
  br i1 %83, label %84, label %64

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector"* %6 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %59
  %88 = phi i8* [ %86, %84 ], [ %60, %59 ]
  store %"struct.spvtools::opt::Operand"* %57, %"struct.spvtools::opt::Operand"** %61, align 8
  call void @_ZdlPv(i8* %88) #11
  br label %89

89:                                               ; preds = %55, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  ret %"class.spvtools::opt::Instruction"* %8
}

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass21EliminateDeadBranchesEPNS0_8FunctionE(%"class.spvtools::opt::DeadBranchElimPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unordered_set.933", align 8
  %4 = alloca %"class.std::__1::unordered_set.933", align 8
  %5 = alloca %"class.std::__1::unordered_map.989", align 8
  %6 = bitcast %"class.std::__1::unordered_set.933"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %3, i64 0, i32 0, i32 4, i64 0
  %10 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %3, i64 0, i32 0, i32 3
  %11 = bitcast %"class.std::__1::__compressed_pair.954"* %10 to i32*
  %12 = bitcast i8* %9 to i32*
  store i32 -1431655766, i32* %12, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %11, align 8
  %13 = call zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS0_8FunctionEPNSt3__113unordered_setIPNS0_10BasicBlockENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::DeadBranchElimPass"* %0, %"class.spvtools::opt::Function"* %1, %"class.std::__1::unordered_set.933"* nonnull %3)
  %14 = bitcast %"class.std::__1::unordered_set.933"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %4, i64 0, i32 0, i32 4, i64 0
  %18 = getelementptr inbounds %"class.std::__1::unordered_set.933", %"class.std::__1::unordered_set.933"* %4, i64 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.954"* %18 to i32*
  %20 = bitcast i8* %17 to i32*
  store i32 -1431655766, i32* %20, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %19, align 8
  %21 = bitcast %"class.std::__1::unordered_map.989"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.std::__1::unordered_map.989", %"class.std::__1::unordered_map.989"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::unordered_map.989", %"class.std::__1::unordered_map.989"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::unordered_map.989", %"class.std::__1::unordered_map.989"* %5, i64 0, i32 0, i32 4, i64 0
  %25 = getelementptr inbounds %"class.std::__1::unordered_map.989", %"class.std::__1::unordered_map.989"* %5, i64 0, i32 0, i32 3
  %26 = bitcast %"class.std::__1::__compressed_pair.1009"* %25 to i32*
  %27 = bitcast i8* %24 to i32*
  store i32 -1431655766, i32* %27, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %26, align 8
  call void @_ZN8spvtools3opt18DeadBranchElimPass32MarkUnreachableStructuredTargetsERKNSt3__113unordered_setIPNS0_10BasicBlockENS2_4hashIS5_EENS2_8equal_toIS5_EENS2_9allocatorIS5_EEEEPSC_PNS2_13unordered_mapIS5_S5_S7_S9_NSA_INS2_4pairIKS5_S5_EEEEEE(%"class.spvtools::opt::DeadBranchElimPass"* %0, %"class.std::__1::unordered_set.933"* nonnull dereferenceable(40) %3, %"class.std::__1::unordered_set.933"* nonnull %4, %"class.std::__1::unordered_map.989"* nonnull %5)
  %28 = call zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass23FixPhiNodesInLiveBlocksEPNS0_8FunctionERKNSt3__113unordered_setIPNS0_10BasicBlockENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEERKNS4_13unordered_mapIS7_S7_S9_SB_NSC_INS4_4pairIKS7_S7_EEEEEE(%"class.spvtools::opt::DeadBranchElimPass"* %0, %"class.spvtools::opt::Function"* %1, %"class.std::__1::unordered_set.933"* nonnull dereferenceable(40) %3, %"class.std::__1::unordered_map.989"* nonnull dereferenceable(40) %5)
  %29 = or i1 %13, %28
  %30 = call zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass15EraseDeadBlocksEPNS0_8FunctionERKNSt3__113unordered_setIPNS0_10BasicBlockENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEESG_RKNS4_13unordered_mapIS7_S7_S9_SB_NSC_INS4_4pairIKS7_S7_EEEEEE(%"class.spvtools::opt::DeadBranchElimPass"* %0, %"class.spvtools::opt::Function"* %1, %"class.std::__1::unordered_set.933"* nonnull dereferenceable(40) %3, %"class.std::__1::unordered_set.933"* nonnull dereferenceable(40) %4, %"class.std::__1::unordered_map.989"* nonnull dereferenceable(40) %5)
  %31 = or i1 %29, %30
  %32 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %23, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.994"* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %2, %34
  %35 = phi %"struct.std::__1::__hash_node_base.994"* [ %37, %34 ], [ %32, %2 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %36, align 8
  %38 = bitcast %"struct.std::__1::__hash_node_base.994"* %35 to i8*
  call void @_ZdlPv(i8* %38) #11
  %39 = icmp eq %"struct.std::__1::__hash_node_base.994"* %37, null
  br i1 %39, label %40, label %34

40:                                               ; preds = %34, %2
  %41 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.994"** null, %"struct.std::__1::__hash_node_base.994"*** %22, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.994"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = bitcast %"struct.std::__1::__hash_node_base.994"** %41 to i8*
  call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %40, %43
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #12
  %46 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %16, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.938"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %45, %48
  %49 = phi %"struct.std::__1::__hash_node_base.938"* [ %51, %48 ], [ %46, %45 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %50, align 8
  %52 = bitcast %"struct.std::__1::__hash_node_base.938"* %49 to i8*
  call void @_ZdlPv(i8* %52) #11
  %53 = icmp eq %"struct.std::__1::__hash_node_base.938"* %51, null
  br i1 %53, label %54, label %48

54:                                               ; preds = %48, %45
  %55 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %15, align 8
  store %"struct.std::__1::__hash_node_base.938"** null, %"struct.std::__1::__hash_node_base.938"*** %15, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.938"** %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %54
  %58 = bitcast %"struct.std::__1::__hash_node_base.938"** %55 to i8*
  call void @_ZdlPv(i8* %58) #11
  br label %59

59:                                               ; preds = %54, %57
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #12
  %60 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %8, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.938"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %59, %62
  %63 = phi %"struct.std::__1::__hash_node_base.938"* [ %65, %62 ], [ %60, %59 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %63, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %64, align 8
  %66 = bitcast %"struct.std::__1::__hash_node_base.938"* %63 to i8*
  call void @_ZdlPv(i8* %66) #11
  %67 = icmp eq %"struct.std::__1::__hash_node_base.938"* %65, null
  br i1 %67, label %68, label %62

68:                                               ; preds = %62, %59
  %69 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %7, align 8
  store %"struct.std::__1::__hash_node_base.938"** null, %"struct.std::__1::__hash_node_base.938"*** %7, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.938"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"struct.std::__1::__hash_node_base.938"** %69 to i8*
  call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #12
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18DeadBranchElimPass13FixBlockOrderEv(%"class.spvtools::opt::DeadBranchElimPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.1015", align 8
  %3 = alloca %"class.std::__1::function.1015", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  tail call void @_ZN8spvtools3opt9IRContext20BuildInvalidAnalysesENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %5, i32 48) #12
  %6 = bitcast %"class.std::__1::function.1015"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %2, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %2, i64 0, i32 0, i32 2
  %10 = ptrtoint %"class.spvtools::opt::DeadBranchElimPass"* %0 to i64
  %11 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %12 = bitcast i8* %11 to i64*
  store i64 -6148914691236517206, i64* %12, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadBranchElimPass13FixBlockOrderEvE3$_2S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %8, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass13FixBlockOrderEvE3$_2FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %9, align 8
  %13 = bitcast %"class.std::__1::function.1015"* %2 to i64*
  store i64 %10, i64* %13, align 8
  %14 = bitcast %"class.std::__1::function.1015"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %3, i64 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %3, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %19 = bitcast i8* %18 to i64*
  store i64 -6148914691236517206, i64* %19, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadBranchElimPass13FixBlockOrderEvE3$_3S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %16, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass13FixBlockOrderEvE3$_3FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %17, align 8
  %20 = bitcast %"class.std::__1::function.1015"* %3 to i64*
  store i64 %10, i64* %20, align 8
  %21 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::FeatureManager"* %24, null
  br i1 %25, label %26, label %65

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 1
  %28 = tail call i8* @_Znwm(i64 48) #11
  %29 = bitcast i8* %28 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %27, %"class.spvtools::AssemblyGrammar"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 40, i1 false) #12
  %31 = ptrtoint i8* %28 to i64
  %32 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %23, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.152"* %22 to i64*
  store i64 %31, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::FeatureManager"* %32, null
  %35 = bitcast i8* %28 to %"class.spvtools::opt::FeatureManager"*
  br i1 %34, label %59, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %32, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %37, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %37, align 8
  %39 = icmp eq %"class.std::__1::set.158"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %38, i64 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node.1082"**
  %44 = load %"class.std::__1::__tree_node.1082"*, %"class.std::__1::__tree_node.1082"** %43, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %41, %"class.std::__1::__tree_node.1082"* %44) #12
  %45 = bitcast %"class.std::__1::set.158"* %38 to i8*
  tail call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %40, %36
  %47 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %32, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %47, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %47, align 8
  %49 = icmp eq %"class.std::__1::set.158"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %48, i64 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %48, i64 0, i32 0, i32 1, i32 0, i32 0
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_node.1082"**
  %54 = load %"class.std::__1::__tree_node.1082"*, %"class.std::__1::__tree_node.1082"** %53, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %51, %"class.std::__1::__tree_node.1082"* %54) #12
  %55 = bitcast %"class.std::__1::set.158"* %48 to i8*
  tail call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %50, %46
  %57 = bitcast %"class.spvtools::opt::FeatureManager"* %32 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  %58 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %23, align 8
  br label %59

59:                                               ; preds = %56, %26
  %60 = phi %"class.spvtools::opt::FeatureManager"* [ %58, %56 ], [ %35, %26 ]
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* %60, %"class.spvtools::opt::Module"* %62) #12
  %63 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %23, align 8
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  br label %65

65:                                               ; preds = %1, %59
  %66 = phi %"class.spvtools::opt::IRContext"* [ %21, %1 ], [ %64, %59 ]
  %67 = phi %"class.spvtools::opt::FeatureManager"* [ %24, %1 ], [ %63, %59 ]
  %68 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %67, i64 0, i32 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 2
  %71 = icmp eq i64 %70, 0
  %72 = select i1 %71, %"class.std::__1::function.1015"* %2, %"class.std::__1::function.1015"* %3
  %73 = call zeroext i1 @_ZN8spvtools3opt9IRContext24ProcessReachableCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %66, %"class.std::__1::function.1015"* nonnull dereferenceable(32) %72) #12
  %74 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %17, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %74, i64 0, i32 1
  %76 = load void (i8*)*, void (i8*)** %75, align 8
  %77 = icmp eq void (i8*)* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %65
  %79 = load i8*, i8** %15, align 8
  call void %76(i8* %79) #12
  br label %80

80:                                               ; preds = %65, %78
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #12
  %81 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %9, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %81, i64 0, i32 1
  %83 = load void (i8*)*, void (i8*)** %82, align 8
  %84 = icmp eq void (i8*)* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = load i8*, i8** %7, align 8
  call void %83(i8* %86) #12
  br label %87

87:                                               ; preds = %80, %85
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN8spvtools3opt9IRContext20BuildInvalidAnalysesENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt9IRContext24ProcessReachableCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::function.1015"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt18DeadBranchElimPass7ProcessEv(%"class.spvtools::opt::DeadBranchElimPass"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.1015", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to %"class.spvtools::opt::Instruction"*
  %12 = icmp eq %"class.spvtools::opt::Instruction"* %8, %11
  br i1 %12, label %26, label %13

13:                                               ; preds = %1, %19
  %14 = phi %"class.spvtools::opt::Instruction"* [ %24, %19 ], [ %11, %1 ]
  %15 = phi i64 [ %23, %19 ], [ %10, %1 ]
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 74
  br i1 %18, label %46, label %19

19:                                               ; preds = %13
  %20 = inttoptr i64 %15 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 1
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = inttoptr i64 %23 to %"class.spvtools::opt::Instruction"*
  %25 = icmp eq %"class.spvtools::opt::Instruction"* %8, %24
  br i1 %25, label %26, label %13

26:                                               ; preds = %19, %1
  %27 = bitcast %"class.std::__1::function.1015"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %2, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %2, i64 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %2, i64 0, i32 0, i32 2
  %31 = ptrtoint %"class.spvtools::opt::DeadBranchElimPass"* %0 to i64
  %32 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %33 = bitcast i8* %32 to i64*
  store i64 -6148914691236517206, i64* %33, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadBranchElimPass7ProcessEvE3$_4S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %29, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass7ProcessEvE3$_4FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %30, align 8
  %34 = bitcast %"class.std::__1::function.1015"* %2 to i64*
  store i64 %31, i64* %34, align 8
  %35 = call zeroext i1 @_ZN8spvtools3opt9IRContext24ProcessReachableCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %4, %"class.std::__1::function.1015"* nonnull dereferenceable(32) %2) #12
  br i1 %35, label %36, label %37

36:                                               ; preds = %26
  call void @_ZN8spvtools3opt18DeadBranchElimPass13FixBlockOrderEv(%"class.spvtools::opt::DeadBranchElimPass"* %0)
  br label %37

37:                                               ; preds = %36, %26
  %38 = select i1 %35, i32 16, i32 17
  %39 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %30, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %39, i64 0, i32 1
  %41 = load void (i8*)*, void (i8*)** %40, align 8
  %42 = icmp eq void (i8*)* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = load i8*, i8** %28, align 8
  call void %41(i8* %44) #12
  br label %45

45:                                               ; preds = %37, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #12
  br label %46

46:                                               ; preds = %13, %45
  %47 = phi i32 [ %38, %45 ], [ 17, %13 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %8, align 8
  %10 = tail call i8* @_Znwm(i64 104) #11
  %11 = bitcast i8* %10 to %"class.spvtools::opt::analysis::DefUseManager"*
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = getelementptr inbounds i8, i8* %10, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #12
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 64
  %18 = getelementptr inbounds i8, i8* %10, i64 96
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %19, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %11, %"class.spvtools::opt::Module"* %9) #12
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %21 = ptrtoint i8* %10 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.62"* %20 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %7
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %20 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %27, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %23) #12
  br label %28

28:                                               ; preds = %26, %7
  %29 = load i32, i32* %3, align 8
  %30 = or i32 %29, 1
  store i32 %30, i32* %3, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %33, i32 %1) #12
  %35 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::Instruction"* %34)
  ret %"class.spvtools::opt::BasicBlock"* %35
}

declare void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1027"* dereferenceable(32)) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEjRKNSt3__18functionIFbPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"*, i32, %"class.std::__1::function.1034"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void %54(i8* %58) #12
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt18DeadBranchElimPassD0Ev(%"class.spvtools::opt::DeadBranchElimPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::DeadBranchElimPass", %"class.spvtools::opt::DeadBranchElimPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %2) #12
  %3 = bitcast %"class.spvtools::opt::DeadBranchElimPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt18DeadBranchElimPass4nameEv(%"class.spvtools::opt::DeadBranchElimPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt18DeadBranchElimPass20GetPreservedAnalysesEv(%"class.spvtools::opt::DeadBranchElimPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 49155
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #12
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1048"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #11, !noalias !67
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !67
  %75 = load i64, i64* %74, align 8, !noalias !67
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !67
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !67
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !67
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !67
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #12
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #12, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #12, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !70

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1048", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1034", align 8
  %6 = alloca %"class.std::__1::function.1061", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !72

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1061"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1061", %"class.std::__1::function.1061"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1061", %"class.std::__1::function.1061"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1061"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1061", %"class.std::__1::function.1061"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1034"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1061"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1034", %"class.std::__1::function.1034"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1034", %"class.std::__1::function.1034"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1034"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1034", %"class.std::__1::function.1034"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1034", %"class.std::__1::function.1034"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1061", %"class.std::__1::function.1061"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1048", %"class.std::__1::tuple.1048"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #12
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #12
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #12
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1048"* nonnull dereferenceable(1) %3) #12
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #12
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #12
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #12
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #12
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #12
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #12
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1061"**
  %4 = load %"class.std::__1::function.1061"*, %"class.std::__1::function.1061"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1061", %"class.std::__1::function.1061"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1061", %"class.std::__1::function.1061"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1048", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1048", %"class.std::__1::tuple.1048"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1048"* nonnull dereferenceable(1) %4) #12
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 72) #11
  %3 = bitcast i8* %2 to %"class.spvtools::opt::StructuredCFGAnalysis"*
  tail call void @_ZN8spvtools3opt21StructuredCFGAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::StructuredCFGAnalysis"* nonnull %3, %"class.spvtools::opt::IRContext"* %0) #12
  %4 = ptrtoint i8* %2 to i64
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 27
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.873", %"class.std::__1::unique_ptr.873"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %6, align 8
  %8 = bitcast %"class.std::__1::unique_ptr.873"* %5 to i64*
  store i64 %4, i64* %8, align 8
  %9 = icmp eq %"class.spvtools::opt::StructuredCFGAnalysis"* %7, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i64* %12 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 2, i32 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i64* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.881"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::__hash_node_base.881"* [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base.881"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #11
  %28 = icmp eq %"struct.std::__1::__hash_node_base.881"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.881"**, %"struct.std::__1::__hash_node_base.881"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.881"** null, %"struct.std::__1::__hash_node_base.881"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.881"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.881"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %33, %29
  %36 = bitcast %"class.spvtools::opt::StructuredCFGAnalysis"* %7 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %35, %1
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %39 = load i32, i32* %38, align 8
  %40 = or i32 %39, 2048
  store i32 %40, i32* %38, align 8
  ret void
}

declare void @_ZN8spvtools3opt21StructuredCFGAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.spvtools::opt::Operand"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.spvtools::opt::Operand"* %2 to i64
  %8 = ptrtoint %"struct.spvtools::opt::Operand"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 48
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %250

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = ptrtoint %"struct.spvtools::opt::Operand"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.spvtools::opt::Operand"** %16 to i64*
  br i1 %21, label %116, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 48
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2, i64 %25
  %29 = icmp eq %"struct.spvtools::opt::Operand"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.spvtools::opt::Operand"* [ %47, %30 ], [ %17, %27 ]
  %32 = phi %"struct.spvtools::opt::Operand"* [ %46, %30 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 1
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 2
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 3, i64 0
  %42 = bitcast i32** %40 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %41, %"struct.std::__1::aligned_storage<4, 4>::type"** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 4
  %44 = bitcast %"class.std::__1::unique_ptr.0"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %36, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %37) #12
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %30
  %50 = ptrtoint %"struct.spvtools::opt::Operand"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %250

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"struct.spvtools::opt::Operand"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"struct.spvtools::opt::Operand"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"struct.spvtools::opt::Operand"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %10
  %61 = ptrtoint %"struct.spvtools::opt::Operand"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 48
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %63
  %65 = icmp ult %"struct.spvtools::opt::Operand"* %64, %17
  br i1 %65, label %83, label %68

66:                                               ; preds = %83
  %67 = ptrtoint %"struct.spvtools::opt::Operand"* %100 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %102, label %71

71:                                               ; preds = %68, %71
  %72 = phi %"struct.spvtools::opt::Operand"* [ %75, %71 ], [ %58, %68 ]
  %73 = phi %"struct.spvtools::opt::Operand"* [ %74, %71 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %74, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %75, i64 0, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1, i32 1
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1, i32 1
  %81 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %79, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %80) #12
  %82 = icmp eq %"struct.spvtools::opt::Operand"* %74, %1
  br i1 %82, label %102, label %71

83:                                               ; preds = %56, %83
  %84 = phi %"struct.spvtools::opt::Operand"* [ %100, %83 ], [ %58, %56 ]
  %85 = phi %"struct.spvtools::opt::Operand"* [ %99, %83 ], [ %64, %56 ]
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %89, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 1
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 2
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 3, i64 0
  %95 = bitcast i32** %93 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %94, %"struct.std::__1::aligned_storage<4, 4>::type"** %95, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 4
  %97 = bitcast %"class.std::__1::unique_ptr.0"* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %90) #12
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 1
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 1
  %101 = icmp ult %"struct.spvtools::opt::Operand"* %99, %17
  br i1 %101, label %83, label %66

102:                                              ; preds = %71, %68
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %59, %2
  br i1 %103, label %250, label %104

104:                                              ; preds = %102, %104
  %105 = phi %"struct.spvtools::opt::Operand"* [ %114, %104 ], [ %1, %102 ]
  %106 = phi %"struct.spvtools::opt::Operand"* [ %113, %104 ], [ %2, %102 ]
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 0
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 1
  %112 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #12
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 1
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 1
  %115 = icmp eq %"struct.spvtools::opt::Operand"* %113, %59
  br i1 %115, label %250, label %104

116:                                              ; preds = %12
  %117 = bitcast %"class.std::__1::vector"* %0 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %18, %118
  %120 = sdiv exact i64 %119, 48
  %121 = add nsw i64 %120, %10
  %122 = icmp ugt i64 %121, 384307168202282325
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #13
  unreachable

125:                                              ; preds = %116
  %126 = sub i64 %15, %118
  %127 = sdiv exact i64 %126, 48
  %128 = icmp ult i64 %127, 192153584101141162
  br i1 %128, label %132, label %129

129:                                              ; preds = %125
  %130 = sub i64 %5, %118
  %131 = sdiv exact i64 %130, 48
  br label %139

132:                                              ; preds = %125
  %133 = shl nsw i64 %127, 1
  %134 = icmp ult i64 %133, %121
  %135 = select i1 %134, i64 %121, i64 %133
  %136 = sub i64 %5, %118
  %137 = sdiv exact i64 %136, 48
  %138 = icmp eq i64 %135, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %132, %129
  %140 = phi i64 [ %131, %129 ], [ %137, %132 ]
  %141 = phi i64 [ 384307168202282325, %129 ], [ %135, %132 ]
  %142 = mul i64 %141, 48
  %143 = tail call i8* @_Znwm(i64 %142) #11
  %144 = bitcast i8* %143 to %"struct.spvtools::opt::Operand"*
  br label %145

145:                                              ; preds = %139, %132
  %146 = phi i64 [ %140, %139 ], [ %137, %132 ]
  %147 = phi i64 [ %141, %139 ], [ 0, %132 ]
  %148 = phi %"struct.spvtools::opt::Operand"* [ %144, %139 ], [ null, %132 ]
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %146
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %147
  %151 = ptrtoint %"struct.spvtools::opt::Operand"* %150 to i64
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 %10
  br label %153

153:                                              ; preds = %145, %153
  %154 = phi %"struct.spvtools::opt::Operand"* [ %169, %153 ], [ %149, %145 ]
  %155 = phi %"struct.spvtools::opt::Operand"* [ %170, %153 ], [ %2, %145 ]
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 0
  %158 = load i32, i32* %157, align 8
  store i32 %158, i32* %156, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 1
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %159, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 1
  store i64 0, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 2
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 3, i64 0
  %165 = bitcast i32** %163 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %164, %"struct.std::__1::aligned_storage<4, 4>::type"** %165, align 8
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 4
  %167 = bitcast %"class.std::__1::unique_ptr.0"* %166 to i64*
  store i64 0, i64* %167, align 8
  %168 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %159, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %160) #12
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 1
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 1
  %171 = icmp eq %"struct.spvtools::opt::Operand"* %152, %169
  br i1 %171, label %172, label %153

172:                                              ; preds = %153
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  %174 = icmp eq %"struct.spvtools::opt::Operand"* %173, %1
  br i1 %174, label %194, label %175

175:                                              ; preds = %172, %175
  %176 = phi %"struct.spvtools::opt::Operand"* [ %192, %175 ], [ %149, %172 ]
  %177 = phi %"struct.spvtools::opt::Operand"* [ %178, %175 ], [ %1, %172 ]
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 0
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 0
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %179, align 8
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1, i32 1
  %184 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %182, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 1
  store i64 0, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 2
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 3, i64 0
  %188 = bitcast i32** %186 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %187, %"struct.std::__1::aligned_storage<4, 4>::type"** %188, align 8
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 4
  %190 = bitcast %"class.std::__1::unique_ptr.0"* %189 to i64*
  store i64 0, i64* %190, align 8
  %191 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %182, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %183) #12
  %192 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1
  %193 = icmp eq %"struct.spvtools::opt::Operand"* %178, %173
  br i1 %193, label %194, label %175

194:                                              ; preds = %175, %172
  %195 = phi %"struct.spvtools::opt::Operand"* [ %149, %172 ], [ %192, %175 ]
  %196 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %197 = icmp eq %"struct.spvtools::opt::Operand"* %196, %1
  br i1 %197, label %219, label %198

198:                                              ; preds = %194, %198
  %199 = phi %"struct.spvtools::opt::Operand"* [ %215, %198 ], [ %152, %194 ]
  %200 = phi %"struct.spvtools::opt::Operand"* [ %214, %198 ], [ %1, %194 ]
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 0
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  store i32 %203, i32* %201, align 8
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 1
  %206 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %204, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 1
  store i64 0, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 2
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 3, i64 0
  %210 = bitcast i32** %208 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %209, %"struct.std::__1::aligned_storage<4, 4>::type"** %210, align 8
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 4
  %212 = bitcast %"class.std::__1::unique_ptr.0"* %211 to i64*
  store i64 0, i64* %212, align 8
  %213 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %204, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %205) #12
  %214 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 1
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 1
  %216 = icmp eq %"struct.spvtools::opt::Operand"* %214, %196
  br i1 %216, label %217, label %198

217:                                              ; preds = %198
  %218 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  br label %219

219:                                              ; preds = %194, %217
  %220 = phi %"struct.spvtools::opt::Operand"* [ %218, %217 ], [ %1, %194 ]
  %221 = phi %"struct.spvtools::opt::Operand"* [ %215, %217 ], [ %152, %194 ]
  %222 = ptrtoint %"struct.spvtools::opt::Operand"* %195 to i64
  %223 = ptrtoint %"struct.spvtools::opt::Operand"* %221 to i64
  %224 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  store i64 %222, i64* %117, align 8
  store i64 %223, i64* %22, align 8
  store i64 %151, i64* %14, align 8
  %225 = icmp eq %"struct.spvtools::opt::Operand"* %220, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %219, %244
  %227 = phi %"struct.spvtools::opt::Operand"* [ %228, %244 ], [ %220, %219 ]
  %228 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1
  %229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %231 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %230, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %230, align 8
  %232 = icmp eq %"class.std::__1::vector.3"* %231, null
  br i1 %232, label %244, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = icmp eq i32* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %233
  %238 = ptrtoint i32* %235 to i64
  %239 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 1
  %240 = bitcast i32** %239 to i64*
  store i64 %238, i64* %240, align 8
  %241 = bitcast i32* %235 to i8*
  tail call void @_ZdlPv(i8* %241) #11
  br label %242

242:                                              ; preds = %237, %233
  %243 = bitcast %"class.std::__1::vector.3"* %231 to i8*
  tail call void @_ZdlPv(i8* %243) #11
  br label %244

244:                                              ; preds = %242, %226
  %245 = icmp eq %"struct.spvtools::opt::Operand"* %228, %224
  br i1 %245, label %246, label %226

246:                                              ; preds = %244, %219
  %247 = icmp eq %"struct.spvtools::opt::Operand"* %224, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = bitcast %"struct.spvtools::opt::Operand"* %224 to i8*
  tail call void @_ZdlPv(i8* %249) #11
  br label %250

250:                                              ; preds = %104, %248, %246, %51, %102, %4
  %251 = phi %"struct.spvtools::opt::Operand"* [ %1, %4 ], [ %1, %102 ], [ %1, %51 ], [ %149, %246 ], [ %149, %248 ], [ %1, %104 ]
  ret %"struct.spvtools::opt::Operand"* %251
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #12
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #13
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #11
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #12
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"*, %"class.std::__1::__tree_node.1082"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1082"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1082"* %1 to %"class.std::__1::__tree_node.1082"**
  %6 = load %"class.std::__1::__tree_node.1082"*, %"class.std::__1::__tree_node.1082"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1082"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1082", %"class.std::__1::__tree_node.1082"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1082"**
  %9 = load %"class.std::__1::__tree_node.1082"*, %"class.std::__1::__tree_node.1082"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1082"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1082"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD0Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #12
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #12
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #11
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #11
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #11, !noalias !73
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !73
  store i32 %58, i32* %57, align 4, !noalias !73
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !73
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %61, align 8, !noalias !73
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #12
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #12, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.915"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.915"* %104, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #12, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.915"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !76

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.915"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.915"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.915"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.915"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.915"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.938"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.934"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.938"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.938"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.938"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.938"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.938"* %62 to %"class.spvtools::opt::BasicBlock"**
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #11, !noalias !77
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !77
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !77
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !77
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.938"**
  store %"struct.std::__1::__hash_node_base.938"* null, %"struct.std::__1::__hash_node_base.938"** %75, align 8, !noalias !77
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #12
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.934"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #12, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.938"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.938"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.938"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.938"* %118, %"struct.std::__1::__hash_node_base.938"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.938"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.938"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #12, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.938"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.938"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.938"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.938"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.938"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.938"*, i8 } undef, %"struct.std::__1::__hash_node_base.938"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.938"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.938"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.934"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.934"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.934"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.934"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.934"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.938"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.938"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.940", %"class.std::__1::__bucket_list_deallocator.940"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.938"* null, %"struct.std::__1::__hash_node_base.938"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !80

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.938"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.938"* null, %"struct.std::__1::__hash_node_base.938"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.938"* null, %"struct.std::__1::__hash_node_base.938"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.938"* null, %"struct.std::__1::__hash_node_base.938"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.938"* null, %"struct.std::__1::__hash_node_base.938"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.938"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.938"* %36, %"struct.std::__1::__hash_node_base.938"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.938"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.938"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.938"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.938"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.938"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.938"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.938"* %82, %"struct.std::__1::__hash_node_base.938"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.938"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.938"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.938"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.938"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.938"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.938"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.938"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.938"* %80, %"struct.std::__1::__hash_node_base.938"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.938"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.938"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.934", %"class.std::__1::__hash_table.934"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.938"** null, %"struct.std::__1::__hash_node_base.938"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.938"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.938"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.940", %"class.std::__1::__bucket_list_deallocator.940"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS8_8FunctionEPNS_13unordered_setIPNS8_10BasicBlockENS_4hashISE_EENS_8equal_toISE_EENS_9allocatorISE_EEEEE3$_0S3_EEEEbPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #10 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1118"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1118"*, %"class.std::__1::__function::__default_alloc_func.1118"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1118", %"class.std::__1::__function::__default_alloc_func.1118"* %4, i64 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %12 [
    i32 1, label %8
    i32 0, label %31
  ]

8:                                                ; preds = %2
  %9 = load i32, i32* %1, align 4
  %10 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1118", %"class.std::__1::__function::__default_alloc_func.1118"* %4, i64 0, i32 0, i32 3
  %11 = load i32*, i32** %10, align 8
  store i32 %9, i32* %11, align 4
  br label %31

12:                                               ; preds = %2
  %13 = and i32 %7, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = load i32, i32* %1, align 4
  %17 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1118", %"class.std::__1::__function::__default_alloc_func.1118"* %4, i64 0, i32 0, i32 1
  %18 = load i32*, i32** %17, align 8
  store i32 %16, i32* %18, align 4
  br label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1118", %"class.std::__1::__function::__default_alloc_func.1118"* %4, i64 0, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1118", %"class.std::__1::__function::__default_alloc_func.1118"* %4, i64 0, i32 0, i32 2
  %24 = load i32*, i32** %23, align 8
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %22, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %19
  %28 = load i32, i32* %1, align 4
  %29 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1118", %"class.std::__1::__function::__default_alloc_func.1118"* %4, i64 0, i32 0, i32 3
  %30 = load i32*, i32** %29, align 8
  store i32 %28, i32* %30, align 4
  br label %35

31:                                               ; preds = %19, %15, %8, %2
  %32 = load i32*, i32** %5, align 8
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 4
  br label %35

35:                                               ; preds = %27, %31
  %36 = phi i1 [ true, %31 ], [ false, %27 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #11, !noalias !81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS7_8FunctionEPNS_13unordered_setIPNS7_10BasicBlockENS_4hashISD_EENS_8equal_toISD_EENS_9allocatorISD_EEEEE3$_1S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::DeadBranchElimPass"**
  %5 = load %"class.spvtools::opt::DeadBranchElimPass"*, %"class.spvtools::opt::DeadBranchElimPass"** %4, align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.966"**
  %7 = load %"class.std::__1::vector.966"*, %"class.std::__1::vector.966"** %6, align 8
  %8 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt18DeadBranchElimPass14GetParentBlockEj(%"class.spvtools::opt::DeadBranchElimPass"* %5, i32 %1) #12
  %9 = ptrtoint %"class.spvtools::opt::BasicBlock"* %8 to i64
  %10 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %7, i64 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::BasicBlock"** %11, %13
  %15 = ptrtoint %"class.spvtools::opt::BasicBlock"** %13 to i64
  br i1 %14, label %16, label %21

16:                                               ; preds = %2
  %17 = bitcast %"class.spvtools::opt::BasicBlock"** %11 to i64*
  store i64 %9, i64* %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %11, i64 1
  %19 = ptrtoint %"class.spvtools::opt::BasicBlock"** %18 to i64
  %20 = bitcast %"class.spvtools::opt::BasicBlock"*** %10 to i64*
  store i64 %19, i64* %20, align 8
  br label %78

21:                                               ; preds = %2
  %22 = ptrtoint %"class.spvtools::opt::BasicBlock"** %11 to i64
  %23 = bitcast %"class.spvtools::opt::BasicBlock"*** %10 to i64*
  %24 = bitcast %"class.std::__1::vector.966"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = ashr exact i64 %26, 3
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 2305843009213693951
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector.966"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #13
  unreachable

32:                                               ; preds = %21
  %33 = bitcast %"class.spvtools::opt::BasicBlock"*** %12 to i64*
  %34 = sub i64 %15, %25
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, 1152921504606846975
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = ashr exact i64 %34, 2
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 2305843009213693951
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #13
  unreachable

45:                                               ; preds = %42, %32
  %46 = phi i64 [ %40, %42 ], [ 2305843009213693951, %32 ]
  %47 = shl i64 %46, 3
  %48 = tail call i8* @_Znwm(i64 %47) #11
  %49 = bitcast i8* %48 to %"class.spvtools::opt::BasicBlock"**
  br label %50

50:                                               ; preds = %45, %37
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi %"class.spvtools::opt::BasicBlock"** [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %52, i64 %27
  %54 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %52, i64 %51
  %55 = ptrtoint %"class.spvtools::opt::BasicBlock"** %54 to i64
  %56 = bitcast %"class.spvtools::opt::BasicBlock"** %53 to i64*
  store i64 %9, i64* %56, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %53, i64 1
  %58 = ptrtoint %"class.spvtools::opt::BasicBlock"** %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %7, i64 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %59, align 8
  %61 = load i64, i64* %23, align 8
  %62 = ptrtoint %"class.spvtools::opt::BasicBlock"** %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %53, i64 %65
  %67 = ptrtoint %"class.spvtools::opt::BasicBlock"** %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %50
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %66 to i8*
  %71 = bitcast %"class.spvtools::opt::BasicBlock"** %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #12
  %72 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %59, align 8
  br label %73

73:                                               ; preds = %69, %50
  %74 = phi %"class.spvtools::opt::BasicBlock"** [ %60, %50 ], [ %72, %69 ]
  store i64 %67, i64* %24, align 8
  store i64 %58, i64* %23, align 8
  store i64 %55, i64* %33, align 8
  %75 = icmp eq %"class.spvtools::opt::BasicBlock"** %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.spvtools::opt::BasicBlock"** %74 to i8*
  tail call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %16, %73, %76
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #12
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #12
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #11
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #11
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.994"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.990"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1128"* dereferenceable(8), %"class.std::__1::tuple.1048"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.994"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.994"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.994"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.994"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.994"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #11, !noalias !86
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1128"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !86
  %75 = load i64, i64* %74, align 8, !noalias !86
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !86
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !86
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !86
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.994"**
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %81, align 8, !noalias !86
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #12
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.990"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #12, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.994"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.994"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.994"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.994"* %124, %"struct.std::__1::__hash_node_base.994"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.994"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.994"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #12, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.994"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.994"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.994"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.994"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.994"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.994"*, i8 } undef, %"struct.std::__1::__hash_node_base.994"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.994"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.994"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.990"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.990"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.990"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.990"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.990"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.994"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.994"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.996", %"class.std::__1::__bucket_list_deallocator.996"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !89

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.994"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.994"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.994"* %36, %"struct.std::__1::__hash_node_base.994"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.994"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.994"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.994"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.994"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.994"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.994"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.994"* %82, %"struct.std::__1::__hash_node_base.994"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.994"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.994"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.994"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.994"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.994"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.994"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.994"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.994"* %80, %"struct.std::__1::__hash_node_base.994"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.994"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.994"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.994"** null, %"struct.std::__1::__hash_node_base.994"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.994"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.994"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.996", %"class.std::__1::__bucket_list_deallocator.996"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJ18spv_operand_type_tSt16initializer_listIjEEEEvDpOT_(%"class.std::__1::vector"*, i32* dereferenceable(4), %"class.std::initializer_list.932"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__compressed_pair.9"* %4 to %"class.std::__1::allocator.12"*
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.spvtools::opt::Operand"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 48
  %13 = add nsw i64 %12, 1
  %14 = icmp ugt i64 %13, 384307168202282325
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #13
  unreachable

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"struct.spvtools::opt::Operand"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %10
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ult i64 %22, 192153584101141162
  br i1 %23, label %24, label %29

24:                                               ; preds = %17
  %25 = shl nsw i64 %22, 1
  %26 = icmp ult i64 %25, %13
  %27 = select i1 %26, i64 %13, i64 %25
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %17, %24
  %30 = phi i64 [ %27, %24 ], [ 384307168202282325, %17 ]
  %31 = mul i64 %30, 48
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"struct.spvtools::opt::Operand"*
  br label %34

34:                                               ; preds = %24, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %24 ]
  %36 = phi %"struct.spvtools::opt::Operand"* [ %33, %29 ], [ null, %24 ]
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %36, i64 %12
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %36, i64 %35
  %39 = ptrtoint %"struct.spvtools::opt::Operand"* %38 to i64
  tail call void @_ZNSt3__19allocatorIN8spvtools3opt7OperandEE9constructIS3_J18spv_operand_type_tSt16initializer_listIjEEEEvPT_DpOT0_(%"class.std::__1::allocator.12"* %5, %"struct.spvtools::opt::Operand"* %37, i32* dereferenceable(4) %1, %"class.std::initializer_list.932"* dereferenceable(16) %2) #12
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %37, i64 1
  %41 = ptrtoint %"struct.spvtools::opt::Operand"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %42, align 8
  %44 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  %45 = icmp eq %"struct.spvtools::opt::Operand"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.spvtools::opt::Operand"* %43 to i64
  br label %70

48:                                               ; preds = %34, %48
  %49 = phi %"struct.spvtools::opt::Operand"* [ %65, %48 ], [ %37, %34 ]
  %50 = phi %"struct.spvtools::opt::Operand"* [ %51, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %50, i64 -1
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %49, i64 -1, i32 0
  %53 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %51, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* %52, align 8
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %49, i64 -1, i32 1
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %50, i64 -1, i32 1
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %55, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %49, i64 -1, i32 1, i32 1
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %49, i64 -1, i32 1, i32 2
  %60 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %49, i64 -1, i32 1, i32 3, i64 0
  %61 = bitcast i32** %59 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %60, %"struct.std::__1::aligned_storage<4, 4>::type"** %61, align 8
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %49, i64 -1, i32 1, i32 4
  %63 = bitcast %"class.std::__1::unique_ptr.0"* %62 to i64*
  store i64 0, i64* %63, align 8
  %64 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %55, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %56) #12
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %49, i64 -1
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %51, %43
  br i1 %66, label %67, label %48

67:                                               ; preds = %48
  %68 = load i64, i64* %9, align 8
  %69 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  br label %70

70:                                               ; preds = %46, %67
  %71 = phi %"struct.spvtools::opt::Operand"* [ %43, %46 ], [ %69, %67 ]
  %72 = phi %"struct.spvtools::opt::Operand"* [ %37, %46 ], [ %65, %67 ]
  %73 = phi i64 [ %47, %46 ], [ %68, %67 ]
  %74 = ptrtoint %"struct.spvtools::opt::Operand"* %72 to i64
  store i64 %74, i64* %9, align 8
  store i64 %41, i64* %7, align 8
  store i64 %39, i64* %19, align 8
  %75 = inttoptr i64 %73 to %"struct.spvtools::opt::Operand"*
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %71, %75
  br i1 %76, label %97, label %77

77:                                               ; preds = %70, %95
  %78 = phi %"struct.spvtools::opt::Operand"* [ %79, %95 ], [ %71, %70 ]
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %78, i64 -1
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %78, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %78, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %81, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %81, align 8
  %83 = icmp eq %"class.std::__1::vector.3"* %82, null
  br i1 %83, label %95, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %82, i64 0, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = ptrtoint i32* %86 to i64
  %90 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %82, i64 0, i32 0, i32 1
  %91 = bitcast i32** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast i32* %86 to i8*
  tail call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %88, %84
  %94 = bitcast %"class.std::__1::vector.3"* %82 to i8*
  tail call void @_ZdlPv(i8* %94) #11
  br label %95

95:                                               ; preds = %93, %77
  %96 = icmp eq %"struct.spvtools::opt::Operand"* %79, %75
  br i1 %96, label %97, label %77

97:                                               ; preds = %95, %70
  %98 = icmp eq i64 %73, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %100) #11
  br label %101

101:                                              ; preds = %97, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__19allocatorIN8spvtools3opt7OperandEE9constructIS3_J18spv_operand_type_tSt16initializer_listIjEEEEvPT_DpOT0_(%"class.std::__1::allocator.12"*, %"struct.spvtools::opt::Operand"*, i32* dereferenceable(4), %"class.std::initializer_list.932"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = load i32, i32* %2, align 4
  %7 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::initializer_list.932", %"class.std::initializer_list.932"* %3, i64 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.std::initializer_list.932", %"class.std::initializer_list.932"* %3, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %16 = bitcast i32** %14 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %15, %"struct.std::__1::aligned_storage<4, 4>::type"** %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %18 = bitcast %"class.std::__1::unique_ptr.0"* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = icmp ult i64 %11, 2
  %20 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %15 to i32*
  br i1 %19, label %21, label %25

21:                                               ; preds = %4
  %22 = icmp eq i64 %11, 0
  br i1 %22, label %49, label %23

23:                                               ; preds = %21
  store i64 1, i64* %13, align 8
  %24 = load i32, i32* %9, align 4
  store i32 %24, i32* %20, align 8
  br label %49

25:                                               ; preds = %4
  %26 = call i8* @_Znwm(i64 24) #11
  %27 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #12
  %28 = icmp ugt i64 %11, 4611686018427387903
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast i8* %26 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %30) #13
  unreachable

31:                                               ; preds = %25
  %32 = shl i64 %11, 2
  %33 = call i8* @_Znwm(i64 %32) #11
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %26, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %26 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %11
  %39 = getelementptr inbounds i8, i8* %26, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %32, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %27, i64 %32, i1 false) #12
  %45 = ptrtoint i32* %38 to i64
  br label %46

46:                                               ; preds = %44, %31
  %47 = phi i64 [ %45, %44 ], [ %42, %31 ]
  store i64 %47, i64* %41, align 8
  %48 = ptrtoint i8* %26 to i64
  store i64 %48, i64* %18, align 8
  br label %49

49:                                               ; preds = %23, %21, %46
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  store i32 %6, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %51, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1, i32 1
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1, i32 2
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1, i32 3, i64 0
  %56 = bitcast i32** %54 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %55, %"struct.std::__1::aligned_storage<4, 4>::type"** %56, align 8
  %57 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1, i32 4
  %58 = bitcast %"class.std::__1::unique_ptr.0"* %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %51, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %60, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %60, align 8
  %62 = icmp eq %"class.std::__1::vector.3"* %61, null
  br i1 %62, label %74, label %63

63:                                               ; preds = %49
  %64 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %61, i64 0, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = icmp eq i32* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = ptrtoint i32* %65 to i64
  %69 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %61, i64 0, i32 0, i32 1
  %70 = bitcast i32** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast i32* %65 to i8*
  call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %67, %63
  %73 = bitcast %"class.std::__1::vector.3"* %61 to i8*
  call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %49, %72
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #12
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #12
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #12
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #12
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #12
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #12
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #12
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #12
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #12
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #12
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #12
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #11
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #12
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #12
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadBranchElimPass13FixBlockOrderEvE3$_2S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = alloca %"class.std::__1::vector.966", align 8
  %4 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Pass"**
  %6 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %6, i64 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %8, %"class.spvtools::opt::Function"* %1) #12
  %10 = bitcast %"class.std::__1::vector.966"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %3, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #12
  %14 = bitcast %"class.spvtools::opt::TreeDFIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false) #12
  %15 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %9, i64 0, i32 0, i32 0
  call void @_ZN8spvtools3opt13DominatorTree5beginEv(%"class.spvtools::opt::TreeDFIterator"* nonnull sret %4, %"class.spvtools::opt::DominatorTree"* %15) #12
  %16 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %4, i64 0, i32 0
  %17 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %16, align 8
  %18 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.spvtools::opt::BasicBlock"*** %12 to i64*
  %21 = bitcast %"class.std::__1::vector.966"* %3 to i64*
  %22 = bitcast %"class.spvtools::opt::BasicBlock"*** %13 to i64*
  br label %128

23:                                               ; preds = %201, %2
  %24 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %27, 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %25, i64 %28
  %30 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %31 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::pair.1159"** %31, %25
  %33 = ptrtoint %"struct.std::__1::pair.1159"** %31 to i64
  %34 = ptrtoint %"struct.std::__1::pair.1159"** %25 to i64
  br i1 %32, label %35, label %37

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %4, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %50

37:                                               ; preds = %23
  %38 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %29, align 8
  %39 = and i64 %27, 255
  %40 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %38, i64 %39
  %41 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %4, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, %27
  %44 = lshr i64 %43, 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %25, i64 %44
  %46 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %45, align 8
  %47 = and i64 %43, 255
  %48 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %46, i64 %47
  %49 = icmp eq %"struct.std::__1::pair.1159"* %48, %40
  br i1 %49, label %50, label %56

50:                                               ; preds = %69, %37, %35
  %51 = phi i64* [ %36, %35 ], [ %41, %37 ], [ %41, %69 ]
  store i64 0, i64* %51, align 8
  %52 = bitcast %"struct.std::__1::pair.1159"*** %30 to i64*
  %53 = sub i64 %33, %34
  %54 = ashr exact i64 %53, 3
  %55 = icmp ugt i64 %54, 2
  br i1 %55, label %74, label %87

56:                                               ; preds = %37, %69
  %57 = phi %"struct.std::__1::pair.1159"* [ %72, %69 ], [ %40, %37 ]
  %58 = phi %"struct.std::__1::pair.1159"** [ %71, %69 ], [ %29, %37 ]
  %59 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %57, i64 1
  %60 = ptrtoint %"struct.std::__1::pair.1159"* %59 to i64
  %61 = bitcast %"struct.std::__1::pair.1159"** %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = icmp eq i64 %63, 4096
  br i1 %64, label %65, label %69

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %58, i64 1
  %67 = bitcast %"struct.std::__1::pair.1159"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  br label %69

69:                                               ; preds = %65, %56
  %70 = phi i64 [ %68, %65 ], [ %60, %56 ]
  %71 = phi %"struct.std::__1::pair.1159"** [ %66, %65 ], [ %58, %56 ]
  %72 = inttoptr i64 %70 to %"struct.std::__1::pair.1159"*
  %73 = icmp eq %"struct.std::__1::pair.1159"* %48, %72
  br i1 %73, label %50, label %56

74:                                               ; preds = %50, %74
  %75 = phi %"struct.std::__1::pair.1159"** [ %79, %74 ], [ %25, %50 ]
  %76 = bitcast %"struct.std::__1::pair.1159"** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #11
  %78 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %24, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %78, i64 1
  store %"struct.std::__1::pair.1159"** %79, %"struct.std::__1::pair.1159"*** %24, align 8
  %80 = load i64, i64* %52, align 8
  %81 = ptrtoint %"struct.std::__1::pair.1159"** %79 to i64
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 3
  %84 = icmp ugt i64 %83, 2
  br i1 %84, label %74, label %85

85:                                               ; preds = %74
  %86 = inttoptr i64 %80 to %"struct.std::__1::pair.1159"**
  br label %87

87:                                               ; preds = %85, %50
  %88 = phi %"struct.std::__1::pair.1159"** [ %31, %50 ], [ %86, %85 ]
  %89 = phi %"struct.std::__1::pair.1159"** [ %25, %50 ], [ %79, %85 ]
  %90 = phi i64 [ %54, %50 ], [ %83, %85 ]
  switch i64 %90, label %94 [
    i64 1, label %92
    i64 2, label %91
  ]

91:                                               ; preds = %87
  br label %92

92:                                               ; preds = %87, %91
  %93 = phi i64 [ 256, %91 ], [ 128, %87 ]
  store i64 %93, i64* %26, align 8
  br label %94

94:                                               ; preds = %92, %87
  %95 = icmp eq %"struct.std::__1::pair.1159"** %89, %88
  br i1 %95, label %114, label %96

96:                                               ; preds = %94, %96
  %97 = phi %"struct.std::__1::pair.1159"** [ %100, %96 ], [ %89, %94 ]
  %98 = bitcast %"struct.std::__1::pair.1159"** %97 to i8**
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #11
  %100 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %97, i64 1
  %101 = icmp eq %"struct.std::__1::pair.1159"** %100, %88
  br i1 %101, label %102, label %96

102:                                              ; preds = %96
  %103 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %24, align 8
  %104 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %30, align 8
  %105 = icmp eq %"struct.std::__1::pair.1159"** %104, %103
  br i1 %105, label %114, label %106

106:                                              ; preds = %102
  %107 = ptrtoint %"struct.std::__1::pair.1159"** %103 to i64
  %108 = getelementptr %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %104, i64 -1
  %109 = ptrtoint %"struct.std::__1::pair.1159"** %108 to i64
  %110 = sub i64 %109, %107
  %111 = lshr i64 %110, 3
  %112 = xor i64 %111, -1
  %113 = getelementptr %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %104, i64 %112
  store %"struct.std::__1::pair.1159"** %113, %"struct.std::__1::pair.1159"*** %30, align 8
  br label %114

114:                                              ; preds = %106, %102, %94
  %115 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %116 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %115, align 8
  %117 = icmp eq %"struct.std::__1::pair.1159"** %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = bitcast %"struct.std::__1::pair.1159"** %116 to i8*
  call void @_ZdlPv(i8* %119) #11
  br label %120

120:                                              ; preds = %118, %114
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #12
  %121 = bitcast %"class.spvtools::opt::BasicBlock"*** %12 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.std::__1::vector.966"* %3 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = sub i64 %122, %124
  %126 = ashr exact i64 %125, 3
  %127 = icmp ugt i64 %126, 1
  br i1 %127, label %209, label %204

128:                                              ; preds = %201, %19
  %129 = phi %"struct.spvtools::opt::DominatorTreeNode"* [ %17, %19 ], [ %202, %201 ]
  %130 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %129, i64 0, i32 0
  %131 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %130, align 8
  %132 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %131, i64 0, i32 1, i32 0, i32 0, i32 0
  %133 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, align 8
  %134 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %133, i64 0, i32 4
  %135 = load i8, i8* %134, align 1, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %201, label %137

137:                                              ; preds = %128
  %138 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %133, i64 0, i32 3
  %139 = load i8, i8* %138, align 4, !range !2
  %140 = zext i8 %139 to i32
  %141 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %133, i32 %140) #12
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %201, label %143

143:                                              ; preds = %137
  %144 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %16, align 8
  %145 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %12, align 8
  %146 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %13, align 8
  %147 = icmp eq %"class.spvtools::opt::BasicBlock"** %145, %146
  %148 = ptrtoint %"class.spvtools::opt::BasicBlock"** %146 to i64
  br i1 %147, label %155, label %149

149:                                              ; preds = %143
  %150 = bitcast %"struct.spvtools::opt::DominatorTreeNode"* %144 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::BasicBlock"** %145 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %145, i64 1
  %154 = ptrtoint %"class.spvtools::opt::BasicBlock"** %153 to i64
  store i64 %154, i64* %20, align 8
  br label %201

155:                                              ; preds = %143
  %156 = ptrtoint %"class.spvtools::opt::BasicBlock"** %145 to i64
  %157 = load i64, i64* %21, align 8
  %158 = sub i64 %156, %157
  %159 = ashr exact i64 %158, 3
  %160 = add nsw i64 %159, 1
  %161 = icmp ugt i64 %160, 2305843009213693951
  br i1 %161, label %162, label %164

162:                                              ; preds = %155
  %163 = bitcast %"class.std::__1::vector.966"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %163) #13
  unreachable

164:                                              ; preds = %155
  %165 = sub i64 %148, %157
  %166 = ashr exact i64 %165, 3
  %167 = icmp ult i64 %166, 1152921504606846975
  br i1 %167, label %168, label %176

168:                                              ; preds = %164
  %169 = ashr exact i64 %165, 2
  %170 = icmp ult i64 %169, %160
  %171 = select i1 %170, i64 %160, i64 %169
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %181, label %173

173:                                              ; preds = %168
  %174 = icmp ugt i64 %171, 2305843009213693951
  br i1 %174, label %175, label %176

175:                                              ; preds = %173
  call void @abort() #13
  unreachable

176:                                              ; preds = %173, %164
  %177 = phi i64 [ %171, %173 ], [ 2305843009213693951, %164 ]
  %178 = shl i64 %177, 3
  %179 = call i8* @_Znwm(i64 %178) #11
  %180 = bitcast i8* %179 to %"class.spvtools::opt::BasicBlock"**
  br label %181

181:                                              ; preds = %176, %168
  %182 = phi i64 [ %177, %176 ], [ 0, %168 ]
  %183 = phi i8* [ %179, %176 ], [ null, %168 ]
  %184 = phi %"class.spvtools::opt::BasicBlock"** [ %180, %176 ], [ null, %168 ]
  %185 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %184, i64 %159
  %186 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %184, i64 %182
  %187 = ptrtoint %"class.spvtools::opt::BasicBlock"** %186 to i64
  %188 = bitcast %"struct.spvtools::opt::DominatorTreeNode"* %144 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.spvtools::opt::BasicBlock"** %185 to i64*
  store i64 %189, i64* %190, align 8
  %191 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %185, i64 1
  %192 = ptrtoint %"class.spvtools::opt::BasicBlock"** %191 to i64
  %193 = ptrtoint %"class.spvtools::opt::BasicBlock"** %184 to i64
  %194 = icmp sgt i64 %158, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %181
  %196 = inttoptr i64 %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %196, i64 %158, i1 false) #12
  br label %197

197:                                              ; preds = %195, %181
  store i64 %193, i64* %21, align 8
  store i64 %192, i64* %20, align 8
  store i64 %187, i64* %22, align 8
  %198 = icmp eq i64 %157, 0
  br i1 %198, label %201, label %199

199:                                              ; preds = %197
  %200 = inttoptr i64 %157 to i8*
  call void @_ZdlPv(i8* %200) #11
  br label %201

201:                                              ; preds = %199, %197, %149, %137, %128
  call void @_ZN8spvtools3opt14TreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"* nonnull %4) #12
  %202 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %16, align 8
  %203 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %202, null
  br i1 %203, label %23, label %128

204:                                              ; preds = %227, %120
  %205 = phi i64 [ %124, %120 ], [ %237, %227 ]
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %241, label %207

207:                                              ; preds = %204
  store i64 %205, i64* %121, align 8
  %208 = inttoptr i64 %205 to i8*
  call void @_ZdlPv(i8* %208) #11
  br label %241

209:                                              ; preds = %120, %227
  %210 = phi i64 [ %237, %227 ], [ %124, %120 ]
  %211 = phi i64 [ %235, %227 ], [ 1, %120 ]
  %212 = phi i32 [ %234, %227 ], [ 1, %120 ]
  %213 = inttoptr i64 %210 to %"class.spvtools::opt::BasicBlock"**
  %214 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %213, i64 %211
  %215 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %214, align 8
  %216 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %215, i64 0, i32 1, i32 0, i32 0, i32 0
  %217 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %216, align 8
  %218 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %217, i64 0, i32 4
  %219 = load i8, i8* %218, align 1, !range !2
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %227, label %221

221:                                              ; preds = %209
  %222 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %217, i64 0, i32 3
  %223 = load i8, i8* %222, align 4, !range !2
  %224 = zext i8 %223 to i32
  %225 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %217, i32 %224) #12
  %226 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, align 8
  br label %227

227:                                              ; preds = %221, %209
  %228 = phi %"class.spvtools::opt::BasicBlock"** [ %226, %221 ], [ %213, %209 ]
  %229 = phi i32 [ %225, %221 ], [ 0, %209 ]
  %230 = add i32 %212, -1
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %228, i64 %231
  %233 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %232, align 8
  call void @_ZN8spvtools3opt8Function21MoveBasicBlockToAfterEjPNS0_10BasicBlockE(%"class.spvtools::opt::Function"* %1, i32 %229, %"class.spvtools::opt::BasicBlock"* %233) #12
  %234 = add i32 %212, 1
  %235 = zext i32 %234 to i64
  %236 = load i64, i64* %121, align 8
  %237 = load i64, i64* %123, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = icmp ugt i64 %239, %235
  br i1 %240, label %209, label %204

241:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  ret i1 true
}

declare %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt13DominatorTree5beginEv(%"class.spvtools::opt::TreeDFIterator"* noalias sret, %"class.spvtools::opt::DominatorTree"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %4 = bitcast %"class.spvtools::opt::TreeDFIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.spvtools::opt::DominatorTree", %"class.spvtools::opt::DominatorTree"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %5, align 8
  %7 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 0
  store %"struct.spvtools::opt::DominatorTreeNode"* %7, %"struct.spvtools::opt::DominatorTreeNode"** %8, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1
  %10 = bitcast %"class.std::__1::stack"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false) #12
  %11 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %7, null
  br i1 %11, label %44, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %7, i64 0, i32 2, i32 0, i32 0
  %14 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %13, align 8
  %15 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %7, i64 0, i32 2, i32 0, i32 1
  %16 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %15, align 8
  %17 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %14, %16
  br i1 %17, label %44, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %9, i64 0, i32 0
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %23) #12
  %24 = load i64, i64* %19, align 8
  %25 = load i64, i64* %20, align 8
  %26 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %21, align 8
  %27 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %22, align 8
  %28 = add i64 %25, %24
  %29 = icmp eq %"struct.std::__1::pair.1159"** %27, %26
  br i1 %29, label %37, label %30

30:                                               ; preds = %18
  %31 = lshr i64 %28, 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %26, i64 %31
  %33 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %32, align 8
  %34 = and i64 %28, 255
  %35 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %33, i64 %34
  %36 = bitcast %"struct.std::__1::pair.1159"* %35 to i8*
  br label %37

37:                                               ; preds = %30, %18
  %38 = phi i8* [ %36, %30 ], [ null, %18 ]
  %39 = bitcast i8* %38 to %"struct.spvtools::opt::DominatorTreeNode"**
  store %"struct.spvtools::opt::DominatorTreeNode"* %7, %"struct.spvtools::opt::DominatorTreeNode"** %39, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 8
  %41 = bitcast i8* %40 to %"struct.spvtools::opt::DominatorTreeNode"***
  store %"struct.spvtools::opt::DominatorTreeNode"** %14, %"struct.spvtools::opt::DominatorTreeNode"*** %41, align 8
  %42 = load i64, i64* %19, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %19, align 8
  br label %44

44:                                               ; preds = %2, %12, %37
  call void @_ZN8spvtools3opt14TreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"* nonnull %3) #12
  %45 = bitcast %"class.spvtools::opt::TreeDFIterator"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.spvtools::opt::TreeDFIterator"* %0 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %48, i64 0, i32 0
  %50 = bitcast %"class.std::__1::stack"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 48, i1 false) #12
  %51 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %52 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %52, i64 %55
  %57 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %58 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %57, align 8
  %59 = icmp eq %"struct.std::__1::pair.1159"** %58, %52
  br i1 %59, label %60, label %66

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, %54
  %64 = lshr i64 %63, 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %52, i64 %64
  br label %78

66:                                               ; preds = %44
  %67 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %56, align 8
  %68 = and i64 %54, 255
  %69 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %67, i64 %68
  %70 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, %54
  %73 = lshr i64 %72, 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %52, i64 %73
  %75 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %74, align 8
  %76 = and i64 %72, 255
  %77 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %75, i64 %76
  br label %78

78:                                               ; preds = %60, %66
  %79 = phi %"struct.std::__1::pair.1159"** [ %74, %66 ], [ %65, %60 ]
  %80 = phi %"struct.std::__1::pair.1159"* [ %69, %66 ], [ null, %60 ]
  %81 = phi %"struct.std::__1::pair.1159"* [ %77, %66 ], [ null, %60 ]
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"* %49, %"struct.std::__1::pair.1159"** %56, %"struct.std::__1::pair.1159"* %80, %"struct.std::__1::pair.1159"** %79, %"struct.std::__1::pair.1159"* %81, i8* null) #12
  %82 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %51, align 8
  %83 = load i64, i64* %53, align 8
  %84 = lshr i64 %83, 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %82, i64 %84
  %86 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %57, align 8
  %87 = icmp eq %"struct.std::__1::pair.1159"** %86, %82
  %88 = ptrtoint %"struct.std::__1::pair.1159"** %86 to i64
  %89 = ptrtoint %"struct.std::__1::pair.1159"** %82 to i64
  br i1 %87, label %90, label %92

90:                                               ; preds = %78
  %91 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %105

92:                                               ; preds = %78
  %93 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %85, align 8
  %94 = and i64 %83, 255
  %95 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %93, i64 %94
  %96 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, %83
  %99 = lshr i64 %98, 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %82, i64 %99
  %101 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %100, align 8
  %102 = and i64 %98, 255
  %103 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %101, i64 %102
  %104 = icmp eq %"struct.std::__1::pair.1159"* %103, %95
  br i1 %104, label %105, label %111

105:                                              ; preds = %124, %92, %90
  %106 = phi i64* [ %91, %90 ], [ %96, %92 ], [ %96, %124 ]
  store i64 0, i64* %106, align 8
  %107 = bitcast %"struct.std::__1::pair.1159"*** %57 to i64*
  %108 = sub i64 %88, %89
  %109 = ashr exact i64 %108, 3
  %110 = icmp ugt i64 %109, 2
  br i1 %110, label %129, label %142

111:                                              ; preds = %92, %124
  %112 = phi %"struct.std::__1::pair.1159"* [ %127, %124 ], [ %95, %92 ]
  %113 = phi %"struct.std::__1::pair.1159"** [ %126, %124 ], [ %85, %92 ]
  %114 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %112, i64 1
  %115 = ptrtoint %"struct.std::__1::pair.1159"* %114 to i64
  %116 = bitcast %"struct.std::__1::pair.1159"** %113 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 %115, %117
  %119 = icmp eq i64 %118, 4096
  br i1 %119, label %120, label %124

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %113, i64 1
  %122 = bitcast %"struct.std::__1::pair.1159"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  br label %124

124:                                              ; preds = %120, %111
  %125 = phi i64 [ %123, %120 ], [ %115, %111 ]
  %126 = phi %"struct.std::__1::pair.1159"** [ %121, %120 ], [ %113, %111 ]
  %127 = inttoptr i64 %125 to %"struct.std::__1::pair.1159"*
  %128 = icmp eq %"struct.std::__1::pair.1159"* %103, %127
  br i1 %128, label %105, label %111

129:                                              ; preds = %105, %129
  %130 = phi %"struct.std::__1::pair.1159"** [ %134, %129 ], [ %82, %105 ]
  %131 = bitcast %"struct.std::__1::pair.1159"** %130 to i8**
  %132 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %132) #11
  %133 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %51, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %133, i64 1
  store %"struct.std::__1::pair.1159"** %134, %"struct.std::__1::pair.1159"*** %51, align 8
  %135 = load i64, i64* %107, align 8
  %136 = ptrtoint %"struct.std::__1::pair.1159"** %134 to i64
  %137 = sub i64 %135, %136
  %138 = ashr exact i64 %137, 3
  %139 = icmp ugt i64 %138, 2
  br i1 %139, label %129, label %140

140:                                              ; preds = %129
  %141 = inttoptr i64 %135 to %"struct.std::__1::pair.1159"**
  br label %142

142:                                              ; preds = %140, %105
  %143 = phi %"struct.std::__1::pair.1159"** [ %86, %105 ], [ %141, %140 ]
  %144 = phi %"struct.std::__1::pair.1159"** [ %82, %105 ], [ %134, %140 ]
  %145 = phi i64 [ %109, %105 ], [ %138, %140 ]
  switch i64 %145, label %149 [
    i64 1, label %147
    i64 2, label %146
  ]

146:                                              ; preds = %142
  br label %147

147:                                              ; preds = %142, %146
  %148 = phi i64 [ 256, %146 ], [ 128, %142 ]
  store i64 %148, i64* %53, align 8
  br label %149

149:                                              ; preds = %147, %142
  %150 = icmp eq %"struct.std::__1::pair.1159"** %144, %143
  br i1 %150, label %169, label %151

151:                                              ; preds = %149, %151
  %152 = phi %"struct.std::__1::pair.1159"** [ %155, %151 ], [ %144, %149 ]
  %153 = bitcast %"struct.std::__1::pair.1159"** %152 to i8**
  %154 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %154) #11
  %155 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %152, i64 1
  %156 = icmp eq %"struct.std::__1::pair.1159"** %155, %143
  br i1 %156, label %157, label %151

157:                                              ; preds = %151
  %158 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %51, align 8
  %159 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %57, align 8
  %160 = icmp eq %"struct.std::__1::pair.1159"** %159, %158
  br i1 %160, label %169, label %161

161:                                              ; preds = %157
  %162 = ptrtoint %"struct.std::__1::pair.1159"** %158 to i64
  %163 = getelementptr %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %159, i64 -1
  %164 = ptrtoint %"struct.std::__1::pair.1159"** %163 to i64
  %165 = sub i64 %164, %162
  %166 = lshr i64 %165, 3
  %167 = xor i64 %166, -1
  %168 = getelementptr %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %159, i64 %167
  store %"struct.std::__1::pair.1159"** %168, %"struct.std::__1::pair.1159"*** %57, align 8
  br label %169

169:                                              ; preds = %161, %157, %149
  %170 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %171 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %170, align 8
  %172 = icmp eq %"struct.std::__1::pair.1159"** %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  %174 = bitcast %"struct.std::__1::pair.1159"** %171 to i8*
  call void @_ZdlPv(i8* %174) #11
  br label %175

175:                                              ; preds = %169, %173
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8Function21MoveBasicBlockToAfterEjPNS0_10BasicBlockE(%"class.spvtools::opt::Function"*, i32, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.40", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.40"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %6, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.40"* %8, %10
  br i1 %11, label %32, label %12

12:                                               ; preds = %3, %29
  %13 = phi %"class.std::__1::unique_ptr.40"* [ %30, %29 ], [ %8, %3 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 4
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 3
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = zext i8 %23 to i32
  %25 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %17, i32 %24) #12
  br label %26

26:                                               ; preds = %21, %12
  %27 = phi i32 [ %25, %21 ], [ 0, %12 ]
  %28 = icmp eq i32 %27, %1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 1
  %31 = icmp eq %"class.std::__1::unique_ptr.40"* %30, %10
  br i1 %31, label %32, label %12

32:                                               ; preds = %26, %29, %3
  %33 = phi %"class.std::__1::unique_ptr.40"* [ %8, %3 ], [ %10, %29 ], [ %13, %26 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr.40"* %33 to i64*
  %36 = load i64, i64* %35, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %34, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.40"* %4 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %39 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %40 = icmp eq %"class.std::__1::unique_ptr.40"* %38, %39
  br i1 %40, label %49, label %41

41:                                               ; preds = %32, %46
  %42 = phi %"class.std::__1::unique_ptr.40"* [ %47, %46 ], [ %38, %32 ]
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %43, align 8
  %45 = icmp eq %"class.spvtools::opt::BasicBlock"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %42, i64 1
  %48 = icmp eq %"class.std::__1::unique_ptr.40"* %47, %39
  br i1 %48, label %49, label %41

49:                                               ; preds = %41, %46, %32
  %50 = phi %"class.std::__1::unique_ptr.40"* [ %38, %32 ], [ %42, %41 ], [ %39, %46 ]
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %50, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr.40"* %51, %39
  br i1 %52, label %72, label %53

53:                                               ; preds = %49, %65
  %54 = phi %"class.std::__1::unique_ptr.40"* [ %67, %65 ], [ %50, %49 ]
  %55 = phi %"class.std::__1::unique_ptr.40"* [ %66, %65 ], [ %51, %49 ]
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.40"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %56, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %54, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %59, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.40"* %54 to i64*
  store i64 %58, i64* %61, align 8
  %62 = icmp eq %"class.spvtools::opt::BasicBlock"* %60, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %53
  %64 = bitcast %"class.std::__1::unique_ptr.40"* %54 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %64, %"class.spvtools::opt::BasicBlock"* nonnull %60) #12
  br label %65

65:                                               ; preds = %63, %53
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %55, i64 1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %54, i64 1
  %68 = icmp eq %"class.std::__1::unique_ptr.40"* %66, %39
  br i1 %68, label %69, label %53

69:                                               ; preds = %65
  %70 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %71 = icmp eq %"class.std::__1::unique_ptr.40"* %70, %67
  br i1 %71, label %85, label %72

72:                                               ; preds = %69, %49
  %73 = phi %"class.std::__1::unique_ptr.40"* [ %67, %69 ], [ %50, %49 ]
  %74 = phi %"class.std::__1::unique_ptr.40"* [ %70, %69 ], [ %39, %49 ]
  br label %75

75:                                               ; preds = %83, %72
  %76 = phi %"class.std::__1::unique_ptr.40"* [ %77, %83 ], [ %74, %72 ]
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -1
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %78, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8
  %80 = icmp eq %"class.spvtools::opt::BasicBlock"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.std::__1::unique_ptr.40"* %77 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %82, %"class.spvtools::opt::BasicBlock"* nonnull %79) #12
  br label %83

83:                                               ; preds = %81, %75
  %84 = icmp eq %"class.std::__1::unique_ptr.40"* %77, %73
  br i1 %84, label %85, label %75

85:                                               ; preds = %83, %69
  %86 = phi %"class.std::__1::unique_ptr.40"* [ %67, %69 ], [ %73, %83 ]
  store %"class.std::__1::unique_ptr.40"* %86, %"class.std::__1::unique_ptr.40"** %9, align 8
  %87 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt8Function21InsertBasicBlockAfterEONSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEEPS4_(%"class.spvtools::opt::Function"* %0, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %4, %"class.spvtools::opt::BasicBlock"* %2) #12
  %88 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %6, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %89 = icmp eq %"class.spvtools::opt::BasicBlock"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.std::__1::unique_ptr.40"* %4 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %91, %"class.spvtools::opt::BasicBlock"* nonnull %88) #12
  br label %92

92:                                               ; preds = %85, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.1159"*, align 8
  %3 = alloca %"struct.std::__1::pair.1159"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1170", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.1159"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %11, i64 1
  store %"struct.std::__1::pair.1159"** %14, %"struct.std::__1::pair.1159"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.1159"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.1159"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.1159"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.1159"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.1159"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.1159"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.1159"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.1159"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.1159"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #12
  %41 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.1159"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %33, i64 %36
  store %"struct.std::__1::pair.1159"** %44, %"struct.std::__1::pair.1159"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %43, i64 %32
  store %"struct.std::__1::pair.1159"** %45, %"struct.std::__1::pair.1159"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.1159"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.1159"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.1159"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.1159"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.1159"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.1159"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.1159"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.1159"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.1159"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.1159"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.1159"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !90

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.1159"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.1159"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.1159"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.1159"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.1159"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.1159"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.1159"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1159"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.1159"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1159"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.1159"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1159"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.1159"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1159"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.1159"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1159"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.1159"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.1159"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.1159"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.1159"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.1159"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.1159"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.1159"** %70 to i64
  %146 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.1159"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.1159"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.1159"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.1159"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.1159"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  %156 = bitcast %"struct.std::__1::pair.1159"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %160, i64 1
  store %"struct.std::__1::pair.1159"** %161, %"struct.std::__1::pair.1159"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.1159"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.1159"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.1159"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.1159"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.1159"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.1159"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #12
  %186 = tail call i8* @_Znwm(i64 4096) #11
  %187 = bitcast %"struct.std::__1::pair.1159"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer.1158"* %163, %"struct.std::__1::pair.1159"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #12
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.1159"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #12
  %190 = tail call i8* @_Znwm(i64 4096) #11
  %191 = bitcast %"struct.std::__1::pair.1159"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer.1158"* %163, %"struct.std::__1::pair.1159"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #12
  %192 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.1159"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %192, i64 1
  store %"struct.std::__1::pair.1159"** %195, %"struct.std::__1::pair.1159"*** %167, align 8
  %196 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %164, align 8
  %197 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.1159"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.1159"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.1159"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.1159"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.1159"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.1159"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.1159"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.1159"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.1159"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #12
  %220 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.1159"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %212, i64 %215
  store %"struct.std::__1::pair.1159"** %223, %"struct.std::__1::pair.1159"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %222, i64 %211
  store %"struct.std::__1::pair.1159"** %224, %"struct.std::__1::pair.1159"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.1159"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #13
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #11
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.1159"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.1159"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.1159"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.1159"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.1159"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.1159"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.1159"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.1159"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.1159"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !91

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.1159"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.1159"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.1159"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.1159"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.1159"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.1159"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.1159"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.1159"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.1159"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.1159"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.1159"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.1159"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.1159"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.1159"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.1159"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.1159"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.1159"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.1159"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.1159"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.1159"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.1159"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.1159"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.1159"** %247 to i64
  %323 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.1159"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.1159"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.1159"** %325 to i8*
  call void @_ZdlPv(i8* %330) #11
  %331 = bitcast %"struct.std::__1::pair.1159"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %335, i64 1
  store %"struct.std::__1::pair.1159"** %336, %"struct.std::__1::pair.1159"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1170"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #12
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1170"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1159"** null, %"struct.std::__1::pair.1159"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1164"** %342 to %"class.std::__1::__compressed_pair.1161"**
  store %"class.std::__1::__compressed_pair.1161"* %346, %"class.std::__1::__compressed_pair.1161"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #13
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #11
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.1159"**
  %355 = bitcast %"struct.std::__1::__split_buffer.1170"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %354, i64 %171
  store %"struct.std::__1::pair.1159"** %356, %"struct.std::__1::pair.1159"*** %340, align 8
  store %"struct.std::__1::pair.1159"** %356, %"struct.std::__1::pair.1159"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %354, i64 %345
  store %"struct.std::__1::pair.1159"** %357, %"struct.std::__1::pair.1159"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #11
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.1159"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.1159"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.1159"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %356, i64 %370
  store %"struct.std::__1::pair.1159"** %371, %"struct.std::__1::pair.1159"*** %340, align 8
  store %"struct.std::__1::pair.1159"** %371, %"struct.std::__1::pair.1159"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.1159"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #13
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1170"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.1159"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #11
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.1159"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.1159"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.1159"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.1159"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.1159"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #11
  %394 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %164, align 8
  %395 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.1159"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.1159"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.1159"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.1159"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.1159"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.1159"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %406, i64 1
  store %"struct.std::__1::pair.1159"** %408, %"struct.std::__1::pair.1159"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.1159"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.1159"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1170"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.1159"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.1159"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.1159"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.1159"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1170"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.1159"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.1159"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.1159"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.1159"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.1159"**
  %442 = icmp eq %"struct.std::__1::pair.1159"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.1159"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %441, i64 %448
  store %"struct.std::__1::pair.1159"** %449, %"struct.std::__1::pair.1159"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #11
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #12
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.1159"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1170"* nonnull %4, %"struct.std::__1::pair.1159"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.1159"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer.1158"*, %"struct.std::__1::pair.1159"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1158", %"struct.std::__1::__split_buffer.1158"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1158", %"struct.std::__1::__split_buffer.1158"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1159"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1159"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.1159"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1158", %"struct.std::__1::__split_buffer.1158"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1158", %"struct.std::__1::__split_buffer.1158"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.1159"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.1159"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.1159"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1159"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.1159"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.1159"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.1159"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %23, i64 %26
  store %"struct.std::__1::pair.1159"** %34, %"struct.std::__1::pair.1159"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %33, i64 %22
  store %"struct.std::__1::pair.1159"** %35, %"struct.std::__1::pair.1159"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.1159"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.1159"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1158"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.1159"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.1159"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.1159"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.1159"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1159"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.1159"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.1159"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.1159"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.1159"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !92

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.1159"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.1159"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.1159"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.1159"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.1159"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.1159"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.1159"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.1159"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.1159"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.1159"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.1159"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1159"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.1159"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1159"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.1159"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1159"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.1159"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1159"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.1159"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1159"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.1159"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.1159"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.1159"** %60 to i64
  %136 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.1159"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.1159"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.1159"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.1159"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.1159"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast %"struct.std::__1::pair.1159"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.1159"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %152, i64 1
  store %"struct.std::__1::pair.1159"** %153, %"struct.std::__1::pair.1159"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer.1158"*, %"struct.std::__1::pair.1159"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1158", %"struct.std::__1::__split_buffer.1158"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1158", %"struct.std::__1::__split_buffer.1158"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1159"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1159"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1158", %"struct.std::__1::__split_buffer.1158"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1158", %"struct.std::__1::__split_buffer.1158"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1159"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1159"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1159"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1159"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1159"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1159"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1159"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1159"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1159"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1159"** %36, %"struct.std::__1::pair.1159"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %35, i64 %22
  store %"struct.std::__1::pair.1159"** %37, %"struct.std::__1::pair.1159"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1158"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1159"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1159"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1159"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1159"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1159"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1159"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1159"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1159"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1159"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !93

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1159"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1159"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1159"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1159"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1159"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1159"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1159"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1159"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1159"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1159"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1159"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1159"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1159"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1159"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1159"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1159"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1159"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1159"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1159"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1159"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1159"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1159"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1159"** %61 to i64
  %137 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1159"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1159"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1159"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1159"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1159"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1159"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1159"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1159"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %153, i64 -1
  store %"struct.std::__1::pair.1159"** %154, %"struct.std::__1::pair.1159"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1170"*, %"struct.std::__1::pair.1159"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1159"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1159"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1159"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1159"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1159"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1159"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1159"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1159"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1159"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1159"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1159"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1159"** %36, %"struct.std::__1::pair.1159"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %35, i64 %22
  store %"struct.std::__1::pair.1159"** %37, %"struct.std::__1::pair.1159"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1170"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1159"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1159"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1159"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1159"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1159"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1159"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1159"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1159"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1159"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !94

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1159"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1159"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1159"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1159"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1159"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1159"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1159"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1159"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1159"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1159"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1159"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1159"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1159"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1159"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1159"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1159"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1159"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1159"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1159"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1159"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1159"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1159"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1159"** %61 to i64
  %137 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1159"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1159"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1159"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1159"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1159"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1159"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1159"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1159"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %153, i64 -1
  store %"struct.std::__1::pair.1159"** %154, %"struct.std::__1::pair.1159"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"*, %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = ptrtoint %"struct.std::__1::pair.1159"* %2 to i64
  %8 = icmp eq %"struct.std::__1::pair.1159"* %4, %2
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.std::__1::pair.1159"* %4 to i64
  %11 = ptrtoint %"struct.std::__1::pair.1159"** %3 to i64
  %12 = ptrtoint %"struct.std::__1::pair.1159"** %1 to i64
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 5
  %15 = bitcast %"struct.std::__1::pair.1159"** %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %10, %16
  %18 = ashr exact i64 %17, 4
  %19 = add nsw i64 %18, %14
  %20 = bitcast %"struct.std::__1::pair.1159"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %7, %21
  %23 = ashr exact i64 %22, 4
  %24 = sub i64 %19, %23
  br label %25

25:                                               ; preds = %6, %9
  %26 = phi i64 [ %24, %9 ], [ 0, %6 ]
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast %"struct.std::__1::pair.1159"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.std::__1::pair.1159"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = icmp eq i64 %33, 0
  %35 = shl i64 %33, 5
  %36 = add i64 %35, -1
  %37 = select i1 %34, i64 0, i64 %36
  %38 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %39
  %43 = sub i64 %37, %42
  %44 = icmp ugt i64 %26, %43
  %45 = inttoptr i64 %32 to %"struct.std::__1::pair.1159"**
  %46 = inttoptr i64 %29 to %"struct.std::__1::pair.1159"**
  br i1 %44, label %47, label %54

47:                                               ; preds = %25
  %48 = sub i64 %26, %43
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque"* %0, i64 %48)
  %49 = load i64, i64* %40, align 8
  %50 = load i64, i64* %38, align 8
  %51 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %30, align 8
  %52 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %27, align 8
  %53 = add i64 %50, %49
  br label %54

54:                                               ; preds = %47, %25
  %55 = phi i64 [ %53, %47 ], [ %42, %25 ]
  %56 = phi %"struct.std::__1::pair.1159"** [ %52, %47 ], [ %46, %25 ]
  %57 = phi %"struct.std::__1::pair.1159"** [ %51, %47 ], [ %45, %25 ]
  %58 = phi i64 [ %49, %47 ], [ %41, %25 ]
  %59 = lshr i64 %55, 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %57, i64 %59
  %61 = icmp eq %"struct.std::__1::pair.1159"** %56, %57
  br i1 %61, label %67, label %62

62:                                               ; preds = %54
  %63 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %60, align 8
  %64 = and i64 %55, 255
  %65 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %63, i64 %64
  %66 = ptrtoint %"struct.std::__1::pair.1159"* %65 to i64
  br label %67

67:                                               ; preds = %54, %62
  %68 = phi i64 [ %66, %62 ], [ 0, %54 ]
  %69 = icmp eq i64 %26, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %67
  %71 = bitcast %"struct.std::__1::pair.1159"** %60 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %68, %72
  %74 = ashr exact i64 %73, 4
  %75 = add nsw i64 %74, %26
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %70
  %78 = lshr i64 %75, 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %60, i64 %78
  %80 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %79, align 8
  %81 = and i64 %75, 255
  %82 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %80, i64 %81
  %83 = ptrtoint %"struct.std::__1::pair.1159"* %82 to i64
  br label %93

84:                                               ; preds = %70
  %85 = sub nsw i64 255, %75
  %86 = sdiv i64 %85, -256
  %87 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %60, i64 %86
  %88 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %87, align 8
  %89 = srem i64 %85, 256
  %90 = sub nsw i64 255, %89
  %91 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %88, i64 %90
  %92 = ptrtoint %"struct.std::__1::pair.1159"* %91 to i64
  br label %93

93:                                               ; preds = %67, %77, %84
  %94 = phi i64 [ %68, %67 ], [ %83, %77 ], [ %92, %84 ]
  %95 = phi %"struct.std::__1::pair.1159"** [ %60, %67 ], [ %79, %77 ], [ %87, %84 ]
  %96 = inttoptr i64 %94 to %"struct.std::__1::pair.1159"*
  %97 = inttoptr i64 %68 to %"struct.std::__1::pair.1159"*
  %98 = icmp eq %"struct.std::__1::pair.1159"* %97, %96
  br i1 %98, label %99, label %100

99:                                               ; preds = %184, %192, %93
  ret void

100:                                              ; preds = %93, %192
  %101 = phi i64 [ %191, %192 ], [ %58, %93 ]
  %102 = phi i64 [ %187, %192 ], [ %7, %93 ]
  %103 = phi %"struct.std::__1::pair.1159"** [ %186, %192 ], [ %1, %93 ]
  %104 = phi i64 [ %195, %192 ], [ %68, %93 ]
  %105 = phi %"struct.std::__1::pair.1159"** [ %193, %192 ], [ %60, %93 ]
  %106 = icmp eq %"struct.std::__1::pair.1159"** %105, %95
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %105, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %108, i64 256
  br label %110

110:                                              ; preds = %100, %107
  %111 = phi %"struct.std::__1::pair.1159"* [ %109, %107 ], [ %96, %100 ]
  %112 = inttoptr i64 %104 to %"struct.std::__1::pair.1159"*
  %113 = icmp eq %"struct.std::__1::pair.1159"* %111, %112
  br i1 %113, label %184, label %114

114:                                              ; preds = %110
  %115 = getelementptr %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %111, i64 -1
  %116 = bitcast %"struct.std::__1::pair.1159"* %115 to i8*
  %117 = sub i64 0, %104
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = ptrtoint i8* %118 to i64
  %120 = and i64 %119, 16
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %138

122:                                              ; preds = %114
  %123 = inttoptr i64 %102 to %"struct.std::__1::pair.1159"*
  %124 = inttoptr i64 %104 to i8*
  %125 = inttoptr i64 %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #12
  %126 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %112, i64 1
  %127 = ptrtoint %"struct.std::__1::pair.1159"* %126 to i64
  %128 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %123, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.1159"* %128 to i64
  %130 = bitcast %"struct.std::__1::pair.1159"** %103 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %129, %131
  %133 = icmp eq i64 %132, 4096
  br i1 %133, label %134, label %138

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %103, i64 1
  %136 = bitcast %"struct.std::__1::pair.1159"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  br label %138

138:                                              ; preds = %114, %134, %122
  %139 = phi %"struct.std::__1::pair.1159"** [ undef, %114 ], [ %135, %134 ], [ %103, %122 ]
  %140 = phi i64 [ undef, %114 ], [ %137, %134 ], [ %129, %122 ]
  %141 = phi %"struct.std::__1::pair.1159"* [ %112, %114 ], [ %126, %134 ], [ %126, %122 ]
  %142 = phi i64 [ %104, %114 ], [ %127, %134 ], [ %127, %122 ]
  %143 = phi i64 [ %102, %114 ], [ %137, %134 ], [ %129, %122 ]
  %144 = phi %"struct.std::__1::pair.1159"** [ %103, %114 ], [ %135, %134 ], [ %103, %122 ]
  %145 = icmp ult i8* %118, inttoptr (i64 16 to i8*)
  br i1 %145, label %179, label %146

146:                                              ; preds = %138, %202
  %147 = phi %"struct.std::__1::pair.1159"* [ %171, %202 ], [ %141, %138 ]
  %148 = phi i64 [ %172, %202 ], [ %142, %138 ]
  %149 = phi i64 [ %204, %202 ], [ %143, %138 ]
  %150 = phi %"struct.std::__1::pair.1159"** [ %203, %202 ], [ %144, %138 ]
  %151 = inttoptr i64 %149 to %"struct.std::__1::pair.1159"*
  %152 = inttoptr i64 %148 to i8*
  %153 = inttoptr i64 %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #12
  %154 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %147, i64 1
  %155 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %151, i64 1
  %156 = ptrtoint %"struct.std::__1::pair.1159"* %155 to i64
  %157 = bitcast %"struct.std::__1::pair.1159"** %150 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %156, %158
  %160 = icmp eq i64 %159, 4096
  br i1 %160, label %161, label %165

161:                                              ; preds = %146
  %162 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %150, i64 1
  %163 = bitcast %"struct.std::__1::pair.1159"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  br label %165

165:                                              ; preds = %146, %161
  %166 = phi %"struct.std::__1::pair.1159"** [ %162, %161 ], [ %150, %146 ]
  %167 = phi i64 [ %164, %161 ], [ %156, %146 ]
  %168 = inttoptr i64 %167 to %"struct.std::__1::pair.1159"*
  %169 = bitcast %"struct.std::__1::pair.1159"* %154 to i8*
  %170 = inttoptr i64 %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false) #12
  %171 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %147, i64 2
  %172 = ptrtoint %"struct.std::__1::pair.1159"* %171 to i64
  %173 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %168, i64 1
  %174 = ptrtoint %"struct.std::__1::pair.1159"* %173 to i64
  %175 = bitcast %"struct.std::__1::pair.1159"** %166 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = icmp eq i64 %177, 4096
  br i1 %178, label %198, label %202

179:                                              ; preds = %202, %138
  %180 = phi %"struct.std::__1::pair.1159"** [ %139, %138 ], [ %203, %202 ]
  %181 = phi i64 [ %140, %138 ], [ %204, %202 ]
  %182 = ptrtoint %"struct.std::__1::pair.1159"* %111 to i64
  %183 = load i64, i64* %40, align 8
  br label %184

184:                                              ; preds = %179, %110
  %185 = phi i64 [ %183, %179 ], [ %101, %110 ]
  %186 = phi %"struct.std::__1::pair.1159"** [ %180, %179 ], [ %103, %110 ]
  %187 = phi i64 [ %181, %179 ], [ %102, %110 ]
  %188 = phi i64 [ %182, %179 ], [ %104, %110 ]
  %189 = sub i64 %188, %104
  %190 = ashr exact i64 %189, 4
  %191 = add i64 %185, %190
  store i64 %191, i64* %40, align 8
  br i1 %106, label %99, label %192

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %105, i64 1
  %194 = bitcast %"struct.std::__1::pair.1159"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = inttoptr i64 %195 to %"struct.std::__1::pair.1159"*
  %197 = icmp eq %"struct.std::__1::pair.1159"* %196, %96
  br i1 %197, label %99, label %100

198:                                              ; preds = %165
  %199 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %166, i64 1
  %200 = bitcast %"struct.std::__1::pair.1159"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  br label %202

202:                                              ; preds = %198, %165
  %203 = phi %"struct.std::__1::pair.1159"** [ %199, %198 ], [ %166, %165 ]
  %204 = phi i64 [ %201, %198 ], [ %174, %165 ]
  %205 = icmp eq %"struct.std::__1::pair.1159"* %111, %171
  br i1 %205, label %179, label %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.1159"*, align 8
  %4 = alloca %"struct.std::__1::pair.1159"*, align 8
  %5 = alloca %"struct.std::__1::__split_buffer.1170", align 16
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.1159"** %8, %10
  %12 = zext i1 %11 to i64
  %13 = add i64 %12, %1
  %14 = lshr i64 %13, 8
  %15 = and i64 %13, 255
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %14, %17
  %19 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 8
  %22 = icmp ult i64 %18, %21
  %23 = select i1 %22, i64 %18, i64 %21
  %24 = sub nsw i64 %18, %23
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint %"struct.std::__1::pair.1159"** %8 to i64
  br i1 %25, label %27, label %186

27:                                               ; preds = %2
  %28 = shl nuw i64 %23, 8
  %29 = sub i64 %20, %28
  store i64 %29, i64* %19, align 8
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %768, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.1159"*** %32 to i64*
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = bitcast %"struct.std::__1::pair.1159"*** %9 to i64*
  %37 = bitcast %"struct.std::__1::pair.1159"*** %7 to i64*
  %38 = bitcast %"struct.std::__1::pair.1159"*** %7 to i64**
  br label %39

39:                                               ; preds = %184, %31
  %40 = phi %"struct.std::__1::pair.1159"** [ %8, %31 ], [ %181, %184 ]
  %41 = phi %"struct.std::__1::pair.1159"** [ %10, %31 ], [ %185, %184 ]
  %42 = phi i64 [ %23, %31 ], [ %182, %184 ]
  %43 = bitcast %"struct.std::__1::pair.1159"** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %41, i64 1
  store %"struct.std::__1::pair.1159"** %45, %"struct.std::__1::pair.1159"*** %9, align 8
  %46 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %32, align 8
  %47 = icmp eq %"struct.std::__1::pair.1159"** %40, %46
  %48 = ptrtoint %"struct.std::__1::pair.1159"** %46 to i64
  %49 = bitcast %"struct.std::__1::pair.1159"** %40 to i64*
  br i1 %47, label %50, label %178

50:                                               ; preds = %39
  %51 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %33, align 8
  %52 = icmp ugt %"struct.std::__1::pair.1159"** %45, %51
  %53 = ptrtoint %"struct.std::__1::pair.1159"** %51 to i64
  br i1 %52, label %54, label %73

54:                                               ; preds = %50
  %55 = ptrtoint %"struct.std::__1::pair.1159"** %45 to i64
  %56 = sub i64 %55, %53
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = sdiv i64 %58, -2
  %60 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %45, i64 %59
  %61 = sub i64 %48, %55
  %62 = ashr exact i64 %61, 3
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = bitcast %"struct.std::__1::pair.1159"** %60 to i8*
  %66 = bitcast %"struct.std::__1::pair.1159"** %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %61, i1 false) #12
  %67 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %9, align 8
  br label %68

68:                                               ; preds = %64, %54
  %69 = phi %"struct.std::__1::pair.1159"** [ %45, %54 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %60, i64 %62
  store %"struct.std::__1::pair.1159"** %70, %"struct.std::__1::pair.1159"*** %7, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %69, i64 %59
  store %"struct.std::__1::pair.1159"** %71, %"struct.std::__1::pair.1159"*** %9, align 8
  %72 = bitcast %"struct.std::__1::pair.1159"** %70 to i64*
  br label %178

73:                                               ; preds = %50
  %74 = sub i64 %48, %53
  %75 = ashr exact i64 %74, 2
  %76 = icmp eq i64 %74, 0
  %77 = select i1 %76, i64 1, i64 %75
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call void @abort() #13
  unreachable

80:                                               ; preds = %73
  %81 = lshr i64 %77, 2
  %82 = shl i64 %77, 3
  %83 = tail call i8* @_Znwm(i64 %82) #11
  %84 = bitcast i8* %83 to %"struct.std::__1::pair.1159"**
  %85 = ptrtoint i8* %83 to i64
  %86 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %84, i64 %81
  %87 = ptrtoint %"struct.std::__1::pair.1159"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %84, i64 %77
  %89 = ptrtoint %"struct.std::__1::pair.1159"** %88 to i64
  %90 = ptrtoint %"struct.std::__1::pair.1159"** %45 to i64
  %91 = sub i64 %48, %90
  %92 = ashr exact i64 %91, 3
  %93 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %86, i64 %92
  %94 = icmp eq i64 %91, 0
  br i1 %94, label %170, label %95

95:                                               ; preds = %80
  %96 = add i64 %91, -8
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %95, %101
  %102 = phi %"struct.std::__1::pair.1159"** [ %109, %101 ], [ %86, %95 ]
  %103 = phi i64 [ %110, %101 ], [ %87, %95 ]
  %104 = phi %"struct.std::__1::pair.1159"** [ %111, %101 ], [ %45, %95 ]
  %105 = phi i64 [ %112, %101 ], [ %99, %95 ]
  %106 = bitcast %"struct.std::__1::pair.1159"** %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %102, i64 1
  %110 = ptrtoint %"struct.std::__1::pair.1159"** %109 to i64
  %111 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %104, i64 1
  %112 = add i64 %105, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %101, !llvm.loop !95

114:                                              ; preds = %101
  %115 = ptrtoint %"struct.std::__1::pair.1159"** %109 to i64
  br label %116

116:                                              ; preds = %95, %114
  %117 = phi %"struct.std::__1::pair.1159"** [ %86, %95 ], [ %109, %114 ]
  %118 = phi i64 [ %87, %95 ], [ %115, %114 ]
  %119 = phi %"struct.std::__1::pair.1159"** [ %45, %95 ], [ %111, %114 ]
  %120 = icmp ult i64 %96, 56
  br i1 %120, label %167, label %121

121:                                              ; preds = %116, %121
  %122 = phi %"struct.std::__1::pair.1159"** [ %163, %121 ], [ %117, %116 ]
  %123 = phi i64 [ %164, %121 ], [ %118, %116 ]
  %124 = phi %"struct.std::__1::pair.1159"** [ %165, %121 ], [ %119, %116 ]
  %125 = bitcast %"struct.std::__1::pair.1159"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = inttoptr i64 %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %122, i64 1
  %129 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %124, i64 1
  %130 = bitcast %"struct.std::__1::pair.1159"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"struct.std::__1::pair.1159"** %128 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %122, i64 2
  %134 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %124, i64 2
  %135 = bitcast %"struct.std::__1::pair.1159"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"struct.std::__1::pair.1159"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %122, i64 3
  %139 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %124, i64 3
  %140 = bitcast %"struct.std::__1::pair.1159"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"struct.std::__1::pair.1159"** %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %122, i64 4
  %144 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %124, i64 4
  %145 = bitcast %"struct.std::__1::pair.1159"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"struct.std::__1::pair.1159"** %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %122, i64 5
  %149 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %124, i64 5
  %150 = bitcast %"struct.std::__1::pair.1159"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1159"** %148 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %122, i64 6
  %154 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %124, i64 6
  %155 = bitcast %"struct.std::__1::pair.1159"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"struct.std::__1::pair.1159"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %122, i64 7
  %159 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %124, i64 7
  %160 = bitcast %"struct.std::__1::pair.1159"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"struct.std::__1::pair.1159"** %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %122, i64 8
  %164 = ptrtoint %"struct.std::__1::pair.1159"** %163 to i64
  %165 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %124, i64 8
  %166 = icmp eq %"struct.std::__1::pair.1159"** %93, %163
  br i1 %166, label %167, label %121

167:                                              ; preds = %121, %116
  %168 = ptrtoint %"struct.std::__1::pair.1159"** %93 to i64
  %169 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %33, align 8
  br label %170

170:                                              ; preds = %167, %80
  %171 = phi %"struct.std::__1::pair.1159"** [ %169, %167 ], [ %51, %80 ]
  %172 = phi i64 [ %168, %167 ], [ %87, %80 ]
  store i64 %85, i64* %35, align 8
  store i64 %87, i64* %36, align 8
  store i64 %172, i64* %37, align 8
  store i64 %89, i64* %34, align 8
  %173 = icmp eq %"struct.std::__1::pair.1159"** %171, null
  %174 = inttoptr i64 %172 to i64*
  br i1 %173, label %178, label %175

175:                                              ; preds = %170
  %176 = bitcast %"struct.std::__1::pair.1159"** %171 to i8*
  tail call void @_ZdlPv(i8* %176) #11
  %177 = load i64*, i64** %38, align 8
  br label %178

178:                                              ; preds = %39, %68, %170, %175
  %179 = phi i64* [ %177, %175 ], [ %174, %170 ], [ %72, %68 ], [ %49, %39 ]
  store i64 %44, i64* %179, align 8
  %180 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %7, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %180, i64 1
  store %"struct.std::__1::pair.1159"** %181, %"struct.std::__1::pair.1159"*** %7, align 8
  %182 = add i64 %42, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %768, label %184

184:                                              ; preds = %178
  %185 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %9, align 8
  br label %39

186:                                              ; preds = %2
  %187 = ptrtoint %"struct.std::__1::pair.1159"** %10 to i64
  %188 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %189 = bitcast %"struct.std::__1::pair.1159"*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::deque"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = ashr exact i64 %193, 3
  %195 = bitcast %"struct.std::__1::pair.1159"*** %7 to i64*
  %196 = bitcast %"struct.std::__1::pair.1159"*** %9 to i64*
  %197 = sub i64 %26, %187
  %198 = ashr exact i64 %197, 3
  %199 = sub nsw i64 %194, %198
  %200 = icmp ugt i64 %24, %199
  br i1 %200, label %391, label %201

201:                                              ; preds = %186
  %202 = bitcast %"struct.std::__1::pair.1159"** %3 to i8*
  %203 = bitcast %"struct.std::__1::pair.1159"** %3 to i8**
  %204 = icmp eq i64 %190, %26
  br i1 %204, label %214, label %205

205:                                              ; preds = %201, %210
  %206 = phi i64 [ %208, %210 ], [ %24, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #12
  %207 = call i8* @_Znwm(i64 4096) #11
  store i8* %207, i8** %203, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer.1158"* %6, %"struct.std::__1::pair.1159"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #12
  %208 = add i64 %206, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = load i64, i64* %189, align 8
  %212 = load i64, i64* %195, align 8
  %213 = icmp eq i64 %211, %212
  br i1 %213, label %214, label %205

214:                                              ; preds = %210, %201
  %215 = phi i64 [ %24, %201 ], [ %208, %210 ]
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %205, %214
  %218 = load i64, i64* %19, align 8
  br label %236

219:                                              ; preds = %214
  %220 = bitcast %"struct.std::__1::pair.1159"** %4 to i8*
  %221 = bitcast %"struct.std::__1::pair.1159"** %4 to i8**
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %215, %219 ], [ %225, %222 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #12
  %224 = call i8* @_Znwm(i64 4096) #11
  store i8* %224, i8** %221, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer.1158"* %6, %"struct.std::__1::pair.1159"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #12
  %225 = add i64 %223, -1
  %226 = load i64, i64* %195, align 8
  %227 = load i64, i64* %196, align 8
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, 8
  %230 = select i1 %229, i64 255, i64 256
  %231 = load i64, i64* %19, align 8
  %232 = add i64 %230, %231
  store i64 %232, i64* %19, align 8
  %233 = icmp eq i64 %225, 0
  br i1 %233, label %234, label %222

234:                                              ; preds = %222
  %235 = add i64 %215, %23
  br label %236

236:                                              ; preds = %217, %234
  %237 = phi i64 [ %218, %217 ], [ %232, %234 ]
  %238 = phi i64 [ %23, %217 ], [ %235, %234 ]
  %239 = shl i64 %238, 8
  %240 = sub i64 %237, %239
  store i64 %240, i64* %19, align 8
  %241 = icmp eq i64 %238, 0
  br i1 %241, label %768, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"struct.std::__1::pair.1159"*** %7 to i64**
  %245 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %7, align 8
  br label %246

246:                                              ; preds = %242, %385
  %247 = phi %"struct.std::__1::pair.1159"** [ %245, %242 ], [ %388, %385 ]
  %248 = phi i64 [ %238, %242 ], [ %389, %385 ]
  %249 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %9, align 8
  %250 = bitcast %"struct.std::__1::pair.1159"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %249, i64 1
  store %"struct.std::__1::pair.1159"** %252, %"struct.std::__1::pair.1159"*** %9, align 8
  %253 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %188, align 8
  %254 = icmp eq %"struct.std::__1::pair.1159"** %247, %253
  %255 = ptrtoint %"struct.std::__1::pair.1159"** %253 to i64
  %256 = bitcast %"struct.std::__1::pair.1159"** %247 to i64*
  br i1 %254, label %257, label %385

257:                                              ; preds = %246
  %258 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %243, align 8
  %259 = icmp ugt %"struct.std::__1::pair.1159"** %252, %258
  %260 = ptrtoint %"struct.std::__1::pair.1159"** %258 to i64
  br i1 %259, label %261, label %280

261:                                              ; preds = %257
  %262 = ptrtoint %"struct.std::__1::pair.1159"** %252 to i64
  %263 = sub i64 %262, %260
  %264 = ashr exact i64 %263, 3
  %265 = add nsw i64 %264, 1
  %266 = sdiv i64 %265, -2
  %267 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %252, i64 %266
  %268 = sub i64 %255, %262
  %269 = ashr exact i64 %268, 3
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %261
  %272 = bitcast %"struct.std::__1::pair.1159"** %267 to i8*
  %273 = bitcast %"struct.std::__1::pair.1159"** %252 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %268, i1 false) #12
  %274 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %9, align 8
  br label %275

275:                                              ; preds = %271, %261
  %276 = phi %"struct.std::__1::pair.1159"** [ %252, %261 ], [ %274, %271 ]
  %277 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %267, i64 %269
  store %"struct.std::__1::pair.1159"** %277, %"struct.std::__1::pair.1159"*** %7, align 8
  %278 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %276, i64 %266
  store %"struct.std::__1::pair.1159"** %278, %"struct.std::__1::pair.1159"*** %9, align 8
  %279 = bitcast %"struct.std::__1::pair.1159"** %277 to i64*
  br label %385

280:                                              ; preds = %257
  %281 = sub i64 %255, %260
  %282 = ashr exact i64 %281, 2
  %283 = icmp eq i64 %281, 0
  %284 = select i1 %283, i64 1, i64 %282
  %285 = icmp ugt i64 %284, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %280
  call void @abort() #13
  unreachable

287:                                              ; preds = %280
  %288 = lshr i64 %284, 2
  %289 = shl i64 %284, 3
  %290 = call i8* @_Znwm(i64 %289) #11
  %291 = bitcast i8* %290 to %"struct.std::__1::pair.1159"**
  %292 = ptrtoint i8* %290 to i64
  %293 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %291, i64 %288
  %294 = ptrtoint %"struct.std::__1::pair.1159"** %293 to i64
  %295 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %291, i64 %284
  %296 = ptrtoint %"struct.std::__1::pair.1159"** %295 to i64
  %297 = ptrtoint %"struct.std::__1::pair.1159"** %252 to i64
  %298 = sub i64 %255, %297
  %299 = ashr exact i64 %298, 3
  %300 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %293, i64 %299
  %301 = icmp eq i64 %298, 0
  br i1 %301, label %377, label %302

302:                                              ; preds = %287
  %303 = add i64 %298, -8
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %323, label %308

308:                                              ; preds = %302, %308
  %309 = phi %"struct.std::__1::pair.1159"** [ %316, %308 ], [ %293, %302 ]
  %310 = phi i64 [ %317, %308 ], [ %294, %302 ]
  %311 = phi %"struct.std::__1::pair.1159"** [ %318, %308 ], [ %252, %302 ]
  %312 = phi i64 [ %319, %308 ], [ %306, %302 ]
  %313 = bitcast %"struct.std::__1::pair.1159"** %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = inttoptr i64 %310 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %309, i64 1
  %317 = ptrtoint %"struct.std::__1::pair.1159"** %316 to i64
  %318 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %311, i64 1
  %319 = add i64 %312, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %308, !llvm.loop !96

321:                                              ; preds = %308
  %322 = ptrtoint %"struct.std::__1::pair.1159"** %316 to i64
  br label %323

323:                                              ; preds = %302, %321
  %324 = phi %"struct.std::__1::pair.1159"** [ %293, %302 ], [ %316, %321 ]
  %325 = phi i64 [ %294, %302 ], [ %322, %321 ]
  %326 = phi %"struct.std::__1::pair.1159"** [ %252, %302 ], [ %318, %321 ]
  %327 = icmp ult i64 %303, 56
  br i1 %327, label %374, label %328

328:                                              ; preds = %323, %328
  %329 = phi %"struct.std::__1::pair.1159"** [ %370, %328 ], [ %324, %323 ]
  %330 = phi i64 [ %371, %328 ], [ %325, %323 ]
  %331 = phi %"struct.std::__1::pair.1159"** [ %372, %328 ], [ %326, %323 ]
  %332 = bitcast %"struct.std::__1::pair.1159"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = inttoptr i64 %330 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %329, i64 1
  %336 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %331, i64 1
  %337 = bitcast %"struct.std::__1::pair.1159"** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"struct.std::__1::pair.1159"** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %329, i64 2
  %341 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %331, i64 2
  %342 = bitcast %"struct.std::__1::pair.1159"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"struct.std::__1::pair.1159"** %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %329, i64 3
  %346 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %331, i64 3
  %347 = bitcast %"struct.std::__1::pair.1159"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"struct.std::__1::pair.1159"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %329, i64 4
  %351 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %331, i64 4
  %352 = bitcast %"struct.std::__1::pair.1159"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"struct.std::__1::pair.1159"** %350 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %329, i64 5
  %356 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %331, i64 5
  %357 = bitcast %"struct.std::__1::pair.1159"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"struct.std::__1::pair.1159"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %329, i64 6
  %361 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %331, i64 6
  %362 = bitcast %"struct.std::__1::pair.1159"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"struct.std::__1::pair.1159"** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %329, i64 7
  %366 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %331, i64 7
  %367 = bitcast %"struct.std::__1::pair.1159"** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"struct.std::__1::pair.1159"** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %329, i64 8
  %371 = ptrtoint %"struct.std::__1::pair.1159"** %370 to i64
  %372 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %331, i64 8
  %373 = icmp eq %"struct.std::__1::pair.1159"** %300, %370
  br i1 %373, label %374, label %328

374:                                              ; preds = %328, %323
  %375 = ptrtoint %"struct.std::__1::pair.1159"** %300 to i64
  %376 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %243, align 8
  br label %377

377:                                              ; preds = %374, %287
  %378 = phi %"struct.std::__1::pair.1159"** [ %376, %374 ], [ %258, %287 ]
  %379 = phi i64 [ %375, %374 ], [ %294, %287 ]
  store i64 %292, i64* %191, align 8
  store i64 %294, i64* %196, align 8
  store i64 %379, i64* %195, align 8
  store i64 %296, i64* %189, align 8
  %380 = icmp eq %"struct.std::__1::pair.1159"** %378, null
  %381 = inttoptr i64 %379 to i64*
  br i1 %380, label %385, label %382

382:                                              ; preds = %377
  %383 = bitcast %"struct.std::__1::pair.1159"** %378 to i8*
  call void @_ZdlPv(i8* %383) #11
  %384 = load i64*, i64** %244, align 8
  br label %385

385:                                              ; preds = %246, %275, %377, %382
  %386 = phi i64* [ %384, %382 ], [ %381, %377 ], [ %279, %275 ], [ %256, %246 ]
  store i64 %251, i64* %386, align 8
  %387 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %7, align 8
  %388 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %387, i64 1
  store %"struct.std::__1::pair.1159"** %388, %"struct.std::__1::pair.1159"*** %7, align 8
  %389 = add i64 %248, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %768, label %246

391:                                              ; preds = %186
  %392 = shl nuw i64 %23, 8
  %393 = bitcast %"struct.std::__1::__split_buffer.1170"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #12
  %394 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %5, i64 0, i32 0
  %395 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %5, i64 0, i32 1
  %396 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %5, i64 0, i32 2
  %397 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %5, i64 0, i32 3, i32 0, i32 0
  %398 = getelementptr inbounds %"struct.std::__1::__split_buffer.1170", %"struct.std::__1::__split_buffer.1170"* %5, i64 0, i32 3, i32 1, i32 0
  %399 = ashr exact i64 %193, 2
  %400 = add nsw i64 %198, %24
  %401 = icmp ult i64 %399, %400
  %402 = select i1 %401, i64 %400, i64 %399
  %403 = sub nsw i64 %198, %23
  %404 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %405 = bitcast %"struct.std::__1::__split_buffer.1170"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %405, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1159"** null, %"struct.std::__1::pair.1159"*** %397, align 8
  %406 = bitcast %"class.std::__1::allocator.1164"** %398 to %"class.std::__1::__compressed_pair.1161"**
  store %"class.std::__1::__compressed_pair.1161"* %404, %"class.std::__1::__compressed_pair.1161"** %406, align 8
  %407 = icmp eq i64 %402, 0
  br i1 %407, label %415, label %408

408:                                              ; preds = %391
  %409 = icmp ugt i64 %402, 2305843009213693951
  br i1 %409, label %410, label %411

410:                                              ; preds = %408
  tail call void @abort() #13
  unreachable

411:                                              ; preds = %408
  %412 = shl i64 %402, 3
  %413 = tail call i8* @_Znwm(i64 %412) #11
  %414 = bitcast i8* %413 to %"struct.std::__1::pair.1159"**
  br label %415

415:                                              ; preds = %411, %391
  %416 = phi %"struct.std::__1::pair.1159"** [ %414, %411 ], [ null, %391 ]
  store %"struct.std::__1::pair.1159"** %416, %"struct.std::__1::pair.1159"*** %394, align 16
  %417 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %416, i64 %403
  store %"struct.std::__1::pair.1159"** %417, %"struct.std::__1::pair.1159"*** %396, align 16
  store %"struct.std::__1::pair.1159"** %417, %"struct.std::__1::pair.1159"*** %395, align 8
  %418 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %416, i64 %402
  store %"struct.std::__1::pair.1159"** %418, %"struct.std::__1::pair.1159"*** %397, align 8
  %419 = bitcast %"struct.std::__1::pair.1159"*** %397 to i64*
  %420 = bitcast %"struct.std::__1::__split_buffer.1170"* %5 to i64*
  %421 = bitcast %"struct.std::__1::pair.1159"*** %395 to i64*
  %422 = bitcast %"struct.std::__1::pair.1159"*** %396 to i64*
  br label %434

423:                                              ; preds = %568
  %424 = icmp eq i64 %23, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %9, align 8
  br label %719

427:                                              ; preds = %423
  %428 = bitcast %"struct.std::__1::pair.1159"*** %9 to i64**
  %429 = bitcast %"struct.std::__1::pair.1159"*** %397 to i64*
  %430 = bitcast %"struct.std::__1::__split_buffer.1170"* %5 to i64*
  %431 = bitcast %"struct.std::__1::pair.1159"*** %395 to i64*
  %432 = bitcast %"struct.std::__1::pair.1159"*** %396 to i64*
  %433 = load i64*, i64** %428, align 8
  br label %576

434:                                              ; preds = %574, %415
  %435 = phi %"struct.std::__1::pair.1159"** [ %418, %415 ], [ %575, %574 ]
  %436 = phi %"struct.std::__1::pair.1159"** [ %417, %415 ], [ %571, %574 ]
  %437 = phi i64 [ %24, %415 ], [ %572, %574 ]
  %438 = tail call i8* @_Znwm(i64 4096) #11
  %439 = ptrtoint i8* %438 to i64
  %440 = icmp eq %"struct.std::__1::pair.1159"** %436, %435
  %441 = ptrtoint %"struct.std::__1::pair.1159"** %435 to i64
  %442 = bitcast %"struct.std::__1::pair.1159"** %436 to i64*
  br i1 %440, label %443, label %568

443:                                              ; preds = %434
  %444 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %395, align 8
  %445 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %394, align 16
  %446 = icmp ugt %"struct.std::__1::pair.1159"** %444, %445
  %447 = ptrtoint %"struct.std::__1::pair.1159"** %445 to i64
  br i1 %446, label %448, label %464

448:                                              ; preds = %443
  %449 = ptrtoint %"struct.std::__1::pair.1159"** %444 to i64
  %450 = sub i64 %449, %447
  %451 = ashr exact i64 %450, 3
  %452 = add nsw i64 %451, 1
  %453 = sdiv i64 %452, -2
  %454 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %444, i64 %453
  %455 = sub i64 %441, %449
  %456 = ashr exact i64 %455, 3
  %457 = icmp eq i64 %455, 0
  br i1 %457, label %461, label %458

458:                                              ; preds = %448
  %459 = bitcast %"struct.std::__1::pair.1159"** %454 to i8*
  %460 = bitcast %"struct.std::__1::pair.1159"** %444 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %460, i64 %455, i1 false) #12
  br label %461

461:                                              ; preds = %458, %448
  %462 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %454, i64 %456
  store %"struct.std::__1::pair.1159"** %462, %"struct.std::__1::pair.1159"*** %396, align 16
  store %"struct.std::__1::pair.1159"** %454, %"struct.std::__1::pair.1159"*** %395, align 8
  %463 = bitcast %"struct.std::__1::pair.1159"** %462 to i64*
  br label %568

464:                                              ; preds = %443
  %465 = sub i64 %441, %447
  %466 = ashr exact i64 %465, 2
  %467 = icmp eq i64 %465, 0
  %468 = select i1 %467, i64 1, i64 %466
  %469 = icmp ugt i64 %468, 2305843009213693951
  br i1 %469, label %470, label %471

470:                                              ; preds = %464
  tail call void @abort() #13
  unreachable

471:                                              ; preds = %464
  %472 = lshr i64 %468, 2
  %473 = shl i64 %468, 3
  %474 = tail call i8* @_Znwm(i64 %473) #11
  %475 = bitcast i8* %474 to %"struct.std::__1::pair.1159"**
  %476 = ptrtoint i8* %474 to i64
  %477 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %475, i64 %472
  %478 = ptrtoint %"struct.std::__1::pair.1159"** %477 to i64
  %479 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %475, i64 %468
  %480 = ptrtoint %"struct.std::__1::pair.1159"** %479 to i64
  %481 = ptrtoint %"struct.std::__1::pair.1159"** %444 to i64
  %482 = sub i64 %441, %481
  %483 = ashr exact i64 %482, 3
  %484 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %477, i64 %483
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %561, label %486

486:                                              ; preds = %471
  %487 = add i64 %482, -8
  %488 = lshr i64 %487, 3
  %489 = add nuw nsw i64 %488, 1
  %490 = and i64 %489, 7
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %507, label %492

492:                                              ; preds = %486, %492
  %493 = phi %"struct.std::__1::pair.1159"** [ %500, %492 ], [ %477, %486 ]
  %494 = phi i64 [ %501, %492 ], [ %478, %486 ]
  %495 = phi %"struct.std::__1::pair.1159"** [ %502, %492 ], [ %444, %486 ]
  %496 = phi i64 [ %503, %492 ], [ %490, %486 ]
  %497 = bitcast %"struct.std::__1::pair.1159"** %495 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = inttoptr i64 %494 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %493, i64 1
  %501 = ptrtoint %"struct.std::__1::pair.1159"** %500 to i64
  %502 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %495, i64 1
  %503 = add i64 %496, -1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %492, !llvm.loop !97

505:                                              ; preds = %492
  %506 = ptrtoint %"struct.std::__1::pair.1159"** %500 to i64
  br label %507

507:                                              ; preds = %486, %505
  %508 = phi %"struct.std::__1::pair.1159"** [ %477, %486 ], [ %500, %505 ]
  %509 = phi i64 [ %478, %486 ], [ %506, %505 ]
  %510 = phi %"struct.std::__1::pair.1159"** [ %444, %486 ], [ %502, %505 ]
  %511 = icmp ult i64 %487, 56
  br i1 %511, label %558, label %512

512:                                              ; preds = %507, %512
  %513 = phi %"struct.std::__1::pair.1159"** [ %554, %512 ], [ %508, %507 ]
  %514 = phi i64 [ %555, %512 ], [ %509, %507 ]
  %515 = phi %"struct.std::__1::pair.1159"** [ %556, %512 ], [ %510, %507 ]
  %516 = bitcast %"struct.std::__1::pair.1159"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = inttoptr i64 %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %513, i64 1
  %520 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %515, i64 1
  %521 = bitcast %"struct.std::__1::pair.1159"** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast %"struct.std::__1::pair.1159"** %519 to i64*
  store i64 %522, i64* %523, align 8
  %524 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %513, i64 2
  %525 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %515, i64 2
  %526 = bitcast %"struct.std::__1::pair.1159"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"struct.std::__1::pair.1159"** %524 to i64*
  store i64 %527, i64* %528, align 8
  %529 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %513, i64 3
  %530 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %515, i64 3
  %531 = bitcast %"struct.std::__1::pair.1159"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"struct.std::__1::pair.1159"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %513, i64 4
  %535 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %515, i64 4
  %536 = bitcast %"struct.std::__1::pair.1159"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"struct.std::__1::pair.1159"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %513, i64 5
  %540 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %515, i64 5
  %541 = bitcast %"struct.std::__1::pair.1159"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"struct.std::__1::pair.1159"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %513, i64 6
  %545 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %515, i64 6
  %546 = bitcast %"struct.std::__1::pair.1159"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"struct.std::__1::pair.1159"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %513, i64 7
  %550 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %515, i64 7
  %551 = bitcast %"struct.std::__1::pair.1159"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"struct.std::__1::pair.1159"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %513, i64 8
  %555 = ptrtoint %"struct.std::__1::pair.1159"** %554 to i64
  %556 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %515, i64 8
  %557 = icmp eq %"struct.std::__1::pair.1159"** %484, %554
  br i1 %557, label %558, label %512

558:                                              ; preds = %512, %507
  %559 = ptrtoint %"struct.std::__1::pair.1159"** %484 to i64
  %560 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %394, align 16
  br label %561

561:                                              ; preds = %558, %471
  %562 = phi %"struct.std::__1::pair.1159"** [ %560, %558 ], [ %445, %471 ]
  %563 = phi i64 [ %559, %558 ], [ %478, %471 ]
  store i64 %476, i64* %420, align 16
  store i64 %478, i64* %421, align 8
  store i64 %563, i64* %422, align 16
  store i64 %480, i64* %419, align 8
  %564 = icmp eq %"struct.std::__1::pair.1159"** %562, null
  %565 = inttoptr i64 %563 to i64*
  br i1 %564, label %568, label %566

566:                                              ; preds = %561
  %567 = bitcast %"struct.std::__1::pair.1159"** %562 to i8*
  tail call void @_ZdlPv(i8* %567) #11
  br label %568

568:                                              ; preds = %434, %461, %561, %566
  %569 = phi i64* [ %565, %566 ], [ %565, %561 ], [ %463, %461 ], [ %442, %434 ]
  store i64 %439, i64* %569, align 8
  %570 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %396, align 16
  %571 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %570, i64 1
  store %"struct.std::__1::pair.1159"** %571, %"struct.std::__1::pair.1159"*** %396, align 16
  %572 = add i64 %437, -1
  %573 = icmp eq i64 %572, 0
  br i1 %573, label %423, label %574

574:                                              ; preds = %568
  %575 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %397, align 8
  br label %434

576:                                              ; preds = %427, %709
  %577 = phi %"struct.std::__1::pair.1159"** [ %571, %427 ], [ %713, %709 ]
  %578 = phi i64* [ %433, %427 ], [ %718, %709 ]
  %579 = phi i64 [ %23, %427 ], [ %716, %709 ]
  %580 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %397, align 8
  %581 = icmp eq %"struct.std::__1::pair.1159"** %577, %580
  %582 = ptrtoint %"struct.std::__1::pair.1159"** %580 to i64
  %583 = bitcast %"struct.std::__1::pair.1159"** %577 to i64*
  br i1 %581, label %584, label %709

584:                                              ; preds = %576
  %585 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %395, align 8
  %586 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %394, align 16
  %587 = icmp ugt %"struct.std::__1::pair.1159"** %585, %586
  %588 = ptrtoint %"struct.std::__1::pair.1159"** %586 to i64
  br i1 %587, label %589, label %605

589:                                              ; preds = %584
  %590 = ptrtoint %"struct.std::__1::pair.1159"** %585 to i64
  %591 = sub i64 %590, %588
  %592 = ashr exact i64 %591, 3
  %593 = add nsw i64 %592, 1
  %594 = sdiv i64 %593, -2
  %595 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %585, i64 %594
  %596 = sub i64 %582, %590
  %597 = ashr exact i64 %596, 3
  %598 = icmp eq i64 %596, 0
  br i1 %598, label %602, label %599

599:                                              ; preds = %589
  %600 = bitcast %"struct.std::__1::pair.1159"** %595 to i8*
  %601 = bitcast %"struct.std::__1::pair.1159"** %585 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %600, i8* align 8 %601, i64 %596, i1 false) #12
  br label %602

602:                                              ; preds = %599, %589
  %603 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %595, i64 %597
  store %"struct.std::__1::pair.1159"** %603, %"struct.std::__1::pair.1159"*** %396, align 16
  store %"struct.std::__1::pair.1159"** %595, %"struct.std::__1::pair.1159"*** %395, align 8
  %604 = bitcast %"struct.std::__1::pair.1159"** %603 to i64*
  br label %709

605:                                              ; preds = %584
  %606 = sub i64 %582, %588
  %607 = ashr exact i64 %606, 2
  %608 = icmp eq i64 %606, 0
  %609 = select i1 %608, i64 1, i64 %607
  %610 = icmp ugt i64 %609, 2305843009213693951
  br i1 %610, label %611, label %612

611:                                              ; preds = %605
  tail call void @abort() #13
  unreachable

612:                                              ; preds = %605
  %613 = lshr i64 %609, 2
  %614 = shl i64 %609, 3
  %615 = tail call i8* @_Znwm(i64 %614) #11
  %616 = bitcast i8* %615 to %"struct.std::__1::pair.1159"**
  %617 = ptrtoint i8* %615 to i64
  %618 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %616, i64 %613
  %619 = ptrtoint %"struct.std::__1::pair.1159"** %618 to i64
  %620 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %616, i64 %609
  %621 = ptrtoint %"struct.std::__1::pair.1159"** %620 to i64
  %622 = ptrtoint %"struct.std::__1::pair.1159"** %585 to i64
  %623 = sub i64 %582, %622
  %624 = ashr exact i64 %623, 3
  %625 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %618, i64 %624
  %626 = icmp eq i64 %623, 0
  br i1 %626, label %702, label %627

627:                                              ; preds = %612
  %628 = add i64 %623, -8
  %629 = lshr i64 %628, 3
  %630 = add nuw nsw i64 %629, 1
  %631 = and i64 %630, 7
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %648, label %633

633:                                              ; preds = %627, %633
  %634 = phi %"struct.std::__1::pair.1159"** [ %641, %633 ], [ %618, %627 ]
  %635 = phi i64 [ %642, %633 ], [ %619, %627 ]
  %636 = phi %"struct.std::__1::pair.1159"** [ %643, %633 ], [ %585, %627 ]
  %637 = phi i64 [ %644, %633 ], [ %631, %627 ]
  %638 = bitcast %"struct.std::__1::pair.1159"** %636 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = inttoptr i64 %635 to i64*
  store i64 %639, i64* %640, align 8
  %641 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %634, i64 1
  %642 = ptrtoint %"struct.std::__1::pair.1159"** %641 to i64
  %643 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %636, i64 1
  %644 = add i64 %637, -1
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %633, !llvm.loop !98

646:                                              ; preds = %633
  %647 = ptrtoint %"struct.std::__1::pair.1159"** %641 to i64
  br label %648

648:                                              ; preds = %627, %646
  %649 = phi %"struct.std::__1::pair.1159"** [ %618, %627 ], [ %641, %646 ]
  %650 = phi i64 [ %619, %627 ], [ %647, %646 ]
  %651 = phi %"struct.std::__1::pair.1159"** [ %585, %627 ], [ %643, %646 ]
  %652 = icmp ult i64 %628, 56
  br i1 %652, label %699, label %653

653:                                              ; preds = %648, %653
  %654 = phi %"struct.std::__1::pair.1159"** [ %695, %653 ], [ %649, %648 ]
  %655 = phi i64 [ %696, %653 ], [ %650, %648 ]
  %656 = phi %"struct.std::__1::pair.1159"** [ %697, %653 ], [ %651, %648 ]
  %657 = bitcast %"struct.std::__1::pair.1159"** %656 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = inttoptr i64 %655 to i64*
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %654, i64 1
  %661 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %656, i64 1
  %662 = bitcast %"struct.std::__1::pair.1159"** %661 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = bitcast %"struct.std::__1::pair.1159"** %660 to i64*
  store i64 %663, i64* %664, align 8
  %665 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %654, i64 2
  %666 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %656, i64 2
  %667 = bitcast %"struct.std::__1::pair.1159"** %666 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = bitcast %"struct.std::__1::pair.1159"** %665 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %654, i64 3
  %671 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %656, i64 3
  %672 = bitcast %"struct.std::__1::pair.1159"** %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast %"struct.std::__1::pair.1159"** %670 to i64*
  store i64 %673, i64* %674, align 8
  %675 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %654, i64 4
  %676 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %656, i64 4
  %677 = bitcast %"struct.std::__1::pair.1159"** %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = bitcast %"struct.std::__1::pair.1159"** %675 to i64*
  store i64 %678, i64* %679, align 8
  %680 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %654, i64 5
  %681 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %656, i64 5
  %682 = bitcast %"struct.std::__1::pair.1159"** %681 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = bitcast %"struct.std::__1::pair.1159"** %680 to i64*
  store i64 %683, i64* %684, align 8
  %685 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %654, i64 6
  %686 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %656, i64 6
  %687 = bitcast %"struct.std::__1::pair.1159"** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"struct.std::__1::pair.1159"** %685 to i64*
  store i64 %688, i64* %689, align 8
  %690 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %654, i64 7
  %691 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %656, i64 7
  %692 = bitcast %"struct.std::__1::pair.1159"** %691 to i64*
  %693 = load i64, i64* %692, align 8
  %694 = bitcast %"struct.std::__1::pair.1159"** %690 to i64*
  store i64 %693, i64* %694, align 8
  %695 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %654, i64 8
  %696 = ptrtoint %"struct.std::__1::pair.1159"** %695 to i64
  %697 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %656, i64 8
  %698 = icmp eq %"struct.std::__1::pair.1159"** %625, %695
  br i1 %698, label %699, label %653

699:                                              ; preds = %653, %648
  %700 = ptrtoint %"struct.std::__1::pair.1159"** %625 to i64
  %701 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %394, align 16
  br label %702

702:                                              ; preds = %699, %612
  %703 = phi %"struct.std::__1::pair.1159"** [ %701, %699 ], [ %586, %612 ]
  %704 = phi i64 [ %700, %699 ], [ %619, %612 ]
  store i64 %617, i64* %430, align 16
  store i64 %619, i64* %431, align 8
  store i64 %704, i64* %432, align 16
  store i64 %621, i64* %429, align 8
  %705 = icmp eq %"struct.std::__1::pair.1159"** %703, null
  %706 = inttoptr i64 %704 to i64*
  br i1 %705, label %709, label %707

707:                                              ; preds = %702
  %708 = bitcast %"struct.std::__1::pair.1159"** %703 to i8*
  tail call void @_ZdlPv(i8* %708) #11
  br label %709

709:                                              ; preds = %576, %602, %702, %707
  %710 = phi i64* [ %706, %707 ], [ %706, %702 ], [ %604, %602 ], [ %583, %576 ]
  %711 = load i64, i64* %578, align 8
  store i64 %711, i64* %710, align 8
  %712 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %396, align 16
  %713 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %712, i64 1
  store %"struct.std::__1::pair.1159"** %713, %"struct.std::__1::pair.1159"*** %396, align 16
  %714 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %9, align 8
  %715 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %714, i64 1
  store %"struct.std::__1::pair.1159"** %715, %"struct.std::__1::pair.1159"*** %9, align 8
  %716 = add i64 %579, -1
  %717 = icmp eq i64 %716, 0
  %718 = bitcast %"struct.std::__1::pair.1159"** %715 to i64*
  br i1 %717, label %719, label %576

719:                                              ; preds = %709, %425
  %720 = phi %"struct.std::__1::pair.1159"** [ %571, %425 ], [ %713, %709 ]
  %721 = phi %"struct.std::__1::pair.1159"** [ %426, %425 ], [ %715, %709 ]
  %722 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %7, align 8
  %723 = icmp eq %"struct.std::__1::pair.1159"** %722, %721
  br i1 %723, label %724, label %763

724:                                              ; preds = %719
  %725 = ptrtoint %"struct.std::__1::pair.1159"** %722 to i64
  %726 = ptrtoint %"struct.std::__1::pair.1159"** %720 to i64
  %727 = bitcast %"struct.std::__1::pair.1159"*** %396 to i64*
  br label %732

728:                                              ; preds = %763
  %729 = load i64, i64* %195, align 8
  %730 = bitcast %"struct.std::__1::pair.1159"*** %396 to i64*
  %731 = load i64, i64* %730, align 16
  br label %732

732:                                              ; preds = %724, %728
  %733 = phi i64* [ %727, %724 ], [ %730, %728 ]
  %734 = phi i64 [ %726, %724 ], [ %731, %728 ]
  %735 = phi i64 [ %725, %724 ], [ %729, %728 ]
  %736 = phi %"struct.std::__1::pair.1159"** [ %721, %724 ], [ %766, %728 ]
  %737 = ptrtoint %"struct.std::__1::pair.1159"** %736 to i64
  %738 = load i64, i64* %191, align 8
  %739 = bitcast %"struct.std::__1::__split_buffer.1170"* %5 to i64*
  %740 = bitcast %"struct.std::__1::pair.1159"*** %395 to i64*
  %741 = bitcast %"struct.std::__1::__split_buffer.1170"* %5 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 16
  store i64 %738, i64* %739, align 16
  %743 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %743, align 8
  store i64 %737, i64* %740, align 8
  store i64 %734, i64* %195, align 8
  store i64 %735, i64* %733, align 8
  %744 = load i64, i64* %189, align 8
  %745 = bitcast %"struct.std::__1::pair.1159"*** %397 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %189, align 8
  store i64 %744, i64* %745, align 8
  %747 = load i64, i64* %19, align 8
  %748 = sub i64 %747, %392
  store i64 %748, i64* %19, align 8
  %749 = inttoptr i64 %735 to %"struct.std::__1::pair.1159"**
  %750 = icmp eq %"struct.std::__1::pair.1159"** %736, %749
  br i1 %750, label %758, label %751

751:                                              ; preds = %732
  %752 = getelementptr %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %749, i64 -1
  %753 = ptrtoint %"struct.std::__1::pair.1159"** %752 to i64
  %754 = sub i64 %753, %737
  %755 = lshr i64 %754, 3
  %756 = xor i64 %755, -1
  %757 = getelementptr %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %749, i64 %756
  store %"struct.std::__1::pair.1159"** %757, %"struct.std::__1::pair.1159"*** %396, align 16
  br label %758

758:                                              ; preds = %751, %732
  %759 = icmp eq i64 %738, 0
  br i1 %759, label %762, label %760

760:                                              ; preds = %758
  %761 = inttoptr i64 %738 to i8*
  call void @_ZdlPv(i8* %761) #11
  br label %762

762:                                              ; preds = %758, %760
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #12
  br label %768

763:                                              ; preds = %719, %763
  %764 = phi %"struct.std::__1::pair.1159"** [ %765, %763 ], [ %722, %719 ]
  %765 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %764, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1170"* nonnull %5, %"struct.std::__1::pair.1159"** dereferenceable(8) %765)
  %766 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %9, align 8
  %767 = icmp eq %"struct.std::__1::pair.1159"** %765, %766
  br i1 %767, label %728, label %763

768:                                              ; preds = %385, %178, %236, %27, %762
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt14TreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 0
  %3 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  %4 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %3, null
  br i1 %4, label %108, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"struct.spvtools::opt::DominatorTreeNode"* null, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  br label %108

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %13, %12
  %15 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %19, i64 %20, i32 1, i32 0
  %22 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::TreeDFIterator"* %0 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %21, align 8
  %27 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %26, i64 1
  store %"struct.spvtools::opt::DominatorTreeNode"** %27, %"struct.spvtools::opt::DominatorTreeNode"*** %21, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %19, i64 %20, i32 0
  %29 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %28, align 8
  %30 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %29, i64 0, i32 2, i32 0, i32 1
  %31 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %30, align 8
  %32 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %31, %27
  br i1 %32, label %33, label %58

33:                                               ; preds = %10
  %34 = load i64, i64* %6, align 8
  %35 = load i64, i64* %11, align 8
  %36 = add i64 %34, -1
  store i64 %36, i64* %6, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %38 = bitcast %"struct.std::__1::pair.1159"*** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::pair.1159"*** %15 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 0
  %44 = shl i64 %42, 5
  %45 = add i64 %44, -1
  %46 = select i1 %43, i64 0, i64 %45
  %47 = sub i64 1, %34
  %48 = sub i64 %47, %35
  %49 = add i64 %48, %46
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %58, label %51

51:                                               ; preds = %33
  %52 = inttoptr i64 %39 to %"struct.std::__1::pair.1159"**
  %53 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %52, i64 -1
  %54 = bitcast %"struct.std::__1::pair.1159"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #11
  %56 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %37, align 8
  %57 = getelementptr %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %56, i64 -1
  store %"struct.std::__1::pair.1159"** %57, %"struct.std::__1::pair.1159"*** %37, align 8
  br label %58

58:                                               ; preds = %51, %33, %10
  %59 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  %60 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %59, i64 0, i32 2, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %60, align 8
  %62 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %59, i64 0, i32 2, i32 0, i32 1
  %63 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %62, align 8
  %64 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %61, %63
  br i1 %64, label %108, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast %"struct.std::__1::pair.1159"*** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"struct.std::__1::pair.1159"*** %15 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = icmp eq i64 %71, 0
  %73 = shl i64 %71, 5
  %74 = add i64 %73, -1
  %75 = select i1 %72, i64 0, i64 %74
  %76 = load i64, i64* %11, align 8
  %77 = load i64, i64* %6, align 8
  %78 = add i64 %77, %76
  %79 = icmp eq i64 %75, %78
  %80 = inttoptr i64 %70 to %"struct.std::__1::pair.1159"**
  %81 = inttoptr i64 %68 to %"struct.std::__1::pair.1159"**
  br i1 %79, label %82, label %89

82:                                               ; preds = %65
  %83 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %83) #12
  %84 = load i64, i64* %6, align 8
  %85 = load i64, i64* %11, align 8
  %86 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %15, align 8
  %87 = load %"struct.std::__1::pair.1159"**, %"struct.std::__1::pair.1159"*** %66, align 8
  %88 = add i64 %85, %84
  br label %89

89:                                               ; preds = %82, %65
  %90 = phi i64 [ %88, %82 ], [ %78, %65 ]
  %91 = phi %"struct.std::__1::pair.1159"** [ %87, %82 ], [ %81, %65 ]
  %92 = phi %"struct.std::__1::pair.1159"** [ %86, %82 ], [ %80, %65 ]
  %93 = icmp eq %"struct.std::__1::pair.1159"** %91, %92
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = lshr i64 %90, 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %92, i64 %95
  %97 = load %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"** %96, align 8
  %98 = and i64 %90, 255
  %99 = getelementptr inbounds %"struct.std::__1::pair.1159", %"struct.std::__1::pair.1159"* %97, i64 %98
  %100 = bitcast %"struct.std::__1::pair.1159"* %99 to i8*
  br label %101

101:                                              ; preds = %89, %94
  %102 = phi i8* [ %100, %94 ], [ null, %89 ]
  %103 = bitcast i8* %102 to %"struct.spvtools::opt::DominatorTreeNode"**
  store %"struct.spvtools::opt::DominatorTreeNode"* %59, %"struct.spvtools::opt::DominatorTreeNode"** %103, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 8
  %105 = bitcast i8* %104 to %"struct.spvtools::opt::DominatorTreeNode"***
  store %"struct.spvtools::opt::DominatorTreeNode"** %61, %"struct.spvtools::opt::DominatorTreeNode"*** %105, align 8
  %106 = load i64, i64* %6, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %6, align 8
  br label %108

108:                                              ; preds = %58, %101, %1, %9
  ret void
}

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt8Function21InsertBasicBlockAfterEONSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEEPS4_(%"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8), %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadBranchElimPass13FixBlockOrderEvE3$_3S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = alloca %"class.std::__1::list", align 8
  %4 = alloca %"class.std::__1::vector.966", align 8
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Pass"**
  %6 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %5, align 8
  %7 = bitcast %"class.std::__1::list"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %8, align 8
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %9, align 8
  store i64 0, i64* %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %6, i64 0, i32 2
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 11
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 16
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %19, align 8
  %21 = call i8* @_Znwm(i64 400) #11
  %22 = bitcast i8* %21 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %22, %"class.spvtools::opt::Module"* %20) #12
  %23 = ptrtoint i8* %21 to i64
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 15
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.273"* %24 to i64*
  store i64 %23, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::CFG"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %18
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %26) #12
  %30 = bitcast %"class.spvtools::opt::CFG"* %26 to i8*
  call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %29, %18
  %32 = load i32, i32* %14, align 8
  %33 = or i32 %32, 16
  store i32 %33, i32* %14, align 8
  br label %34

34:                                               ; preds = %31, %2
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 15, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %39, align 8
  call void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"* %36, %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::BasicBlock"* %40, %"class.std::__1::list"* nonnull %3) #12
  %41 = bitcast %"class.std::__1::vector.966"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %4, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %4, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector.966", %"class.std::__1::vector.966"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #12
  %45 = bitcast %"struct.std::__1::__list_node_base"** %9 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = inttoptr i64 %46 to %"struct.std::__1::__list_node_base"*
  %48 = icmp eq %"struct.std::__1::__list_node_base"* %11, %47
  %49 = bitcast %"class.spvtools::opt::BasicBlock"*** %43 to i64*
  %50 = bitcast %"class.std::__1::vector.966"* %4 to i64*
  br i1 %48, label %57, label %51

51:                                               ; preds = %34
  %52 = bitcast %"class.spvtools::opt::BasicBlock"*** %44 to i64*
  br label %64

53:                                               ; preds = %125
  %54 = load i64, i64* %49, align 8
  %55 = load i64, i64* %50, align 8
  %56 = inttoptr i64 %55 to %"class.spvtools::opt::BasicBlock"**
  br label %57

57:                                               ; preds = %53, %34
  %58 = phi %"class.spvtools::opt::BasicBlock"** [ %56, %53 ], [ null, %34 ]
  %59 = phi i64 [ %55, %53 ], [ 0, %34 ]
  %60 = phi i64 [ %54, %53 ], [ 0, %34 ]
  %61 = sub i64 %60, %59
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 1
  br i1 %63, label %164, label %135

64:                                               ; preds = %131, %51
  %65 = phi i64 [ 0, %51 ], [ %134, %131 ]
  %66 = phi %"class.spvtools::opt::BasicBlock"** [ null, %51 ], [ %133, %131 ]
  %67 = phi %"class.spvtools::opt::BasicBlock"** [ null, %51 ], [ %132, %131 ]
  %68 = phi %"struct.std::__1::__list_node_base"* [ %47, %51 ], [ %129, %131 ]
  %69 = phi i64 [ %46, %51 ], [ %128, %131 ]
  %70 = inttoptr i64 %69 to %"struct.std::__1::__list_node"*
  %71 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %70, i64 0, i32 1
  %72 = bitcast %"class.spvtools::opt::BasicBlock"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq %"class.spvtools::opt::BasicBlock"** %67, %66
  br i1 %74, label %79, label %75

75:                                               ; preds = %64
  %76 = bitcast %"class.spvtools::opt::BasicBlock"** %67 to i64*
  store i64 %73, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %67, i64 1
  %78 = ptrtoint %"class.spvtools::opt::BasicBlock"** %77 to i64
  store i64 %78, i64* %49, align 8
  br label %125

79:                                               ; preds = %64
  %80 = ptrtoint %"class.spvtools::opt::BasicBlock"** %66 to i64
  %81 = load i64, i64* %50, align 8
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 3
  %84 = add nsw i64 %83, 1
  %85 = icmp ugt i64 %84, 2305843009213693951
  br i1 %85, label %86, label %88

86:                                               ; preds = %79
  %87 = bitcast %"class.std::__1::vector.966"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %87) #13
  unreachable

88:                                               ; preds = %79
  %89 = icmp ult i64 %83, 1152921504606846975
  br i1 %89, label %90, label %98

90:                                               ; preds = %88
  %91 = ashr exact i64 %82, 2
  %92 = icmp ult i64 %91, %84
  %93 = select i1 %92, i64 %84, i64 %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %90
  %96 = icmp ugt i64 %93, 2305843009213693951
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  call void @abort() #13
  unreachable

98:                                               ; preds = %95, %88
  %99 = phi i64 [ %93, %95 ], [ 2305843009213693951, %88 ]
  %100 = shl i64 %99, 3
  %101 = call i8* @_Znwm(i64 %100) #11
  %102 = bitcast i8* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %103

103:                                              ; preds = %98, %90
  %104 = phi i64 [ %99, %98 ], [ 0, %90 ]
  %105 = phi %"class.spvtools::opt::BasicBlock"** [ %102, %98 ], [ null, %90 ]
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %105, i64 %83
  %107 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %105, i64 %104
  %108 = ptrtoint %"class.spvtools::opt::BasicBlock"** %107 to i64
  %109 = bitcast %"class.spvtools::opt::BasicBlock"** %106 to i64*
  store i64 %73, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, i64 1
  %111 = ptrtoint %"class.spvtools::opt::BasicBlock"** %110 to i64
  %112 = sub i64 %65, %81
  %113 = ashr exact i64 %112, 3
  %114 = sub nsw i64 0, %113
  %115 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, i64 %114
  %116 = ptrtoint %"class.spvtools::opt::BasicBlock"** %115 to i64
  %117 = icmp sgt i64 %112, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %103
  %119 = bitcast %"class.spvtools::opt::BasicBlock"** %115 to i8*
  %120 = inttoptr i64 %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 %112, i1 false) #12
  br label %121

121:                                              ; preds = %118, %103
  store i64 %116, i64* %50, align 8
  store i64 %111, i64* %49, align 8
  store i64 %108, i64* %52, align 8
  %122 = icmp eq i64 %81, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %121
  %124 = inttoptr i64 %81 to i8*
  call void @_ZdlPv(i8* %124) #11
  br label %125

125:                                              ; preds = %123, %121, %75
  %126 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %68, i64 0, i32 1
  %127 = bitcast %"struct.std::__1::__list_node_base"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = inttoptr i64 %128 to %"struct.std::__1::__list_node_base"*
  %130 = icmp eq %"struct.std::__1::__list_node_base"* %11, %129
  br i1 %130, label %53, label %131

131:                                              ; preds = %125
  %132 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %43, align 8
  %133 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %44, align 8
  %134 = ptrtoint %"class.spvtools::opt::BasicBlock"** %132 to i64
  br label %64

135:                                              ; preds = %183, %57
  %136 = phi i64 [ %59, %57 ], [ %193, %183 ]
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  store i64 %136, i64* %49, align 8
  %139 = inttoptr i64 %136 to i8*
  call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %138, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  %141 = load i64, i64* %10, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %198, label %143

143:                                              ; preds = %140
  %144 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %145 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %145, i64 0, i32 1
  %147 = bitcast %"struct.std::__1::__list_node_base"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %144, i64 0, i32 0
  %150 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %149, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %150, i64 0, i32 1
  %152 = bitcast %"struct.std::__1::__list_node_base"** %151 to i64*
  store i64 %148, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__list_node_base"* %144 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"struct.std::__1::__list_node_base"** %146 to i64**
  %156 = load i64*, i64** %155, align 8
  store i64 %154, i64* %156, align 8
  store i64 0, i64* %10, align 8
  %157 = icmp eq %"struct.std::__1::__list_node_base"* %144, %11
  br i1 %157, label %198, label %158

158:                                              ; preds = %143, %158
  %159 = phi %"struct.std::__1::__list_node_base"* [ %161, %158 ], [ %144, %143 ]
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %160, align 8
  %162 = bitcast %"struct.std::__1::__list_node_base"* %159 to i8*
  call void @_ZdlPv(i8* %162) #11
  %163 = icmp eq %"struct.std::__1::__list_node_base"* %161, %11
  br i1 %163, label %198, label %158

164:                                              ; preds = %57, %183
  %165 = phi %"class.spvtools::opt::BasicBlock"** [ %197, %183 ], [ %58, %57 ]
  %166 = phi i64 [ %193, %183 ], [ %59, %57 ]
  %167 = phi i64 [ %191, %183 ], [ 1, %57 ]
  %168 = phi i32 [ %190, %183 ], [ 1, %57 ]
  %169 = inttoptr i64 %166 to %"class.spvtools::opt::BasicBlock"**
  %170 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %169, i64 %167
  %171 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %170, align 8
  %172 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %171, i64 0, i32 1, i32 0, i32 0, i32 0
  %173 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %172, align 8
  %174 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %173, i64 0, i32 4
  %175 = load i8, i8* %174, align 1, !range !2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %183, label %177

177:                                              ; preds = %164
  %178 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %173, i64 0, i32 3
  %179 = load i8, i8* %178, align 4, !range !2
  %180 = zext i8 %179 to i32
  %181 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %173, i32 %180) #12
  %182 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %42, align 8
  br label %183

183:                                              ; preds = %177, %164
  %184 = phi %"class.spvtools::opt::BasicBlock"** [ %182, %177 ], [ %165, %164 ]
  %185 = phi i32 [ %181, %177 ], [ 0, %164 ]
  %186 = add i32 %168, -1
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %184, i64 %187
  %189 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %188, align 8
  call void @_ZN8spvtools3opt8Function21MoveBasicBlockToAfterEjPNS0_10BasicBlockE(%"class.spvtools::opt::Function"* %1, i32 %185, %"class.spvtools::opt::BasicBlock"* %189) #12
  %190 = add i32 %168, 1
  %191 = zext i32 %190 to i64
  %192 = load i64, i64* %49, align 8
  %193 = load i64, i64* %50, align 8
  %194 = sub i64 %192, %193
  %195 = ashr exact i64 %194, 3
  %196 = icmp ugt i64 %195, %191
  %197 = inttoptr i64 %193 to %"class.spvtools::opt::BasicBlock"**
  br i1 %196, label %164, label %135

198:                                              ; preds = %158, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret i1 true
}

declare void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::list"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #12
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #12
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #12
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #12
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #12
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #12
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #12
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #12
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #12
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #12
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #11
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #11
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #11
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadBranchElimPass7ProcessEvE3$_4S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::DeadBranchElimPass"**
  %4 = load %"class.spvtools::opt::DeadBranchElimPass"*, %"class.spvtools::opt::DeadBranchElimPass"** %3, align 8
  %5 = tail call zeroext i1 @_ZN8spvtools3opt18DeadBranchElimPass21EliminateDeadBranchesEPNS0_8FunctionE(%"class.spvtools::opt::DeadBranchElimPass"* %4, %"class.spvtools::opt::Function"* %1) #12
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS8_10BasicBlockENS_4hashISC_EENS_8equal_toISC_EENS_9allocatorISC_EEEEE3$_5S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1197"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1197"*, %"class.std::__1::__function::__default_alloc_func.1197"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1197", %"class.std::__1::__function::__default_alloc_func.1197"* %4, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::unordered_set.910"*, %"class.std::__1::unordered_set.910"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %6, i64 0, i32 0
  %8 = tail call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %7, i32* dereferenceable(4) %1, i32* dereferenceable(4) %1) #12
  %9 = extractvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %8, 1
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %83, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1197", %"class.std::__1::__function::__default_alloc_func.1197"* %4, i64 0, i32 0, i32 2
  %14 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %16, %18
  %20 = ptrtoint i32* %18 to i64
  br i1 %19, label %26, label %21

21:                                               ; preds = %12
  %22 = load i32, i32* %1, align 4
  store i32 %22, i32* %16, align 4
  %23 = getelementptr inbounds i32, i32* %16, i64 1
  %24 = ptrtoint i32* %23 to i64
  %25 = bitcast i32** %15 to i64*
  store i64 %24, i64* %25, align 8
  br label %83

26:                                               ; preds = %12
  %27 = ptrtoint i32* %16 to i64
  %28 = bitcast i32** %15 to i64*
  %29 = bitcast %"class.std::__1::vector.3"* %14 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 2
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 4611686018427387903
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::vector.3"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #13
  unreachable

37:                                               ; preds = %26
  %38 = bitcast i32** %17 to i64*
  %39 = sub i64 %20, %30
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %33
  %45 = select i1 %44, i64 %33, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %47, %37
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %37 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #11
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %32
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = ptrtoint i32* %59 to i64
  %61 = load i32, i32* %1, align 4
  store i32 %61, i32* %58, align 4
  %62 = getelementptr inbounds i32, i32* %58, i64 1
  %63 = ptrtoint i32* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = load i64, i64* %28, align 8
  %67 = ptrtoint i32* %65 to i64
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 2
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds i32, i32* %58, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = icmp sgt i64 %68, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %55
  %75 = bitcast i32* %71 to i8*
  %76 = bitcast i32* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %68, i1 false) #12
  %77 = load i32*, i32** %64, align 8
  br label %78

78:                                               ; preds = %74, %55
  %79 = phi i32* [ %65, %55 ], [ %77, %74 ]
  store i64 %72, i64* %29, align 8
  store i64 %63, i64* %28, align 8
  store i64 %60, i64* %38, align 8
  %80 = icmp eq i32* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = bitcast i32* %79 to i8*
  tail call void @_ZdlPv(i8* %82) #11
  br label %83

83:                                               ; preds = %81, %78, %21, %2
  %84 = load i32, i32* %1, align 4
  %85 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1197", %"class.std::__1::__function::__default_alloc_func.1197"* %4, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1197", %"class.std::__1::__function::__default_alloc_func.1197"* %4, i64 0, i32 0, i32 3
  %90 = load i8*, i8** %89, align 8
  store i8 1, i8* %90, align 1
  br label %91

91:                                               ; preds = %83, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #11, !noalias !99
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1199"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1199"*, %"class.std::__1::__function::__default_alloc_func.1199"** %3, align 8
  %5 = bitcast %"class.std::__1::__function::__default_alloc_func.1199"* %4 to %"class.spvtools::opt::Pass"**
  %6 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %8) #12
  br i1 %9, label %10, label %38

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %6, i64 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %12, %"class.spvtools::opt::Instruction"* %1) #12
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 3
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = zext i8 %21 to i32
  %23 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %15, i32 %22) #12
  br label %24

24:                                               ; preds = %19, %10
  %25 = phi i32 [ %23, %19 ], [ 0, %10 ]
  %26 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1199", %"class.std::__1::__function::__default_alloc_func.1199"* %4, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %38, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1199", %"class.std::__1::__function::__default_alloc_func.1199"* %4, i64 0, i32 0, i32 1
  %31 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %30, align 8
  %32 = tail call i32 @_ZN8spvtools3opt21StructuredCFGAnalysis19ContainingConstructEPNS0_11InstructionE(%"class.spvtools::opt::StructuredCFGAnalysis"* %31, %"class.spvtools::opt::Instruction"* %1) #12
  %33 = load i32, i32* %26, align 8
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* %13) #12
  %37 = icmp eq %"class.spvtools::opt::Instruction"* %36, null
  br label %38

38:                                               ; preds = %2, %24, %29, %35
  %39 = phi i1 [ true, %2 ], [ true, %24 ], [ false, %29 ], [ %37, %35 ]
  ret i1 %39
}

declare i32 @_ZN8spvtools3opt21StructuredCFGAnalysis19ContainingConstructEPNS0_11InstructionE(%"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #11, !noalias !104
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #11
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!6 = distinct !{!6, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!15 = distinct !{!15, !16, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!19 = distinct !{!19, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!23 = distinct !{!23, !24, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!27 = distinct !{!27, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!28 = !{!29, !31, !33}
!29 = distinct !{!29, !30, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!31 = distinct !{!31, !32, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!32 = distinct !{!32, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!33 = distinct !{!33, !34, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!34 = distinct !{!34, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!35 = !{!36, !38, !40}
!36 = distinct !{!36, !37, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!38 = distinct !{!38, !39, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!39 = distinct !{!39, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!40 = distinct !{!40, !41, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!41 = distinct !{!41, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!44 = distinct !{!44, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!47 = distinct !{!47, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!50 = distinct !{!50, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!51 = !{!52, !54, !56}
!52 = distinct !{!52, !53, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!53 = distinct !{!53, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!54 = distinct !{!54, !55, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!55 = distinct !{!55, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!56 = distinct !{!56, !57, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!57 = distinct !{!57, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!60 = distinct !{!60, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!63 = distinct !{!63, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!66 = distinct !{!66, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!69 = distinct !{!69, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!70 = distinct !{!70, !71}
!71 = !{!"llvm.loop.unroll.disable"}
!72 = distinct !{!72, !71}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!75 = distinct !{!75, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!76 = distinct !{!76, !71}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!80 = distinct !{!80, !71}
!81 = !{!82, !84}
!82 = distinct !{!82, !83, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!83 = distinct !{!83, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!84 = distinct !{!84, !85, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass14MarkLiveBlocksEPNS5_8FunctionEPNS_13unordered_setIPNS5_10BasicBlockENS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_0FbPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!89 = distinct !{!89, !71}
!90 = distinct !{!90, !71}
!91 = distinct !{!91, !71}
!92 = distinct !{!92, !71}
!93 = distinct !{!93, !71}
!94 = distinct !{!94, !71}
!95 = distinct !{!95, !71}
!96 = distinct !{!96, !71}
!97 = distinct !{!97, !71}
!98 = distinct !{!98, !71}
!99 = !{!100, !102}
!100 = distinct !{!100, !101, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!101 = distinct !{!101, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!102 = distinct !{!102, !103, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass21AddBlocksWithBackEdgeEjjjPNS_13unordered_setIPNS5_10BasicBlockENS_4hashIS9_EENS_8equal_toIS9_EENS_9allocatorIS9_EEEEE3$_5FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!104 = !{!105, !107}
!105 = distinct !{!105, !106, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!106 = distinct !{!106, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!107 = distinct !{!107, !108, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!108 = distinct !{!108, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18DeadBranchElimPass20SwitchHasNestedBreakEjE3$_6FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
