; ModuleID = '../../third_party/blink/renderer/platform/scheduler/main_thread/auto_advancing_virtual_time_domain.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/main_thread/auto_advancing_virtual_time_domain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TaskObserver", i32, i32, i8, %"class.blink::scheduler::SchedulerHelper"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Lock", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Time", %"class.base::Time", %"class.std::__1::unique_ptr.65" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr }
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.51" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr, %class.scoped_refptr.1, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.2", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.3", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.8, i8, [7 x i8] }>
%class.scoped_refptr.8 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.9", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.15", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.38", %"class.base::RepeatingCallback.39", %"class.absl::optional.40", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.22", %"struct.std::__1::less" }>
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.26" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.24, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.24 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.33" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type opaque
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.38" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.39" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.45", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.71", i64, [64 x %"class.base::RepeatingCallback.76"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.45", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__cxx_atomic_impl.74" }
%"struct.std::__1::__cxx_atomic_impl.74" = type { %"struct.std::__1::__cxx_atomic_base_impl.75" }
%"struct.std::__1::__cxx_atomic_base_impl.75" = type { i64 }
%"class.base::RepeatingCallback.76" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%class.scoped_refptr = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr.56, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional.57" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%class.scoped_refptr.56 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional.57" = type { %"class.absl::optional_internal::optional_data.58" }
%"class.absl::optional_internal::optional_data.58" = type { %"class.absl::optional_internal::optional_data_base.59" }
%"class.absl::optional_internal::optional_data_base.59" = type { %"class.absl::optional_internal::optional_data_dtor_base.60" }
%"class.absl::optional_internal::optional_data_dtor_base.60" = type { i8, %union.anon.61 }
%union.anon.61 = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr.56, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.64" }
%"class.base::time_internal::TimeBase.64" = type { i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.base::subtle::ScopedTimeClockOverrides"* }
%"class.base::subtle::ScopedTimeClockOverrides" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.84 }
%union.anon.84 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::sequence_manager::LazyNow" = type { %"class.base::TickClock"*, %"class.absl::optional" }
%"class.base::TickClock" = type { i32 (...)** }
%"struct.base::PendingTask" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8, [3 x i8] }>

@_ZTVN5blink9scheduler30AutoAdvancingVirtualTimeDomainE = hidden unnamed_addr constant { [14 x i8*], [6 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)* @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)* @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainD0Ev to i8*), i8* bitcast (void (%"class.base::sequence_manager::LazyNow"*, %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)* @_ZNK5blink9scheduler30AutoAdvancingVirtualTimeDomain13CreateLazyNowEv to i8*), i8* bitcast (i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)* @_ZNK5blink9scheduler30AutoAdvancingVirtualTimeDomain3NowEv to i8*), i8* bitcast ({ i8, i64 } (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"class.base::sequence_manager::LazyNow"*)* @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain17DelayTillNextTaskEPN4base16sequence_manager7LazyNowE to i8*), i8* bitcast (i1 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, i1)* @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain26MaybeFastForwardToNextTaskEb to i8*), i8* bitcast (void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)* @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain20SetNextDelayedDoWorkEPN4base16sequence_manager7LazyNowENS2_9TimeTicksE to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*)* @_ZN4base16sequence_manager10TimeDomain13RequestDoWorkEv to i8*), i8* bitcast (i8* (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)* @_ZNK5blink9scheduler30AutoAdvancingVirtualTimeDomain7GetNameEv to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*)* @_ZN4base16sequence_manager10TimeDomain29OnRegisterWithSequenceManagerEPNS0_8internal19SequenceManagerImplE to i8*), i8* bitcast (void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"struct.base::PendingTask"*, i1)* @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain15WillProcessTaskERKN4base11PendingTaskEb to i8*), i8* bitcast (void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"struct.base::PendingTask"*)* @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14DidProcessTaskERKN4base11PendingTaskE to i8*)], [6 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"struct.base::PendingTask"*, i1)* @_ZThn56_N5blink9scheduler30AutoAdvancingVirtualTimeDomain15WillProcessTaskERKN4base11PendingTaskEb to i8*), i8* bitcast (void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"struct.base::PendingTask"*)* @_ZThn56_N5blink9scheduler30AutoAdvancingVirtualTimeDomain14DidProcessTaskERKN4base11PendingTaskE to i8*), i8* bitcast (void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)* @_ZThn56_N5blink9scheduler30AutoAdvancingVirtualTimeDomainD1Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)* @_ZThn56_N5blink9scheduler30AutoAdvancingVirtualTimeDomainD0Ev to i8*)] }, align 8
@_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14g_time_domain_E = hidden local_unnamed_addr global %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* null, align 8
@.str = private unnamed_addr constant [31 x i8] c"AutoAdvancingVirtualTimeDomain\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainC1EN4base4TimeENS2_9TimeTicksEPNS0_15SchedulerHelperENS1_22BaseTimeOverridePolicyE = hidden unnamed_addr alias void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, i64, i64, %"class.blink::scheduler::SchedulerHelper"*, i32), void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, i64, i64, %"class.blink::scheduler::SchedulerHelper"*, i32)* @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainC2EN4base4TimeENS2_9TimeTicksEPNS0_15SchedulerHelperENS1_22BaseTimeOverridePolicyE
@_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*), void (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)* @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainC2EN4base4TimeENS2_9TimeTicksEPNS0_15SchedulerHelperENS1_22BaseTimeOverridePolicyE(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, i64, i64, %"class.blink::scheduler::SchedulerHelper"*, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager10TimeDomainC2Ev(%"class.base::sequence_manager::TimeDomain"* %6) #9
  %7 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::TaskObserver", %"class.base::TaskObserver"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [6 x i8*] }, { [14 x i8*], [6 x i8*] }* @_ZTVN5blink9scheduler30AutoAdvancingVirtualTimeDomainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [6 x i8*] }, { [14 x i8*], [6 x i8*] }* @_ZTVN5blink9scheduler30AutoAdvancingVirtualTimeDomainE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 3
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 4
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 5
  store %"class.blink::scheduler::SchedulerHelper"* %3, %"class.blink::scheduler::SchedulerHelper"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 8, i32 0
  %16 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %15) #9
  %17 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %2, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %2, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 11, i32 0, i32 0
  store i64 %1, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 %1, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 13
  %22 = bitcast %"class.std::__1::unique_ptr.65"* %21 to i64*
  store i64 0, i64* %22, align 8
  store %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"** @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14g_time_domain_E, align 8
  fence seq_cst
  %23 = icmp eq i32 %4, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %5
  %25 = tail call i8* @_Znwm(i64 1) #10
  %26 = bitcast i8* %25 to %"class.base::subtle::ScopedTimeClockOverrides"*
  tail call void @_ZN4base6subtle24ScopedTimeClockOverridesC1EPFNS_4TimeEvEPFNS_9TimeTicksEvEPFNS_11ThreadTicksEvE(%"class.base::subtle::ScopedTimeClockOverrides"* nonnull %26, i64 ()* nonnull @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14GetVirtualTimeEv, i64 ()* nonnull @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain19GetVirtualTimeTicksEv, i64 ()* null) #9
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.base::subtle::ScopedTimeClockOverrides"*, %"class.base::subtle::ScopedTimeClockOverrides"** %28, align 8
  store i64 %27, i64* %22, align 8
  %30 = icmp eq %"class.base::subtle::ScopedTimeClockOverrides"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %24
  tail call void @_ZN4base6subtle24ScopedTimeClockOverridesD1Ev(%"class.base::subtle::ScopedTimeClockOverrides"* nonnull %29) #9
  %32 = getelementptr inbounds %"class.base::subtle::ScopedTimeClockOverrides", %"class.base::subtle::ScopedTimeClockOverrides"* %29, i64 0, i32 0
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %24, %31, %5
  %34 = load %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::SchedulerHelper"** %13, align 8
  tail call void @_ZN5blink9scheduler15SchedulerHelper15AddTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::SchedulerHelper"* %34, %"class.base::TaskObserver"* %7) #9
  ret void
}

declare void @_ZN4base16sequence_manager10TimeDomainC2Ev(%"class.base::sequence_manager::TimeDomain"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14GetVirtualTimeEv() #0 align 2 {
  %1 = alloca %"class.logging::CheckError", align 8
  %2 = load %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"** @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14g_time_domain_E, align 8
  %3 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %2 to i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)***
  %4 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)**, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %4, i64 3
  %6 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %5, align 8
  %7 = tail call i64 %6(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %2) #9
  %8 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %2, i64 0, i32 10, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sub nsw i64 %7, %9
  %11 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %2, i64 0, i32 11, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, -9223372036854775807
  %14 = icmp ult i64 %13, 2
  br i1 %14, label %22, label %15

15:                                               ; preds = %0
  %16 = icmp slt i64 %10, 0
  %17 = select i1 %16, i64 -9223372036854775808, i64 9223372036854775807
  %18 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %12, i64 %10) #9
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 %17, i64 %20, !prof !2
  br label %30

22:                                               ; preds = %0
  %23 = add i64 %12, -9223372036854775807
  %24 = icmp ugt i64 %23, 1
  %25 = icmp eq i64 %12, %10
  %26 = or i1 %25, %24
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.logging::CheckError"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %1) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %15, %22, %27
  %31 = phi i64 [ %21, %15 ], [ %10, %22 ], [ %10, %27 ]
  ret i64 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain19GetVirtualTimeTicksEv() #0 align 2 {
  %1 = load %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"** @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14g_time_domain_E, align 8
  %2 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %1 to i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)***
  %3 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)**, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %3, i64 3
  %5 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %1) #9
  ret i64 %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink9scheduler15SchedulerHelper15AddTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::SchedulerHelper"*, %"class.base::TaskObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainD2Ev(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [6 x i8*] }, { [14 x i8*], [6 x i8*] }* @_ZTVN5blink9scheduler30AutoAdvancingVirtualTimeDomainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::TaskObserver", %"class.base::TaskObserver"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [6 x i8*] }, { [14 x i8*], [6 x i8*] }* @_ZTVN5blink9scheduler30AutoAdvancingVirtualTimeDomainE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 5
  %6 = load %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::SchedulerHelper"** %5, align 8
  tail call void @_ZN5blink9scheduler15SchedulerHelper18RemoveTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::SchedulerHelper"* %6, %"class.base::TaskObserver"* %3) #9
  %7 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %8 = load %"class.base::subtle::ScopedTimeClockOverrides"*, %"class.base::subtle::ScopedTimeClockOverrides"** %7, align 8
  store %"class.base::subtle::ScopedTimeClockOverrides"* null, %"class.base::subtle::ScopedTimeClockOverrides"** %7, align 8
  %9 = icmp eq %"class.base::subtle::ScopedTimeClockOverrides"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN4base6subtle24ScopedTimeClockOverridesD1Ev(%"class.base::subtle::ScopedTimeClockOverrides"* nonnull %8) #9
  %11 = getelementptr inbounds %"class.base::subtle::ScopedTimeClockOverrides", %"class.base::subtle::ScopedTimeClockOverrides"* %8, i64 0, i32 0
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %10
  fence seq_cst
  store %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* null, %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"** @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14g_time_domain_E, align 8
  %13 = load %"class.base::subtle::ScopedTimeClockOverrides"*, %"class.base::subtle::ScopedTimeClockOverrides"** %7, align 8
  store %"class.base::subtle::ScopedTimeClockOverrides"* null, %"class.base::subtle::ScopedTimeClockOverrides"** %7, align 8
  %14 = icmp eq %"class.base::subtle::ScopedTimeClockOverrides"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  tail call void @_ZN4base6subtle24ScopedTimeClockOverridesD1Ev(%"class.base::subtle::ScopedTimeClockOverrides"* nonnull %13) #9
  %16 = getelementptr inbounds %"class.base::subtle::ScopedTimeClockOverrides", %"class.base::subtle::ScopedTimeClockOverrides"* %13, i64 0, i32 0
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %12, %15
  %18 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %18) #9
  %19 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager10TimeDomainD2Ev(%"class.base::sequence_manager::TimeDomain"* %19) #9
  ret void
}

declare void @_ZN5blink9scheduler15SchedulerHelper18RemoveTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::SchedulerHelper"*, %"class.base::TaskObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager10TimeDomainD2Ev(%"class.base::sequence_manager::TimeDomain"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink9scheduler30AutoAdvancingVirtualTimeDomainD1Ev(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 -1, i32 8, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %struct.__pthread_internal_list* %2 to %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*
  tail call void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainD2Ev(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainD0Ev(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainD2Ev(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0) #9
  %2 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink9scheduler30AutoAdvancingVirtualTimeDomainD0Ev(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 -1, i32 8, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %struct.__pthread_internal_list* %2 to %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*
  tail call void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomainD2Ev(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %3) #9
  %4 = bitcast %struct.__pthread_internal_list* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9scheduler30AutoAdvancingVirtualTimeDomain13CreateLazyNowEv(%"class.base::sequence_manager::LazyNow"* noalias sret, %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %1, i64 0, i32 8
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #9
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %1, i64 0, i32 9, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  tail call void @_ZN4base16sequence_manager7LazyNowC1ENS_9TimeTicksE(%"class.base::sequence_manager::LazyNow"* %0, i64 %11) #9
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #9
  ret void
}

declare void @_ZN4base16sequence_manager7LazyNowC1ENS_9TimeTicksE(%"class.base::sequence_manager::LazyNow"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9scheduler30AutoAdvancingVirtualTimeDomain3NowEv(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 9, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain17DelayTillNextTaskEPN4base16sequence_manager7LazyNowE(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"class.base::sequence_manager::LazyNow"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0
  %4 = tail call { i8, i64 } @_ZNK4base16sequence_manager10TimeDomain20NextScheduledRunTimeEv(%"class.base::sequence_manager::TimeDomain"* %3) #9
  %5 = extractvalue { i8, i64 } %4, 0
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = extractvalue { i8, i64 } %4, 1
  %9 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0 to i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)***
  %10 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)**, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %10, i64 3
  %12 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %11, align 8
  %13 = tail call i64 %12(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0) #9
  %14 = icmp sle i64 %8, %13
  %15 = zext i1 %14 to i8
  br label %16

16:                                               ; preds = %2, %7
  %17 = phi i8 [ 0, %2 ], [ %15, %7 ]
  %18 = insertvalue { i8, i64 } undef, i8 %17, 0
  %19 = insertvalue { i8, i64 } %18, i64 0, 1
  ret { i8, i64 } %19
}

declare { i8, i64 } @_ZNK4base16sequence_manager10TimeDomain20NextScheduledRunTimeEv(%"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain26MaybeFastForwardToNextTaskEb(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0
  %8 = tail call { i8, i64 } @_ZNK4base16sequence_manager10TimeDomain20NextScheduledRunTimeEv(%"class.base::sequence_manager::TimeDomain"* %7) #9
  %9 = extractvalue { i8, i64 } %8, 0
  %10 = extractvalue { i8, i64 } %8, 1
  %11 = icmp eq i8 %9, 0
  br i1 %11, label %38, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 7, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp ne i64 %14, 0
  %16 = icmp slt i64 %14, %10
  %17 = and i1 %15, %16
  %18 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 6, i32 0, i32 0
  %19 = select i1 %17, i64 %10, i64 0
  %20 = select i1 %17, i64 %14, i64 %10
  store i64 %19, i64* %18, align 8
  %21 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0 to i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)***
  %22 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)**, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*** %21, align 8
  %23 = getelementptr inbounds i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %22, i64 3
  %24 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %23, align 8
  %25 = tail call i64 %24(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0) #9
  %26 = icmp sgt i64 %20, %25
  br i1 %26, label %27, label %38

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 8
  %29 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %28, i64 0, i32 0, i32 0
  %30 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %29) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32, !prof !3

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %28, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %33) #9
  br label %34

34:                                               ; preds = %27, %32
  %35 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %20, i64* %35, align 8
  %36 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %29) #9
  %37 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 2
  store i32 0, i32* %37, align 8
  br label %38

38:                                               ; preds = %34, %12, %6, %2
  %39 = phi i1 [ false, %2 ], [ true, %34 ], [ false, %6 ], [ false, %12 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain23MaybeAdvanceVirtualTimeEN4base9TimeTicksE(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ne i64 %4, 0
  %6 = icmp slt i64 %4, %1
  %7 = and i1 %5, %6
  %8 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 6, i32 0, i32 0
  %9 = select i1 %7, i64 %1, i64 0
  %10 = select i1 %7, i64 %4, i64 %1
  store i64 %9, i64* %8, align 8
  %11 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0 to i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)***
  %12 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)**, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %12, i64 3
  %14 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %13, align 8
  %15 = tail call i64 %14(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0) #9
  %16 = icmp sgt i64 %10, %15
  br i1 %16, label %17, label %27

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 8
  %19 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %18, i64 0, i32 0, i32 0
  %20 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %19) #9
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22, !prof !3

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %18, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %23) #9
  br label %24

24:                                               ; preds = %17, %22
  %25 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %10, i64* %25, align 8
  %26 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %19) #9
  br label %27

27:                                               ; preds = %2, %24
  %28 = phi i1 [ true, %24 ], [ false, %2 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain20SetNextDelayedDoWorkEPN4base16sequence_manager7LazyNowENS2_9TimeTicksE(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"class.base::sequence_manager::LazyNow"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 9223372036854775807
  br i1 %4, label %24, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::internal::IntrusiveHeap"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp eq i64 %16, 24
  br i1 %17, label %18, label %24

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0
  %20 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0 to void (%"class.base::sequence_manager::TimeDomain"*)***
  %21 = load void (%"class.base::sequence_manager::TimeDomain"*)**, void (%"class.base::sequence_manager::TimeDomain"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::TimeDomain"*)** %21, i64 7
  %23 = load void (%"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::TimeDomain"*)** %22, align 8
  tail call void %23(%"class.base::sequence_manager::TimeDomain"* %19) #9
  br label %24

24:                                               ; preds = %5, %3, %18, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain24SetCanAdvanceVirtualTimeEb(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 4
  store i8 %3, i8* %4, align 8
  br i1 %1, label %5, label %11

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0 to void (%"class.base::sequence_manager::TimeDomain"*)***
  %8 = load void (%"class.base::sequence_manager::TimeDomain"*)**, void (%"class.base::sequence_manager::TimeDomain"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::TimeDomain"*)** %8, i64 7
  %10 = load void (%"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::TimeDomain"*)** %9, align 8
  tail call void %10(%"class.base::sequence_manager::TimeDomain"* %6) #9
  br label %11

11:                                               ; preds = %5, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain36SetMaxVirtualTimeTaskStarvationCountEi(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 4
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 8
  br label %7

7:                                                ; preds = %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain19SetVirtualTimeFenceEN4base9TimeTicksE(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 6, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = icmp ne i64 %1, 0
  %9 = icmp sgt i64 %5, %1
  %10 = and i1 %8, %9
  %11 = select i1 %10, i64 %5, i64 0
  %12 = select i1 %10, i64 %1, i64 %5
  store i64 %11, i64* %4, align 8
  %13 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0 to i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)***
  %14 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)**, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %14, i64 3
  %16 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %15, align 8
  %17 = tail call i64 %16(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0) #9
  %18 = icmp sgt i64 %12, %17
  br i1 %18, label %19, label %29

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 8
  %21 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %20, i64 0, i32 0, i32 0
  %22 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %21) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24, !prof !3

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %20, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %25) #9
  br label %26

26:                                               ; preds = %24, %19
  %27 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %12, i64* %27, align 8
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %21) #9
  br label %29

29:                                               ; preds = %26, %7, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK5blink9scheduler30AutoAdvancingVirtualTimeDomain7GetNameEv(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain15WillProcessTaskERKN4base11PendingTaskEb(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* nocapture, %"struct.base::PendingTask"* nocapture dereferenceable(112), i1 zeroext) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn56_N5blink9scheduler30AutoAdvancingVirtualTimeDomain15WillProcessTaskERKN4base11PendingTaskEb(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* nocapture, %"struct.base::PendingTask"* nocapture dereferenceable(112), i1 zeroext) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14DidProcessTaskERKN4base11PendingTaskE(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"struct.base::PendingTask"* nocapture readnone dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = icmp slt i32 %9, %4
  br i1 %10, label %42, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 0
  %13 = tail call { i8, i64 } @_ZNK4base16sequence_manager10TimeDomain20NextScheduledRunTimeEv(%"class.base::sequence_manager::TimeDomain"* %12) #9
  %14 = extractvalue { i8, i64 } %13, 0
  %15 = extractvalue { i8, i64 } %13, 1
  %16 = icmp eq i8 %14, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 7, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp ne i64 %19, 0
  %21 = icmp slt i64 %19, %15
  %22 = and i1 %20, %21
  %23 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 6, i32 0, i32 0
  %24 = select i1 %22, i64 %15, i64 0
  %25 = select i1 %22, i64 %19, i64 %15
  store i64 %24, i64* %23, align 8
  %26 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0 to i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)***
  %27 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)**, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %27, i64 3
  %29 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %28, align 8
  %30 = tail call i64 %29(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0) #9
  %31 = icmp sgt i64 %25, %30
  br i1 %31, label %32, label %42

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 8
  %34 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %33, i64 0, i32 0, i32 0
  %35 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %34) #9
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37, !prof !3

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %33, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %38) #9
  br label %39

39:                                               ; preds = %32, %37
  %40 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %25, i64* %40, align 8
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %34) #9
  store i32 0, i32* %7, align 8
  br label %42

42:                                               ; preds = %39, %17, %11, %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink9scheduler30AutoAdvancingVirtualTimeDomain14DidProcessTaskERKN4base11PendingTaskE(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*, %"struct.base::PendingTask"* nocapture readnone dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 -1, i32 8, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %struct.__pthread_internal_list* %3 to %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*
  tail call void @_ZN5blink9scheduler30AutoAdvancingVirtualTimeDomain14DidProcessTaskERKN4base11PendingTaskE(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %4, %"struct.base::PendingTask"* dereferenceable(112) undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9scheduler30AutoAdvancingVirtualTimeDomain4DateEv(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = bitcast %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0 to i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)***
  %4 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)**, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %4, i64 3
  %6 = load i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)*, i64 (%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"*)** %5, align 8
  %7 = tail call i64 %6(%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0) #9
  %8 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 10, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sub nsw i64 %7, %9
  %11 = getelementptr inbounds %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain", %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* %0, i64 0, i32 11, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, -9223372036854775807
  %14 = icmp ult i64 %13, 2
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = icmp slt i64 %10, 0
  %17 = select i1 %16, i64 -9223372036854775808, i64 9223372036854775807
  %18 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %12, i64 %10) #9
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 %17, i64 %20, !prof !2
  br label %30

22:                                               ; preds = %1
  %23 = add i64 %12, -9223372036854775807
  %24 = icmp ugt i64 %23, 1
  %25 = icmp eq i64 %12, %10
  %26 = or i1 %25, %24
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %15, %22, %27
  %31 = phi i64 [ %21, %15 ], [ %10, %22 ], [ %10, %27 ]
  ret i64 %31
}

declare void @_ZN4base16sequence_manager10TimeDomain13RequestDoWorkEv(%"class.base::sequence_manager::TimeDomain"*) unnamed_addr #1

declare void @_ZN4base16sequence_manager10TimeDomain29OnRegisterWithSequenceManagerEPNS0_8internal19SequenceManagerImplE(%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*) unnamed_addr #1

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN4base6subtle24ScopedTimeClockOverridesC1EPFNS_4TimeEvEPFNS_9TimeTicksEvEPFNS_11ThreadTicksEvE(%"class.base::subtle::ScopedTimeClockOverrides"*, i64 ()*, i64 ()*, i64 ()*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base6subtle24ScopedTimeClockOverridesD1Ev(%"class.base::subtle::ScopedTimeClockOverrides"*) unnamed_addr #3

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
