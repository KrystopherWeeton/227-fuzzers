; ModuleID = '../../third_party/skia/modules/skottie/src/effects/RadialWipeEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/RadialWipeEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sksg::RenderNode::ScopedRenderContext" = type <{ %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext", %class.sk_sp.57, i32, [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.59, [384 x i64], %class.sk_sp.60, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.61", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.67" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.59 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.60 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.73, %class.sk_sp.57, %class.sk_sp.57, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.sk_sp.73 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.sk_sp.57 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %class.sk_sp.32*, %class.sk_sp.32*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.sk_sp.32* }
%"class.sksg::CustomRenderNode" = type { %"class.sksg::RenderNode.base", %"class.std::__1::vector.50" }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkV2 = type { float, float }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode" = type <{ %"class.sksg::CustomRenderNode", %struct.SkPoint, float, float, float, float, %class.sk_sp.57, float, [4 x i8] }>
%struct.SkPoint = type { float, float }
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.49 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%class.sk_sp.49 = type { %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* }
%"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter" = type { %"class.skottie::internal::DiscardableAdapterBase", %struct.SkV2, float, float, float, float }
%"class.sksg::InvalidationController" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_ = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_117RadialWipeAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117RadialWipeAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117RadialWipeAdapter6onSyncEv to i8*)] }, align 8
@_ZTVN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*)* @_ZN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*)* @_ZN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN7skottie8internal12_GLOBAL__N_115RWipeRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK7skottie8internal12_GLOBAL__N_115RWipeRenderNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %struct.SkPoint*)* @_ZNK7skottie8internal12_GLOBAL__N_115RWipeRenderNode8onNodeAtERK7SkPoint to i8*)] }, align 8
@_ZZN7skottie8internal12_GLOBAL__N_115RWipeRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrixE8grad_pos = internal constant [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00], align 16
@__const._ZNK7skottie8internal12_GLOBAL__N_115RWipeRenderNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.local_ctx = private unnamed_addr constant %"class.sksg::RenderNode::ScopedRenderContext" <{ %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), %"struct.sksg::RenderNode::RenderContext" { %class.sk_sp.73 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.57 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.57 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.57 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder22attachRadialWipeEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias nocapture sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.50", align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %8 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %7, align 8
  %9 = tail call i8* @_Znwm(i64 80) #14, !noalias !2
  %10 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %11 = bitcast %class.sk_sp.32* %3 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !2
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %10, align 8, !noalias !2
  %13 = tail call i8* @_Znwm(i64 112) #14, !noalias !7
  %14 = bitcast %"class.std::__1::vector.50"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15, !noalias !7
  %15 = tail call i8* @_Znwm(i64 8) #14, !noalias !7
  %16 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %5, i64 0, i32 0, i32 1
  %17 = bitcast %class.sk_sp.32** %16 to i8**
  store i8* %15, i8** %17, align 8, !noalias !7
  %18 = bitcast %"class.std::__1::vector.50"* %5 to i8**
  store i8* %15, i8** %18, align 8, !noalias !7
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %class.sk_sp.32** %20 to i8**
  store i8* %19, i8** %21, align 8, !noalias !7
  %22 = bitcast i8* %15 to %"class.sksg::RenderNode"**
  %23 = inttoptr i64 %12 to %"class.sksg::RenderNode"*
  %24 = icmp eq i64 %12, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic, !noalias !10
  br label %28

28:                                               ; preds = %25, %4
  store %"class.sksg::RenderNode"* %23, %"class.sksg::RenderNode"** %22, align 8, !noalias !7
  %29 = bitcast i8* %13 to %"class.sksg::CustomRenderNode"*
  %30 = bitcast %class.sk_sp.32** %16 to i64*
  %31 = ptrtoint i8* %19 to i64
  store i64 %31, i64* %30, align 8, !noalias !7
  call void @_ZN4sksg16CustomRenderNodeC2EONSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::CustomRenderNode"* nonnull %29, %"class.std::__1::vector.50"* nonnull dereferenceable(24) %5) #15, !noalias !7
  %32 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %5, i64 0, i32 0, i32 0
  %33 = load %class.sk_sp.32*, %class.sk_sp.32** %32, align 8, !noalias !7
  %34 = icmp eq %class.sk_sp.32* %33, null
  br i1 %34, label %61, label %35

35:                                               ; preds = %28
  %36 = bitcast %class.sk_sp.32* %33 to i8*
  %37 = load %class.sk_sp.32*, %class.sk_sp.32** %16, align 8, !noalias !7
  %38 = icmp eq %class.sk_sp.32* %37, %33
  br i1 %38, label %59, label %39

39:                                               ; preds = %35, %55
  %40 = phi %class.sk_sp.32* [ %41, %55 ], [ %37, %35 ]
  %41 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %40, i64 -1
  %42 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %41, i64 0, i32 0
  %43 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %42, align 8, !noalias !10
  %44 = icmp eq %"class.sksg::RenderNode"* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel, !noalias !10
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %"class.sksg::RenderNode"* %43 to %class.SkRefCntBase*
  %51 = bitcast %"class.sksg::RenderNode"* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8, !noalias !10
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8, !noalias !10
  call void %54(%class.SkRefCntBase* nonnull %50) #15, !noalias !10
  br label %55

55:                                               ; preds = %49, %45, %39
  %56 = icmp eq %class.sk_sp.32* %41, %33
  br i1 %56, label %57, label %39

57:                                               ; preds = %55
  %58 = load i8*, i8** %18, align 8, !noalias !7
  br label %59

59:                                               ; preds = %57, %35
  %60 = phi i8* [ %58, %57 ], [ %36, %35 ]
  store %class.sk_sp.32* %33, %class.sk_sp.32** %16, align 8, !noalias !7
  call void @_ZdlPv(i8* %60) #14, !noalias !10
  br label %61

61:                                               ; preds = %59, %28
  br i1 %24, label %72, label %62

62:                                               ; preds = %61
  %63 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel, !noalias !10
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = inttoptr i64 %12 to %class.SkRefCntBase*
  %68 = inttoptr i64 %12 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8, !noalias !10
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8, !noalias !10
  call void %71(%class.SkRefCntBase* nonnull %67) #15, !noalias !10
  br label %72

72:                                               ; preds = %66, %62, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15, !noalias !7
  %73 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8, !noalias !7
  %74 = getelementptr inbounds i8, i8* %13, i64 72
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 32, i1 false) #15, !noalias !7
  %75 = ptrtoint i8* %13 to i64
  %76 = getelementptr inbounds i8, i8* %9, i64 8
  %77 = bitcast i8* %76 to i32*
  store i32 1, i32* %77, align 4, !noalias !2
  %78 = bitcast i8* %9 to i32 (...)***
  %79 = getelementptr inbounds i8, i8* %9, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 25, i1 false) #15, !noalias !2
  %80 = getelementptr inbounds i8, i8* %9, i64 48
  %81 = bitcast i8* %80 to i64*
  store i64 %75, i64* %81, align 8, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117RadialWipeAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8, !noalias !2
  %82 = getelementptr inbounds i8, i8* %9, i64 56
  %83 = bitcast i8* %82 to %struct.SkV2*
  %84 = getelementptr inbounds i8, i8* %9, i64 64
  %85 = bitcast i8* %84 to float*
  %86 = getelementptr inbounds i8, i8* %9, i64 68
  %87 = bitcast i8* %86 to float*
  %88 = getelementptr inbounds i8, i8* %9, i64 72
  %89 = bitcast i8* %88 to float*
  %90 = getelementptr inbounds i8, i8* %9, i64 76
  %91 = bitcast i8* %90 to float*
  %92 = bitcast i8* %9 to %"class.skottie::internal::AnimatablePropertyContainer"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #15, !noalias !2
  %93 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #15, !noalias !2
  %94 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %93, i64 0, i32 0, i64 0
  %95 = load i8, i8* %94, align 8, !noalias !2
  %96 = and i8 %95, 7
  %97 = icmp eq i8 %96, 7
  %98 = bitcast %"class.skjson::Value"* %93 to %"class.skjson::ObjectValue"*
  %99 = select i1 %97, %"class.skjson::ObjectValue"* %98, %"class.skjson::ObjectValue"* null
  %100 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %92, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %99, float* %85) #15, !noalias !2
  %101 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 1) #15, !noalias !2
  %102 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %101, i64 0, i32 0, i64 0
  %103 = load i8, i8* %102, align 8, !noalias !2
  %104 = and i8 %103, 7
  %105 = icmp eq i8 %104, 7
  %106 = bitcast %"class.skjson::Value"* %101 to %"class.skjson::ObjectValue"*
  %107 = select i1 %105, %"class.skjson::ObjectValue"* %106, %"class.skjson::ObjectValue"* null
  %108 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %92, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %107, float* %87) #15, !noalias !2
  %109 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 2) #15, !noalias !2
  %110 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %109, i64 0, i32 0, i64 0
  %111 = load i8, i8* %110, align 8, !noalias !2
  %112 = and i8 %111, 7
  %113 = icmp eq i8 %112, 7
  %114 = bitcast %"class.skjson::Value"* %109 to %"class.skjson::ObjectValue"*
  %115 = select i1 %113, %"class.skjson::ObjectValue"* %114, %"class.skjson::ObjectValue"* null
  %116 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %92, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %115, %struct.SkV2* %83) #15, !noalias !2
  %117 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 3) #15, !noalias !2
  %118 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %117, i64 0, i32 0, i64 0
  %119 = load i8, i8* %118, align 8, !noalias !2
  %120 = and i8 %119, 7
  %121 = icmp eq i8 %120, 7
  %122 = bitcast %"class.skjson::Value"* %117 to %"class.skjson::ObjectValue"*
  %123 = select i1 %121, %"class.skjson::ObjectValue"* %122, %"class.skjson::ObjectValue"* null
  %124 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %92, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %123, float* %89) #15, !noalias !2
  %125 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 4) #15, !noalias !2
  %126 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %125, i64 0, i32 0, i64 0
  %127 = load i8, i8* %126, align 8, !noalias !2
  %128 = and i8 %127, 7
  %129 = icmp eq i8 %128, 7
  %130 = bitcast %"class.skjson::Value"* %125 to %"class.skjson::ObjectValue"*
  %131 = select i1 %129, %"class.skjson::ObjectValue"* %130, %"class.skjson::ObjectValue"* null
  %132 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %92, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %131, float* %91) #15, !noalias !2
  %133 = ptrtoint i8* %9 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %92) #15, !noalias !2
  %134 = bitcast i8* %80 to %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"**
  %135 = load %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"** %134, align 8, !noalias !11
  %136 = icmp eq %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %72
  %138 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw add i32* %138, i32 1 monotonic
  br label %140

140:                                              ; preds = %72, %137
  %141 = ptrtoint %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %135 to i64
  %142 = bitcast i8* %79 to %class.sk_sp.6**
  %143 = load %class.sk_sp.6*, %class.sk_sp.6** %142, align 8, !noalias !11
  %144 = getelementptr inbounds i8, i8* %9, i64 24
  %145 = bitcast i8* %144 to %class.sk_sp.6**
  %146 = load %class.sk_sp.6*, %class.sk_sp.6** %145, align 8, !noalias !11
  %147 = icmp eq %class.sk_sp.6* %143, %146
  br i1 %147, label %180, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %8, i64 0, i32 11
  %150 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %149, align 8, !noalias !11
  %151 = bitcast %class.sk_sp.6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #15, !noalias !11
  %152 = bitcast %class.sk_sp.6* %6 to i64*
  store i64 %133, i64* %152, align 8, !noalias !11
  %153 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %150, i64 0, i32 0, i32 1
  %154 = load %class.sk_sp.6*, %class.sk_sp.6** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %150, i64 0, i32 0, i32 2, i32 0, i32 0
  %156 = load %class.sk_sp.6*, %class.sk_sp.6** %155, align 8
  %157 = icmp ult %class.sk_sp.6* %154, %156
  br i1 %157, label %158, label %164

158:                                              ; preds = %148
  %159 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %159, align 8, !noalias !11
  %160 = bitcast %class.sk_sp.6* %154 to i64*
  store i64 %133, i64* %160, align 8
  %161 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %154, i64 1
  %162 = ptrtoint %class.sk_sp.6* %161 to i64
  %163 = bitcast %class.sk_sp.6** %153 to i64*
  store i64 %162, i64* %163, align 8
  br label %165

164:                                              ; preds = %148
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %150, %class.sk_sp.6* nonnull dereferenceable(8) %6) #15
  br label %165

165:                                              ; preds = %164, %158
  %166 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %167 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %166, align 8, !noalias !11
  %168 = icmp eq %"class.skottie::internal::Animator"* %167, null
  br i1 %168, label %179, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %167, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 -1 acq_rel
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %179

173:                                              ; preds = %169
  %174 = bitcast %"class.skottie::internal::Animator"* %167 to %class.SkRefCntBase*
  %175 = bitcast %"class.skottie::internal::Animator"* %167 to void (%class.SkRefCntBase*)***
  %176 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %175, align 8
  %177 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %176, i64 2
  %178 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %177, align 8
  call void %178(%class.SkRefCntBase* nonnull %174) #15
  br label %179

179:                                              ; preds = %173, %169, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #15, !noalias !11
  br label %195

180:                                              ; preds = %140
  %181 = bitcast i8* %9 to %"class.skottie::internal::Animator"*
  %182 = bitcast i8* %9 to i1 (%"class.skottie::internal::Animator"*, float)***
  %183 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %182, align 8, !noalias !11
  %184 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %183, i64 3
  %185 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %184, align 8
  %186 = call zeroext i1 %185(%"class.skottie::internal::Animator"* nonnull %181, float 0.000000e+00) #15
  %187 = atomicrmw add i32* %77, i32 -1 acq_rel, !noalias !11
  %188 = icmp eq i32 %187, 1
  br i1 %188, label %189, label %195

189:                                              ; preds = %180
  %190 = bitcast i8* %9 to %class.SkRefCntBase*
  %191 = bitcast i8* %9 to void (%class.SkRefCntBase*)***
  %192 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %191, align 8, !noalias !11
  %193 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %192, i64 2
  %194 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %193, align 8
  call void %194(%class.SkRefCntBase* nonnull %190) #15
  br label %195

195:                                              ; preds = %189, %180, %179
  %196 = bitcast %class.sk_sp.32* %0 to i64*
  store i64 %141, i64* %196, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #15
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117RadialWipeAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #15
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #15
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117RadialWipeAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"** %2, align 8
  %4 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %3, i64 0, i32 2
  %6 = load float, float* %5, align 8
  %7 = load float, float* %4, align 4
  %8 = fcmp oeq float %6, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  store float %7, float* %5, align 8
  %10 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %3 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %10, i1 zeroext true) #15
  %11 = load %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"** %2, align 8
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* [ %3, %1 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %13, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = load float, float* %14, align 4
  %18 = fcmp oeq float %16, %17
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  store float %17, float* %15, align 4
  %20 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %13 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %20, i1 zeroext true) #15
  %21 = load %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"** %2, align 8
  br label %22

22:                                               ; preds = %12, %19
  %23 = phi %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* [ %13, %12 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 1
  %25 = bitcast %struct.SkV2* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 1, i32 1
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %23, i64 0, i32 1
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %30, i64 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = bitcast i32 %26 to float
  %34 = fcmp oeq float %32, %33
  br i1 %34, label %35, label %40

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %23, i64 0, i32 1, i32 1
  %37 = load float, float* %36, align 4
  %38 = bitcast i32 %29 to float
  %39 = fcmp oeq float %37, %38
  br i1 %39, label %46, label %40

40:                                               ; preds = %35, %22
  %41 = bitcast %struct.SkPoint* %30 to i32*
  store i32 %26, i32* %41, align 8
  %42 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %23, i64 0, i32 1, i32 1
  %43 = bitcast float* %42 to i32*
  store i32 %29, i32* %43, align 4
  %44 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %23 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %44, i1 zeroext true) #15
  %45 = load %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"** %2, align 8
  br label %46

46:                                               ; preds = %35, %40
  %47 = phi %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* [ %23, %35 ], [ %45, %40 ]
  %48 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 4
  %49 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %47, i64 0, i32 4
  %50 = load float, float* %49, align 8
  %51 = load float, float* %48, align 4
  %52 = fcmp oeq float %50, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  store float %51, float* %49, align 8
  %54 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %47 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %54, i1 zeroext true) #15
  %55 = load %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*, %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"** %2, align 8
  br label %56

56:                                               ; preds = %46, %53
  %57 = phi %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* [ %47, %46 ], [ %55, %53 ]
  %58 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter", %"class.skottie::internal::(anonymous namespace)::RadialWipeAdapter"* %0, i64 0, i32 5
  %59 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %57, i64 0, i32 5
  %60 = load float, float* %59, align 4
  %61 = load float, float* %58, align 4
  %62 = fcmp oeq float %60, %61
  br i1 %62, label %65, label %63

63:                                               ; preds = %56
  store float %61, float* %59, align 4
  %64 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %57 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %64, i1 zeroext true) #15
  br label %65

65:                                               ; preds = %56, %63
  ret void
}

declare void @_ZN4sksg16CustomRenderNodeC2EONSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::CustomRenderNode"*, %"class.std::__1::vector.50"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeD2Ev(%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 6, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 0
  tail call void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"* %17) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeD0Ev(%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 6, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 0
  tail call void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"* %17) #15
  %18 = bitcast %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZN7skottie8internal12_GLOBAL__N_115RWipeRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix(%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* nocapture, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca <4 x i32>, align 16
  %5 = alloca %class.sk_sp.57, align 8
  %6 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %class.sk_sp.32** %6 to %"class.sksg::Node"***
  %8 = load %"class.sksg::Node"**, %"class.sksg::Node"*** %7, align 8
  %9 = load %"class.sksg::Node"*, %"class.sksg::Node"** %8, align 8
  %10 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %9, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #15
  %11 = bitcast %struct.SkRect* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %14 = bitcast float* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 2
  %17 = load float, float* %16, align 8
  %18 = fcmp ult float %17, 1.000000e+02
  br i1 %18, label %19, label %120

19:                                               ; preds = %3
  %20 = fcmp ugt float %17, 0.000000e+00
  br i1 %20, label %36, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 7
  store float 0.000000e+00, float* %22, align 8
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 6, i32 0
  %24 = load %class.SkShader*, %class.SkShader** %23, align 8
  store %class.SkShader* null, %class.SkShader** %23, align 8
  %25 = icmp eq %class.SkShader* %24, null
  br i1 %25, label %120, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.SkShader, %class.SkShader* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %120

30:                                               ; preds = %26
  %31 = bitcast %class.SkShader* %24 to %class.SkRefCntBase*
  %32 = bitcast %class.SkShader* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  tail call void %35(%class.SkRefCntBase* nonnull %31) #15
  br label %120

36:                                               ; preds = %19
  %37 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 5
  %38 = load float, float* %37, align 4
  %39 = fcmp olt float %38, 0.000000e+00
  %40 = select i1 %39, float 0.000000e+00, float %38
  %41 = fmul float %40, 0x3FD3333340000000
  %42 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 7
  store float %41, float* %42, align 8
  %43 = fmul float %17, 0x3F847AE140000000
  %44 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 3
  %45 = load float, float* %44, align 4
  %46 = fadd float %45, -9.000000e+01
  %47 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 4
  %48 = load float, float* %47, align 8
  %49 = fadd float %48, 5.000000e-01
  %50 = tail call float @llvm.floor.f32(float %49) #15
  %51 = fcmp olt float %50, 0x41DFFFFFE0000000
  %52 = select i1 %51, float %50, float 0x41DFFFFFE0000000
  %53 = fcmp ogt float %52, 0xC1DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0xC1DFFFFFE0000000
  %55 = fptosi float %54 to i32
  %56 = icmp eq i32 %55, 2
  %57 = select i1 %56, float -3.600000e+02, float 0.000000e+00
  %58 = icmp eq i32 %55, 3
  %59 = select i1 %58, float -1.800000e+02, float %57
  %60 = fmul float %43, %59
  %61 = fadd float %46, %60
  %62 = fpext float %61 to double
  %63 = tail call double @fmod(double %62, double 3.600000e+02) #15
  %64 = fptrunc double %63 to float
  %65 = fcmp olt float %64, 0.000000e+00
  %66 = fadd float %64, 3.600000e+02
  %67 = select i1 %65, float %66, float %64
  %68 = fmul float %43, 3.600000e+02
  %69 = fadd float %68, %67
  %70 = fpext float %69 to double
  %71 = tail call double @fmod(double %70, double 3.600000e+02) #15
  %72 = fptrunc double %71 to float
  %73 = fcmp olt float %72, 0.000000e+00
  %74 = fadd float %72, 3.600000e+02
  %75 = select i1 %73, float %74, float %72
  %76 = fcmp ogt float %67, %75
  %77 = select i1 %76, float %75, float %67
  %78 = select i1 %76, float %67, float %75
  %79 = select i1 %76, <2 x i32> <i32 0, i32 -1>, <2 x i32> <i32 -1, i32 0>
  %80 = shufflevector <2 x i32> %79, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %81 = bitcast <4 x i32>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #15
  %82 = getelementptr inbounds <4 x i32>, <4 x i32>* %4, i64 0, i64 0
  store <4 x i32> %80, <4 x i32>* %4, align 16
  %83 = bitcast %class.sk_sp.57* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #15
  %84 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 1, i32 0
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 1, i32 1
  %87 = load float, float* %86, align 4
  call void @_ZN16SkGradientShader9MakeSweepEffPKjPKfi10SkTileModeffjPK8SkMatrix(%class.sk_sp.57* nonnull sret %5, float %85, float %87, i32* nonnull %82, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZZN7skottie8internal12_GLOBAL__N_115RWipeRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrixE8grad_pos, i64 0, i64 0), i32 4, i32 0, float %77, float %78, i32 0, %class.SkMatrix* null) #15
  %88 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 6
  %89 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %5, i64 0, i32 0
  %90 = bitcast %class.sk_sp.57* %5 to i64*
  %91 = load i64, i64* %90, align 8
  store %class.SkShader* null, %class.SkShader** %89, align 8
  %92 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %88, i64 0, i32 0
  %93 = load %class.SkShader*, %class.SkShader** %92, align 8
  %94 = bitcast %class.sk_sp.57* %88 to i64*
  store i64 %91, i64* %94, align 8
  %95 = icmp eq %class.SkShader* %93, null
  br i1 %95, label %106, label %96

96:                                               ; preds = %36
  %97 = getelementptr inbounds %class.SkShader, %class.SkShader* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = bitcast %class.SkShader* %93 to %class.SkRefCntBase*
  %102 = bitcast %class.SkShader* %93 to void (%class.SkRefCntBase*)***
  %103 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, i64 2
  %105 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, align 8
  call void %105(%class.SkRefCntBase* nonnull %101) #15
  br label %106

106:                                              ; preds = %36, %96, %100
  %107 = load %class.SkShader*, %class.SkShader** %89, align 8
  %108 = icmp eq %class.SkShader* %107, null
  br i1 %108, label %119, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %class.SkShader, %class.SkShader* %107, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %109
  %114 = bitcast %class.SkShader* %107 to %class.SkRefCntBase*
  %115 = bitcast %class.SkShader* %107 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8
  call void %118(%class.SkRefCntBase* nonnull %114) #15
  br label %119

119:                                              ; preds = %106, %109, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #15
  br label %120

120:                                              ; preds = %119, %21, %26, %30, %3
  %121 = phi <2 x float> [ zeroinitializer, %3 ], [ %12, %30 ], [ %12, %26 ], [ %12, %21 ], [ %12, %119 ]
  %122 = phi <2 x float> [ zeroinitializer, %3 ], [ %15, %30 ], [ %15, %26 ], [ %15, %21 ], [ %15, %119 ]
  %123 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %121, 0
  %124 = insertvalue { <2 x float>, <2 x float> } %123, <2 x float> %122, 1
  ret { <2 x float>, <2 x float> } %124
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK7skottie8internal12_GLOBAL__N_115RWipeRenderNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE(%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* nocapture readonly, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %5 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %6 = alloca %class.sk_sp.57, align 8
  %7 = alloca %class.SkMatrix, align 4
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 2
  %9 = load float, float* %8, align 8
  %10 = fcmp ult float %9, 1.000000e+02
  br i1 %10, label %11, label %42

11:                                               ; preds = %3
  %12 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %12) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%"class.sksg::RenderNode::ScopedRenderContext"* @__const._ZNK7skottie8internal12_GLOBAL__N_115RWipeRenderNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.local_ctx to i8*), i64 136, i1 false)
  %13 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %13) #15
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #15
  %14 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %6, i64 0, i32 0
  %15 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 6, i32 0
  %16 = load %class.SkShader*, %class.SkShader** %15, align 8
  %17 = icmp eq %class.SkShader* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.SkShader, %class.SkShader* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  br label %21

21:                                               ; preds = %11, %18
  store %class.SkShader* %16, %class.SkShader** %14, align 8
  %22 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #15
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %7, %class.SkCanvas* %1) #15
  %23 = call dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext18modulateMaskShaderE5sk_spI8SkShaderERK8SkMatrix(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %class.sk_sp.57* nonnull %6, %class.SkMatrix* nonnull dereferenceable(40) %7) #15
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4, %"class.sksg::RenderNode::ScopedRenderContext"* dereferenceable(136) %23)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #15
  %24 = load %class.SkShader*, %class.SkShader** %14, align 8
  %25 = icmp eq %class.SkShader* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.SkShader, %class.SkShader* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %class.SkShader* %24 to %class.SkRefCntBase*
  %32 = bitcast %class.SkShader* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #15
  br label %36

36:                                               ; preds = %21, %26, %30
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %13) #15
  %37 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode", %"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %class.sk_sp.32*, %class.sk_sp.32** %37, align 8
  %39 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %38, i64 0, i32 0
  %40 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %39, align 8
  %41 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %4, i64 0, i32 1
  call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %40, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %41) #15
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %12) #15
  br label %42

42:                                               ; preds = %3, %36
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.sksg::RenderNode"* @_ZNK7skottie8internal12_GLOBAL__N_115RWipeRenderNode8onNodeAtERK7SkPoint(%"class.skottie::internal::(anonymous namespace)::RWipeRenderNode"* nocapture readnone, %struct.SkPoint* nocapture readnone dereferenceable(8)) unnamed_addr #5 align 2 {
  ret %"class.sksg::RenderNode"* null
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"*) unnamed_addr #9

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN16SkGradientShader9MakeSweepEffPKjPKfi10SkTileModeffjPK8SkMatrix(%class.sk_sp.57* sret, float, float, i32*, float*, i32, i32, float, float, i32, %class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #11

declare void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #3

declare dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext18modulateMaskShaderE5sk_spI8SkShaderERK8SkMatrix(%"class.sksg::RenderNode::ScopedRenderContext"*, %class.sk_sp.57*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_(%"class.sksg::RenderNode::ScopedRenderContext"*, %"class.sksg::RenderNode::ScopedRenderContext"* dereferenceable(136)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 3
  %5 = bitcast %"struct.sksg::RenderNode::RenderContext"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %7 = bitcast %class.SkMatrix* %4 to i8*
  %8 = bitcast %class.SkMatrix* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 40, i1 false) #15
  %9 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 4
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %11 = bitcast %class.SkMatrix* %9 to i8*
  %12 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 40, i1 false) #15
  %13 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 5
  store float 1.000000e+00, float* %13, align 8
  %14 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 6
  store i32 3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %15, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %16, align 8
  %17 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %0 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %20, i64 0, i32 0, i32 0
  %22 = bitcast %"struct.sksg::RenderNode::RenderContext"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %21, align 8
  %24 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %3, i64 0, i32 0, i32 0
  %25 = load %class.SkColorFilter*, %class.SkColorFilter** %24, align 8
  %26 = bitcast %"struct.sksg::RenderNode::RenderContext"* %3 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %class.SkColorFilter* %25, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %class.SkColorFilter* %25 to %class.SkRefCntBase*
  %34 = bitcast %class.SkColorFilter* %25 to void (%class.SkRefCntBase*)***
  %35 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, i64 2
  %37 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, align 8
  tail call void %37(%class.SkRefCntBase* nonnull %33) #15
  br label %38

38:                                               ; preds = %32, %28, %2
  %39 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 1
  %41 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %40, i64 0, i32 0
  %42 = bitcast %class.sk_sp.57* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %class.SkShader* null, %class.SkShader** %41, align 8
  %44 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %39, i64 0, i32 0
  %45 = load %class.SkShader*, %class.SkShader** %44, align 8
  %46 = bitcast %class.sk_sp.57* %39 to i64*
  store i64 %43, i64* %46, align 8
  %47 = icmp eq %class.SkShader* %45, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %class.SkShader, %class.SkShader* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkShader* %45 to %class.SkRefCntBase*
  %54 = bitcast %class.SkShader* %45 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #15
  br label %58

58:                                               ; preds = %52, %48, %38
  %59 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2
  %60 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 2
  %61 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %60, i64 0, i32 0
  %62 = bitcast %class.sk_sp.57* %60 to i64*
  %63 = load i64, i64* %62, align 8
  store %class.SkShader* null, %class.SkShader** %61, align 8
  %64 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %59, i64 0, i32 0
  %65 = load %class.SkShader*, %class.SkShader** %64, align 8
  %66 = bitcast %class.sk_sp.57* %59 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %class.SkShader* %65, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %class.SkShader, %class.SkShader* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkShader* %65 to %class.SkRefCntBase*
  %74 = bitcast %class.SkShader* %65 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  tail call void %77(%class.SkRefCntBase* nonnull %73) #15
  br label %78

78:                                               ; preds = %58, %68, %72
  %79 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 3
  %80 = bitcast %class.SkMatrix* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %80, i64 88, i1 false) #15
  %81 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 2
  %82 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %81, i64 0, i32 0
  %83 = bitcast %class.sk_sp.57* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.SkShader* null, %class.SkShader** %82, align 8
  %85 = load %class.SkShader*, %class.SkShader** %16, align 8
  %86 = bitcast %class.sk_sp.57* %15 to i64*
  store i64 %84, i64* %86, align 8
  %87 = icmp eq %class.SkShader* %85, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %class.SkShader, %class.SkShader* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %class.SkShader* %85 to %class.SkRefCntBase*
  %94 = bitcast %class.SkShader* %85 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  tail call void %97(%class.SkRefCntBase* nonnull %93) #15
  br label %98

98:                                               ; preds = %78, %88, %92
  %99 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 3
  store i32 %100, i32* %101, align 8
  store i32 -1, i32* %99, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"*) unnamed_addr #9

declare void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #12 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %struct.SkV2*) local_unnamed_addr #3

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !12

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #15
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #14
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEE4MakeIJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKNS0_16AnimationBuilderEEEESB_IS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117RadialWipeAdapterENS2_15RWipeRenderNodeEE4MakeIJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKNS0_16AnimationBuilderEEEESB_IS3_EDpOT_"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117RadialWipeAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117RadialWipeAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_"}
!7 = !{!8, !3, !5}
!8 = distinct !{!8, !9, !"_Z10sk_make_spIN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeEJ5sk_spIN4sksg10RenderNodeEEEES4_IT_EDpOT0_: argument 0"}
!9 = distinct !{!9, !"_Z10sk_make_spIN7skottie8internal12_GLOBAL__N_115RWipeRenderNodeEJ5sk_spIN4sksg10RenderNodeEEEES4_IT_EDpOT0_"}
!10 = !{!8, !3}
!11 = !{!5}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
