; ModuleID = '../../chrome/common/profiler/thread_profiler_configuration.cc'
source_filename = "../../chrome/common/profiler/thread_profiler_configuration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%class.ThreadProfilerConfiguration = type { %"class.std::__1::unique_ptr", %"class.absl::variant" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.ThreadProfilerPlatformConfiguration* }
%class.ThreadProfilerPlatformConfiguration = type { i32 (...)** }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"struct.base::StackSamplingProfiler::SamplingParams" = type { %"class.base::TimeDelta", i32, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.ThreadProfilerConfiguration::Variation" = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNS_8optionalIN27ThreadProfilerConfiguration14VariationGroupEEEEET_v = comdat any

@_ZZN27ThreadProfilerConfiguration3GetEvE29thread_profiler_configuration = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN27ThreadProfilerConfiguration3GetEvE29thread_profiler_configuration = internal global i64 0, align 8
@.str = private unnamed_addr constant [37 x i8] c"SyntheticStackProfilingConfiguration\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"DisabledModuleNotInstalled\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Control\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@_ZN8switches19kStartStackProfilerE = external constant [0 x i8], align 1
@_ZN8switches30kStartStackProfilerBrowserTestE = external constant [0 x i8], align 1
@_ZN8switches21kDisableStackProfilerE = external constant [0 x i8], align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"0 == relative_populations.experiment % 2\00", align 1
@.str.6 = private unnamed_addr constant [62 x i8] c"../../chrome/common/profiler/thread_profiler_configuration.cc\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1

@_ZN27ThreadProfilerConfigurationC1Ev = hidden unnamed_addr alias void (%class.ThreadProfilerConfiguration*), void (%class.ThreadProfilerConfiguration*)* @_ZN27ThreadProfilerConfigurationC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %class.ThreadProfilerConfiguration* @_ZN27ThreadProfilerConfiguration3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN27ThreadProfilerConfiguration3GetEvE29thread_profiler_configuration to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN27ThreadProfilerConfiguration3GetEvE29thread_profiler_configuration) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN27ThreadProfilerConfigurationC2Ev(%class.ThreadProfilerConfiguration* bitcast (%"class.base::NoDestructor"* @_ZZN27ThreadProfilerConfiguration3GetEvE29thread_profiler_configuration to %class.ThreadProfilerConfiguration*)) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN27ThreadProfilerConfiguration3GetEvE29thread_profiler_configuration) #10
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %class.ThreadProfilerConfiguration* bitcast (%"class.base::NoDestructor"* @_ZZN27ThreadProfilerConfiguration3GetEvE29thread_profiler_configuration to %class.ThreadProfilerConfiguration*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK27ThreadProfilerConfiguration17GetSamplingParamsEv(%"struct.base::StackSamplingProfiler::SamplingParams"* noalias nocapture sret, %class.ThreadProfilerConfiguration* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"struct.base::StackSamplingProfiler::SamplingParams"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 16, i1 false)
  %5 = getelementptr inbounds %"struct.base::StackSamplingProfiler::SamplingParams", %"struct.base::StackSamplingProfiler::SamplingParams"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.base::StackSamplingProfiler::SamplingParams", %"struct.base::StackSamplingProfiler::SamplingParams"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.base::StackSamplingProfiler::SamplingParams", %"struct.base::StackSamplingProfiler::SamplingParams"* %0, i64 0, i32 2, i32 0
  store i64 0, i64* %5, align 8
  %8 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %10 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_124IsBrowserTestModeEnabledEv()
  %11 = select i1 %10, i64 1000000, i64 30000000
  store i64 %11, i64* %9, align 8
  store i64 100000, i64* %7, align 8
  %12 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %3, i64 100000)
  %13 = fptosi double %12 to i32
  store i32 %13, i32* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_124IsBrowserTestModeEnabledEv() unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #10
  %3 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #10
  %4 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kStartStackProfilerE, i64 0, i64 0)) #10
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %1, %"class.base::CommandLine"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kStartStackProfilerE, i64 0, i64 0), i64 %4) #10
  %5 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kStartStackProfilerBrowserTestE, i64 0, i64 0)) #10
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp eq i64 %5, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %0
  %16 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %1, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kStartStackProfilerBrowserTestE, i64 0, i64 0), i64 %5) #10
  %17 = icmp eq i32 %16, 0
  %18 = load i8, i8* %7, align 1
  br label %19

19:                                               ; preds = %0, %15
  %20 = phi i8 [ %18, %15 ], [ %8, %0 ]
  %21 = phi i1 [ %17, %15 ], [ false, %0 ]
  %22 = icmp slt i8 %20, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %19, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #10
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #10
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0)) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK27ThreadProfilerConfiguration34IsProfilerEnabledForCurrentProcessEv(%class.ThreadProfilerConfiguration* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1
  %3 = icmp ne %"class.absl::variant"* %2, null
  %4 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 1
  %7 = and i1 %3, %6
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = bitcast %"class.absl::variant"* %2 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br label %26

12:                                               ; preds = %1
  %13 = icmp eq i64 %5, 0
  br i1 %13, label %16, label %14, !prof !3

14:                                               ; preds = %12
  %15 = tail call dereferenceable(8) %"class.absl::optional"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNS_8optionalIN27ThreadProfilerConfiguration14VariationGroupEEEEET_v() #12
  unreachable

16:                                               ; preds = %12
  %17 = bitcast %"class.absl::variant"* %2 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = trunc i64 %18 to i8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = lshr i64 %18, 32
  %23 = trunc i64 %22 to i32
  %24 = or i32 %23, 1
  %25 = icmp eq i32 %24, 3
  br label %26

26:                                               ; preds = %21, %16, %8
  %27 = phi i1 [ %11, %8 ], [ %25, %21 ], [ false, %16 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN27ThreadProfilerConfiguration23EnableForVariationGroupEN4absl8optionalINS_14VariationGroupEEE(i64) local_unnamed_addr #0 align 2 {
  %2 = trunc i64 %0 to i8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = lshr i64 %0, 32
  %6 = trunc i64 %5 to i32
  %7 = or i32 %6, 1
  %8 = icmp eq i32 %7, 3
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK27ThreadProfilerConfiguration43IsProfilerEnabledForCurrentProcessAndThreadEN7metrics22CallStackProfileParams6ThreadE(%class.ThreadProfilerConfiguration* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  switch i64 %5, label %10 [
    i64 1, label %6
    i64 0, label %12
  ], !prof !4

6:                                                ; preds = %2
  %7 = bitcast %"class.absl::variant"* %3 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %22, label %32

10:                                               ; preds = %2
  %11 = tail call dereferenceable(8) %"class.absl::optional"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNS_8optionalIN27ThreadProfilerConfiguration14VariationGroupEEEEET_v() #12
  unreachable

12:                                               ; preds = %2
  %13 = bitcast %"class.absl::variant"* %3 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %12
  %18 = lshr i64 %14, 32
  %19 = trunc i64 %18 to i32
  %20 = or i32 %19, 1
  %21 = icmp eq i32 %20, 3
  br i1 %21, label %22, label %32

22:                                               ; preds = %6, %17
  %23 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %class.ThreadProfilerPlatformConfiguration*, %class.ThreadProfilerPlatformConfiguration** %23, align 8
  %25 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #10
  %26 = tail call i32 @_Z23GetProfileParamsProcessRKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56) %25) #10
  %27 = bitcast %class.ThreadProfilerPlatformConfiguration* %24 to i1 (%class.ThreadProfilerPlatformConfiguration*, i32, i32)***
  %28 = load i1 (%class.ThreadProfilerPlatformConfiguration*, i32, i32)**, i1 (%class.ThreadProfilerPlatformConfiguration*, i32, i32)*** %27, align 8
  %29 = getelementptr inbounds i1 (%class.ThreadProfilerPlatformConfiguration*, i32, i32)*, i1 (%class.ThreadProfilerPlatformConfiguration*, i32, i32)** %28, i64 6
  %30 = load i1 (%class.ThreadProfilerPlatformConfiguration*, i32, i32)*, i1 (%class.ThreadProfilerPlatformConfiguration*, i32, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%class.ThreadProfilerPlatformConfiguration* %24, i32 %26, i32 %1) #10
  br label %32

32:                                               ; preds = %12, %6, %22, %17
  %33 = phi i1 [ false, %17 ], [ %31, %22 ], [ false, %6 ], [ false, %12 ]
  ret i1 %33
}

declare i32 @_Z23GetProfileParamsProcessRKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #3

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK27ThreadProfilerConfiguration22GetSyntheticFieldTrialEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_(%class.ThreadProfilerConfiguration* nocapture readonly, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca [15 x i8], align 8
  %5 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %3
  %9 = tail call dereferenceable(8) %"class.absl::optional"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNS_8optionalIN27ThreadProfilerConfiguration14VariationGroupEEEEET_v() #12
  unreachable

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 4, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %46, label %14

14:                                               ; preds = %10
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i64 36) #10
  %16 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %16)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 15, i1 false)
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %21, %14
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* null, i8** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast i64* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %16, i64 15, i1 false)
  %28 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 23
  store i8 0, i8* %29, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %16)
  %30 = load i8, i8* %11, align 4, !range !5
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %33, !prof !6

32:                                               ; preds = %24
  tail call void @llvm.trap() #10
  unreachable

33:                                               ; preds = %24
  %34 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = load i32, i32* %34, align 4
  switch i32 %35, label %46 [
    i32 0, label %36
    i32 1, label %40
    i32 2, label %42
    i32 3, label %44
  ]

36:                                               ; preds = %33
  store i8 8, i8* %18, align 1
  %37 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  store i64 7234307546238118212, i64* %37, align 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast i64* %38 to i8*
  store i8 0, i8* %39, align 1
  br label %46

40:                                               ; preds = %33
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i64 26) #10
  br label %46

42:                                               ; preds = %33
  store i8 7, i8* %18, align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7, i1 false) #10
  %43 = getelementptr inbounds i8, i8* %28, i64 7
  store i8 0, i8* %43, align 1
  br label %46

44:                                               ; preds = %33
  store i8 7, i8* %18, align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7, i1 false) #10
  %45 = getelementptr inbounds i8, i8* %28, i64 7
  store i8 0, i8* %45, align 1
  br label %46

46:                                               ; preds = %10, %44, %42, %40, %36, %33
  %47 = phi i1 [ false, %10 ], [ true, %33 ], [ true, %36 ], [ true, %40 ], [ true, %42 ], [ true, %44 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK27ThreadProfilerConfiguration38AppendCommandLineSwitchForChildProcessEPN4base11CommandLineE(%class.ThreadProfilerConfiguration* nocapture readonly, %"class.base::CommandLine"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %2
  %7 = tail call dereferenceable(8) %"class.absl::optional"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNS_8optionalIN27ThreadProfilerConfiguration14VariationGroupEEEEET_v() #12
  unreachable

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.absl::optional"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = trunc i64 %11 to i8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %36, label %14

14:                                               ; preds = %8
  %15 = lshr i64 %11, 32
  %16 = trunc i64 %15 to i32
  %17 = or i32 %16, 1
  %18 = icmp eq i32 %17, 3
  br i1 %18, label %19, label %36

19:                                               ; preds = %14
  %20 = tail call i32 @_Z23GetProfileParamsProcessRKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56) %1) #10
  %21 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.ThreadProfilerPlatformConfiguration*, %class.ThreadProfilerPlatformConfiguration** %21, align 8
  %23 = bitcast %class.ThreadProfilerPlatformConfiguration* %22 to double (%class.ThreadProfilerPlatformConfiguration*, i32)***
  %24 = load double (%class.ThreadProfilerPlatformConfiguration*, i32)**, double (%class.ThreadProfilerPlatformConfiguration*, i32)*** %23, align 8
  %25 = getelementptr inbounds double (%class.ThreadProfilerPlatformConfiguration*, i32)*, double (%class.ThreadProfilerPlatformConfiguration*, i32)** %24, i64 5
  %26 = load double (%class.ThreadProfilerPlatformConfiguration*, i32)*, double (%class.ThreadProfilerPlatformConfiguration*, i32)** %25, align 8
  %27 = tail call double %26(%class.ThreadProfilerPlatformConfiguration* %22, i32 %20) #10
  %28 = tail call double @_ZN4base10RandDoubleEv() #10
  %29 = fcmp olt double %28, %27
  br i1 %29, label %30, label %36

30:                                               ; preds = %19
  %31 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_124IsBrowserTestModeEnabledEv()
  %32 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kStartStackProfilerE, i64 0, i64 0)) #10
  br i1 %31, label %33, label %35

33:                                               ; preds = %30
  %34 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kStartStackProfilerBrowserTestE, i64 0, i64 0)) #10
  tail call void @_ZN4base11CommandLine17AppendSwitchASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kStartStackProfilerE, i64 0, i64 0), i64 %32, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kStartStackProfilerBrowserTestE, i64 0, i64 0), i64 %34) #10
  br label %36

35:                                               ; preds = %30
  tail call void @_ZN4base11CommandLine12AppendSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kStartStackProfilerE, i64 0, i64 0), i64 %32) #10
  br label %36

36:                                               ; preds = %8, %19, %35, %33, %14
  ret void
}

declare double @_ZN4base10RandDoubleEv() local_unnamed_addr #3

declare void @_ZN4base11CommandLine17AppendSwitchASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::CommandLine"*, i8*, i64, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base11CommandLine12AppendSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27ThreadProfilerConfigurationC2Ev(%class.ThreadProfilerConfiguration* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_124IsBrowserTestModeEnabledEv()
  %3 = tail call %class.ThreadProfilerPlatformConfiguration* @_ZN35ThreadProfilerPlatformConfiguration6CreateEb(i1 zeroext %2) #10
  %4 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.ThreadProfilerPlatformConfiguration* %3, %class.ThreadProfilerPlatformConfiguration** %4, align 8
  %5 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #10
  %6 = tail call i32 @_Z23GetProfileParamsProcessRKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56) %5) #10
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = load %class.ThreadProfilerPlatformConfiguration*, %class.ThreadProfilerPlatformConfiguration** %4, align 8
  %10 = tail call i64 @_ZN27ThreadProfilerConfiguration35GenerateBrowserProcessConfigurationERK35ThreadProfilerPlatformConfiguration(%class.ThreadProfilerPlatformConfiguration* dereferenceable(8) %9) #10
  %11 = and i64 %10, -4294967296
  br label %16

12:                                               ; preds = %1
  %13 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #10
  %14 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %13, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kStartStackProfilerE, i64 0, i64 0)) #10
  %15 = zext i1 %14 to i64
  br label %16

16:                                               ; preds = %8, %12
  %17 = phi i64 [ %10, %8 ], [ %15, %12 ]
  %18 = phi i64 [ %11, %8 ], [ 0, %12 ]
  %19 = phi i64 [ 0, %8 ], [ 1, %12 ]
  %20 = and i64 %17, 4294967295
  %21 = or i64 %18, %20
  %22 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1, i32 0
  %23 = bitcast %"class.absl::variant_internal::VariantStateBase"* %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %class.ThreadProfilerConfiguration, %class.ThreadProfilerConfiguration* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %19, i64* %24, align 8
  ret void
}

declare %class.ThreadProfilerPlatformConfiguration* @_ZN35ThreadProfilerPlatformConfiguration6CreateEb(i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN27ThreadProfilerConfiguration21GenerateConfigurationEN7metrics22CallStackProfileParams7ProcessERK35ThreadProfilerPlatformConfiguration(i32, %class.ThreadProfilerPlatformConfiguration* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %0, 1
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @_ZN27ThreadProfilerConfiguration35GenerateBrowserProcessConfigurationERK35ThreadProfilerPlatformConfiguration(%class.ThreadProfilerPlatformConfiguration* dereferenceable(8) %1)
  %6 = and i64 %5, -4294967296
  br label %11

7:                                                ; preds = %2
  %8 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #10
  %9 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kStartStackProfilerE, i64 0, i64 0)) #10
  %10 = zext i1 %9 to i64
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i64 [ %5, %4 ], [ %10, %7 ]
  %13 = phi i64 [ %6, %4 ], [ 0, %7 ]
  %14 = phi i64 [ 0, %4 ], [ 1, %7 ]
  %15 = and i64 %12, 4294967295
  %16 = or i64 %13, %15
  %17 = insertvalue { i64, i64 } undef, i64 %16, 0
  %18 = insertvalue { i64, i64 } %17, i64 %14, 1
  ret { i64, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN27ThreadProfilerConfiguration20ChooseVariationGroupESt16initializer_listINS_9VariationEE(%"struct.ThreadProfilerConfiguration::Variation"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %0, i64 %1
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = shl nsw i64 %1, 3
  %7 = add i64 %6, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %10 = and i64 %9, 7
  %11 = icmp ult i64 %7, 56
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = sub nsw i64 %9, %10
  br label %35

14:                                               ; preds = %2
  %15 = tail call i32 @_ZN4base7RandIntEii(i32 0, i32 -1) #10
  br label %81

16:                                               ; preds = %35, %5
  %17 = phi i32 [ undef, %5 ], [ %62, %35 ]
  %18 = phi i32 [ 0, %5 ], [ %62, %35 ]
  %19 = phi %"struct.ThreadProfilerConfiguration::Variation"* [ %0, %5 ], [ %63, %35 ]
  %20 = icmp eq i64 %10, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %16, %21
  %22 = phi i32 [ %27, %21 ], [ %18, %16 ]
  %23 = phi %"struct.ThreadProfilerConfiguration::Variation"* [ %28, %21 ], [ %19, %16 ]
  %24 = phi i64 [ %29, %21 ], [ %10, %16 ]
  %25 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %23, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, %22
  %28 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %23, i64 1
  %29 = add i64 %24, -1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %21, !llvm.loop !7

31:                                               ; preds = %21, %16
  %32 = phi i32 [ %17, %16 ], [ %27, %21 ]
  %33 = add i32 %32, -1
  %34 = tail call i32 @_ZN4base7RandIntEii(i32 0, i32 %33) #10
  br i1 %4, label %81, label %66

35:                                               ; preds = %35, %12
  %36 = phi i32 [ 0, %12 ], [ %62, %35 ]
  %37 = phi %"struct.ThreadProfilerConfiguration::Variation"* [ %0, %12 ], [ %63, %35 ]
  %38 = phi i64 [ %13, %12 ], [ %64, %35 ]
  %39 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %37, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, %36
  %42 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %37, i64 1, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, %41
  %45 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %37, i64 2, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %46, %44
  %48 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %37, i64 3, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, %47
  %51 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %37, i64 4, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, %50
  %54 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %37, i64 5, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, %53
  %57 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %37, i64 6, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, %56
  %60 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %37, i64 7, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, %59
  %63 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %37, i64 8
  %64 = add i64 %38, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %16, label %35

66:                                               ; preds = %31, %75
  %67 = phi %"struct.ThreadProfilerConfiguration::Variation"* [ %76, %75 ], [ %0, %31 ]
  %68 = phi i32 [ %72, %75 ], [ 0, %31 ]
  %69 = icmp sge i32 %34, %68
  %70 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %67, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %71, %68
  %73 = icmp slt i32 %34, %72
  %74 = and i1 %69, %73
  br i1 %74, label %78, label %75

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %67, i64 1
  %77 = icmp eq %"struct.ThreadProfilerConfiguration::Variation"* %76, %3
  br i1 %77, label %81, label %66

78:                                               ; preds = %66
  %79 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %67, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br label %81

81:                                               ; preds = %75, %14, %31, %78
  %82 = phi i32 [ %80, %78 ], [ 0, %31 ], [ 0, %14 ], [ 0, %75 ]
  ret i32 %82
}

declare i32 @_ZN4base7RandIntEii(i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN27ThreadProfilerConfiguration35GenerateBrowserProcessConfigurationERK35ThreadProfilerPlatformConfiguration(%class.ThreadProfilerPlatformConfiguration* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca [3 x %"struct.ThreadProfilerConfiguration::Variation"], align 4
  %6 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #10
  %7 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kDisableStackProfilerE, i64 0, i64 0)) #10
  br i1 %7, label %74, label %8

8:                                                ; preds = %1
  %9 = tail call zeroext i1 @_ZNK35ThreadProfilerPlatformConfiguration11IsSupportedEN4absl8optionalIN12version_info7ChannelEEE(%class.ThreadProfilerPlatformConfiguration* %0, i64 0) #10
  br i1 %9, label %10, label %74

10:                                               ; preds = %8
  %11 = bitcast %class.ThreadProfilerPlatformConfiguration* %0 to i32 (%class.ThreadProfilerPlatformConfiguration*, i64)***
  %12 = load i32 (%class.ThreadProfilerPlatformConfiguration*, i64)**, i32 (%class.ThreadProfilerPlatformConfiguration*, i64)*** %11, align 8
  %13 = getelementptr inbounds i32 (%class.ThreadProfilerPlatformConfiguration*, i64)*, i32 (%class.ThreadProfilerPlatformConfiguration*, i64)** %12, i64 2
  %14 = load i32 (%class.ThreadProfilerPlatformConfiguration*, i64)*, i32 (%class.ThreadProfilerPlatformConfiguration*, i64)** %13, align 8
  %15 = tail call i32 %14(%class.ThreadProfilerPlatformConfiguration* %0, i64 0) #10
  switch i32 %15, label %21 [
    i32 2, label %16
    i32 3, label %74
  ]

16:                                               ; preds = %10
  %17 = bitcast %class.ThreadProfilerPlatformConfiguration* %0 to void (%class.ThreadProfilerPlatformConfiguration*)***
  %18 = load void (%class.ThreadProfilerPlatformConfiguration*)**, void (%class.ThreadProfilerPlatformConfiguration*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.ThreadProfilerPlatformConfiguration*)*, void (%class.ThreadProfilerPlatformConfiguration*)** %18, i64 3
  %20 = load void (%class.ThreadProfilerPlatformConfiguration*)*, void (%class.ThreadProfilerPlatformConfiguration*)** %19, align 8
  tail call void %20(%class.ThreadProfilerPlatformConfiguration* %0) #10
  br label %74

21:                                               ; preds = %10
  %22 = bitcast %class.ThreadProfilerPlatformConfiguration* %0 to i64 (%class.ThreadProfilerPlatformConfiguration*, i64)***
  %23 = load i64 (%class.ThreadProfilerPlatformConfiguration*, i64)**, i64 (%class.ThreadProfilerPlatformConfiguration*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%class.ThreadProfilerPlatformConfiguration*, i64)*, i64 (%class.ThreadProfilerPlatformConfiguration*, i64)** %23, i64 4
  %25 = load i64 (%class.ThreadProfilerPlatformConfiguration*, i64)*, i64 (%class.ThreadProfilerPlatformConfiguration*, i64)** %24, align 8
  %26 = tail call i64 %25(%class.ThreadProfilerPlatformConfiguration* %0, i64 0) #10
  %27 = trunc i64 %26 to i32
  %28 = lshr i64 %26, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = srem i32 %29, 2
  %33 = sdiv i32 %29, 2
  %34 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %46

37:                                               ; preds = %21
  %38 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #10
  %39 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %32) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0), i8* %38, i8* %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %31, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.6, i64 0, i64 0), i32 218, %"class.logging::CheckOpResult"* nonnull %3) #10
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  %47 = bitcast [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #10
  %48 = getelementptr inbounds [3 x %"struct.ThreadProfilerConfiguration::Variation"], [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5, i64 0, i64 0
  %49 = getelementptr inbounds [3 x %"struct.ThreadProfilerConfiguration::Variation"], [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5, i64 0, i64 0, i32 0
  store i32 3, i32* %49, align 4
  %50 = getelementptr inbounds [3 x %"struct.ThreadProfilerConfiguration::Variation"], [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5, i64 0, i64 0, i32 1
  store i32 %27, i32* %50, align 4
  %51 = getelementptr inbounds [3 x %"struct.ThreadProfilerConfiguration::Variation"], [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5, i64 0, i64 1, i32 0
  store i32 2, i32* %51, align 4
  %52 = getelementptr inbounds [3 x %"struct.ThreadProfilerConfiguration::Variation"], [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5, i64 0, i64 1, i32 1
  store i32 %33, i32* %52, align 4
  %53 = getelementptr inbounds [3 x %"struct.ThreadProfilerConfiguration::Variation"], [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5, i64 0, i64 2, i32 0
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds [3 x %"struct.ThreadProfilerConfiguration::Variation"], [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5, i64 0, i64 2, i32 1
  store i32 %33, i32* %54, align 4
  %55 = add nsw i32 %33, %27
  %56 = getelementptr inbounds [3 x %"struct.ThreadProfilerConfiguration::Variation"], [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5, i64 0, i64 2
  %57 = add nsw i32 %33, %55
  %58 = add i32 %57, -1
  %59 = call i32 @_ZN4base7RandIntEii(i32 0, i32 %58) #10
  %60 = icmp sgt i32 %59, -1
  %61 = icmp slt i32 %59, %27
  %62 = and i1 %60, %61
  br i1 %62, label %68, label %63

63:                                               ; preds = %46
  %64 = getelementptr inbounds [3 x %"struct.ThreadProfilerConfiguration::Variation"], [3 x %"struct.ThreadProfilerConfiguration::Variation"]* %5, i64 0, i64 1
  %65 = icmp sge i32 %59, %27
  %66 = icmp slt i32 %59, %55
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %80

68:                                               ; preds = %80, %63, %46
  %69 = phi %"struct.ThreadProfilerConfiguration::Variation"* [ %48, %46 ], [ %64, %63 ], [ %56, %80 ]
  %70 = getelementptr inbounds %"struct.ThreadProfilerConfiguration::Variation", %"struct.ThreadProfilerConfiguration::Variation"* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %80, %68
  %73 = phi i32 [ %71, %68 ], [ 0, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #10
  br label %74

74:                                               ; preds = %16, %10, %8, %1, %72
  %75 = phi i64 [ 1, %72 ], [ 0, %1 ], [ 0, %8 ], [ 1, %10 ], [ 1, %16 ]
  %76 = phi i32 [ %73, %72 ], [ undef, %1 ], [ undef, %8 ], [ 1, %10 ], [ 1, %16 ]
  %77 = zext i32 %76 to i64
  %78 = shl nuw i64 %77, 32
  %79 = or i64 %78, %75
  ret i64 %79

80:                                               ; preds = %63
  %81 = icmp sge i32 %59, %55
  %82 = icmp slt i32 %59, %57
  %83 = and i1 %81, %82
  br i1 %83, label %68, label %72
}

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK35ThreadProfilerPlatformConfiguration11IsSupportedEN4absl8optionalIN12version_info7ChannelEEE(%class.ThreadProfilerPlatformConfiguration*, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN27ThreadProfilerConfiguration33GenerateChildProcessConfigurationERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kStartStackProfilerE, i64 0, i64 0)) #10
  %3 = zext i1 %2 to i32
  ret i32 %3
}

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.absl::optional"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNS_8optionalIN27ThreadProfilerConfiguration14VariationGroupEEEEET_v() local_unnamed_addr #6 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #12
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
