; ModuleID = '../../net/quic/quic_connectivity_monitor.cc'
source_filename = "../../net/quic/quic_connectivity_monitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::QuicConnectivityMonitor" = type { %"class.net::QuicChromiumClientSession::ConnectivityObserver", i64, %"class.std::__1::set", %"class.std::__1::set", %"class.absl::optional", %"class.base::internal::ClampedNumeric", %"class.base::flat_map", %"class.base::flat_map.15", %"class.base::WeakPtrFactory.25" }
%"class.net::QuicChromiumClientSession::ConnectivityObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::internal::ClampedNumeric" }
%"class.base::internal::ClampedNumeric" = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::pair" = type { i32, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.15" = type { %"class.base::internal::flat_tree.16" }
%"class.base::internal::flat_tree.16" = type { %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair.19" = type { i32, i64 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair.19"* }
%"class.base::WeakPtrFactory.25" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.net::QuicChromiumClientSession"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.net::QuicChromiumClientSession" = type { %"class.quic::QuicSpdyClientSessionBase.base", %"class.net::MultiplexedSession", %"class.net::QuicConnectivityProbingManager::Delegate", %"class.net::QuicChromiumPacketReader::Visitor", %"class.net::QuicChromiumPacketWriter::Delegate", %"class.net::QuicSessionKey", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i32, i32, %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime::Delta", i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::TimeTicks", i32, %"class.base::TimeTicks", %"class.std::__1::unique_ptr.714", %"class.std::__1::unique_ptr.720", %"class.net::QuicStreamFactory"*, %"class.base::ObserverList", %"class.std::__1::vector.741", %"class.net::TransportSecurityState"*, %"class.net::SSLConfigService"*, %"class.std::__1::unique_ptr.761", %"class.std::__1::unique_ptr.767", %"class.std::__1::basic_string", i8, i8, %"class.std::__1::set.815", %"class.std::__1::list.825", %"class.std::__1::vector.832", %"class.base::OnceCallback", i64, %"class.base::SequencedTaskRunner"*, %"class.net::NetLogWithSource", %"class.std::__1::vector.856", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.std::__1::unique_ptr.871", %"class.std::__1::unique_ptr.884", i8, i8, %"class.net::ServerPushDelegate"*, i32, i32, i64, i64, %class.scoped_refptr.890, i64, %"class.net::QuicConnectivityProbingManager", i32, %"class.base::OneShotTimer", i32, i8, i8, i8, i8, %"class.net::Http2PriorityDependencies", i8, i64, i32, %"class.std::__1::unique_ptr.918", %"class.net::QuicChromiumClientSession::QuicChromiumPathValidationWriterDelegate", %"class.base::flat_map.925", %"class.base::WeakPtrFactory.935" }
%"class.quic::QuicSpdyClientSessionBase.base" = type <{ %"class.quic::QuicSpdySession", %"class.quic::QuicCryptoClientStream::ProofHandler", %"class.quic::QuicClientPushPromiseIndex"*, %"class.absl::flat_hash_map.695", i32 }>
%"class.quic::QuicSpdySession" = type { %"class.quic::QuicSession.base", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.541", %"class.quic::QuicHeadersStream"*, %"class.quic::QuicSendControlStream"*, %"class.quic::QuicReceiveControlStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackSendStream"*, %"class.quic::QpackSendStream"*, %"struct.quic::SettingsFrame", i64, i64, i64, i64, i32, i32, i64, i8, [7 x i8], %"class.spdy::SpdyFramer", %"class.http2::Http2DecoderAdapter", %"class.std::__1::unique_ptr.655", %"class.absl::optional.179", %"class.quic::Http3DebugVisitor"*, %"class.absl::flat_hash_map.661", i32, %"class.absl::optional.179", %"class.absl::optional.179", i64, i8, i8, %"class.absl::flat_hash_map.670", i8, %"class.absl::flat_hash_set", %"class.std::__1::list.679" }
%"class.quic::QuicSession.base" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.346", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.409", %"class.absl::flat_hash_map.418", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.205", %"class.std::__1::vector.53", %"class.absl::optional.465", i8, i8, i8, i8 }>
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.104", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector.53", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.71", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.236", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.258", %"class.quiche::QuicheCircularDeque.264", %"class.quiche::QuicheCircularDeque.267", %"class.std::__1::vector.270", %"class.absl::optional.277", %"class.quic::QuicConnectionId", %"class.absl::optional.277", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector.53", [4 x %"class.std::__1::unique_ptr"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.63"], i8, i8, %"struct.std::__1::array", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.71", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.98" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.93" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.87", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.87"*, i64 }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::vector.107"* }
%"class.std::__1::vector.107" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.111", %"class.absl::optional.111", %"class.absl::optional.111" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.111" = type { %"class.absl::optional_internal::optional_data.112" }
%"class.absl::optional_internal::optional_data.112" = type { %"class.absl::optional_internal::optional_data_base.113" }
%"class.absl::optional_internal::optional_data_base.113" = type { %"class.absl::optional_internal::optional_data_dtor_base.114" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.116", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"*, %"class.std::__1::__compressed_pair.119" }
%"struct.std::__1::pair.118" = type opaque
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::pair.118"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet" }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple.124", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple.124" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.125" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.125" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.130" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.130" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.131", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.160" }
%"struct.quic::QuicFrame" = type { %union.anon.133 }
%union.anon.133 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.131", %"class.std::__1::vector.131", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.72", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.198", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.165", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.165" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.131", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.168", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.174", %"class.absl::optional.179" }
%"class.absl::optional.174" = type { %"class.absl::optional_internal::optional_data.175" }
%"class.absl::optional_internal::optional_data.175" = type { %"class.absl::optional_internal::optional_data_base.176" }
%"class.absl::optional_internal::optional_data_base.176" = type { %"class.absl::optional_internal::optional_data_dtor_base.177" }
%"class.absl::optional_internal::optional_data_dtor_base.177" = type { i8, %union.anon.178 }
%union.anon.178 = type { i32 }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.186" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.193" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.198" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.201"*, i64 }
%"struct.std::__1::pair.201" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.69, i32 }
%union.anon.69 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.70 }
%union.anon.70 = type { [4 x i32] }
%"struct.std::__1::array.71" = type { [16 x i8] }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.205", %"class.std::__1::vector.212", %"class.std::__1::vector.212", %"class.std::__1::vector.212", %"class.quic::QuicIntervalSet.219", i64 }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.214" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.71" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.quic::QuicIntervalSet.219" = type { %"class.absl::btree_set.220" }
%"class.absl::btree_set.220" = type { %"class.absl::container_internal::btree_set_container.221" }
%"class.absl::container_internal::btree_set_container.221" = type { %"class.absl::container_internal::btree_container.222" }
%"class.absl::container_internal::btree_container.222" = type { %"class.absl::container_internal::btree.223" }
%"class.absl::container_internal::btree.223" = type { %"class.absl::container_internal::CompressedTuple.224", %"class.absl::container_internal::btree_node.231"*, i64 }
%"class.absl::container_internal::CompressedTuple.224" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.225" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.225" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.230" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.230" = type { %"class.absl::container_internal::btree_node.231"* }
%"class.absl::container_internal::btree_node.231" = type { i8 }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.239", %"class.std::__1::vector.247", %"class.std::__1::unique_ptr.205", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.239" = type { %"class.std::__1::__vector_base.240" }
%"class.std::__1::__vector_base.240" = type { %"struct.std::__1::pair.241"*, %"struct.std::__1::pair.241"*, %"class.std::__1::__compressed_pair.242" }
%"struct.std::__1::pair.241" = type opaque
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::pair.241"* }
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { %"struct.std::__1::pair.249"*, %"struct.std::__1::pair.249"*, %"class.std::__1::__compressed_pair.250" }
%"struct.std::__1::pair.249" = type opaque
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.std::__1::pair.249"* }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::array.150"* }
%"struct.std::__1::array.150" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.264" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.150"*, i64 }
%"class.quiche::QuicheCircularDeque.267" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.150", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.270" = type { %"class.std::__1::__vector_base.271" }
%"class.std::__1::__vector_base.271" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.50 }
%union.anon.50 = type { %struct.anon.52 }
%struct.anon.52 = type { i8, i8* }
%"class.absl::optional.277" = type { %"class.absl::optional_internal::optional_data.278" }
%"class.absl::optional_internal::optional_data.278" = type { %"class.absl::optional_internal::optional_data_base.279" }
%"class.absl::optional_internal::optional_data_base.279" = type { %"class.absl::optional_internal::optional_data_dtor_base.280" }
%"class.absl::optional_internal::optional_data_dtor_base.280" = type { i8, %union.anon.281 }
%union.anon.281 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.282" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.286" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.292", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.302", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.292" = type { %"class.std::__1::__vector_base.293" }
%"class.std::__1::__vector_base.293" = type { %"struct.std::__1::array.150"*, %"struct.std::__1::array.150"*, %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.71", i8, i8, i64, i64, %"class.std::__1::unique_ptr.72", %"class.absl::optional.78" }
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, [7 x i8], %union.anon.82 }
%union.anon.82 = type { %"class.quic::RttStats" }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.308", i64 }
%"class.std::__1::deque.308" = type { %"class.std::__1::__deque_base.309" }
%"class.std::__1::__deque_base.309" = type { %"struct.std::__1::__split_buffer.310", i64, %"class.std::__1::__compressed_pair.316" }
%"struct.std::__1::__split_buffer.310" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.311" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.320", %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.333", %"class.std::__1::__compressed_pair.336", [4 x i8] }>
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322", %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.339" }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.341" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.346" = type { %"class.std::__1::__vector_base.347" }
%"class.std::__1::__vector_base.347" = type { %"class.std::__1::unique_ptr.348"*, %"class.std::__1::unique_ptr.348"*, %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.358", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr.351", i64, %"class.quic::QuicIntervalSet.219" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.346", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.409", %"class.absl::flat_hash_map.418", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.205", %"class.std::__1::vector.53", %"class.absl::optional.465", i8, i8, i8, i8, [4 x i8] }>
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.357 }
%union.anon.357 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.358" = type { %"class.absl::optional_internal::optional_data.359" }
%"class.absl::optional_internal::optional_data.359" = type { %"class.absl::optional_internal::optional_data_base.360" }
%"class.absl::optional_internal::optional_data_base.360" = type { %"class.absl::optional_internal::optional_data_dtor_base.361" }
%"class.absl::optional_internal::optional_data_dtor_base.361" = type { i8, %union.anon.362 }
%union.anon.362 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet.219", %"class.quic::QuicIntervalSet.219", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.365", %"class.absl::optional.179" }
%"class.quiche::QuicheCircularDeque.365" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr.153, i64 }
%class.scoped_refptr.153 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.154", i8* }
%"class.base::RefCountedThreadSafe.154" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.std::__1::unique_ptr.348"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.383", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.388", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.376", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.277", %"class.absl::optional.277", %"class.absl::optional.277", %"class.absl::optional.277", %"class.absl::optional.277", %"class.absl::optional.277", %"class.absl::flat_hash_map.394", %"class.absl::flat_hash_map.394" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.376", %"class.std::__1::vector.376" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.383" = type { %"class.absl::optional_internal::optional_data.384" }
%"class.absl::optional_internal::optional_data.384" = type { %"class.absl::optional_internal::optional_data_base.385" }
%"class.absl::optional_internal::optional_data_base.385" = type { %"class.absl::optional_internal::optional_data_dtor_base.386" }
%"class.absl::optional_internal::optional_data_dtor_base.386" = type { i8, %union.anon.387 }
%union.anon.387 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.388" = type { %"class.absl::optional_internal::optional_data.389" }
%"class.absl::optional_internal::optional_data.389" = type { %"class.absl::optional_internal::optional_data_base.390" }
%"class.absl::optional_internal::optional_data_base.390" = type { %"class.absl::optional_internal::optional_data_dtor_base.391" }
%"class.absl::optional_internal::optional_data_dtor_base.391" = type { i8, %union.anon.392 }
%union.anon.392 = type { %"struct.std::__1::pair.393" }
%"struct.std::__1::pair.393" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.71" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.71", %"struct.std::__1::array.71", i8 }
%"class.std::__1::vector.376" = type { %"class.std::__1::__vector_base.377" }
%"class.std::__1::__vector_base.377" = type { i32*, i32*, %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.394" = type { %"class.absl::container_internal::raw_hash_map.395" }
%"class.absl::container_internal::raw_hash_map.395" = type { %"class.absl::container_internal::raw_hash_set.396" }
%"class.absl::container_internal::raw_hash_set.396" = type { i8*, %"union.absl::container_internal::map_slot_type.397"*, i64, i64, %"class.absl::container_internal::CompressedTuple.398" }
%"union.absl::container_internal::map_slot_type.397" = type opaque
%"class.absl::container_internal::CompressedTuple.398" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.399" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.399" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.409" = type { %"class.absl::container_internal::raw_hash_map.410" }
%"class.absl::container_internal::raw_hash_map.410" = type { %"class.absl::container_internal::raw_hash_set.411" }
%"class.absl::container_internal::raw_hash_set.411" = type { i8*, %"union.absl::container_internal::map_slot_type.412"*, i64, i64, %"class.absl::container_internal::CompressedTuple.413" }
%"union.absl::container_internal::map_slot_type.412" = type opaque
%"class.absl::container_internal::CompressedTuple.413" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.414" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.414" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.418" = type { %"class.absl::container_internal::raw_hash_map.419" }
%"class.absl::container_internal::raw_hash_map.419" = type { %"class.absl::container_internal::raw_hash_set.420" }
%"class.absl::container_internal::raw_hash_set.420" = type { i8*, %"union.absl::container_internal::map_slot_type.421"*, i64, i64, %"class.absl::container_internal::CompressedTuple.422" }
%"union.absl::container_internal::map_slot_type.421" = type opaque
%"class.absl::container_internal::CompressedTuple.422" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.423" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.423" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.431", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.447" }
%"class.quiche::QuicheCircularDeque.431" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.447" = type { %"class.absl::container_internal::raw_hash_map.448" }
%"class.absl::container_internal::raw_hash_map.448" = type { %"class.absl::container_internal::raw_hash_set.449" }
%"class.absl::container_internal::raw_hash_set.449" = type { i8*, %"union.absl::container_internal::map_slot_type.450"*, i64, i64, %"class.absl::container_internal::CompressedTuple.451" }
%"union.absl::container_internal::map_slot_type.450" = type opaque
%"class.absl::container_internal::CompressedTuple.451" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.452" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.452" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.456", %"class.std::__1::unique_ptr.459" }
%"class.quiche::QuicheCircularDeque.456" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.440" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.432" }
%"class.absl::container_internal::raw_hash_map.432" = type { %"class.absl::container_internal::raw_hash_set.433" }
%"class.absl::container_internal::raw_hash_set.433" = type { i8*, %"struct.std::__1::pair.434"**, i64, i64, %"class.absl::container_internal::CompressedTuple.435" }
%"struct.std::__1::pair.434" = type opaque
%"class.absl::container_internal::CompressedTuple.435" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.436" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.436" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list.440" = type { %"class.std::__1::__list_imp.441" }
%"class.std::__1::__list_imp.441" = type { %"struct.std::__1::__list_node_base.442", %"class.std::__1::__compressed_pair.443" }
%"struct.std::__1::__list_node_base.442" = type { %"struct.std::__1::__list_node_base.442"*, %"struct.std::__1::__list_node_base.442"* }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.208", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.208" = type { i8* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.absl::optional.465" = type { %"class.absl::optional_internal::optional_data.466" }
%"class.absl::optional_internal::optional_data.466" = type { %"class.absl::optional_internal::optional_data_base.467" }
%"class.absl::optional_internal::optional_data_base.467" = type { %"class.absl::optional_internal::optional_data_dtor_base.468" }
%"class.absl::optional_internal::optional_data_dtor_base.468" = type { i8, %union.anon.469 }
%union.anon.469 = type { %"class.std::__1::basic_string" }
%"class.quic::QpackEncoder::DecoderStreamErrorDelegate" = type { i32 (...)** }
%"class.quic::QpackDecoder::EncoderStreamErrorDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.quic::QpackEncoder"* }
%"class.quic::QpackEncoder" = type <{ %"class.quic::QpackDecoderStreamReceiver::Delegate", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, %"class.quic::QpackDecoderStreamReceiver", %"class.quic::QpackEncoderStreamSender", %"class.quic::QpackEncoderHeaderTable", i64, %"class.quic::QpackBlockingManager", i32, [4 x i8] }>
%"class.quic::QpackDecoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackDecoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackInstructionDecoder::Delegate" = type { i32 (...)** }
%"class.quic::QpackStreamReceiver" = type { i32 (...)** }
%"class.quic::QpackInstructionDecoder" = type { %"class.std::__1::vector.473"*, %"class.quic::QpackInstructionDecoder::Delegate"*, i8, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"class.http2::HpackVarintDecoder", %"class.http2::HpackHuffmanDecoder", i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter.481" }
%"class.std::__1::vector.473" = type opaque
%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::HpackHuffmanDecoder" = type { %"class.http2::HuffmanBitBuffer" }
%"class.http2::HuffmanBitBuffer" = type { i64, i64 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector.474" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector.474" = type { %"class.std::__1::__vector_base.475" }
%"class.std::__1::__vector_base.475" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair.476" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter.481" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackEncoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter.481" }
%"class.quic::QpackEncoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base", %"class.absl::flat_hash_map.494"*, %"class.absl::flat_hash_map.509"*, %"class.absl::flat_hash_map.494", %"class.absl::flat_hash_map.509" }
%"class.quic::QpackHeaderTableBase.base" = type <{ i32 (...)**, %"class.std::__1::deque.482", i64, i64, i64, i64, i64, i8 }>
%"class.std::__1::deque.482" = type { %"class.std::__1::__deque_base.483" }
%"class.std::__1::__deque_base.483" = type { %"struct.std::__1::__split_buffer.484", i64, %"class.std::__1::__compressed_pair.490" }
%"struct.std::__1::__split_buffer.484" = type { %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.std::__1::__compressed_pair.485" }
%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.spdy::HpackEntry"** }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.absl::flat_hash_map.494" = type { %"class.absl::container_internal::raw_hash_map.495" }
%"class.absl::container_internal::raw_hash_map.495" = type { %"class.absl::container_internal::raw_hash_set.496" }
%"class.absl::container_internal::raw_hash_set.496" = type { i8*, %"union.absl::container_internal::map_slot_type.497"*, i64, i64, %"class.absl::container_internal::CompressedTuple.498" }
%"union.absl::container_internal::map_slot_type.497" = type opaque
%"class.absl::container_internal::CompressedTuple.498" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.499" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.499" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.509" = type { %"class.absl::container_internal::raw_hash_map.510" }
%"class.absl::container_internal::raw_hash_map.510" = type { %"class.absl::container_internal::raw_hash_set.511" }
%"class.absl::container_internal::raw_hash_set.511" = type { i8*, %"union.absl::container_internal::map_slot_type.512"*, i64, i64, %"class.absl::container_internal::CompressedTuple.513" }
%"union.absl::container_internal::map_slot_type.512" = type opaque
%"class.absl::container_internal::CompressedTuple.513" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.514" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.514" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::QpackBlockingManager" = type { %"class.absl::flat_hash_map.520", %"class.std::__1::map", i64 }
%"class.absl::flat_hash_map.520" = type { %"class.absl::container_internal::raw_hash_map.521" }
%"class.absl::container_internal::raw_hash_map.521" = type { %"class.absl::container_internal::raw_hash_set.522" }
%"class.absl::container_internal::raw_hash_set.522" = type { i8*, %"union.absl::container_internal::map_slot_type.523"*, i64, i64, %"class.absl::container_internal::CompressedTuple.524" }
%"union.absl::container_internal::map_slot_type.523" = type opaque
%"class.absl::container_internal::CompressedTuple.524" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.525" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.525" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.529" }
%"class.std::__1::__tree.529" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.530", %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.quic::QpackDecoder"* }
%"class.quic::QpackDecoder" = type { %"class.quic::QpackEncoderStreamReceiver::Delegate", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer", %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate"*, %"class.quic::QpackEncoderStreamReceiver", %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderHeaderTable", %"class.std::__1::set.556", i64, i64 }
%"class.quic::QpackEncoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor" = type { i32 (...)** }
%"class.quic::QpackEncoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackEncoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackDecoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackDecoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base.546", %"class.std::__1::vector.547"*, %"class.std::__1::multimap" }
%"class.quic::QpackHeaderTableBase.base.546" = type <{ i32 (...)**, %"class.quiche::QuicheCircularDeque.545", i64, i64, i64, i64, i64, i8 }>
%"class.quiche::QuicheCircularDeque.545" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" = type { %"class.spdy::HpackEntry"*, i64 }
%"class.std::__1::vector.547" = type opaque
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.548" }
%"class.std::__1::__tree.548" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.549", %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.556" = type { %"class.std::__1::__tree.557" }
%"class.std::__1::__tree.557" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.558", %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.quic::QuicHeadersStream" = type { %"class.quic::QuicStream.base", %"class.quic::QuicSpdySession"*, %"class.quiche::QuicheCircularDeque.568" }
%"class.quic::QuicStream.base" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.358", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8 }>
%"class.quiche::QuicheCircularDeque.568" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" = type { %"struct.quic::QuicHeadersStream::CompressedHeaderInfo"*, i64 }
%"struct.quic::QuicHeadersStream::CompressedHeaderInfo" = type { i64, i64, i64, %"class.quic::QuicReferenceCountedPointer" }
%"class.quic::QuicReferenceCountedPointer" = type { %"class.quic::QuicReferenceCountedPointerImpl" }
%"class.quic::QuicReferenceCountedPointerImpl" = type { %class.scoped_refptr.571 }
%class.scoped_refptr.571 = type { %"class.quic::QuicAckListenerInterface"* }
%"class.quic::QuicAckListenerInterface" = type { %"class.quic::QuicReferenceCounted.base", [4 x i8] }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.572" }>
%"class.base::RefCountedThreadSafe.572" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicSendControlStream" = type { %"class.quic::QuicStream.base", i8, %"struct.quic::SettingsFrame", %"class.quic::QuicSpdySession"* }
%"class.quic::QuicReceiveControlStream" = type { %"class.quic::QuicStream.base", %"class.quic::HttpDecoder::Visitor", i8, [7 x i8], %"class.quic::HttpDecoder", %"class.quic::QuicSpdySession"* }
%"class.quic::HttpDecoder::Visitor" = type { i32 (...)** }
%"class.quic::HttpDecoder" = type <{ %"class.quic::HttpDecoder::Visitor"*, i8, [3 x i8], i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.std::__1::array.587", %"struct.std::__1::array.587", %"struct.std::__1::array.587", i8, i8, [6 x i8] }>
%"struct.std::__1::array.587" = type { [8 x i8] }
%"class.quic::QpackReceiveStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackStreamReceiver"* }
%"class.quic::QpackSendStream" = type <{ %"class.quic::QuicStream.base", [7 x i8], %"class.quic::QpackStreamSenderDelegate", i64, i8, [7 x i8] }>
%"struct.quic::SettingsFrame" = type { %"class.absl::flat_hash_map.573" }
%"class.absl::flat_hash_map.573" = type { %"class.absl::container_internal::raw_hash_map.574" }
%"class.absl::container_internal::raw_hash_map.574" = type { %"class.absl::container_internal::raw_hash_set.575" }
%"class.absl::container_internal::raw_hash_set.575" = type { i8*, %"union.absl::container_internal::map_slot_type.576"*, i64, i64, %"class.absl::container_internal::CompressedTuple.577" }
%"union.absl::container_internal::map_slot_type.576" = type { %"struct.std::__1::pair.937" }
%"struct.std::__1::pair.937" = type { i64, i64 }
%"class.absl::container_internal::CompressedTuple.577" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.578" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.578" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.spdy::SpdyFramer" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.588", %"class.spdy::SpdyFramerDebugVisitorInterface"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.spdy::HpackEncoder"* }
%"class.spdy::HpackEncoder" = type <{ %"class.spdy::HpackHeaderTable", %"class.spdy::HpackOutputStream", i64, %"class.std::__1::function.591", %"class.std::__1::function.597", i8, i8, [6 x i8] }>
%"class.spdy::HpackHeaderTable" = type { %"class.std::__1::vector.547"*, %"class.std::__1::deque.482", %"class.absl::flat_hash_map.494"*, %"class.absl::flat_hash_map.509"*, %"class.absl::flat_hash_map.494", %"class.absl::flat_hash_map.509", i64, i64, i64, i64 }
%"class.spdy::HpackOutputStream" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::function.591" = type { %"class.std::__1::__function::__policy_func.595" }
%"class.std::__1::__function::__policy_func.595" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.596", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.596" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.std::__1::function.597" = type { %"class.std::__1::__function::__policy_func.601" }
%"class.std::__1::__function::__policy_func.601" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.602", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.602" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.spdy::SpdyFramerDebugVisitorInterface" = type { i32 (...)** }
%"class.http2::Http2DecoderAdapter" = type { %"class.http2::Http2FrameDecoderListener", %"struct.http2::Http2FrameHeader", %"struct.http2::Http2FrameHeader", %"class.absl::optional.179", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.http2::Http2FrameDecoderNoOpListener", %"class.spdy::SpdyFramerVisitorInterface"*, %"class.spdy::SpdyFramerDebugVisitorInterface"*, %"class.spdy::ExtensionVisitorInterface"*, %"class.std::__1::unique_ptr.606", %"class.std::__1::unique_ptr.648", i8, i32, i32, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.http2::Http2FrameDecoderListener" = type { i32 (...)** }
%"struct.http2::Http2FrameHeader" = type { i32, i32, i8, i32 }
%"class.http2::Http2FrameDecoderNoOpListener" = type { %"class.http2::Http2FrameDecoderListener" }
%"class.spdy::SpdyFramerVisitorInterface" = type { i32 (...)** }
%"class.spdy::ExtensionVisitorInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.spdy::HpackDecoderAdapter"* }
%"class.spdy::HpackDecoderAdapter" = type { %"class.spdy::HpackDecoderAdapter::ListenerAdapter", %"class.http2::HpackDecoder", i64, i64, i8, i32, %"class.std::__1::basic_string" }
%"class.spdy::HpackDecoderAdapter::ListenerAdapter" = type { %"class.http2::HpackDecoderListener", %"class.spdy::Http2HeaderBlock", %"class.spdy::SpdyHeadersHandlerInterface"*, i64, i64 }
%"class.http2::HpackDecoderListener" = type { i32 (...)** }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap.609", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap.609" = type { %"class.absl::node_hash_map.610", %"class.std::__1::list.621" }
%"class.absl::node_hash_map.610" = type { %"class.absl::container_internal::raw_hash_map.611" }
%"class.absl::container_internal::raw_hash_map.611" = type { %"class.absl::container_internal::raw_hash_set.612" }
%"class.absl::container_internal::raw_hash_set.612" = type { i8*, %"struct.std::__1::pair.613"**, i64, i64, %"class.absl::container_internal::CompressedTuple.614" }
%"struct.std::__1::pair.613" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.623"* }
%"struct.std::__1::__list_node_base.623" = type { %"struct.std::__1::__list_node_base.623"*, %"struct.std::__1::__list_node_base.623"* }
%"class.absl::container_internal::CompressedTuple.614" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.615" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.615" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list.621" = type { %"class.std::__1::__list_imp.622" }
%"class.std::__1::__list_imp.622" = type { %"struct.std::__1::__list_node_base.623", %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.628", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.628" = type { %"class.std::__1::__vector_base.629" }
%"class.std::__1::__vector_base.629" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.636" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr.630", i64, i64 }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { i8* }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.http2::HpackDecoder" = type { i32 (...)**, %"class.http2::HpackDecoderState", %"class.http2::HpackWholeEntryBuffer", %"class.http2::HpackBlockDecoder", i32, %"class.std::__1::basic_string" }
%"class.http2::HpackDecoderState" = type { %"class.http2::HpackWholeEntryListener", %"class.http2::HpackDecoderTables", %"class.http2::HpackDecoderListener"*, i32, i32, i8, i8, i8, i32, %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryListener" = type { i32 (...)** }
%"class.http2::HpackDecoderTables" = type { %"class.http2::HpackDecoderStaticTable", %"class.http2::HpackDecoderDynamicTable" }
%"class.http2::HpackDecoderStaticTable" = type { %"class.std::__1::vector.641"* }
%"class.std::__1::vector.641" = type opaque
%"class.http2::HpackDecoderDynamicTable" = type { %"class.quiche::QuicheCircularDeque.642", i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.642" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" = type { %"struct.http2::HpackStringPair"*, i64 }
%"struct.http2::HpackStringPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryBuffer" = type <{ %"class.http2::HpackEntryDecoderListener", %"class.http2::HpackWholeEntryListener"*, %"class.http2::HpackDecoderStringBuffer", %"class.http2::HpackDecoderStringBuffer", i64, i64, i32, i8, [3 x i8] }>
%"class.http2::HpackEntryDecoderListener" = type { i32 (...)** }
%"class.http2::HpackDecoderStringBuffer" = type <{ %"class.std::__1::basic_string", %"class.absl::string_view", %"class.http2::HpackHuffmanDecoder", i64, i8, i8, i8, [5 x i8] }>
%"class.http2::HpackBlockDecoder" = type <{ %"class.http2::HpackEntryDecoder", %"class.http2::HpackEntryDecoderListener"*, i8, [7 x i8] }>
%"class.http2::HpackEntryDecoder" = type { %"class.http2::HpackEntryTypeDecoder", %"class.http2::HpackStringDecoder", i32, i32 }
%"class.http2::HpackEntryTypeDecoder" = type { %"class.http2::HpackVarintDecoder", i32, [4 x i8] }
%"class.http2::HpackStringDecoder" = type <{ %"class.http2::HpackVarintDecoder", i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.http2::Http2FrameDecoder"* }
%"class.http2::Http2FrameDecoder" = type { %"class.http2::FrameDecoderState", %union.anon.651, i32, i64, %"class.http2::Http2FrameDecoderNoOpListener" }
%"class.http2::FrameDecoderState" = type { %"class.http2::Http2FrameDecoderListener"*, %"struct.http2::Http2FrameHeader", i32, i32, %"class.http2::Http2StructureDecoder" }
%"class.http2::Http2StructureDecoder" = type <{ i32, [9 x i8], [3 x i8] }>
%union.anon.651 = type { %"class.http2::HeadersPayloadDecoder" }
%"class.http2::HeadersPayloadDecoder" = type { i32, %"struct.http2::Http2PriorityFields" }
%"struct.http2::Http2PriorityFields" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.quic::QuicSpdySession::SpdyFramerVisitor"* }
%"class.quic::QuicSpdySession::SpdyFramerVisitor" = type opaque
%"class.quic::Http3DebugVisitor" = type { i32 (...)** }
%"class.absl::flat_hash_map.661" = type { %"class.absl::container_internal::raw_hash_map.662" }
%"class.absl::container_internal::raw_hash_map.662" = type { %"class.absl::container_internal::raw_hash_set.663" }
%"class.absl::container_internal::raw_hash_set.663" = type { i8*, %"union.absl::container_internal::map_slot_type.664"*, i64, i64, %"class.absl::container_internal::CompressedTuple.665" }
%"union.absl::container_internal::map_slot_type.664" = type opaque
%"class.absl::container_internal::CompressedTuple.665" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.666" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.666" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::optional.179" = type { %"class.absl::optional_internal::optional_data.180" }
%"class.absl::optional_internal::optional_data.180" = type { %"class.absl::optional_internal::optional_data_base.181" }
%"class.absl::optional_internal::optional_data_base.181" = type { %"class.absl::optional_internal::optional_data_dtor_base.182" }
%"class.absl::optional_internal::optional_data_dtor_base.182" = type { i8, %union.anon.183 }
%union.anon.183 = type { i64 }
%"class.absl::flat_hash_map.670" = type { %"class.absl::container_internal::raw_hash_map.671" }
%"class.absl::container_internal::raw_hash_map.671" = type { %"class.absl::container_internal::raw_hash_set.672" }
%"class.absl::container_internal::raw_hash_set.672" = type { i8*, %"union.absl::container_internal::map_slot_type.673"*, i64, i64, %"class.absl::container_internal::CompressedTuple.674" }
%"union.absl::container_internal::map_slot_type.673" = type opaque
%"class.absl::container_internal::CompressedTuple.674" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.675" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.675" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.427" }
%"class.absl::container_internal::raw_hash_set.427" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.428" }
%"class.absl::container_internal::CompressedTuple.428" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.429" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.429" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list.679" = type { %"class.std::__1::__list_imp.680" }
%"class.std::__1::__list_imp.680" = type { %"struct.std::__1::__list_node_base.681", %"class.std::__1::__compressed_pair.682" }
%"struct.std::__1::__list_node_base.681" = type { %"struct.std::__1::__list_node_base.681"*, %"struct.std::__1::__list_node_base.681"* }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.quic::QuicCryptoClientStream::ProofHandler" = type { i32 (...)** }
%"class.quic::QuicClientPushPromiseIndex" = type { i32 (...)**, %"class.absl::flat_hash_map.686" }
%"class.absl::flat_hash_map.686" = type { %"class.absl::container_internal::raw_hash_map.687" }
%"class.absl::container_internal::raw_hash_map.687" = type { %"class.absl::container_internal::raw_hash_set.688" }
%"class.absl::container_internal::raw_hash_set.688" = type { i8*, %"union.absl::container_internal::map_slot_type.689"*, i64, i64, %"class.absl::container_internal::CompressedTuple.690" }
%"union.absl::container_internal::map_slot_type.689" = type opaque
%"class.absl::container_internal::CompressedTuple.690" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.691" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.691" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.695" = type { %"class.absl::container_internal::raw_hash_map.696" }
%"class.absl::container_internal::raw_hash_map.696" = type { %"class.absl::container_internal::raw_hash_set.697" }
%"class.absl::container_internal::raw_hash_set.697" = type { i8*, %"union.absl::container_internal::map_slot_type.698"*, i64, i64, %"class.absl::container_internal::CompressedTuple.699" }
%"union.absl::container_internal::map_slot_type.698" = type opaque
%"class.absl::container_internal::CompressedTuple.699" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.700" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.700" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.net::MultiplexedSession" = type { i32 (...)** }
%"class.net::QuicConnectivityProbingManager::Delegate" = type { i32 (...)** }
%"class.net::QuicChromiumPacketReader::Visitor" = type { i32 (...)** }
%"class.net::QuicChromiumPacketWriter::Delegate" = type { i32 (...)** }
%"class.net::QuicSessionKey" = type <{ %"class.quic::QuicServerId", %"class.net::SocketTag", [7 x i8], %"class.net::NetworkIsolationKey", i32, [4 x i8] }>
%"class.quic::QuicServerId" = type <{ %"class.std::__1::basic_string", i16, i8, [5 x i8] }>
%"class.net::SocketTag" = type { i8 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.704", %"class.absl::optional.704" }
%"class.absl::optional.704" = type { %"class.absl::optional_internal::optional_data.705" }
%"class.absl::optional_internal::optional_data.705" = type { %"class.absl::optional_internal::optional_data_base.706" }
%"class.absl::optional_internal::optional_data_base.706" = type { %"class.absl::optional_internal::optional_data_dtor_base.707" }
%"class.absl::optional_internal::optional_data_dtor_base.707" = type { i8, %union.anon.708 }
%union.anon.708 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.709" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.709" = type { %"class.absl::optional_internal::optional_data.710" }
%"class.absl::optional_internal::optional_data.710" = type { %"class.absl::optional_internal::optional_data_base.711" }
%"class.absl::optional_internal::optional_data_base.711" = type { %"class.absl::optional_internal::optional_data_dtor_base.712" }
%"class.absl::optional_internal::optional_data_dtor_base.712" = type { i8, %union.anon.713 }
%union.anon.713 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.net::QuicCryptoClientConfigHandle"* }
%"class.net::QuicCryptoClientConfigHandle" = type { i32 (...)** }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.quic::QuicCryptoClientStream"* }
%"class.quic::QuicCryptoClientStream" = type { %"class.quic::QuicCryptoClientStreamBase", %"class.std::__1::unique_ptr.724" }
%"class.quic::QuicCryptoClientStreamBase" = type { %"class.quic::QuicCryptoStream" }
%"class.quic::QuicCryptoStream" = type { %"class.quic::QuicStream.base", [4 x %"class.quic::QuicIntervalSet.219"], %"struct.std::__1::array.723" }
%"struct.std::__1::array.723" = type { [4 x %"struct.quic::QuicCryptoStream::CryptoSubstream"] }
%"struct.quic::QuicCryptoStream::CryptoSubstream" = type { %"class.quic::QuicStreamSequencer", %"class.quic::QuicStreamSendBuffer" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.quic::QuicCryptoClientStream::HandshakerInterface"* }
%"class.quic::QuicCryptoClientStream::HandshakerInterface" = type { i32 (...)** }
%"class.net::QuicStreamFactory" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.733", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.733" = type { %"class.std::__1::__vector_base.734" }
%"class.std::__1::__vector_base.734" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.736" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.735 }
%class.scoped_refptr.735 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::vector.741" = type { %"class.std::__1::__vector_base.742" }
%"class.std::__1::__vector_base.742" = type { %"class.std::__1::unique_ptr.743"*, %"class.std::__1::unique_ptr.743"*, %"class.std::__1::__compressed_pair.756" }
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.net::DatagramClientSocket"* }
%"class.net::DatagramClientSocket" = type { %"class.net::DatagramSocket", %"class.net::Socket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.746" }
%"class.std::__1::vector.746" = type { %"class.std::__1::__vector_base.747" }
%"class.std::__1::__vector_base.747" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.std::__1::unique_ptr.743"* }
%"class.net::TransportSecurityState" = type opaque
%"class.net::SSLConfigService" = type opaque
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.net::QuicServerInfo"* }
%"class.net::QuicServerInfo" = type opaque
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.net::CertVerifyResult"* }
%"class.net::CertVerifyResult" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %class.scoped_refptr.781, i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.795", i8, i8, [2 x i8], %"struct.net::OCSPVerifyResult", [4 x i8], %"class.std::__1::vector.803", i32, [4 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.770", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.770" = type { %"class.std::__1::__tree.771" }
%"class.std::__1::__tree.771" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%class.scoped_refptr.781 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.782", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.784", %"class.std::__1::vector.788" }
%"class.base::RefCountedThreadSafe.782" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.746", %"class.std::__1::vector.746", %"class.std::__1::vector.746", %"class.std::__1::vector.746" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.783" }
%"class.base::time_internal::TimeBase.783" = type { i64 }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.788" = type { %"class.std::__1::__vector_base.789" }
%"class.std::__1::__vector_base.789" = type { %"class.std::__1::unique_ptr.784"*, %"class.std::__1::unique_ptr.784"*, %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.std::__1::unique_ptr.784"* }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.798" }
%"class.net::HashValue" = type { i32, %union.anon.797 }
%union.anon.797 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.net::HashValue"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.807" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.805, i32, [4 x i8] }>
%class.scoped_refptr.805 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.806", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.806" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.28 }
%union.anon.28 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::set.815" = type { %"class.std::__1::__tree.816" }
%"class.std::__1::__tree.816" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.817", %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::list.825" = type { %"class.std::__1::__list_imp.826" }
%"class.std::__1::__list_imp.826" = type { %"struct.std::__1::__list_node_base.827", %"class.std::__1::__compressed_pair.828" }
%"struct.std::__1::__list_node_base.827" = type { %"struct.std::__1::__list_node_base.827"*, %"struct.std::__1::__list_node_base.827"* }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.base::OnceCallback"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.834 }
%class.scoped_refptr.834 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.835", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.835" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.841" }>
%"class.base::RefCountedThreadSafe.841" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.842", %"class.std::__1::vector.849" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.844" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.849" = type { %"class.std::__1::__vector_base.850" }
%"class.std::__1::__vector_base.850" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.851" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.std::__1::vector.856" = type { %"class.std::__1::__vector_base.857" }
%"class.std::__1::__vector_base.857" = type { %"class.std::__1::unique_ptr.858"*, %"class.std::__1::unique_ptr.858"*, %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.net::QuicChromiumPacketReader"* }
%"class.net::QuicChromiumPacketReader" = type { i32 (...)**, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketReader::Visitor"*, i8, i32, %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %class.scoped_refptr.861, %"class.net::NetLogWithSource", %"class.base::WeakPtrFactory.862" }
%class.scoped_refptr.861 = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"class.base::WeakPtrFactory.862" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.std::__1::unique_ptr.858"* }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.871" = type { %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"class.net::QuicConnectionLogger"* }
%"class.net::QuicConnectionLogger" = type { %"class.quic::QuicConnectionDebugVisitor", %"class.quic::QuicPacketCreator::DebugDelegate", %"class.quic::QuicSession"*, %"class.quic::QuicPacketNumber", i64, i8, i64, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", i64, i64, i64, %"class.net::IPEndPoint", %"class.net::IPEndPoint", i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::bitset", %"class.std::__1::bitset", i8*, %"class.std::__1::unique_ptr.875", %"class.net::QuicEventLogger" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.874", i8 }
%"struct.std::__1::array.874" = type { [16 x i8] }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [3 x i64] }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.net::SocketPerformanceWatcher"* }
%"class.net::SocketPerformanceWatcher" = type { i32 (...)** }
%"class.net::QuicEventLogger" = type <{ %"class.quic::QuicConnectionDebugVisitor", %"class.quic::QuicPacketCreator::DebugDelegate", %"class.quic::QuicSession"*, %"class.net::NetLogWithSource", %"class.net::IPEndPoint", [4 x i8] }>
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.net::QuicHttp3Logger"* }
%"class.net::QuicHttp3Logger" = type { %"class.quic::Http3DebugVisitor", %"class.net::NetLogWithSource" }
%"class.net::ServerPushDelegate" = type { i32 (...)** }
%class.scoped_refptr.890 = type { %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* }
%"class.net::QuicChromiumPacketWriter::ReusableIOBuffer" = type { %"class.net::IOBuffer", i64, i64 }
%"class.net::QuicConnectivityProbingManager" = type { %"class.net::QuicChromiumPacketWriter::Delegate", %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::NetLogWithSource", i8, i64, %"class.quic::QuicSocketAddress", %"class.std::__1::unique_ptr.743", %"class.std::__1::unique_ptr.891", %"class.std::__1::unique_ptr.858", i64, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::OneShotTimer", %"class.base::SequencedTaskRunner"*, %"class.net::IPEndPoint", i8, %"class.base::WeakPtrFactory.901" }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.net::QuicChromiumPacketWriter"* }
%"class.net::QuicChromiumPacketWriter" = type { %"class.quic::QuicPacketWriter", %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter::Delegate"*, %class.scoped_refptr.890, i8, i8, i32, %"class.base::OneShotTimer", %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.897" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.897" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.901" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.896" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.894, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.895" }
%class.scoped_refptr.894 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.895" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback.896" = type { %"class.base::internal::CallbackBase" }
%"class.net::Http2PriorityDependencies" = type { [8 x %"class.std::__1::list.902"], %"class.std::__1::map.909" }
%"class.std::__1::list.902" = type { %"class.std::__1::__list_imp.903" }
%"class.std::__1::__list_imp.903" = type { %"struct.std::__1::__list_node_base.904", %"class.std::__1::__compressed_pair.905" }
%"struct.std::__1::__list_node_base.904" = type { %"struct.std::__1::__list_node_base.904"*, %"struct.std::__1::__list_node_base.904"* }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.909" = type { %"class.std::__1::__tree.910" }
%"class.std::__1::__tree.910" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.911", %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.918" = type { %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.quic::QuicClientPushPromiseIndex"* }
%"class.net::QuicChromiumClientSession::QuicChromiumPathValidationWriterDelegate" = type { %"class.net::QuicChromiumPacketWriter::Delegate", %"class.net::QuicChromiumClientSession"*, %"class.base::SequencedTaskRunner"*, i64, %"class.quic::QuicSocketAddress", %"class.base::WeakPtrFactory.924" }
%"class.base::WeakPtrFactory.924" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::flat_map.925" = type { %"class.base::internal::flat_tree.926" }
%"class.base::internal::flat_tree.926" = type { %"class.std::__1::vector.927" }
%"class.std::__1::vector.927" = type { %"class.std::__1::__vector_base.928" }
%"class.std::__1::__vector_base.928" = type { %"struct.std::__1::pair.929"*, %"struct.std::__1::pair.929"*, %"class.std::__1::__compressed_pair.930" }
%"struct.std::__1::pair.929" = type opaque
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::pair.929"* }
%"class.base::WeakPtrFactory.935" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.37", [4 x i8] }>
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl.40" }
%"struct.std::__1::__cxx_atomic_impl.40" = type { %"struct.std::__1::__cxx_atomic_base_impl.41" }
%"struct.std::__1::__cxx_atomic_base_impl.41" = type { i32 }
%"struct.std::__1::__split_buffer.954" = type { %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"*, %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.std::__1::allocator.23"* }
%"class.std::__1::allocator.23" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.959" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.11", %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.std::__1::allocator.13"* }
%"class.std::__1::allocator.13" = type { i8 }

$_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_4pairIN4quic13QuicErrorCodeEmEENS_9allocatorIS4_EEE7emplaceIJS3_mEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN4quic13QuicErrorCodeEmEERNS_9allocatorIS4_EEE12emplace_backIJS3_mEEEvDpOT_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_4pairIimEENS_9allocatorIS2_EEE7emplaceIJRKimEEENS_11__wrap_iterIPS2_EENS9_IPKS2_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIimEERNS_9allocatorIS2_EEE12emplace_backIJRKimEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN4quic13QuicErrorCodeEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN4quic13QuicErrorCodeEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_ = comdat any

@_ZTVN3net23QuicConnectivityMonitorE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::QuicConnectivityMonitor"*)* @_ZN3net23QuicConnectivityMonitorD2Ev to i8*), i8* bitcast (void (%"class.net::QuicConnectivityMonitor"*)* @_ZN3net23QuicConnectivityMonitorD0Ev to i8*), i8* bitcast (void (%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*, i64)* @_ZN3net23QuicConnectivityMonitor22OnSessionPathDegradingEPNS_25QuicChromiumClientSessionEl to i8*), i8* bitcast (void (%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*, i64)* @_ZN3net23QuicConnectivityMonitor33OnSessionResumedPostPathDegradingEPNS_25QuicChromiumClientSessionEl to i8*), i8* bitcast (void (%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*, i64, i32)* @_ZN3net23QuicConnectivityMonitor31OnSessionEncounteringWriteErrorEPNS_25QuicChromiumClientSessionEli to i8*), i8* bitcast (void (%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*, i64, i32, i32)* @_ZN3net23QuicConnectivityMonitor29OnSessionClosedAfterHandshakeEPNS_25QuicChromiumClientSessionElN4quic21ConnectionCloseSourceENS3_13QuicErrorCodeE to i8*), i8* bitcast (void (%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*, i64)* @_ZN3net23QuicConnectivityMonitor19OnSessionRegisteredEPNS_25QuicChromiumClientSessionEl to i8*), i8* bitcast (void (%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*)* @_ZN3net23QuicConnectivityMonitor16OnSessionRemovedEPNS_25QuicChromiumClientSessionE to i8*)] }, align 8
@.str = private unnamed_addr constant [26 x i8] c"OnNetworkSoonToDisconnect\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"OnNetworkDisconnected\00", align 1
@.str.2 = private unnamed_addr constant [68 x i8] c"Net.QuicConnectivityMonitor.NumSessionsTrackedSinceSpeculativeError\00", align 1
@.str.3 = private unnamed_addr constant [65 x i8] c"Net.QuicConnectivityMonitor.NumActiveQuicSessionsAtNetworkChange\00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c"Net.QuicConnectivityMonitor.NumAllSessionsDegradedAtNetworkChange\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"Net.QuicConnectivityMonitor.NumAllDegradedSessions.\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"Net.QuicConnectivityMonitor.PercentageAllDegradedSessions.\00", align 1
@.str.7 = private unnamed_addr constant [56 x i8] c"Net.QuicConnectivityMonitor.NumActiveDegradingSessions.\00", align 1
@.str.8 = private unnamed_addr constant [63 x i8] c"Net.QuicConnectivityMonitor.PercentageActiveDegradingSessions.\00", align 1
@.str.9 = private unnamed_addr constant [64 x i8] c"Net.QuicConnectivityMonitor.NumWriteErrorsSeenBeforeDegradation\00", align 1
@.str.10 = private unnamed_addr constant [60 x i8] c"Net.QuicConnectivityMonitor.SessionDegradedBeforeWriteError\00", align 1
@_ZZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEElE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEElE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEElE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net23QuicConnectivityMonitor22OnSessionPathDegradingEPNS_25QuicChromiumClientSessionElE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net23QuicConnectivityMonitor31OnSessionEncounteringWriteErrorEPNS_25QuicChromiumClientSessionEliE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net23QuicConnectivityMonitorC1El = hidden unnamed_addr alias void (%"class.net::QuicConnectivityMonitor"*, i64), void (%"class.net::QuicConnectivityMonitor"*, i64)* @_ZN3net23QuicConnectivityMonitorC2El
@_ZN3net23QuicConnectivityMonitorD1Ev = hidden unnamed_addr alias void (%"class.net::QuicConnectivityMonitor"*), void (%"class.net::QuicConnectivityMonitor"*)* @_ZN3net23QuicConnectivityMonitorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitorC2El(%"class.net::QuicConnectivityMonitor"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %3) #13
  %4 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net23QuicConnectivityMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node_base"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %12, align 8
  %14 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 5, i32 0
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 8, i32 0
  %18 = ptrtoint %"class.net::QuicConnectivityMonitor"* %0 to i64
  %19 = bitcast %"class.base::flat_map"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 48, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %17, i64 %18) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitorD2Ev(%"class.net::QuicConnectivityMonitor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net23QuicConnectivityMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #13
  %4 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.19"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"struct.std::__1::pair.19"* %5 to i64
  %9 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair.19"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"struct.std::__1::pair.19"* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  %18 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::pair"* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %12, %16
  %22 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0
  %23 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node"**
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  tail call void @_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %22, %"class.std::__1::__tree_node"* %25) #13
  %26 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node"**
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  tail call void @_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %26, %"class.std::__1::__tree_node"* %29) #13
  %30 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %30) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitorD0Ev(%"class.net::QuicConnectivityMonitor"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net23QuicConnectivityMonitorD2Ev(%"class.net::QuicConnectivityMonitor"* %0) #13
  %2 = bitcast %"class.net::QuicConnectivityMonitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEl(%"class.net::QuicConnectivityMonitor"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 25
  br i1 %16, label %17, label %24

17:                                               ; preds = %3
  %18 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i64 25) #13
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %17
  %21 = load i8, i8* %9, align 1
  %22 = load i64, i64* %12, align 8
  %23 = zext i8 %21 to i64
  br label %24

24:                                               ; preds = %20, %3
  %25 = phi i64 [ %23, %20 ], [ %14, %3 ]
  %26 = phi i64 [ %22, %20 ], [ %13, %3 ]
  %27 = phi i8 [ %21, %20 ], [ %10, %3 ]
  %28 = icmp slt i8 %27, 0
  %29 = select i1 %28, i64 %26, i64 %25
  %30 = icmp eq i64 %29, 21
  br i1 %30, label %31, label %38

31:                                               ; preds = %24
  %32 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i64 21) #13
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %2
  br i1 %37, label %38, label %174

38:                                               ; preds = %24, %34, %31
  %39 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = tail call i1 @llvm.is.constant.i64(i64 %40) #13
  %42 = icmp ult i64 %40, 2147483648
  %43 = trunc i64 %40 to i32
  %44 = select i1 %42, i32 %43, i32 2147483647
  %45 = icmp ult i64 %40, 2147483647
  %46 = select i1 %45, i64 %40, i64 2147483647
  %47 = trunc i64 %46 to i32
  %48 = select i1 %41, i32 %47, i32 %44
  %49 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %71, label %52

52:                                               ; preds = %38
  %53 = load atomic i64, i64* @_ZZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEElE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %54 = inttoptr i64 %53 to %"class.base::HistogramBase"*
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %52
  %57 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #13
  %58 = ptrtoint %"class.base::HistogramBase"* %57 to i64
  store atomic i64 %58, i64* @_ZZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEElE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %59

59:                                               ; preds = %52, %56
  %60 = phi %"class.base::HistogramBase"* [ %54, %52 ], [ %57, %56 ]
  %61 = load i8, i8* %49, align 4, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %"class.base::HistogramBase"* %60 to void (%"class.base::HistogramBase"*, i32)***
  %68 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %68, i64 6
  %70 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %69, align 8
  tail call void %70(%"class.base::HistogramBase"* %60, i32 %66) #13
  br label %71

71:                                               ; preds = %38, %64
  %72 = load atomic i64, i64* @_ZZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEElE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %73 = inttoptr i64 %72 to %"class.base::HistogramBase"*
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %71
  %76 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #13
  %77 = ptrtoint %"class.base::HistogramBase"* %76 to i64
  store atomic i64 %77, i64* @_ZZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEElE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %78

78:                                               ; preds = %71, %75
  %79 = phi %"class.base::HistogramBase"* [ %73, %71 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = bitcast %"class.base::HistogramBase"* %79 to void (%"class.base::HistogramBase"*, i32)***
  %84 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %84, i64 6
  %86 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %85, align 8
  tail call void %86(%"class.base::HistogramBase"* %79, i32 %82) #13
  %87 = load i8, i8* %49, align 4, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %107, label %89

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %107

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 5, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = sitofp i32 %95 to double
  %97 = fmul double %96, 1.000000e+02
  %98 = sitofp i32 %91 to double
  %99 = fdiv double %97, %98
  %100 = fcmp ult double %99, 0xC1E0000000000000
  %101 = fcmp ugt double %99, 0x41DFFFFFFFC00000
  %102 = fcmp ogt double %99, 0xC1E0000000000000
  %103 = select i1 %102, double %99, double 0xC1E0000000000000
  %104 = fptosi double %103 to i32
  %105 = select i1 %100, i32 0, i32 2147483647
  %106 = select i1 %101, i32 %105, i32 %104
  br label %107

107:                                              ; preds = %78, %93, %89
  %108 = phi i32 [ %106, %93 ], [ 0, %89 ], [ 0, %78 ]
  %109 = load atomic i64, i64* @_ZZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEElE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %110 = inttoptr i64 %109 to %"class.base::HistogramBase"*
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #13
  %114 = ptrtoint %"class.base::HistogramBase"* %113 to i64
  store atomic i64 %114, i64* @_ZZNK3net23QuicConnectivityMonitor35RecordConnectivityStatsToHistogramsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEElE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %115

115:                                              ; preds = %107, %112
  %116 = phi %"class.base::HistogramBase"* [ %110, %107 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 5, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = bitcast %"class.base::HistogramBase"* %116 to void (%"class.base::HistogramBase"*, i32)***
  %120 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %120, i64 6
  %122 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %121, align 8
  tail call void %122(%"class.base::HistogramBase"* %116, i32 %118) #13
  %123 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #13
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %126 = load i32, i32* %117, align 4
  call void @_ZN4base24UmaHistogramCustomCountsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 %126, i32 1, i32 100, i32 50) #13
  %127 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #13
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  call void @_ZN4base38UmaHistogramPercentageObsoleteDoNotUseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 %108) #13
  %130 = load i64, i64* %80, align 8
  %131 = icmp ult i64 %130, 2
  br i1 %131, label %159, label %132

132:                                              ; preds = %115
  %133 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #13
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  call void @_ZN4base24UmaHistogramCustomCountsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 %48, i32 1, i32 100, i32 50) #13
  %136 = sitofp i32 %48 to double
  %137 = fmul double %136, 1.000000e+02
  %138 = load i64, i64* %80, align 8
  %139 = uitofp i64 %138 to double
  %140 = fdiv double %137, %139
  %141 = fptosi double %140 to i32
  %142 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #13
  %143 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.8, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  call void @_ZN4base38UmaHistogramPercentageObsoleteDoNotUseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 %141) #13
  %144 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %132
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %150) #14
  br label %151

151:                                              ; preds = %132, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #13
  %152 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %151
  %157 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %157) #14
  br label %158

158:                                              ; preds = %151, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br label %159

159:                                              ; preds = %115, %158
  %160 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %165) #14
  br label %166

166:                                              ; preds = %159, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #13
  %167 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  %172 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %172) #14
  br label %173

173:                                              ; preds = %166, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #13
  br label %174

174:                                              ; preds = %34, %173
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net23QuicConnectivityMonitor23GetNumDegradingSessionsEv(%"class.net::QuicConnectivityMonitor"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN4base24UmaHistogramCustomCountsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiiii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32) local_unnamed_addr #5

declare void @_ZN4base38UmaHistogramPercentageObsoleteDoNotUseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net23QuicConnectivityMonitor25GetCountForWriteErrorCodeEi(%"class.net::QuicConnectivityMonitor"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 4
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair"* %22, %"struct.std::__1::pair"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  br label %41

41:                                               ; preds = %30, %34, %38
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::pair"*
  %44 = icmp eq %"struct.std::__1::pair"* %32, %43
  %45 = select i1 %44, %"struct.std::__1::pair"* %11, %"struct.std::__1::pair"* %32
  %46 = icmp eq %"struct.std::__1::pair"* %45, %11
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %41, %47
  %51 = phi i64 [ %49, %47 ], [ 0, %41 ]
  ret i64 %51
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net23QuicConnectivityMonitor24SetInitialDefaultNetworkEl(%"class.net::QuicConnectivityMonitor"* nocapture, i64) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitor22OnSessionPathDegradingEPNS_25QuicChromiumClientSessionEl(%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*, i64) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = ptrtoint %"class.net::QuicChromiumClientSession"* %1 to i64
  %7 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %2
  br i1 %9, label %10, label %220

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node"* %14, null
  br i1 %15, label %44, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %40, %16
  %19 = phi %"class.std::__1::__tree_node"* [ %43, %40 ], [ %14, %16 ]
  %20 = phi %"class.std::__1::__tree_node_base"** [ %42, %40 ], [ %17, %16 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1
  %22 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %21, align 8
  %23 = icmp ugt %"class.net::QuicChromiumClientSession"* %22, %1
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %46

30:                                               ; preds = %18
  %31 = icmp ult %"class.net::QuicChromiumClientSession"* %22, %1
  br i1 %31, label %32, label %38

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %46

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %46

40:                                               ; preds = %32, %24
  %41 = phi %"class.std::__1::__tree_node_base"* [ %26, %24 ], [ %34, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %25, %24 ], [ %33, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"* %41 to %"class.std::__1::__tree_node"*
  br label %18

44:                                               ; preds = %10
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 0, i32 0
  br label %46

46:                                               ; preds = %44, %38, %36, %28
  %47 = phi %"class.std::__1::__tree_end_node"* [ %12, %44 ], [ %29, %28 ], [ %37, %36 ], [ %39, %38 ]
  %48 = phi %"class.std::__1::__tree_node_base"** [ %45, %44 ], [ %25, %28 ], [ %33, %36 ], [ %20, %38 ]
  %49 = bitcast %"class.std::__1::__tree_node_base"** %48 to %"class.std::__1::__tree_node"**
  %50 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node"* %50, null
  br i1 %51, label %52, label %76

52:                                               ; preds = %46
  %53 = tail call i8* @_Znwm(i64 40) #14, !noalias !3
  %54 = getelementptr inbounds i8, i8* %53, i64 32
  %55 = bitcast i8* %54 to i64*
  store i64 %6, i64* %55, align 8, !noalias !3
  %56 = bitcast i8* %53 to %"class.std::__1::__tree_node_base"*
  %57 = getelementptr inbounds i8, i8* %53, i64 16
  %58 = bitcast i8* %57 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %47, %"class.std::__1::__tree_end_node"** %58, align 8
  %59 = bitcast %"class.std::__1::__tree_node_base"** %48 to i8**
  store i8* %53, i8** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %52
  %66 = ptrtoint %"class.std::__1::__tree_node_base"* %63 to i64
  %67 = bitcast %"class.std::__1::set"* %11 to i64*
  store i64 %66, i64* %67, align 8
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  br label %69

69:                                               ; preds = %65, %52
  %70 = phi %"class.std::__1::__tree_node_base"* [ %56, %52 ], [ %68, %65 ]
  %71 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %72, %"class.std::__1::__tree_node_base"* %70) #13
  %73 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %46, %69
  %77 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 5, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %78, i32 1) #13
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 2147483647, i32 %81, !prof !6
  store i32 %82, i32* %77, align 4
  %83 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3
  %84 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node"**
  %86 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node"* %86, null
  br i1 %87, label %116, label %88

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %90

90:                                               ; preds = %112, %88
  %91 = phi %"class.std::__1::__tree_node"* [ %115, %112 ], [ %86, %88 ]
  %92 = phi %"class.std::__1::__tree_node_base"** [ %114, %112 ], [ %89, %88 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 1
  %94 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %93, align 8
  %95 = icmp ugt %"class.net::QuicChromiumClientSession"* %94, %1
  br i1 %95, label %96, label %102

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %100, label %112

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 0, i32 0
  br label %118

102:                                              ; preds = %90
  %103 = icmp ult %"class.net::QuicChromiumClientSession"* %94, %1
  br i1 %103, label %104, label %110

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 0, i32 1
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 0, i32 0
  br label %118

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 0, i32 0
  br label %118

112:                                              ; preds = %104, %96
  %113 = phi %"class.std::__1::__tree_node_base"* [ %98, %96 ], [ %106, %104 ]
  %114 = phi %"class.std::__1::__tree_node_base"** [ %97, %96 ], [ %105, %104 ]
  %115 = bitcast %"class.std::__1::__tree_node_base"* %113 to %"class.std::__1::__tree_node"*
  br label %90

116:                                              ; preds = %76
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  br label %118

118:                                              ; preds = %116, %110, %108, %100
  %119 = phi %"class.std::__1::__tree_end_node"* [ %84, %116 ], [ %101, %100 ], [ %109, %108 ], [ %111, %110 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %117, %116 ], [ %97, %100 ], [ %105, %108 ], [ %92, %110 ]
  %121 = bitcast %"class.std::__1::__tree_node_base"** %120 to %"class.std::__1::__tree_node"**
  %122 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node"* %122, null
  br i1 %123, label %124, label %148

124:                                              ; preds = %118
  %125 = tail call i8* @_Znwm(i64 40) #14, !noalias !7
  %126 = getelementptr inbounds i8, i8* %125, i64 32
  %127 = bitcast i8* %126 to i64*
  store i64 %6, i64* %127, align 8, !noalias !7
  %128 = bitcast i8* %125 to %"class.std::__1::__tree_node_base"*
  %129 = getelementptr inbounds i8, i8* %125, i64 16
  %130 = bitcast i8* %129 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %130, align 8
  %131 = bitcast %"class.std::__1::__tree_node_base"** %120 to i8**
  store i8* %125, i8** %131, align 8
  %132 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %83, i64 0, i32 0, i32 0
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %124
  %138 = ptrtoint %"class.std::__1::__tree_node_base"* %135 to i64
  %139 = bitcast %"class.std::__1::set"* %83 to i64*
  store i64 %138, i64* %139, align 8
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  br label %141

141:                                              ; preds = %137, %124
  %142 = phi %"class.std::__1::__tree_node_base"* [ %128, %124 ], [ %140, %137 ]
  %143 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %144, %"class.std::__1::__tree_node_base"* %142) #13
  %145 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 1
  store i64 %147, i64* %145, align 8
  br label %148

148:                                              ; preds = %118, %141
  %149 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %150 = load i8, i8* %149, align 4, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = tail call i1 @llvm.is.constant.i64(i64 %154) #13
  %156 = icmp ult i64 %154, 2147483648
  %157 = trunc i64 %154 to i32
  %158 = select i1 %156, i32 %157, i32 2147483647
  %159 = icmp ult i64 %154, 2147483647
  %160 = select i1 %159, i64 %154, i64 2147483647
  %161 = trunc i64 %160 to i32
  %162 = select i1 %155, i32 %161, i32 %158
  store i8 1, i8* %149, align 4
  %163 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %162, i32* %163, align 4
  br label %220

164:                                              ; preds = %148
  %165 = load atomic i64, i64* @_ZZN3net23QuicConnectivityMonitor22OnSessionPathDegradingEPNS_25QuicChromiumClientSessionElE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %166 = inttoptr i64 %165 to %"class.base::HistogramBase"*
  %167 = icmp eq i64 %165, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %164
  %169 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.9, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #13
  %170 = ptrtoint %"class.base::HistogramBase"* %169 to i64
  store atomic i64 %170, i64* @_ZZN3net23QuicConnectivityMonitor22OnSessionPathDegradingEPNS_25QuicChromiumClientSessionElE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %171

171:                                              ; preds = %164, %168
  %172 = phi %"class.base::HistogramBase"* [ %166, %164 ], [ %169, %168 ]
  %173 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7
  %174 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #13
  store i32 27, i32* %5, align 4
  %175 = getelementptr inbounds %"class.base::flat_map.15", %"class.base::flat_map.15"* %173, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %175, align 8
  %177 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %178 = bitcast %"struct.std::__1::pair.19"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = ptrtoint %"struct.std::__1::pair.19"* %176 to i64
  %181 = sub i64 %179, %180
  %182 = icmp eq i64 %181, 0
  %183 = inttoptr i64 %179 to %"struct.std::__1::pair.19"*
  br i1 %182, label %200, label %184

184:                                              ; preds = %171
  %185 = ashr exact i64 %181, 4
  br label %186

186:                                              ; preds = %186, %184
  %187 = phi %"struct.std::__1::pair.19"* [ %176, %184 ], [ %198, %186 ]
  %188 = phi i64 [ %185, %184 ], [ %197, %186 ]
  %189 = lshr i64 %188, 1
  %190 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %187, i64 %189
  %191 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %190, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = icmp slt i32 %192, 27
  %194 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %190, i64 1
  %195 = xor i64 %189, -1
  %196 = add i64 %188, %195
  %197 = select i1 %193, i64 %196, i64 %189
  %198 = select i1 %193, %"struct.std::__1::pair.19"* %194, %"struct.std::__1::pair.19"* %187
  %199 = icmp eq i64 %197, 0
  br i1 %199, label %200, label %186

200:                                              ; preds = %186, %171
  %201 = phi %"struct.std::__1::pair.19"* [ %176, %171 ], [ %198, %186 ]
  %202 = icmp eq %"struct.std::__1::pair.19"* %201, %183
  br i1 %202, label %207, label %203

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %201, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = icmp sgt i32 %205, 27
  br i1 %206, label %207, label %211

207:                                              ; preds = %203, %200
  %208 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #13
  store i64 0, i64* %4, align 8
  %209 = getelementptr inbounds %"class.base::flat_map.15", %"class.base::flat_map.15"* %173, i64 0, i32 0, i32 0
  %210 = call %"struct.std::__1::pair.19"* @_ZNSt3__16vectorINS_4pairIN4quic13QuicErrorCodeEmEENS_9allocatorIS4_EEE7emplaceIJS3_mEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.17"* %209, %"struct.std::__1::pair.19"* %201, i32* nonnull dereferenceable(4) %5, i64* nonnull dereferenceable(8) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #13
  br label %211

211:                                              ; preds = %203, %207
  %212 = phi %"struct.std::__1::pair.19"* [ %210, %207 ], [ %201, %203 ]
  %213 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %212, i64 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = trunc i64 %214 to i32
  %216 = bitcast %"class.base::HistogramBase"* %172 to void (%"class.base::HistogramBase"*, i32)***
  %217 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %216, align 8
  %218 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %217, i64 6
  %219 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %218, align 8
  call void %219(%"class.base::HistogramBase"* %172, i32 %215) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #13
  br label %220

220:                                              ; preds = %3, %211, %152
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitor33OnSessionResumedPostPathDegradingEPNS_25QuicChromiumClientSessionEl(%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*, i64) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.net::QuicChromiumClientSession"* %1 to i64
  %5 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, %2
  br i1 %7, label %8, label %147

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node"* %12, null
  %14 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node_base"*
  br i1 %13, label %78, label %15

15:                                               ; preds = %8, %15
  %16 = phi %"class.std::__1::__tree_end_node"* [ %26, %15 ], [ %10, %8 ]
  %17 = phi %"class.std::__1::__tree_node"* [ %27, %15 ], [ %12, %8 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1
  %19 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %18, align 8
  %20 = icmp ult %"class.net::QuicChromiumClientSession"* %19, %1
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__tree_node_base"** %21 to %"class.std::__1::__tree_node"**
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node"* %17 to %"class.std::__1::__tree_node"**
  %25 = select i1 %20, %"class.std::__1::__tree_node"** %22, %"class.std::__1::__tree_node"** %24
  %26 = select i1 %20, %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"* %23
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %28 = icmp eq %"class.std::__1::__tree_node"* %27, null
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = icmp eq %"class.std::__1::__tree_end_node"* %26, %10
  br i1 %30, label %78, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 4
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.net::QuicChromiumClientSession"**
  %34 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %33, align 8
  %35 = icmp ugt %"class.net::QuicChromiumClientSession"* %34, %1
  br i1 %35, label %78, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 1, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node_base"*
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 2
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_end_node"**
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, %41
  br i1 %47, label %64, label %55

48:                                               ; preds = %36, %48
  %49 = phi %"class.std::__1::__tree_node_base"* [ %51, %48 ], [ %38, %36 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %53, label %48

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 0
  br label %64

55:                                               ; preds = %40, %55
  %56 = phi %"class.std::__1::__tree_end_node"** [ %59, %55 ], [ %43, %40 ]
  %57 = bitcast %"class.std::__1::__tree_end_node"** %56 to %"class.std::__1::__tree_node_base"**
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 2
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, %58
  br i1 %63, label %64, label %55

64:                                               ; preds = %55, %53, %40
  %65 = phi %"class.std::__1::__tree_end_node"* [ %54, %53 ], [ %44, %40 ], [ %60, %55 ]
  %66 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %9, i64 0, i32 0
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_end_node"* %67, %26
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = ptrtoint %"class.std::__1::__tree_end_node"* %65 to i64
  %71 = bitcast %"class.std::__1::__tree"* %9 to i64*
  store i64 %70, i64* %71, align 8
  br label %72

72:                                               ; preds = %69, %64
  %73 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, -1
  store i64 %75, i64* %73, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %14, %"class.std::__1::__tree_node_base"* %76) #13
  %77 = bitcast %"class.std::__1::__tree_end_node"* %26 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %8, %29, %31, %72
  %79 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3
  %80 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.std::__1::__tree_node"**
  %82 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node"* %82, null
  br i1 %83, label %112, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %86

86:                                               ; preds = %108, %84
  %87 = phi %"class.std::__1::__tree_node"* [ %111, %108 ], [ %82, %84 ]
  %88 = phi %"class.std::__1::__tree_node_base"** [ %110, %108 ], [ %85, %84 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 1
  %90 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %89, align 8
  %91 = icmp ugt %"class.net::QuicChromiumClientSession"* %90, %1
  br i1 %91, label %92, label %98

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %108

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 0, i32 0
  br label %114

98:                                               ; preds = %86
  %99 = icmp ult %"class.net::QuicChromiumClientSession"* %90, %1
  br i1 %99, label %100, label %106

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 0, i32 1
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, null
  br i1 %103, label %104, label %108

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 0, i32 0
  br label %114

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 0, i32 0
  br label %114

108:                                              ; preds = %100, %92
  %109 = phi %"class.std::__1::__tree_node_base"* [ %94, %92 ], [ %102, %100 ]
  %110 = phi %"class.std::__1::__tree_node_base"** [ %93, %92 ], [ %101, %100 ]
  %111 = bitcast %"class.std::__1::__tree_node_base"* %109 to %"class.std::__1::__tree_node"*
  br label %86

112:                                              ; preds = %78
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  br label %114

114:                                              ; preds = %112, %106, %104, %96
  %115 = phi %"class.std::__1::__tree_end_node"* [ %80, %112 ], [ %97, %96 ], [ %105, %104 ], [ %107, %106 ]
  %116 = phi %"class.std::__1::__tree_node_base"** [ %113, %112 ], [ %93, %96 ], [ %101, %104 ], [ %88, %106 ]
  %117 = bitcast %"class.std::__1::__tree_node_base"** %116 to %"class.std::__1::__tree_node"**
  %118 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node"* %118, null
  br i1 %119, label %120, label %144

120:                                              ; preds = %114
  %121 = tail call i8* @_Znwm(i64 40) #14, !noalias !10
  %122 = getelementptr inbounds i8, i8* %121, i64 32
  %123 = bitcast i8* %122 to i64*
  store i64 %4, i64* %123, align 8, !noalias !10
  %124 = bitcast i8* %121 to %"class.std::__1::__tree_node_base"*
  %125 = getelementptr inbounds i8, i8* %121, i64 16
  %126 = bitcast i8* %125 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %115, %"class.std::__1::__tree_end_node"** %126, align 8
  %127 = bitcast %"class.std::__1::__tree_node_base"** %116 to i8**
  store i8* %121, i8** %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %79, i64 0, i32 0, i32 0
  %129 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %137, label %133

133:                                              ; preds = %120
  %134 = ptrtoint %"class.std::__1::__tree_node_base"* %131 to i64
  %135 = bitcast %"class.std::__1::set"* %79 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  br label %137

137:                                              ; preds = %133, %120
  %138 = phi %"class.std::__1::__tree_node_base"* [ %124, %120 ], [ %136, %133 ]
  %139 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %140, %"class.std::__1::__tree_node_base"* %138) #13
  %141 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %141, align 8
  br label %144

144:                                              ; preds = %114, %137
  %145 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 5, i32 0
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %146, align 4
  br label %147

147:                                              ; preds = %3, %144
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitor31OnSessionEncounteringWriteErrorEPNS_25QuicChromiumClientSessionEli(%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*, i64, i32) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = ptrtoint %"class.net::QuicChromiumClientSession"* %1 to i64
  store i32 %3, i32* %6, align 4
  %8 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, %2
  br i1 %10, label %11, label %174

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %16 = icmp eq %"class.std::__1::__tree_node"* %15, null
  br i1 %16, label %45, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %41, %17
  %20 = phi %"class.std::__1::__tree_node"* [ %44, %41 ], [ %15, %17 ]
  %21 = phi %"class.std::__1::__tree_node_base"** [ %43, %41 ], [ %18, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 1
  %23 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %22, align 8
  %24 = icmp ugt %"class.net::QuicChromiumClientSession"* %23, %1
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %41

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  br label %47

31:                                               ; preds = %19
  %32 = icmp ult %"class.net::QuicChromiumClientSession"* %23, %1
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 1
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  br label %47

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  br label %47

41:                                               ; preds = %33, %25
  %42 = phi %"class.std::__1::__tree_node_base"* [ %27, %25 ], [ %35, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %26, %25 ], [ %34, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"* %42 to %"class.std::__1::__tree_node"*
  br label %19

45:                                               ; preds = %11
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  br label %47

47:                                               ; preds = %45, %39, %37, %29
  %48 = phi %"class.std::__1::__tree_end_node"* [ %13, %45 ], [ %30, %29 ], [ %38, %37 ], [ %40, %39 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %46, %45 ], [ %26, %29 ], [ %34, %37 ], [ %21, %39 ]
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node"* %51, null
  br i1 %52, label %53, label %77

53:                                               ; preds = %47
  %54 = tail call i8* @_Znwm(i64 40) #14, !noalias !13
  %55 = getelementptr inbounds i8, i8* %54, i64 32
  %56 = bitcast i8* %55 to i64*
  store i64 %7, i64* %56, align 8, !noalias !13
  %57 = bitcast i8* %54 to %"class.std::__1::__tree_node_base"*
  %58 = getelementptr inbounds i8, i8* %54, i64 16
  %59 = bitcast i8* %58 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %59, align 8
  %60 = bitcast %"class.std::__1::__tree_node_base"** %49 to i8**
  store i8* %54, i8** %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %53
  %67 = ptrtoint %"class.std::__1::__tree_node_base"* %64 to i64
  %68 = bitcast %"class.std::__1::set"* %12 to i64*
  store i64 %67, i64* %68, align 8
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  br label %70

70:                                               ; preds = %66, %53
  %71 = phi %"class.std::__1::__tree_node_base"* [ %57, %53 ], [ %69, %66 ]
  %72 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %73, %"class.std::__1::__tree_node_base"* %71) #13
  %74 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %74, align 8
  br label %77

77:                                               ; preds = %47, %70
  %78 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6
  %79 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %79, align 8
  %81 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %"struct.std::__1::pair"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = ptrtoint %"struct.std::__1::pair"* %80 to i64
  %85 = sub i64 %83, %84
  %86 = icmp eq i64 %85, 0
  %87 = inttoptr i64 %83 to %"struct.std::__1::pair"*
  br i1 %86, label %104, label %88

88:                                               ; preds = %77
  %89 = ashr exact i64 %85, 4
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi %"struct.std::__1::pair"* [ %80, %88 ], [ %102, %90 ]
  %92 = phi i64 [ %89, %88 ], [ %101, %90 ]
  %93 = lshr i64 %92, 1
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 %93
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp slt i32 %96, %3
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 1
  %99 = xor i64 %93, -1
  %100 = add i64 %92, %99
  %101 = select i1 %97, i64 %100, i64 %93
  %102 = select i1 %97, %"struct.std::__1::pair"* %98, %"struct.std::__1::pair"* %91
  %103 = icmp eq i64 %101, 0
  br i1 %103, label %104, label %90

104:                                              ; preds = %90, %77
  %105 = phi %"struct.std::__1::pair"* [ %80, %77 ], [ %102, %90 ]
  %106 = icmp eq %"struct.std::__1::pair"* %105, %87
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %109, %3
  br i1 %110, label %111, label %115

111:                                              ; preds = %107, %104
  %112 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #13
  store i64 0, i64* %5, align 8
  %113 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %78, i64 0, i32 0, i32 0
  %114 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIimEENS_9allocatorIS2_EEE7emplaceIJRKimEEENS_11__wrap_iterIPS2_EENS9_IPKS2_EEDpOT_(%"class.std::__1::vector"* %113, %"struct.std::__1::pair"* %105, i32* nonnull dereferenceable(4) %6, i64* nonnull dereferenceable(8) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13
  br label %115

115:                                              ; preds = %107, %111
  %116 = phi %"struct.std::__1::pair"* [ %114, %111 ], [ %105, %107 ]
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %116, i64 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %121 = bitcast %"class.std::__1::__tree_end_node"* %120 to %"class.std::__1::__tree_node"**
  %122 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node"* %122, null
  br i1 %123, label %145, label %124

124:                                              ; preds = %115, %124
  %125 = phi %"class.std::__1::__tree_end_node"* [ %135, %124 ], [ %120, %115 ]
  %126 = phi %"class.std::__1::__tree_node"* [ %136, %124 ], [ %122, %115 ]
  %127 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %126, i64 0, i32 1
  %128 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %127, align 8
  %129 = icmp ult %"class.net::QuicChromiumClientSession"* %128, %1
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %126, i64 0, i32 0, i32 1
  %131 = bitcast %"class.std::__1::__tree_node_base"** %130 to %"class.std::__1::__tree_node"**
  %132 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %126, i64 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::__tree_node"* %126 to %"class.std::__1::__tree_node"**
  %134 = select i1 %129, %"class.std::__1::__tree_node"** %131, %"class.std::__1::__tree_node"** %133
  %135 = select i1 %129, %"class.std::__1::__tree_end_node"* %125, %"class.std::__1::__tree_end_node"* %132
  %136 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %134, align 8
  %137 = icmp eq %"class.std::__1::__tree_node"* %136, null
  br i1 %137, label %138, label %124

138:                                              ; preds = %124
  %139 = icmp eq %"class.std::__1::__tree_end_node"* %135, %120
  br i1 %139, label %145, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 4
  %142 = bitcast %"class.std::__1::__tree_end_node"* %141 to %"class.net::QuicChromiumClientSession"**
  %143 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %142, align 8
  %144 = icmp ugt %"class.net::QuicChromiumClientSession"* %143, %1
  br i1 %144, label %145, label %146

145:                                              ; preds = %140, %138, %115
  br label %146

146:                                              ; preds = %140, %145
  %147 = phi %"class.std::__1::__tree_end_node"* [ %120, %145 ], [ %135, %140 ]
  %148 = icmp ne %"class.std::__1::__tree_end_node"* %147, %120
  %149 = load atomic i64, i64* @_ZZN3net23QuicConnectivityMonitor31OnSessionEncounteringWriteErrorEPNS_25QuicChromiumClientSessionEliE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %150 = inttoptr i64 %149 to %"class.base::HistogramBase"*
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %146
  %153 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.10, i64 0, i64 0), i32 1) #13
  %154 = ptrtoint %"class.base::HistogramBase"* %153 to i64
  store atomic i64 %154, i64* @_ZZN3net23QuicConnectivityMonitor31OnSessionEncounteringWriteErrorEPNS_25QuicChromiumClientSessionEliE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %155

155:                                              ; preds = %146, %152
  %156 = phi %"class.base::HistogramBase"* [ %150, %146 ], [ %153, %152 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %156, i1 zeroext %148) #13
  %157 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %158 = load i8, i8* %157, align 4, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %174

160:                                              ; preds = %155
  %161 = load i32, i32* %6, align 4
  switch i32 %161, label %174 [
    i32 -10, label %162
    i32 -109, label %162
    i32 -106, label %162
  ]

162:                                              ; preds = %160, %160, %160
  %163 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = call i1 @llvm.is.constant.i64(i64 %164) #13
  %166 = icmp ult i64 %164, 2147483648
  %167 = trunc i64 %164 to i32
  %168 = select i1 %166, i32 %167, i32 2147483647
  %169 = icmp ult i64 %164, 2147483647
  %170 = select i1 %169, i64 %164, i64 2147483647
  %171 = trunc i64 %170 to i32
  %172 = select i1 %165, i32 %171, i32 %168
  store i8 1, i8* %157, align 4
  %173 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %172, i32* %173, align 4
  br label %174

174:                                              ; preds = %155, %160, %162, %4
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #5

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitor29OnSessionClosedAfterHandshakeEPNS_25QuicChromiumClientSessionElN4quic21ConnectionCloseSourceENS3_13QuicErrorCodeE(%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"* nocapture readnone, i64, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i32 %4, i32* %8, align 4
  %9 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, %2
  br i1 %11, label %12, label %103

12:                                               ; preds = %5
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %14, label %59

14:                                               ; preds = %12
  %15 = icmp eq i32 %4, 19
  br i1 %15, label %16, label %103

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7
  %18 = getelementptr inbounds %"class.base::flat_map.15", %"class.base::flat_map.15"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %18, align 8
  %20 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::pair.19"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint %"struct.std::__1::pair.19"* %19 to i64
  %24 = sub i64 %22, %23
  %25 = icmp eq i64 %24, 0
  %26 = inttoptr i64 %22 to %"struct.std::__1::pair.19"*
  br i1 %25, label %43, label %27

27:                                               ; preds = %16
  %28 = ashr exact i64 %24, 4
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi %"struct.std::__1::pair.19"* [ %19, %27 ], [ %41, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %40, %29 ]
  %32 = lshr i64 %31, 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %30, i64 %32
  %34 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, 19
  %37 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %33, i64 1
  %38 = xor i64 %32, -1
  %39 = add i64 %31, %38
  %40 = select i1 %36, i64 %39, i64 %32
  %41 = select i1 %36, %"struct.std::__1::pair.19"* %37, %"struct.std::__1::pair.19"* %30
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %29

43:                                               ; preds = %29, %16
  %44 = phi %"struct.std::__1::pair.19"* [ %19, %16 ], [ %41, %29 ]
  %45 = icmp eq %"struct.std::__1::pair.19"* %44, %26
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %44, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, 19
  br i1 %49, label %50, label %54

50:                                               ; preds = %46, %43
  %51 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  store i64 0, i64* %7, align 8
  %52 = getelementptr inbounds %"class.base::flat_map.15", %"class.base::flat_map.15"* %17, i64 0, i32 0, i32 0
  %53 = call %"struct.std::__1::pair.19"* @_ZNSt3__16vectorINS_4pairIN4quic13QuicErrorCodeEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.17"* %52, %"struct.std::__1::pair.19"* %44, i32* nonnull dereferenceable(4) %8, i64* nonnull dereferenceable(8) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %54

54:                                               ; preds = %46, %50
  %55 = phi %"struct.std::__1::pair.19"* [ %53, %50 ], [ %44, %46 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %56, align 8
  br label %103

59:                                               ; preds = %12
  switch i32 %4, label %103 [
    i32 85, label %60
    i32 27, label %60
  ]

60:                                               ; preds = %59, %59
  %61 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7
  %62 = getelementptr inbounds %"class.base::flat_map.15", %"class.base::flat_map.15"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %62, align 8
  %64 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::pair.19"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = ptrtoint %"struct.std::__1::pair.19"* %63 to i64
  %68 = sub i64 %66, %67
  %69 = icmp eq i64 %68, 0
  %70 = inttoptr i64 %66 to %"struct.std::__1::pair.19"*
  br i1 %69, label %87, label %71

71:                                               ; preds = %60
  %72 = ashr exact i64 %68, 4
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi %"struct.std::__1::pair.19"* [ %63, %71 ], [ %85, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %84, %73 ]
  %76 = lshr i64 %75, 1
  %77 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %74, i64 %76
  %78 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, %4
  %81 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %77, i64 1
  %82 = xor i64 %76, -1
  %83 = add i64 %75, %82
  %84 = select i1 %80, i64 %83, i64 %76
  %85 = select i1 %80, %"struct.std::__1::pair.19"* %81, %"struct.std::__1::pair.19"* %74
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %87, label %73

87:                                               ; preds = %73, %60
  %88 = phi %"struct.std::__1::pair.19"* [ %63, %60 ], [ %85, %73 ]
  %89 = icmp eq %"struct.std::__1::pair.19"* %88, %70
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %88, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, %4
  br i1 %93, label %94, label %98

94:                                               ; preds = %90, %87
  %95 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #13
  store i64 0, i64* %6, align 8
  %96 = getelementptr inbounds %"class.base::flat_map.15", %"class.base::flat_map.15"* %61, i64 0, i32 0, i32 0
  %97 = call %"struct.std::__1::pair.19"* @_ZNSt3__16vectorINS_4pairIN4quic13QuicErrorCodeEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.17"* %96, %"struct.std::__1::pair.19"* %88, i32* nonnull dereferenceable(4) %8, i64* nonnull dereferenceable(8) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #13
  br label %98

98:                                               ; preds = %90, %94
  %99 = phi %"struct.std::__1::pair.19"* [ %97, %94 ], [ %88, %90 ]
  %100 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %99, i64 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %100, align 8
  br label %103

103:                                              ; preds = %59, %5, %14, %54, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitor19OnSessionRegisteredEPNS_25QuicChromiumClientSessionEl(%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*, i64) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.net::QuicChromiumClientSession"* %1 to i64
  %5 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, %2
  br i1 %7, label %8, label %85

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node"* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %38, %14
  %17 = phi %"class.std::__1::__tree_node"* [ %41, %38 ], [ %12, %14 ]
  %18 = phi %"class.std::__1::__tree_node_base"** [ %40, %38 ], [ %15, %14 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1
  %20 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %19, align 8
  %21 = icmp ugt %"class.net::QuicChromiumClientSession"* %20, %1
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %38

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  br label %44

28:                                               ; preds = %16
  %29 = icmp ult %"class.net::QuicChromiumClientSession"* %20, %1
  br i1 %29, label %30, label %36

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 1
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  br label %44

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  br label %44

38:                                               ; preds = %30, %22
  %39 = phi %"class.std::__1::__tree_node_base"* [ %24, %22 ], [ %32, %30 ]
  %40 = phi %"class.std::__1::__tree_node_base"** [ %23, %22 ], [ %31, %30 ]
  %41 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node"*
  br label %16

42:                                               ; preds = %8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  br label %44

44:                                               ; preds = %42, %36, %34, %26
  %45 = phi %"class.std::__1::__tree_end_node"* [ %10, %42 ], [ %27, %26 ], [ %35, %34 ], [ %37, %36 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %43, %42 ], [ %23, %26 ], [ %31, %34 ], [ %18, %36 ]
  %47 = bitcast %"class.std::__1::__tree_node_base"** %46 to %"class.std::__1::__tree_node"**
  %48 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node"* %48, null
  br i1 %49, label %50, label %74

50:                                               ; preds = %44
  %51 = tail call i8* @_Znwm(i64 40) #14, !noalias !16
  %52 = getelementptr inbounds i8, i8* %51, i64 32
  %53 = bitcast i8* %52 to i64*
  store i64 %4, i64* %53, align 8, !noalias !16
  %54 = bitcast i8* %51 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %51, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %45, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %46 to i8**
  store i8* %51, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %50
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.std::__1::set"* %9 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  br label %67

67:                                               ; preds = %63, %50
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %50 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #13
  %71 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %44, %67
  %75 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 4, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 1) #13
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 2147483647, i32 %83, !prof !6
  store i32 %84, i32* %79, align 4
  br label %85

85:                                               ; preds = %74, %3, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitor16OnSessionRemovedEPNS_25QuicChromiumClientSessionE(%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  %8 = bitcast %"class.std::__1::__tree_node"* %6 to %"class.std::__1::__tree_node_base"*
  br i1 %7, label %72, label %9

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %4, %2 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %21, %9 ], [ %6, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %13 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %12, align 8
  %14 = icmp ult %"class.net::QuicChromiumClientSession"* %13, %1
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %4
  br i1 %24, label %72, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.net::QuicChromiumClientSession"**
  %28 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %27, align 8
  %29 = icmp ugt %"class.net::QuicChromiumClientSession"* %28, %1
  br i1 %29, label %72, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 1, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 2
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %35
  br i1 %41, label %58, label %49

42:                                               ; preds = %30, %42
  %43 = phi %"class.std::__1::__tree_node_base"* [ %45, %42 ], [ %32, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  br label %58

49:                                               ; preds = %34, %49
  %50 = phi %"class.std::__1::__tree_end_node"** [ %53, %49 ], [ %37, %34 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"** %50 to %"class.std::__1::__tree_node_base"**
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %47, %34
  %59 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %38, %34 ], [ %54, %49 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %3, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %20
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = ptrtoint %"class.std::__1::__tree_end_node"* %59 to i64
  %65 = bitcast %"class.std::__1::__tree"* %3 to i64*
  store i64 %64, i64* %65, align 8
  br label %66

66:                                               ; preds = %63, %58
  %67 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, -1
  store i64 %69, i64* %67, align 8
  %70 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %8, %"class.std::__1::__tree_node_base"* %70) #13
  %71 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  tail call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %2, %23, %25, %66
  %73 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0
  %74 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node"**
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  %78 = bitcast %"class.std::__1::__tree_node"* %76 to %"class.std::__1::__tree_node_base"*
  br i1 %77, label %142, label %79

79:                                               ; preds = %72, %79
  %80 = phi %"class.std::__1::__tree_end_node"* [ %90, %79 ], [ %74, %72 ]
  %81 = phi %"class.std::__1::__tree_node"* [ %91, %79 ], [ %76, %72 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 1
  %83 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %82, align 8
  %84 = icmp ult %"class.net::QuicChromiumClientSession"* %83, %1
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 1
  %86 = bitcast %"class.std::__1::__tree_node_base"** %85 to %"class.std::__1::__tree_node"**
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::__tree_node"* %81 to %"class.std::__1::__tree_node"**
  %89 = select i1 %84, %"class.std::__1::__tree_node"** %86, %"class.std::__1::__tree_node"** %88
  %90 = select i1 %84, %"class.std::__1::__tree_end_node"* %80, %"class.std::__1::__tree_end_node"* %87
  %91 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %89, align 8
  %92 = icmp eq %"class.std::__1::__tree_node"* %91, null
  br i1 %92, label %93, label %79

93:                                               ; preds = %79
  %94 = icmp eq %"class.std::__1::__tree_end_node"* %90, %74
  br i1 %94, label %142, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 4
  %97 = bitcast %"class.std::__1::__tree_end_node"* %96 to %"class.net::QuicChromiumClientSession"**
  %98 = load %"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession"** %97, align 8
  %99 = icmp ugt %"class.net::QuicChromiumClientSession"* %98, %1
  br i1 %99, label %142, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 1, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, null
  br i1 %103, label %104, label %112

104:                                              ; preds = %100
  %105 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node_base"*
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 2
  %107 = bitcast %"class.std::__1::__tree_end_node"* %106 to %"class.std::__1::__tree_end_node"**
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, %105
  br i1 %111, label %128, label %119

112:                                              ; preds = %100, %112
  %113 = phi %"class.std::__1::__tree_node_base"* [ %115, %112 ], [ %102, %100 ]
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, null
  br i1 %116, label %117, label %112

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  br label %128

119:                                              ; preds = %104, %119
  %120 = phi %"class.std::__1::__tree_end_node"** [ %123, %119 ], [ %107, %104 ]
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %122, i64 0, i32 2
  %124 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, %122
  br i1 %127, label %128, label %119

128:                                              ; preds = %119, %117, %104
  %129 = phi %"class.std::__1::__tree_end_node"* [ %118, %117 ], [ %108, %104 ], [ %124, %119 ]
  %130 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %73, i64 0, i32 0
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_end_node"* %131, %90
  br i1 %132, label %133, label %136

133:                                              ; preds = %128
  %134 = ptrtoint %"class.std::__1::__tree_end_node"* %129 to i64
  %135 = bitcast %"class.std::__1::__tree"* %73 to i64*
  store i64 %134, i64* %135, align 8
  br label %136

136:                                              ; preds = %133, %128
  %137 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, -1
  store i64 %139, i64* %137, align 8
  %140 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %78, %"class.std::__1::__tree_node_base"* %140) #13
  %141 = bitcast %"class.std::__1::__tree_end_node"* %90 to i8*
  tail call void @_ZdlPv(i8* %141) #14
  br label %142

142:                                              ; preds = %72, %93, %95, %136
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitor23OnDefaultNetworkUpdatedEl(%"class.net::QuicConnectivityMonitor"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_node"* %8) #13
  %9 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  tail call void @_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %13, %"class.std::__1::__tree_node"* %16) #13
  %17 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %19, align 8
  %20 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6, i32 0
  %22 = bitcast %"class.base::internal::flat_tree"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::pair"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7, i32 0
  %27 = bitcast %"class.base::internal::flat_tree.16"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::pair.19"** %29 to i64*
  store i64 %28, i64* %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitor18OnIPAddressChangedEv(%"class.net::QuicConnectivityMonitor"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN3net21NetworkChangeNotifier26AreNetworkHandlesSupportedEv() #13
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_node"* %8) #13
  %9 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6, i32 0
  %13 = bitcast %"class.base::internal::flat_tree"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  store i64 %14, i64* %16, align 8
  br label %17

17:                                               ; preds = %1, %3
  ret void
}

declare zeroext i1 @_ZN3net21NetworkChangeNotifier26AreNetworkHandlesSupportedEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23QuicConnectivityMonitor35OnSessionGoingAwayOnIPAddressChangeEPNS_25QuicChromiumClientSessionE(%"class.net::QuicConnectivityMonitor"*, %"class.net::QuicChromiumClientSession"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectivityMonitor", %"class.net::QuicConnectivityMonitor"* %0, i64 0, i32 0
  tail call void @_ZN3net25QuicChromiumClientSession26RemoveConnectivityObserverEPNS0_20ConnectivityObserverE(%"class.net::QuicChromiumClientSession"* %1, %"class.net::QuicChromiumClientSession::ConnectivityObserver"* %3) #13
  ret void
}

declare void @_ZN3net25QuicChromiumClientSession26RemoveConnectivityObserverEPNS0_20ConnectivityObserverE(%"class.net::QuicChromiumClientSession"*, %"class.net::QuicChromiumClientSession::ConnectivityObserver"*) local_unnamed_addr #5

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.19"* @_ZNSt3__16vectorINS_4pairIN4quic13QuicErrorCodeEmEENS_9allocatorIS4_EEE7emplaceIJS3_mEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.17"*, %"struct.std::__1::pair.19"*, i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.19"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.954", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.19"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.19"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair.19"* %11 to i64
  br i1 %12, label %15, label %144

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.19"* %9, %1
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 0, i32 0
  %19 = load i32, i32* %2, align 4
  store i32 %19, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 0, i32 1
  %21 = load i64, i64* %3, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 1
  %23 = ptrtoint %"struct.std::__1::pair.19"* %22 to i64
  %24 = bitcast %"struct.std::__1::pair.19"** %8 to i64*
  store i64 %23, i64* %24, align 8
  br label %295

25:                                               ; preds = %15
  %26 = load i32, i32* %2, align 4
  %27 = load i64, i64* %3, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 1
  %29 = ptrtoint %"struct.std::__1::pair.19"* %28 to i64
  %30 = sub i64 %13, %29
  %31 = ashr exact i64 %30, 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 %31
  %33 = bitcast %"struct.std::__1::pair.19"** %8 to i64*
  %34 = icmp ult %"struct.std::__1::pair.19"* %32, %9
  br i1 %34, label %35, label %64

35:                                               ; preds = %25
  %36 = sub nsw i64 0, %31
  %37 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %9, i64 %36, i32 0
  %38 = bitcast i32* %37 to i8*
  %39 = xor i64 %5, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 4
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %35, %46
  %47 = phi %"struct.std::__1::pair.19"* [ %53, %46 ], [ %9, %35 ]
  %48 = phi %"struct.std::__1::pair.19"* [ %52, %46 ], [ %32, %35 ]
  %49 = phi i64 [ %54, %46 ], [ %44, %35 ]
  %50 = bitcast %"struct.std::__1::pair.19"* %47 to i8*
  %51 = bitcast %"struct.std::__1::pair.19"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #13
  %52 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %48, i64 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %47, i64 1
  %54 = add i64 %49, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %46, !llvm.loop !19

56:                                               ; preds = %46, %35
  %57 = phi %"struct.std::__1::pair.19"* [ %9, %35 ], [ %53, %46 ]
  %58 = phi %"struct.std::__1::pair.19"* [ %32, %35 ], [ %52, %46 ]
  %59 = phi %"struct.std::__1::pair.19"* [ undef, %35 ], [ %53, %46 ]
  %60 = icmp ult i8* %40, inttoptr (i64 48 to i8*)
  br i1 %60, label %61, label %121

61:                                               ; preds = %121, %56
  %62 = phi %"struct.std::__1::pair.19"* [ %59, %56 ], [ %139, %121 ]
  %63 = ptrtoint %"struct.std::__1::pair.19"* %62 to i64
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi i64 [ %63, %61 ], [ %13, %25 ]
  store i64 %65, i64* %33, align 8
  %66 = icmp eq i64 %30, 0
  br i1 %66, label %141, label %67

67:                                               ; preds = %64
  %68 = add i64 %30, -16
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %67, %73
  %74 = phi %"struct.std::__1::pair.19"* [ %78, %73 ], [ %9, %67 ]
  %75 = phi %"struct.std::__1::pair.19"* [ %77, %73 ], [ %32, %67 ]
  %76 = phi i64 [ %85, %73 ], [ %71, %67 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %75, i64 -1
  %78 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %74, i64 -1
  %79 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %77, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %78, i64 0, i32 0
  store i32 %80, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %75, i64 -1, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %74, i64 -1, i32 1
  store i64 %83, i64* %84, align 8
  %85 = add i64 %76, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73, !llvm.loop !21

87:                                               ; preds = %73, %67
  %88 = phi %"struct.std::__1::pair.19"* [ %9, %67 ], [ %78, %73 ]
  %89 = phi %"struct.std::__1::pair.19"* [ %32, %67 ], [ %77, %73 ]
  %90 = icmp ult i64 %68, 48
  br i1 %90, label %141, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::pair.19"* [ %113, %91 ], [ %88, %87 ]
  %93 = phi %"struct.std::__1::pair.19"* [ %112, %91 ], [ %89, %87 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -1, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -1, i32 0
  store i32 %95, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -1, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -1, i32 1
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -2, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -2, i32 0
  store i32 %101, i32* %102, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -2, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -2, i32 1
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -3, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -3, i32 0
  store i32 %107, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -3, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -3, i32 1
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -4
  %113 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -4
  %114 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %112, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %113, i64 0, i32 0
  store i32 %115, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -4, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -4, i32 1
  store i64 %118, i64* %119, align 8
  %120 = icmp eq %"struct.std::__1::pair.19"* %112, %1
  br i1 %120, label %141, label %91

121:                                              ; preds = %56, %121
  %122 = phi %"struct.std::__1::pair.19"* [ %139, %121 ], [ %57, %56 ]
  %123 = phi %"struct.std::__1::pair.19"* [ %138, %121 ], [ %58, %56 ]
  %124 = bitcast %"struct.std::__1::pair.19"* %122 to i8*
  %125 = bitcast %"struct.std::__1::pair.19"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #13
  %126 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 1
  %127 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %122, i64 1
  %128 = bitcast %"struct.std::__1::pair.19"* %127 to i8*
  %129 = bitcast %"struct.std::__1::pair.19"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 16, i1 false) #13
  %130 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 2
  %131 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %122, i64 2
  %132 = bitcast %"struct.std::__1::pair.19"* %131 to i8*
  %133 = bitcast %"struct.std::__1::pair.19"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 16, i1 false) #13
  %134 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 3
  %135 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %122, i64 3
  %136 = bitcast %"struct.std::__1::pair.19"* %135 to i8*
  %137 = bitcast %"struct.std::__1::pair.19"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #13
  %138 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 4
  %139 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %122, i64 4
  %140 = icmp ult %"struct.std::__1::pair.19"* %138, %9
  br i1 %140, label %121, label %61

141:                                              ; preds = %87, %91, %64
  %142 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 0, i32 0
  store i32 %26, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 0, i32 1
  store i64 %27, i64* %143, align 8
  br label %295

144:                                              ; preds = %4
  %145 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.954"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #13
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"struct.std::__1::pair.19"** %8 to i64*
  %153 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.954"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %13, %155
  %157 = ashr exact i64 %156, 4
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 1152921504606846975
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #15
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"struct.std::__1::pair.19"** %10 to i64*
  %164 = sub i64 %14, %155
  %165 = ashr exact i64 %164, 4
  %166 = icmp ult i64 %165, 576460752303423487
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %5, %155
  %169 = ashr exact i64 %168, 4
  store %"struct.std::__1::pair.19"* null, %"struct.std::__1::pair.19"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.23"** %151 to %"class.std::__1::__compressed_pair.20"**
  store %"class.std::__1::__compressed_pair.20"* %145, %"class.std::__1::__compressed_pair.20"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 3
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %5, %155
  %176 = ashr exact i64 %175, 4
  store %"struct.std::__1::pair.19"* null, %"struct.std::__1::pair.19"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.23"** %151 to %"class.std::__1::__compressed_pair.20"**
  store %"class.std::__1::__compressed_pair.20"* %145, %"class.std::__1::__compressed_pair.20"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 1152921504606846975
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #15
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 1152921504606846975, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 4
  %186 = tail call i8* @_Znwm(i64 %185) #14
  %187 = bitcast i8* %186 to %"struct.std::__1::pair.19"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"struct.std::__1::pair.19"* [ %187, %182 ], [ null, %171 ]
  store %"struct.std::__1::pair.19"* %191, %"struct.std::__1::pair.19"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %191, i64 %189
  store %"struct.std::__1::pair.19"* %192, %"struct.std::__1::pair.19"** %149, align 8
  store %"struct.std::__1::pair.19"* %192, %"struct.std::__1::pair.19"** %148, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %191, i64 %190
  store %"struct.std::__1::pair.19"* %193, %"struct.std::__1::pair.19"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN4quic13QuicErrorCodeEmEERNS_9allocatorIS4_EEE12emplace_backIJS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.954"* nonnull %6, i32* dereferenceable(4) %2, i64* dereferenceable(8) %3)
  %194 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %148, align 8
  %195 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %7, align 8
  %196 = ptrtoint %"struct.std::__1::pair.19"* %195 to i64
  %197 = sub i64 %5, %196
  %198 = ashr exact i64 %197, 4
  %199 = sub nsw i64 0, %198
  %200 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %194, i64 %199
  store %"struct.std::__1::pair.19"* %200, %"struct.std::__1::pair.19"** %148, align 8
  %201 = icmp sgt i64 %197, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %188
  %203 = bitcast %"struct.std::__1::pair.19"* %200 to i8*
  %204 = bitcast %"struct.std::__1::pair.19"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 %197, i1 false) #13
  br label %205

205:                                              ; preds = %202, %188
  %206 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %8, align 8
  %207 = icmp eq %"struct.std::__1::pair.19"* %206, %1
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  %209 = ptrtoint %"struct.std::__1::pair.19"* %206 to i64
  %210 = bitcast %"struct.std::__1::pair.19"** %149 to i64*
  %211 = load i64, i64* %210, align 8
  br label %269

212:                                              ; preds = %205
  %213 = bitcast %"struct.std::__1::pair.19"** %149 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %206, i64 -1, i32 0
  %216 = ptrtoint i32* %215 to i64
  %217 = sub i64 %216, %5
  %218 = lshr i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %235, label %222

222:                                              ; preds = %212, %222
  %223 = phi i8* [ %230, %222 ], [ %214, %212 ]
  %224 = phi %"struct.std::__1::pair.19"* [ %227, %222 ], [ %1, %212 ]
  %225 = phi i64 [ %231, %222 ], [ %220, %212 ]
  %226 = bitcast %"struct.std::__1::pair.19"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %226, i64 16, i1 false) #13
  %227 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %224, i64 1
  %228 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %228, i64 1
  store %"struct.std::__1::pair.19"* %229, %"struct.std::__1::pair.19"** %149, align 8
  %230 = bitcast %"struct.std::__1::pair.19"* %229 to i8*
  %231 = add i64 %225, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %222, !llvm.loop !22

233:                                              ; preds = %222
  %234 = bitcast %"struct.std::__1::pair.19"* %229 to i8*
  br label %235

235:                                              ; preds = %212, %233
  %236 = phi %"struct.std::__1::pair.19"* [ undef, %212 ], [ %229, %233 ]
  %237 = phi i8* [ %214, %212 ], [ %234, %233 ]
  %238 = phi %"struct.std::__1::pair.19"* [ %1, %212 ], [ %227, %233 ]
  %239 = icmp ult i64 %217, 48
  br i1 %239, label %264, label %240

240:                                              ; preds = %235, %240
  %241 = phi i8* [ %263, %240 ], [ %237, %235 ]
  %242 = phi %"struct.std::__1::pair.19"* [ %259, %240 ], [ %238, %235 ]
  %243 = bitcast %"struct.std::__1::pair.19"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %243, i64 16, i1 false) #13
  %244 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %242, i64 1
  %245 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %246 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %245, i64 1
  store %"struct.std::__1::pair.19"* %246, %"struct.std::__1::pair.19"** %149, align 8
  %247 = bitcast %"struct.std::__1::pair.19"* %246 to i8*
  %248 = bitcast %"struct.std::__1::pair.19"* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 16, i1 false) #13
  %249 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %242, i64 2
  %250 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %251 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %250, i64 1
  store %"struct.std::__1::pair.19"* %251, %"struct.std::__1::pair.19"** %149, align 8
  %252 = bitcast %"struct.std::__1::pair.19"* %251 to i8*
  %253 = bitcast %"struct.std::__1::pair.19"* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false) #13
  %254 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %242, i64 3
  %255 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %256 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %255, i64 1
  store %"struct.std::__1::pair.19"* %256, %"struct.std::__1::pair.19"** %149, align 8
  %257 = bitcast %"struct.std::__1::pair.19"* %256 to i8*
  %258 = bitcast %"struct.std::__1::pair.19"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %258, i64 16, i1 false) #13
  %259 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %242, i64 4
  %260 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %261 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %260, i64 1
  store %"struct.std::__1::pair.19"* %261, %"struct.std::__1::pair.19"** %149, align 8
  %262 = icmp eq %"struct.std::__1::pair.19"* %259, %206
  %263 = bitcast %"struct.std::__1::pair.19"* %261 to i8*
  br i1 %262, label %264, label %240

264:                                              ; preds = %240, %235
  %265 = phi %"struct.std::__1::pair.19"* [ %236, %235 ], [ %261, %240 ]
  %266 = ptrtoint %"struct.std::__1::pair.19"* %265 to i64
  %267 = load i64, i64* %152, align 8
  %268 = bitcast %"struct.std::__1::pair.19"** %149 to i64*
  br label %269

269:                                              ; preds = %208, %264
  %270 = phi i64* [ %210, %208 ], [ %268, %264 ]
  %271 = phi i64 [ %211, %208 ], [ %266, %264 ]
  %272 = phi i64 [ %209, %208 ], [ %267, %264 ]
  %273 = load i64, i64* %153, align 8
  %274 = bitcast %"struct.std::__1::pair.19"** %148 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %153, align 8
  store i64 %273, i64* %274, align 8
  store i64 %271, i64* %152, align 8
  store i64 %272, i64* %270, align 8
  %276 = load i64, i64* %163, align 8
  %277 = bitcast %"struct.std::__1::pair.19"** %150 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %163, align 8
  store i64 %276, i64* %277, align 8
  %279 = bitcast %"struct.std::__1::__split_buffer.954"* %6 to i64*
  store i64 %273, i64* %279, align 8
  %280 = inttoptr i64 %273 to %"struct.std::__1::pair.19"*
  %281 = inttoptr i64 %272 to %"struct.std::__1::pair.19"*
  %282 = icmp eq %"struct.std::__1::pair.19"* %281, %280
  br i1 %282, label %290, label %283

283:                                              ; preds = %269
  %284 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %281, i64 -1, i32 0
  %285 = ptrtoint i32* %284 to i64
  %286 = sub i64 %285, %273
  %287 = lshr i64 %286, 4
  %288 = xor i64 %287, -1
  %289 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %281, i64 %288
  store %"struct.std::__1::pair.19"* %289, %"struct.std::__1::pair.19"** %149, align 8
  br label %290

290:                                              ; preds = %283, %269
  %291 = icmp eq i64 %273, 0
  br i1 %291, label %294, label %292

292:                                              ; preds = %290
  %293 = inttoptr i64 %273 to i8*
  call void @_ZdlPv(i8* %293) #14
  br label %294

294:                                              ; preds = %290, %292
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #13
  br label %295

295:                                              ; preds = %17, %141, %294
  %296 = phi %"struct.std::__1::pair.19"* [ %1, %17 ], [ %1, %141 ], [ %194, %294 ]
  ret %"struct.std::__1::pair.19"* %296
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN4quic13QuicErrorCodeEmEERNS_9allocatorIS4_EEE12emplace_backIJS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.954"*, i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.19"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.19"* %7 to i64
  br i1 %8, label %10, label %174

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.19"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.19"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.19"* %15 to i64
  br i1 %16, label %18, label %90

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.19"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.19"* %12, %5
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %5, i64 -1, i32 0
  %28 = ptrtoint i32* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.19"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.19"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %36, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %35, i64 0, i32 0
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %36, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %35, i64 0, i32 1
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !23

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.19"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.19"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.19"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.19"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.19"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 0, i32 0
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 0, i32 1
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 1, i32 0
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 1, i32 1
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 2, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 2, i32 0
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 2, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 2, i32 1
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 3, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 3, i32 0
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 3, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 3, i32 1
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.19"* %80, %5
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.19"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.19"* [ %5, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.19"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.19"* %88, %"struct.std::__1::pair.19"** %4, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %87, i64 %23
  store %"struct.std::__1::pair.19"* %89, %"struct.std::__1::pair.19"** %11, align 8
  br label %174

90:                                               ; preds = %10
  %91 = bitcast %"struct.std::__1::pair.19"** %6 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer.954"* %0 to i64*
  %93 = sub i64 %9, %17
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  %96 = select i1 %95, i64 1, i64 %94
  %97 = icmp ugt i64 %96, 1152921504606846975
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  tail call void @abort() #15
  unreachable

99:                                               ; preds = %90
  %100 = lshr i64 %96, 2
  %101 = shl i64 %96, 4
  %102 = tail call i8* @_Znwm(i64 %101) #14
  %103 = bitcast i8* %102 to %"struct.std::__1::pair.19"*
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %103, i64 %100
  %106 = ptrtoint %"struct.std::__1::pair.19"* %105 to i64
  %107 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %103, i64 %96
  %108 = ptrtoint %"struct.std::__1::pair.19"* %107 to i64
  %109 = ptrtoint %"struct.std::__1::pair.19"* %5 to i64
  %110 = sub i64 %109, %13
  %111 = ashr exact i64 %110, 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %105, i64 %111
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %164, label %114

114:                                              ; preds = %99
  %115 = add i64 %110, -16
  %116 = lshr i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %114, %120
  %121 = phi %"struct.std::__1::pair.19"* [ %127, %120 ], [ %105, %114 ]
  %122 = phi i64 [ %128, %120 ], [ %106, %114 ]
  %123 = phi %"struct.std::__1::pair.19"* [ %129, %120 ], [ %12, %114 ]
  %124 = phi i64 [ %130, %120 ], [ %118, %114 ]
  %125 = inttoptr i64 %122 to i8*
  %126 = bitcast %"struct.std::__1::pair.19"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #13
  %127 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %121, i64 1
  %128 = ptrtoint %"struct.std::__1::pair.19"* %127 to i64
  %129 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !24

132:                                              ; preds = %120
  %133 = ptrtoint %"struct.std::__1::pair.19"* %127 to i64
  br label %134

134:                                              ; preds = %114, %132
  %135 = phi %"struct.std::__1::pair.19"* [ %105, %114 ], [ %127, %132 ]
  %136 = phi i64 [ %106, %114 ], [ %133, %132 ]
  %137 = phi %"struct.std::__1::pair.19"* [ %12, %114 ], [ %129, %132 ]
  %138 = icmp ult i64 %115, 48
  br i1 %138, label %161, label %139

139:                                              ; preds = %134, %139
  %140 = phi %"struct.std::__1::pair.19"* [ %157, %139 ], [ %135, %134 ]
  %141 = phi i64 [ %158, %139 ], [ %136, %134 ]
  %142 = phi %"struct.std::__1::pair.19"* [ %159, %139 ], [ %137, %134 ]
  %143 = inttoptr i64 %141 to i8*
  %144 = bitcast %"struct.std::__1::pair.19"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #13
  %145 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %140, i64 1
  %146 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %142, i64 1
  %147 = bitcast %"struct.std::__1::pair.19"* %145 to i8*
  %148 = bitcast %"struct.std::__1::pair.19"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #13
  %149 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %140, i64 2
  %150 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %142, i64 2
  %151 = bitcast %"struct.std::__1::pair.19"* %149 to i8*
  %152 = bitcast %"struct.std::__1::pair.19"* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 16, i1 false) #13
  %153 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %140, i64 3
  %154 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %142, i64 3
  %155 = bitcast %"struct.std::__1::pair.19"* %153 to i8*
  %156 = bitcast %"struct.std::__1::pair.19"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #13
  %157 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %140, i64 4
  %158 = ptrtoint %"struct.std::__1::pair.19"* %157 to i64
  %159 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %142, i64 4
  %160 = icmp eq %"struct.std::__1::pair.19"* %112, %157
  br i1 %160, label %161, label %139

161:                                              ; preds = %139, %134
  %162 = ptrtoint %"struct.std::__1::pair.19"* %112 to i64
  %163 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %14, align 8
  br label %164

164:                                              ; preds = %99, %161
  %165 = phi %"struct.std::__1::pair.19"* [ %163, %161 ], [ %15, %99 ]
  %166 = phi i64 [ %162, %161 ], [ %106, %99 ]
  store i64 %104, i64* %92, align 8
  %167 = bitcast %"struct.std::__1::pair.19"** %11 to i64*
  store i64 %106, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::pair.19"** %4 to i64*
  store i64 %166, i64* %168, align 8
  store i64 %108, i64* %91, align 8
  %169 = icmp eq %"struct.std::__1::pair.19"* %165, null
  %170 = inttoptr i64 %166 to %"struct.std::__1::pair.19"*
  br i1 %169, label %174, label %171

171:                                              ; preds = %164
  %172 = bitcast %"struct.std::__1::pair.19"* %165 to i8*
  tail call void @_ZdlPv(i8* %172) #14
  %173 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %4, align 8
  br label %174

174:                                              ; preds = %171, %164, %86, %3
  %175 = phi %"struct.std::__1::pair.19"* [ %173, %171 ], [ %170, %164 ], [ %88, %86 ], [ %5, %3 ]
  %176 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %175, i64 0, i32 0
  %177 = load i32, i32* %1, align 4
  store i32 %177, i32* %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %175, i64 0, i32 1
  %179 = load i64, i64* %2, align 8
  store i64 %179, i64* %178, align 8
  %180 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %4, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %180, i64 1
  store %"struct.std::__1::pair.19"* %181, %"struct.std::__1::pair.19"** %4, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIimEENS_9allocatorIS2_EEE7emplaceIJRKimEEENS_11__wrap_iterIPS2_EENS9_IPKS2_EEDpOT_(%"class.std::__1::vector"*, %"struct.std::__1::pair"*, i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.959", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  br i1 %12, label %15, label %144

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair"* %9, %1
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %19 = load i32, i32* %2, align 4
  store i32 %19, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %21 = load i64, i64* %3, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %23 = ptrtoint %"struct.std::__1::pair"* %22 to i64
  %24 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %23, i64* %24, align 8
  br label %295

25:                                               ; preds = %15
  %26 = load i32, i32* %2, align 4
  %27 = load i64, i64* %3, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %29 = ptrtoint %"struct.std::__1::pair"* %28 to i64
  %30 = sub i64 %13, %29
  %31 = ashr exact i64 %30, 4
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %31
  %33 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %34 = icmp ult %"struct.std::__1::pair"* %32, %9
  br i1 %34, label %35, label %64

35:                                               ; preds = %25
  %36 = sub nsw i64 0, %31
  %37 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %36, i32 0
  %38 = bitcast i32* %37 to i8*
  %39 = xor i64 %5, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 4
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %35, %46
  %47 = phi %"struct.std::__1::pair"* [ %53, %46 ], [ %9, %35 ]
  %48 = phi %"struct.std::__1::pair"* [ %52, %46 ], [ %32, %35 ]
  %49 = phi i64 [ %54, %46 ], [ %44, %35 ]
  %50 = bitcast %"struct.std::__1::pair"* %47 to i8*
  %51 = bitcast %"struct.std::__1::pair"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #13
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 1
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 1
  %54 = add i64 %49, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %46, !llvm.loop !25

56:                                               ; preds = %46, %35
  %57 = phi %"struct.std::__1::pair"* [ %9, %35 ], [ %53, %46 ]
  %58 = phi %"struct.std::__1::pair"* [ %32, %35 ], [ %52, %46 ]
  %59 = phi %"struct.std::__1::pair"* [ undef, %35 ], [ %53, %46 ]
  %60 = icmp ult i8* %40, inttoptr (i64 48 to i8*)
  br i1 %60, label %61, label %121

61:                                               ; preds = %121, %56
  %62 = phi %"struct.std::__1::pair"* [ %59, %56 ], [ %139, %121 ]
  %63 = ptrtoint %"struct.std::__1::pair"* %62 to i64
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi i64 [ %63, %61 ], [ %13, %25 ]
  store i64 %65, i64* %33, align 8
  %66 = icmp eq i64 %30, 0
  br i1 %66, label %141, label %67

67:                                               ; preds = %64
  %68 = add i64 %30, -16
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %67, %73
  %74 = phi %"struct.std::__1::pair"* [ %78, %73 ], [ %9, %67 ]
  %75 = phi %"struct.std::__1::pair"* [ %77, %73 ], [ %32, %67 ]
  %76 = phi i64 [ %85, %73 ], [ %71, %67 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 -1
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 -1
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0
  store i32 %80, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 -1, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 -1, i32 1
  store i64 %83, i64* %84, align 8
  %85 = add i64 %76, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73, !llvm.loop !26

87:                                               ; preds = %73, %67
  %88 = phi %"struct.std::__1::pair"* [ %9, %67 ], [ %78, %73 ]
  %89 = phi %"struct.std::__1::pair"* [ %32, %67 ], [ %77, %73 ]
  %90 = icmp ult i64 %68, 48
  br i1 %90, label %141, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::pair"* [ %113, %91 ], [ %88, %87 ]
  %93 = phi %"struct.std::__1::pair"* [ %112, %91 ], [ %89, %87 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -1, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1, i32 0
  store i32 %95, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -1, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1, i32 1
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -2, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -2, i32 0
  store i32 %101, i32* %102, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -2, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -2, i32 1
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -3, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -3, i32 0
  store i32 %107, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -3, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -3, i32 1
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -4
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -4
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %112, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 0, i32 0
  store i32 %115, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -4, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -4, i32 1
  store i64 %118, i64* %119, align 8
  %120 = icmp eq %"struct.std::__1::pair"* %112, %1
  br i1 %120, label %141, label %91

121:                                              ; preds = %56, %121
  %122 = phi %"struct.std::__1::pair"* [ %139, %121 ], [ %57, %56 ]
  %123 = phi %"struct.std::__1::pair"* [ %138, %121 ], [ %58, %56 ]
  %124 = bitcast %"struct.std::__1::pair"* %122 to i8*
  %125 = bitcast %"struct.std::__1::pair"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #13
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 1
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 1
  %128 = bitcast %"struct.std::__1::pair"* %127 to i8*
  %129 = bitcast %"struct.std::__1::pair"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 16, i1 false) #13
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 2
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 2
  %132 = bitcast %"struct.std::__1::pair"* %131 to i8*
  %133 = bitcast %"struct.std::__1::pair"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 16, i1 false) #13
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 3
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 3
  %136 = bitcast %"struct.std::__1::pair"* %135 to i8*
  %137 = bitcast %"struct.std::__1::pair"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #13
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 4
  %139 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 4
  %140 = icmp ult %"struct.std::__1::pair"* %138, %9
  br i1 %140, label %121, label %61

141:                                              ; preds = %87, %91, %64
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  store i32 %26, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  store i64 %27, i64* %143, align 8
  br label %295

144:                                              ; preds = %4
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.959"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #13
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.959", %"struct.std::__1::__split_buffer.959"* %6, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.959", %"struct.std::__1::__split_buffer.959"* %6, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.959", %"struct.std::__1::__split_buffer.959"* %6, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.959", %"struct.std::__1::__split_buffer.959"* %6, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.959", %"struct.std::__1::__split_buffer.959"* %6, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %153 = bitcast %"class.std::__1::vector"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.959"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %13, %155
  %157 = ashr exact i64 %156, 4
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 1152921504606846975
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #15
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"struct.std::__1::pair"** %10 to i64*
  %164 = sub i64 %14, %155
  %165 = ashr exact i64 %164, 4
  %166 = icmp ult i64 %165, 576460752303423487
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %5, %155
  %169 = ashr exact i64 %168, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.13"** %151 to %"class.std::__1::__compressed_pair.10"**
  store %"class.std::__1::__compressed_pair.10"* %145, %"class.std::__1::__compressed_pair.10"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 3
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %5, %155
  %176 = ashr exact i64 %175, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.13"** %151 to %"class.std::__1::__compressed_pair.10"**
  store %"class.std::__1::__compressed_pair.10"* %145, %"class.std::__1::__compressed_pair.10"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 1152921504606846975
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #15
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 1152921504606846975, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 4
  %186 = tail call i8* @_Znwm(i64 %185) #14
  %187 = bitcast i8* %186 to %"struct.std::__1::pair"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"struct.std::__1::pair"* [ %187, %182 ], [ null, %171 ]
  store %"struct.std::__1::pair"* %191, %"struct.std::__1::pair"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %191, i64 %189
  store %"struct.std::__1::pair"* %192, %"struct.std::__1::pair"** %149, align 8
  store %"struct.std::__1::pair"* %192, %"struct.std::__1::pair"** %148, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %191, i64 %190
  store %"struct.std::__1::pair"* %193, %"struct.std::__1::pair"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIimEERNS_9allocatorIS2_EEE12emplace_backIJRKimEEEvDpOT_(%"struct.std::__1::__split_buffer.959"* nonnull %6, i32* dereferenceable(4) %2, i64* dereferenceable(8) %3)
  %194 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %195 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %196 = ptrtoint %"struct.std::__1::pair"* %195 to i64
  %197 = sub i64 %5, %196
  %198 = ashr exact i64 %197, 4
  %199 = sub nsw i64 0, %198
  %200 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %194, i64 %199
  store %"struct.std::__1::pair"* %200, %"struct.std::__1::pair"** %148, align 8
  %201 = icmp sgt i64 %197, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %188
  %203 = bitcast %"struct.std::__1::pair"* %200 to i8*
  %204 = bitcast %"struct.std::__1::pair"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 %197, i1 false) #13
  br label %205

205:                                              ; preds = %202, %188
  %206 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %207 = icmp eq %"struct.std::__1::pair"* %206, %1
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  %209 = ptrtoint %"struct.std::__1::pair"* %206 to i64
  %210 = bitcast %"struct.std::__1::pair"** %149 to i64*
  %211 = load i64, i64* %210, align 8
  br label %269

212:                                              ; preds = %205
  %213 = bitcast %"struct.std::__1::pair"** %149 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %206, i64 -1, i32 0
  %216 = ptrtoint i32* %215 to i64
  %217 = sub i64 %216, %5
  %218 = lshr i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %235, label %222

222:                                              ; preds = %212, %222
  %223 = phi i8* [ %230, %222 ], [ %214, %212 ]
  %224 = phi %"struct.std::__1::pair"* [ %227, %222 ], [ %1, %212 ]
  %225 = phi i64 [ %231, %222 ], [ %220, %212 ]
  %226 = bitcast %"struct.std::__1::pair"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %226, i64 16, i1 false) #13
  %227 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %224, i64 1
  %228 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %228, i64 1
  store %"struct.std::__1::pair"* %229, %"struct.std::__1::pair"** %149, align 8
  %230 = bitcast %"struct.std::__1::pair"* %229 to i8*
  %231 = add i64 %225, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %222, !llvm.loop !27

233:                                              ; preds = %222
  %234 = bitcast %"struct.std::__1::pair"* %229 to i8*
  br label %235

235:                                              ; preds = %212, %233
  %236 = phi %"struct.std::__1::pair"* [ undef, %212 ], [ %229, %233 ]
  %237 = phi i8* [ %214, %212 ], [ %234, %233 ]
  %238 = phi %"struct.std::__1::pair"* [ %1, %212 ], [ %227, %233 ]
  %239 = icmp ult i64 %217, 48
  br i1 %239, label %264, label %240

240:                                              ; preds = %235, %240
  %241 = phi i8* [ %263, %240 ], [ %237, %235 ]
  %242 = phi %"struct.std::__1::pair"* [ %259, %240 ], [ %238, %235 ]
  %243 = bitcast %"struct.std::__1::pair"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %243, i64 16, i1 false) #13
  %244 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 1
  %245 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %246 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %245, i64 1
  store %"struct.std::__1::pair"* %246, %"struct.std::__1::pair"** %149, align 8
  %247 = bitcast %"struct.std::__1::pair"* %246 to i8*
  %248 = bitcast %"struct.std::__1::pair"* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 16, i1 false) #13
  %249 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 2
  %250 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %251 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %250, i64 1
  store %"struct.std::__1::pair"* %251, %"struct.std::__1::pair"** %149, align 8
  %252 = bitcast %"struct.std::__1::pair"* %251 to i8*
  %253 = bitcast %"struct.std::__1::pair"* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false) #13
  %254 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 3
  %255 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %256 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %255, i64 1
  store %"struct.std::__1::pair"* %256, %"struct.std::__1::pair"** %149, align 8
  %257 = bitcast %"struct.std::__1::pair"* %256 to i8*
  %258 = bitcast %"struct.std::__1::pair"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %258, i64 16, i1 false) #13
  %259 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 4
  %260 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %261 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %260, i64 1
  store %"struct.std::__1::pair"* %261, %"struct.std::__1::pair"** %149, align 8
  %262 = icmp eq %"struct.std::__1::pair"* %259, %206
  %263 = bitcast %"struct.std::__1::pair"* %261 to i8*
  br i1 %262, label %264, label %240

264:                                              ; preds = %240, %235
  %265 = phi %"struct.std::__1::pair"* [ %236, %235 ], [ %261, %240 ]
  %266 = ptrtoint %"struct.std::__1::pair"* %265 to i64
  %267 = load i64, i64* %152, align 8
  %268 = bitcast %"struct.std::__1::pair"** %149 to i64*
  br label %269

269:                                              ; preds = %208, %264
  %270 = phi i64* [ %210, %208 ], [ %268, %264 ]
  %271 = phi i64 [ %211, %208 ], [ %266, %264 ]
  %272 = phi i64 [ %209, %208 ], [ %267, %264 ]
  %273 = load i64, i64* %153, align 8
  %274 = bitcast %"struct.std::__1::pair"** %148 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %153, align 8
  store i64 %273, i64* %274, align 8
  store i64 %271, i64* %152, align 8
  store i64 %272, i64* %270, align 8
  %276 = load i64, i64* %163, align 8
  %277 = bitcast %"struct.std::__1::pair"** %150 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %163, align 8
  store i64 %276, i64* %277, align 8
  %279 = bitcast %"struct.std::__1::__split_buffer.959"* %6 to i64*
  store i64 %273, i64* %279, align 8
  %280 = inttoptr i64 %273 to %"struct.std::__1::pair"*
  %281 = inttoptr i64 %272 to %"struct.std::__1::pair"*
  %282 = icmp eq %"struct.std::__1::pair"* %281, %280
  br i1 %282, label %290, label %283

283:                                              ; preds = %269
  %284 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %281, i64 -1, i32 0
  %285 = ptrtoint i32* %284 to i64
  %286 = sub i64 %285, %273
  %287 = lshr i64 %286, 4
  %288 = xor i64 %287, -1
  %289 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %281, i64 %288
  store %"struct.std::__1::pair"* %289, %"struct.std::__1::pair"** %149, align 8
  br label %290

290:                                              ; preds = %283, %269
  %291 = icmp eq i64 %273, 0
  br i1 %291, label %294, label %292

292:                                              ; preds = %290
  %293 = inttoptr i64 %273 to i8*
  call void @_ZdlPv(i8* %293) #14
  br label %294

294:                                              ; preds = %290, %292
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #13
  br label %295

295:                                              ; preds = %17, %141, %294
  %296 = phi %"struct.std::__1::pair"* [ %1, %17 ], [ %1, %141 ], [ %194, %294 ]
  ret %"struct.std::__1::pair"* %296
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIimEERNS_9allocatorIS2_EEE12emplace_backIJRKimEEEvDpOT_(%"struct.std::__1::__split_buffer.959"*, i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.959", %"struct.std::__1::__split_buffer.959"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.959", %"struct.std::__1::__split_buffer.959"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  br i1 %8, label %10, label %174

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.959", %"struct.std::__1::__split_buffer.959"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.959", %"struct.std::__1::__split_buffer.959"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair"* %15 to i64
  br i1 %16, label %18, label %90

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair"* %12, %5
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 0
  %28 = ptrtoint i32* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 1
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !28

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 0
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 1
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 0
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 1
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 0
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 1
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 0
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 1
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair"* %80, %5
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair"* [ %5, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair"* %88, %"struct.std::__1::pair"** %4, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 %23
  store %"struct.std::__1::pair"* %89, %"struct.std::__1::pair"** %11, align 8
  br label %174

90:                                               ; preds = %10
  %91 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer.959"* %0 to i64*
  %93 = sub i64 %9, %17
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  %96 = select i1 %95, i64 1, i64 %94
  %97 = icmp ugt i64 %96, 1152921504606846975
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  tail call void @abort() #15
  unreachable

99:                                               ; preds = %90
  %100 = lshr i64 %96, 2
  %101 = shl i64 %96, 4
  %102 = tail call i8* @_Znwm(i64 %101) #14
  %103 = bitcast i8* %102 to %"struct.std::__1::pair"*
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 %100
  %106 = ptrtoint %"struct.std::__1::pair"* %105 to i64
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 %96
  %108 = ptrtoint %"struct.std::__1::pair"* %107 to i64
  %109 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %110 = sub i64 %109, %13
  %111 = ashr exact i64 %110, 4
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 %111
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %164, label %114

114:                                              ; preds = %99
  %115 = add i64 %110, -16
  %116 = lshr i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %114, %120
  %121 = phi %"struct.std::__1::pair"* [ %127, %120 ], [ %105, %114 ]
  %122 = phi i64 [ %128, %120 ], [ %106, %114 ]
  %123 = phi %"struct.std::__1::pair"* [ %129, %120 ], [ %12, %114 ]
  %124 = phi i64 [ %130, %120 ], [ %118, %114 ]
  %125 = inttoptr i64 %122 to i8*
  %126 = bitcast %"struct.std::__1::pair"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #13
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 1
  %128 = ptrtoint %"struct.std::__1::pair"* %127 to i64
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !29

132:                                              ; preds = %120
  %133 = ptrtoint %"struct.std::__1::pair"* %127 to i64
  br label %134

134:                                              ; preds = %114, %132
  %135 = phi %"struct.std::__1::pair"* [ %105, %114 ], [ %127, %132 ]
  %136 = phi i64 [ %106, %114 ], [ %133, %132 ]
  %137 = phi %"struct.std::__1::pair"* [ %12, %114 ], [ %129, %132 ]
  %138 = icmp ult i64 %115, 48
  br i1 %138, label %161, label %139

139:                                              ; preds = %134, %139
  %140 = phi %"struct.std::__1::pair"* [ %157, %139 ], [ %135, %134 ]
  %141 = phi i64 [ %158, %139 ], [ %136, %134 ]
  %142 = phi %"struct.std::__1::pair"* [ %159, %139 ], [ %137, %134 ]
  %143 = inttoptr i64 %141 to i8*
  %144 = bitcast %"struct.std::__1::pair"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #13
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 1
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 1
  %147 = bitcast %"struct.std::__1::pair"* %145 to i8*
  %148 = bitcast %"struct.std::__1::pair"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #13
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 2
  %150 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 2
  %151 = bitcast %"struct.std::__1::pair"* %149 to i8*
  %152 = bitcast %"struct.std::__1::pair"* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 16, i1 false) #13
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 3
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 3
  %155 = bitcast %"struct.std::__1::pair"* %153 to i8*
  %156 = bitcast %"struct.std::__1::pair"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #13
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 4
  %158 = ptrtoint %"struct.std::__1::pair"* %157 to i64
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 4
  %160 = icmp eq %"struct.std::__1::pair"* %112, %157
  br i1 %160, label %161, label %139

161:                                              ; preds = %139, %134
  %162 = ptrtoint %"struct.std::__1::pair"* %112 to i64
  %163 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  br label %164

164:                                              ; preds = %99, %161
  %165 = phi %"struct.std::__1::pair"* [ %163, %161 ], [ %15, %99 ]
  %166 = phi i64 [ %162, %161 ], [ %106, %99 ]
  store i64 %104, i64* %92, align 8
  %167 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %106, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::pair"** %4 to i64*
  store i64 %166, i64* %168, align 8
  store i64 %108, i64* %91, align 8
  %169 = icmp eq %"struct.std::__1::pair"* %165, null
  %170 = inttoptr i64 %166 to %"struct.std::__1::pair"*
  br i1 %169, label %174, label %171

171:                                              ; preds = %164
  %172 = bitcast %"struct.std::__1::pair"* %165 to i8*
  tail call void @_ZdlPv(i8* %172) #14
  %173 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %174

174:                                              ; preds = %171, %164, %86, %3
  %175 = phi %"struct.std::__1::pair"* [ %173, %171 ], [ %170, %164 ], [ %88, %86 ], [ %5, %3 ]
  %176 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 0
  %177 = load i32, i32* %1, align 4
  store i32 %177, i32* %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 1
  %179 = load i64, i64* %2, align 8
  store i64 %179, i64* %178, align 8
  %180 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %180, i64 1
  store %"struct.std::__1::pair"* %181, %"struct.std::__1::pair"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.19"* @_ZNSt3__16vectorINS_4pairIN4quic13QuicErrorCodeEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.17"*, %"struct.std::__1::pair.19"*, i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.19"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.954", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.19"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.19"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair.19"* %11 to i64
  br i1 %12, label %15, label %144

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.19"* %9, %1
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 0, i32 0
  %19 = load i32, i32* %2, align 4
  store i32 %19, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 0, i32 1
  %21 = load i64, i64* %3, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 1
  %23 = ptrtoint %"struct.std::__1::pair.19"* %22 to i64
  %24 = bitcast %"struct.std::__1::pair.19"** %8 to i64*
  store i64 %23, i64* %24, align 8
  br label %295

25:                                               ; preds = %15
  %26 = load i32, i32* %2, align 4
  %27 = load i64, i64* %3, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 1
  %29 = ptrtoint %"struct.std::__1::pair.19"* %28 to i64
  %30 = sub i64 %13, %29
  %31 = ashr exact i64 %30, 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 %31
  %33 = bitcast %"struct.std::__1::pair.19"** %8 to i64*
  %34 = icmp ult %"struct.std::__1::pair.19"* %32, %9
  br i1 %34, label %35, label %64

35:                                               ; preds = %25
  %36 = sub nsw i64 0, %31
  %37 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %9, i64 %36, i32 0
  %38 = bitcast i32* %37 to i8*
  %39 = xor i64 %5, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 4
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %35, %46
  %47 = phi %"struct.std::__1::pair.19"* [ %53, %46 ], [ %9, %35 ]
  %48 = phi %"struct.std::__1::pair.19"* [ %52, %46 ], [ %32, %35 ]
  %49 = phi i64 [ %54, %46 ], [ %44, %35 ]
  %50 = bitcast %"struct.std::__1::pair.19"* %47 to i8*
  %51 = bitcast %"struct.std::__1::pair.19"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #13
  %52 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %48, i64 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %47, i64 1
  %54 = add i64 %49, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %46, !llvm.loop !30

56:                                               ; preds = %46, %35
  %57 = phi %"struct.std::__1::pair.19"* [ %9, %35 ], [ %53, %46 ]
  %58 = phi %"struct.std::__1::pair.19"* [ %32, %35 ], [ %52, %46 ]
  %59 = phi %"struct.std::__1::pair.19"* [ undef, %35 ], [ %53, %46 ]
  %60 = icmp ult i8* %40, inttoptr (i64 48 to i8*)
  br i1 %60, label %61, label %121

61:                                               ; preds = %121, %56
  %62 = phi %"struct.std::__1::pair.19"* [ %59, %56 ], [ %139, %121 ]
  %63 = ptrtoint %"struct.std::__1::pair.19"* %62 to i64
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi i64 [ %63, %61 ], [ %13, %25 ]
  store i64 %65, i64* %33, align 8
  %66 = icmp eq i64 %30, 0
  br i1 %66, label %141, label %67

67:                                               ; preds = %64
  %68 = add i64 %30, -16
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %67, %73
  %74 = phi %"struct.std::__1::pair.19"* [ %78, %73 ], [ %9, %67 ]
  %75 = phi %"struct.std::__1::pair.19"* [ %77, %73 ], [ %32, %67 ]
  %76 = phi i64 [ %85, %73 ], [ %71, %67 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %75, i64 -1
  %78 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %74, i64 -1
  %79 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %77, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %78, i64 0, i32 0
  store i32 %80, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %75, i64 -1, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %74, i64 -1, i32 1
  store i64 %83, i64* %84, align 8
  %85 = add i64 %76, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73, !llvm.loop !31

87:                                               ; preds = %73, %67
  %88 = phi %"struct.std::__1::pair.19"* [ %9, %67 ], [ %78, %73 ]
  %89 = phi %"struct.std::__1::pair.19"* [ %32, %67 ], [ %77, %73 ]
  %90 = icmp ult i64 %68, 48
  br i1 %90, label %141, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::pair.19"* [ %113, %91 ], [ %88, %87 ]
  %93 = phi %"struct.std::__1::pair.19"* [ %112, %91 ], [ %89, %87 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -1, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -1, i32 0
  store i32 %95, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -1, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -1, i32 1
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -2, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -2, i32 0
  store i32 %101, i32* %102, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -2, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -2, i32 1
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -3, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -3, i32 0
  store i32 %107, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -3, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -3, i32 1
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -4
  %113 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -4
  %114 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %112, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %113, i64 0, i32 0
  store i32 %115, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %93, i64 -4, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %92, i64 -4, i32 1
  store i64 %118, i64* %119, align 8
  %120 = icmp eq %"struct.std::__1::pair.19"* %112, %1
  br i1 %120, label %141, label %91

121:                                              ; preds = %56, %121
  %122 = phi %"struct.std::__1::pair.19"* [ %139, %121 ], [ %57, %56 ]
  %123 = phi %"struct.std::__1::pair.19"* [ %138, %121 ], [ %58, %56 ]
  %124 = bitcast %"struct.std::__1::pair.19"* %122 to i8*
  %125 = bitcast %"struct.std::__1::pair.19"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #13
  %126 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 1
  %127 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %122, i64 1
  %128 = bitcast %"struct.std::__1::pair.19"* %127 to i8*
  %129 = bitcast %"struct.std::__1::pair.19"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 16, i1 false) #13
  %130 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 2
  %131 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %122, i64 2
  %132 = bitcast %"struct.std::__1::pair.19"* %131 to i8*
  %133 = bitcast %"struct.std::__1::pair.19"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 16, i1 false) #13
  %134 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 3
  %135 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %122, i64 3
  %136 = bitcast %"struct.std::__1::pair.19"* %135 to i8*
  %137 = bitcast %"struct.std::__1::pair.19"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #13
  %138 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 4
  %139 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %122, i64 4
  %140 = icmp ult %"struct.std::__1::pair.19"* %138, %9
  br i1 %140, label %121, label %61

141:                                              ; preds = %87, %91, %64
  %142 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 0, i32 0
  store i32 %26, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %1, i64 0, i32 1
  store i64 %27, i64* %143, align 8
  br label %295

144:                                              ; preds = %4
  %145 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.954"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #13
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %6, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"struct.std::__1::pair.19"** %8 to i64*
  %153 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.954"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %13, %155
  %157 = ashr exact i64 %156, 4
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 1152921504606846975
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #15
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"struct.std::__1::pair.19"** %10 to i64*
  %164 = sub i64 %14, %155
  %165 = ashr exact i64 %164, 4
  %166 = icmp ult i64 %165, 576460752303423487
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %5, %155
  %169 = ashr exact i64 %168, 4
  store %"struct.std::__1::pair.19"* null, %"struct.std::__1::pair.19"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.23"** %151 to %"class.std::__1::__compressed_pair.20"**
  store %"class.std::__1::__compressed_pair.20"* %145, %"class.std::__1::__compressed_pair.20"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 3
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %5, %155
  %176 = ashr exact i64 %175, 4
  store %"struct.std::__1::pair.19"* null, %"struct.std::__1::pair.19"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.23"** %151 to %"class.std::__1::__compressed_pair.20"**
  store %"class.std::__1::__compressed_pair.20"* %145, %"class.std::__1::__compressed_pair.20"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 1152921504606846975
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #15
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 1152921504606846975, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 4
  %186 = tail call i8* @_Znwm(i64 %185) #14
  %187 = bitcast i8* %186 to %"struct.std::__1::pair.19"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"struct.std::__1::pair.19"* [ %187, %182 ], [ null, %171 ]
  store %"struct.std::__1::pair.19"* %191, %"struct.std::__1::pair.19"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %191, i64 %189
  store %"struct.std::__1::pair.19"* %192, %"struct.std::__1::pair.19"** %149, align 8
  store %"struct.std::__1::pair.19"* %192, %"struct.std::__1::pair.19"** %148, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %191, i64 %190
  store %"struct.std::__1::pair.19"* %193, %"struct.std::__1::pair.19"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN4quic13QuicErrorCodeEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.954"* nonnull %6, i32* dereferenceable(4) %2, i64* dereferenceable(8) %3)
  %194 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %148, align 8
  %195 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %7, align 8
  %196 = ptrtoint %"struct.std::__1::pair.19"* %195 to i64
  %197 = sub i64 %5, %196
  %198 = ashr exact i64 %197, 4
  %199 = sub nsw i64 0, %198
  %200 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %194, i64 %199
  store %"struct.std::__1::pair.19"* %200, %"struct.std::__1::pair.19"** %148, align 8
  %201 = icmp sgt i64 %197, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %188
  %203 = bitcast %"struct.std::__1::pair.19"* %200 to i8*
  %204 = bitcast %"struct.std::__1::pair.19"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 %197, i1 false) #13
  br label %205

205:                                              ; preds = %202, %188
  %206 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %8, align 8
  %207 = icmp eq %"struct.std::__1::pair.19"* %206, %1
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  %209 = ptrtoint %"struct.std::__1::pair.19"* %206 to i64
  %210 = bitcast %"struct.std::__1::pair.19"** %149 to i64*
  %211 = load i64, i64* %210, align 8
  br label %269

212:                                              ; preds = %205
  %213 = bitcast %"struct.std::__1::pair.19"** %149 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %206, i64 -1, i32 0
  %216 = ptrtoint i32* %215 to i64
  %217 = sub i64 %216, %5
  %218 = lshr i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %235, label %222

222:                                              ; preds = %212, %222
  %223 = phi i8* [ %230, %222 ], [ %214, %212 ]
  %224 = phi %"struct.std::__1::pair.19"* [ %227, %222 ], [ %1, %212 ]
  %225 = phi i64 [ %231, %222 ], [ %220, %212 ]
  %226 = bitcast %"struct.std::__1::pair.19"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %226, i64 16, i1 false) #13
  %227 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %224, i64 1
  %228 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %228, i64 1
  store %"struct.std::__1::pair.19"* %229, %"struct.std::__1::pair.19"** %149, align 8
  %230 = bitcast %"struct.std::__1::pair.19"* %229 to i8*
  %231 = add i64 %225, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %222, !llvm.loop !32

233:                                              ; preds = %222
  %234 = bitcast %"struct.std::__1::pair.19"* %229 to i8*
  br label %235

235:                                              ; preds = %212, %233
  %236 = phi %"struct.std::__1::pair.19"* [ undef, %212 ], [ %229, %233 ]
  %237 = phi i8* [ %214, %212 ], [ %234, %233 ]
  %238 = phi %"struct.std::__1::pair.19"* [ %1, %212 ], [ %227, %233 ]
  %239 = icmp ult i64 %217, 48
  br i1 %239, label %264, label %240

240:                                              ; preds = %235, %240
  %241 = phi i8* [ %263, %240 ], [ %237, %235 ]
  %242 = phi %"struct.std::__1::pair.19"* [ %259, %240 ], [ %238, %235 ]
  %243 = bitcast %"struct.std::__1::pair.19"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %243, i64 16, i1 false) #13
  %244 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %242, i64 1
  %245 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %246 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %245, i64 1
  store %"struct.std::__1::pair.19"* %246, %"struct.std::__1::pair.19"** %149, align 8
  %247 = bitcast %"struct.std::__1::pair.19"* %246 to i8*
  %248 = bitcast %"struct.std::__1::pair.19"* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 16, i1 false) #13
  %249 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %242, i64 2
  %250 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %251 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %250, i64 1
  store %"struct.std::__1::pair.19"* %251, %"struct.std::__1::pair.19"** %149, align 8
  %252 = bitcast %"struct.std::__1::pair.19"* %251 to i8*
  %253 = bitcast %"struct.std::__1::pair.19"* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false) #13
  %254 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %242, i64 3
  %255 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %256 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %255, i64 1
  store %"struct.std::__1::pair.19"* %256, %"struct.std::__1::pair.19"** %149, align 8
  %257 = bitcast %"struct.std::__1::pair.19"* %256 to i8*
  %258 = bitcast %"struct.std::__1::pair.19"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %258, i64 16, i1 false) #13
  %259 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %242, i64 4
  %260 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %149, align 8
  %261 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %260, i64 1
  store %"struct.std::__1::pair.19"* %261, %"struct.std::__1::pair.19"** %149, align 8
  %262 = icmp eq %"struct.std::__1::pair.19"* %259, %206
  %263 = bitcast %"struct.std::__1::pair.19"* %261 to i8*
  br i1 %262, label %264, label %240

264:                                              ; preds = %240, %235
  %265 = phi %"struct.std::__1::pair.19"* [ %236, %235 ], [ %261, %240 ]
  %266 = ptrtoint %"struct.std::__1::pair.19"* %265 to i64
  %267 = load i64, i64* %152, align 8
  %268 = bitcast %"struct.std::__1::pair.19"** %149 to i64*
  br label %269

269:                                              ; preds = %208, %264
  %270 = phi i64* [ %210, %208 ], [ %268, %264 ]
  %271 = phi i64 [ %211, %208 ], [ %266, %264 ]
  %272 = phi i64 [ %209, %208 ], [ %267, %264 ]
  %273 = load i64, i64* %153, align 8
  %274 = bitcast %"struct.std::__1::pair.19"** %148 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %153, align 8
  store i64 %273, i64* %274, align 8
  store i64 %271, i64* %152, align 8
  store i64 %272, i64* %270, align 8
  %276 = load i64, i64* %163, align 8
  %277 = bitcast %"struct.std::__1::pair.19"** %150 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %163, align 8
  store i64 %276, i64* %277, align 8
  %279 = bitcast %"struct.std::__1::__split_buffer.954"* %6 to i64*
  store i64 %273, i64* %279, align 8
  %280 = inttoptr i64 %273 to %"struct.std::__1::pair.19"*
  %281 = inttoptr i64 %272 to %"struct.std::__1::pair.19"*
  %282 = icmp eq %"struct.std::__1::pair.19"* %281, %280
  br i1 %282, label %290, label %283

283:                                              ; preds = %269
  %284 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %281, i64 -1, i32 0
  %285 = ptrtoint i32* %284 to i64
  %286 = sub i64 %285, %273
  %287 = lshr i64 %286, 4
  %288 = xor i64 %287, -1
  %289 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %281, i64 %288
  store %"struct.std::__1::pair.19"* %289, %"struct.std::__1::pair.19"** %149, align 8
  br label %290

290:                                              ; preds = %283, %269
  %291 = icmp eq i64 %273, 0
  br i1 %291, label %294, label %292

292:                                              ; preds = %290
  %293 = inttoptr i64 %273 to i8*
  call void @_ZdlPv(i8* %293) #14
  br label %294

294:                                              ; preds = %290, %292
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #13
  br label %295

295:                                              ; preds = %17, %141, %294
  %296 = phi %"struct.std::__1::pair.19"* [ %1, %17 ], [ %1, %141 ], [ %194, %294 ]
  ret %"struct.std::__1::pair.19"* %296
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN4quic13QuicErrorCodeEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.954"*, i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.19"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.19"* %7 to i64
  br i1 %8, label %10, label %174

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.19"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.954", %"struct.std::__1::__split_buffer.954"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.19"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.19"* %15 to i64
  br i1 %16, label %18, label %90

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.19"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.19"* %12, %5
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %5, i64 -1, i32 0
  %28 = ptrtoint i32* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.19"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.19"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %36, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %35, i64 0, i32 0
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %36, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %35, i64 0, i32 1
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !33

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.19"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.19"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.19"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.19"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.19"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 0, i32 0
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 0, i32 1
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 1, i32 0
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 1, i32 1
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 2, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 2, i32 0
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 2, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 2, i32 1
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 3, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 3, i32 0
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 3, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 3, i32 1
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.19"* %80, %5
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.19"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.19"* [ %5, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.19"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.19"* %88, %"struct.std::__1::pair.19"** %4, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %87, i64 %23
  store %"struct.std::__1::pair.19"* %89, %"struct.std::__1::pair.19"** %11, align 8
  br label %174

90:                                               ; preds = %10
  %91 = bitcast %"struct.std::__1::pair.19"** %6 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer.954"* %0 to i64*
  %93 = sub i64 %9, %17
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  %96 = select i1 %95, i64 1, i64 %94
  %97 = icmp ugt i64 %96, 1152921504606846975
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  tail call void @abort() #15
  unreachable

99:                                               ; preds = %90
  %100 = lshr i64 %96, 2
  %101 = shl i64 %96, 4
  %102 = tail call i8* @_Znwm(i64 %101) #14
  %103 = bitcast i8* %102 to %"struct.std::__1::pair.19"*
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %103, i64 %100
  %106 = ptrtoint %"struct.std::__1::pair.19"* %105 to i64
  %107 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %103, i64 %96
  %108 = ptrtoint %"struct.std::__1::pair.19"* %107 to i64
  %109 = ptrtoint %"struct.std::__1::pair.19"* %5 to i64
  %110 = sub i64 %109, %13
  %111 = ashr exact i64 %110, 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %105, i64 %111
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %164, label %114

114:                                              ; preds = %99
  %115 = add i64 %110, -16
  %116 = lshr i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %114, %120
  %121 = phi %"struct.std::__1::pair.19"* [ %127, %120 ], [ %105, %114 ]
  %122 = phi i64 [ %128, %120 ], [ %106, %114 ]
  %123 = phi %"struct.std::__1::pair.19"* [ %129, %120 ], [ %12, %114 ]
  %124 = phi i64 [ %130, %120 ], [ %118, %114 ]
  %125 = inttoptr i64 %122 to i8*
  %126 = bitcast %"struct.std::__1::pair.19"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #13
  %127 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %121, i64 1
  %128 = ptrtoint %"struct.std::__1::pair.19"* %127 to i64
  %129 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %123, i64 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !34

132:                                              ; preds = %120
  %133 = ptrtoint %"struct.std::__1::pair.19"* %127 to i64
  br label %134

134:                                              ; preds = %114, %132
  %135 = phi %"struct.std::__1::pair.19"* [ %105, %114 ], [ %127, %132 ]
  %136 = phi i64 [ %106, %114 ], [ %133, %132 ]
  %137 = phi %"struct.std::__1::pair.19"* [ %12, %114 ], [ %129, %132 ]
  %138 = icmp ult i64 %115, 48
  br i1 %138, label %161, label %139

139:                                              ; preds = %134, %139
  %140 = phi %"struct.std::__1::pair.19"* [ %157, %139 ], [ %135, %134 ]
  %141 = phi i64 [ %158, %139 ], [ %136, %134 ]
  %142 = phi %"struct.std::__1::pair.19"* [ %159, %139 ], [ %137, %134 ]
  %143 = inttoptr i64 %141 to i8*
  %144 = bitcast %"struct.std::__1::pair.19"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #13
  %145 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %140, i64 1
  %146 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %142, i64 1
  %147 = bitcast %"struct.std::__1::pair.19"* %145 to i8*
  %148 = bitcast %"struct.std::__1::pair.19"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #13
  %149 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %140, i64 2
  %150 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %142, i64 2
  %151 = bitcast %"struct.std::__1::pair.19"* %149 to i8*
  %152 = bitcast %"struct.std::__1::pair.19"* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 16, i1 false) #13
  %153 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %140, i64 3
  %154 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %142, i64 3
  %155 = bitcast %"struct.std::__1::pair.19"* %153 to i8*
  %156 = bitcast %"struct.std::__1::pair.19"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #13
  %157 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %140, i64 4
  %158 = ptrtoint %"struct.std::__1::pair.19"* %157 to i64
  %159 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %142, i64 4
  %160 = icmp eq %"struct.std::__1::pair.19"* %112, %157
  br i1 %160, label %161, label %139

161:                                              ; preds = %139, %134
  %162 = ptrtoint %"struct.std::__1::pair.19"* %112 to i64
  %163 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %14, align 8
  br label %164

164:                                              ; preds = %99, %161
  %165 = phi %"struct.std::__1::pair.19"* [ %163, %161 ], [ %15, %99 ]
  %166 = phi i64 [ %162, %161 ], [ %106, %99 ]
  store i64 %104, i64* %92, align 8
  %167 = bitcast %"struct.std::__1::pair.19"** %11 to i64*
  store i64 %106, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::pair.19"** %4 to i64*
  store i64 %166, i64* %168, align 8
  store i64 %108, i64* %91, align 8
  %169 = icmp eq %"struct.std::__1::pair.19"* %165, null
  %170 = inttoptr i64 %166 to %"struct.std::__1::pair.19"*
  br i1 %169, label %174, label %171

171:                                              ; preds = %164
  %172 = bitcast %"struct.std::__1::pair.19"* %165 to i8*
  tail call void @_ZdlPv(i8* %172) #14
  %173 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %4, align 8
  br label %174

174:                                              ; preds = %171, %164, %86, %3
  %175 = phi %"struct.std::__1::pair.19"* [ %173, %171 ], [ %170, %164 ], [ %88, %86 ], [ %5, %3 ]
  %176 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %175, i64 0, i32 0
  %177 = load i32, i32* %1, align 4
  store i32 %177, i32* %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %175, i64 0, i32 1
  %179 = load i64, i64* %2, align 8
  store i64 %179, i64* %178, align 8
  %180 = load %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"** %4, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.19", %"struct.std::__1::pair.19"* %180, i64 1
  store %"struct.std::__1::pair.19"* %181, %"struct.std::__1::pair.19"** %4, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeIPN3net25QuicChromiumClientSessionENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !20}
!24 = distinct !{!24, !20}
!25 = distinct !{!25, !20}
!26 = distinct !{!26, !20}
!27 = distinct !{!27, !20}
!28 = distinct !{!28, !20}
!29 = distinct !{!29, !20}
!30 = distinct !{!30, !20}
!31 = distinct !{!31, !20}
!32 = distinct !{!32, !20}
!33 = distinct !{!33, !20}
!34 = distinct !{!34, !20}
