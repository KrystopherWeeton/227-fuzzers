; ModuleID = '../../third_party/blink/renderer/core/paint/nine_piece_image_painter.cc'
source_filename = "../../third_party/blink/renderer/core/paint/nine_piece_image_painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::NinePieceImageGrid::Edge" = type { float, i32 }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%struct.anon.802 = type { i32, i32 }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.85", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.43, %class.sk_sp.44, %class.sk_sp.45, %class.sk_sp.46, i32, float, float, i32, %union.anon.53, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.9, i32, %"class.absl::optional.19", %"class.std::__1::vector.24", %"class.std::__1::vector.31", %class.sk_sp.38, %class.sk_sp.2, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.2, %class.sk_sp.9, %"class.gfx::Rect", i32, %class.sk_sp.14, %class.sk_sp.18, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.14 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3, i32, i32 }
%class.sk_sp.3 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.15" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.18 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.9 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.10", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i8* }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i32*, i32*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i32* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { float*, float*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float* }
%class.sk_sp.38 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.39", [7 x i8] }>
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i8 }
%class.sk_sp.2 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.43 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.44 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.45 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.46 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.47, i32, %"class.absl::optional.48", i8, i32 }
%class.sk_sp.47 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { %struct.SkRect }
%union.anon.53 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.55, %"class.std::__1::unique_ptr.56" }
%class.scoped_refptr.55 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.59", %struct.SkRect }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.64, [384 x i64], %class.sk_sp.65, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.66", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.72" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.64 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.65 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.106", %"class.std::__1::unique_ptr.111" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %class.sk_sp.44 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.106" = type { %"class.absl::optional_internal::optional_data.107" }
%"class.absl::optional_internal::optional_data.107" = type { %"class.absl::optional_internal::optional_data_base.108" }
%"class.absl::optional_internal::optional_data_base.108" = type { %"class.absl::optional_internal::optional_data_dtor_base.109" }
%"class.absl::optional_internal::optional_data_dtor_base.109" = type { i8, %union.anon.110 }
%union.anon.110 = type { i32 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::ImageResourceObserver" = type opaque
%"class.blink::Document" = type opaque
%"class.blink::Node" = type opaque
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.373", %"class.blink::DataRef.445", %"class.blink::DataRef.449", %"class.blink::DataRef.649", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.121", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.121" = type { %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.123", %"class.blink::Font" }
%"class.WTF::RefCounted.123" = type { %"class.base::RefCounted.124" }
%"class.base::RefCounted.124" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.163 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.132, %class.scoped_refptr.140, %class.scoped_refptr.150, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.162 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.131 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.125 }
%class.scoped_refptr.125 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.126" }
%"struct.std::__1::atomic.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__cxx_atomic_impl.129" }
%"struct.std::__1::__cxx_atomic_impl.129" = type { %"struct.std::__1::__cxx_atomic_base_impl.130" }
%"struct.std::__1::__cxx_atomic_base_impl.130" = type { i32 }
%class.scoped_refptr.131 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.755", [4 x i8] }>
%"class.WTF::RefCounted.755" = type { %"class.base::RefCounted.756" }
%"class.base::RefCounted.756" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.132 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.138", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.133" }
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.138" = type { %"class.base::RefCounted.139" }
%"class.base::RefCounted.139" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.140 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.141", %"class.WTF::RefCounted.148", [4 x i8] }>
%"class.blink::FontSettings.141" = type { %"class.WTF::Vector.142" }
%"class.WTF::Vector.142" = type { %"class.WTF::VectorBuffer.143" }
%"class.WTF::VectorBuffer.143" = type { %"class.WTF::VectorBufferBase.144" }
%"class.WTF::VectorBufferBase.144" = type { %"class.blink::FontTagValuePair.145"*, i32, i32 }
%"class.blink::FontTagValuePair.145" = type { i32, float }
%"class.WTF::RefCounted.148" = type { %"class.base::RefCounted.149" }
%"class.base::RefCounted.149" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.150 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.151", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.159, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.151" = type { %"class.base::RefCounted.152" }
%"class.base::RefCounted.152" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.155 }
%union.anon.155 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.159 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.160", [4 x i8] }>
%"class.WTF::RefCounted.160" = type { %"class.base::RefCounted.161" }
%"class.base::RefCounted.161" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.162 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.163 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.164", %"class.WTF::Vector.166", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.164" = type { %"class.base::RefCounted.165" }
%"class.base::RefCounted.165" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.166" = type { %"class.WTF::VectorBuffer.167" }
%"class.WTF::VectorBuffer.167" = type { %"class.WTF::VectorBufferBase.168", [8 x i8] }
%"class.WTF::VectorBufferBase.168" = type { %class.scoped_refptr.169*, i32, i32 }
%class.scoped_refptr.169 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.170", [4 x i8] }>
%"class.WTF::RefCounted.170" = type { %"class.base::RefCounted.171" }
%"class.base::RefCounted.171" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.181", %class.scoped_refptr.188, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.170" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.174", %"class.absl::optional.174", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.174" = type { %"class.absl::optional_internal::optional_data.175" }
%"class.absl::optional_internal::optional_data.175" = type { %"class.absl::optional_internal::optional_data_base.176" }
%"class.absl::optional_internal::optional_data_base.176" = type { %"class.absl::optional_internal::optional_data_dtor_base.177" }
%"class.absl::optional_internal::optional_data_dtor_base.177" = type { i8, %union.anon.178 }
%union.anon.178 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.179, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.180, i8, [7 x i8] }>
%class.sk_sp.179 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.180 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.179, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.184, %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.188 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.189", [4 x i8] }>
%"class.WTF::RefCounted.189" = type { %"class.base::RefCounted.190" }
%"class.base::RefCounted.190" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.191", i32, [4 x i8], %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.329", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.345", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.363", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.39", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.309", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.227" = type { %"struct.std::__1::__atomic_base.228" }
%"struct.std::__1::__atomic_base.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__cxx_atomic_impl.230" }
%"struct.std::__1::__cxx_atomic_impl.230" = type { %"struct.std::__1::__cxx_atomic_base_impl.231" }
%"struct.std::__1::__cxx_atomic_base_impl.231" = type { i64 }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist.245"* }
%"class.blink::Worklist.245" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::Worklist.266"* }
%"class.blink::Worklist.266" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::Worklist.273"* }
%"class.blink::Worklist.273" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::Worklist.280"* }
%"class.blink::Worklist.280" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.227" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.301", %"class.std::__1::__compressed_pair.303", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { i64 }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { float }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.312", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.321" }
%"class.WTF::Vector.321" = type { %"class.WTF::VectorBuffer.322" }
%"class.WTF::VectorBuffer.322" = type { %"class.WTF::VectorBufferBase.323" }
%"class.WTF::VectorBufferBase.323" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.338" }
%"class.WTF::VectorBufferBase.338" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.351" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.238"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.245"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.252"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.259"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.266"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.748", i64 }
%"class.std::__1::vector.748" = type { %"class.std::__1::__vector_base.749" }
%"class.std::__1::__vector_base.749" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.750" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.369 }
%class.scoped_refptr.369 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.370 }
%class.scoped_refptr.370 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.371", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.371" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"class.blink::Length" = type <{ %union.anon.372, i8, i8, i8, i8 }>
%union.anon.372 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.373" = type { %class.scoped_refptr.374 }
%class.scoped_refptr.374 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.375", [4 x i8], %"class.blink::DataRef.377", %"class.blink::DataRef.409", %"class.WTF::Vector.413", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.418, %class.scoped_refptr.427, %"class.blink::Persistent.435", %"class.blink::Persistent.437", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.375" = type { %"class.base::RefCounted.376" }
%"class.base::RefCounted.376" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.377" = type { %class.scoped_refptr.378 }
%class.scoped_refptr.378 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.379", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.381, %class.scoped_refptr.388, %"class.blink::Persistent.399", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.379" = type { %"class.base::RefCounted.380" }
%"class.base::RefCounted.380" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.381 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.382", %"class.WTF::Vector.383" }
%"class.base::RefCountedThreadSafe.382" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.383" = type { %"class.WTF::VectorBuffer.384" }
%"class.WTF::VectorBuffer.384" = type { %"class.WTF::VectorBufferBase.385" }
%"class.WTF::VectorBufferBase.385" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.388 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.389", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.389" = type { %"class.base::RefCounted.390" }
%"class.base::RefCounted.390" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.792 }
%class.scoped_refptr.792 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.793", %"class.WTF::Vector.632", %"class.WTF::Vector.795", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.793" = type { %"class.base::RefCounted.794" }
%"class.base::RefCounted.794" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.632" = type { %"class.WTF::VectorBuffer.633" }
%"class.WTF::VectorBuffer.633" = type { %"class.WTF::VectorBufferBase.634" }
%"class.WTF::VectorBufferBase.634" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.795" = type { %"class.WTF::VectorBuffer.796" }
%"class.WTF::VectorBuffer.796" = type { %"class.WTF::VectorBufferBase.797" }
%"class.WTF::VectorBufferBase.797" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.798 }
%union.anon.798 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.393" }
%"class.blink::PersistentBase.393" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.398" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.394" }
%"class.WTF::HashMap.394" = type { %"class.WTF::HashTable.395" }
%"class.WTF::HashTable.395" = type <{ %"struct.WTF::KeyValuePair.397"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.397" = type opaque
%"class.blink::PersistentNodePtr.398" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.399" = type { %"class.blink::PersistentBase.400" }
%"class.blink::PersistentBase.400" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.398" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.403" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.409" = type { %class.scoped_refptr.410 }
%class.scoped_refptr.410 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.411", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.411" = type { %"class.base::RefCounted.412" }
%"class.base::RefCounted.412" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.418 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.419", %"class.WTF::Vector.421" }
%"class.WTF::RefCounted.419" = type { %"class.base::RefCounted.420" }
%"class.base::RefCounted.420" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"struct.std::__1::pair.424"*, i32, i32 }
%"struct.std::__1::pair.424" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.427 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.428", [4 x i8], %"class.WTF::Vector.430" }
%"class.WTF::RefCounted.428" = type { %"class.base::RefCounted.429" }
%"class.base::RefCounted.429" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.430" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.432", [28 x i8] }>
%"class.WTF::VectorBufferBase.432" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.435" = type { %"class.blink::PersistentBase.436" }
%"class.blink::PersistentBase.436" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.398" }
%"class.blink::Persistent.437" = type { %"class.blink::PersistentBase.438" }
%"class.blink::PersistentBase.438" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.398" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.441", %"class.blink::Member.443" }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.445" = type { %class.scoped_refptr.446 }
%class.scoped_refptr.446 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.447", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.447" = type { %"class.base::RefCounted.448" }
%"class.base::RefCounted.448" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.449" = type { %class.scoped_refptr.450 }
%class.scoped_refptr.450 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.451", [4 x i8], %"class.blink::DataRef.453", %"class.blink::DataRef.519", %"class.blink::TransformOperations", %class.scoped_refptr.427, %"class.blink::Persistent.643", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.451" = type { %"class.base::RefCounted.452" }
%"class.base::RefCounted.452" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.453" = type { %class.scoped_refptr.454 }
%class.scoped_refptr.454 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.455", [4 x i8], %"class.blink::DataRef.457", %"class.blink::Persistent.495", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.455" = type { %"class.base::RefCounted.456" }
%"class.base::RefCounted.456" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.457" = type { %class.scoped_refptr.458 }
%class.scoped_refptr.458 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.459", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.477, %class.scoped_refptr.480, %class.scoped_refptr.483, %class.scoped_refptr.486, %class.scoped_refptr.487, %class.scoped_refptr.488, %"class.blink::Persistent.495", %"class.blink::Persistent.510", %"class.absl::optional.514", %"class.absl::optional.514", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.459" = type { %"class.base::RefCounted.460" }
%"class.base::RefCounted.460" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.461", %"class.std::__1::unique_ptr.466" }
%"class.WTF::Vector.461" = type { %"class.WTF::VectorBuffer.462" }
%"class.WTF::VectorBuffer.462" = type { %"class.WTF::VectorBufferBase.463" }
%"class.WTF::VectorBufferBase.463" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.469", %"class.WTF::Vector.461", i32, i32 }
%"class.WTF::Vector.469" = type { %"class.WTF::VectorBuffer.470" }
%"class.WTF::VectorBuffer.470" = type { %"class.WTF::VectorBufferBase.471" }
%"class.WTF::VectorBufferBase.471" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.477 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.478", [4 x i8] }>
%"class.WTF::RefCounted.478" = type { %"class.base::RefCounted.479" }
%"class.base::RefCounted.479" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.480 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.481", [4 x i8] }>
%"class.WTF::RefCounted.481" = type { %"class.base::RefCounted.482" }
%"class.base::RefCounted.482" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.483 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.484" }>
%"class.WTF::RefCounted.484" = type { %"class.base::RefCounted.485" }
%"class.base::RefCounted.485" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.486 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.487 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.488 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.489", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.489" = type { %"class.base::RefCounted.490" }
%"class.base::RefCounted.490" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.491" }
%"class.blink::DataRef.491" = type { %class.scoped_refptr.492 }
%class.scoped_refptr.492 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.435", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.493" }
%"class.WTF::RefCounted.493" = type { %"class.base::RefCounted.494" }
%"class.base::RefCounted.494" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.510" = type { %"class.blink::PersistentBase.511" }
%"class.blink::PersistentBase.511" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.398" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.480, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.514" = type { %"class.absl::optional_internal::optional_data.515" }
%"class.absl::optional_internal::optional_data.515" = type { %"class.absl::optional_internal::optional_data_base.516" }
%"class.absl::optional_internal::optional_data_base.516" = type { %"class.absl::optional_internal::optional_data_dtor_base.517" }
%"class.absl::optional_internal::optional_data_dtor_base.517" = type { i8, [3 x i8], %union.anon.518 }
%union.anon.518 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.495" = type { %"class.blink::PersistentBase.496" }
%"class.blink::PersistentBase.496" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.398" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.499" }
%"class.blink::HeapVector.499" = type { %"class.WTF::Vector.502" }
%"class.WTF::Vector.502" = type { %"class.WTF::VectorBuffer.503" }
%"class.WTF::VectorBuffer.503" = type { %"class.WTF::VectorBufferBase.504" }
%"class.WTF::VectorBufferBase.504" = type { %"class.blink::Member.505"*, i32, i32 }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.519" = type { %class.scoped_refptr.520 }
%class.scoped_refptr.520 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.521", %"class.blink::DataRef.523", %"class.blink::DataRef.527", %"class.blink::DataRef.536", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.555", %"class.std::__1::unique_ptr.566", %"class.std::__1::unique_ptr.604", %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.626", %"class.WTF::Vector.632", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.521" = type { %"class.base::RefCounted.522" }
%"class.base::RefCounted.522" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.523" = type { %class.scoped_refptr.524 }
%class.scoped_refptr.524 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.525", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.525" = type { %"class.base::RefCounted.526" }
%"class.base::RefCounted.526" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.527" = type { %class.scoped_refptr.528 }
%class.scoped_refptr.528 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.529", [4 x i8], %"class.WTF::Vector.531", i8, [7 x i8] }>
%"class.WTF::RefCounted.529" = type { %"class.base::RefCounted.530" }
%"class.base::RefCounted.530" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.531" = type { %"class.WTF::VectorBuffer.532" }
%"class.WTF::VectorBuffer.532" = type { %"class.WTF::VectorBufferBase.533" }
%"class.WTF::VectorBufferBase.533" = type { i32*, i32, i32 }
%"class.blink::DataRef.536" = type { %class.scoped_refptr.537 }
%class.scoped_refptr.537 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.538", [4 x i8], %"class.WTF::HashMap.540", %"class.WTF::HashMap.540", %"class.WTF::HashMap.540", %"class.WTF::HashMap.540", %"class.WTF::HashMap.540", %"class.WTF::HashMap.540", %"class.WTF::HashMap.545", %"class.WTF::HashMap.545", %"class.WTF::HashMap.545", %"class.WTF::HashMap.545", %"class.WTF::HashMap.550", %"class.WTF::Vector.461", %"class.WTF::Vector.461", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.538" = type { %"class.base::RefCounted.539" }
%"class.base::RefCounted.539" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"struct.WTF::KeyValuePair.544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.544" = type { %"class.WTF::String", %"class.WTF::Vector.782" }
%"class.WTF::Vector.782" = type { %"class.WTF::VectorBuffer.783" }
%"class.WTF::VectorBuffer.783" = type { %"class.WTF::VectorBufferBase.784" }
%"class.WTF::VectorBufferBase.784" = type { i64*, i32, i32 }
%"class.WTF::HashMap.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type { i64, %"class.WTF::Vector.632" }
%"class.WTF::HashMap.550" = type { %"class.WTF::HashTable.551" }
%"class.WTF::HashTable.551" = type <{ %"struct.WTF::KeyValuePair.554"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.554" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.558" }
%"class.WTF::HashMap.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ %"struct.WTF::KeyValuePair.562"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.562" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.787", %"class.absl::optional.787", %"class.absl::optional.787" }
%"class.absl::optional.787" = type { %"class.absl::optional_internal::optional_data.788" }
%"class.absl::optional_internal::optional_data.788" = type { %"class.absl::optional_internal::optional_data_base.789" }
%"class.absl::optional_internal::optional_data_base.789" = type { %"class.absl::optional_internal::optional_data_dtor_base.790" }
%"class.absl::optional_internal::optional_data_dtor_base.790" = type { i8, %union.anon.791 }
%union.anon.791 = type { i32 }
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.413", %"class.WTF::Vector.581", %"class.WTF::Vector.569", %"class.WTF::Vector.586", %"class.WTF::Vector.591", %"class.WTF::Vector.596" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.569", %"class.WTF::Vector.569", %"class.WTF::Vector.574" }
%"class.WTF::Vector.574" = type { %"class.WTF::VectorBuffer.575" }
%"class.WTF::VectorBuffer.575" = type { %"class.WTF::VectorBufferBase.576" }
%"class.WTF::VectorBufferBase.576" = type { %class.scoped_refptr.577*, i32, i32 }
%class.scoped_refptr.577 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.578" }
%"class.base::RefCountedThreadSafe.578" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583" }
%"class.WTF::VectorBufferBase.583" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.569" = type { %"class.WTF::VectorBuffer.570" }
%"class.WTF::VectorBuffer.570" = type { %"class.WTF::VectorBufferBase.571" }
%"class.WTF::VectorBufferBase.571" = type { double*, i32, i32 }
%"class.WTF::Vector.586" = type { %"class.WTF::VectorBuffer.587" }
%"class.WTF::VectorBuffer.587" = type { %"class.WTF::VectorBufferBase.588" }
%"class.WTF::VectorBufferBase.588" = type { i32*, i32, i32 }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { i32*, i32, i32 }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.607" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.618" }
%"class.WTF::Vector.618" = type { %"class.WTF::VectorBuffer.619" }
%"class.WTF::VectorBuffer.619" = type { %"class.WTF::VectorBufferBase.620" }
%"class.WTF::VectorBufferBase.620" = type { %"class.blink::Persistent.435"*, i32, i32 }
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.435", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.637" }
%"class.WTF::Vector.637" = type { %"class.WTF::VectorBuffer.638" }
%"class.WTF::VectorBuffer.638" = type { %"class.WTF::VectorBufferBase.639" }
%"class.WTF::VectorBufferBase.639" = type { %class.scoped_refptr.640*, i32, i32 }
%class.scoped_refptr.640 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.484", [4 x i8] }>
%"class.blink::Persistent.643" = type { %"class.blink::PersistentBase.644" }
%"class.blink::PersistentBase.644" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.398" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.647" }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.649" = type { %class.scoped_refptr.650 }
%class.scoped_refptr.650 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.651", [4 x i8], %"class.blink::DataRef.653", %"class.blink::DataRef.657", %"class.blink::DataRef.674", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.678, i32, [4 x i8] }>
%"class.WTF::RefCounted.651" = type { %"class.base::RefCounted.652" }
%"class.base::RefCounted.652" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.653" = type { %class.scoped_refptr.654 }
%class.scoped_refptr.654 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.655", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.655" = type { %"class.base::RefCounted.656" }
%"class.base::RefCounted.656" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.657" = type { %class.scoped_refptr.658 }
%class.scoped_refptr.658 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.659", %class.scoped_refptr.661, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.659" = type { %"class.base::RefCounted.660" }
%"class.base::RefCounted.660" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.661 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.662", %"class.std::__1::unique_ptr.668", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.481" }>
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.674" = type { %class.scoped_refptr.675 }
%class.scoped_refptr.675 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.676", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.676" = type { %"class.base::RefCounted.677" }
%"class.base::RefCounted.677" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.678, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.678, %class.scoped_refptr.678, %class.scoped_refptr.678 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.678 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.679", %"class.blink::Persistent.681", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.679" = type { %"class.base::RefCounted.680" }
%"class.base::RefCounted.680" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.681" = type { %"class.blink::PersistentBase.682" }
%"class.blink::PersistentBase.682" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.398" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.685", %"class.blink::HeapHashMap.687" }
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.746", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.746" = type { %"class.base::RefCounted.747" }
%"class.base::RefCounted.747" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type opaque
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.834" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::IntRectOutsets" = type { i32, i32, i32, i32 }
%"class.blink::NinePieceImageGrid" = type { %"class.blink::IntRect", %"class.blink::FloatSize", i32, i32, i8, %"struct.blink::NinePieceImageGrid::Edge", %"struct.blink::NinePieceImageGrid::Edge", %"struct.blink::NinePieceImageGrid::Edge", %"struct.blink::NinePieceImageGrid::Edge" }
%"struct.blink::NinePieceImageGrid::NinePieceDrawInfo" = type { i8, i8, %"class.blink::FloatRect", %"class.blink::FloatRect", %"class.blink::FloatSize", %struct.anon.802 }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.758", i8, %class.scoped_refptr.760, %"class.blink::WeakPersistent.774", i32, i8, %"class.std::__1::unique_ptr.776" }
%"class.WTF::ThreadSafeRefCounted.758" = type { %"class.base::RefCountedThreadSafe.759" }
%"class.base::RefCountedThreadSafe.759" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.760 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.761", i64, %"class.WTF::Vector.763", %"class.WTF::Vector.768" }
%"class.WTF::RefCounted.761" = type { %"class.base::RefCounted.762" }
%"class.base::RefCounted.762" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.763" = type { %"class.WTF::VectorBuffer.764" }
%"class.WTF::VectorBuffer.764" = type { %"class.WTF::VectorBufferBase.765" }
%"class.WTF::VectorBufferBase.765" = type { i8*, i32, i32 }
%"class.WTF::Vector.768" = type { %"class.WTF::VectorBuffer.769" }
%"class.WTF::VectorBuffer.769" = type { %"class.WTF::VectorBufferBase.770" }
%"class.WTF::VectorBufferBase.770" = type { %"class.std::__1::unique_ptr.771"*, i32, i32 }
%"class.std::__1::unique_ptr.771" = type opaque
%"class.blink::WeakPersistent.774" = type { %"class.blink::PersistentBase.775" }
%"class.blink::PersistentBase.775" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.821", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.821" = type { %"class.std::__1::__vector_base.822" }
%"class.std::__1::__vector_base.822" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.823", i64, i64 }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink15GraphicsContext16RealizePaintSaveEv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [11 x i8] c"PaintImage\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@__const._ZN5blink12_GLOBAL__N_111PaintPiecesERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_13ComputedStyleERKNS_14NinePieceImageEPNS_5ImageERKNS_9FloatSizeENS_16PhysicalBoxSidesE.grid = private unnamed_addr constant { %"class.blink::IntRect", %"class.blink::FloatSize", i32, i32, i8, [3 x i8], %"struct.blink::NinePieceImageGrid::Edge", %"struct.blink::NinePieceImageGrid::Edge", %"struct.blink::NinePieceImageGrid::Edge", %"struct.blink::NinePieceImageGrid::Edge" } { %"class.blink::IntRect" { %"class.blink::IntPoint" { i32 -1431655766, i32 -1431655766 }, %"class.blink::IntSize" { i32 -1431655766, i32 -1431655766 } }, %"class.blink::FloatSize" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"struct.blink::NinePieceImageGrid::Edge" { float 0xFFFFFFFFE0000000, i32 -1431655766 }, %"struct.blink::NinePieceImageGrid::Edge" { float 0xFFFFFFFFE0000000, i32 -1431655766 }, %"struct.blink::NinePieceImageGrid::Edge" { float 0xFFFFFFFFE0000000, i32 -1431655766 }, %"struct.blink::NinePieceImageGrid::Edge" { float 0xFFFFFFFFE0000000, i32 -1431655766 } }, align 4
@__const._ZN5blink12_GLOBAL__N_111PaintPiecesERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_13ComputedStyleERKNS_14NinePieceImageEPNS_5ImageERKNS_9FloatSizeENS_16PhysicalBoxSidesE.draw_info = private unnamed_addr constant { i8, i8, [2 x i8], %"class.blink::FloatRect", %"class.blink::FloatRect", %"class.blink::FloatSize", %struct.anon.802 } { i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.blink::FloatRect" { %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatSize" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, %"class.blink::FloatRect" { %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatSize" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, %"class.blink::FloatSize" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.anon.802 { i32 -1431655766, i32 -1431655766 } }, align 4
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [153 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::GraphicsContextState, std::__1::default_delete<blink::GraphicsContextState> >]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21NinePieceImagePainter5PaintERNS_15GraphicsContextERKNS_21ImageResourceObserverERKNS_8DocumentEPNS_4NodeERKNS_12PhysicalRectERKNS_13ComputedStyleERKNS_14NinePieceImageENS_16PhysicalBoxSidesE(%"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::Node"*, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::NinePieceImage"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.blink::FloatRect", align 4
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.base::trace_event::TraceArguments", align 8
  %14 = alloca %"class.base::TimeTicks", align 8
  %15 = alloca %"class.blink::FloatSize", align 4
  %16 = alloca %"class.blink::IntRectOutsets", align 4
  %17 = alloca %"class.blink::NinePieceImageGrid", align 4
  %18 = alloca %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", align 4
  %19 = alloca %"class.blink::FloatSize", align 4
  %20 = alloca %"class.blink::FloatPoint", align 4
  %21 = alloca %"class.blink::FloatSize", align 4
  %22 = alloca %"struct.blink::PhysicalRect", align 4
  %23 = alloca { i64, i64 }, align 8
  %24 = bitcast { i64, i64 }* %23 to %"class.blink::LayoutRectOutsets"*
  %25 = alloca <2 x float>, align 8
  %26 = bitcast <2 x float>* %25 to %"class.blink::FloatSize"*
  %27 = alloca <2 x float>, align 8
  %28 = bitcast <2 x float>* %27 to %"class.blink::FloatSize"*
  %29 = alloca <2 x float>, align 8
  %30 = bitcast <2 x float>* %29 to %"class.blink::FloatSize"*
  %31 = getelementptr inbounds %"class.blink::NinePieceImage", %"class.blink::NinePieceImage"* %6, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %33, align 8
  %35 = icmp eq %"class.blink::StyleImage"* %34, null
  br i1 %35, label %574, label %36

36:                                               ; preds = %8
  %37 = bitcast %"class.blink::StyleImage"* %34 to i1 (%"class.blink::StyleImage"*)***
  %38 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %38, i64 5
  %40 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::StyleImage"* nonnull %34) #10
  br i1 %41, label %42, label %574

42:                                               ; preds = %36
  %43 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %37, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %43, i64 4
  %45 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::StyleImage"* nonnull %34) #10
  br i1 %46, label %47, label %574

47:                                               ; preds = %42
  %48 = bitcast %"struct.blink::PhysicalRect"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #10
  %49 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %22, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %22, i64 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %22, i64 0, i32 1, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %22, i64 0, i32 1, i32 1, i32 0
  %53 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %48, i8* align 4 %53, i64 16, i1 false)
  %54 = bitcast { i64, i64 }* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #10
  %55 = tail call { i64, i64 } @_ZNK5blink13ComputedStyle12ImageOutsetsERKNS_14NinePieceImageE(%"class.blink::ComputedStyle"* %5, %"class.blink::NinePieceImage"* dereferenceable(8) %6) #10
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 0
  %57 = extractvalue { i64, i64 } %55, 0
  store i64 %57, i64* %56, align 8
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 1
  %59 = extractvalue { i64, i64 } %55, 1
  store i64 %59, i64* %58, align 8
  call void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* nonnull %22, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #10
  %60 = load i32, i32* %49, align 4
  %61 = load i32, i32* %50, align 4
  %62 = load i32, i32* %51, align 4
  %63 = load i32, i32* %52, align 4
  %64 = bitcast <2 x float>* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10
  %65 = sitofp i32 %62 to float
  %66 = fmul float %65, 1.562500e-02
  %67 = sitofp i32 %63 to float
  %68 = fmul float %67, 1.562500e-02
  %69 = insertelement <2 x float> undef, float %66, i32 0
  %70 = insertelement <2 x float> %69, float %68, i32 1
  store <2 x float> %70, <2 x float>* %25, align 8
  %71 = bitcast <2 x float>* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #10
  %72 = getelementptr inbounds <2 x float>, <2 x float>* %27, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %72, align 8
  %73 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %28, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %73, align 4
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %77, i64 0, i32 6
  %79 = load float, float* %78, align 8
  %80 = bitcast %"class.blink::StyleImage"* %34 to <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)***
  %81 = load <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)**, <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)*** %80, align 8
  %82 = getelementptr inbounds <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)*, <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)** %81, i64 7
  %83 = load <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)*, <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)** %82, align 8
  %84 = call <2 x float> %83(%"class.blink::StyleImage"* nonnull %34, %"class.blink::Document"* %2, float %79, %"class.blink::FloatSize"* nonnull dereferenceable(8) %26, i32 1) #10
  store <2 x float> %84, <2 x float>* %27, align 8
  %85 = bitcast %"class.blink::StyleImage"* %34 to %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)***
  %86 = load %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)**, %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)*, %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)** %86, i64 11
  %88 = load %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)*, %"class.blink::Image"* (%"class.blink::StyleImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)** %87, align 8
  %89 = call %"class.blink::Image"* %88(%"class.blink::StyleImage"* nonnull %34, %"class.blink::ImageResourceObserver"* %1, %"class.blink::Document"* %2, %"class.blink::ComputedStyle"* dereferenceable(104) %5, %"class.blink::FloatSize"* nonnull dereferenceable(8) %28) #10
  %90 = icmp eq %"class.blink::Image"* %89, null
  br i1 %90, label %573, label %91

91:                                               ; preds = %47
  %92 = bitcast <2 x float>* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #10
  %93 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %74, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %93, i64 0, i32 2, i32 0, i32 0
  %95 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %95, i64 0, i32 6
  %97 = load float, float* %96, align 8
  %98 = fdiv float 1.000000e+00, %97
  %99 = load <2 x float>, <2 x float>* %25, align 8
  %100 = insertelement <2 x float> undef, float %98, i32 0
  %101 = shufflevector <2 x float> %100, <2 x float> undef, <2 x i32> zeroinitializer
  %102 = fmul <2 x float> %99, %101
  store <2 x float> %102, <2 x float>* %29, align 8
  %103 = load <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)**, <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)*** %80, align 8
  %104 = getelementptr inbounds <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)*, <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)** %103, i64 7
  %105 = load <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)*, <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)** %104, align 8
  %106 = call <2 x float> %105(%"class.blink::StyleImage"* nonnull %34, %"class.blink::Document"* %2, float 1.000000e+00, %"class.blink::FloatSize"* nonnull dereferenceable(8) %30, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #10
  %107 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), align 16
  %108 = and i8 %107, 25
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %201, label %110, !prof !2

110:                                              ; preds = %91
  %111 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %112 = bitcast %"class.base::TimeTicks"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #10
  %113 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %14, i64 0, i32 0, i32 0
  %114 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %114, i64* %113, align 8
  %115 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %115) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %115, align 8
  %116 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %13, i64 0, i32 1, i64 0
  store i8 9, i8* %116, align 1
  %117 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %13, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %13, i64 0, i32 3, i64 0
  %119 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #10
  %120 = call i8* @_Znwm(i64 192) #11
  %121 = bitcast i8* %120 to %"class.protozero::ScatteredHeapBuffer"*
  call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %121, i64 4096, i64 4096) #10
  %122 = getelementptr inbounds i8, i8* %120, i64 80
  %123 = bitcast i8* %122 to %"class.protozero::ScatteredStreamWriter"*
  %124 = bitcast i8* %120 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %123, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %124) #10
  %125 = getelementptr inbounds i8, i8* %120, i64 120
  %126 = getelementptr inbounds i8, i8* %120, i64 168
  %127 = bitcast i8* %126 to %"class.protozero::MessageArena"*
  call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %127) #10
  %128 = bitcast i8* %125 to %"class.protozero::Message"*
  call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %128, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %127) #10
  %129 = getelementptr inbounds i8, i8* %120, i64 24
  %130 = bitcast i8* %129 to i8**
  store i8* %122, i8** %130, align 8
  %131 = bitcast i8* %126 to %"class.std::__1::list"*
  call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %131, i64 1) #10
  %132 = bitcast i8* %126 to %"struct.std::__1::__list_node"**
  %133 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %133, i64 0, i32 1, i32 1
  store i32 0, i32* %134, align 8
  call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %128, %"class.protozero::ScatteredStreamWriter"* %123, %"class.protozero::MessageArena"* %127) #10
  %135 = bitcast %"union.base::trace_event::TraceValue"* %118 to i8**
  store i8* %120, i8** %135, align 8
  %136 = bitcast i8* %125 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::protos::pbzero::DebugAnnotation"* %136) #10
  %137 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #10
  %138 = bitcast { <2 x float>, <2 x float> }* %11 to %"class.blink::FloatRect"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %137, i8* nonnull align 8 %119, i64 16, i1 false) #10
  %139 = bitcast %"class.blink::FloatRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #10
  %140 = bitcast %"class.blink::Image"* %89 to i64 (%"class.blink::Image"*)***
  %141 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %140, align 8
  %142 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %141, i64 13
  %143 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %142, align 8
  %144 = call i64 %143(%"class.blink::Image"* nonnull %89) #10
  %145 = trunc i64 %144 to i32
  %146 = sitofp i32 %145 to float
  %147 = lshr i64 %144, 32
  %148 = trunc i64 %147 to i32
  %149 = sitofp i32 %148 to float
  %150 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %150, align 4
  %151 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %151, align 4
  %152 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1, i32 0
  store float %146, float* %152, align 4
  %153 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1, i32 1
  store float %149, float* %153, align 4
  %154 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #10
  %155 = sitofp i32 %60 to float
  %156 = fmul float %155, 1.562500e-02
  %157 = sitofp i32 %61 to float
  %158 = fmul float %157, 1.562500e-02
  %159 = insertelement <2 x float> undef, float %156, i32 0
  %160 = insertelement <2 x float> %159, float %158, i32 1
  %161 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> %160, <2 x float>* %161, align 8
  %162 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  store <2 x float> %70, <2 x float>* %162, align 8
  call void @_ZN5blink27inspector_paint_image_event4DataEN8perfetto11TracedValueEPNS_4NodeERKNS_10StyleImageERKNS_9FloatRectESA_(%"class.perfetto::TracedValue"* nonnull %9, %"class.blink::Node"* %3, %"class.blink::StyleImage"* nonnull dereferenceable(16) %34, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10, %"class.blink::FloatRect"* nonnull dereferenceable(16) %138) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #10
  %163 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %111, %"class.base::TimeTicks"* nonnull dereferenceable(8) %14, %"class.base::trace_event::TraceArguments"* nonnull %13, i32 0) #10
  %164 = load i8, i8* %115, align 8
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %200, label %166

166:                                              ; preds = %110, %195
  %167 = phi i64 [ %196, %195 ], [ 0, %110 ]
  %168 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %13, i64 0, i32 1, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = icmp eq i8 %169, 8
  br i1 %170, label %171, label %182

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %13, i64 0, i32 3, i64 %167
  %173 = bitcast %"union.base::trace_event::TraceValue"* %172 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %174 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %173, align 8
  %175 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %174, null
  br i1 %175, label %195, label %176

176:                                              ; preds = %171
  %177 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %174 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %178 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %178, i64 1
  %180 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %179, align 8
  call void %180(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %174) #10
  %181 = load i8, i8* %168, align 1
  br label %182

182:                                              ; preds = %176, %166
  %183 = phi i8 [ %169, %166 ], [ %181, %176 ]
  %184 = icmp eq i8 %183, 9
  br i1 %184, label %185, label %195

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %13, i64 0, i32 3, i64 %167
  %187 = bitcast %"union.base::trace_event::TraceValue"* %186 to %"class.protozero::HeapBuffered"**
  %188 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %187, align 8
  %189 = icmp eq %"class.protozero::HeapBuffered"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %188, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %191) #10
  %192 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %188, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %192) #10
  %193 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %188, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %193) #10
  %194 = bitcast %"class.protozero::HeapBuffered"* %188 to i8*
  call void @_ZdlPv(i8* %194) #11
  br label %195

195:                                              ; preds = %190, %185, %182, %171
  %196 = add nuw nsw i64 %167, 1
  %197 = load i8, i8* %115, align 8
  %198 = zext i8 %197 to i64
  %199 = icmp ult i64 %196, %198
  br i1 %199, label %166, label %200

200:                                              ; preds = %195, %110
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #10
  br label %201

201:                                              ; preds = %91, %200
  %202 = phi i8* [ null, %91 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), %200 ]
  %203 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %91 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %200 ]
  %204 = phi i64 [ -6148914691236517206, %91 ], [ %163, %200 ]
  %205 = bitcast %"class.blink::Image"* %89 to <2 x float> (%"class.blink::Image"*, i32)***
  %206 = load <2 x float> (%"class.blink::Image"*, i32)**, <2 x float> (%"class.blink::Image"*, i32)*** %205, align 8
  %207 = getelementptr inbounds <2 x float> (%"class.blink::Image"*, i32)*, <2 x float> (%"class.blink::Image"*, i32)** %206, i64 16
  %208 = load <2 x float> (%"class.blink::Image"*, i32)*, <2 x float> (%"class.blink::Image"*, i32)** %207, align 8
  %209 = call <2 x float> %208(%"class.blink::Image"* nonnull %89, i32 1) #10
  %210 = bitcast %"class.blink::FloatSize"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #10
  %211 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %15, i64 0, i32 0
  %212 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %15, i64 0, i32 1
  %213 = extractelement <2 x float> %209, i32 0
  %214 = extractelement <2 x float> %106, i32 0
  %215 = fdiv float %213, %214
  %216 = extractelement <2 x float> %209, i32 1
  %217 = extractelement <2 x float> %106, i32 1
  %218 = fdiv float %216, %217
  store float %215, float* %211, align 4
  store float %218, float* %212, align 4
  %219 = bitcast %"class.blink::IntRectOutsets"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %219) #10
  %220 = getelementptr inbounds %"class.blink::IntRectOutsets", %"class.blink::IntRectOutsets"* %16, i64 0, i32 0
  %221 = getelementptr inbounds %"class.blink::IntRectOutsets", %"class.blink::IntRectOutsets"* %16, i64 0, i32 1
  %222 = getelementptr inbounds %"class.blink::IntRectOutsets", %"class.blink::IntRectOutsets"* %16, i64 0, i32 2
  %223 = getelementptr inbounds %"class.blink::IntRectOutsets", %"class.blink::IntRectOutsets"* %16, i64 0, i32 3
  %224 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 7, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %219, i8 -86, i64 16, i1 false) #10
  %225 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %225, i64 0, i32 27
  %227 = load i16, i16* %226, align 8
  %228 = icmp ult i16 %227, 8192
  br i1 %228, label %233, label %229

229:                                              ; preds = %201
  %230 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %225, i64 0, i32 26, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = sdiv i32 %231, 64
  br label %233

233:                                              ; preds = %229, %201
  %234 = phi i32 [ %232, %229 ], [ 0, %201 ]
  %235 = and i16 %227, 3584
  %236 = icmp eq i16 %235, 0
  br i1 %236, label %241, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %225, i64 0, i32 25, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = sdiv i32 %239, 64
  br label %241

241:                                              ; preds = %237, %233
  %242 = phi i32 [ %240, %237 ], [ 0, %233 ]
  %243 = and i16 %227, 14
  %244 = icmp eq i16 %243, 0
  br i1 %244, label %249, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %225, i64 0, i32 23, i32 0
  %247 = load i32, i32* %246, align 4
  %248 = sdiv i32 %247, 64
  br label %249

249:                                              ; preds = %245, %241
  %250 = phi i32 [ %248, %245 ], [ 0, %241 ]
  %251 = and i16 %227, 224
  %252 = icmp eq i16 %251, 0
  br i1 %252, label %257, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %225, i64 0, i32 24, i32 0
  %255 = load i32, i32* %254, align 4
  %256 = sdiv i32 %255, 64
  br label %257

257:                                              ; preds = %253, %249
  %258 = phi i32 [ %256, %253 ], [ 0, %249 ]
  store i32 %234, i32* %220, align 4
  store i32 %242, i32* %221, align 4
  store i32 %250, i32* %222, align 4
  store i32 %258, i32* %223, align 4
  %259 = bitcast %"class.blink::NinePieceImageGrid"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %259) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %259, i8* align 4 bitcast ({ %"class.blink::IntRect", %"class.blink::FloatSize", i32, i32, i8, [3 x i8], %"struct.blink::NinePieceImageGrid::Edge", %"struct.blink::NinePieceImageGrid::Edge", %"struct.blink::NinePieceImageGrid::Edge", %"struct.blink::NinePieceImageGrid::Edge" }* @__const._ZN5blink12_GLOBAL__N_111PaintPiecesERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_13ComputedStyleERKNS_14NinePieceImageEPNS_5ImageERKNS_9FloatSizeENS_16PhysicalBoxSidesE.grid to i8*), i64 68, i1 false) #10
  %260 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %74, align 8
  %261 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %260, i64 0, i32 2, i32 0, i32 0
  %262 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %261, align 8
  %263 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %262, i64 0, i32 6
  %264 = load float, float* %263, align 8
  %265 = sdiv i32 %60, 64
  %266 = srem i32 %60, 64
  %267 = add nsw i32 %266, 32
  %268 = ashr i32 %267, 6
  %269 = add nsw i32 %268, %265
  %270 = sdiv i32 %61, 64
  %271 = srem i32 %61, 64
  %272 = add nsw i32 %271, 32
  %273 = ashr i32 %272, 6
  %274 = add nsw i32 %273, %270
  %275 = zext i32 %274 to i64
  %276 = shl nuw i64 %275, 32
  %277 = zext i32 %269 to i64
  %278 = or i64 %276, %277
  %279 = icmp slt i32 %62, 0
  %280 = select i1 %279, i32 -2147483648, i32 2147483647
  %281 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %266, i32 %62) #10
  %282 = extractvalue { i32, i1 } %281, 1
  %283 = extractvalue { i32, i1 } %281, 0
  %284 = select i1 %282, i32 %280, i32 %283, !prof !3
  %285 = sdiv i32 %284, 64
  %286 = srem i32 %284, 64
  %287 = add nsw i32 %286, 32
  %288 = ashr i32 %287, 6
  %289 = sub nsw i32 %285, %268
  %290 = add nsw i32 %288, %289
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %298

292:                                              ; preds = %257
  %293 = add i32 %62, 4
  %294 = icmp ugt i32 %293, 8
  br i1 %294, label %295, label %298, !prof !4

295:                                              ; preds = %292
  %296 = icmp sgt i32 %62, 0
  %297 = select i1 %296, i32 1, i32 -1
  br label %298

298:                                              ; preds = %295, %292, %257
  %299 = phi i32 [ %297, %295 ], [ %290, %257 ], [ 0, %292 ]
  %300 = icmp slt i32 %63, 0
  %301 = select i1 %300, i32 -2147483648, i32 2147483647
  %302 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %271, i32 %63) #10
  %303 = extractvalue { i32, i1 } %302, 1
  %304 = extractvalue { i32, i1 } %302, 0
  %305 = select i1 %303, i32 %301, i32 %304, !prof !3
  %306 = sdiv i32 %305, 64
  %307 = srem i32 %305, 64
  %308 = add nsw i32 %307, 32
  %309 = ashr i32 %308, 6
  %310 = sub nsw i32 %306, %273
  %311 = add nsw i32 %309, %310
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %319

313:                                              ; preds = %298
  %314 = add i32 %63, 4
  %315 = icmp ugt i32 %314, 8
  br i1 %315, label %316, label %319, !prof !4

316:                                              ; preds = %313
  %317 = icmp sgt i32 %63, 0
  %318 = select i1 %317, i32 1, i32 -1
  br label %319

319:                                              ; preds = %316, %313, %298
  %320 = phi i32 [ %318, %316 ], [ %311, %298 ], [ 0, %313 ]
  %321 = zext i32 %320 to i64
  %322 = shl nuw i64 %321, 32
  %323 = zext i32 %299 to i64
  %324 = or i64 %322, %323
  call void @_ZN5blink18NinePieceImageGridC1ERKNS_14NinePieceImageENS_9FloatSizeERKS4_fNS_7IntRectERKNS_14IntRectOutsetsENS_16PhysicalBoxSidesE(%"class.blink::NinePieceImageGrid"* nonnull %17, %"class.blink::NinePieceImage"* dereferenceable(8) %6, <2 x float> %209, %"class.blink::FloatSize"* nonnull dereferenceable(8) %15, float %264, i64 %278, i64 %324, %"class.blink::IntRectOutsets"* nonnull dereferenceable(16) %16, i32 %7) #10
  %325 = call i32 @_ZNK5blink13ComputedStyle23GetInterpolationQualityEv(%"class.blink::ComputedStyle"* %5) #10
  %326 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 4
  %327 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %326, align 8
  %328 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %327, i64 0, i32 4
  %329 = load i32, i32* %328, align 4
  %330 = icmp eq i32 %329, %325
  br i1 %330, label %333, label %331

331:                                              ; preds = %319
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %0) #10
  %332 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %326, align 8
  call void @_ZN5blink20GraphicsContextState23SetInterpolationQualityENS_20InterpolationQualityE(%"class.blink::GraphicsContextState"* %332, i32 %325) #10
  br label %333

333:                                              ; preds = %331, %319
  %334 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 0
  %335 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 1
  %336 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 5, i32 0
  %337 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 5, i32 1
  %338 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 2
  %339 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %338, i64 0, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 2, i32 1, i32 0
  %341 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 3
  %342 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %341, i64 0, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 3, i32 1, i32 0
  %344 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 4, i32 0
  %345 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 2, i32 0, i32 1
  %346 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 2, i32 1, i32 1
  %347 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 3, i32 0, i32 1
  %348 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 3, i32 1, i32 1
  %349 = getelementptr inbounds %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo", %"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* %18, i64 0, i32 4, i32 1
  %350 = bitcast %"class.blink::FloatSize"* %19 to i8*
  %351 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %19, i64 0, i32 0
  %352 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %19, i64 0, i32 1
  %353 = bitcast %"class.blink::FloatPoint"* %20 to i8*
  %354 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %20, i64 0, i32 0
  %355 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %20, i64 0, i32 1
  %356 = bitcast %"class.blink::FloatSize"* %21 to i8*
  %357 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %21, i64 0, i32 0
  %358 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %21, i64 0, i32 1
  %359 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  br label %367

360:                                              ; preds = %552
  %361 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %326, align 8
  %362 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %361, i64 0, i32 4
  %363 = load i32, i32* %362, align 4
  %364 = icmp eq i32 %329, %363
  br i1 %364, label %555, label %365

365:                                              ; preds = %360
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %0) #10
  %366 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %326, align 8
  call void @_ZN5blink20GraphicsContextState23SetInterpolationQualityENS_20InterpolationQualityE(%"class.blink::GraphicsContextState"* %366, i32 %329) #10
  br label %555

367:                                              ; preds = %552, %333
  %368 = phi i32 [ 0, %333 ], [ %553, %552 ]
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %334) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %334, i8* align 4 getelementptr inbounds ({ i8, i8, [2 x i8], %"class.blink::FloatRect", %"class.blink::FloatRect", %"class.blink::FloatSize", %struct.anon.802 }, { i8, i8, [2 x i8], %"class.blink::FloatRect", %"class.blink::FloatRect", %"class.blink::FloatSize", %struct.anon.802 }* @__const._ZN5blink12_GLOBAL__N_111PaintPiecesERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_13ComputedStyleERKNS_14NinePieceImageEPNS_5ImageERKNS_9FloatSizeENS_16PhysicalBoxSidesE.draw_info, i64 0, i32 0), i64 52, i1 false) #10
  call void @_ZNK5blink18NinePieceImageGrid20GetNinePieceDrawInfoENS_9NinePieceE(%"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* nonnull sret %18, %"class.blink::NinePieceImageGrid"* nonnull %17, i32 %368) #10
  %369 = load i8, i8* %334, align 4, !range !5
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %552, label %371

371:                                              ; preds = %367
  %372 = load i8, i8* %335, align 1, !range !5
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %374, label %379

374:                                              ; preds = %371
  %375 = load i32, i32* %336, align 4
  %376 = load i32, i32* %337, align 4
  %377 = or i32 %376, %375
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %437

379:                                              ; preds = %374, %371
  %380 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %359, align 8
  %381 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %380, i64 0, i32 2, i32 0, i32 0
  %382 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %381, align 8
  %383 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %382, i64 0, i32 3, i32 0, i32 0
  %384 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %383, align 8
  %385 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %384, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %386 = load i32, i32* %385, align 4
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %435

388:                                              ; preds = %379
  %389 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %380, i64 0, i32 3, i32 0, i32 0
  %390 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %389, align 8
  %391 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %390, i64 0, i32 2, i32 0, i32 0
  %392 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %391, align 8
  %393 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %392, i64 0, i32 2, i32 0, i32 0, i32 0
  %394 = load i32*, i32** %393, align 8
  %395 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %392, i64 0, i32 2, i32 0, i32 0, i32 2
  %396 = load i32, i32* %395, align 4
  %397 = zext i32 %396 to i64
  %398 = getelementptr inbounds i32, i32* %394, i64 %397
  %399 = icmp eq i32 %396, 0
  br i1 %399, label %429, label %400

400:                                              ; preds = %388, %404
  %401 = phi i32* [ %405, %404 ], [ %394, %388 ]
  %402 = load i32, i32* %401, align 4
  %403 = icmp eq i32 %402, 145
  br i1 %403, label %407, label %404

404:                                              ; preds = %400
  %405 = getelementptr inbounds i32, i32* %401, i64 1
  %406 = icmp ult i32* %405, %398
  br i1 %406, label %400, label %414

407:                                              ; preds = %400
  %408 = ptrtoint i32* %401 to i64
  %409 = ptrtoint i32* %394 to i64
  %410 = sub i64 %408, %409
  %411 = lshr exact i64 %410, 2
  %412 = trunc i64 %411 to i32
  %413 = icmp eq i32 %412, -1
  br i1 %413, label %414, label %435

414:                                              ; preds = %404, %407
  br label %415

415:                                              ; preds = %414, %419
  %416 = phi i32* [ %420, %419 ], [ %394, %414 ]
  %417 = load i32, i32* %416, align 4
  %418 = icmp eq i32 %417, 1169
  br i1 %418, label %422, label %419

419:                                              ; preds = %415
  %420 = getelementptr inbounds i32, i32* %416, i64 1
  %421 = icmp ult i32* %420, %398
  br i1 %421, label %415, label %429

422:                                              ; preds = %415
  %423 = ptrtoint i32* %416 to i64
  %424 = ptrtoint i32* %394 to i64
  %425 = sub i64 %423, %424
  %426 = lshr exact i64 %425, 2
  %427 = trunc i64 %426 to i32
  %428 = icmp eq i32 %427, -1
  br i1 %428, label %429, label %435

429:                                              ; preds = %419, %422, %388
  %430 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %382, i64 0, i32 2, i32 0, i32 0
  %431 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %430, align 8
  %432 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %431, i64 0, i32 15, i32 0
  %433 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %432, align 8
  %434 = icmp ne %"class.blink::StyleReflection"* %433, null
  br label %435

435:                                              ; preds = %429, %422, %407, %379
  %436 = phi i1 [ true, %422 ], [ %434, %429 ], [ true, %379 ], [ true, %407 ]
  call void @_ZN5blink15GraphicsContext9DrawImageEPNS_5ImageENS1_17ImageDecodingModeERKNS_9FloatRectEPS5_b11SkBlendModeNS_27RespectImageOrientationEnumE(%"class.blink::GraphicsContext"* %0, %"class.blink::Image"* nonnull %89, i32 1, %"class.blink::FloatRect"* dereferenceable(16) %338, %"class.blink::FloatRect"* %341, i1 zeroext %436, i32 3, i32 1) #10
  br label %552

437:                                              ; preds = %374
  %438 = load float, float* %340, align 4
  %439 = load float, float* %342, align 4
  %440 = load float, float* %343, align 4
  %441 = load float, float* %344, align 4
  switch i32 %375, label %477 [
    i32 1, label %442
    i32 3, label %452
    i32 2, label %459
    i32 0, label %474
  ]

442:                                              ; preds = %437
  %443 = fmul float %440, %441
  %444 = fdiv float %438, %443
  %445 = call float @llvm.round.f32(float %444) #10
  %446 = fcmp ogt float %445, 1.000000e+00
  %447 = select i1 %446, float %445, float 1.000000e+00
  %448 = fmul float %440, %447
  %449 = fdiv float %438, %448
  %450 = fmul float %439, %449
  %451 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %450, i32 0
  br label %477

452:                                              ; preds = %437
  %453 = fmul float %440, %441
  %454 = fmul float %439, %441
  %455 = fsub float %438, %453
  %456 = fmul float %455, 5.000000e-01
  %457 = fsub float %454, %456
  %458 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %457, i32 0
  br label %477

459:                                              ; preds = %437
  %460 = fdiv float %438, %440
  %461 = call float @llvm.floor.f32(float %460) #10
  %462 = fcmp une float %461, 0.000000e+00
  br i1 %462, label %463, label %477

463:                                              ; preds = %459
  %464 = fmul float %440, %461
  %465 = fsub float %438, %464
  %466 = fpext float %461 to double
  %467 = fadd double %466, 1.000000e+00
  %468 = fpext float %465 to double
  %469 = fdiv double %468, %467
  %470 = fptrunc double %469 to float
  %471 = fsub float %439, %470
  %472 = insertelement <2 x float> undef, float %471, i32 0
  %473 = insertelement <2 x float> %472, float %470, i32 1
  br label %477

474:                                              ; preds = %437
  %475 = fmul float %439, %441
  %476 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %475, i32 0
  br label %477

477:                                              ; preds = %474, %463, %459, %452, %442, %437
  %478 = phi i8 [ 1, %474 ], [ 1, %452 ], [ 1, %442 ], [ 1, %463 ], [ 0, %437 ], [ 0, %459 ]
  %479 = phi float [ %441, %474 ], [ %441, %452 ], [ %449, %442 ], [ 1.000000e+00, %463 ], [ undef, %437 ], [ 1.000000e+00, %459 ]
  %480 = phi <2 x float> [ %476, %474 ], [ %458, %452 ], [ %451, %442 ], [ %473, %463 ], [ undef, %437 ], [ undef, %459 ]
  %481 = load float, float* %346, align 4
  %482 = load float, float* %347, align 4
  %483 = load float, float* %348, align 4
  %484 = load float, float* %349, align 4
  switch i32 %376, label %552 [
    i32 1, label %485
    i32 3, label %495
    i32 2, label %502
    i32 0, label %517
  ]

485:                                              ; preds = %477
  %486 = fmul float %483, %484
  %487 = fdiv float %481, %486
  %488 = call float @llvm.round.f32(float %487) #10
  %489 = fcmp ogt float %488, 1.000000e+00
  %490 = select i1 %489, float %488, float 1.000000e+00
  %491 = fmul float %483, %490
  %492 = fdiv float %481, %491
  %493 = fmul float %482, %492
  %494 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %493, i32 0
  br label %520

495:                                              ; preds = %477
  %496 = fmul float %483, %484
  %497 = fmul float %482, %484
  %498 = fsub float %481, %496
  %499 = fmul float %498, 5.000000e-01
  %500 = fsub float %497, %499
  %501 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %500, i32 0
  br label %520

502:                                              ; preds = %477
  %503 = fdiv float %481, %483
  %504 = call float @llvm.floor.f32(float %503) #10
  %505 = fcmp une float %504, 0.000000e+00
  br i1 %505, label %506, label %552

506:                                              ; preds = %502
  %507 = fmul float %483, %504
  %508 = fsub float %481, %507
  %509 = fpext float %504 to double
  %510 = fadd double %509, 1.000000e+00
  %511 = fpext float %508 to double
  %512 = fdiv double %511, %510
  %513 = fptrunc double %512 to float
  %514 = fsub float %482, %513
  %515 = insertelement <2 x float> undef, float %514, i32 0
  %516 = insertelement <2 x float> %515, float %513, i32 1
  br label %520

517:                                              ; preds = %477
  %518 = fmul float %482, %484
  %519 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %518, i32 0
  br label %520

520:                                              ; preds = %517, %506, %495, %485
  %521 = phi float [ %484, %517 ], [ %484, %495 ], [ %492, %485 ], [ 1.000000e+00, %506 ]
  %522 = phi <2 x float> [ %519, %517 ], [ %501, %495 ], [ %494, %485 ], [ %516, %506 ]
  %523 = icmp eq i8 %478, 0
  br i1 %523, label %552, label %524

524:                                              ; preds = %520
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #10
  store float %479, float* %351, align 4
  store float %521, float* %352, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %353) #10
  %525 = load float, float* %339, align 4
  %526 = extractelement <2 x float> %480, i32 0
  %527 = fsub float %525, %526
  %528 = load float, float* %345, align 4
  %529 = extractelement <2 x float> %522, i32 0
  %530 = fsub float %528, %529
  store float %527, float* %354, align 4
  store float %530, float* %355, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #10
  %531 = extractelement <2 x float> %480, i32 1
  %532 = extractelement <2 x float> %522, i32 1
  store float %531, float* %357, align 4
  store float %532, float* %358, align 4
  %533 = icmp eq i32 %375, 1
  %534 = icmp eq i32 %376, 1
  %535 = or i1 %533, %534
  br i1 %535, label %536, label %543

536:                                              ; preds = %524
  %537 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %326, align 8
  %538 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %537, i64 0, i32 4
  %539 = load i32, i32* %538, align 4
  %540 = icmp eq i32 %539, 2
  br i1 %540, label %544, label %541

541:                                              ; preds = %536
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %0) #10
  %542 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %326, align 8
  call void @_ZN5blink20GraphicsContextState23SetInterpolationQualityENS_20InterpolationQualityE(%"class.blink::GraphicsContextState"* %542, i32 2) #10
  br label %544

543:                                              ; preds = %524
  call void @_ZN5blink15GraphicsContext14DrawImageTiledEPNS_5ImageERKNS_9FloatRectES5_RKNS_9FloatSizeERKNS_10FloatPointES8_11SkBlendModeNS_27RespectImageOrientationEnumE(%"class.blink::GraphicsContext"* %0, %"class.blink::Image"* nonnull %89, %"class.blink::FloatRect"* dereferenceable(16) %338, %"class.blink::FloatRect"* dereferenceable(16) %341, %"class.blink::FloatSize"* nonnull dereferenceable(8) %19, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %20, %"class.blink::FloatSize"* nonnull dereferenceable(8) %21, i32 3, i32 1) #10
  br label %551

544:                                              ; preds = %541, %536
  call void @_ZN5blink15GraphicsContext14DrawImageTiledEPNS_5ImageERKNS_9FloatRectES5_RKNS_9FloatSizeERKNS_10FloatPointES8_11SkBlendModeNS_27RespectImageOrientationEnumE(%"class.blink::GraphicsContext"* %0, %"class.blink::Image"* nonnull %89, %"class.blink::FloatRect"* dereferenceable(16) %338, %"class.blink::FloatRect"* dereferenceable(16) %341, %"class.blink::FloatSize"* nonnull dereferenceable(8) %19, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %20, %"class.blink::FloatSize"* nonnull dereferenceable(8) %21, i32 3, i32 1) #10
  %545 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %326, align 8
  %546 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %545, i64 0, i32 4
  %547 = load i32, i32* %546, align 4
  %548 = icmp eq i32 %539, %547
  br i1 %548, label %551, label %549

549:                                              ; preds = %544
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %0) #10
  %550 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %326, align 8
  call void @_ZN5blink20GraphicsContextState23SetInterpolationQualityENS_20InterpolationQualityE(%"class.blink::GraphicsContextState"* %550, i32 %539) #10
  br label %551

551:                                              ; preds = %549, %544, %543
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350) #10
  br label %552

552:                                              ; preds = %551, %520, %502, %477, %435, %367
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %334) #10
  %553 = add nuw nsw i32 %368, 1
  %554 = icmp eq i32 %553, 9
  br i1 %554, label %360, label %367

555:                                              ; preds = %360, %365
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %259) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %219) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #10
  %556 = icmp eq i8* %202, null
  br i1 %556, label %561, label %557

557:                                              ; preds = %555
  %558 = load i8, i8* %202, align 1
  %559 = icmp eq i8 %558, 0
  br i1 %559, label %561, label %560

560:                                              ; preds = %557
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %202, i8* %203, i64 %204) #10
  br label %561

561:                                              ; preds = %555, %557, %560
  %562 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %89, i64 0, i32 1, i32 0
  %563 = getelementptr inbounds %"class.base::RefCountedThreadSafe.759", %"class.base::RefCountedThreadSafe.759"* %562, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %564 = atomicrmw sub i32* %563, i32 1 acq_rel
  %565 = icmp eq i32 %564, 1
  br i1 %565, label %566, label %573

566:                                              ; preds = %561
  %567 = getelementptr inbounds %"class.base::RefCountedThreadSafe.759", %"class.base::RefCountedThreadSafe.759"* %562, i64 -2
  %568 = bitcast %"class.base::RefCountedThreadSafe.759"* %567 to %"class.blink::Image"*
  %569 = bitcast %"class.base::RefCountedThreadSafe.759"* %567 to void (%"class.blink::Image"*)***
  %570 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %569, align 8
  %571 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %570, i64 1
  %572 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %571, align 8
  call void %572(%"class.blink::Image"* nonnull %568) #10
  br label %573

573:                                              ; preds = %47, %561, %566
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #10
  br label %574

574:                                              ; preds = %42, %36, %8, %573
  %575 = phi i1 [ true, %573 ], [ false, %8 ], [ true, %36 ], [ false, %42 ]
  ret i1 %575
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"*, %"class.blink::LayoutRectOutsets"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink13ComputedStyle12ImageOutsetsERKNS_14NinePieceImageE(%"class.blink::ComputedStyle"*, %"class.blink::NinePieceImage"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink18NinePieceImageGridC1ERKNS_14NinePieceImageENS_9FloatSizeERKS4_fNS_7IntRectERKNS_14IntRectOutsetsENS_16PhysicalBoxSidesE(%"class.blink::NinePieceImageGrid"*, %"class.blink::NinePieceImage"* dereferenceable(8), <2 x float>, %"class.blink::FloatSize"* dereferenceable(8), float, i64, i64, %"class.blink::IntRectOutsets"* dereferenceable(16), i32) unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle23GetInterpolationQualityEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare void @_ZNK5blink18NinePieceImageGrid20GetNinePieceDrawInfoENS_9NinePieceE(%"struct.blink::NinePieceImageGrid::NinePieceDrawInfo"* sret, %"class.blink::NinePieceImageGrid"*, i32) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext9DrawImageEPNS_5ImageENS1_17ImageDecodingModeERKNS_9FloatRectEPS5_b11SkBlendModeNS_27RespectImageOrientationEnumE(%"class.blink::GraphicsContext"*, %"class.blink::Image"*, i32, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"*, i1 zeroext, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext14DrawImageTiledEPNS_5ImageERKNS_9FloatRectES5_RKNS_9FloatSizeERKNS_10FloatPointES8_11SkBlendModeNS_27RespectImageOrientationEnumE(%"class.blink::GraphicsContext"*, %"class.blink::Image"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #3

declare void @_ZN5blink20GraphicsContextState23SetInterpolationQualityENS_20InterpolationQualityE(%"class.blink::GraphicsContextState"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 4
  %4 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %4, i64 0, i32 5
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %70, label %8

8:                                                ; preds = %1
  %9 = add i16 %6, -1
  store i16 %9, i16* %5, align 8
  %10 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, %12
  br i1 %16, label %17, label %65

17:                                               ; preds = %8
  %18 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %3, align 8
  %20 = tail call noalias i8* @malloc(i64 192) #10
  %21 = bitcast i8* %20 to %"class.blink::GraphicsContextState"*
  tail call void @_ZN5blink20GraphicsContextStateC1ERKS0_(%"class.blink::GraphicsContextState"* %21, %"class.blink::GraphicsContextState"* dereferenceable(192) %19) #10
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %2 to i8**
  store i8* %20, i8** %23, align 8
  %24 = load i32, i32* %14, align 4
  %25 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %37, label %28, !prof !3

28:                                               ; preds = %17
  %29 = ptrtoint i8* %20 to i64
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %32 = zext i32 %24 to i64
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 %32
  store %"class.blink::GraphicsContextState"* null, %"class.blink::GraphicsContextState"** %22, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %29, i64* %34, align 8
  %35 = load i32, i32* %14, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %14, align 4
  br label %38

37:                                               ; preds = %17
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"* %13, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #10
  br label %38

38:                                               ; preds = %28, %37
  %39 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %22, align 8
  store %"class.blink::GraphicsContextState"* null, %"class.blink::GraphicsContextState"** %22, align 8
  %40 = icmp eq %"class.blink::GraphicsContextState"* %39, null
  br i1 %40, label %59, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %39, i64 0, i32 2, i32 5, i32 0
  %43 = load %class.SkPathEffect*, %class.SkPathEffect** %42, align 8
  %44 = icmp eq %class.SkPathEffect* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkPathEffect* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.SkPathEffect* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #10
  br label %55

55:                                               ; preds = %49, %45, %41
  %56 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %39, i64 0, i32 1
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %56) #10
  %57 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %39, i64 0, i32 0
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %57) #10
  %58 = bitcast %"class.blink::GraphicsContextState"* %39 to i8*
  call void @free(i8* %58) #10
  br label %59

59:                                               ; preds = %38, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %60 = load i32, i32* %10, align 8
  %61 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %60) #10
  %62 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.blink::GraphicsContextState"** %3 to i64*
  store i64 %63, i64* %64, align 8
  br label %70

65:                                               ; preds = %8
  %66 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %3, align 8
  %67 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %12) #10
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %68, align 8
  store %"class.blink::GraphicsContextState"* %69, %"class.blink::GraphicsContextState"** %3, align 8
  tail call void @_ZN5blink20GraphicsContextState4CopyERKS0_(%"class.blink::GraphicsContextState"* %69, %"class.blink::GraphicsContextState"* dereferenceable(192) %66) #10
  br label %70

70:                                               ; preds = %1, %59, %65
  ret void
}

declare void @_ZN5blink20GraphicsContextState4CopyERKS0_(%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"* dereferenceable(192)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::GraphicsContextState"* null, %"class.blink::GraphicsContextState"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextStateC1ERKS0_(%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"* dereferenceable(192)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #2

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #2

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #2

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !6

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !8

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !9

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #11
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #11, !noalias !10
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !10
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #11
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN5blink27inspector_paint_image_event4DataEN8perfetto11TracedValueEPNS_4NodeERKNS_10StyleImageERKNS_9FloatRectESA_(%"class.perfetto::TracedValue"*, %"class.blink::Node"*, %"class.blink::StyleImage"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 4001, i32 4000000}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
