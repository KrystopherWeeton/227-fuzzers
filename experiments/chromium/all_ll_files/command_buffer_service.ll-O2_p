; ModuleID = '../../gpu/command_buffer/service/command_buffer_service.cc'
source_filename = "../../gpu/command_buffer/service/command_buffer_service.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.gpu::CommandBufferService" = type <{ %"class.gpu::CommandBufferServiceBase", %"class.gpu::CommandBufferServiceClient"*, %"class.std::__1::unique_ptr", %"struct.gpu::CommandBuffer::State", i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, %"class.std::__1::unique_ptr.5", %"class.gpu::SharedState"*, i8, i8, [6 x i8] }>
%"class.gpu::CommandBufferServiceBase" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gpu::TransferBufferManager"* }
%"class.gpu::TransferBufferManager" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::flat_map", i64, %"class.gpu::MemoryTracker"* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"struct.gpu::CommandBuffer::State" = type { i32, i32, i64, i32, i32, i32, i32 }
%class.scoped_refptr = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr.5", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"union.gpu::CommandBufferEntry" = type { %"struct.gpu::CommandHeader" }
%"struct.gpu::CommandHeader" = type { i32 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"class.gpu::SharedState" = type { [2 x [2 x %"struct.gpu::CommandBuffer::State"]], i32, i32, [2 x i32] }
%"class.gpu::CommandBufferServiceClient" = type { i32 (...)** }
%"class.gpu::MemoryTracker" = type opaque
%"class.gpu::AsyncAPIInterface" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.28", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.30", i64, i64 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.41" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i64 }
%"class.gpu::MemoryBufferBacking" = type <{ %"class.gpu::BufferBacking", %"class.std::__1::unique_ptr.19", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i8* }

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIPvRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_ = comdat any

@_ZTVN3gpu20CommandBufferServiceE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::CommandBufferService"*)* @_ZN3gpu20CommandBufferServiceD2Ev to i8*), i8* bitcast (void (%"class.gpu::CommandBufferService"*)* @_ZN3gpu20CommandBufferServiceD0Ev to i8*), i8* bitcast (void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBufferService"*)* @_ZN3gpu20CommandBufferService8GetStateEv to i8*), i8* bitcast (void (%"class.gpu::CommandBufferService"*, i64)* @_ZN3gpu20CommandBufferService15SetReleaseCountEm to i8*), i8* bitcast (%"class.gpu::Buffer"* (%"class.gpu::CommandBufferService"*, i32)* @_ZN3gpu20CommandBufferService17GetTransferBufferEi to i8*), i8* bitcast (void (%"class.gpu::CommandBufferService"*, i32)* @_ZN3gpu20CommandBufferService8SetTokenEi to i8*), i8* bitcast (void (%"class.gpu::CommandBufferService"*, i32)* @_ZN3gpu20CommandBufferService13SetParseErrorENS_5error5ErrorE to i8*), i8* bitcast (void (%"class.gpu::CommandBufferService"*, i32)* @_ZN3gpu20CommandBufferService20SetContextLostReasonENS_5error17ContextLostReasonE to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [32 x i8] c"CommandBufferService:PutChanged\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"handler\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"CommandBufferService::Paused\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"CommandBufferService:SetScheduled\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"scheduled\00", align 1

@_ZN3gpu20CommandBufferServiceC1EPNS_26CommandBufferServiceClientEPNS_13MemoryTrackerE = hidden unnamed_addr alias void (%"class.gpu::CommandBufferService"*, %"class.gpu::CommandBufferServiceClient"*, %"class.gpu::MemoryTracker"*), void (%"class.gpu::CommandBufferService"*, %"class.gpu::CommandBufferServiceClient"*, %"class.gpu::MemoryTracker"*)* @_ZN3gpu20CommandBufferServiceC2EPNS_26CommandBufferServiceClientEPNS_13MemoryTrackerE
@_ZN3gpu20CommandBufferServiceD1Ev = hidden unnamed_addr alias void (%"class.gpu::CommandBufferService"*), void (%"class.gpu::CommandBufferService"*)* @_ZN3gpu20CommandBufferServiceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferServiceC2EPNS_26CommandBufferServiceClientEPNS_13MemoryTrackerE(%"class.gpu::CommandBufferService"* nocapture, %"class.gpu::CommandBufferServiceClient"*, %"class.gpu::MemoryTracker"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu20CommandBufferServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 1
  store %"class.gpu::CommandBufferServiceClient"* %1, %"class.gpu::CommandBufferServiceClient"** %5, align 8
  %6 = tail call i8* @_Znwm(i64 48) #10
  %7 = bitcast i8* %6 to %"class.gpu::TransferBufferManager"*
  tail call void @_ZN3gpu21TransferBufferManagerC1EPNS_13MemoryTrackerE(%"class.gpu::TransferBufferManager"* nonnull %7, %"class.gpu::MemoryTracker"* %2) #11
  %8 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = bitcast %"class.gpu::TransferBufferManager"** %8 to i8**
  store i8* %6, i8** %9, align 8
  %10 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 1
  %12 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 4
  store i32 2, i32* %14, align 4
  %15 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 5
  %16 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 10
  %17 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 48, i1 false)
  store i8 1, i8* %16, align 8
  %18 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 11
  store i8 0, i8* %18, align 1
  store i32 0, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferServiceD2Ev(%"class.gpu::CommandBufferService"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu20CommandBufferServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::BufferBacking"*, %"class.gpu::BufferBacking"** %3, align 8
  store %"class.gpu::BufferBacking"* null, %"class.gpu::BufferBacking"** %3, align 8
  %5 = icmp eq %"class.gpu::BufferBacking"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gpu::BufferBacking"* %4 to void (%"class.gpu::BufferBacking"*)***
  %8 = load void (%"class.gpu::BufferBacking"*)**, void (%"class.gpu::BufferBacking"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gpu::BufferBacking"*)*, void (%"class.gpu::BufferBacking"*)** %8, i64 1
  %10 = load void (%"class.gpu::BufferBacking"*)*, void (%"class.gpu::BufferBacking"*)** %9, align 8
  tail call void %10(%"class.gpu::BufferBacking"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 6, i32 0
  %13 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %12, align 8
  %14 = icmp eq %"class.gpu::Buffer"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %13) #11
  %20 = bitcast %"class.gpu::Buffer"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %11, %15, %19
  %22 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %"class.gpu::TransferBufferManager"*, %"class.gpu::TransferBufferManager"** %22, align 8
  store %"class.gpu::TransferBufferManager"* null, %"class.gpu::TransferBufferManager"** %22, align 8
  %24 = icmp eq %"class.gpu::TransferBufferManager"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.gpu::TransferBufferManager"* %23 to void (%"class.gpu::TransferBufferManager"*)***
  %27 = load void (%"class.gpu::TransferBufferManager"*)**, void (%"class.gpu::TransferBufferManager"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.gpu::TransferBufferManager"*)*, void (%"class.gpu::TransferBufferManager"*)** %27, i64 1
  %29 = load void (%"class.gpu::TransferBufferManager"*)*, void (%"class.gpu::TransferBufferManager"*)** %28, align 8
  tail call void %29(%"class.gpu::TransferBufferManager"* nonnull %23) #11
  br label %30

30:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferServiceD0Ev(%"class.gpu::CommandBufferService"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu20CommandBufferServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::BufferBacking"*, %"class.gpu::BufferBacking"** %3, align 8
  store %"class.gpu::BufferBacking"* null, %"class.gpu::BufferBacking"** %3, align 8
  %5 = icmp eq %"class.gpu::BufferBacking"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gpu::BufferBacking"* %4 to void (%"class.gpu::BufferBacking"*)***
  %8 = load void (%"class.gpu::BufferBacking"*)**, void (%"class.gpu::BufferBacking"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gpu::BufferBacking"*)*, void (%"class.gpu::BufferBacking"*)** %8, i64 1
  %10 = load void (%"class.gpu::BufferBacking"*)*, void (%"class.gpu::BufferBacking"*)** %9, align 8
  tail call void %10(%"class.gpu::BufferBacking"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 6, i32 0
  %13 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %12, align 8
  %14 = icmp eq %"class.gpu::Buffer"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %13) #11
  %20 = bitcast %"class.gpu::Buffer"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %19, %15, %11
  %22 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %"class.gpu::TransferBufferManager"*, %"class.gpu::TransferBufferManager"** %22, align 8
  store %"class.gpu::TransferBufferManager"* null, %"class.gpu::TransferBufferManager"** %22, align 8
  %24 = icmp eq %"class.gpu::TransferBufferManager"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.gpu::TransferBufferManager"* %23 to void (%"class.gpu::TransferBufferManager"*)***
  %27 = load void (%"class.gpu::TransferBufferManager"*)**, void (%"class.gpu::TransferBufferManager"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.gpu::TransferBufferManager"*)*, void (%"class.gpu::TransferBufferManager"*)** %27, i64 1
  %29 = load void (%"class.gpu::TransferBufferManager"*)*, void (%"class.gpu::TransferBufferManager"*)** %28, align 8
  tail call void %29(%"class.gpu::TransferBufferManager"* nonnull %23) #11
  br label %30

30:                                               ; preds = %21, %25
  %31 = bitcast %"class.gpu::CommandBufferService"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService11UpdateStateEv(%"class.gpu::CommandBufferService"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 9
  %6 = load %"class.gpu::SharedState"*, %"class.gpu::SharedState"** %5, align 8
  %7 = icmp eq %"class.gpu::SharedState"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %6, i64 0, i32 1
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = icmp eq i32 %11, 0
  %13 = zext i1 %12 to i32
  %14 = zext i1 %12 to i64
  %15 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %6, i64 0, i32 3, i64 %14
  %16 = load atomic i32, i32* %15 acquire, align 4
  %17 = icmp eq i32 %16, 0
  %18 = zext i1 %17 to i32
  %19 = zext i1 %17 to i64
  %20 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %6, i64 0, i32 0, i64 %14, i64 %19
  %21 = bitcast %"struct.gpu::CommandBuffer::State"* %20 to i8*
  %22 = bitcast %"struct.gpu::CommandBuffer::State"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false) #11
  store atomic volatile i32 %18, i32* %15 release, align 4
  %23 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %6, i64 0, i32 2
  store atomic volatile i32 %13, i32* %23 release, align 4
  fence seq_cst
  br label %24

24:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService5FlushEiPNS_17AsyncAPIInterfaceE(%"class.gpu::CommandBufferService"*, i32, %"class.gpu::AsyncAPIInterface"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = icmp slt i32 %1, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, %1
  br i1 %12, label %18, label %13

13:                                               ; preds = %9, %3
  %14 = bitcast %"class.gpu::CommandBufferService"* %0 to void (%"class.gpu::CommandBufferService"*, i32)***
  %15 = load void (%"class.gpu::CommandBufferService"*, i32)**, void (%"class.gpu::CommandBufferService"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gpu::CommandBufferService"*, i32)*, void (%"class.gpu::CommandBufferService"*, i32)** %15, i64 6
  %17 = load void (%"class.gpu::CommandBufferService"*, i32)*, void (%"class.gpu::CommandBufferService"*, i32)** %16, align 8
  tail call void %17(%"class.gpu::CommandBufferService"* %0, i32 2) #11
  br label %164

18:                                               ; preds = %9
  %19 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %20 = and i8 %19, 25
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %65, label %22, !prof !2

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = bitcast %"class.gpu::AsyncAPIInterface"* %2 to { i8*, i64 } (%"class.gpu::AsyncAPIInterface"*)***
  %25 = load { i8*, i64 } (%"class.gpu::AsyncAPIInterface"*)**, { i8*, i64 } (%"class.gpu::AsyncAPIInterface"*)*** %24, align 8
  %26 = getelementptr inbounds { i8*, i64 } (%"class.gpu::AsyncAPIInterface"*)*, { i8*, i64 } (%"class.gpu::AsyncAPIInterface"*)** %25, i64 5
  %27 = load { i8*, i64 } (%"class.gpu::AsyncAPIInterface"*)*, { i8*, i64 } (%"class.gpu::AsyncAPIInterface"*)** %26, align 8
  %28 = tail call { i8*, i64 } %27(%"class.gpu::AsyncAPIInterface"* %2) #11
  %29 = extractvalue { i8*, i64 } %28, 0
  %30 = extractvalue { i8*, i64 } %28, 1
  %31 = icmp ugt i64 %30, -17
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %33) #12
  unreachable

34:                                               ; preds = %22
  %35 = icmp ult i64 %30, 23
  br i1 %35, label %45, label %36

36:                                               ; preds = %34
  %37 = add nuw i64 %30, 16
  %38 = and i64 %37, -16
  %39 = tail call i8* @_Znwm(i64 %38) #10
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8, !alias.scope !3
  %41 = or i64 %38, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8, !alias.scope !3
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %30, i64* %43, align 8, !alias.scope !3
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %50

45:                                               ; preds = %34
  %46 = trunc i64 %30 to i8
  %47 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 %46, i8* %48, align 1, !alias.scope !3
  %49 = icmp eq i64 %30, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %36
  %51 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %47, %45 ], [ %44, %36 ]
  %52 = phi i8* [ %23, %45 ], [ %39, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 1 %29, i64 %30, i1 false) #11
  br label %53

53:                                               ; preds = %45, %50
  %54 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %47, %45 ], [ %51, %50 ]
  %55 = phi i8* [ %23, %45 ], [ %52, %50 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 %30
  store i8 0, i8* %56, align 1
  %57 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %53, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  br label %65

65:                                               ; preds = %18, %64
  %66 = phi i8* [ null, %18 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %64 ]
  %67 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %18 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), %64 ]
  %68 = phi i64 [ -6148914691236517206, %18 ], [ %57, %64 ]
  %69 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 4
  store i32 %1, i32* %69, align 8
  %70 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %158

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 11
  %75 = load i8, i8* %74, align 1, !range !6
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %73
  store i8 0, i8* %74, align 1
  %78 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %79 = and i8 %78, 25
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %85, label %81, !prof !2

81:                                               ; preds = %77
  %82 = ptrtoint %"class.gpu::CommandBufferService"* %0 to i64
  %83 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #11
  store i32 0, i32* %5, align 4
  %84 = call i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 67, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 %82, i32 2048, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32* nonnull dereferenceable(4) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #11
  br label %85

85:                                               ; preds = %81, %77, %73
  %86 = bitcast %"class.gpu::AsyncAPIInterface"* %2 to void (%"class.gpu::AsyncAPIInterface"*)***
  %87 = load void (%"class.gpu::AsyncAPIInterface"*)**, void (%"class.gpu::AsyncAPIInterface"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.gpu::AsyncAPIInterface"*)*, void (%"class.gpu::AsyncAPIInterface"*)** %87, i64 2
  %89 = load void (%"class.gpu::AsyncAPIInterface"*)*, void (%"class.gpu::AsyncAPIInterface"*)** %88, align 8
  call void %89(%"class.gpu::AsyncAPIInterface"* %2) #11
  %90 = load i32, i32* %69, align 8
  %91 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp slt i32 %90, %92
  br i1 %93, label %94, label %96

94:                                               ; preds = %85
  %95 = load i32, i32* %10, align 4
  br label %96

96:                                               ; preds = %85, %94
  %97 = phi i32 [ %95, %94 ], [ %90, %85 ]
  %98 = bitcast i32* %6 to i8*
  %99 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 7
  %100 = bitcast %"class.gpu::AsyncAPIInterface"* %2 to i32 (%"class.gpu::AsyncAPIInterface"*, i32, i8*, i32, i32*)***
  %101 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 1
  %102 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 10
  %103 = icmp eq i32 %90, %92
  br i1 %103, label %154, label %104

104:                                              ; preds = %96, %149
  %105 = phi i32 [ %124, %149 ], [ %97, %96 ]
  %106 = phi i32 [ %151, %149 ], [ %92, %96 ]
  %107 = sub nsw i32 %105, %106
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #11
  store i32 0, i32* %6, align 4
  %108 = load %"union.gpu::CommandBufferEntry"*, %"union.gpu::CommandBufferEntry"** %99, align 8
  %109 = sext i32 %106 to i64
  %110 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %108, i64 %109
  %111 = bitcast %"union.gpu::CommandBufferEntry"* %110 to i8*
  %112 = load i32 (%"class.gpu::AsyncAPIInterface"*, i32, i8*, i32, i32*)**, i32 (%"class.gpu::AsyncAPIInterface"*, i32, i8*, i32, i32*)*** %100, align 8
  %113 = getelementptr inbounds i32 (%"class.gpu::AsyncAPIInterface"*, i32, i8*, i32, i32*)*, i32 (%"class.gpu::AsyncAPIInterface"*, i32, i8*, i32, i32*)** %112, i64 4
  %114 = load i32 (%"class.gpu::AsyncAPIInterface"*, i32, i8*, i32, i32*)*, i32 (%"class.gpu::AsyncAPIInterface"*, i32, i8*, i32, i32*)** %113, align 8
  %115 = call i32 %114(%"class.gpu::AsyncAPIInterface"* %2, i32 20, i8* %111, i32 %107, i32* nonnull %6) #11
  %116 = load i32, i32* %6, align 4
  %117 = load i32, i32* %91, align 8
  %118 = add nsw i32 %117, %116
  store i32 %118, i32* %91, align 8
  %119 = load i32, i32* %10, align 4
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %121, label %123

121:                                              ; preds = %104
  %122 = load i32, i32* %69, align 8
  store i32 0, i32* %91, align 8
  br label %123

123:                                              ; preds = %121, %104
  %124 = phi i32 [ %122, %121 ], [ %105, %104 ]
  switch i32 %115, label %125 [
    i32 7, label %130
    i32 0, label %130
    i32 8, label %130
  ]

125:                                              ; preds = %123
  %126 = bitcast %"class.gpu::CommandBufferService"* %0 to void (%"class.gpu::CommandBufferService"*, i32)***
  %127 = load void (%"class.gpu::CommandBufferService"*, i32)**, void (%"class.gpu::CommandBufferService"*, i32)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.gpu::CommandBufferService"*, i32)*, void (%"class.gpu::CommandBufferService"*, i32)** %127, i64 6
  %129 = load void (%"class.gpu::CommandBufferService"*, i32)*, void (%"class.gpu::CommandBufferService"*, i32)** %128, align 8
  call void %129(%"class.gpu::CommandBufferService"* %0, i32 %115) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #11
  br label %154

130:                                              ; preds = %123, %123, %123
  %131 = load %"class.gpu::CommandBufferServiceClient"*, %"class.gpu::CommandBufferServiceClient"** %101, align 8
  %132 = bitcast %"class.gpu::CommandBufferServiceClient"* %131 to i32 (%"class.gpu::CommandBufferServiceClient"*)***
  %133 = load i32 (%"class.gpu::CommandBufferServiceClient"*)**, i32 (%"class.gpu::CommandBufferServiceClient"*)*** %132, align 8
  %134 = getelementptr inbounds i32 (%"class.gpu::CommandBufferServiceClient"*)*, i32 (%"class.gpu::CommandBufferServiceClient"*)** %133, i64 2
  %135 = load i32 (%"class.gpu::CommandBufferServiceClient"*)*, i32 (%"class.gpu::CommandBufferServiceClient"*)** %134, align 8
  %136 = call i32 %135(%"class.gpu::CommandBufferServiceClient"* %131) #11
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %146

138:                                              ; preds = %130
  store i8 1, i8* %74, align 1
  %139 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %140 = and i8 %139, 25
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %153, label %142, !prof !2

142:                                              ; preds = %138
  %143 = ptrtoint %"class.gpu::CommandBufferService"* %0 to i64
  %144 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #11
  store i32 1, i32* %7, align 4
  %145 = call i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 67, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 %143, i32 2048, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #11
  br label %154

146:                                              ; preds = %130
  %147 = load i8, i8* %102, align 8, !range !6
  %148 = icmp eq i8 %147, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #11
  br i1 %148, label %154, label %149

149:                                              ; preds = %146
  %150 = load i32, i32* %69, align 8
  %151 = load i32, i32* %91, align 8
  %152 = icmp eq i32 %150, %151
  br i1 %152, label %154, label %104

153:                                              ; preds = %138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #11
  br label %154

154:                                              ; preds = %149, %146, %96, %142, %153, %125
  %155 = load void (%"class.gpu::AsyncAPIInterface"*)**, void (%"class.gpu::AsyncAPIInterface"*)*** %86, align 8
  %156 = getelementptr inbounds void (%"class.gpu::AsyncAPIInterface"*)*, void (%"class.gpu::AsyncAPIInterface"*)** %155, i64 3
  %157 = load void (%"class.gpu::AsyncAPIInterface"*)*, void (%"class.gpu::AsyncAPIInterface"*)** %156, align 8
  call void %157(%"class.gpu::AsyncAPIInterface"* %2) #11
  br label %158

158:                                              ; preds = %65, %154
  %159 = icmp eq i8* %66, null
  br i1 %159, label %164, label %160

160:                                              ; preds = %158
  %161 = load i8, i8* %66, align 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %66, i8* %67, i64 %68) #11
  br label %164

164:                                              ; preds = %163, %160, %158, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #11
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #11
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #11
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #11
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #11
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #11
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #11
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService12SetGetBufferEi(%"class.gpu::CommandBufferService"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 4
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %5, align 4
  %8 = bitcast %"class.gpu::CommandBufferService"* %0 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferService"*, i32)***
  %9 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferService"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferService"*, i32)*** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferService"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferService"*, i32)** %9, i64 4
  %11 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferService"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferService"*, i32)** %10, align 8
  %12 = tail call %"class.gpu::Buffer"* %11(%"class.gpu::CommandBufferService"* %0, i32 %1) #11
  %13 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 6
  %14 = ptrtoint %"class.gpu::Buffer"* %12 to i64
  %15 = bitcast %class.scoped_refptr* %13 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 0, i32 0
  %17 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.gpu::Buffer"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %17) #11
  %24 = bitcast %"class.gpu::Buffer"* %17 to i8*
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %23, %19
  %26 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %16, align 8
  br label %27

27:                                               ; preds = %25, %2
  %28 = phi %"class.gpu::Buffer"* [ %26, %25 ], [ %12, %2 ]
  %29 = icmp eq %"class.gpu::Buffer"* %28, null
  br i1 %29, label %39, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %28, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %28, i64 0, i32 3
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = lshr i32 %32, 2
  %37 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 7
  %38 = bitcast %"union.gpu::CommandBufferEntry"** %37 to i64*
  store i64 %35, i64* %38, align 8
  br label %41

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 7
  store %"union.gpu::CommandBufferEntry"* null, %"union.gpu::CommandBufferEntry"** %40, align 8
  br label %41

41:                                               ; preds = %39, %30
  %42 = phi i32 [ 0, %39 ], [ %36, %30 ]
  %43 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 5
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 5
  %45 = load i32, i32* %44, align 8
  %46 = add i32 %45, 1
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 9
  %48 = load %"class.gpu::SharedState"*, %"class.gpu::SharedState"** %47, align 8
  %49 = icmp eq %"class.gpu::SharedState"* %48, null
  br i1 %49, label %66, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3
  %52 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %48, i64 0, i32 1
  %53 = load atomic i32, i32* %52 acquire, align 4
  %54 = icmp eq i32 %53, 0
  %55 = zext i1 %54 to i32
  %56 = zext i1 %54 to i64
  %57 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %48, i64 0, i32 3, i64 %56
  %58 = load atomic i32, i32* %57 acquire, align 4
  %59 = icmp eq i32 %58, 0
  %60 = zext i1 %59 to i32
  %61 = zext i1 %59 to i64
  %62 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %48, i64 0, i32 0, i64 %56, i64 %61
  %63 = bitcast %"struct.gpu::CommandBuffer::State"* %62 to i8*
  %64 = bitcast %"struct.gpu::CommandBuffer::State"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 32, i1 false) #11
  store atomic volatile i32 %60, i32* %57 release, align 4
  %65 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %48, i64 0, i32 2
  store atomic volatile i32 %55, i32* %65 release, align 4
  fence seq_cst
  br label %66

66:                                               ; preds = %41, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService20SetSharedStateBufferENSt3__110unique_ptrINS_13BufferBackingENS1_14default_deleteIS3_EEEE(%"class.gpu::CommandBufferService"* nocapture, %"class.gpu::BufferBacking"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.gpu::BufferBacking"* %1 to i64
  %4 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.gpu::BufferBacking"*, %"class.gpu::BufferBacking"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.5"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.gpu::BufferBacking"* %6, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.gpu::BufferBacking"* %6 to void (%"class.gpu::BufferBacking"*)***
  %11 = load void (%"class.gpu::BufferBacking"*)**, void (%"class.gpu::BufferBacking"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gpu::BufferBacking"*)*, void (%"class.gpu::BufferBacking"*)** %11, i64 1
  %13 = load void (%"class.gpu::BufferBacking"*)*, void (%"class.gpu::BufferBacking"*)** %12, align 8
  tail call void %13(%"class.gpu::BufferBacking"* nonnull %6) #11
  %14 = load %"class.gpu::BufferBacking"*, %"class.gpu::BufferBacking"** %5, align 8
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.gpu::BufferBacking"* [ %1, %2 ], [ %14, %9 ]
  %17 = bitcast %"class.gpu::BufferBacking"* %16 to i8* (%"class.gpu::BufferBacking"*)***
  %18 = load i8* (%"class.gpu::BufferBacking"*)**, i8* (%"class.gpu::BufferBacking"*)*** %17, align 8
  %19 = getelementptr inbounds i8* (%"class.gpu::BufferBacking"*)*, i8* (%"class.gpu::BufferBacking"*)** %18, i64 4
  %20 = load i8* (%"class.gpu::BufferBacking"*)*, i8* (%"class.gpu::BufferBacking"*)** %19, align 8
  %21 = tail call i8* %20(%"class.gpu::BufferBacking"* %16) #11
  %22 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 9
  %23 = bitcast %"class.gpu::SharedState"** %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = bitcast i8* %21 to %"class.gpu::SharedState"*
  %28 = icmp eq i8* %21, null
  br i1 %28, label %47, label %29

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3
  %31 = getelementptr inbounds i8, i8* %21, i64 128
  %32 = bitcast i8* %31 to i32*
  %33 = load atomic i32, i32* %32 acquire, align 4
  %34 = icmp eq i32 %33, 0
  %35 = zext i1 %34 to i32
  %36 = zext i1 %34 to i64
  %37 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %27, i64 0, i32 3, i64 %36
  %38 = load atomic i32, i32* %37 acquire, align 4
  %39 = icmp eq i32 %38, 0
  %40 = zext i1 %39 to i32
  %41 = zext i1 %39 to i64
  %42 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %27, i64 0, i32 0, i64 %36, i64 %41
  %43 = bitcast %"struct.gpu::CommandBuffer::State"* %42 to i8*
  %44 = bitcast %"struct.gpu::CommandBuffer::State"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 32, i1 false) #11
  store atomic volatile i32 %40, i32* %37 release, align 4
  %45 = getelementptr inbounds i8, i8* %21, i64 132
  %46 = bitcast i8* %45 to i32*
  store atomic volatile i32 %35, i32* %46 release, align 4
  fence seq_cst
  br label %47

47:                                               ; preds = %29, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService8GetStateEv(%"struct.gpu::CommandBuffer::State"* noalias nocapture sret, %"class.gpu::CommandBufferService"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %1, i64 0, i32 3
  %4 = bitcast %"struct.gpu::CommandBuffer::State"* %0 to i8*
  %5 = bitcast %"struct.gpu::CommandBuffer::State"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService15SetReleaseCountEm(%"class.gpu::CommandBufferService"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 2
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 9
  %8 = load %"class.gpu::SharedState"*, %"class.gpu::SharedState"** %7, align 8
  %9 = icmp eq %"class.gpu::SharedState"* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %8, i64 0, i32 1
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = icmp eq i32 %13, 0
  %15 = zext i1 %14 to i32
  %16 = zext i1 %14 to i64
  %17 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %8, i64 0, i32 3, i64 %16
  %18 = load atomic i32, i32* %17 acquire, align 4
  %19 = icmp eq i32 %18, 0
  %20 = zext i1 %19 to i32
  %21 = zext i1 %19 to i64
  %22 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %8, i64 0, i32 0, i64 %16, i64 %21
  %23 = bitcast %"struct.gpu::CommandBuffer::State"* %22 to i8*
  %24 = bitcast %"struct.gpu::CommandBuffer::State"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 32, i1 false) #11
  store atomic volatile i32 %20, i32* %17 release, align 4
  %25 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %8, i64 0, i32 2
  store atomic volatile i32 %15, i32* %25 release, align 4
  fence seq_cst
  br label %26

26:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::Buffer"* @_ZN3gpu20CommandBufferService20CreateTransferBufferEjPi(%"class.gpu::CommandBufferService"*, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN3gpu15GetNextBufferIdEv() #11
  store i32 %4, i32* %2, align 4
  %5 = tail call %"class.gpu::Buffer"* @_ZN3gpu20CommandBufferService26CreateTransferBufferWithIdEji(%"class.gpu::CommandBufferService"* %0, i32 %1, i32 %4)
  %6 = icmp eq %"class.gpu::Buffer"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  store i32 -1, i32* %2, align 4
  br label %8

8:                                                ; preds = %3, %7
  ret %"class.gpu::Buffer"* %5
}

declare i32 @_ZN3gpu15GetNextBufferIdEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::Buffer"* @_ZN3gpu20CommandBufferService26CreateTransferBufferWithIdEji(%"class.gpu::CommandBufferService"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 24) #10
  %5 = bitcast i8* %4 to %"class.gpu::MemoryBufferBacking"*
  tail call void @_ZN3gpu19MemoryBufferBackingC1Ej(%"class.gpu::MemoryBufferBacking"* nonnull %5, i32 %1) #11
  %6 = tail call i8* @_Znwm(i64 32) #10
  %7 = bitcast i8* %6 to %"class.gpu::Buffer"*
  %8 = bitcast i8* %4 to %"class.gpu::BufferBacking"*
  tail call void @_ZN3gpu6BufferC1ENSt3__110unique_ptrINS_13BufferBackingENS1_14default_deleteIS3_EEEE(%"class.gpu::Buffer"* nonnull %7, %"class.gpu::BufferBacking"* nonnull %8) #11
  %9 = bitcast i8* %6 to i32*
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = ptrtoint i8* %6 to i64
  %12 = atomicrmw add i32* %9, i32 1 monotonic
  %13 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.gpu::TransferBufferManager"*, %"class.gpu::TransferBufferManager"** %13, align 8
  %15 = tail call zeroext i1 @_ZN3gpu21TransferBufferManager22RegisterTransferBufferEi13scoped_refptrINS_6BufferEE(%"class.gpu::TransferBufferManager"* %14, i32 %2, %"class.gpu::Buffer"* nonnull %7) #11
  br i1 %15, label %24, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.gpu::CommandBufferService"* %0 to void (%"class.gpu::CommandBufferService"*, i32)***
  %18 = load void (%"class.gpu::CommandBufferService"*, i32)**, void (%"class.gpu::CommandBufferService"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gpu::CommandBufferService"*, i32)*, void (%"class.gpu::CommandBufferService"*, i32)** %18, i64 6
  %20 = load void (%"class.gpu::CommandBufferService"*, i32)*, void (%"class.gpu::CommandBufferService"*, i32)** %19, align 8
  tail call void %20(%"class.gpu::CommandBufferService"* %0, i32 2) #11
  %21 = atomicrmw sub i32* %9, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %24

23:                                               ; preds = %16
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %7) #11
  tail call void @_ZdlPv(i8* nonnull %6) #10
  br label %24

24:                                               ; preds = %3, %16, %23
  %25 = phi i64 [ 0, %16 ], [ 0, %23 ], [ %11, %3 ]
  %26 = inttoptr i64 %25 to %"class.gpu::Buffer"*
  ret %"class.gpu::Buffer"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService21DestroyTransferBufferEi(%"class.gpu::CommandBufferService"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::TransferBufferManager"*, %"class.gpu::TransferBufferManager"** %3, align 8
  tail call void @_ZN3gpu21TransferBufferManager21DestroyTransferBufferEi(%"class.gpu::TransferBufferManager"* %4, i32 %1) #11
  ret void
}

declare void @_ZN3gpu21TransferBufferManager21DestroyTransferBufferEi(%"class.gpu::TransferBufferManager"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::Buffer"* @_ZN3gpu20CommandBufferService17GetTransferBufferEi(%"class.gpu::CommandBufferService"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::TransferBufferManager"*, %"class.gpu::TransferBufferManager"** %3, align 8
  %5 = tail call %"class.gpu::Buffer"* @_ZN3gpu21TransferBufferManager17GetTransferBufferEi(%"class.gpu::TransferBufferManager"* %4, i32 %1) #11
  ret %"class.gpu::Buffer"* %5
}

declare %"class.gpu::Buffer"* @_ZN3gpu21TransferBufferManager17GetTransferBufferEi(%"class.gpu::TransferBufferManager"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu20CommandBufferService22RegisterTransferBufferEi13scoped_refptrINS_6BufferEE(%"class.gpu::CommandBufferService"* nocapture readonly, i32, %"class.gpu::Buffer"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.gpu::TransferBufferManager"*, %"class.gpu::TransferBufferManager"** %4, align 8
  %6 = tail call zeroext i1 @_ZN3gpu21TransferBufferManager22RegisterTransferBufferEi13scoped_refptrINS_6BufferEE(%"class.gpu::TransferBufferManager"* %5, i32 %1, %"class.gpu::Buffer"* %2) #11
  ret i1 %6
}

declare zeroext i1 @_ZN3gpu21TransferBufferManager22RegisterTransferBufferEi13scoped_refptrINS_6BufferEE(%"class.gpu::TransferBufferManager"*, i32, %"class.gpu::Buffer"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService8SetTokenEi(%"class.gpu::CommandBufferService"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 1
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 9
  %8 = load %"class.gpu::SharedState"*, %"class.gpu::SharedState"** %7, align 8
  %9 = icmp eq %"class.gpu::SharedState"* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %8, i64 0, i32 1
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = icmp eq i32 %13, 0
  %15 = zext i1 %14 to i32
  %16 = zext i1 %14 to i64
  %17 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %8, i64 0, i32 3, i64 %16
  %18 = load atomic i32, i32* %17 acquire, align 4
  %19 = icmp eq i32 %18, 0
  %20 = zext i1 %19 to i32
  %21 = zext i1 %19 to i64
  %22 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %8, i64 0, i32 0, i64 %16, i64 %21
  %23 = bitcast %"struct.gpu::CommandBuffer::State"* %22 to i8*
  %24 = bitcast %"struct.gpu::CommandBuffer::State"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 32, i1 false) #11
  store atomic volatile i32 %20, i32* %17 release, align 4
  %25 = getelementptr inbounds %"class.gpu::SharedState", %"class.gpu::SharedState"* %8, i64 0, i32 2
  store atomic volatile i32 %15, i32* %25 release, align 4
  fence seq_cst
  br label %26

26:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService13SetParseErrorENS_5error5ErrorE(%"class.gpu::CommandBufferService"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 1
  %8 = load %"class.gpu::CommandBufferServiceClient"*, %"class.gpu::CommandBufferServiceClient"** %7, align 8
  %9 = bitcast %"class.gpu::CommandBufferServiceClient"* %8 to void (%"class.gpu::CommandBufferServiceClient"*)***
  %10 = load void (%"class.gpu::CommandBufferServiceClient"*)**, void (%"class.gpu::CommandBufferServiceClient"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gpu::CommandBufferServiceClient"*)*, void (%"class.gpu::CommandBufferServiceClient"*)** %10, i64 3
  %12 = load void (%"class.gpu::CommandBufferServiceClient"*)*, void (%"class.gpu::CommandBufferServiceClient"*)** %11, align 8
  tail call void %12(%"class.gpu::CommandBufferServiceClient"* %8) #11
  br label %13

13:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu20CommandBufferService20SetContextLostReasonENS_5error17ContextLostReasonE(%"class.gpu::CommandBufferService"* nocapture, i32) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 3, i32 4
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu20CommandBufferService12SetScheduledEb(%"class.gpu::CommandBufferService"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8*, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %3, align 1
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 10
  store i8 %5, i8* %10, align 8
  br label %20

11:                                               ; preds = %2
  %12 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = bitcast i8** %4 to %"class.gpu::CommandBufferService"**
  store %"class.gpu::CommandBufferService"* %0, %"class.gpu::CommandBufferService"** %13, align 8
  %14 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8** nonnull dereferenceable(8) %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i8* nonnull dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  %15 = load i8, i8* %3, align 1, !range !6
  %16 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 10
  store i8 %15, i8* %16, align 8
  %17 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %11
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i64 %14) #11
  br label %20

20:                                               ; preds = %9, %11, %19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIPvRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8** dereferenceable(8), i8*, i8* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false) #11
  store i8 2, i8* %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 0
  store i8 5, i8* %19, align 1
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 1
  store i8 1, i8* %20, align 1
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %22, align 8
  %23 = bitcast i8** %8 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %27 = load i8, i8* %10, align 1, !range !6
  %28 = bitcast %"union.base::trace_event::TraceValue"* %26 to i8*
  store i8 %27, i8* %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #11
  %30 = load i8, i8* %18, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %11, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %11 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #11
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #11
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #11
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %18, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i64 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gpu20CommandBufferService29GetSharedMemoryBytesAllocatedEv(%"class.gpu::CommandBufferService"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferService", %"class.gpu::CommandBufferService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.gpu::TransferBufferManager"*, %"class.gpu::TransferBufferManager"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::TransferBufferManager", %"class.gpu::TransferBufferManager"* %3, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN3gpu6BufferC1ENSt3__110unique_ptrINS_13BufferBackingENS1_14default_deleteIS3_EEEE(%"class.gpu::Buffer"*, %"class.gpu::BufferBacking"*) unnamed_addr #4

declare void @_ZN3gpu19MemoryBufferBackingC1Ej(%"class.gpu::MemoryBufferBacking"*, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"*) unnamed_addr #8

declare void @_ZN3gpu21TransferBufferManagerC1EPNS_13MemoryTrackerE(%"class.gpu::TransferBufferManager"*, %"class.gpu::MemoryTracker"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!6 = !{i8 0, i8 2}
