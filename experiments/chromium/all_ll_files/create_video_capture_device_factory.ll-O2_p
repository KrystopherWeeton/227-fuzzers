; ModuleID = '../../media/capture/video/create_video_capture_device_factory.cc'
source_filename = "../../media/capture/video/create_video_capture_device_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.media::VideoCaptureDeviceFactory" = type <{ i32 (...)**, %"class.base::ThreadChecker", [7 x i8] }>
%"class.base::ThreadChecker" = type { i8 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.media::FakeVideoCaptureDeviceSettings"*, %"struct.media::FakeVideoCaptureDeviceSettings"*, %"class.std::__1::__compressed_pair.33" }
%"struct.media::FakeVideoCaptureDeviceSettings" = type <{ %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::vector.26", %"struct.media::FakePhotoDeviceConfig", [2 x i8], i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.media::VideoCaptureFormat"*, %"struct.media::VideoCaptureFormat"*, %"class.std::__1::__compressed_pair.28" }
%"struct.media::VideoCaptureFormat" = type { %"class.gfx::Size", float, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.media::VideoCaptureFormat"* }
%"struct.media::FakePhotoDeviceConfig" = type { %"struct.media::VideoCaptureControlSupport", i8, i8, i8 }
%"struct.media::VideoCaptureControlSupport" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.media::FakeVideoCaptureDeviceSettings"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.media::FakeVideoCaptureDeviceFactory" = type { %"class.media::VideoCaptureDeviceFactory.base", %"class.std::__1::vector.24" }
%"class.media::VideoCaptureDeviceFactory.base" = type <{ i32 (...)**, %"class.base::ThreadChecker" }>
%"class.media::VideoCaptureDeviceFactoryLinux" = type { %"class.media::VideoCaptureDeviceFactory.base", %class.scoped_refptr.47, %"class.std::__1::unique_ptr.49", %class.scoped_refptr }
%class.scoped_refptr.47 = type { %"class.media::V4L2CaptureDevice"* }
%"class.media::V4L2CaptureDevice" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.48", [4 x i8] }>
%"class.base::RefCountedThreadSafe.48" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.media::VideoCaptureDeviceFactoryLinux::DeviceProvider"* }
%"class.media::VideoCaptureDeviceFactoryLinux::DeviceProvider" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>

@_ZN8switches28kUseFakeDeviceForMediaStreamE = external constant [0 x i8], align 1
@_ZN8switches27kUseFileForFakeVideoCaptureE = external constant [0 x i8], align 1
@_ZTVN5media29FileVideoCaptureDeviceFactoryE = external unnamed_addr constant { [6 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoCaptureDeviceFactory"* @_ZN5media31CreateVideoCaptureDeviceFactoryE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::vector.24", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  %5 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #7
  %6 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches28kUseFakeDeviceForMediaStreamE, i64 0, i64 0)) #7
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %0, null
  br i1 %8, label %46, label %50

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches27kUseFileForFakeVideoCaptureE, i64 0, i64 0)) #7
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = tail call i8* @_Znwm(i64 16) #8
  %13 = bitcast i8* %12 to %"class.media::VideoCaptureDeviceFactory"*
  tail call void @_ZN5media25VideoCaptureDeviceFactoryC2Ev(%"class.media::VideoCaptureDeviceFactory"* nonnull %13) #7
  %14 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media29FileVideoCaptureDeviceFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  br label %64

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::vector.24"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %2, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #7
  %19 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches28kUseFakeDeviceForMediaStreamE, i64 0, i64 0)) #7
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches28kUseFakeDeviceForMediaStreamE, i64 0, i64 0), i64 %19) #7
  call void @_ZN5media29FakeVideoCaptureDeviceFactory39ParseFakeDevicesConfigFromOptionsStringENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS_30FakeVideoCaptureDeviceSettingsENS5_IS9_EEEE(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::vector.24"* nonnull %2) #7
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #8
  br label %27

27:                                               ; preds = %24, %15
  %28 = call i8* @_Znwm(i64 40) #8
  %29 = bitcast i8* %28 to %"class.media::FakeVideoCaptureDeviceFactory"*
  call void @_ZN5media29FakeVideoCaptureDeviceFactoryC1Ev(%"class.media::FakeVideoCaptureDeviceFactory"* nonnull %29) #7
  call void @_ZN5media29FakeVideoCaptureDeviceFactory24SetToCustomDevicesConfigERKNSt3__16vectorINS_30FakeVideoCaptureDeviceSettingsENS1_9allocatorIS3_EEEE(%"class.media::FakeVideoCaptureDeviceFactory"* nonnull %29, %"class.std::__1::vector.24"* nonnull dereferenceable(24) %2) #7
  %30 = load %"struct.media::FakeVideoCaptureDeviceSettings"*, %"struct.media::FakeVideoCaptureDeviceSettings"** %17, align 8
  %31 = icmp eq %"struct.media::FakeVideoCaptureDeviceSettings"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.media::FakeVideoCaptureDeviceSettings"* %30 to i8*
  %34 = load %"struct.media::FakeVideoCaptureDeviceSettings"*, %"struct.media::FakeVideoCaptureDeviceSettings"** %18, align 8
  %35 = icmp eq %"struct.media::FakeVideoCaptureDeviceSettings"* %34, %30
  br i1 %35, label %43, label %36

36:                                               ; preds = %32, %36
  %37 = phi %"struct.media::FakeVideoCaptureDeviceSettings"* [ %38, %36 ], [ %34, %32 ]
  %38 = getelementptr inbounds %"struct.media::FakeVideoCaptureDeviceSettings", %"struct.media::FakeVideoCaptureDeviceSettings"* %37, i64 -1
  call void @_ZN5media30FakeVideoCaptureDeviceSettingsD1Ev(%"struct.media::FakeVideoCaptureDeviceSettings"* %38) #7
  %39 = icmp eq %"struct.media::FakeVideoCaptureDeviceSettings"* %38, %30
  br i1 %39, label %40, label %36

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::vector.24"* %2 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %32
  %44 = phi i8* [ %42, %40 ], [ %33, %32 ]
  store %"struct.media::FakeVideoCaptureDeviceSettings"* %30, %"struct.media::FakeVideoCaptureDeviceSettings"** %18, align 8
  call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %43, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #7
  br label %64

46:                                               ; preds = %7
  %47 = tail call i8* @_Znwm(i64 40) #8
  %48 = bitcast i8* %47 to %"class.media::VideoCaptureDeviceFactoryLinux"*
  tail call void @_ZN5media30VideoCaptureDeviceFactoryLinuxC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.media::VideoCaptureDeviceFactoryLinux"* nonnull %48, %"class.base::SingleThreadTaskRunner"* null) #7
  %49 = ptrtoint i8* %47 to i64
  br label %77

50:                                               ; preds = %7
  %51 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic
  %53 = tail call i8* @_Znwm(i64 40) #8
  %54 = bitcast i8* %53 to %"class.media::VideoCaptureDeviceFactoryLinux"*
  %55 = atomicrmw add i32* %51, i32 1 monotonic
  tail call void @_ZN5media30VideoCaptureDeviceFactoryLinuxC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.media::VideoCaptureDeviceFactoryLinux"* nonnull %54, %"class.base::SingleThreadTaskRunner"* nonnull %0) #7
  %56 = ptrtoint i8* %53 to i64
  %57 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe"* %62 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %63) #7
  br label %68

64:                                               ; preds = %45, %11
  %65 = phi i8* [ %12, %11 ], [ %28, %45 ]
  %66 = ptrtoint i8* %65 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  %67 = icmp eq %"class.base::SingleThreadTaskRunner"* %0, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %61, %50, %64
  %69 = phi i64 [ %66, %64 ], [ %56, %50 ], [ %56, %61 ]
  %70 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw sub i32* %71, i32 1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %70, i64 -2
  %76 = bitcast %"class.base::RefCountedThreadSafe"* %75 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %76) #7
  br label %77

77:                                               ; preds = %46, %64, %68, %74
  %78 = phi i64 [ %66, %64 ], [ %69, %68 ], [ %69, %74 ], [ %49, %46 ]
  %79 = inttoptr i64 %78 to %"class.media::VideoCaptureDeviceFactory"*
  ret %"class.media::VideoCaptureDeviceFactory"* %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare void @_ZN5media29FakeVideoCaptureDeviceFactory39ParseFakeDevicesConfigFromOptionsStringENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS_30FakeVideoCaptureDeviceSettingsENS5_IS9_EEEE(%"class.std::__1::basic_string"*, %"class.std::__1::vector.24"*) local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5media29FakeVideoCaptureDeviceFactory24SetToCustomDevicesConfigERKNSt3__16vectorINS_30FakeVideoCaptureDeviceSettingsENS1_9allocatorIS3_EEEE(%"class.media::FakeVideoCaptureDeviceFactory"*, %"class.std::__1::vector.24"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN5media25VideoCaptureDeviceFactoryC2Ev(%"class.media::VideoCaptureDeviceFactory"*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN5media29FakeVideoCaptureDeviceFactoryC1Ev(%"class.media::FakeVideoCaptureDeviceFactory"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media30FakeVideoCaptureDeviceSettingsD1Ev(%"struct.media::FakeVideoCaptureDeviceSettings"*) unnamed_addr #6

declare void @_ZN5media30VideoCaptureDeviceFactoryLinuxC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.media::VideoCaptureDeviceFactoryLinux"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
