; ModuleID = '../../v8/src/heap/cppgc/concurrent-marker.cc'
source_filename = "../../v8/src/heap/cppgc/concurrent-marker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::internal::GCInfoTable" = type { %"class.v8::PageAllocator"*, %"struct.cppgc::internal::GCInfo"*, i8*, i16, i16, %"class.v8::base::Mutex" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"struct.cppgc::internal::GCInfo" = type { void (i8*)*, void (%"class.cppgc::Visitor"*, i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.cppgc::internal::ConcurrentMarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.151", i64, %"class.v8::base::TimeTicks", i8, [7 x i8] }>
%"class.cppgc::internal::HeapBase" = type <{ i32 (...)**, %"class.cppgc::internal::RawHeap", %"class.std::__1::shared_ptr", %"class.cppgc::internal::CagedHeap", %"class.std::__1::unique_ptr.29", %"class.cppgc::internal::HeapRegistry::Subscription", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.cppgc::internal::Compactor", %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::Sweeper", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl", i64, i64, i8, [3 x i8], i32, %"class.std::__1::unique_ptr.145", i64, i8, [7 x i8] }>
%"class.cppgc::internal::RawHeap" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BaseSpace"* }
%"class.cppgc::internal::BaseSpace" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8, [3 x i8] }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"**, %"class.std::__1::__compressed_pair.2" }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cppgc::internal::BasePage"** }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::shared_ptr" = type { %"class.cppgc::Platform"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::CagedHeap" = type { %"class.cppgc::internal::VirtualMemory", %"class.std::__1::unique_ptr.11" }
%"class.cppgc::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, i8*, i64 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.22" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::set.22" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.cppgc::internal::PageBackend"* }
%"class.cppgc::internal::PageBackend" = type opaque
%"class.cppgc::internal::HeapRegistry::Subscription" = type { %"class.cppgc::internal::HeapBase"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector.38", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr.45", %"class.cppgc::Platform"* }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair.40" }
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.heap::base::Stack"* }
%"class.heap::base::Stack" = type { i8* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.cppgc::internal::PreFinalizerHandler"* }
%"class.cppgc::internal::PreFinalizerHandler" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.cppgc::internal::MarkerBase"* }
%"class.cppgc::internal::MarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"struct.cppgc::internal::MarkerBase::MarkingConfig", [4 x i8], %"class.cppgc::Platform"*, %"class.std::__1::shared_ptr.69", %"struct.cppgc::internal::SingleThreadedHandle", %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MutatorMarkingState", i8, [7 x i8], %"class.cppgc::internal::IncrementalMarkingSchedule", %"class.std::__1::unique_ptr.109", i8, [7 x i8] }>
%"struct.cppgc::internal::MarkerBase::MarkingConfig" = type <{ i8, [3 x i8], i32, i8, i8, [2 x i8] }>
%"class.std::__1::shared_ptr.69" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr.70" }
%"class.std::__1::shared_ptr.70" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.90" }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.heap::base::Worklist.91" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.heap::base::Worklist.92" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.heap::base::Worklist.93" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.94" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.72", %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.87", [4 x i8] }>
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74", %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { float }
%"class.heap::base::Worklist.90" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::MutatorMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" }
%"class.cppgc::internal::MarkingStateBase" = type { %"class.cppgc::internal::HeapBase"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.std::__1::unique_ptr.95", i64 }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local" = type { %"class.heap::base::Worklist.92"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local" = type { %"class.heap::base::Worklist.91"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local" = type { %"class.heap::base::Worklist.93"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local" = type { %"class.heap::base::Worklist.94"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local" = type { %"class.heap::base::Worklist.90"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.heap::base::Worklist<const void **, 256>::Local"* }
%"class.heap::base::Worklist<const void **, 256>::Local" = type { %"class.heap::base::Worklist.98"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist.98" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<const void **, 256>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<const void **, 256>::Segment"*, [256 x i8**] }
%"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.102", i64 }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.cppgc::internal::HeapObjectHeader"**, %"class.cppgc::internal::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.cppgc::internal::HeapObjectHeader"** }
%"class.cppgc::internal::IncrementalMarkingSchedule" = type { %"class.v8::base::TimeTicks", i64, %"struct.std::__1::atomic", double, i64, double }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.cppgc::internal::Compactor" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.118", %"class.std::__1::unique_ptr.125", i8, i8, [6 x i8] }>
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"**, %"class.std::__1::__compressed_pair.120" }
%"class.cppgc::internal::NormalPageSpace" = type { %"class.cppgc::internal::BaseSpace.base", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::FreeList" }
%"class.cppgc::internal::BaseSpace.base" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8 }>
%"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer" = type { i8*, i64 }
%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type opaque
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.cppgc::internal::NormalPageSpace"** }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.cppgc::internal::CompactionWorklists"* }
%"class.cppgc::internal::CompactionWorklists" = type { %"class.heap::base::Worklist.98" }
%"class.cppgc::internal::ObjectAllocator" = type { %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::Sweeper" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unique_ptr.131" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.cppgc::internal::Sweeper::SweeperImpl"* }
%"class.cppgc::internal::Sweeper::SweeperImpl" = type opaque
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.137", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"*, %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::unique_ptr.139" = type opaque
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.std::__1::unique_ptr.139"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::internal::CrossThreadPersistentRegion" = type { %"class.cppgc::internal::PersistentRegion" }
%"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver", i64 }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { i32* }
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::JobTask" = type { i32 (...)** }
%"class.cppgc::internal::ConcurrentMarker" = type { %"class.cppgc::internal::ConcurrentMarkerBase.base", [7 x i8] }
%"class.cppgc::internal::ConcurrentMarkerBase.base" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.151", i64, %"class.v8::base::TimeTicks", i8 }>
%"class.cppgc::internal::ConcurrentMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", i64 }
%"class.cppgc::internal::ConcurrentMarkingVisitor" = type { %"class.cppgc::internal::MarkingVisitorBase" }
%"class.cppgc::internal::MarkingVisitorBase" = type { %"class.cppgc::internal::VisitorBase", %"class.cppgc::internal::MarkingStateBase"* }
%"class.cppgc::internal::VisitorBase" = type { %"class.cppgc::Visitor" }
%"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask" = type { %"class.v8::JobTask", %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.v8::JobDelegate" = type { i32 (...)** }
%"class.cppgc::internal::StatsCollector::InternalScope" = type <{ %"class.cppgc::internal::StatsCollector"*, %"class.v8::base::TimeTicks", i32, [4 x i8] }>
%"class.cppgc::internal::LargePage" = type { %"class.cppgc::internal::BasePage.base", i64 }
%"class.cppgc::internal::BasePage.base" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8 }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::TracingController" = type { i32 (...)** }

$_ZN5cppgc8internal16ConcurrentMarkerD0Ev = comdat any

$_ZN2v87JobTaskD2Ev = comdat any

$_ZN5cppgc8internal16MarkingStateBase7PublishEv = comdat any

$_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE14StartTraceImplEv = comdat any

$_ZN5cppgc8internal16MarkingStateBaseC2ERNS0_8HeapBaseERNS0_16MarkingWorklistsEPNS0_19CompactionWorklistsE = comdat any

$_ZN4heap4base8WorklistIPPKvLt256EE5LocalD2Ev = comdat any

$_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5Local3PopEPS5_ = comdat any

$_ZN5cppgc8internal16MarkingStateBase11MarkAndPushERNS0_16HeapObjectHeaderENS_15TraceDescriptorE = comdat any

$_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZN4heap4base8WorklistIN5cppgc15TraceDescriptorELt512EE5Local7PublishEv = comdat any

$_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5Local7PublishEv = comdat any

$_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists16WeakCallbackItemELt64EE5Local7PublishEv = comdat any

$_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt64EE5Local7PublishEv = comdat any

$_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists28ConcurrentMarkingBailoutItemELt64EE5Local7PublishEv = comdat any

$_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5Local7PublishEv = comdat any

$_ZN4heap4base8WorklistIPPKvLt256EE5Local7PublishEv = comdat any

$_ZN5cppgc8internal16MarkingStateBaseD2Ev = comdat any

$_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5LocalD2Ev = comdat any

$_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5LocalD2Ev = comdat any

$_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists28ConcurrentMarkingBailoutItemELt64EE5LocalD2Ev = comdat any

$_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt64EE5LocalD2Ev = comdat any

$_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists16WeakCallbackItemELt64EE5LocalD2Ev = comdat any

$_ZN4heap4base8WorklistIN5cppgc15TraceDescriptorELt512EE5LocalD2Ev = comdat any

$_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE13StopTraceImplEv = comdat any

$_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE14StartTraceImplEvE28trace_event_unique_atomic398 = comdat any

$_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE13StopTraceImplEvE28trace_event_unique_atomic432 = comdat any

@_ZTVN5cppgc8internal20ConcurrentMarkerBaseE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::internal::ConcurrentMarkerBase"*)* @_ZN5cppgc8internal20ConcurrentMarkerBaseD2Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::ConcurrentMarkerBase"*)* @_ZN5cppgc8internal20ConcurrentMarkerBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"concurrent_marking_handle_ implies !concurrent_marking_handle_->IsValid()\00", align 1
@_ZN5cppgc8internal26IncrementalMarkingSchedule23kEstimatedMarkingTimeMsE = external local_unnamed_addr constant double, align 8
@_ZTVN5cppgc8internal16ConcurrentMarkerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::internal::ConcurrentMarkerBase"*)* @_ZN5cppgc8internal20ConcurrentMarkerBaseD2Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::ConcurrentMarker"*)* @_ZN5cppgc8internal16ConcurrentMarkerD0Ev to i8*), i8* bitcast (%"class.cppgc::Visitor"* (%"class.cppgc::internal::ConcurrentMarker"*, %"class.cppgc::internal::ConcurrentMarkingState"*)* @_ZNK5cppgc8internal16ConcurrentMarker30CreateConcurrentMarkingVisitorERNS0_22ConcurrentMarkingStateE to i8*)] }, align 8
@_ZTVN5cppgc8internal12_GLOBAL__N_121ConcurrentMarkingTaskE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::JobTask"*)* @_ZN2v87JobTaskD2Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask"*)* @_ZN5cppgc8internal12_GLOBAL__N_121ConcurrentMarkingTaskD0Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask"*, %"class.v8::JobDelegate"*)* @_ZN5cppgc8internal12_GLOBAL__N_121ConcurrentMarkingTask3RunEPN2v811JobDelegateE to i8*), i8* bitcast (i64 (%"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask"*, i64)* @_ZNK5cppgc8internal12_GLOBAL__N_121ConcurrentMarkingTask17GetMaxConcurrencyEm to i8*)] }, align 8
@_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE14StartTraceImplEvE28trace_event_unique_atomic398 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.2 = private unnamed_addr constant [6 x i8] c"cppgc\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"CppGC.ConcurrentMark\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"CppGC.ConcurrentMark.Minor\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"CppGC.ConcurrentSweep\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"CppGC.ConcurrentSweep.Minor\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"CppGC.ConcurrentMarkProcessEphemerons\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"CppGC.ConcurrentMarkProcessEphemerons.Minor\00", align 1
@.str.9 = private unnamed_addr constant [47 x i8] c"push_segment_ implies push_segment_->IsEmpty()\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"pop_segment_ implies pop_segment_->IsEmpty()\00", align 1
@_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E = external local_unnamed_addr global %"class.cppgc::internal::GCInfoTable"*, align 8
@_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE13StopTraceImplEvE28trace_event_unique_atomic432 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.12 = private unnamed_addr constant [6 x i8] c"epoch\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"forced\00", align 1

@_ZN5cppgc8internal20ConcurrentMarkerBaseD1Ev = hidden unnamed_addr alias void (%"class.cppgc::internal::ConcurrentMarkerBase"*), void (%"class.cppgc::internal::ConcurrentMarkerBase"*)* @_ZN5cppgc8internal20ConcurrentMarkerBaseD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5cppgc8internal20ConcurrentMarkerBaseC2ERNS0_8HeapBaseERNS0_16MarkingWorklistsERNS0_26IncrementalMarkingScheduleEPNS_8PlatformE(%"class.cppgc::internal::ConcurrentMarkerBase"* nocapture, %"class.cppgc::internal::HeapBase"* dereferenceable(448), %"class.cppgc::internal::MarkingWorklists"* dereferenceable(608), %"class.cppgc::internal::IncrementalMarkingSchedule"* dereferenceable(48), %"class.cppgc::Platform"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5cppgc8internal20ConcurrentMarkerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 1
  store %"class.cppgc::internal::HeapBase"* %1, %"class.cppgc::internal::HeapBase"** %7, align 8
  %8 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 2
  store %"class.cppgc::internal::MarkingWorklists"* %2, %"class.cppgc::internal::MarkingWorklists"** %8, align 8
  %9 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 3
  store %"class.cppgc::internal::IncrementalMarkingSchedule"* %3, %"class.cppgc::internal::IncrementalMarkingSchedule"** %9, align 8
  %10 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 4
  store %"class.cppgc::Platform"* %4, %"class.cppgc::Platform"** %10, align 8
  %11 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 5
  %12 = bitcast %"class.std::__1::unique_ptr.151"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal20ConcurrentMarkerBase5StartEv(%"class.cppgc::internal::ConcurrentMarkerBase"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 4
  %3 = load %"class.cppgc::Platform"*, %"class.cppgc::Platform"** %2, align 8
  %4 = tail call i8* @_Znwm(i64 16) #13
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5cppgc8internal12_GLOBAL__N_121ConcurrentMarkingTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to %"class.cppgc::internal::ConcurrentMarkerBase"**
  store %"class.cppgc::internal::ConcurrentMarkerBase"* %0, %"class.cppgc::internal::ConcurrentMarkerBase"** %7, align 8
  %8 = bitcast i8* %4 to %"class.v8::JobTask"*
  %9 = bitcast %"class.cppgc::Platform"* %3 to %"class.v8::JobHandle"* (%"class.cppgc::Platform"*, i8, %"class.v8::JobTask"*)***
  %10 = load %"class.v8::JobHandle"* (%"class.cppgc::Platform"*, i8, %"class.v8::JobTask"*)**, %"class.v8::JobHandle"* (%"class.cppgc::Platform"*, i8, %"class.v8::JobTask"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::JobHandle"* (%"class.cppgc::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.cppgc::Platform"*, i8, %"class.v8::JobTask"*)** %10, i64 5
  %12 = load %"class.v8::JobHandle"* (%"class.cppgc::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.cppgc::Platform"*, i8, %"class.v8::JobTask"*)** %11, align 8
  %13 = tail call %"class.v8::JobHandle"* %12(%"class.cppgc::Platform"* %3, i8 zeroext 1, %"class.v8::JobTask"* nonnull %8) #14
  %14 = ptrtoint %"class.v8::JobHandle"* %13 to i64
  %15 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 5
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.151"* %15 to i64*
  store i64 %14, i64* %18, align 8
  %19 = icmp eq %"class.v8::JobHandle"* %17, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %1
  %21 = bitcast %"class.v8::JobHandle"* %17 to void (%"class.v8::JobHandle"*)***
  %22 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %22, i64 1
  %24 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %23, align 8
  tail call void %24(%"class.v8::JobHandle"* nonnull %17) #14
  br label %25

25:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal20ConcurrentMarkerBase6CancelEv(%"class.cppgc::internal::ConcurrentMarkerBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %4 = icmp eq %"class.v8::JobHandle"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::JobHandle"* %3 to i1 (%"class.v8::JobHandle"*)***
  %7 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %7, i64 7
  %9 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.v8::JobHandle"* nonnull %3) #14
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %13 = bitcast %"class.v8::JobHandle"* %12 to void (%"class.v8::JobHandle"*)***
  %14 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %14, i64 4
  %16 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %15, align 8
  tail call void %16(%"class.v8::JobHandle"* %12) #14
  br label %17

17:                                               ; preds = %1, %11, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal20ConcurrentMarkerBase14JoinForTestingEv(%"class.cppgc::internal::ConcurrentMarkerBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %4 = icmp eq %"class.v8::JobHandle"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::JobHandle"* %3 to i1 (%"class.v8::JobHandle"*)***
  %7 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %7, i64 7
  %9 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.v8::JobHandle"* nonnull %3) #14
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %13 = bitcast %"class.v8::JobHandle"* %12 to void (%"class.v8::JobHandle"*)***
  %14 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %14, i64 3
  %16 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %15, align 8
  tail call void %16(%"class.v8::JobHandle"* %12) #14
  br label %17

17:                                               ; preds = %1, %11, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5cppgc8internal20ConcurrentMarkerBase8IsActiveEv(%"class.cppgc::internal::ConcurrentMarkerBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %4 = icmp eq %"class.v8::JobHandle"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::JobHandle"* %3 to i1 (%"class.v8::JobHandle"*)***
  %7 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %7, i64 7
  %9 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.v8::JobHandle"* nonnull %3) #14
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal20ConcurrentMarkerBaseD0Ev(%"class.cppgc::internal::ConcurrentMarkerBase"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal20ConcurrentMarkerBase37NotifyIncrementalMutatorStepCompletedEv(%"class.cppgc::internal::ConcurrentMarkerBase"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 2
  %3 = load %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::MarkingWorklists"** %2, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %3, i64 0, i32 0, i32 1
  %5 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %3, i64 0, i32 3, i32 1
  %10 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %9 to i64*
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %3, i64 0, i32 2, i32 1
  %15 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13, %1, %8
  tail call void @_ZN5cppgc8internal20ConcurrentMarkerBase31IncreaseMarkingPriorityIfNeededEv(%"class.cppgc::internal::ConcurrentMarkerBase"* %0)
  %19 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %19, align 8
  %21 = bitcast %"class.v8::JobHandle"* %20 to void (%"class.v8::JobHandle"*)***
  %22 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %22, i64 2
  %24 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %23, align 8
  tail call void %24(%"class.v8::JobHandle"* %20) #14
  br label %25

25:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal20ConcurrentMarkerBase31IncreaseMarkingPriorityIfNeededEv(%"class.cppgc::internal::ConcurrentMarkerBase"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.v8::base::TimeDelta", align 8
  %3 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %3, align 8
  %5 = bitcast %"class.v8::JobHandle"* %4 to i1 (%"class.v8::JobHandle"*)***
  %6 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %6, i64 8
  %8 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.v8::JobHandle"* %4) #14
  br i1 %9, label %10, label %42

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 8
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %42

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 3
  %16 = load %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::internal::IncrementalMarkingSchedule"** %15, align 8
  %17 = tail call i64 @_ZNK5cppgc8internal26IncrementalMarkingSchedule26GetConcurrentlyMarkedBytesEv(%"class.cppgc::internal::IncrementalMarkingSchedule"* %16) #14
  %18 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 6
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %17, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  store i64 %17, i64* %18, align 8
  %22 = tail call i64 @_ZN2v84base9TimeTicks3NowEv() #14
  %23 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  br label %42

24:                                               ; preds = %14
  %25 = bitcast %"class.v8::base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #14
  %26 = tail call i64 @_ZN2v84base9TimeTicks3NowEv() #14
  %27 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 7, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = sub nsw i64 %26, %28
  %30 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %2, i64 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = call i64 @_ZNK2v84base9TimeDelta14InMillisecondsEv(%"class.v8::base::TimeDelta"* nonnull %2) #14
  %32 = sitofp i64 %31 to double
  %33 = load double, double* @_ZN5cppgc8internal26IncrementalMarkingSchedule23kEstimatedMarkingTimeMsE, align 8
  %34 = fmul double %33, 5.000000e-01
  %35 = fcmp olt double %34, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #14
  br i1 %35, label %36, label %42

36:                                               ; preds = %24
  %37 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %3, align 8
  %38 = bitcast %"class.v8::JobHandle"* %37 to void (%"class.v8::JobHandle"*, i8)***
  %39 = load void (%"class.v8::JobHandle"*, i8)**, void (%"class.v8::JobHandle"*, i8)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.v8::JobHandle"*, i8)*, void (%"class.v8::JobHandle"*, i8)** %39, i64 9
  %41 = load void (%"class.v8::JobHandle"*, i8)*, void (%"class.v8::JobHandle"*, i8)** %40, align 8
  call void %41(%"class.v8::JobHandle"* %37, i8 zeroext 2) #14
  store i8 1, i8* %11, align 8
  br label %42

42:                                               ; preds = %21, %36, %24, %10, %1
  ret void
}

declare i64 @_ZNK5cppgc8internal26IncrementalMarkingSchedule26GetConcurrentlyMarkedBytesEv(%"class.cppgc::internal::IncrementalMarkingSchedule"*) local_unnamed_addr #6

declare i64 @_ZN2v84base9TimeTicks3NowEv() local_unnamed_addr #6

declare i64 @_ZNK2v84base9TimeDelta14InMillisecondsEv(%"class.v8::base::TimeDelta"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cppgc::Visitor"* @_ZNK5cppgc8internal16ConcurrentMarker30CreateConcurrentMarkingVisitorERNS0_22ConcurrentMarkingStateE(%"class.cppgc::internal::ConcurrentMarker"* nocapture readonly, %"class.cppgc::internal::ConcurrentMarkingState"* dereferenceable(240)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarker", %"class.cppgc::internal::ConcurrentMarker"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %3, align 8
  %5 = tail call i8* @_Znwm(i64 16) #13
  %6 = bitcast i8* %5 to %"class.cppgc::internal::ConcurrentMarkingVisitor"*
  tail call void @_ZN5cppgc8internal24ConcurrentMarkingVisitorC1ERNS0_8HeapBaseERNS0_22ConcurrentMarkingStateE(%"class.cppgc::internal::ConcurrentMarkingVisitor"* nonnull %6, %"class.cppgc::internal::HeapBase"* dereferenceable(448) %4, %"class.cppgc::internal::ConcurrentMarkingState"* dereferenceable(240) %1) #14
  %7 = bitcast i8* %5 to %"class.cppgc::Visitor"*
  ret %"class.cppgc::Visitor"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal20ConcurrentMarkerBaseD2Ev(%"class.cppgc::internal::ConcurrentMarkerBase"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5cppgc8internal20ConcurrentMarkerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %3, align 8
  %5 = icmp eq %"class.v8::JobHandle"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store %"class.v8::JobHandle"* null, %"class.v8::JobHandle"** %3, align 8
  br label %22

7:                                                ; preds = %1
  %8 = bitcast %"class.v8::JobHandle"* %4 to i1 (%"class.v8::JobHandle"*)***
  %9 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %9, i64 7
  %11 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.v8::JobHandle"* nonnull %4) #14
  br i1 %12, label %13, label %14, !prof !3

13:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0)) #15
  unreachable

14:                                               ; preds = %7
  %15 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %3, align 8
  store %"class.v8::JobHandle"* null, %"class.v8::JobHandle"** %3, align 8
  %16 = icmp eq %"class.v8::JobHandle"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.v8::JobHandle"* %15 to void (%"class.v8::JobHandle"*)***
  %19 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %19, i64 1
  %21 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %20, align 8
  tail call void %21(%"class.v8::JobHandle"* nonnull %15) #14
  br label %22

22:                                               ; preds = %6, %14, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal16ConcurrentMarkerD0Ev(%"class.cppgc::internal::ConcurrentMarker"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarker", %"class.cppgc::internal::ConcurrentMarker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5cppgc8internal20ConcurrentMarkerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarker", %"class.cppgc::internal::ConcurrentMarker"* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %3, align 8
  %5 = icmp eq %"class.v8::JobHandle"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::JobHandle"* %4 to i1 (%"class.v8::JobHandle"*)***
  %8 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, i64 7
  %10 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.v8::JobHandle"* nonnull %4) #14
  br i1 %11, label %12, label %13, !prof !3

12:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0)) #15
  unreachable

13:                                               ; preds = %6
  %14 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %3, align 8
  store %"class.v8::JobHandle"* null, %"class.v8::JobHandle"** %3, align 8
  %15 = icmp eq %"class.v8::JobHandle"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.v8::JobHandle"* %14 to void (%"class.v8::JobHandle"*)***
  %18 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %18, i64 1
  %20 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %19, align 8
  tail call void %20(%"class.v8::JobHandle"* nonnull %14) #14
  br label %21

21:                                               ; preds = %1, %13, %16
  %22 = bitcast %"class.cppgc::internal::ConcurrentMarker"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v87JobTaskD2Ev(%"class.v8::JobTask"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5cppgc8internal12_GLOBAL__N_121ConcurrentMarkingTaskD0Ev(%"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5cppgc8internal12_GLOBAL__N_121ConcurrentMarkingTask3RunEPN2v811JobDelegateE(%"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask"* nocapture readonly, %"class.v8::JobDelegate"*) unnamed_addr #1 align 2 {
  %3 = alloca %"class.cppgc::internal::HeapObjectHeader"*, align 8
  %4 = alloca %"class.cppgc::internal::HeapObjectHeader"*, align 8
  %5 = alloca %"class.v8::base::TimeDelta", align 8
  %6 = alloca %"class.cppgc::internal::StatsCollector::InternalScope", align 8
  %7 = alloca %"class.cppgc::internal::ConcurrentMarkingState", align 8
  %8 = bitcast %"class.cppgc::internal::StatsCollector::InternalScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask", %"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask"* %0, i64 0, i32 1
  %10 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %9, align 8
  %11 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %10, i64 0, i32 1
  %12 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %11, align 8
  %13 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %12, i64 0, i32 6, i32 0, i32 0, i32 0
  %14 = bitcast %"class.cppgc::internal::StatsCollector"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %6, i64 0, i32 0
  %17 = bitcast %"class.cppgc::internal::StatsCollector::InternalScope"* %6 to i64*
  store i64 %15, i64* %17, align 8
  %18 = tail call i64 @_ZN2v84base9TimeTicks3NowEv() #14
  %19 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %6, i64 0, i32 1, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %6, i64 0, i32 2
  store i32 0, i32* %20, align 8
  call void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE14StartTraceImplEv(%"class.cppgc::internal::StatsCollector::InternalScope"* nonnull %6) #14
  %21 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %9, align 8
  %22 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %21, i64 0, i32 2
  %23 = load %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::MarkingWorklists"** %22, align 8
  %24 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %23, i64 0, i32 0, i32 1
  %25 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %23, i64 0, i32 3, i32 1
  %30 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %23, i64 0, i32 2, i32 1
  %35 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %621, label %38

38:                                               ; preds = %33, %2, %28
  %39 = bitcast %"class.cppgc::internal::ConcurrentMarkingState"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %21, i64 0, i32 1
  %41 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %40, align 8
  %42 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %41, i64 0, i32 10, i32 2, i32 0, i32 0, i32 0
  %43 = load %"class.cppgc::internal::CompactionWorklists"*, %"class.cppgc::internal::CompactionWorklists"** %42, align 8
  %44 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0
  call void @_ZN5cppgc8internal16MarkingStateBaseC2ERNS0_8HeapBaseERNS0_16MarkingWorklistsEPNS0_19CompactionWorklistsE(%"class.cppgc::internal::MarkingStateBase"* nonnull %44, %"class.cppgc::internal::HeapBase"* dereferenceable(448) %41, %"class.cppgc::internal::MarkingWorklists"* dereferenceable(608) %23, %"class.cppgc::internal::CompactionWorklists"* %43) #14
  %45 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 1
  store i64 0, i64* %45, align 8
  %46 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %9, align 8
  %47 = bitcast %"class.cppgc::internal::ConcurrentMarkerBase"* %46 to %"class.cppgc::Visitor"* (%"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkingState"*)***
  %48 = load %"class.cppgc::Visitor"* (%"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkingState"*)**, %"class.cppgc::Visitor"* (%"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkingState"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.cppgc::Visitor"* (%"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkingState"*)*, %"class.cppgc::Visitor"* (%"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkingState"*)** %48, i64 2
  %50 = load %"class.cppgc::Visitor"* (%"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkingState"*)*, %"class.cppgc::Visitor"* (%"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkingState"*)** %49, align 8
  %51 = call %"class.cppgc::Visitor"* %50(%"class.cppgc::internal::ConcurrentMarkerBase"* %46, %"class.cppgc::internal::ConcurrentMarkingState"* nonnull dereferenceable(240) %7) #14
  %52 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 3
  %53 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 3, i32 1
  %54 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 3, i32 2
  %55 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %52, i64 0, i32 0
  %56 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 12
  %57 = bitcast %"class.v8::JobDelegate"* %1 to i1 (%"class.v8::JobDelegate"*)***
  %58 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %4 to i8*
  %59 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 1, i32 1
  %60 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 1, i32 2
  %61 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 1, i32 0
  %62 = bitcast %"class.heap::base::internal::SegmentBase"** %59 to i64*
  %63 = bitcast %"class.heap::base::internal::SegmentBase"** %60 to i64*
  %64 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 5, i32 1
  %65 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 5, i32 2
  %66 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 5, i32 0
  %67 = bitcast %"class.heap::base::internal::SegmentBase"** %64 to i64*
  %68 = bitcast %"class.heap::base::internal::SegmentBase"** %65 to i64*
  %69 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 10
  %70 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 10, i32 1
  %71 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 10, i32 2
  %72 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %69, i64 0, i32 0
  %73 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %3 to i8*
  %74 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 8, i32 1
  %75 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 8, i32 2
  %76 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 8, i32 0
  %77 = bitcast %"class.heap::base::internal::SegmentBase"** %74 to i64*
  %78 = bitcast %"class.heap::base::internal::SegmentBase"** %75 to i64*
  %79 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 7, i32 1
  %80 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %7, i64 0, i32 0, i32 7, i32 0
  %81 = bitcast %"class.heap::base::internal::SegmentBase"** %79 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  %82 = bitcast %"class.heap::base::internal::SegmentBase"** %79 to i8**
  br label %83

83:                                               ; preds = %606, %38
  %84 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %9, align 8
  %85 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %84, i64 0, i32 3
  %86 = load %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::internal::IncrementalMarkingSchedule"** %85, align 8
  %87 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %53, align 8
  %88 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %87, i64 0, i32 1
  %89 = load i16, i16* %88, align 2
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %91, label %102

91:                                               ; preds = %83
  %92 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %54, align 8
  %93 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %92, i64 0, i32 1
  %94 = load i16, i16* %93, align 2
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %91
  %97 = load %"class.heap::base::Worklist.90"*, %"class.heap::base::Worklist.90"** %55, align 8
  %98 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %97, i64 0, i32 1
  %99 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %98 to i64*
  %100 = load atomic i64, i64* %99 monotonic, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %161, label %102

102:                                              ; preds = %96, %91, %83
  %103 = load i64, i64* %56, align 8
  %104 = load i64, i64* %45, align 8
  store i64 %103, i64* %45, align 8
  %105 = sub i64 %103, %104
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %86, i64 %105) #14
  %106 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %107 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %106, align 8
  %108 = call zeroext i1 %107(%"class.v8::JobDelegate"* %1) #14
  br i1 %108, label %607, label %109

109:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #14
  %110 = call zeroext i1 @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5Local3PopEPS5_(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %52, %"class.cppgc::internal::HeapObjectHeader"** nonnull %4) #14
  br i1 %110, label %111, label %156

111:                                              ; preds = %109, %153
  %112 = phi i64 [ %154, %153 ], [ 750, %109 ]
  %113 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %4, align 8
  %114 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %113, i64 0, i32 2
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = icmp ult i16 %115, 2
  br i1 %116, label %117, label %124

117:                                              ; preds = %111
  %118 = ptrtoint %"class.cppgc::internal::HeapObjectHeader"* %113 to i64
  %119 = and i64 %118, -131072
  %120 = or i64 %119, 4096
  %121 = inttoptr i64 %120 to %"class.cppgc::internal::LargePage"*
  %122 = getelementptr inbounds %"class.cppgc::internal::LargePage", %"class.cppgc::internal::LargePage"* %121, i64 0, i32 1
  %123 = load i64, i64* %122, align 8
  br label %129

124:                                              ; preds = %111
  %125 = load atomic i16, i16* %114 monotonic, align 2
  %126 = lshr i16 %125, 1
  %127 = zext i16 %126 to i64
  %128 = shl nuw nsw i64 %127, 3
  br label %129

129:                                              ; preds = %124, %117
  %130 = phi i64 [ %123, %117 ], [ %128, %124 ]
  %131 = load i64, i64* %56, align 8
  %132 = add i64 %131, %130
  store i64 %132, i64* %56, align 8
  %133 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %113, i64 0, i32 1
  %134 = load atomic i16, i16* %133 acquire, align 2
  %135 = lshr i16 %134, 2
  %136 = load %"class.cppgc::internal::GCInfoTable"*, %"class.cppgc::internal::GCInfoTable"** @_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E, align 8
  %137 = getelementptr inbounds %"class.cppgc::internal::GCInfoTable", %"class.cppgc::internal::GCInfoTable"* %136, i64 0, i32 1
  %138 = load %"struct.cppgc::internal::GCInfo"*, %"struct.cppgc::internal::GCInfo"** %137, align 8
  %139 = zext i16 %135 to i64
  %140 = getelementptr inbounds %"struct.cppgc::internal::GCInfo", %"struct.cppgc::internal::GCInfo"* %138, i64 %139, i32 1
  %141 = load void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::Visitor"*, i8*)** %140, align 8
  %142 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %113, i64 1
  %143 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %142 to i8*
  call void %141(%"class.cppgc::Visitor"* %51, i8* %143) #14
  %144 = add i64 %112, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %153

146:                                              ; preds = %129
  %147 = load i64, i64* %56, align 8
  %148 = load i64, i64* %45, align 8
  store i64 %147, i64* %45, align 8
  %149 = sub i64 %147, %148
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %86, i64 %149) #14
  %150 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %151 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %150, align 8
  %152 = call zeroext i1 %151(%"class.v8::JobDelegate"* %1) #14
  br i1 %152, label %160, label %153

153:                                              ; preds = %146, %129
  %154 = phi i64 [ %144, %129 ], [ 750, %146 ]
  %155 = call zeroext i1 @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5Local3PopEPS5_(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %52, %"class.cppgc::internal::HeapObjectHeader"** nonnull %4) #14
  br i1 %155, label %111, label %156

156:                                              ; preds = %153, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #14
  %157 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %9, align 8
  %158 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %157, i64 0, i32 3
  %159 = load %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::internal::IncrementalMarkingSchedule"** %158, align 8
  br label %161

160:                                              ; preds = %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #14
  br label %607

161:                                              ; preds = %156, %96
  %162 = phi %"class.cppgc::internal::IncrementalMarkingSchedule"* [ %86, %96 ], [ %159, %156 ]
  %163 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %59, align 8
  %164 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %163, i64 0, i32 1
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 0
  br i1 %166, label %167, label %178

167:                                              ; preds = %161
  %168 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %60, align 8
  %169 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %168, i64 0, i32 1
  %170 = load i16, i16* %169, align 2
  %171 = icmp eq i16 %170, 0
  br i1 %171, label %172, label %178

172:                                              ; preds = %167
  %173 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %61, align 8
  %174 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %173, i64 0, i32 1
  %175 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %174 to i64*
  %176 = load atomic i64, i64* %175 monotonic, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %269, label %178

178:                                              ; preds = %172, %167, %161
  %179 = load i64, i64* %56, align 8
  %180 = load i64, i64* %45, align 8
  store i64 %179, i64* %45, align 8
  %181 = sub i64 %179, %180
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %162, i64 %181) #14
  %182 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %183 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %182, align 8
  %184 = call zeroext i1 %183(%"class.v8::JobDelegate"* %1) #14
  br i1 %184, label %607, label %185

185:                                              ; preds = %178, %267
  %186 = phi i64 [ %268, %267 ], [ 750, %178 ]
  %187 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %60, align 8
  %188 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %187, i64 0, i32 1
  %189 = load i16, i16* %188, align 2
  %190 = icmp eq i16 %189, 0
  %191 = ptrtoint %"class.heap::base::internal::SegmentBase"* %187 to i64
  %192 = bitcast %"class.heap::base::internal::SegmentBase"* %187 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*
  br i1 %190, label %193, label %227

193:                                              ; preds = %185
  %194 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %59, align 8
  %195 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %194, i64 0, i32 1
  %196 = load i16, i16* %195, align 2
  %197 = icmp eq i16 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %193
  %199 = ptrtoint %"class.heap::base::internal::SegmentBase"* %194 to i64
  store i64 %191, i64* %62, align 8
  store i64 %199, i64* %63, align 8
  %200 = bitcast %"class.heap::base::internal::SegmentBase"* %194 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*
  br label %227

201:                                              ; preds = %193
  %202 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %61, align 8
  %203 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %202, i64 0, i32 1
  %204 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %203 to i64*
  %205 = load atomic i64, i64* %204 monotonic, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %269, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %202, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %208) #14
  %209 = load %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %203, align 8
  %210 = icmp eq %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %209, null
  br i1 %210, label %211, label %212

211:                                              ; preds = %207
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %208) #14
  br label %269

212:                                              ; preds = %207
  %213 = ptrtoint %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %209 to i64
  %214 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw sub i64* %214, i64 1 monotonic
  %216 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %209, i64 0, i32 1
  %217 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  store atomic i64 %218, i64* %204 monotonic, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %208) #14
  %219 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %60, align 8
  %220 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %221 = icmp eq %"class.heap::base::internal::SegmentBase"* %220, %219
  %222 = icmp eq %"class.heap::base::internal::SegmentBase"* %219, null
  %223 = or i1 %222, %221
  br i1 %223, label %226, label %224

224:                                              ; preds = %212
  %225 = bitcast %"class.heap::base::internal::SegmentBase"* %219 to i8*
  call void @_ZdlPv(i8* %225) #13
  br label %226

226:                                              ; preds = %224, %212
  store i64 %213, i64* %63, align 8
  br label %227

227:                                              ; preds = %226, %198, %185
  %228 = phi %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* [ %209, %226 ], [ %200, %198 ], [ %192, %185 ]
  %229 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %228, i64 0, i32 0, i32 1
  %230 = load i16, i16* %229, align 2
  %231 = add i16 %230, -1
  store i16 %231, i16* %229, align 2
  %232 = zext i16 %231 to i64
  %233 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %228, i64 0, i32 2, i64 %232, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %228, i64 0, i32 2, i64 %232, i32 1
  %236 = load void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::Visitor"*, i8*)** %235, align 8
  %237 = getelementptr inbounds i8, i8* %234, i64 -2
  %238 = bitcast i8* %237 to i16*
  %239 = load atomic i16, i16* %238 monotonic, align 2
  %240 = icmp ult i16 %239, 2
  br i1 %240, label %241, label %249

241:                                              ; preds = %227
  %242 = getelementptr inbounds i8, i8* %234, i64 -8
  %243 = ptrtoint i8* %242 to i64
  %244 = and i64 %243, -131072
  %245 = or i64 %244, 4096
  %246 = inttoptr i64 %245 to %"class.cppgc::internal::LargePage"*
  %247 = getelementptr inbounds %"class.cppgc::internal::LargePage", %"class.cppgc::internal::LargePage"* %246, i64 0, i32 1
  %248 = load i64, i64* %247, align 8
  br label %254

249:                                              ; preds = %227
  %250 = load atomic i16, i16* %238 monotonic, align 2
  %251 = lshr i16 %250, 1
  %252 = zext i16 %251 to i64
  %253 = shl nuw nsw i64 %252, 3
  br label %254

254:                                              ; preds = %249, %241
  %255 = phi i64 [ %248, %241 ], [ %253, %249 ]
  %256 = load i64, i64* %56, align 8
  %257 = add i64 %256, %255
  store i64 %257, i64* %56, align 8
  call void %236(%"class.cppgc::Visitor"* %51, i8* %234) #14
  %258 = add i64 %186, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %267

260:                                              ; preds = %254
  %261 = load i64, i64* %56, align 8
  %262 = load i64, i64* %45, align 8
  store i64 %261, i64* %45, align 8
  %263 = sub i64 %261, %262
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %162, i64 %263) #14
  %264 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %265 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %264, align 8
  %266 = call zeroext i1 %265(%"class.v8::JobDelegate"* %1) #14
  br i1 %266, label %607, label %267

267:                                              ; preds = %260, %254
  %268 = phi i64 [ %258, %254 ], [ 750, %260 ]
  br label %185

269:                                              ; preds = %201, %211, %172
  %270 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %9, align 8
  %271 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %270, i64 0, i32 3
  %272 = load %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::internal::IncrementalMarkingSchedule"** %271, align 8
  %273 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %64, align 8
  %274 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %273, i64 0, i32 1
  %275 = load i16, i16* %274, align 2
  %276 = icmp eq i16 %275, 0
  br i1 %276, label %277, label %288

277:                                              ; preds = %269
  %278 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %65, align 8
  %279 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %278, i64 0, i32 1
  %280 = load i16, i16* %279, align 2
  %281 = icmp eq i16 %280, 0
  br i1 %281, label %282, label %288

282:                                              ; preds = %277
  %283 = load %"class.heap::base::Worklist.91"*, %"class.heap::base::Worklist.91"** %66, align 8
  %284 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %283, i64 0, i32 1
  %285 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %284 to i64*
  %286 = load atomic i64, i64* %285 monotonic, align 8
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %387, label %288

288:                                              ; preds = %282, %277, %269
  %289 = load i64, i64* %56, align 8
  %290 = load i64, i64* %45, align 8
  store i64 %289, i64* %45, align 8
  %291 = sub i64 %289, %290
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %272, i64 %291) #14
  %292 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %293 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %292, align 8
  %294 = call zeroext i1 %293(%"class.v8::JobDelegate"* %1) #14
  br i1 %294, label %607, label %295

295:                                              ; preds = %288, %385
  %296 = phi i64 [ %386, %385 ], [ 750, %288 ]
  %297 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %65, align 8
  %298 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %297, i64 0, i32 1
  %299 = load i16, i16* %298, align 2
  %300 = icmp eq i16 %299, 0
  %301 = ptrtoint %"class.heap::base::internal::SegmentBase"* %297 to i64
  %302 = bitcast %"class.heap::base::internal::SegmentBase"* %297 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*
  br i1 %300, label %303, label %337

303:                                              ; preds = %295
  %304 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %64, align 8
  %305 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %304, i64 0, i32 1
  %306 = load i16, i16* %305, align 2
  %307 = icmp eq i16 %306, 0
  br i1 %307, label %311, label %308

308:                                              ; preds = %303
  %309 = ptrtoint %"class.heap::base::internal::SegmentBase"* %304 to i64
  store i64 %301, i64* %67, align 8
  store i64 %309, i64* %68, align 8
  %310 = bitcast %"class.heap::base::internal::SegmentBase"* %304 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*
  br label %337

311:                                              ; preds = %303
  %312 = load %"class.heap::base::Worklist.91"*, %"class.heap::base::Worklist.91"** %66, align 8
  %313 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %312, i64 0, i32 1
  %314 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %313 to i64*
  %315 = load atomic i64, i64* %314 monotonic, align 8
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %387, label %317

317:                                              ; preds = %311
  %318 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %312, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %318) #14
  %319 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %313, align 8
  %320 = icmp eq %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %319, null
  br i1 %320, label %321, label %322

321:                                              ; preds = %317
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %318) #14
  br label %387

322:                                              ; preds = %317
  %323 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %319 to i64
  %324 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = atomicrmw sub i64* %324, i64 1 monotonic
  %326 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %319, i64 0, i32 1
  %327 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  store atomic i64 %328, i64* %314 monotonic, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %318) #14
  %329 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %65, align 8
  %330 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %331 = icmp eq %"class.heap::base::internal::SegmentBase"* %330, %329
  %332 = icmp eq %"class.heap::base::internal::SegmentBase"* %329, null
  %333 = or i1 %332, %331
  br i1 %333, label %336, label %334

334:                                              ; preds = %322
  %335 = bitcast %"class.heap::base::internal::SegmentBase"* %329 to i8*
  call void @_ZdlPv(i8* %335) #13
  br label %336

336:                                              ; preds = %334, %322
  store i64 %323, i64* %68, align 8
  br label %337

337:                                              ; preds = %336, %308, %295
  %338 = phi %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* [ %319, %336 ], [ %310, %308 ], [ %302, %295 ]
  %339 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %338, i64 0, i32 0, i32 1
  %340 = load i16, i16* %339, align 2
  %341 = add i16 %340, -1
  store i16 %341, i16* %339, align 2
  %342 = zext i16 %341 to i64
  %343 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %338, i64 0, i32 2, i64 %342
  %344 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = inttoptr i64 %345 to %"class.cppgc::internal::HeapObjectHeader"*
  %347 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %346, i64 0, i32 2
  %348 = load atomic i16, i16* %347 monotonic, align 2
  %349 = icmp ult i16 %348, 2
  br i1 %349, label %350, label %356

350:                                              ; preds = %337
  %351 = and i64 %345, -131072
  %352 = or i64 %351, 4096
  %353 = inttoptr i64 %352 to %"class.cppgc::internal::LargePage"*
  %354 = getelementptr inbounds %"class.cppgc::internal::LargePage", %"class.cppgc::internal::LargePage"* %353, i64 0, i32 1
  %355 = load i64, i64* %354, align 8
  br label %361

356:                                              ; preds = %337
  %357 = load atomic i16, i16* %347 monotonic, align 2
  %358 = lshr i16 %357, 1
  %359 = zext i16 %358 to i64
  %360 = shl nuw nsw i64 %359, 3
  br label %361

361:                                              ; preds = %356, %350
  %362 = phi i64 [ %355, %350 ], [ %360, %356 ]
  %363 = load i64, i64* %56, align 8
  %364 = add i64 %363, %362
  store i64 %364, i64* %56, align 8
  %365 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %346, i64 0, i32 1
  %366 = load atomic i16, i16* %365 acquire, align 2
  %367 = lshr i16 %366, 2
  %368 = load %"class.cppgc::internal::GCInfoTable"*, %"class.cppgc::internal::GCInfoTable"** @_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E, align 8
  %369 = getelementptr inbounds %"class.cppgc::internal::GCInfoTable", %"class.cppgc::internal::GCInfoTable"* %368, i64 0, i32 1
  %370 = load %"struct.cppgc::internal::GCInfo"*, %"struct.cppgc::internal::GCInfo"** %369, align 8
  %371 = zext i16 %367 to i64
  %372 = getelementptr inbounds %"struct.cppgc::internal::GCInfo", %"struct.cppgc::internal::GCInfo"* %370, i64 %371, i32 1
  %373 = load void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::Visitor"*, i8*)** %372, align 8
  %374 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %346, i64 1
  %375 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %374 to i8*
  call void %373(%"class.cppgc::Visitor"* %51, i8* %375) #14
  %376 = add i64 %296, -1
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %378, label %385

378:                                              ; preds = %361
  %379 = load i64, i64* %56, align 8
  %380 = load i64, i64* %45, align 8
  store i64 %379, i64* %45, align 8
  %381 = sub i64 %379, %380
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %272, i64 %381) #14
  %382 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %383 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %382, align 8
  %384 = call zeroext i1 %383(%"class.v8::JobDelegate"* %1) #14
  br i1 %384, label %607, label %385

385:                                              ; preds = %378, %361
  %386 = phi i64 [ %376, %361 ], [ 750, %378 ]
  br label %295

387:                                              ; preds = %311, %321, %282
  %388 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %9, align 8
  %389 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %388, i64 0, i32 3
  %390 = load %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::internal::IncrementalMarkingSchedule"** %389, align 8
  %391 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %70, align 8
  %392 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %391, i64 0, i32 1
  %393 = load i16, i16* %392, align 2
  %394 = icmp eq i16 %393, 0
  br i1 %394, label %395, label %406

395:                                              ; preds = %387
  %396 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %71, align 8
  %397 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %396, i64 0, i32 1
  %398 = load i16, i16* %397, align 2
  %399 = icmp eq i16 %398, 0
  br i1 %399, label %400, label %406

400:                                              ; preds = %395
  %401 = load %"class.heap::base::Worklist.90"*, %"class.heap::base::Worklist.90"** %72, align 8
  %402 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %401, i64 0, i32 1
  %403 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %402 to i64*
  %404 = load atomic i64, i64* %403 monotonic, align 8
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %443, label %406

406:                                              ; preds = %400, %395, %387
  %407 = load i64, i64* %56, align 8
  %408 = load i64, i64* %45, align 8
  store i64 %407, i64* %45, align 8
  %409 = sub i64 %407, %408
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %390, i64 %409) #14
  %410 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %411 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %410, align 8
  %412 = call zeroext i1 %411(%"class.v8::JobDelegate"* %1) #14
  br i1 %412, label %607, label %413

413:                                              ; preds = %406
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #14
  %414 = call zeroext i1 @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5Local3PopEPS5_(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %69, %"class.cppgc::internal::HeapObjectHeader"** nonnull %3) #14
  br i1 %414, label %415, label %441

415:                                              ; preds = %413, %438
  %416 = phi i64 [ %439, %438 ], [ 750, %413 ]
  %417 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %3, align 8
  %418 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %417, i64 0, i32 1
  %419 = load atomic i16, i16* %418 acquire, align 2
  %420 = lshr i16 %419, 2
  %421 = load %"class.cppgc::internal::GCInfoTable"*, %"class.cppgc::internal::GCInfoTable"** @_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E, align 8
  %422 = getelementptr inbounds %"class.cppgc::internal::GCInfoTable", %"class.cppgc::internal::GCInfoTable"* %421, i64 0, i32 1
  %423 = load %"struct.cppgc::internal::GCInfo"*, %"struct.cppgc::internal::GCInfo"** %422, align 8
  %424 = zext i16 %420 to i64
  %425 = getelementptr inbounds %"struct.cppgc::internal::GCInfo", %"struct.cppgc::internal::GCInfo"* %423, i64 %424, i32 1
  %426 = load void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::Visitor"*, i8*)** %425, align 8
  %427 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %417, i64 1
  %428 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %427 to i8*
  call void %426(%"class.cppgc::Visitor"* %51, i8* %428) #14
  %429 = add i64 %416, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %438

431:                                              ; preds = %415
  %432 = load i64, i64* %56, align 8
  %433 = load i64, i64* %45, align 8
  store i64 %432, i64* %45, align 8
  %434 = sub i64 %432, %433
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %390, i64 %434) #14
  %435 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %436 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %435, align 8
  %437 = call zeroext i1 %436(%"class.v8::JobDelegate"* %1) #14
  br i1 %437, label %442, label %438

438:                                              ; preds = %431, %415
  %439 = phi i64 [ %429, %415 ], [ 750, %431 ]
  %440 = call zeroext i1 @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5Local3PopEPS5_(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %69, %"class.cppgc::internal::HeapObjectHeader"** nonnull %3) #14
  br i1 %440, label %415, label %441

441:                                              ; preds = %438, %413
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #14
  br label %443

442:                                              ; preds = %431
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #14
  br label %607

443:                                              ; preds = %441, %400
  %444 = call i64 @_ZN2v84base9TimeTicks3NowEv() #14
  %445 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %9, align 8
  %446 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %445, i64 0, i32 3
  %447 = load %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::internal::IncrementalMarkingSchedule"** %446, align 8
  %448 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %74, align 8
  %449 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %448, i64 0, i32 1
  %450 = load i16, i16* %449, align 2
  %451 = icmp eq i16 %450, 0
  br i1 %451, label %452, label %463

452:                                              ; preds = %443
  %453 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %75, align 8
  %454 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %453, i64 0, i32 1
  %455 = load i16, i16* %454, align 2
  %456 = icmp eq i16 %455, 0
  br i1 %456, label %457, label %463

457:                                              ; preds = %452
  %458 = load %"class.heap::base::Worklist.94"*, %"class.heap::base::Worklist.94"** %76, align 8
  %459 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %458, i64 0, i32 1
  %460 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %459 to i64*
  %461 = load atomic i64, i64* %460 monotonic, align 8
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %590, label %463

463:                                              ; preds = %457, %452, %443
  %464 = load i64, i64* %56, align 8
  %465 = load i64, i64* %45, align 8
  store i64 %464, i64* %45, align 8
  %466 = sub i64 %464, %465
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %447, i64 %466) #14
  %467 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %468 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %467, align 8
  %469 = call zeroext i1 %468(%"class.v8::JobDelegate"* %1) #14
  br i1 %469, label %607, label %470

470:                                              ; preds = %463, %588
  %471 = phi i64 [ %589, %588 ], [ 750, %463 ]
  %472 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %75, align 8
  %473 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %472, i64 0, i32 1
  %474 = load i16, i16* %473, align 2
  %475 = icmp eq i16 %474, 0
  %476 = ptrtoint %"class.heap::base::internal::SegmentBase"* %472 to i64
  %477 = bitcast %"class.heap::base::internal::SegmentBase"* %472 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*
  br i1 %475, label %478, label %512

478:                                              ; preds = %470
  %479 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %74, align 8
  %480 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %479, i64 0, i32 1
  %481 = load i16, i16* %480, align 2
  %482 = icmp eq i16 %481, 0
  br i1 %482, label %486, label %483

483:                                              ; preds = %478
  %484 = ptrtoint %"class.heap::base::internal::SegmentBase"* %479 to i64
  store i64 %476, i64* %77, align 8
  store i64 %484, i64* %78, align 8
  %485 = bitcast %"class.heap::base::internal::SegmentBase"* %479 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*
  br label %512

486:                                              ; preds = %478
  %487 = load %"class.heap::base::Worklist.94"*, %"class.heap::base::Worklist.94"** %76, align 8
  %488 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %487, i64 0, i32 1
  %489 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %488 to i64*
  %490 = load atomic i64, i64* %489 monotonic, align 8
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %590, label %492

492:                                              ; preds = %486
  %493 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %487, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %493) #14
  %494 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %488, align 8
  %495 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %494, null
  br i1 %495, label %496, label %497

496:                                              ; preds = %492
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %493) #14
  br label %590

497:                                              ; preds = %492
  %498 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %494 to i64
  %499 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = atomicrmw sub i64* %499, i64 1 monotonic
  %501 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %494, i64 0, i32 1
  %502 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %501 to i64*
  %503 = load i64, i64* %502, align 8
  store atomic i64 %503, i64* %489 monotonic, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %493) #14
  %504 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %75, align 8
  %505 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %506 = icmp eq %"class.heap::base::internal::SegmentBase"* %505, %504
  %507 = icmp eq %"class.heap::base::internal::SegmentBase"* %504, null
  %508 = or i1 %507, %506
  br i1 %508, label %511, label %509

509:                                              ; preds = %497
  %510 = bitcast %"class.heap::base::internal::SegmentBase"* %504 to i8*
  call void @_ZdlPv(i8* %510) #13
  br label %511

511:                                              ; preds = %509, %497
  store i64 %498, i64* %78, align 8
  br label %512

512:                                              ; preds = %511, %483, %470
  %513 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* [ %494, %511 ], [ %485, %483 ], [ %477, %470 ]
  %514 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %513, i64 0, i32 0, i32 1
  %515 = load i16, i16* %514, align 2
  %516 = add i16 %515, -1
  store i16 %516, i16* %514, align 2
  %517 = zext i16 %516 to i64
  %518 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %513, i64 0, i32 2, i64 %517, i32 0
  %519 = load i8*, i8** %518, align 8
  %520 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %513, i64 0, i32 2, i64 %517, i32 1
  %521 = load i8*, i8** %520, align 8
  %522 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %513, i64 0, i32 2, i64 %517, i32 2, i32 0
  %523 = load i8*, i8** %522, align 8
  %524 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %513, i64 0, i32 2, i64 %517, i32 2, i32 1
  %525 = load void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::Visitor"*, i8*)** %524, align 8
  %526 = getelementptr inbounds i8, i8* %519, i64 -2
  %527 = bitcast i8* %526 to i16*
  %528 = load atomic i16, i16* %527 monotonic, align 2
  %529 = and i16 %528, 1
  %530 = icmp eq i16 %529, 0
  br i1 %530, label %537, label %531

531:                                              ; preds = %512
  %532 = icmp eq i8* %523, null
  br i1 %532, label %536, label %533

533:                                              ; preds = %531
  %534 = getelementptr inbounds i8, i8* %523, i64 -8
  %535 = bitcast i8* %534 to %"class.cppgc::internal::HeapObjectHeader"*
  call void @_ZN5cppgc8internal16MarkingStateBase11MarkAndPushERNS0_16HeapObjectHeaderENS_15TraceDescriptorE(%"class.cppgc::internal::MarkingStateBase"* nonnull %44, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %535, i8* nonnull %523, void (%"class.cppgc::Visitor"*, i8*)* %525) #14
  br label %578

536:                                              ; preds = %531
  call void %525(%"class.cppgc::Visitor"* %51, i8* %521) #14
  br label %578

537:                                              ; preds = %512
  %538 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %79, align 8
  %539 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %538, i64 0, i32 1
  %540 = load i16, i16* %539, align 2
  %541 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %538, i64 0, i32 0
  %542 = load i16, i16* %541, align 2
  %543 = icmp eq i16 %540, %542
  %544 = bitcast %"class.heap::base::internal::SegmentBase"* %538 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*
  br i1 %543, label %545, label %568, !prof !3

545:                                              ; preds = %537
  %546 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %547 = icmp eq %"class.heap::base::internal::SegmentBase"* %538, %546
  br i1 %547, label %560, label %548

548:                                              ; preds = %545
  %549 = load %"class.heap::base::Worklist.94"*, %"class.heap::base::Worklist.94"** %80, align 8
  %550 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %81, align 8
  %551 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %549, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %551) #14
  %552 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %549, i64 0, i32 1
  %553 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %552 to i64*
  %554 = load i64, i64* %553, align 8
  %555 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %550, i64 0, i32 1
  %556 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %555 to i64*
  store i64 %554, i64* %556, align 8
  %557 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %550 to i64
  store atomic i64 %557, i64* %553 monotonic, align 8
  %558 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %549, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %559 = atomicrmw add i64* %558, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %551) #14
  br label %560

560:                                              ; preds = %548, %545
  %561 = call i8* @_Znwm(i64 2064) #13
  %562 = bitcast i8* %561 to i16*
  store i16 64, i16* %562, align 2
  %563 = getelementptr inbounds i8, i8* %561, i64 2
  %564 = bitcast i8* %563 to i16*
  store i16 0, i16* %564, align 2
  %565 = getelementptr inbounds i8, i8* %561, i64 8
  %566 = bitcast i8* %565 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %566, align 8
  store i8* %561, i8** %82, align 8
  %567 = bitcast i8* %561 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*
  br label %568

568:                                              ; preds = %560, %537
  %569 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* [ %567, %560 ], [ %544, %537 ]
  %570 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %569, i64 0, i32 0, i32 1
  %571 = load i16, i16* %570, align 2
  %572 = add i16 %571, 1
  store i16 %572, i16* %570, align 2
  %573 = zext i16 %571 to i64
  %574 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %569, i64 0, i32 2, i64 %573, i32 0
  store i8* %519, i8** %574, align 8
  %575 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %569, i64 0, i32 2, i64 %573, i32 1
  store i8* %521, i8** %575, align 8
  %576 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %569, i64 0, i32 2, i64 %573, i32 2, i32 0
  store i8* %523, i8** %576, align 8
  %577 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %569, i64 0, i32 2, i64 %573, i32 2, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* %525, void (%"class.cppgc::Visitor"*, i8*)** %577, align 8
  br label %578

578:                                              ; preds = %568, %536, %533
  %579 = add i64 %471, -1
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %588

581:                                              ; preds = %578
  %582 = load i64, i64* %56, align 8
  %583 = load i64, i64* %45, align 8
  store i64 %582, i64* %45, align 8
  %584 = sub i64 %582, %583
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %447, i64 %584) #14
  %585 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %57, align 8
  %586 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %585, align 8
  %587 = call zeroext i1 %586(%"class.v8::JobDelegate"* %1) #14
  br i1 %587, label %607, label %588

588:                                              ; preds = %581, %578
  %589 = phi i64 [ %579, %578 ], [ 750, %581 ]
  br label %470

590:                                              ; preds = %486, %496, %457
  %591 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %59, align 8
  %592 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %591, i64 0, i32 1
  %593 = load i16, i16* %592, align 2
  %594 = icmp eq i16 %593, 0
  br i1 %594, label %595, label %606

595:                                              ; preds = %590
  %596 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %60, align 8
  %597 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %596, i64 0, i32 1
  %598 = load i16, i16* %597, align 2
  %599 = icmp eq i16 %598, 0
  br i1 %599, label %600, label %606

600:                                              ; preds = %595
  %601 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %61, align 8
  %602 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %601, i64 0, i32 1
  %603 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %602 to i64*
  %604 = load atomic i64, i64* %603 monotonic, align 8
  %605 = icmp eq i64 %604, 0
  br i1 %605, label %607, label %606

606:                                              ; preds = %600, %595, %590
  br label %83

607:                                              ; preds = %102, %178, %288, %406, %463, %600, %260, %378, %581, %160, %442
  %608 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %9, align 8
  %609 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %608, i64 0, i32 3
  %610 = load %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::internal::IncrementalMarkingSchedule"** %609, align 8
  %611 = load i64, i64* %56, align 8
  %612 = load i64, i64* %45, align 8
  store i64 %611, i64* %45, align 8
  %613 = sub i64 %611, %612
  call void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"* %610, i64 %613) #14
  call void @_ZN5cppgc8internal16MarkingStateBase7PublishEv(%"class.cppgc::internal::MarkingStateBase"* nonnull %44)
  %614 = icmp eq %"class.cppgc::Visitor"* %51, null
  br i1 %614, label %620, label %615

615:                                              ; preds = %607
  %616 = bitcast %"class.cppgc::Visitor"* %51 to void (%"class.cppgc::Visitor"*)***
  %617 = load void (%"class.cppgc::Visitor"*)**, void (%"class.cppgc::Visitor"*)*** %616, align 8
  %618 = getelementptr inbounds void (%"class.cppgc::Visitor"*)*, void (%"class.cppgc::Visitor"*)** %617, i64 1
  %619 = load void (%"class.cppgc::Visitor"*)*, void (%"class.cppgc::Visitor"*)** %618, align 8
  call void %619(%"class.cppgc::Visitor"* nonnull %51) #14
  br label %620

620:                                              ; preds = %607, %615
  call void @_ZN5cppgc8internal16MarkingStateBaseD2Ev(%"class.cppgc::internal::MarkingStateBase"* nonnull %44) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %39) #14
  br label %621

621:                                              ; preds = %33, %620
  call void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE13StopTraceImplEv(%"class.cppgc::internal::StatsCollector::InternalScope"* nonnull %6) #14
  %622 = load i32, i32* %20, align 8
  %623 = icmp sgt i32 %622, 1
  br i1 %623, label %637, label %624

624:                                              ; preds = %621
  %625 = bitcast %"class.v8::base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %625) #14
  %626 = call i64 @_ZN2v84base9TimeTicks3NowEv() #14
  %627 = load i64, i64* %19, align 8
  %628 = sub nsw i64 %626, %627
  %629 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %5, i64 0, i32 0
  store i64 %628, i64* %629, align 8
  %630 = call i64 @_ZNK2v84base9TimeDelta14InMicrosecondsEv(%"class.v8::base::TimeDelta"* nonnull %5) #14
  %631 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %16, align 8
  %632 = load i32, i32* %20, align 8
  %633 = zext i32 %632 to i64
  %634 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %631, i64 0, i32 8, i32 1, i64 %633
  %635 = trunc i64 %630 to i32
  %636 = atomicrmw volatile add i32* %634, i32 %635 monotonic
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %625) #14
  br label %637

637:                                              ; preds = %621, %624
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZNK5cppgc8internal12_GLOBAL__N_121ConcurrentMarkingTask17GetMaxConcurrencyEm(%"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask"* nocapture readonly, i64) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask", %"class.cppgc::internal::(anonymous namespace)::ConcurrentMarkingTask"* %0, i64 0, i32 1
  %4 = load %"class.cppgc::internal::ConcurrentMarkerBase"*, %"class.cppgc::internal::ConcurrentMarkerBase"** %3, align 8
  %5 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkerBase", %"class.cppgc::internal::ConcurrentMarkerBase"* %4, i64 0, i32 2
  %6 = load %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::MarkingWorklists"** %5, align 8
  %7 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %6, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %6, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i64, i64* %9 monotonic, align 8
  %11 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i64, i64* %11 monotonic, align 8
  %13 = add i64 %8, %1
  %14 = add i64 %13, %10
  %15 = add i64 %14, %12
  ret i64 %15
}

declare void @_ZN5cppgc8internal26IncrementalMarkingSchedule26AddConcurrentlyMarkedBytesEm(%"class.cppgc::internal::IncrementalMarkingSchedule"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal16MarkingStateBase7PublishEv(%"class.cppgc::internal::MarkingStateBase"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1
  tail call void @_ZN4heap4base8WorklistIN5cppgc15TraceDescriptorELt512EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"* %2)
  %3 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 3
  tail call void @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %3)
  %4 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 4
  tail call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists16WeakCallbackItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"* %4)
  %5 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 5
  tail call void @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"* %5)
  %6 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 6
  tail call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists28ConcurrentMarkingBailoutItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"* %6)
  %7 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 7
  tail call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %7)
  %8 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 8
  tail call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %8)
  %9 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.heap::base::Worklist<const void **, 256>::Local"*, %"class.heap::base::Worklist<const void **, 256>::Local"** %9, align 8
  %11 = icmp eq %"class.heap::base::Worklist<const void **, 256>::Local"* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %1
  tail call void @_ZN4heap4base8WorklistIPPKvLt256EE5Local7PublishEv(%"class.heap::base::Worklist<const void **, 256>::Local"* nonnull %10)
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE14StartTraceImplEv(%"class.cppgc::internal::StatsCollector::InternalScope"*) local_unnamed_addr #7 comdat align 2 {
  %2 = alloca [2 x %"class.std::__1::unique_ptr.203"], align 16
  %3 = load atomic i64, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE14StartTraceImplEvE28trace_event_unique_atomic398 monotonic, align 8
  %4 = inttoptr i64 %3 to i8*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #14
  %8 = bitcast %"class.v8::TracingController"* %7 to i8* (%"class.v8::TracingController"*, i8*)***
  %9 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %8, align 8
  %10 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %9, i64 2
  %11 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %10, align 8
  %12 = tail call i8* %11(%"class.v8::TracingController"* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #14
  %13 = ptrtoint i8* %12 to i64
  store atomic volatile i64 %13, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE14StartTraceImplEvE28trace_event_unique_atomic398 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %6
  %15 = phi i8* [ %4, %1 ], [ %12, %6 ]
  %16 = load atomic i8, i8* %15 monotonic, align 1
  %17 = and i8 %16, 5
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %63, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 0
  %23 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %22, align 8
  %24 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %23, i64 0, i32 8, i32 3
  %25 = load i8, i8* %24, align 8
  switch i32 %21, label %35 [
    i32 0, label %26
    i32 1, label %29
    i32 3, label %32
  ]

26:                                               ; preds = %19
  %27 = icmp eq i8 %25, 1
  %28 = select i1 %27, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)
  br label %35

29:                                               ; preds = %19
  %30 = icmp eq i8 %25, 1
  %31 = select i1 %30, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0)
  br label %35

32:                                               ; preds = %19
  %33 = icmp eq i8 %25, 1
  %34 = select i1 %33, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0)
  br label %35

35:                                               ; preds = %19, %26, %29, %32
  %36 = phi i8* [ %34, %32 ], [ %31, %29 ], [ %28, %26 ], [ null, %19 ]
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.203"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #14
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.203"], [2 x %"class.std::__1::unique_ptr.203"]* %2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #14
  %39 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #14
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 66, i8* %15, i8* %36, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.203"* nonnull %38, i32 0) #14
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.203"], [2 x %"class.std::__1::unique_ptr.203"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %35
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #14
  br label %53

53:                                               ; preds = %48, %35
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.203"], [2 x %"class.std::__1::unique_ptr.203"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #14
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #14
  br label %63

63:                                               ; preds = %14, %62
  ret void
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal16MarkingStateBaseC2ERNS0_8HeapBaseERNS0_16MarkingWorklistsEPNS0_19CompactionWorklistsE(%"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::HeapBase"* dereferenceable(448), %"class.cppgc::internal::MarkingWorklists"* dereferenceable(608), %"class.cppgc::internal::CompactionWorklists"*) unnamed_addr #7 comdat align 2 {
  %5 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 0
  store %"class.cppgc::internal::HeapBase"* %1, %"class.cppgc::internal::HeapBase"** %5, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1, i32 0
  store %"class.heap::base::Worklist"* %6, %"class.heap::base::Worklist"** %7, align 8
  %8 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1, i32 1
  %9 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %9, %"class.heap::base::internal::SegmentBase"** %8, align 8
  %10 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1, i32 2
  %11 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %11, %"class.heap::base::internal::SegmentBase"** %10, align 8
  %12 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 1
  store %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %13, %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"** %12, align 8
  %14 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 2
  %15 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 3, i32 0
  store %"class.heap::base::Worklist.90"* %14, %"class.heap::base::Worklist.90"** %15, align 8
  %16 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 3, i32 1
  %17 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %17, %"class.heap::base::internal::SegmentBase"** %16, align 8
  %18 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 3, i32 2
  %19 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %19, %"class.heap::base::internal::SegmentBase"** %18, align 8
  %20 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 4
  %21 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 4, i32 0
  store %"class.heap::base::Worklist.92"* %20, %"class.heap::base::Worklist.92"** %21, align 8
  %22 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 4, i32 1
  %23 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %23, %"class.heap::base::internal::SegmentBase"** %22, align 8
  %24 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 4, i32 2
  %25 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %25, %"class.heap::base::internal::SegmentBase"** %24, align 8
  %26 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 3
  %27 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 5, i32 0
  store %"class.heap::base::Worklist.91"* %26, %"class.heap::base::Worklist.91"** %27, align 8
  %28 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 5, i32 1
  %29 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %29, %"class.heap::base::internal::SegmentBase"** %28, align 8
  %30 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 5, i32 2
  %31 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %31, %"class.heap::base::internal::SegmentBase"** %30, align 8
  %32 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 5
  %33 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 6, i32 0
  store %"class.heap::base::Worklist.93"* %32, %"class.heap::base::Worklist.93"** %33, align 8
  %34 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 6, i32 1
  %35 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %35, %"class.heap::base::internal::SegmentBase"** %34, align 8
  %36 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 6, i32 2
  %37 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %37, %"class.heap::base::internal::SegmentBase"** %36, align 8
  %38 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 6
  %39 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 7, i32 0
  store %"class.heap::base::Worklist.94"* %38, %"class.heap::base::Worklist.94"** %39, align 8
  %40 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 7, i32 1
  %41 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %41, %"class.heap::base::internal::SegmentBase"** %40, align 8
  %42 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 7, i32 2
  %43 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %43, %"class.heap::base::internal::SegmentBase"** %42, align 8
  %44 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 7
  %45 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 8, i32 0
  store %"class.heap::base::Worklist.94"* %44, %"class.heap::base::Worklist.94"** %45, align 8
  %46 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 8, i32 1
  %47 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %47, %"class.heap::base::internal::SegmentBase"** %46, align 8
  %48 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 8, i32 2
  %49 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %49, %"class.heap::base::internal::SegmentBase"** %48, align 8
  %50 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 9
  %51 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 8
  store %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %51, %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"** %50, align 8
  %52 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MarkingWorklists"* %2, i64 0, i32 9
  %53 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 10, i32 0
  store %"class.heap::base::Worklist.90"* %52, %"class.heap::base::Worklist.90"** %53, align 8
  %54 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 10, i32 1
  %55 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %55, %"class.heap::base::internal::SegmentBase"** %54, align 8
  %56 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 10, i32 2
  %57 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %57, %"class.heap::base::internal::SegmentBase"** %56, align 8
  %58 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 11
  %59 = icmp eq %"class.cppgc::internal::CompactionWorklists"* %3, null
  %60 = bitcast %"class.std::__1::unique_ptr.95"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  br i1 %59, label %78, label %61

61:                                               ; preds = %4
  %62 = bitcast %"class.std::__1::unique_ptr.95"* %58 to i64*
  %63 = ptrtoint %"class.cppgc::internal::CompactionWorklists"* %3 to i64
  %64 = tail call i8* @_Znwm(i64 24) #13
  %65 = bitcast i8* %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 8
  %67 = bitcast i8* %66 to %"class.heap::base::internal::SegmentBase"**
  %68 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %68, %"class.heap::base::internal::SegmentBase"** %67, align 8
  %69 = getelementptr inbounds i8, i8* %64, i64 16
  %70 = bitcast i8* %69 to %"class.heap::base::internal::SegmentBase"**
  %71 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  store %"class.heap::base::internal::SegmentBase"* %71, %"class.heap::base::internal::SegmentBase"** %70, align 8
  %72 = ptrtoint i8* %64 to i64
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.95"* %58, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.heap::base::Worklist<const void **, 256>::Local"*, %"class.heap::base::Worklist<const void **, 256>::Local"** %73, align 8
  store i64 %72, i64* %62, align 8
  %75 = icmp eq %"class.heap::base::Worklist<const void **, 256>::Local"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %61
  tail call void @_ZN4heap4base8WorklistIPPKvLt256EE5LocalD2Ev(%"class.heap::base::Worklist<const void **, 256>::Local"* nonnull %74) #14
  %77 = bitcast %"class.heap::base::Worklist<const void **, 256>::Local"* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %61, %76, %4
  ret void
}

declare %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIPPKvLt256EE5LocalD2Ev(%"class.heap::base::Worklist<const void **, 256>::Local"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %10, label %9, !prof !4

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %0, i64 0, i32 2
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = icmp eq %"class.heap::base::internal::SegmentBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %19, label %18, !prof !4

18:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

19:                                               ; preds = %14, %10
  %20 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %21 = icmp eq %"class.heap::base::internal::SegmentBase"* %20, %3
  %22 = or i1 %4, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.heap::base::internal::SegmentBase"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %27 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %28 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %26
  %29 = icmp eq %"class.heap::base::internal::SegmentBase"* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.heap::base::internal::SegmentBase"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5Local3PopEPS5_(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"*, %"class.cppgc::internal::HeapObjectHeader"**) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %0, i64 0, i32 2
  %4 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %3, align 8
  %5 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %4, i64 0, i32 1
  %6 = load i16, i16* %5, align 2
  %7 = icmp eq i16 %6, 0
  %8 = ptrtoint %"class.heap::base::internal::SegmentBase"* %4 to i64
  %9 = bitcast %"class.heap::base::internal::SegmentBase"* %4 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*
  br i1 %7, label %10, label %49

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %0, i64 0, i32 1
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = ptrtoint %"class.heap::base::internal::SegmentBase"* %12 to i64
  %18 = bitcast %"class.heap::base::internal::SegmentBase"** %11 to i64*
  %19 = bitcast %"class.heap::base::internal::SegmentBase"** %3 to i64*
  store i64 %8, i64* %18, align 8
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.heap::base::internal::SegmentBase"* %12 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*
  br label %49

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %0, i64 0, i32 0
  %23 = load %"class.heap::base::Worklist.90"*, %"class.heap::base::Worklist.90"** %22, align 8
  %24 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %23, i64 0, i32 1
  %25 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %59, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %23, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %29) #14
  %30 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %24, align 8
  %31 = icmp eq %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %29) #14
  br label %59

33:                                               ; preds = %28
  %34 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %30 to i64
  %35 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i64* %35, i64 1 monotonic
  %37 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %30, i64 0, i32 1
  %38 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  store atomic i64 %39, i64* %25 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %29) #14
  %40 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %3, align 8
  %41 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %42 = icmp eq %"class.heap::base::internal::SegmentBase"* %41, %40
  %43 = icmp eq %"class.heap::base::internal::SegmentBase"* %40, null
  %44 = or i1 %43, %42
  br i1 %44, label %47, label %45

45:                                               ; preds = %33
  %46 = bitcast %"class.heap::base::internal::SegmentBase"* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %33, %45
  %48 = bitcast %"class.heap::base::internal::SegmentBase"** %3 to i64*
  store i64 %34, i64* %48, align 8
  br label %49

49:                                               ; preds = %47, %16, %2
  %50 = phi %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* [ %30, %47 ], [ %20, %16 ], [ %9, %2 ]
  %51 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %50, i64 0, i32 0, i32 1
  %52 = load i16, i16* %51, align 2
  %53 = add i16 %52, -1
  store i16 %53, i16* %51, align 2
  %54 = zext i16 %53 to i64
  %55 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %50, i64 0, i32 2, i64 %54
  %56 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %1 to i64*
  store i64 %57, i64* %58, align 8
  br label %59

59:                                               ; preds = %32, %21, %49
  %60 = phi i1 [ true, %49 ], [ false, %21 ], [ false, %32 ]
  ret i1 %60
}

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #6

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal16MarkingStateBase11MarkAndPushERNS0_16HeapObjectHeaderENS_15TraceDescriptorE(%"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8), i8*, void (%"class.cppgc::Visitor"*, i8*)*) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.cppgc::internal::HeapObjectHeader"*, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 1
  %7 = load atomic i16, i16* %6 acquire, align 2
  %8 = and i16 %7, 1
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 2
  %12 = load %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"** %11, align 8
  %13 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  store %"class.cppgc::internal::HeapObjectHeader"* %1, %"class.cppgc::internal::HeapObjectHeader"** %5, align 8
  %14 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %14) #14
  %15 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %12, i64 0, i32 1, i32 0
  %16 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %5, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %5) #14
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %14) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  br label %68

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 2
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  %21 = icmp eq i16 %20, %19
  br i1 %21, label %68, label %22

22:                                               ; preds = %17
  %23 = cmpxchg i16* %18, i16 %19, i16 %20 monotonic monotonic
  %24 = extractvalue { i16, i1 } %23, 1
  br i1 %24, label %25, label %68

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1, i32 1
  %27 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %26, align 8
  %28 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %27, i64 0, i32 1
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %27, i64 0, i32 0
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %29, %31
  %33 = bitcast %"class.heap::base::internal::SegmentBase"* %27 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*
  br i1 %32, label %34, label %60, !prof !3

34:                                               ; preds = %25
  %35 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %36 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %35
  br i1 %36, label %51, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1, i32 0
  %39 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %38, align 8
  %40 = bitcast %"class.heap::base::internal::SegmentBase"** %26 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  %41 = load %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %40, align 8
  %42 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %39, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %42) #14
  %43 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %39, i64 0, i32 1
  %44 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %41, i64 0, i32 1
  %47 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = ptrtoint %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %41 to i64
  store atomic i64 %48, i64* %44 monotonic, align 8
  %49 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i64* %49, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %42) #14
  br label %51

51:                                               ; preds = %37, %34
  %52 = tail call i8* @_Znwm(i64 8208) #13
  %53 = bitcast i8* %52 to i16*
  store i16 512, i16* %53, align 2
  %54 = getelementptr inbounds i8, i8* %52, i64 2
  %55 = bitcast i8* %54 to i16*
  store i16 0, i16* %55, align 2
  %56 = getelementptr inbounds i8, i8* %52, i64 8
  %57 = bitcast i8* %56 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  store %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* null, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %57, align 8
  %58 = bitcast %"class.heap::base::internal::SegmentBase"** %26 to i8**
  store i8* %52, i8** %58, align 8
  %59 = bitcast i8* %52 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*
  br label %60

60:                                               ; preds = %25, %51
  %61 = phi %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* [ %59, %51 ], [ %33, %25 ]
  %62 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %61, i64 0, i32 0, i32 1
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, 1
  store i16 %64, i16* %62, align 2
  %65 = zext i16 %63 to i64
  %66 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %61, i64 0, i32 2, i64 %65, i32 0
  store i8* %2, i8** %66, align 8
  %67 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %61, i64 0, i32 2, i64 %65, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* %3, void (%"class.cppgc::Visitor"*, i8*)** %67, align 8
  br label %68

68:                                               ; preds = %17, %22, %60, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.cppgc::internal::HeapObjectHeader"** dereferenceable(8), %"class.cppgc::internal::HeapObjectHeader"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %1, align 8
  %5 = ptrtoint %"class.cppgc::internal::HeapObjectHeader"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %81, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !5
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %81, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br i1 %24, label %41, label %63

41:                                               ; preds = %39, %58
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %58 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %81, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = icmp ult i64 %49, %20
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %20
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %58, label %81

58:                                               ; preds = %55, %46
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to %"class.cppgc::internal::HeapObjectHeader"**
  %61 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %60, align 8
  %62 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %61, %4
  br i1 %62, label %169, label %41

63:                                               ; preds = %39, %76
  %64 = phi %"struct.std::__1::__hash_node_base"* [ %66, %76 ], [ %37, %39 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %18
  %73 = and i64 %71, %40
  %74 = icmp eq i64 %73, %33
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to %"class.cppgc::internal::HeapObjectHeader"**
  %79 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %78, align 8
  %80 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %79, %4
  br i1 %80, label %169, label %63

81:                                               ; preds = %68, %63, %55, %41, %32, %3
  %82 = phi i64 [ %33, %32 ], [ undef, %3 ], [ %33, %41 ], [ %33, %55 ], [ %33, %63 ], [ %33, %68 ]
  %83 = tail call i8* @_Znwm(i64 24) #13, !noalias !6
  %84 = getelementptr inbounds i8, i8* %83, i64 16
  %85 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %2 to i64*
  %86 = load i64, i64* %85, align 8, !noalias !6
  %87 = bitcast i8* %84 to i64*
  store i64 %86, i64* %87, align 8, !noalias !6
  %88 = getelementptr inbounds i8, i8* %83, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %18, i64* %89, align 8, !noalias !6
  %90 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %90, align 8, !noalias !6
  %91 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %20 to float
  %96 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %21, %99
  br i1 %100, label %101, label %124

101:                                              ; preds = %81
  %102 = shl i64 %20, 1
  %103 = icmp ult i64 %20, 3
  %104 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !5
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = tail call float @llvm.ceil.f32(float %109) #14
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  tail call void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %113)
  %114 = load i64, i64* %19, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %114) #14, !range !5
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %101
  %118 = add i64 %114, -1
  %119 = and i64 %118, %18
  br label %124

120:                                              ; preds = %101
  %121 = icmp ult i64 %18, %114
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %18, %114
  br label %124

124:                                              ; preds = %122, %120, %117, %81
  %125 = phi i64 [ %20, %81 ], [ %114, %117 ], [ %114, %120 ], [ %114, %122 ]
  %126 = phi i64 [ %82, %81 ], [ %119, %117 ], [ %18, %120 ], [ %123, %122 ]
  %127 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, i64 %126
  %130 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base"* %130, null
  br i1 %131, label %132, label %158

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i8* %83 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8**
  store i8* %83, i8** %137, align 8
  store %"struct.std::__1::__hash_node_base"* %133, %"struct.std::__1::__hash_node_base"** %129, align 8
  %138 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %90, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base"* %138, null
  br i1 %139, label %165, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %138, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = tail call i64 @llvm.ctpop.i64(i64 %125) #14, !range !5
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = add i64 %125, -1
  %148 = and i64 %143, %147
  br label %153

149:                                              ; preds = %140
  %150 = icmp ult i64 %143, %125
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %143, %125
  br label %153

153:                                              ; preds = %146, %149, %151
  %154 = phi i64 [ %148, %146 ], [ %152, %151 ], [ %143, %149 ]
  %155 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, i64 %154
  %157 = bitcast %"struct.std::__1::__hash_node_base"** %156 to i8**
  br label %163

158:                                              ; preds = %124
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i8* %83 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i8**
  br label %163

163:                                              ; preds = %153, %158
  %164 = phi i8** [ %162, %158 ], [ %157, %153 ]
  store i8* %83, i8** %164, align 8
  br label %165

165:                                              ; preds = %163, %132
  %166 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base"*
  %167 = load i64, i64* %91, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %91, align 8
  br label %169

169:                                              ; preds = %76, %58, %165
  %170 = phi i8 [ 1, %165 ], [ 0, %58 ], [ 0, %76 ]
  %171 = phi %"struct.std::__1::__hash_node_base"* [ %166, %165 ], [ %44, %58 ], [ %66, %76 ]
  %172 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %171, 0
  %173 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %172, i8 %170, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %173
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !9

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to %"class.cppgc::internal::HeapObjectHeader"**
  %105 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %130, align 8
  %106 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %104, align 8
  %107 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to %"class.cppgc::internal::HeapObjectHeader"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to %"class.cppgc::internal::HeapObjectHeader"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to %"class.cppgc::internal::HeapObjectHeader"**
  %157 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %147, align 8
  %158 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %156, align 8
  %159 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

declare i64 @_ZNK2v84base9TimeDelta14InMicrosecondsEv(%"class.v8::base::TimeDelta"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN5cppgc15TraceDescriptorELt512EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %9 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"* %0, i64 0, i32 0
  %12 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %11, align 8
  %13 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  %14 = load %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %13, align 8
  %15 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %15) #14
  %16 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %12, i64 0, i32 1
  %17 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %14, i64 0, i32 1
  %20 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = ptrtoint %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %14 to i64
  store atomic i64 %21, i64* %17 monotonic, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %15) #14
  br label %24

24:                                               ; preds = %7, %10
  %25 = tail call i8* @_Znwm(i64 8208) #13
  %26 = bitcast i8* %25 to i16*
  store i16 512, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %25, i64 2
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  store %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* null, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %30, align 8
  %31 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to i8**
  store i8* %25, i8** %31, align 8
  br label %32

32:                                               ; preds = %24, %1
  %33 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"* %0, i64 0, i32 2
  %34 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %63, label %38

38:                                               ; preds = %32
  %39 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %40 = icmp eq %"class.heap::base::internal::SegmentBase"* %34, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"* %0, i64 0, i32 0
  %43 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  %45 = load %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %43, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %46) #14
  %47 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %43, i64 0, i32 1
  %48 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %45, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = ptrtoint %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %45 to i64
  store atomic i64 %52, i64* %48 monotonic, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %46) #14
  br label %55

55:                                               ; preds = %38, %41
  %56 = tail call i8* @_Znwm(i64 8208) #13
  %57 = bitcast i8* %56 to i16*
  store i16 512, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = bitcast i8* %58 to i16*
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  store %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* null, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %61, align 8
  %62 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to i8**
  store i8* %56, i8** %62, align 8
  br label %63

63:                                               ; preds = %55, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %9 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %0, i64 0, i32 0
  %12 = load %"class.heap::base::Worklist.90"*, %"class.heap::base::Worklist.90"** %11, align 8
  %13 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"**
  %14 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %13, align 8
  %15 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %15) #14
  %16 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %12, i64 0, i32 1
  %17 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %14, i64 0, i32 1
  %20 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %14 to i64
  store atomic i64 %21, i64* %17 monotonic, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %15) #14
  br label %24

24:                                               ; preds = %7, %10
  %25 = tail call i8* @_Znwm(i64 144) #13
  %26 = bitcast i8* %25 to i16*
  store i16 16, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %25, i64 2
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %30, align 8
  %31 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to i8**
  store i8* %25, i8** %31, align 8
  br label %32

32:                                               ; preds = %24, %1
  %33 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %0, i64 0, i32 2
  %34 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %63, label %38

38:                                               ; preds = %32
  %39 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %40 = icmp eq %"class.heap::base::internal::SegmentBase"* %34, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %0, i64 0, i32 0
  %43 = load %"class.heap::base::Worklist.90"*, %"class.heap::base::Worklist.90"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"**
  %45 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %43, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %46) #14
  %47 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %43, i64 0, i32 1
  %48 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %45, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %45 to i64
  store atomic i64 %52, i64* %48 monotonic, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.90"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %46) #14
  br label %55

55:                                               ; preds = %38, %41
  %56 = tail call i8* @_Znwm(i64 144) #13
  %57 = bitcast i8* %56 to i16*
  store i16 16, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = bitcast i8* %58 to i16*
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %61, align 8
  %62 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to i8**
  store i8* %56, i8** %62, align 8
  br label %63

63:                                               ; preds = %55, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists16WeakCallbackItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %9 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"* %0, i64 0, i32 0
  %12 = load %"class.heap::base::Worklist.92"*, %"class.heap::base::Worklist.92"** %11, align 8
  %13 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  %14 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %13, align 8
  %15 = getelementptr inbounds %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.92"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %15) #14
  %16 = getelementptr inbounds %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.92"* %12, i64 0, i32 1
  %17 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %14, i64 0, i32 1
  %20 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %14 to i64
  store atomic i64 %21, i64* %17 monotonic, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.92"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %15) #14
  br label %24

24:                                               ; preds = %7, %10
  %25 = tail call i8* @_Znwm(i64 1040) #13
  %26 = bitcast i8* %25 to i16*
  store i16 64, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %25, i64 2
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %30, align 8
  %31 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to i8**
  store i8* %25, i8** %31, align 8
  br label %32

32:                                               ; preds = %24, %1
  %33 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"* %0, i64 0, i32 2
  %34 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %63, label %38

38:                                               ; preds = %32
  %39 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %40 = icmp eq %"class.heap::base::internal::SegmentBase"* %34, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"* %0, i64 0, i32 0
  %43 = load %"class.heap::base::Worklist.92"*, %"class.heap::base::Worklist.92"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  %45 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.92"* %43, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %46) #14
  %47 = getelementptr inbounds %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.92"* %43, i64 0, i32 1
  %48 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %45, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %45 to i64
  store atomic i64 %52, i64* %48 monotonic, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.92"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %46) #14
  br label %55

55:                                               ; preds = %38, %41
  %56 = tail call i8* @_Znwm(i64 1040) #13
  %57 = bitcast i8* %56 to i16*
  store i16 64, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = bitcast i8* %58 to i16*
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %61, align 8
  %62 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to i8**
  store i8* %56, i8** %62, align 8
  br label %63

63:                                               ; preds = %55, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %9 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"* %0, i64 0, i32 0
  %12 = load %"class.heap::base::Worklist.91"*, %"class.heap::base::Worklist.91"** %11, align 8
  %13 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"**
  %14 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %13, align 8
  %15 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %15) #14
  %16 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %12, i64 0, i32 1
  %17 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %14, i64 0, i32 1
  %20 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %14 to i64
  store atomic i64 %21, i64* %17 monotonic, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %15) #14
  br label %24

24:                                               ; preds = %7, %10
  %25 = tail call i8* @_Znwm(i64 528) #13
  %26 = bitcast i8* %25 to i16*
  store i16 64, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %25, i64 2
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %30, align 8
  %31 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to i8**
  store i8* %25, i8** %31, align 8
  br label %32

32:                                               ; preds = %24, %1
  %33 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"* %0, i64 0, i32 2
  %34 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %63, label %38

38:                                               ; preds = %32
  %39 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %40 = icmp eq %"class.heap::base::internal::SegmentBase"* %34, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"* %0, i64 0, i32 0
  %43 = load %"class.heap::base::Worklist.91"*, %"class.heap::base::Worklist.91"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"**
  %45 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %43, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %46) #14
  %47 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %43, i64 0, i32 1
  %48 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %45, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* %45 to i64
  store atomic i64 %52, i64* %48 monotonic, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.91"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %46) #14
  br label %55

55:                                               ; preds = %38, %41
  %56 = tail call i8* @_Znwm(i64 528) #13
  %57 = bitcast i8* %56 to i16*
  store i16 64, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = bitcast i8* %58 to i16*
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"** %61, align 8
  %62 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to i8**
  store i8* %56, i8** %62, align 8
  br label %63

63:                                               ; preds = %55, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists28ConcurrentMarkingBailoutItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %9 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"* %0, i64 0, i32 0
  %12 = load %"class.heap::base::Worklist.93"*, %"class.heap::base::Worklist.93"** %11, align 8
  %13 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"**
  %14 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %13, align 8
  %15 = getelementptr inbounds %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.93"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %15) #14
  %16 = getelementptr inbounds %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.93"* %12, i64 0, i32 1
  %17 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %14, i64 0, i32 1
  %20 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %14 to i64
  store atomic i64 %21, i64* %17 monotonic, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.93"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %15) #14
  br label %24

24:                                               ; preds = %7, %10
  %25 = tail call i8* @_Znwm(i64 1552) #13
  %26 = bitcast i8* %25 to i16*
  store i16 64, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %25, i64 2
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %30, align 8
  %31 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to i8**
  store i8* %25, i8** %31, align 8
  br label %32

32:                                               ; preds = %24, %1
  %33 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"* %0, i64 0, i32 2
  %34 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %63, label %38

38:                                               ; preds = %32
  %39 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %40 = icmp eq %"class.heap::base::internal::SegmentBase"* %34, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"* %0, i64 0, i32 0
  %43 = load %"class.heap::base::Worklist.93"*, %"class.heap::base::Worklist.93"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"**
  %45 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.93"* %43, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %46) #14
  %47 = getelementptr inbounds %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.93"* %43, i64 0, i32 1
  %48 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %45, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %45 to i64
  store atomic i64 %52, i64* %48 monotonic, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.93"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %46) #14
  br label %55

55:                                               ; preds = %38, %41
  %56 = tail call i8* @_Znwm(i64 1552) #13
  %57 = bitcast i8* %56 to i16*
  store i16 64, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = bitcast i8* %58 to i16*
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %61, align 8
  %62 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to i8**
  store i8* %56, i8** %62, align 8
  br label %63

63:                                               ; preds = %55, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %9 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 0
  %12 = load %"class.heap::base::Worklist.94"*, %"class.heap::base::Worklist.94"** %11, align 8
  %13 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  %14 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %13, align 8
  %15 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %15) #14
  %16 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %12, i64 0, i32 1
  %17 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %14, i64 0, i32 1
  %20 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %14 to i64
  store atomic i64 %21, i64* %17 monotonic, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %15) #14
  br label %24

24:                                               ; preds = %7, %10
  %25 = tail call i8* @_Znwm(i64 2064) #13
  %26 = bitcast i8* %25 to i16*
  store i16 64, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %25, i64 2
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %30, align 8
  %31 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to i8**
  store i8* %25, i8** %31, align 8
  br label %32

32:                                               ; preds = %24, %1
  %33 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 2
  %34 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %63, label %38

38:                                               ; preds = %32
  %39 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %40 = icmp eq %"class.heap::base::internal::SegmentBase"* %34, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 0
  %43 = load %"class.heap::base::Worklist.94"*, %"class.heap::base::Worklist.94"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  %45 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %43, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %46) #14
  %47 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %43, i64 0, i32 1
  %48 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %45, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %45 to i64
  store atomic i64 %52, i64* %48 monotonic, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %46) #14
  br label %55

55:                                               ; preds = %38, %41
  %56 = tail call i8* @_Znwm(i64 2064) #13
  %57 = bitcast i8* %56 to i16*
  store i16 64, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = bitcast i8* %58 to i16*
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %61, align 8
  %62 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to i8**
  store i8* %56, i8** %62, align 8
  br label %63

63:                                               ; preds = %55, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIPPKvLt256EE5Local7PublishEv(%"class.heap::base::Worklist<const void **, 256>::Local"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %9 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %0, i64 0, i32 0
  %12 = load %"class.heap::base::Worklist.98"*, %"class.heap::base::Worklist.98"** %11, align 8
  %13 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to %"class.heap::base::Worklist<const void **, 256>::Segment"**
  %14 = load %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"class.heap::base::Worklist<const void **, 256>::Segment"** %13, align 8
  %15 = getelementptr inbounds %"class.heap::base::Worklist.98", %"class.heap::base::Worklist.98"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %15) #14
  %16 = getelementptr inbounds %"class.heap::base::Worklist.98", %"class.heap::base::Worklist.98"* %12, i64 0, i32 1
  %17 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Segment", %"class.heap::base::Worklist<const void **, 256>::Segment"* %14, i64 0, i32 1
  %20 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = ptrtoint %"class.heap::base::Worklist<const void **, 256>::Segment"* %14 to i64
  store atomic i64 %21, i64* %17 monotonic, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist.98", %"class.heap::base::Worklist.98"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %15) #14
  br label %24

24:                                               ; preds = %7, %10
  %25 = tail call i8* @_Znwm(i64 2064) #13
  %26 = bitcast i8* %25 to i16*
  store i16 256, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %25, i64 2
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to %"class.heap::base::Worklist<const void **, 256>::Segment"**
  store %"class.heap::base::Worklist<const void **, 256>::Segment"* null, %"class.heap::base::Worklist<const void **, 256>::Segment"** %30, align 8
  %31 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to i8**
  store i8* %25, i8** %31, align 8
  br label %32

32:                                               ; preds = %24, %1
  %33 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %0, i64 0, i32 2
  %34 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %63, label %38

38:                                               ; preds = %32
  %39 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %40 = icmp eq %"class.heap::base::internal::SegmentBase"* %34, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %0, i64 0, i32 0
  %43 = load %"class.heap::base::Worklist.98"*, %"class.heap::base::Worklist.98"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to %"class.heap::base::Worklist<const void **, 256>::Segment"**
  %45 = load %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"class.heap::base::Worklist<const void **, 256>::Segment"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist.98", %"class.heap::base::Worklist.98"* %43, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %46) #14
  %47 = getelementptr inbounds %"class.heap::base::Worklist.98", %"class.heap::base::Worklist.98"* %43, i64 0, i32 1
  %48 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Segment", %"class.heap::base::Worklist<const void **, 256>::Segment"* %45, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = ptrtoint %"class.heap::base::Worklist<const void **, 256>::Segment"* %45 to i64
  store atomic i64 %52, i64* %48 monotonic, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist.98", %"class.heap::base::Worklist.98"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %46) #14
  br label %55

55:                                               ; preds = %38, %41
  %56 = tail call i8* @_Znwm(i64 2064) #13
  %57 = bitcast i8* %56 to i16*
  store i16 256, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = bitcast i8* %58 to i16*
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to %"class.heap::base::Worklist<const void **, 256>::Segment"**
  store %"class.heap::base::Worklist<const void **, 256>::Segment"* null, %"class.heap::base::Worklist<const void **, 256>::Segment"** %61, align 8
  %62 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to i8**
  store i8* %56, i8** %62, align 8
  br label %63

63:                                               ; preds = %55, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal16MarkingStateBaseD2Ev(%"class.cppgc::internal::MarkingStateBase"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.heap::base::Worklist<const void **, 256>::Local"*, %"class.heap::base::Worklist<const void **, 256>::Local"** %2, align 8
  store %"class.heap::base::Worklist<const void **, 256>::Local"* null, %"class.heap::base::Worklist<const void **, 256>::Local"** %2, align 8
  %4 = icmp eq %"class.heap::base::Worklist<const void **, 256>::Local"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4heap4base8WorklistIPPKvLt256EE5LocalD2Ev(%"class.heap::base::Worklist<const void **, 256>::Local"* nonnull %3) #14
  %6 = bitcast %"class.heap::base::Worklist<const void **, 256>::Local"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 10
  tail call void @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %8) #14
  %9 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 8
  tail call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %9) #14
  %10 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 7
  tail call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %10) #14
  %11 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 6
  tail call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists28ConcurrentMarkingBailoutItemELt64EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"* %11) #14
  %12 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 5
  tail call void @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt64EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"* %12) #14
  %13 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 4
  tail call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists16WeakCallbackItemELt64EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"* %13) #14
  %14 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 3
  tail call void @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %14) #14
  %15 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1
  tail call void @_ZN4heap4base8WorklistIN5cppgc15TraceDescriptorELt512EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"* %15) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt16EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %10, label %9, !prof !4

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local"* %0, i64 0, i32 2
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = icmp eq %"class.heap::base::internal::SegmentBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %19, label %18, !prof !4

18:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

19:                                               ; preds = %14, %10
  %20 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %21 = icmp eq %"class.heap::base::internal::SegmentBase"* %20, %3
  %22 = or i1 %4, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.heap::base::internal::SegmentBase"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %27 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %28 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %26
  %29 = icmp eq %"class.heap::base::internal::SegmentBase"* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.heap::base::internal::SegmentBase"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %10, label %9, !prof !4

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 2
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = icmp eq %"class.heap::base::internal::SegmentBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %19, label %18, !prof !4

18:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

19:                                               ; preds = %14, %10
  %20 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %21 = icmp eq %"class.heap::base::internal::SegmentBase"* %20, %3
  %22 = or i1 %4, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.heap::base::internal::SegmentBase"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %27 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %28 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %26
  %29 = icmp eq %"class.heap::base::internal::SegmentBase"* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.heap::base::internal::SegmentBase"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists28ConcurrentMarkingBailoutItemELt64EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %10, label %9, !prof !4

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local"* %0, i64 0, i32 2
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = icmp eq %"class.heap::base::internal::SegmentBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %19, label %18, !prof !4

18:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

19:                                               ; preds = %14, %10
  %20 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %21 = icmp eq %"class.heap::base::internal::SegmentBase"* %20, %3
  %22 = or i1 %4, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.heap::base::internal::SegmentBase"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %27 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %28 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %26
  %29 = icmp eq %"class.heap::base::internal::SegmentBase"* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.heap::base::internal::SegmentBase"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIPN5cppgc8internal16HeapObjectHeaderELt64EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %10, label %9, !prof !4

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local"* %0, i64 0, i32 2
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = icmp eq %"class.heap::base::internal::SegmentBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %19, label %18, !prof !4

18:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

19:                                               ; preds = %14, %10
  %20 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %21 = icmp eq %"class.heap::base::internal::SegmentBase"* %20, %3
  %22 = or i1 %4, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.heap::base::internal::SegmentBase"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %27 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %28 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %26
  %29 = icmp eq %"class.heap::base::internal::SegmentBase"* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.heap::base::internal::SegmentBase"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists16WeakCallbackItemELt64EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %10, label %9, !prof !4

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local"* %0, i64 0, i32 2
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = icmp eq %"class.heap::base::internal::SegmentBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %19, label %18, !prof !4

18:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

19:                                               ; preds = %14, %10
  %20 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %21 = icmp eq %"class.heap::base::internal::SegmentBase"* %20, %3
  %22 = or i1 %4, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.heap::base::internal::SegmentBase"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %27 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %28 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %26
  %29 = icmp eq %"class.heap::base::internal::SegmentBase"* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.heap::base::internal::SegmentBase"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN5cppgc15TraceDescriptorELt512EE5LocalD2Ev(%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %10, label %9, !prof !4

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local"* %0, i64 0, i32 2
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = icmp eq %"class.heap::base::internal::SegmentBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %19, label %18, !prof !4

18:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

19:                                               ; preds = %14, %10
  %20 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %21 = icmp eq %"class.heap::base::internal::SegmentBase"* %20, %3
  %22 = or i1 %4, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.heap::base::internal::SegmentBase"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %27 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #14
  %28 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %26
  %29 = icmp eq %"class.heap::base::internal::SegmentBase"* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.heap::base::internal::SegmentBase"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE13StopTraceImplEv(%"class.cppgc::internal::StatsCollector::InternalScope"*) local_unnamed_addr #7 comdat align 2 {
  %2 = alloca [2 x %"class.std::__1::unique_ptr.203"], align 16
  %3 = alloca <2 x i8*>, align 16
  %4 = alloca [2 x i8], align 1
  %5 = alloca [2 x i64], align 16
  %6 = load atomic i64, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE13StopTraceImplEvE28trace_event_unique_atomic432 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %1
  %10 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #14
  %11 = bitcast %"class.v8::TracingController"* %10 to i8* (%"class.v8::TracingController"*, i8*)***
  %12 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %12, i64 2
  %14 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %13, align 8
  %15 = tail call i8* %14(%"class.v8::TracingController"* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #14
  %16 = ptrtoint i8* %15 to i64
  store atomic volatile i64 %16, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE1EE13StopTraceImplEvE28trace_event_unique_atomic432 monotonic, align 8
  br label %17

17:                                               ; preds = %1, %9
  %18 = phi i8* [ %7, %1 ], [ %15, %9 ]
  %19 = load atomic i8, i8* %18 monotonic, align 1
  %20 = and i8 %19, 5
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %79, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 0
  %26 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %25, align 8
  %27 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %26, i64 0, i32 8, i32 3
  %28 = load i8, i8* %27, align 8
  switch i32 %24, label %38 [
    i32 0, label %29
    i32 1, label %32
    i32 3, label %35
  ]

29:                                               ; preds = %22
  %30 = icmp eq i8 %28, 1
  %31 = select i1 %30, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)
  br label %38

32:                                               ; preds = %22
  %33 = icmp eq i8 %28, 1
  %34 = select i1 %33, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0)
  br label %38

35:                                               ; preds = %22
  %36 = icmp eq i8 %28, 1
  %37 = select i1 %36, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0)
  br label %38

38:                                               ; preds = %22, %29, %32, %35
  %39 = phi i8* [ %37, %35 ], [ %34, %32 ], [ %31, %29 ], [ null, %22 ]
  %40 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %26, i64 0, i32 8, i32 2
  %41 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %26, i64 0, i32 8, i32 4
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 1
  %44 = load i64, i64* %40, align 8
  %45 = bitcast <2 x i8*>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #14
  %46 = getelementptr inbounds <2 x i8*>, <2 x i8*>* %3, i64 0, i64 0
  store <2 x i8*> <i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0)>, <2 x i8*>* %3, align 16
  %47 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %47) #14
  %48 = bitcast [2 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #14
  %49 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 0
  store i8 2, i8* %47, align 1
  store i64 %44, i64* %49, align 16
  %50 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1
  %51 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 1
  store i8 1, i8* %50, align 1
  %52 = zext i1 %43 to i64
  store i64 %52, i64* %51, align 8
  %53 = bitcast [2 x %"class.std::__1::unique_ptr.203"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #14
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.203"], [2 x %"class.std::__1::unique_ptr.203"]* %2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 0, i64 16, i1 false) #14
  %55 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #14
  %56 = bitcast %"class.v8::TracingController"* %55 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)***
  %57 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)** %57, i64 3
  %59 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.203"*, i32)** %58, align 8
  %60 = call i64 %59(%"class.v8::TracingController"* %55, i8 signext 69, i8* %18, i8* %39, i8* null, i64 0, i64 0, i32 2, i8** nonnull %46, i8* nonnull %47, i64* nonnull %49, %"class.std::__1::unique_ptr.203"* nonnull %54, i32 0) #14
  %61 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.203"], [2 x %"class.std::__1::unique_ptr.203"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %62 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %61, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %61, align 8
  %63 = icmp eq %"class.v8::ConvertableToTraceFormat"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %38
  %65 = bitcast %"class.v8::ConvertableToTraceFormat"* %62 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %66 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %66, i64 1
  %68 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %67, align 8
  call void %68(%"class.v8::ConvertableToTraceFormat"* nonnull %62) #14
  br label %69

69:                                               ; preds = %64, %38
  %70 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.203"], [2 x %"class.std::__1::unique_ptr.203"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %70, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %70, align 16
  %72 = icmp eq %"class.v8::ConvertableToTraceFormat"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.v8::ConvertableToTraceFormat"* %71 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %75 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %75, i64 1
  %77 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %76, align 8
  call void %77(%"class.v8::ConvertableToTraceFormat"* nonnull %71) #14
  br label %78

78:                                               ; preds = %69, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #14
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %47) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #14
  br label %79

79:                                               ; preds = %17, %78
  ret void
}

declare void @_ZN5cppgc8internal24ConcurrentMarkingVisitorC1ERNS0_8HeapBaseERNS0_22ConcurrentMarkingStateE(%"class.cppgc::internal::ConcurrentMarkingVisitor"*, %"class.cppgc::internal::HeapBase"* dereferenceable(448), %"class.cppgc::internal::ConcurrentMarkingState"* dereferenceable(240)) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i64 0, i64 65}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
