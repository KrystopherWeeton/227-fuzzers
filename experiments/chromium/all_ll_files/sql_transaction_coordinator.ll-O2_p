; ModuleID = '../../third_party/blink/renderer/modules/webdatabase/sql_transaction_coordinator.cc'
source_filename = "../../third_party/blink/renderer/modules/webdatabase/sql_transaction_coordinator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SQLTransactionCoordinator" = type { %"class.WTF::HashMap", i8, [7 x i8] }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::SQLTransactionCoordinator::CoordinationInfo" = type { %"class.WTF::Deque", %"class.WTF::HashSet", %"class.blink::CrossThreadPersistent" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CrossThreadPersistent"*, i32, i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.259" }
%"class.WTF::HashTable.259" = type <{ %"class.blink::CrossThreadPersistent"*, i32, i32, i32, [4 x i8] }>
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::SQLTransactionBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransactionBackend" = type { %"class.blink::SQLTransactionStateMachine", %"class.blink::CrossThreadPersistent.5", %"class.blink::CrossThreadPersistent.210", %"class.blink::CrossThreadPersistent.242", %"class.blink::Member.244", %"class.std::__1::unique_ptr", i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::Mutex", %"class.WTF::Deque.248", %"class.std::__1::unique_ptr.253" }
%"class.blink::SQLTransactionStateMachine" = type { i32 (...)**, i32, i32 }
%"class.blink::CrossThreadPersistent.5" = type { %"class.blink::PersistentBase.6" }
%"class.blink::PersistentBase.6" = type { %"class.blink::SQLTransaction"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransaction" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SQLTransactionStateMachine.9", %"class.blink::Member", %"class.blink::Member.10", %"class.blink::Member.12", %"class.blink::Member.16", %"class.blink::Member.20", i8, [7 x i8], %"class.std::__1::unique_ptr", %"class.blink::probe::AsyncTaskId", i8, [7 x i8] }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::SQLTransactionStateMachine.9" = type { i32 (...)**, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Database"* }
%"class.blink::Database" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.267, %class.scoped_refptr.267, %"class.blink::Member.268", %class.scoped_refptr.270, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"struct.std::__1::atomic.206", i8, %"class.blink::DatabaseAuthorizer", %"class.blink::SQLiteDatabase", %"class.WTF::Deque", %"class.WTF::Mutex", i8, i8, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%class.scoped_refptr.267 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.289", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.267 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.289" = type { %"class.absl::optional_internal::optional_data.290" }
%"class.absl::optional_internal::optional_data.290" = type { %"class.absl::optional_internal::optional_data_base.291" }
%"class.absl::optional_internal::optional_data_base.291" = type { %"class.absl::optional_internal::optional_data_dtor_base.292" }
%"class.absl::optional_internal::optional_data_dtor_base.292" = type { i8, %union.anon.293 }
%union.anon.293 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::DatabaseContext"* }
%"class.blink::DatabaseContext" = type opaque
%class.scoped_refptr.270 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.271" }
%"struct.std::__1::atomic.271" = type { %"struct.std::__1::__atomic_base.272" }
%"struct.std::__1::__atomic_base.272" = type { %"struct.std::__1::__atomic_base.273" }
%"struct.std::__1::__atomic_base.273" = type { %"struct.std::__1::__cxx_atomic_impl.274" }
%"struct.std::__1::__cxx_atomic_impl.274" = type { %"struct.std::__1::__cxx_atomic_base_impl.275" }
%"struct.std::__1::__cxx_atomic_base_impl.275" = type { i32 }
%"struct.std::__1::atomic.206" = type { %"struct.std::__1::__atomic_base.207" }
%"struct.std::__1::__atomic_base.207" = type { %"struct.std::__1::__cxx_atomic_impl.208" }
%"struct.std::__1::__cxx_atomic_impl.208" = type { %"struct.std::__1::__cxx_atomic_base_impl.209" }
%"struct.std::__1::__cxx_atomic_base_impl.209" = type { i8 }
%"class.blink::DatabaseAuthorizer" = type { i32, i8, %"class.WTF::String" }
%"class.blink::SQLiteDatabase" = type <{ %struct.sqlite3*, i32, i8, [3 x i8], %"class.WTF::Mutex", %"class.blink::DatabaseAuthorizer"*, i32, [4 x i8], %"class.WTF::Mutex", i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%struct.sqlite3 = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.278 }
%union.anon.278 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.282 }
%class.scoped_refptr.282 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.283", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.283" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.284" }
%"struct.std::__1::atomic.284" = type { %"struct.std::__1::__atomic_base.285" }
%"struct.std::__1::__atomic_base.285" = type { %"struct.std::__1::__atomic_base.286" }
%"struct.std::__1::__atomic_base.286" = type { %"struct.std::__1::__cxx_atomic_impl.287" }
%"struct.std::__1::__cxx_atomic_impl.287" = type { %"struct.std::__1::__cxx_atomic_base_impl.288" }
%"struct.std::__1::__cxx_atomic_base_impl.288" = type { i8 }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::SQLTransactionBackend"* }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::SQLTransaction::OnProcessCallback"* }
%"class.blink::SQLTransaction::OnProcessCallback" = type { i32 (...)** }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::SQLTransaction::OnSuccessCallback"* }
%"class.blink::SQLTransaction::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::SQLTransaction::OnErrorCallback"* }
%"class.blink::SQLTransaction::OnErrorCallback" = type { i32 (...)** }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::CrossThreadPersistent.210" = type { %"class.blink::PersistentBase.211" }
%"class.blink::PersistentBase.211" = type { %"class.blink::SQLStatementBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLStatementBackend" = type <{ %"class.blink::Member.214", %"class.WTF::String", %"class.WTF::Vector.228", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.blink::Member.233", i32, [4 x i8] }>
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::SQLStatement"* }
%"class.blink::SQLStatement" = type { %"class.blink::Member.218", %"class.blink::Member.220", %"class.blink::Member.224", %"class.blink::probe::AsyncTaskId" }
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::SQLStatementBackend"* }
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::SQLStatement::OnSuccessCallback"* }
%"class.blink::SQLStatement::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::Member.224" = type { %"class.blink::MemberBase.225" }
%"class.blink::MemberBase.225" = type { %"class.blink::SQLStatement::OnErrorCallback"* }
%"class.blink::SQLStatement::OnErrorCallback" = type { i32 (...)** }
%"class.WTF::Vector.228" = type { %"class.WTF::VectorBuffer.229" }
%"class.WTF::VectorBuffer.229" = type { %"class.WTF::VectorBufferBase.230" }
%"class.WTF::VectorBufferBase.230" = type { %"class.blink::SQLValue"*, i32, i32 }
%"class.blink::SQLValue" = type { i32, double, %"class.WTF::String" }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::SQLResultSet"* }
%"class.blink::SQLResultSet" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.235", i64, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::SQLResultSetRowList"* }
%"class.blink::SQLResultSetRowList" = type { %"class.blink::ScriptWrappable", %"class.WTF::Vector.237", %"class.WTF::Vector.228" }
%"class.WTF::Vector.237" = type { %"class.WTF::VectorBuffer.238" }
%"class.WTF::VectorBuffer.238" = type { %"class.WTF::VectorBufferBase.239" }
%"class.WTF::VectorBufferBase.239" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::CrossThreadPersistent.242" = type { %"class.blink::PersistentBase.243" }
%"class.blink::PersistentBase.243" = type { %"class.blink::Database"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::SQLTransactionWrapper"* }
%"class.blink::SQLTransactionWrapper" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::SQLErrorData"* }
%"class.blink::SQLErrorData" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::Deque.248" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.blink::CrossThreadPersistent.210"*, i32, i32 }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::SQLiteTransaction"* }
%"class.blink::SQLiteTransaction" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.29", i32, [4 x i8], %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.164", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.170", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.206", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.145", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i64 }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::Worklist.118"* }
%"class.blink::Worklist.118" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.125", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { i64 }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { float }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.148", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.170" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.173" }
%"class.WTF::VectorBuffer.173" = type { %"class.WTF::VectorBufferBase.174" }
%"class.WTF::VectorBufferBase.174" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.97"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.104"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.262" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE9TakeFirstEv = comdat any

$_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev = comdat any

$_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE9push_backIRPS3_EEvOT_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j = comdat any

$_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_21SQLTransactionBackendEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF5MoverIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEENS_18PartitionAllocatorENS_10HashTraitsIS4_EELb0EE4MoveEOS4_RS4_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS1_S5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_IN5blink25SQLTransactionCoordinator16CoordinationInfoEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S9_EEEEvRT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink25SQLTransactionCoordinator16CoordinationInfoaSEOS1_ = comdat any

$_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CrossThreadPersistentINS2_21SQLTransactionBackendEEEEEmm = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEENS_18PartitionAllocatorEE4MoveEPS4_S7_S7_b = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE12DeleteBucketERKS4_ = comdat any

$_ZNK3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE4findEPS3_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CrossThreadPersistent<blink::SQLTransactionBackend>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink25SQLTransactionCoordinator16CoordinationInfoEEEEEPKcv = private unnamed_addr constant [130 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, blink::SQLTransactionCoordinator::CoordinationInfo>]\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1

@_ZN5blink25SQLTransactionCoordinatorC1Ev = hidden unnamed_addr alias void (%"class.blink::SQLTransactionCoordinator"*), void (%"class.blink::SQLTransactionCoordinator"*)* @_ZN5blink25SQLTransactionCoordinatorC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25SQLTransactionCoordinatorC2Ev(%"class.blink::SQLTransactionCoordinator"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::SQLTransactionCoordinator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false) #8
  %3 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink25SQLTransactionCoordinator5TraceEPNS_7VisitorE(%"class.blink::SQLTransactionCoordinator"* nocapture, %"class.blink::Visitor"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25SQLTransactionCoordinator26ProcessPendingTransactionsERNS0_16CoordinationInfoE(%"class.blink::SQLTransactionCoordinator"* nocapture readnone, %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SQLTransactionBackend"*, align 8
  %4 = alloca %"class.blink::CrossThreadPersistent", align 8
  %5 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 2, i32 0
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %5, i64 0, i32 0
  %7 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %6, align 8
  %8 = icmp eq %"class.blink::SQLTransactionBackend"* %7, null
  br i1 %8, label %9, label %109

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %109, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.blink::SQLTransactionBackend"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  store %"class.blink::SQLTransactionBackend"* inttoptr (i64 -6148914691236517206 to %"class.blink::SQLTransactionBackend"*), %"class.blink::SQLTransactionBackend"** %3, align 8
  %18 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %18, align 8
  %20 = zext i32 %12 to i64
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %19, i64 %20
  %22 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %22, align 8
  store %"class.blink::SQLTransactionBackend"* %23, %"class.blink::SQLTransactionBackend"** %3, align 8
  %24 = getelementptr inbounds %"class.blink::SQLTransactionBackend", %"class.blink::SQLTransactionBackend"* %23, i64 0, i32 12
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %66, label %27

27:                                               ; preds = %16
  %28 = bitcast %"class.blink::CrossThreadPersistent"* %4 to i8*
  %29 = bitcast %"class.blink::CrossThreadPersistent"* %4 to i64*
  %30 = bitcast %"class.blink::SQLTransactionBackend"** %3 to i64*
  %31 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 0, i32 0, i32 1
  %32 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %31 to i64*
  %33 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 1, i32 0
  br label %34

34:                                               ; preds = %27, %58
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8
  call void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE9TakeFirstEv(%"class.blink::CrossThreadPersistent"* nonnull sret %4, %"class.WTF::Deque"* %10)
  %35 = load i64, i64* %29, align 8
  store i64 %35, i64* %30, align 8
  %36 = load atomic i64, i64* %32 acquire, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %52, label %38

38:                                               ; preds = %34
  %39 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %40 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %39, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %40) #8
  %41 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %42 = load atomic i64, i64* %32 monotonic, align 8
  %43 = inttoptr i64 %42 to %"class.blink::PersistentNode"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %41, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::CrossThreadPersistentRegion"* %41 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %42 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %50, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %46, align 8
  br label %51

51:                                               ; preds = %45, %38
  store atomic i64 0, i64* %32 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %40) #8
  br label %52

52:                                               ; preds = %34, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8
  %53 = call { %"class.blink::CrossThreadPersistent"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.259"* %33, %"class.blink::SQLTransactionBackend"** nonnull dereferenceable(8) %3, %"class.blink::SQLTransactionBackend"** nonnull dereferenceable(8) %3) #8
  %54 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %3, align 8
  call void @_ZN5blink21SQLTransactionBackend12LockAcquiredEv(%"class.blink::SQLTransactionBackend"* %54) #8
  %55 = load i32, i32* %11, align 8
  %56 = load i32, i32* %13, align 4
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %108, label %58

58:                                               ; preds = %52
  %59 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %18, align 8
  %60 = zext i32 %55 to i64
  %61 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %59, i64 %60, i32 0, i32 0
  %62 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::SQLTransactionBackend", %"class.blink::SQLTransactionBackend"* %62, i64 0, i32 12
  %64 = load i8, i8* %63, align 2, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %108, label %34

66:                                               ; preds = %16
  %67 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 1, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %108

70:                                               ; preds = %66
  %71 = add i32 %12, 1
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %19, i64 %72
  br label %74

74:                                               ; preds = %94, %70
  %75 = phi %"class.blink::CrossThreadPersistent"* [ %95, %94 ], [ %21, %70 ]
  %76 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %75, i64 0, i32 0, i32 1
  %77 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %76 to i64*
  %78 = load atomic i64, i64* %77 acquire, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %94, label %80

80:                                               ; preds = %74
  %81 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %82 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %81, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %82) #8
  %83 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %84 = load atomic i64, i64* %77 monotonic, align 8
  %85 = inttoptr i64 %84 to %"class.blink::PersistentNode"*
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %83, i64 0, i32 0, i32 0
  %89 = bitcast %"class.blink::CrossThreadPersistentRegion"* %83 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = inttoptr i64 %84 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %85, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %92, align 8
  store %"class.blink::PersistentNode"* %85, %"class.blink::PersistentNode"** %88, align 8
  br label %93

93:                                               ; preds = %87, %80
  store atomic i64 0, i64* %77 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %82) #8
  br label %94

94:                                               ; preds = %93, %74
  %95 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %75, i64 1
  %96 = icmp eq %"class.blink::CrossThreadPersistent"* %95, %73
  br i1 %96, label %97, label %74

97:                                               ; preds = %94
  %98 = load i32, i32* %11, align 8
  %99 = add i32 %98, 1
  %100 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, -1
  %103 = icmp eq i32 %98, %102
  %104 = select i1 %103, i32 0, i32 %99
  store i32 %104, i32* %11, align 8
  %105 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %3, align 8
  %106 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %107 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %106, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %107) #8
  tail call void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %5, %"class.blink::SQLTransactionBackend"* %105) #8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %107) #8
  tail call void @_ZN5blink21SQLTransactionBackend12LockAcquiredEv(%"class.blink::SQLTransactionBackend"* %105) #8
  br label %108

108:                                              ; preds = %58, %52, %66, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %109

109:                                              ; preds = %2, %9, %108
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE9TakeFirstEv(%"class.blink::CrossThreadPersistent"* noalias sret, %"class.WTF::Deque"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0
  %9 = bitcast %"class.blink::CrossThreadPersistent"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #8
  %10 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %11 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %10, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %11) #8
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 %7, i32 0, i32 0
  %13 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %12, align 8
  tail call void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %8, %"class.blink::SQLTransactionBackend"* %13) #8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %11) #8
  %14 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %15 = load i32, i32* %5, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %14, i64 %16
  %18 = add i32 %15, 1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %14, i64 %19
  br label %21

21:                                               ; preds = %41, %2
  %22 = phi %"class.blink::CrossThreadPersistent"* [ %42, %41 ], [ %17, %2 ]
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %22, i64 0, i32 0, i32 1
  %24 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %23 to i64*
  %25 = load atomic i64, i64* %24 acquire, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %41, label %27

27:                                               ; preds = %21
  %28 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %29 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %28, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %29) #8
  %30 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %31 = load atomic i64, i64* %24 monotonic, align 8
  %32 = inttoptr i64 %31 to %"class.blink::PersistentNode"*
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %30, i64 0, i32 0, i32 0
  %36 = bitcast %"class.blink::CrossThreadPersistentRegion"* %30 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = inttoptr i64 %31 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %39, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %35, align 8
  br label %40

40:                                               ; preds = %34, %27
  store atomic i64 0, i64* %24 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %29) #8
  br label %41

41:                                               ; preds = %40, %21
  %42 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %22, i64 1
  %43 = icmp eq %"class.blink::CrossThreadPersistent"* %42, %20
  br i1 %43, label %44, label %21

44:                                               ; preds = %41
  %45 = load i32, i32* %5, align 8
  %46 = add i32 %45, 1
  %47 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -1
  %50 = icmp eq i32 %45, %49
  %51 = select i1 %50, i32 0, i32 %46
  store i32 %51, i32* %5, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink21SQLTransactionBackend12LockAcquiredEv(%"class.blink::SQLTransactionBackend"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25SQLTransactionCoordinator11AcquireLockEPNS_21SQLTransactionBackendE(%"class.blink::SQLTransactionCoordinator"*, %"class.blink::SQLTransactionBackend"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SQLTransactionBackend"*, align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", align 8
  store %"class.blink::SQLTransactionBackend"* %1, %"class.blink::SQLTransactionBackend"** %3, align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::SQLTransactionBackend", %"class.blink::SQLTransactionBackend"* %1, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::Database"*, %"class.blink::Database"** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8Database16StringIdentifierEv(%"class.blink::Database"* %9) #8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %7, align 8
  %11 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 0, i32 0
  %12 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %13 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %12, 0
  %14 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %18
  %20 = icmp eq %"struct.WTF::KeyValuePair"* %13, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %2
  %22 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #8
  %23 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 64, i1 false)
  %24 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS1_S5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* nonnull dereferenceable(64) %5) #8
  %25 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %24, 0
  call void @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #8
  br label %26

26:                                               ; preds = %2, %21
  %27 = phi %"struct.WTF::KeyValuePair"* [ %25, %21 ], [ %13, %2 ]
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %28, i64 0, i32 0
  call void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE9push_backIRPS3_EEvOT_(%"class.WTF::Deque"* %29, %"class.blink::SQLTransactionBackend"** nonnull dereferenceable(8) %3)
  call void @_ZN5blink25SQLTransactionCoordinator26ProcessPendingTransactionsERNS0_16CoordinationInfoE(%"class.blink::SQLTransactionCoordinator"* undef, %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* dereferenceable(64) %28)
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #8
  br label %45

45:                                               ; preds = %26, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %3 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %2 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %8 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %7, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %8) #8
  %9 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %10 = load atomic i64, i64* %3 monotonic, align 8
  %11 = inttoptr i64 %10 to %"class.blink::PersistentNode"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %9, i64 0, i32 0, i32 0
  %15 = bitcast %"class.blink::CrossThreadPersistentRegion"* %9 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = inttoptr i64 %10 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %11, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %18, align 8
  store %"class.blink::PersistentNode"* %11, %"class.blink::PersistentNode"** %14, align 8
  br label %19

19:                                               ; preds = %13, %6
  store atomic i64 0, i64* %3 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %8) #8
  br label %20

20:                                               ; preds = %1, %19
  %21 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %21, align 8
  %23 = icmp eq %"class.blink::CrossThreadPersistent"* %22, null
  br i1 %23, label %27, label %24, !prof !3

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  tail call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent"* nonnull %22, i32 %26) #8
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %21, align 8
  br label %27

27:                                               ; preds = %20, %24
  %28 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %29, align 8
  %31 = icmp eq %"class.blink::CrossThreadPersistent"* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::CrossThreadPersistent"* %30 to i8*
  %34 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  tail call void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %28) #8
  %40 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %32
  %43 = phi i8* [ %41, %39 ], [ %33, %32 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #8
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %29, align 8
  br label %44

44:                                               ; preds = %27, %42
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE9push_backIRPS3_EEvOT_(%"class.WTF::Deque"*, %"class.blink::SQLTransactionBackend"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  br i1 %5, label %11, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, 1
  %10 = icmp eq i32 %9, %4
  br i1 %10, label %20, label %22

11:                                               ; preds = %2
  %12 = icmp eq i32 %7, 0
  %13 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  br i1 %12, label %18, label %15

15:                                               ; preds = %11
  %16 = add i32 %14, -1
  %17 = icmp eq i32 %7, %16
  br i1 %17, label %20, label %22

18:                                               ; preds = %11
  %19 = icmp eq i32 %14, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %18, %15, %8
  tail call void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %0) #8
  %21 = load i32, i32* %6, align 4
  br label %22

22:                                               ; preds = %8, %15, %18, %20
  %23 = phi i32 [ %7, %8 ], [ %7, %15 ], [ 0, %18 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %24, align 8
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %25, i64 %26
  %28 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, -1
  %31 = icmp eq i32 %23, %30
  %32 = add i32 %23, 1
  %33 = select i1 %31, i32 0, i32 %32
  store i32 %33, i32* %6, align 4
  %34 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %1, align 8
  %35 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %27, i64 0, i32 0, i32 0
  store %"class.blink::SQLTransactionBackend"* %34, %"class.blink::SQLTransactionBackend"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %25, i64 %26, i32 0, i32 1
  %37 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %37, align 8
  %38 = ptrtoint %"class.blink::SQLTransactionBackend"* %34 to i64
  switch i64 %38, label %39 [
    i64 0, label %58
    i64 -1, label %58
  ]

39:                                               ; preds = %22
  %40 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %41 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %40, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %41) #8
  %42 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %43 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %46, label %49, !prof !4

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %42, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %47) #8
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  br label %49

49:                                               ; preds = %46, %39
  %50 = phi %"class.blink::PersistentNode"* [ %48, %46 ], [ %44, %39 ]
  %51 = bitcast %"class.blink::PersistentNode"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::CrossThreadPersistentRegion"* %42 to i64*
  store i64 %52, i64* %53, align 8
  %54 = bitcast %"class.blink::PersistentNode"* %50 to %"class.blink::CrossThreadPersistent"**
  store %"class.blink::CrossThreadPersistent"* %27, %"class.blink::CrossThreadPersistent"** %54, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %50, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %55, align 8
  %56 = ptrtoint %"class.blink::PersistentNode"* %50 to i64
  %57 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %36 to i64*
  store atomic i64 %56, i64* %57 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %41) #8
  br label %58

58:                                               ; preds = %22, %22, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25SQLTransactionCoordinator11ReleaseLockEPNS_21SQLTransactionBackendE(%"class.blink::SQLTransactionCoordinator"*, %"class.blink::SQLTransactionBackend"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %92

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::SQLTransactionBackend", %"class.blink::SQLTransactionBackend"* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::Database"*, %"class.blink::Database"** %10, align 8
  %12 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8Database16StringIdentifierEv(%"class.blink::Database"* %11) #8
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 0, i32 0
  %14 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %13, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %15 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %14, 0
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1
  %17 = getelementptr inbounds %"class.blink::SQLTransactionBackend", %"class.blink::SQLTransactionBackend"* %1, i64 0, i32 12
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %54, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %21, i64 0, i32 0
  %23 = call { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } @_ZNK3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE4findEPS3_(%"class.WTF::HashTable.259"* %22, %"class.blink::SQLTransactionBackend"* %1) #8
  %24 = extractvalue { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } %23, 0
  %25 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %21, i64 0, i32 0, i32 0
  %26 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %25, align 8
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1, i32 1, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %26, i64 %29
  %31 = icmp eq %"class.blink::CrossThreadPersistent"* %30, %24
  br i1 %31, label %75, label %32

32:                                               ; preds = %20
  call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE12DeleteBucketERKS4_(%"class.blink::CrossThreadPersistent"* dereferenceable(16) %24) #8
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1, i32 1, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, 1
  %36 = and i32 %35, 2147483647
  %37 = and i32 %34, -2147483648
  %38 = or i32 %36, %37
  store i32 %38, i32* %33, align 8
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1, i32 1, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, -1
  store i32 %41, i32* %39, align 4
  %42 = mul i32 %41, 6
  %43 = load i32, i32* %27, align 8
  %44 = icmp ult i32 %42, %43
  %45 = icmp ugt i32 %43, 8
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %75

47:                                               ; preds = %32
  %48 = lshr i32 %43, 1
  %49 = zext i32 %48 to i64
  %50 = shl nuw nsw i64 %49, 4
  %51 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %50, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 0, i64 %50, i1 false) #8
  %52 = bitcast i8* %51 to %"class.blink::CrossThreadPersistent"*
  %53 = call %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.259"* %22, %"class.blink::CrossThreadPersistent"* %52, i32 %48, %"class.blink::CrossThreadPersistent"* null) #8
  br label %75

54:                                               ; preds = %7
  %55 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %56 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %55, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %56) #8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1, i32 2, i32 0, i32 0
  store %"class.blink::SQLTransactionBackend"* null, %"class.blink::SQLTransactionBackend"** %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1, i32 2, i32 0, i32 1
  %59 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %58 to i64*
  %60 = load atomic i64, i64* %59 acquire, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %74, label %62

62:                                               ; preds = %54
  %63 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %64 = load atomic i64, i64* %59 monotonic, align 8
  %65 = inttoptr i64 %64 to %"class.blink::PersistentNode"*
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %63, i64 0, i32 0, i32 0
  %69 = bitcast %"class.blink::CrossThreadPersistentRegion"* %63 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = inttoptr i64 %64 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %65, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %72, align 8
  store %"class.blink::PersistentNode"* %65, %"class.blink::PersistentNode"** %68, align 8
  br label %73

73:                                               ; preds = %67, %62
  store atomic i64 0, i64* %59 release, align 8
  br label %74

74:                                               ; preds = %54, %73
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %56) #8
  br label %75

75:                                               ; preds = %47, %32, %20, %74
  call void @_ZN5blink25SQLTransactionCoordinator26ProcessPendingTransactionsERNS0_16CoordinationInfoE(%"class.blink::SQLTransactionCoordinator"* undef, %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* dereferenceable(64) %16)
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #8
  br label %91

91:                                               ; preds = %75, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  br label %92

92:                                               ; preds = %2, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25SQLTransactionCoordinator8ShutdownEv(%"class.blink::SQLTransactionCoordinator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CrossThreadPersistent", align 8
  %3 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 1
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SQLTransactionCoordinator", %"class.blink::SQLTransactionCoordinator"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  br i1 %6, label %32, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"struct.WTF::KeyValuePair"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"struct.WTF::KeyValuePair"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, %12
  br i1 %21, label %32, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"struct.WTF::KeyValuePair"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %12
  br i1 %24, label %32, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.blink::CrossThreadPersistent"* %2 to i8*
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 1
  %29 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %28 to i64*
  br label %70

30:                                               ; preds = %153
  %31 = zext i32 %156 to i64
  br label %32

32:                                               ; preds = %19, %30, %1, %22
  %33 = phi %"struct.WTF::KeyValuePair"* [ %8, %22 ], [ %8, %1 ], [ %155, %30 ], [ %8, %19 ]
  %34 = phi i32 [ %10, %22 ], [ %10, %1 ], [ %156, %30 ], [ %10, %19 ]
  %35 = phi i64 [ %11, %22 ], [ %11, %1 ], [ %31, %30 ], [ %11, %19 ]
  %36 = icmp eq %"struct.WTF::KeyValuePair"* %33, null
  br i1 %36, label %69, label %37

37:                                               ; preds = %32
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %37, %63
  %40 = phi i64 [ %64, %63 ], [ 0, %37 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 %40
  %42 = bitcast %"struct.WTF::KeyValuePair"* %41 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, inttoptr (i64 -1 to i8*)
  br i1 %44, label %63, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 %40, i32 1
  call void @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %46) #8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %63

63:                                               ; preds = %62, %59, %45, %39
  %64 = add nuw nsw i64 %40, 1
  %65 = icmp eq i64 %64, %35
  br i1 %65, label %66, label %39

66:                                               ; preds = %63, %37
  %67 = bitcast %"struct.WTF::KeyValuePair"* %33 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %67) #8
  %68 = bitcast %"class.blink::SQLTransactionCoordinator"* %0 to i64*
  store atomic i64 0, i64* %68 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %4, align 4
  br label %69

69:                                               ; preds = %32, %66
  ret void

70:                                               ; preds = %25, %153
  %71 = phi %"struct.WTF::KeyValuePair"* [ %23, %25 ], [ %154, %153 ]
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 1, i32 2, i32 0, i32 0
  %73 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %72, align 8
  %74 = icmp eq %"class.blink::SQLTransactionBackend"* %73, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %70
  call void @_ZN5blink21SQLTransactionBackend34NotifyDatabaseThreadIsShuttingDownEv(%"class.blink::SQLTransactionBackend"* nonnull %73) #8
  br label %76

76:                                               ; preds = %70, %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 1, i32 1, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 1, i32 1, i32 0, i32 0
  %81 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %80, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 1, i32 1, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %81, i64 %84
  br i1 %79, label %98, label %86

86:                                               ; preds = %76
  %87 = icmp eq i32 %83, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %86, %92
  %89 = phi %"class.blink::CrossThreadPersistent"* [ %93, %92 ], [ %81, %86 ]
  %90 = bitcast %"class.blink::CrossThreadPersistent"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  switch i64 %91, label %95 [
    i64 -1, label %92
    i64 0, label %92
  ]

92:                                               ; preds = %88, %88
  %93 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %89, i64 1
  %94 = icmp eq %"class.blink::CrossThreadPersistent"* %93, %85
  br i1 %94, label %98, label %88

95:                                               ; preds = %88, %86
  %96 = phi %"class.blink::CrossThreadPersistent"* [ %81, %86 ], [ %89, %88 ]
  %97 = icmp eq %"class.blink::CrossThreadPersistent"* %96, %85
  br i1 %97, label %98, label %106

98:                                               ; preds = %92, %106, %119, %116, %76, %95
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 1, i32 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 1, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %143, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 1, i32 0
  br label %121

106:                                              ; preds = %95, %119
  %107 = phi %"class.blink::CrossThreadPersistent"* [ %113, %119 ], [ %96, %95 ]
  %108 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %108, align 8
  call void @_ZN5blink21SQLTransactionBackend34NotifyDatabaseThreadIsShuttingDownEv(%"class.blink::SQLTransactionBackend"* %109) #8
  %110 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %107, i64 1
  %111 = icmp eq %"class.blink::CrossThreadPersistent"* %110, %85
  br i1 %111, label %98, label %112

112:                                              ; preds = %106, %116
  %113 = phi %"class.blink::CrossThreadPersistent"* [ %117, %116 ], [ %110, %106 ]
  %114 = bitcast %"class.blink::CrossThreadPersistent"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  switch i64 %115, label %119 [
    i64 -1, label %116
    i64 0, label %116
  ]

116:                                              ; preds = %112, %112
  %117 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %113, i64 1
  %118 = icmp eq %"class.blink::CrossThreadPersistent"* %117, %85
  br i1 %118, label %98, label %112

119:                                              ; preds = %112
  %120 = icmp eq %"class.blink::CrossThreadPersistent"* %113, %85
  br i1 %120, label %98, label %106

121:                                              ; preds = %104, %139
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  call void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE9TakeFirstEv(%"class.blink::CrossThreadPersistent"* nonnull sret %2, %"class.WTF::Deque"* %105)
  %122 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %27, align 8
  %123 = load atomic i64, i64* %29 acquire, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %139, label %125

125:                                              ; preds = %121
  %126 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %127 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %126, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %127) #8
  %128 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %129 = load atomic i64, i64* %29 monotonic, align 8
  %130 = inttoptr i64 %129 to %"class.blink::PersistentNode"*
  %131 = icmp eq i64 %129, 0
  br i1 %131, label %138, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %128, i64 0, i32 0, i32 0
  %134 = bitcast %"class.blink::CrossThreadPersistentRegion"* %128 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = inttoptr i64 %129 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %130, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %137, align 8
  store %"class.blink::PersistentNode"* %130, %"class.blink::PersistentNode"** %133, align 8
  br label %138

138:                                              ; preds = %132, %125
  store atomic i64 0, i64* %29 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %127) #8
  br label %139

139:                                              ; preds = %121, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  call void @_ZN5blink21SQLTransactionBackend34NotifyDatabaseThreadIsShuttingDownEv(%"class.blink::SQLTransactionBackend"* %122) #8
  %140 = load i32, i32* %99, align 8
  %141 = load i32, i32* %101, align 4
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %143, label %121

143:                                              ; preds = %139, %98
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 1
  %145 = icmp eq %"struct.WTF::KeyValuePair"* %144, %12
  br i1 %145, label %153, label %146

146:                                              ; preds = %143, %150
  %147 = phi %"struct.WTF::KeyValuePair"* [ %151, %150 ], [ %144, %143 ]
  %148 = bitcast %"struct.WTF::KeyValuePair"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  switch i64 %149, label %153 [
    i64 -1, label %150
    i64 0, label %150
  ]

150:                                              ; preds = %146, %146
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %147, i64 1
  %152 = icmp eq %"struct.WTF::KeyValuePair"* %151, %12
  br i1 %152, label %153, label %146

153:                                              ; preds = %146, %150, %143
  %154 = phi %"struct.WTF::KeyValuePair"* [ %12, %143 ], [ %12, %150 ], [ %147, %146 ]
  %155 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %156 = load i32, i32* %9, align 8
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %155, i64 %157
  %159 = icmp eq %"struct.WTF::KeyValuePair"* %154, %158
  br i1 %159, label %30, label %70
}

declare void @_ZN5blink21SQLTransactionBackend34NotifyDatabaseThreadIsShuttingDownEv(%"class.blink::SQLTransactionBackend"*) local_unnamed_addr #4

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #4

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #4

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink8Database16StringIdentifierEv(%"class.blink::Database"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %32, %2
  %7 = bitcast %"class.blink::CrossThreadPersistent"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #8
  ret void

8:                                                ; preds = %32, %4
  %9 = phi i64 [ 0, %4 ], [ %33, %32 ]
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 %9, i32 0, i32 0
  %11 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %10, align 8
  %12 = icmp eq %"class.blink::SQLTransactionBackend"* %11, inttoptr (i64 -1 to %"class.blink::SQLTransactionBackend"*)
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 %9, i32 0, i32 1
  %15 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %14 to i64*
  %16 = load atomic i64, i64* %15 acquire, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %13
  %19 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %20 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %19, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %20) #8
  %21 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %22 = load atomic i64, i64* %15 monotonic, align 8
  %23 = inttoptr i64 %22 to %"class.blink::PersistentNode"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %21, i64 0, i32 0, i32 0
  %27 = bitcast %"class.blink::CrossThreadPersistentRegion"* %21 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %22 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %30, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %26, align 8
  br label %31

31:                                               ; preds = %25, %18
  store atomic i64 0, i64* %15 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %20) #8
  br label %32

32:                                               ; preds = %31, %13, %8
  %33 = add nuw nsw i64 %9, 1
  %34 = icmp eq i64 %33, %5
  br i1 %34, label %6, label %8
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 %9
  br i1 %6, label %39, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %101, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %36
  %17 = phi %"class.blink::CrossThreadPersistent"* [ %37, %36 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %17, i64 0, i32 0, i32 1
  %19 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %18 to i64*
  %20 = load atomic i64, i64* %19 acquire, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %24 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %23, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %24) #8
  %25 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %26 = load atomic i64, i64* %19 monotonic, align 8
  %27 = inttoptr i64 %26 to %"class.blink::PersistentNode"*
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %25, i64 0, i32 0, i32 0
  %31 = bitcast %"class.blink::CrossThreadPersistentRegion"* %25 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = inttoptr i64 %26 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %30, align 8
  br label %35

35:                                               ; preds = %29, %22
  store atomic i64 0, i64* %19 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %24) #8
  br label %36

36:                                               ; preds = %35, %16
  %37 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %17, i64 1
  %38 = icmp eq %"class.blink::CrossThreadPersistent"* %37, %10
  br i1 %38, label %101, label %16

39:                                               ; preds = %1
  %40 = icmp eq i32 %5, 0
  br i1 %40, label %67, label %41

41:                                               ; preds = %39, %61
  %42 = phi %"class.blink::CrossThreadPersistent"* [ %62, %61 ], [ %8, %39 ]
  %43 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %42, i64 0, i32 0, i32 1
  %44 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %43 to i64*
  %45 = load atomic i64, i64* %44 acquire, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %61, label %47

47:                                               ; preds = %41
  %48 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %49 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %48, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %49) #8
  %50 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %51 = load atomic i64, i64* %44 monotonic, align 8
  %52 = inttoptr i64 %51 to %"class.blink::PersistentNode"*
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %50, i64 0, i32 0, i32 0
  %56 = bitcast %"class.blink::CrossThreadPersistentRegion"* %50 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = inttoptr i64 %51 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %59, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %55, align 8
  br label %60

60:                                               ; preds = %54, %47
  store atomic i64 0, i64* %44 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %49) #8
  br label %61

61:                                               ; preds = %60, %41
  %62 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %42, i64 1
  %63 = icmp eq %"class.blink::CrossThreadPersistent"* %62, %10
  br i1 %63, label %64, label %41

64:                                               ; preds = %61
  %65 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %7, align 8
  %66 = load i32, i32* %2, align 8
  br label %67

67:                                               ; preds = %64, %39
  %68 = phi i32 [ %66, %64 ], [ %3, %39 ]
  %69 = phi %"class.blink::CrossThreadPersistent"* [ %65, %64 ], [ %8, %39 ]
  %70 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %69, i64 %72
  %74 = icmp eq i32 %68, %71
  br i1 %74, label %101, label %75

75:                                               ; preds = %67
  %76 = zext i32 %68 to i64
  %77 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %69, i64 %76
  br label %78

78:                                               ; preds = %75, %98
  %79 = phi %"class.blink::CrossThreadPersistent"* [ %99, %98 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %79, i64 0, i32 0, i32 1
  %81 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %80 to i64*
  %82 = load atomic i64, i64* %81 acquire, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %98, label %84

84:                                               ; preds = %78
  %85 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %86 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %85, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %86) #8
  %87 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %88 = load atomic i64, i64* %81 monotonic, align 8
  %89 = inttoptr i64 %88 to %"class.blink::PersistentNode"*
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %87, i64 0, i32 0, i32 0
  %93 = bitcast %"class.blink::CrossThreadPersistentRegion"* %87 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %88 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %89, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %96, align 8
  store %"class.blink::PersistentNode"* %89, %"class.blink::PersistentNode"** %92, align 8
  br label %97

97:                                               ; preds = %91, %84
  store atomic i64 0, i64* %81 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %86) #8
  br label %98

98:                                               ; preds = %97, %78
  %99 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %79, i64 1
  %100 = icmp eq %"class.blink::CrossThreadPersistent"* %99, %73
  br i1 %100, label %101, label %78

101:                                              ; preds = %36, %98, %67, %11
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::SQLTransactionBackend"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::SQLTransactionBackend"* %1, %"class.blink::SQLTransactionBackend"** %3, align 8
  %4 = ptrtoint %"class.blink::SQLTransactionBackend"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !4

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #8
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SQLTransactionBackend"**
  %5 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #8
  %7 = icmp eq %"class.blink::SQLTransactionBackend"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SQLTransactionBackend"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21SQLTransactionBackendEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #8
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21SQLTransactionBackendEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLTransactionBackend"*
  tail call void @_ZNK5blink21SQLTransactionBackend5TraceEPNS_7VisitorE(%"class.blink::SQLTransactionBackend"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink21SQLTransactionBackend5TraceEPNS_7VisitorE(%"class.blink::SQLTransactionBackend"*, %"class.blink::Visitor"*) local_unnamed_addr #4

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CrossThreadPersistent"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.259"*, %"class.blink::SQLTransactionBackend"** dereferenceable(8), %"class.blink::SQLTransactionBackend"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 0
  %5 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  %6 = icmp eq %"class.blink::CrossThreadPersistent"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.259"* %0, %"class.blink::CrossThreadPersistent"* null)
  %9 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::CrossThreadPersistent"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SQLTransactionBackend"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %40, align 8
  %42 = icmp eq %"class.blink::SQLTransactionBackend"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SQLTransactionBackend"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SQLTransactionBackend"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::CrossThreadPersistent"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::CrossThreadPersistent"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::SQLTransactionBackend"* %59, %43
  br i1 %64, label %103, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::SQLTransactionBackend"* %59, inttoptr (i64 -1 to %"class.blink::SQLTransactionBackend"*)
  %67 = select i1 %66, %"class.blink::CrossThreadPersistent"* %60, %"class.blink::CrossThreadPersistent"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %73, align 8
  %75 = icmp eq %"class.blink::SQLTransactionBackend"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::CrossThreadPersistent"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::CrossThreadPersistent"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #8
  %80 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::CrossThreadPersistent"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %2, align 8
  %89 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %87, i64 0, i32 0
  %90 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %91 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %90, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %91) #8
  tail call void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %89, %"class.blink::SQLTransactionBackend"* %88) #8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %91) #8
  %92 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %86
  %102 = tail call %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.259"* %0, %"class.blink::CrossThreadPersistent"* %87)
  br label %103

103:                                              ; preds = %58, %86, %101
  %104 = phi i8 [ 1, %86 ], [ 1, %101 ], [ 0, %58 ]
  %105 = phi %"class.blink::CrossThreadPersistent"* [ %87, %86 ], [ %102, %101 ], [ %60, %58 ]
  %106 = insertvalue { %"class.blink::CrossThreadPersistent"*, i8 } undef, %"class.blink::CrossThreadPersistent"* %105, 0
  %107 = insertvalue { %"class.blink::CrossThreadPersistent"*, i8 } %106, i8 %104, 1
  ret { %"class.blink::CrossThreadPersistent"*, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.259"*, %"class.blink::CrossThreadPersistent"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"class.blink::CrossThreadPersistent"*
  %37 = call %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.259"* %0, %"class.blink::CrossThreadPersistent"* %36, i32 %32, %"class.blink::CrossThreadPersistent"* %1) #8
  ret %"class.blink::CrossThreadPersistent"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.259"*, %"class.blink::CrossThreadPersistent"*, i32, %"class.blink::CrossThreadPersistent"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.259", align 8
  %6 = bitcast %"class.WTF::HashTable.259"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.259"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::CrossThreadPersistent"* %1, %"class.blink::CrossThreadPersistent"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.blink::CrossThreadPersistent"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.259"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.259"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %15, align 8
  %23 = ptrtoint %"class.blink::CrossThreadPersistent"* %22 to i64
  br label %42

24:                                               ; preds = %61
  %25 = bitcast %"class.WTF::HashTable.259"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.259"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %62, %24 ]
  %33 = phi %"class.blink::CrossThreadPersistent"* [ null, %16 ], [ %65, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %63, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"class.blink::CrossThreadPersistent"*
  call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent"* nonnull %37, i32 %34) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"class.blink::CrossThreadPersistent"* %33

42:                                               ; preds = %21, %61
  %43 = phi i64 [ %62, %61 ], [ %23, %21 ]
  %44 = phi i32 [ %63, %61 ], [ %13, %21 ]
  %45 = phi %"class.blink::CrossThreadPersistent"* [ %64, %61 ], [ %22, %21 ]
  %46 = phi %"class.blink::CrossThreadPersistent"* [ %65, %61 ], [ null, %21 ]
  %47 = phi i32 [ %66, %61 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %45, i64 %48
  %50 = bitcast %"class.blink::CrossThreadPersistent"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %61
    i64 0, label %61
  ]

52:                                               ; preds = %42
  %53 = call { %"class.blink::CrossThreadPersistent"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.259"* nonnull %5, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %49) #8
  %54 = extractvalue { %"class.blink::CrossThreadPersistent"*, i8 } %53, 0
  call void @_ZN3WTF5MoverIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEENS_18PartitionAllocatorENS_10HashTraitsIS4_EELb0EE4MoveEOS4_RS4_(%"class.blink::CrossThreadPersistent"* dereferenceable(16) %49, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %54) #8
  %55 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %15, align 8
  %56 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %55, i64 %48
  %57 = icmp eq %"class.blink::CrossThreadPersistent"* %56, %3
  %58 = select i1 %57, %"class.blink::CrossThreadPersistent"* %54, %"class.blink::CrossThreadPersistent"* %46
  %59 = load i32, i32* %12, align 8
  %60 = ptrtoint %"class.blink::CrossThreadPersistent"* %55 to i64
  br label %61

61:                                               ; preds = %42, %42, %52
  %62 = phi i64 [ %43, %42 ], [ %60, %52 ], [ %43, %42 ]
  %63 = phi i32 [ %44, %42 ], [ %59, %52 ], [ %44, %42 ]
  %64 = phi %"class.blink::CrossThreadPersistent"* [ %45, %42 ], [ %55, %52 ], [ %45, %42 ]
  %65 = phi %"class.blink::CrossThreadPersistent"* [ %46, %42 ], [ %58, %52 ], [ %46, %42 ]
  %66 = add i32 %47, 1
  %67 = icmp eq i32 %66, %63
  br i1 %67, label %24, label %42
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CrossThreadPersistent"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.259"*, %"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 0
  %4 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::CrossThreadPersistent"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 %31
  %33 = ptrtoint %"class.blink::CrossThreadPersistent"* %32 to i64
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %34, align 8
  %36 = icmp eq %"class.blink::SQLTransactionBackend"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::SQLTransactionBackend"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"class.blink::CrossThreadPersistent"* %75 to i64
  %54 = inttoptr i64 %70 to %"class.blink::CrossThreadPersistent"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"class.blink::CrossThreadPersistent"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"class.blink::CrossThreadPersistent"* %57, null
  %59 = ptrtoint %"class.blink::CrossThreadPersistent"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::SQLTransactionBackend"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::SQLTransactionBackend"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::SQLTransactionBackend"* %63, inttoptr (i64 -1 to %"class.blink::SQLTransactionBackend"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 %74
  %76 = ptrtoint %"class.blink::CrossThreadPersistent"* %75 to i64
  %77 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %75, i64 0, i32 0, i32 0
  %78 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %77, align 8
  %79 = icmp eq %"class.blink::SQLTransactionBackend"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"class.blink::CrossThreadPersistent"*
  %84 = insertvalue { %"class.blink::CrossThreadPersistent"*, i8 } undef, %"class.blink::CrossThreadPersistent"* %83, 0
  %85 = insertvalue { %"class.blink::CrossThreadPersistent"*, i8 } %84, i8 %82, 1
  ret { %"class.blink::CrossThreadPersistent"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEENS_18PartitionAllocatorENS_10HashTraitsIS4_EELb0EE4MoveEOS4_RS4_(%"class.blink::CrossThreadPersistent"* dereferenceable(16), %"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #8
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #8
  br label %22

22:                                               ; preds = %2, %21
  %23 = bitcast %"class.blink::CrossThreadPersistent"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #8
  %24 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %25 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %24, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #8
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0, i32 0
  %27 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %26, align 8
  tail call void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %3, %"class.blink::SQLTransactionBackend"* %27) #8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #8
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #8
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS1_S5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %77, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #8
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %77, label %70

70:                                               ; preds = %68
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_IN5blink25SQLTransactionCoordinator16CoordinationInfoEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S9_EEEEvRT1_(%"struct.WTF::KeyValuePair"* nonnull dereferenceable(72) %59) #8
  %71 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 2147483647
  %74 = and i32 %73, 2147483647
  %75 = and i32 %72, -2147483648
  %76 = or i32 %74, %75
  store i32 %76, i32* %71, align 8
  br label %77

77:                                               ; preds = %24, %68, %70
  %78 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %98, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %98

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i33
  %90 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #8
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !4

95:                                               ; preds = %86
  tail call void @llvm.trap() #8
  unreachable

96:                                               ; preds = %86
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %87, align 4
  br label %98

98:                                               ; preds = %96, %81, %77
  %99 = ptrtoint %"class.WTF::StringImpl"* %79 to i64
  %100 = bitcast %"struct.WTF::KeyValuePair"* %78 to i64*
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  store i64 %99, i64* %100, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #8
  br label %117

117:                                              ; preds = %98, %113, %116
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 0, i32 1
  %119 = tail call dereferenceable(64) %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoaSEOS1_(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %118, %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* dereferenceable(64) %2) #8
  %120 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %117
  %130 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %78)
  br label %131

131:                                              ; preds = %54, %117, %129
  %132 = phi i8 [ 1, %117 ], [ 1, %129 ], [ 0, %54 ]
  %133 = phi %"struct.WTF::KeyValuePair"* [ %78, %117 ], [ %130, %129 ], [ %47, %54 ]
  %134 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %133, 0
  %135 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %134, i8 %132, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 72
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink25SQLTransactionCoordinator16CoordinationInfoEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %41, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_IN5blink25SQLTransactionCoordinator16CoordinationInfoEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S9_EEEEvRT1_(%"struct.WTF::KeyValuePair"* dereferenceable(72) %40) #8
  %41 = add nuw nsw i64 %39, 1
  %42 = icmp eq i64 %41, %33
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %31
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %74

24:                                               ; preds = %174
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %175, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %178, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %176, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %70, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %65, %39
  %42 = phi i64 [ 0, %39 ], [ %66, %65 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %65, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1
  call void @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %48) #8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #8
  br label %65

65:                                               ; preds = %64, %61, %47, %41
  %66 = add nuw nsw i64 %42, 1
  %67 = icmp eq i64 %66, %40
  br i1 %67, label %68, label %41

68:                                               ; preds = %65, %37
  %69 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %70

70:                                               ; preds = %28, %68
  %71 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, -2147483648
  store i32 %73, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair"* %33

74:                                               ; preds = %21, %174
  %75 = phi i64 [ %175, %174 ], [ %23, %21 ]
  %76 = phi i32 [ %176, %174 ], [ %13, %21 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %177, %174 ], [ %22, %21 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %178, %174 ], [ null, %21 ]
  %79 = phi i32 [ %179, %174 ], [ 0, %21 ]
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"struct.WTF::KeyValuePair"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  switch i64 %84, label %85 [
    i64 -1, label %174
    i64 0, label %174
  ]

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  %87 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %86) #8
  %88 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %87, 0
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1
  call void @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %89) #8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #8
  br label %106

106:                                              ; preds = %85, %102, %105
  %107 = load i64, i64* %83, align 8
  %108 = bitcast %"struct.WTF::KeyValuePair"* %88 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 0, i32 2
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1, i32 0, i32 1
  %114 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false) #8
  %115 = load i32, i32* %113, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = icmp ugt i32 %115, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = select i1 %118, i32 %120, i32 %117
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  store i32 %121, i32* %122, align 4
  %123 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %109 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %89 to i64*
  %126 = load i64, i64* %125, align 8
  store atomic i64 %126, i64* %123 monotonic, align 8
  store atomic i64 %124, i64* %125 monotonic, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = load i32, i32* %119, align 4
  store i32 %129, i32* %127, align 4
  store i32 %128, i32* %119, align 4
  %130 = load i32, i32* %112, align 4
  %131 = load i32, i32* %122, align 4
  store i32 %131, i32* %112, align 4
  store i32 %130, i32* %122, align 4
  %132 = load i32, i32* %110, align 4
  %133 = load i32, i32* %113, align 4
  store i32 %133, i32* %110, align 4
  store i32 %132, i32* %113, align 4
  %134 = load i32, i32* %111, align 4
  %135 = load i32, i32* %116, align 4
  store i32 %135, i32* %111, align 4
  store i32 %134, i32* %116, align 4
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 1
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1, i32 1
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 1, i32 0, i32 1
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 1, i32 0, i32 2
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 1, i32 0, i32 3
  %141 = bitcast %"class.WTF::HashSet"* %137 to i64*
  %142 = bitcast %"class.WTF::HashSet"* %136 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 20, i1 false) #8
  %143 = load i64, i64* %141, align 8
  %144 = bitcast %"class.WTF::HashSet"* %136 to i64*
  store atomic i64 0, i64* %141 monotonic, align 8
  store atomic i64 %143, i64* %144 monotonic, align 8
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1, i32 1, i32 0, i32 1
  %146 = load i32, i32* %138, align 4
  %147 = load i32, i32* %145, align 4
  store i32 %147, i32* %138, align 4
  store i32 %146, i32* %145, align 4
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1, i32 1, i32 0, i32 2
  %149 = load i32, i32* %139, align 4
  %150 = load i32, i32* %148, align 4
  store i32 %150, i32* %139, align 4
  store i32 %149, i32* %148, align 4
  %151 = load i32, i32* %140, align 8
  %152 = and i32 %151, 2147483647
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1, i32 1, i32 0, i32 3
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 2147483647
  %156 = and i32 %151, -2147483648
  %157 = or i32 %155, %156
  store i32 %157, i32* %140, align 8
  %158 = load i32, i32* %153, align 8
  %159 = and i32 %158, -2147483648
  %160 = or i32 %159, %152
  store i32 %160, i32* %153, align 8
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 2
  %162 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %161, i64 0, i32 0
  %163 = bitcast %"class.blink::CrossThreadPersistent"* %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 16, i1 false) #8
  %164 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %165 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %164, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %165) #8
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1, i32 2, i32 0, i32 0
  %167 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %166, align 8
  call void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %162, %"class.blink::SQLTransactionBackend"* %167) #8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %165) #8
  %168 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %168, i64 %80
  %170 = icmp eq %"struct.WTF::KeyValuePair"* %169, %3
  %171 = select i1 %170, %"struct.WTF::KeyValuePair"* %88, %"struct.WTF::KeyValuePair"* %78
  %172 = load i32, i32* %12, align 8
  %173 = ptrtoint %"struct.WTF::KeyValuePair"* %168 to i64
  br label %174

174:                                              ; preds = %74, %74, %106
  %175 = phi i64 [ %75, %74 ], [ %173, %106 ], [ %75, %74 ]
  %176 = phi i32 [ %76, %74 ], [ %172, %106 ], [ %76, %74 ]
  %177 = phi %"struct.WTF::KeyValuePair"* [ %77, %74 ], [ %168, %106 ], [ %77, %74 ]
  %178 = phi %"struct.WTF::KeyValuePair"* [ %78, %74 ], [ %171, %106 ], [ %78, %74 ]
  %179 = add i32 %79, 1
  %180 = icmp eq i32 %179, %176
  br i1 %180, label %24, label %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_IN5blink25SQLTransactionCoordinator16CoordinationInfoEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S9_EEEEvRT1_(%"struct.WTF::KeyValuePair"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", align 8
  %3 = alloca %"struct.WTF::KeyValuePair", align 8
  %4 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #8
  %5 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #8, !noalias !5
  %6 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %2, i64 0, i32 1
  %7 = bitcast %"class.WTF::HashSet"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #8, !alias.scope !8, !noalias !5
  %8 = bitcast %"struct.WTF::KeyValuePair"* %3 to i64*
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false)
  %14 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %2 to i64*
  %15 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %9 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 0, i64* %15 monotonic, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i32* %16 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %17, align 8
  %18 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %18, align 8
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %2, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 1, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 1, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 1, i32 0, i32 3
  %24 = bitcast %"class.WTF::HashSet"* %20 to i64*
  %25 = bitcast %"class.WTF::HashSet"* %19 to i64*
  store i64 0, i64* %25, align 8
  %26 = bitcast %"class.WTF::HashSet"* %19 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  store atomic i64 0, i64* %26 monotonic, align 8
  %27 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %2, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %21, align 8
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %2, i64 0, i32 1, i32 0, i32 2
  store i32 0, i32* %22, align 4
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %2, i64 0, i32 1, i32 0, i32 3
  store i32 0, i32* %23, align 8
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 2
  %31 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %30, i64 0, i32 0
  %32 = bitcast %"class.blink::CrossThreadPersistent"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #8
  %33 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %34 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %33, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %34) #8
  call void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %31, %"class.blink::SQLTransactionBackend"* null) #8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %34) #8
  call void @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #8, !noalias !5
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %8, align 8
  %37 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %35, align 8
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 2
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %42 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %38 to i64*
  store i64 0, i64* %42, align 8
  %43 = load i32, i32* %10, align 8
  %44 = load i32, i32* %11, align 4
  %45 = icmp ugt i32 %43, %44
  %46 = load i32, i32* %16, align 8
  %47 = select i1 %45, i32 %46, i32 %44
  %48 = load i64, i64* %15, align 8
  %49 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %38 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %48, i64* %49 monotonic, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 %46, i32* %50, align 4
  store i32 %47, i32* %41, align 4
  store i32 %43, i32* %39, align 4
  store i32 %44, i32* %40, align 4
  %51 = bitcast i32* %16 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1, i32 0, i32 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1, i32 0, i32 3
  %56 = bitcast %"class.WTF::HashSet"* %52 to i64*
  store i64 0, i64* %56, align 8
  %57 = load i64, i64* %26, align 8
  %58 = bitcast %"class.WTF::HashSet"* %52 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = load i32, i32* %21, align 8
  store i32 %59, i32* %53, align 4
  store i32 0, i32* %21, align 8
  %60 = load i32, i32* %22, align 4
  store i32 %60, i32* %54, align 4
  store i32 0, i32* %22, align 4
  %61 = load i32, i32* %23, align 8
  %62 = and i32 %61, 2147483647
  store i32 %62, i32* %55, align 8
  %63 = and i32 %61, -2147483648
  store i32 %63, i32* %23, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 2
  %65 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %64, i64 0, i32 0
  %66 = bitcast %"class.blink::CrossThreadPersistent"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #8
  %67 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %68 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %67, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %68) #8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 2, i32 0, i32 0
  %70 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %69, align 8
  call void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %65, %"class.blink::SQLTransactionBackend"* %70) #8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %68) #8
  call void @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %9) #8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %1
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #8
  br label %86

86:                                               ; preds = %1, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink25SQLTransactionCoordinator16CoordinationInfoEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #8
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoaSEOS1_(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"*, %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* dereferenceable(64)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i32 [ %10, %8 ], [ %6, %2 ]
  %13 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %15, %17
  %19 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = select i1 %18, i32 %20, i32 %17
  %22 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i32 %21, i32* %22, align 4
  %23 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  store atomic i64 %26, i64* %23 monotonic, align 8
  store atomic i64 %24, i64* %25 monotonic, align 8
  %27 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = load i32, i32* %19, align 4
  store i32 %29, i32* %27, align 4
  store i32 %28, i32* %19, align 4
  %30 = load i32, i32* %13, align 4
  %31 = load i32, i32* %22, align 4
  store i32 %31, i32* %13, align 4
  store i32 %30, i32* %22, align 4
  %32 = load i32, i32* %3, align 4
  %33 = load i32, i32* %14, align 4
  store i32 %33, i32* %3, align 4
  store i32 %32, i32* %14, align 4
  %34 = load i32, i32* %5, align 4
  %35 = load i32, i32* %16, align 4
  store i32 %35, i32* %5, align 4
  store i32 %34, i32* %16, align 4
  %36 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 1
  %38 = bitcast %"class.WTF::HashSet"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::HashSet"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  store atomic i64 %41, i64* %38 monotonic, align 8
  store atomic i64 %39, i64* %40 monotonic, align 8
  %42 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 1, i32 0, i32 1
  %44 = load i32, i32* %42, align 4
  %45 = load i32, i32* %43, align 4
  store i32 %45, i32* %42, align 4
  store i32 %44, i32* %43, align 4
  %46 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 1, i32 0, i32 2
  %47 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 1, i32 0, i32 2
  %48 = load i32, i32* %46, align 4
  %49 = load i32, i32* %47, align 4
  store i32 %49, i32* %46, align 4
  store i32 %48, i32* %47, align 4
  %50 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 1, i32 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 2147483647
  %53 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 1, i32 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 2147483647
  %56 = and i32 %51, -2147483648
  %57 = or i32 %55, %56
  store i32 %57, i32* %50, align 8
  %58 = load i32, i32* %53, align 8
  %59 = and i32 %58, -2147483648
  %60 = or i32 %59, %52
  store i32 %60, i32* %53, align 8
  %61 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %62 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %61, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %62) #8
  %63 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 2, i32 0
  %64 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %64, align 8
  tail call void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %63, %"class.blink::SQLTransactionBackend"* %65) #8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %62) #8
  ret %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CrossThreadPersistentINS2_21SQLTransactionBackendEEEEEmm(i64 %11) #8
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CrossThreadPersistentINS2_21SQLTransactionBackendEEEEEmm(i64 %11) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEEEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"class.blink::CrossThreadPersistent"*
  br i1 %23, label %31, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %26
  %28 = zext i32 %22 to i64
  %29 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %28
  %30 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %24, i64 %26
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEENS_18PartitionAllocatorEE4MoveEPS4_S7_S7_b(%"class.blink::CrossThreadPersistent"* %27, %"class.blink::CrossThreadPersistent"* %29, %"class.blink::CrossThreadPersistent"* %30, i1 zeroext true) #8
  br label %45

31:                                               ; preds = %1
  %32 = zext i32 %22 to i64
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %32
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEENS_18PartitionAllocatorEE4MoveEPS4_S7_S7_b(%"class.blink::CrossThreadPersistent"* %5, %"class.blink::CrossThreadPersistent"* %33, %"class.blink::CrossThreadPersistent"* %24, i1 zeroext true) #8
  %34 = load i32, i32* %2, align 8
  %35 = load i32, i32* %19, align 8
  %36 = sub i32 %35, %3
  %37 = add i32 %36, %34
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %38
  %40 = zext i32 %3 to i64
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %40
  %42 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  %43 = zext i32 %37 to i64
  %44 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %42, i64 %43
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEENS_18PartitionAllocatorEE4MoveEPS4_S7_S7_b(%"class.blink::CrossThreadPersistent"* %39, %"class.blink::CrossThreadPersistent"* %41, %"class.blink::CrossThreadPersistent"* %44, i1 zeroext true) #8
  store i32 %37, i32* %19, align 8
  br label %45

45:                                               ; preds = %25, %31
  %46 = bitcast %"class.blink::CrossThreadPersistent"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CrossThreadPersistentINS2_21SQLTransactionBackendEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEENS_18PartitionAllocatorEE4MoveEPS4_S7_S7_b(%"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::CrossThreadPersistent"* %0, %1
  br i1 %5, label %37, label %6

6:                                                ; preds = %4, %33
  %7 = phi %"class.blink::CrossThreadPersistent"* [ %35, %33 ], [ %0, %4 ]
  %8 = phi %"class.blink::CrossThreadPersistent"* [ %34, %33 ], [ %2, %4 ]
  %9 = bitcast %"class.blink::CrossThreadPersistent"* %8 to i8*
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #8
  %11 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #8
  %13 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 0
  %14 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %13, align 8
  tail call void @_ZN5blink14PersistentBaseINS_21SQLTransactionBackendELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %10, %"class.blink::SQLTransactionBackend"* %14) #8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #8
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 1
  %16 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %15 to i64*
  %17 = load atomic i64, i64* %16 acquire, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %6
  %20 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %21 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %20, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %21) #8
  %22 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %23 = load atomic i64, i64* %16 monotonic, align 8
  %24 = inttoptr i64 %23 to %"class.blink::PersistentNode"*
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %22, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::CrossThreadPersistentRegion"* %22 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = inttoptr i64 %23 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %27, align 8
  br label %32

32:                                               ; preds = %26, %19
  store atomic i64 0, i64* %16 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %21) #8
  br label %33

33:                                               ; preds = %6, %32
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 1
  %35 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 1
  %36 = icmp eq %"class.blink::CrossThreadPersistent"* %35, %1
  br i1 %36, label %37, label %6

37:                                               ; preds = %33, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE12DeleteBucketERKS4_(%"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %2 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %8 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %7, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %8) #8
  %9 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %10 = load atomic i64, i64* %3 monotonic, align 8
  %11 = inttoptr i64 %10 to %"class.blink::PersistentNode"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %9, i64 0, i32 0, i32 0
  %15 = bitcast %"class.blink::CrossThreadPersistentRegion"* %9 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = inttoptr i64 %10 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %11, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %18, align 8
  store %"class.blink::PersistentNode"* %11, %"class.blink::PersistentNode"** %14, align 8
  br label %19

19:                                               ; preds = %13, %6
  store atomic i64 0, i64* %3 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %8) #8
  br label %20

20:                                               ; preds = %1, %19
  %21 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #8
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #8
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0, i32 0
  store %"class.blink::SQLTransactionBackend"* inttoptr (i64 -1 to %"class.blink::SQLTransactionBackend"*), %"class.blink::SQLTransactionBackend"** %23, align 8
  %24 = load atomic i64, i64* %3 acquire, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %20
  %27 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #8
  %28 = load atomic i64, i64* %3 monotonic, align 8
  %29 = inttoptr i64 %28 to %"class.blink::PersistentNode"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %27, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::CrossThreadPersistentRegion"* %27 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = inttoptr i64 %28 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %32, align 8
  br label %37

37:                                               ; preds = %31, %26
  store atomic i64 0, i64* %3 release, align 8
  br label %38

38:                                               ; preds = %20, %37
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } @_ZNK3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE4findEPS3_(%"class.WTF::HashTable.259"*, %"class.blink::SQLTransactionBackend"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::SQLTransactionBackend"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 0
  %5 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  %6 = icmp eq %"class.blink::CrossThreadPersistent"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.259", %"class.WTF::HashTable.259"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %68, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %32
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %34, align 8
  %36 = icmp eq %"class.blink::SQLTransactionBackend"* %35, %1
  br i1 %36, label %65, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi %"class.blink::SQLTransactionBackend"* [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq %"class.blink::SQLTransactionBackend"* %52, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %11
  %61 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %60
  %62 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %62, align 8
  %64 = icmp eq %"class.blink::SQLTransactionBackend"* %63, %1
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %9
  %66 = phi %"class.blink::CrossThreadPersistent"* [ %33, %9 ], [ %61, %56 ]
  %67 = icmp eq %"class.blink::CrossThreadPersistent"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %8 to i64
  %70 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %8 to i64
  %73 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"class.blink::CrossThreadPersistent"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"class.blink::CrossThreadPersistent"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } undef, %"class.blink::CrossThreadPersistent"* %75, 0
  %78 = insertvalue { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } %77, %"class.blink::CrossThreadPersistent"* %76, 1
  ret { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } %78
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink25SQLTransactionCoordinator16CoordinationInfoEEEE10EmptyValueEv: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink25SQLTransactionCoordinator16CoordinationInfoEEEE10EmptyValueEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTF17GenericHashTraitsIN5blink25SQLTransactionCoordinator16CoordinationInfoEE10EmptyValueEv: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF17GenericHashTraitsIN5blink25SQLTransactionCoordinator16CoordinationInfoEE10EmptyValueEv"}
