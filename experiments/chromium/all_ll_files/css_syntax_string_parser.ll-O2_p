; ModuleID = '../../third_party/blink/renderer/core/css/css_syntax_string_parser.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_syntax_string_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSSyntaxStringParser" = type { %"class.WTF::String", %"class.blink::CSSTokenizerInputStream" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::CSSSyntaxDefinition" }
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm = comdat any

@.str = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"percentage\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"length-percentage\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"angle\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"resolution\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"transform-function\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"transform-list\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"custom-ident\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase40is_css_variables_2_image_values_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase44is_css_variables_2_transform_values_enabled_E = external local_unnamed_addr global i8, align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSSyntaxComponentEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSSyntaxComponent]\00", align 1

@_ZN5blink21CSSSyntaxStringParserC1ERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::CSSSyntaxStringParser"*, %"class.WTF::String"*), void (%"class.blink::CSSSyntaxStringParser"*, %"class.WTF::String"*)* @_ZN5blink21CSSSyntaxStringParserC2ERKN3WTF6StringE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21CSSSyntaxStringParserC2ERKN3WTF6StringE(%"class.blink::CSSSyntaxStringParser"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 0
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %1) #7
  %5 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1
  tail call void @_ZN5blink23CSSTokenizerInputStreamC1ERKN3WTF6StringE(%"class.blink::CSSTokenizerInputStream"* %6, %"class.WTF::String"* dereferenceable(8) %3) #7
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN5blink23CSSTokenizerInputStreamC1ERKN3WTF6StringE(%"class.blink::CSSTokenizerInputStream"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21CSSSyntaxStringParser5ParseEv(%"class.absl::optional"* noalias nocapture sret, %"class.blink::CSSSyntaxStringParser"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSSyntaxDefinition", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.blink::CSSSyntaxDefinition", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %45 [
    i32 0, label %13
    i32 1, label %15
  ]

13:                                               ; preds = %10, %2
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 8
  br label %184

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  br i1 %19, label %25, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  br label %28

25:                                               ; preds = %15
  %26 = bitcast %"class.WTF::StringImpl"* %20 to i16*
  %27 = load i16, i16* %26, align 2
  br label %28

28:                                               ; preds = %21, %25
  %29 = phi i16 [ %24, %21 ], [ %27, %25 ]
  %30 = icmp eq i16 %29, 42
  br i1 %30, label %31, label %45

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::CSSSyntaxDefinition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #7
  call void @_ZN5blink19CSSSyntaxDefinition15CreateUniversalEv(%"class.blink::CSSSyntaxDefinition"* nonnull sret %3) #7
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %33, align 8
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = bitcast %"class.blink::CSSSyntaxDefinition"* %3 to i64*
  %38 = bitcast %"class.blink::CSSSyntaxDefinition"* %34 to i64*
  store i64 0, i64* %38, align 8
  %39 = load i64, i64* %37, align 8
  %40 = bitcast %"class.blink::CSSSyntaxDefinition"* %34 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %35, align 8
  store i32 0, i32* %41, align 8
  %43 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %36, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #7
  br label %184

45:                                               ; preds = %10, %28
  %46 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #7
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #7
  %50 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %1, i64 0, i32 1
  %51 = getelementptr inbounds %"class.blink::CSSTokenizerInputStream", %"class.blink::CSSTokenizerInputStream"* %50, i64 0, i32 0
  %52 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %1, i64 0, i32 1, i32 1
  %53 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %1, i64 0, i32 1, i32 2, i32 0
  br label %54

54:                                               ; preds = %80, %45
  %55 = call zeroext i1 @_ZN5blink21CSSSyntaxStringParser22ConsumeSyntaxComponentERN3WTF6VectorINS_18CSSSyntaxComponentELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSyntaxStringParser"* %1, %"class.WTF::Vector"* nonnull dereferenceable(16) %4)
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %57, align 8
  br label %147

58:                                               ; preds = %54
  call void @_ZN5blink23CSSTokenizerInputStream25AdvanceUntilNonWhitespaceEv(%"class.blink::CSSTokenizerInputStream"* %50) #7
  %59 = load i32, i32* %51, align 8
  %60 = load i32, i32* %52, align 4
  %61 = icmp ult i32 %59, %60
  br i1 %61, label %62, label %86

62:                                               ; preds = %58
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  br i1 %67, label %75, label %69

69:                                               ; preds = %62
  %70 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  %71 = zext i32 %59 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  br label %80

75:                                               ; preds = %62
  %76 = bitcast %"class.WTF::StringImpl"* %68 to i16*
  %77 = zext i32 %59 to i64
  %78 = getelementptr inbounds i16, i16* %76, i64 %77
  %79 = load i16, i16* %78, align 2
  br label %80

80:                                               ; preds = %75, %69
  %81 = phi i16 [ %74, %69 ], [ %79, %75 ]
  %82 = add nuw i32 %59, 1
  store i32 %82, i32* %51, align 8
  %83 = icmp eq i16 %81, 124
  br i1 %83, label %54, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %85, align 8
  br label %147

86:                                               ; preds = %58
  %87 = add i32 %59, 1
  store i32 %87, i32* %51, align 8
  %88 = bitcast %"class.blink::CSSSyntaxDefinition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #7
  %89 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %91 = bitcast %"class.WTF::Vector"* %4 to i64*
  %92 = bitcast %"class.WTF::Vector"* %6 to i64*
  store i64 0, i64* %92, align 8
  %93 = load i64, i64* %91, align 8
  %94 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store atomic i64 %93, i64* %94 monotonic, align 8
  %95 = load i32, i32* %48, align 8
  store i32 %95, i32* %89, align 8
  store i32 0, i32* %48, align 8
  %96 = load i32, i32* %49, align 4
  store i32 %96, i32* %90, align 4
  store i32 0, i32* %49, align 4
  call void @_ZN5blink19CSSSyntaxDefinitionC1EN3WTF6VectorINS_18CSSSyntaxComponentELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSyntaxDefinition"* nonnull %5, %"class.WTF::Vector"* nonnull %6) #7
  %97 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %97, align 8
  %98 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %101 = bitcast %"class.blink::CSSSyntaxDefinition"* %5 to i64*
  %102 = bitcast %"class.blink::CSSSyntaxDefinition"* %98 to i64*
  store i64 0, i64* %102, align 8
  %103 = load i64, i64* %101, align 8
  %104 = bitcast %"class.blink::CSSSyntaxDefinition"* %98 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  store atomic i64 %103, i64* %104 monotonic, align 8
  %105 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %99, align 8
  store i32 0, i32* %105, align 8
  %107 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %100, align 4
  store i32 0, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %109, align 8
  %111 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %112 = icmp eq %"class.blink::CSSSyntaxComponent"* %110, null
  br i1 %112, label %146, label %113, !prof !2

113:                                              ; preds = %86
  %114 = bitcast %"class.blink::CSSSyntaxComponent"* %110 to i8*
  %115 = load i32, i32* %90, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %144, label %117, !prof !3

117:                                              ; preds = %113
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %110, i64 %118
  br label %120

120:                                              ; preds = %138, %117
  %121 = phi %"class.blink::CSSSyntaxComponent"* [ %139, %138 ], [ %110, %117 ]
  %122 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %121, i64 0, i32 2, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #7
  br label %138

138:                                              ; preds = %137, %134, %120
  %139 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %121, i64 1
  %140 = icmp eq %"class.blink::CSSSyntaxComponent"* %139, %119
  br i1 %140, label %141, label %120

141:                                              ; preds = %138
  store i32 0, i32* %90, align 4
  %142 = bitcast %"class.WTF::Vector"* %6 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %113
  %145 = phi i8* [ %143, %141 ], [ %114, %113 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #7
  store %"class.blink::CSSSyntaxComponent"* null, %"class.blink::CSSSyntaxComponent"** %111, align 8
  br label %146

146:                                              ; preds = %86, %144
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #7
  br label %147

147:                                              ; preds = %84, %146, %56
  %148 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %47, align 8
  %149 = icmp eq %"class.blink::CSSSyntaxComponent"* %148, null
  br i1 %149, label %183, label %150, !prof !2

150:                                              ; preds = %147
  %151 = bitcast %"class.blink::CSSSyntaxComponent"* %148 to i8*
  %152 = load i32, i32* %49, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %181, label %154, !prof !3

154:                                              ; preds = %150
  %155 = zext i32 %152 to i64
  %156 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %148, i64 %155
  br label %157

157:                                              ; preds = %175, %154
  %158 = phi %"class.blink::CSSSyntaxComponent"* [ %176, %175 ], [ %148, %154 ]
  %159 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %158, i64 0, i32 2, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #7
  br label %175

175:                                              ; preds = %174, %171, %157
  %176 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %158, i64 1
  %177 = icmp eq %"class.blink::CSSSyntaxComponent"* %176, %156
  br i1 %177, label %178, label %157

178:                                              ; preds = %175
  store i32 0, i32* %49, align 4
  %179 = bitcast %"class.WTF::Vector"* %4 to i8**
  %180 = load i8*, i8** %179, align 8
  br label %181

181:                                              ; preds = %178, %150
  %182 = phi i8* [ %180, %178 ], [ %151, %150 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %182) #7
  store %"class.blink::CSSSyntaxComponent"* null, %"class.blink::CSSSyntaxComponent"** %47, align 8
  br label %183

183:                                              ; preds = %147, %181
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #7
  br label %184

184:                                              ; preds = %183, %31, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink19CSSSyntaxDefinition15CreateUniversalEv(%"class.blink::CSSSyntaxDefinition"* sret) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21CSSSyntaxStringParser22ConsumeSyntaxComponentERN3WTF6VectorINS_18CSSSyntaxComponentELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSyntaxStringParser"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1
  tail call void @_ZN5blink23CSSTokenizerInputStream25AdvanceUntilNonWhitespaceEv(%"class.blink::CSSTokenizerInputStream"* %5) #7
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  store i32 0, i32* %3, align 4
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::CSSTokenizerInputStream", %"class.blink::CSSTokenizerInputStream"* %5, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %14, label %36

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 2, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  br i1 %20, label %28, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.WTF::StringImpl"* %21 to i8*
  %24 = zext i32 %10 to i64
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  br label %33

28:                                               ; preds = %14
  %29 = bitcast %"class.WTF::StringImpl"* %21 to i16*
  %30 = zext i32 %10 to i64
  %31 = getelementptr inbounds i16, i16* %29, i64 %30
  %32 = load i16, i16* %31, align 2
  br label %33

33:                                               ; preds = %28, %22
  %34 = phi i16 [ %27, %22 ], [ %32, %28 ]
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %2, %33
  %37 = phi i16 [ 0, %2 ], [ -3, %33 ]
  %38 = add i32 %10, 1
  store i32 %38, i32* %9, align 8
  br label %44

39:                                               ; preds = %33
  %40 = add nuw i32 %10, 1
  store i32 %40, i32* %9, align 8
  %41 = icmp eq i16 %34, 60
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = call zeroext i1 @_ZN5blink21CSSSyntaxStringParser19ConsumeDataTypeNameERNS_13CSSSyntaxTypeE(%"class.blink::CSSSyntaxStringParser"* %0, i32* nonnull dereferenceable(4) %3)
  br i1 %43, label %63, label %174

44:                                               ; preds = %36, %39
  %45 = phi i16 [ %37, %36 ], [ %34, %39 ]
  %46 = or i16 %45, 32
  %47 = add i16 %46, -97
  %48 = icmp ult i16 %47, 26
  %49 = icmp eq i16 %45, 95
  %50 = or i1 %49, %48
  %51 = icmp ugt i16 %45, 127
  %52 = or i1 %51, %50
  %53 = icmp eq i16 %45, 92
  %54 = or i1 %53, %52
  br i1 %54, label %55, label %174

55:                                               ; preds = %44
  %56 = tail call zeroext i1 @_ZN5blink22NextCharsAreIdentifierEDsRKNS_23CSSTokenizerInputStreamE(i16 zeroext %45, %"class.blink::CSSTokenizerInputStream"* dereferenceable(16) %5) #7
  br i1 %56, label %57, label %66

57:                                               ; preds = %55
  %58 = load i32, i32* %9, align 8
  %59 = add i32 %58, -1
  store i32 %59, i32* %9, align 8
  store i32 1, i32* %3, align 4
  %60 = call zeroext i1 @_ZN5blink21CSSSyntaxStringParser12ConsumeIdentERN3WTF6StringE(%"class.blink::CSSSyntaxStringParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  br label %157

63:                                               ; preds = %42
  %64 = load i32, i32* %3, align 4
  %65 = icmp eq i32 %64, 14
  br i1 %65, label %97, label %66

66:                                               ; preds = %55, %57, %63
  %67 = phi i32 [ 1, %57 ], [ %64, %63 ], [ 0, %55 ]
  %68 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = load i32, i32* %11, align 4
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %72, label %97

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 2, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 1
  br i1 %78, label %86, label %80

80:                                               ; preds = %72
  %81 = bitcast %"class.WTF::StringImpl"* %79 to i8*
  %82 = zext i32 %69 to i64
  %83 = getelementptr inbounds i8, i8* %81, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i16
  br label %91

86:                                               ; preds = %72
  %87 = bitcast %"class.WTF::StringImpl"* %79 to i16*
  %88 = zext i32 %69 to i64
  %89 = getelementptr inbounds i16, i16* %87, i64 %88
  %90 = load i16, i16* %89, align 2
  br label %91

91:                                               ; preds = %86, %80
  %92 = phi i16 [ %85, %80 ], [ %90, %86 ]
  switch i16 %92, label %97 [
    i16 35, label %95
    i16 43, label %93
  ]

93:                                               ; preds = %91
  %94 = add nuw i32 %69, 1
  store i32 %94, i32* %68, align 8
  br label %97

95:                                               ; preds = %91
  %96 = add nuw i32 %69, 1
  store i32 %96, i32* %68, align 8
  br label %97

97:                                               ; preds = %95, %93, %91, %66, %63
  %98 = phi i32 [ 14, %63 ], [ %67, %93 ], [ %67, %95 ], [ %67, %66 ], [ %67, %91 ]
  %99 = phi i32 [ 0, %63 ], [ 1, %93 ], [ 2, %95 ], [ 0, %66 ], [ 0, %91 ]
  %100 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %101, %103
  br i1 %104, label %105, label %127, !prof !3

105:                                              ; preds = %97
  %106 = add i32 %101, 1
  %107 = lshr i32 %101, 2
  %108 = add i32 %106, %107
  %109 = icmp ugt i32 %108, 4
  %110 = select i1 %109, i32 %108, i32 4
  %111 = icmp ugt i32 %110, %106
  %112 = select i1 %111, i32 %110, i32 %106
  %113 = icmp ult i32 %101, %112
  br i1 %113, label %114, label %127, !prof !2

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %115, align 8
  %117 = icmp eq %"class.blink::CSSSyntaxComponent"* %116, null
  br i1 %117, label %118, label %126

118:                                              ; preds = %114
  %119 = zext i32 %112 to i64
  %120 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm(i64 %119) #7
  %121 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %120, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSSyntaxComponentEEEPKcv, i64 0, i64 0)) #7
  %122 = ptrtoint i8* %121 to i64
  %123 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 %122, i64* %123 monotonic, align 8
  %124 = udiv i64 %120, 24
  %125 = trunc i64 %124 to i32
  store i32 %125, i32* %102, align 8
  br label %127

126:                                              ; preds = %114
  tail call void @_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %1, i32 %112) #7
  br label %127

127:                                              ; preds = %126, %118, %105, %97
  %128 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %128, align 8
  %130 = load i32, i32* %100, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %129, i64 %131, i32 0
  store i32 %98, i32* %132, align 8
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %134 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %129, i64 %131, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %133, %"class.WTF::StringImpl"** %134, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %135, label %153, label %136

136:                                              ; preds = %127
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i33
  %145 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #7
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !3

150:                                              ; preds = %141
  tail call void @llvm.trap() #7
  unreachable

151:                                              ; preds = %141
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %142, align 4
  br label %153

153:                                              ; preds = %127, %136, %151
  %154 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %129, i64 %131, i32 3
  store i32 %99, i32* %154, align 8
  %155 = load i32, i32* %100, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %100, align 4
  br label %157

157:                                              ; preds = %61, %153
  %158 = phi %"class.WTF::StringImpl"* [ %133, %153 ], [ %62, %61 ]
  %159 = phi i1 [ true, %153 ], [ false, %61 ]
  %160 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #7
  br label %174

174:                                              ; preds = %44, %42, %157, %170, %173
  %175 = phi i1 [ %159, %157 ], [ %159, %170 ], [ %159, %173 ], [ false, %42 ], [ false, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret i1 %175
}

declare void @_ZN5blink23CSSTokenizerInputStream25AdvanceUntilNonWhitespaceEv(%"class.blink::CSSTokenizerInputStream"*) local_unnamed_addr #1

declare void @_ZN5blink19CSSSyntaxDefinitionC1EN3WTF6VectorINS_18CSSSyntaxComponentELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSyntaxDefinition"*, %"class.WTF::Vector"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21CSSSyntaxStringParser19ConsumeDataTypeNameERNS_13CSSSyntaxTypeE(%"class.blink::CSSSyntaxStringParser"* nocapture, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 2, i32 0
  br label %23

23:                                               ; preds = %190, %2
  %24 = phi i32 [ 0, %2 ], [ %191, %190 ]
  %25 = add i32 %19, %24
  %26 = icmp ult i32 %25, %21
  br i1 %26, label %27, label %45

27:                                               ; preds = %23
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 1
  br i1 %32, label %40, label %34

34:                                               ; preds = %27
  %35 = bitcast %"class.WTF::StringImpl"* %33 to i8*
  %36 = zext i32 %25 to i64
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  br label %45

40:                                               ; preds = %27
  %41 = bitcast %"class.WTF::StringImpl"* %33 to i16*
  %42 = zext i32 %25 to i64
  %43 = getelementptr inbounds i16, i16* %41, i64 %42
  %44 = load i16, i16* %43, align 2
  br label %45

45:                                               ; preds = %23, %34, %40
  %46 = phi i16 [ 0, %23 ], [ %39, %34 ], [ %44, %40 ]
  %47 = or i16 %46, 32
  %48 = add i16 %47, -97
  %49 = icmp ult i16 %48, 26
  %50 = icmp eq i16 %46, 95
  %51 = or i1 %50, %49
  %52 = icmp ugt i16 %46, 127
  %53 = or i1 %52, %51
  br i1 %53, label %190, label %54

54:                                               ; preds = %45
  %55 = add nsw i16 %46, -48
  %56 = icmp ult i16 %55, 10
  %57 = icmp eq i16 %46, 45
  %58 = or i1 %57, %56
  br i1 %58, label %190, label %59

59:                                               ; preds = %54
  %60 = icmp eq i16 %46, 62
  br i1 %60, label %61, label %192

61:                                               ; preds = %59
  %62 = icmp ult i32 %21, %19
  %63 = select i1 %62, i32 %21, i32 %19
  %64 = add i32 %24, 1
  %65 = add i32 %64, %19
  store i32 %65, i32* %18, align 8
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8, !noalias !4
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4, !noalias !4
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %72 = bitcast %"class.WTF::StringImpl"* %71 to i16*
  %73 = zext i32 %63 to i64
  %74 = getelementptr inbounds i16, i16* %72, i64 %73
  %75 = bitcast i16* %74 to i8*
  %76 = bitcast %"class.WTF::StringImpl"* %71 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 %73
  %78 = select i1 %70, i8* %75, i8* %77
  %79 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79)
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* %78, i8** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %24, i32* %82, align 8
  %83 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #7
  %84 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %85 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 6, i32* %87, align 8
  %88 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #7
  br i1 %88, label %179, label %89

89:                                               ; preds = %61
  %90 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #7
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %92 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 6, i32* %94, align 8
  %95 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #7
  br i1 %95, label %179, label %96

96:                                               ; preds = %89
  %97 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #7
  %98 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %99 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8** %100, align 8
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 10, i32* %101, align 8
  %102 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #7
  br i1 %102, label %179, label %103

103:                                              ; preds = %96
  %104 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #7
  %105 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %106 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 17, i32* %108, align 8
  %109 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #7
  br i1 %109, label %179, label %110

110:                                              ; preds = %103
  %111 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #7
  %112 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %113 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 5, i32* %115, align 8
  %116 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #7
  br i1 %116, label %179, label %117

117:                                              ; preds = %110
  %118 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_css_variables_2_image_values_enabled_E, align 1, !range !7
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %127, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #7
  %122 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %123 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %124, align 8
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 5, i32* %125, align 8
  %126 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #7
  br i1 %126, label %179, label %127

127:                                              ; preds = %120, %117
  %128 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #7
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %130 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 3, i32* %132, align 8
  %133 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #7
  br i1 %133, label %179, label %134

134:                                              ; preds = %127
  %135 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #7
  %136 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %137 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8** %138, align 8
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 7, i32* %139, align 8
  %140 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #7
  br i1 %140, label %179, label %141

141:                                              ; preds = %134
  %142 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #7
  %143 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %144 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 5, i32* %146, align 8
  %147 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #7
  br i1 %147, label %179, label %148

148:                                              ; preds = %141
  %149 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #7
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %151 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %152, align 8
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 4, i32* %153, align 8
  %154 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #7
  br i1 %154, label %179, label %155

155:                                              ; preds = %148
  %156 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156) #7
  %157 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %158 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8** %159, align 8
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 10, i32* %160, align 8
  %161 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156) #7
  br i1 %161, label %179, label %162

162:                                              ; preds = %155
  %163 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase44is_css_variables_2_transform_values_enabled_E, align 1, !range !7
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %162
  %166 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #7
  %167 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %168 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8** %169, align 8
  %170 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 18, i32* %170, align 8
  %171 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #7
  br i1 %171, label %179, label %172

172:                                              ; preds = %165
  %173 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #7
  %174 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %175 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8** %176, align 8
  %177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 14, i32* %177, align 8
  %178 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #7
  br i1 %178, label %179, label %181

179:                                              ; preds = %61, %89, %96, %103, %110, %120, %127, %134, %141, %148, %155, %165, %172
  %180 = phi i32 [ 14, %172 ], [ 13, %165 ], [ 12, %155 ], [ 11, %148 ], [ 10, %141 ], [ 9, %134 ], [ 8, %127 ], [ 7, %120 ], [ 6, %110 ], [ 5, %103 ], [ 4, %96 ], [ 3, %89 ], [ 2, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79)
  br label %188

181:                                              ; preds = %162, %172
  %182 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #7
  %183 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %184 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8** %185, align 8
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 12, i32* %186, align 8
  %187 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79)
  br i1 %187, label %188, label %192

188:                                              ; preds = %179, %181
  %189 = phi i32 [ %180, %179 ], [ 15, %181 ]
  store i32 %189, i32* %1, align 4
  br label %192

190:                                              ; preds = %45, %54
  %191 = add i32 %24, 1
  br label %23

192:                                              ; preds = %188, %181, %59
  %193 = phi i1 [ false, %59 ], [ true, %188 ], [ false, %181 ]
  ret i1 %193
}

declare zeroext i1 @_ZN5blink22NextCharsAreIdentifierEDsRKNS_23CSSTokenizerInputStreamE(i16 zeroext, %"class.blink::CSSTokenizerInputStream"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21CSSSyntaxStringParser12ConsumeIdentERN3WTF6StringE(%"class.blink::CSSSyntaxStringParser"*, %"class.WTF::String"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink11ConsumeNameERNS_23CSSTokenizerInputStreamE(%"class.blink::CSSTokenizerInputStream"* dereferenceable(16) %6) #7
  %8 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %9 = bitcast %"class.WTF::String"* %1 to i64*
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store i64 %8, i64* %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #7
  br label %26

26:                                               ; preds = %22, %25
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %28

28:                                               ; preds = %26, %2
  %29 = phi %"class.WTF::StringImpl"* [ %27, %26 ], [ %7, %2 ]
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %32, align 8
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %34 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %33, i64* %34, align 8
  br label %42

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %41 = bitcast i8** %40 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %41, align 8
  br label %42

42:                                               ; preds = %31, %35
  %43 = phi i32 [ %38, %35 ], [ 0, %31 ]
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %43, i32* %44, align 8
  %45 = tail call zeroext i1 @_ZN5blink17css_parsing_utils16IsCSSWideKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %3) #7
  br i1 %45, label %83, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %50, align 8
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %51, i64* %52, align 8
  br label %60

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %59 = bitcast i8** %58 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %59, align 8
  br label %60

60:                                               ; preds = %49, %53
  %61 = phi i32 [ %56, %53 ], [ 0, %49 ]
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %61, i32* %62, align 8
  %63 = tail call zeroext i1 @_ZN5blink17css_parsing_utils15IsRevertKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %4) #7
  br i1 %63, label %83, label %64

64:                                               ; preds = %60
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %67, label %71

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %68, align 8
  %69 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %70 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %69, i64* %70, align 8
  br label %78

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 1
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %77 = bitcast i8** %76 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %77, align 8
  br label %78

78:                                               ; preds = %67, %71
  %79 = phi i32 [ %74, %71 ], [ 0, %67 ]
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %79, i32* %80, align 8
  %81 = tail call zeroext i1 @_ZN5blink17css_parsing_utils16IsDefaultKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %5) #7
  %82 = xor i1 %81, true
  br label %83

83:                                               ; preds = %78, %60, %42
  %84 = phi i1 [ false, %60 ], [ false, %42 ], [ %82, %78 ]
  ret i1 %84
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink21CSSSyntaxStringParser22ConsumeRepeatIfPresentEv(%"class.blink::CSSSyntaxStringParser"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %3, %5
  br i1 %6, label %7, label %32

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::CSSSyntaxStringParser", %"class.blink::CSSSyntaxStringParser"* %0, i64 0, i32 1, i32 2, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  br i1 %13, label %21, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %17 = zext i32 %3 to i64
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  br label %26

21:                                               ; preds = %7
  %22 = bitcast %"class.WTF::StringImpl"* %14 to i16*
  %23 = zext i32 %3 to i64
  %24 = getelementptr inbounds i16, i16* %22, i64 %23
  %25 = load i16, i16* %24, align 2
  br label %26

26:                                               ; preds = %21, %15
  %27 = phi i16 [ %20, %15 ], [ %25, %21 ]
  switch i16 %27, label %32 [
    i16 35, label %30
    i16 43, label %28
  ]

28:                                               ; preds = %26
  %29 = add nuw i32 %3, 1
  store i32 %29, i32* %2, align 8
  br label %32

30:                                               ; preds = %26
  %31 = add nuw i32 %3, 1
  store i32 %31, i32* %2, align 8
  br label %32

32:                                               ; preds = %26, %1, %30, %28
  %33 = phi i32 [ 1, %28 ], [ 2, %30 ], [ 0, %1 ], [ 0, %26 ]
  ret i32 %33
}

declare %"class.WTF::StringImpl"* @_ZN5blink11ConsumeNameERNS_23CSSTokenizerInputStreamE(%"class.blink::CSSTokenizerInputStream"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17css_parsing_utils16IsCSSWideKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17css_parsing_utils15IsRevertKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17css_parsing_utils16IsDefaultKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %51

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %49, label %14

14:                                               ; preds = %4, %45
  %15 = phi %"class.blink::CSSSyntaxComponent"* [ %47, %45 ], [ %6, %4 ]
  %16 = phi %"class.blink::CSSSyntaxComponent"* [ %46, %45 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %16, i64 0, i32 2
  %21 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 0, i32 2
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::String"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.WTF::String"* %20 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %16, i64 0, i32 3
  %27 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #7
  br label %45

45:                                               ; preds = %44, %41, %14
  %46 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %16, i64 1
  %47 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 1
  %48 = icmp eq %"class.blink::CSSSyntaxComponent"* %47, %10
  br i1 %48, label %49, label %14

49:                                               ; preds = %45, %4
  %50 = bitcast %"class.blink::CSSSyntaxComponent"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  br label %111

51:                                               ; preds = %2
  %52 = zext i32 %1 to i64
  %53 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm(i64 %52) #7
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSSyntaxComponentEEEPKcv, i64 0, i64 0)) #7
  %55 = udiv i64 %53, 24
  %56 = ptrtoint i8* %54 to i64
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %57, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %58, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %51
  %65 = bitcast %"class.blink::CSSSyntaxComponent"* %58 to i8*
  br label %106

66:                                               ; preds = %51
  %67 = bitcast i8* %54 to %"class.blink::CSSSyntaxComponent"*
  br label %68

68:                                               ; preds = %66, %99
  %69 = phi %"class.blink::CSSSyntaxComponent"* [ %101, %99 ], [ %58, %66 ]
  %70 = phi %"class.blink::CSSSyntaxComponent"* [ %100, %99 ], [ %67, %66 ]
  %71 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 0, i32 0
  %72 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %71, align 8
  %74 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 0, i32 2
  %75 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 0, i32 2
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = bitcast %"class.WTF::String"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.WTF::String"* %74 to i64*
  store i64 %78, i64* %79, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %80 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 0, i32 3
  %81 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %68
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #7
  br label %99

99:                                               ; preds = %98, %95, %68
  %100 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 1
  %101 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 1
  %102 = icmp eq %"class.blink::CSSSyntaxComponent"* %101, %62
  br i1 %102, label %103, label %68

103:                                              ; preds = %99
  %104 = bitcast %"class.WTF::Vector"* %0 to i8**
  %105 = load i8*, i8** %104, align 8
  br label %106

106:                                              ; preds = %64, %103
  %107 = phi i8* [ %105, %103 ], [ %65, %64 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %107) #7
  %108 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %56, i64* %108 monotonic, align 8
  %109 = trunc i64 %55 to i32
  %110 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %109, i32* %110, align 8
  br label %111

111:                                              ; preds = %106, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink23CSSTokenizerInputStream7RangeAtEjj: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink23CSSTokenizerInputStream7RangeAtEjj"}
!7 = !{i8 0, i8 2}
