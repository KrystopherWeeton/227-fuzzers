; ModuleID = '../../third_party/dawn/third_party/tint/src/diagnostic/printer_linux.cc'
source_filename = "../../third_party/dawn/third_party/tint/src/diagnostic/printer_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.tint::diag::Printer" = type { i32 (...)** }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.tint::diag::(anonymous namespace)::PrinterLinux" = type <{ %"class.tint::diag::Printer", %struct._IO_FILE*, i8, [7 x i8] }>
%"struct.tint::diag::Style" = type <{ i32, i8, [3 x i8] }>

@_ZTVN4tint4diag12_GLOBAL__N_112PrinterLinuxE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tint::diag::Printer"*)* @_ZN4tint4diag7PrinterD2Ev to i8*), i8* bitcast (void (%"class.tint::diag::(anonymous namespace)::PrinterLinux"*)* @_ZN4tint4diag12_GLOBAL__N_112PrinterLinuxD0Ev to i8*), i8* bitcast (void (%"class.tint::diag::(anonymous namespace)::PrinterLinux"*, %"class.std::__1::basic_string"*, %"struct.tint::diag::Style"*)* @_ZN4tint4diag12_GLOBAL__N_112PrinterLinux5writeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS0_5StyleE to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"cygwin\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"linux\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"rxvt-unicode-256color\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"rxvt-unicode\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"screen-256color\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"screen\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"tmux-256color\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"tmux\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"xterm-256color\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"xterm-color\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"xterm\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"\1B[1m\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"\1B[0m\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"\1B[30;1m\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"\1B[30m\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"\1B[31;1m\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"\1B[31m\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"\1B[32;1m\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"\1B[32m\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"\1B[33;1m\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"\1B[33m\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"\1B[34;1m\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"\1B[34m\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"\1B[35;1m\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"\1B[35m\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"\1B[36;1m\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"\1B[36m\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"\1B[37;1m\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"\1B[37m\00", align 1
@.str.31 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.tint::diag::Printer"* @_ZN4tint4diag7Printer6createEP8_IO_FILEb(%struct._IO_FILE*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call i8* @_Znwm(i64 24) #12
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint4diag12_GLOBAL__N_112PrinterLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to %struct._IO_FILE**
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  br i1 %1, label %9, label %206

9:                                                ; preds = %2
  %10 = tail call i32 @fileno(%struct._IO_FILE* %0) #13
  %11 = tail call i32 @isatty(i32 %10) #13
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %203, label %13

13:                                               ; preds = %9
  %14 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %203, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false) #13
  %21 = tail call i64 @strlen(i8* nonnull %14) #13
  %22 = icmp ugt i64 %21, -17
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %24) #14
  unreachable

25:                                               ; preds = %16
  %26 = icmp ult i64 %21, 23
  br i1 %26, label %33, label %27

27:                                               ; preds = %25
  %28 = add nuw i64 %21, 16
  %29 = and i64 %28, -16
  %30 = tail call i8* @_Znwm(i64 %29) #12
  store i8* %30, i8** %18, align 8
  %31 = or i64 %29, -9223372036854775808
  store i64 %31, i64* %20, align 8
  store i64 %21, i64* %19, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %38

33:                                               ; preds = %25
  %34 = trunc i64 %21 to i8
  %35 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1
  %37 = icmp eq i64 %21, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33, %27
  %39 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %35, %33 ], [ %32, %27 ]
  %40 = phi i8* [ %17, %33 ], [ %30, %27 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* nonnull align 1 %14, i64 %21, i1 false) #13
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %35, %33 ], [ %39, %38 ]
  %43 = phi i8* [ %17, %33 ], [ %40, %38 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %21
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %19, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = icmp eq i64 %50, 6
  br i1 %51, label %52, label %59

52:                                               ; preds = %41
  %53 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 6) #13
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %195, label %55

55:                                               ; preds = %52
  %56 = load i8, i8* %45, align 1
  %57 = load i64, i64* %19, align 8
  %58 = zext i8 %56 to i64
  br label %59

59:                                               ; preds = %55, %41
  %60 = phi i64 [ %58, %55 ], [ %49, %41 ]
  %61 = phi i64 [ %57, %55 ], [ %48, %41 ]
  %62 = phi i8 [ %56, %55 ], [ %46, %41 ]
  %63 = icmp slt i8 %62, 0
  %64 = select i1 %63, i64 %61, i64 %60
  %65 = icmp eq i64 %64, 5
  br i1 %65, label %66, label %73

66:                                               ; preds = %59
  %67 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #13
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %195, label %69

69:                                               ; preds = %66
  %70 = load i8, i8* %45, align 1
  %71 = load i64, i64* %19, align 8
  %72 = zext i8 %70 to i64
  br label %73

73:                                               ; preds = %69, %59
  %74 = phi i64 [ %72, %69 ], [ %60, %59 ]
  %75 = phi i64 [ %71, %69 ], [ %61, %59 ]
  %76 = phi i8 [ %70, %69 ], [ %62, %59 ]
  %77 = icmp slt i8 %76, 0
  %78 = select i1 %77, i64 %75, i64 %74
  %79 = icmp eq i64 %78, 21
  br i1 %79, label %80, label %87

80:                                               ; preds = %73
  %81 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i64 21) #13
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %195, label %83

83:                                               ; preds = %80
  %84 = load i8, i8* %45, align 1
  %85 = load i64, i64* %19, align 8
  %86 = zext i8 %84 to i64
  br label %87

87:                                               ; preds = %83, %73
  %88 = phi i64 [ %86, %83 ], [ %74, %73 ]
  %89 = phi i64 [ %85, %83 ], [ %75, %73 ]
  %90 = phi i8 [ %84, %83 ], [ %76, %73 ]
  %91 = icmp slt i8 %90, 0
  %92 = select i1 %91, i64 %89, i64 %88
  %93 = icmp eq i64 %92, 12
  br i1 %93, label %94, label %101

94:                                               ; preds = %87
  %95 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12) #13
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %195, label %97

97:                                               ; preds = %94
  %98 = load i8, i8* %45, align 1
  %99 = load i64, i64* %19, align 8
  %100 = zext i8 %98 to i64
  br label %101

101:                                              ; preds = %97, %87
  %102 = phi i64 [ %100, %97 ], [ %88, %87 ]
  %103 = phi i64 [ %99, %97 ], [ %89, %87 ]
  %104 = phi i8 [ %98, %97 ], [ %90, %87 ]
  %105 = icmp slt i8 %104, 0
  %106 = select i1 %105, i64 %103, i64 %102
  %107 = icmp eq i64 %106, 15
  br i1 %107, label %108, label %115

108:                                              ; preds = %101
  %109 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15) #13
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %195, label %111

111:                                              ; preds = %108
  %112 = load i8, i8* %45, align 1
  %113 = load i64, i64* %19, align 8
  %114 = zext i8 %112 to i64
  br label %115

115:                                              ; preds = %111, %101
  %116 = phi i64 [ %114, %111 ], [ %102, %101 ]
  %117 = phi i64 [ %113, %111 ], [ %103, %101 ]
  %118 = phi i8 [ %112, %111 ], [ %104, %101 ]
  %119 = icmp slt i8 %118, 0
  %120 = select i1 %119, i64 %117, i64 %116
  %121 = icmp eq i64 %120, 6
  br i1 %121, label %122, label %129

122:                                              ; preds = %115
  %123 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 6) #13
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %195, label %125

125:                                              ; preds = %122
  %126 = load i8, i8* %45, align 1
  %127 = load i64, i64* %19, align 8
  %128 = zext i8 %126 to i64
  br label %129

129:                                              ; preds = %125, %115
  %130 = phi i64 [ %128, %125 ], [ %116, %115 ]
  %131 = phi i64 [ %127, %125 ], [ %117, %115 ]
  %132 = phi i8 [ %126, %125 ], [ %118, %115 ]
  %133 = icmp slt i8 %132, 0
  %134 = select i1 %133, i64 %131, i64 %130
  %135 = icmp eq i64 %134, 13
  br i1 %135, label %136, label %143

136:                                              ; preds = %129
  %137 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i64 13) #13
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %195, label %139

139:                                              ; preds = %136
  %140 = load i8, i8* %45, align 1
  %141 = load i64, i64* %19, align 8
  %142 = zext i8 %140 to i64
  br label %143

143:                                              ; preds = %139, %129
  %144 = phi i64 [ %142, %139 ], [ %130, %129 ]
  %145 = phi i64 [ %141, %139 ], [ %131, %129 ]
  %146 = phi i8 [ %140, %139 ], [ %132, %129 ]
  %147 = icmp slt i8 %146, 0
  %148 = select i1 %147, i64 %145, i64 %144
  %149 = icmp eq i64 %148, 4
  br i1 %149, label %150, label %157

150:                                              ; preds = %143
  %151 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #13
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %195, label %153

153:                                              ; preds = %150
  %154 = load i8, i8* %45, align 1
  %155 = load i64, i64* %19, align 8
  %156 = zext i8 %154 to i64
  br label %157

157:                                              ; preds = %153, %143
  %158 = phi i64 [ %156, %153 ], [ %144, %143 ]
  %159 = phi i64 [ %155, %153 ], [ %145, %143 ]
  %160 = phi i8 [ %154, %153 ], [ %146, %143 ]
  %161 = icmp slt i8 %160, 0
  %162 = select i1 %161, i64 %159, i64 %158
  %163 = icmp eq i64 %162, 14
  br i1 %163, label %164, label %171

164:                                              ; preds = %157
  %165 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i64 14) #13
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %195, label %167

167:                                              ; preds = %164
  %168 = load i8, i8* %45, align 1
  %169 = load i64, i64* %19, align 8
  %170 = zext i8 %168 to i64
  br label %171

171:                                              ; preds = %167, %157
  %172 = phi i64 [ %170, %167 ], [ %158, %157 ]
  %173 = phi i64 [ %169, %167 ], [ %159, %157 ]
  %174 = phi i8 [ %168, %167 ], [ %160, %157 ]
  %175 = icmp slt i8 %174, 0
  %176 = select i1 %175, i64 %173, i64 %172
  %177 = icmp eq i64 %176, 11
  br i1 %177, label %178, label %185

178:                                              ; preds = %171
  %179 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i64 11) #13
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %195, label %181

181:                                              ; preds = %178
  %182 = load i8, i8* %45, align 1
  %183 = load i64, i64* %19, align 8
  %184 = zext i8 %182 to i64
  br label %185

185:                                              ; preds = %181, %171
  %186 = phi i64 [ %184, %181 ], [ %172, %171 ]
  %187 = phi i64 [ %183, %181 ], [ %173, %171 ]
  %188 = phi i8 [ %182, %181 ], [ %174, %171 ]
  %189 = icmp slt i8 %188, 0
  %190 = select i1 %189, i64 %187, i64 %186
  %191 = icmp eq i64 %190, 5
  br i1 %191, label %192, label %196

192:                                              ; preds = %185
  %193 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i64 5) #13
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192, %178, %164, %150, %136, %122, %108, %94, %80, %66, %52
  br label %196

196:                                              ; preds = %195, %192, %185
  %197 = phi i8 [ 1, %195 ], [ 0, %192 ], [ 0, %185 ]
  %198 = load i8, i8* %45, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %196
  %201 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %200, %196
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #13
  br label %203

203:                                              ; preds = %202, %13, %9
  %204 = phi i8 [ 0, %9 ], [ %197, %202 ], [ 0, %13 ]
  %205 = and i8 %204, 1
  br label %206

206:                                              ; preds = %2, %203
  %207 = phi i8 [ 0, %2 ], [ %205, %203 ]
  store i8 %207, i8* %8, align 8
  %208 = bitcast i8* %4 to %"class.tint::diag::Printer"*
  ret %"class.tint::diag::Printer"* %208
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4tint4diag7PrinterD2Ev(%"class.tint::diag::Printer"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4tint4diag12_GLOBAL__N_112PrinterLinuxD0Ev(%"class.tint::diag::(anonymous namespace)::PrinterLinux"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.tint::diag::(anonymous namespace)::PrinterLinux", %"class.tint::diag::(anonymous namespace)::PrinterLinux"* %0, i64 0, i32 0
  tail call void @_ZN4tint4diag7PrinterD2Ev(%"class.tint::diag::Printer"* %2) #13
  %3 = bitcast %"class.tint::diag::(anonymous namespace)::PrinterLinux"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @_ZN4tint4diag12_GLOBAL__N_112PrinterLinux5writeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS0_5StyleE(%"class.tint::diag::(anonymous namespace)::PrinterLinux"* nocapture readonly, %"class.std::__1::basic_string"* nocapture dereferenceable(24), %"struct.tint::diag::Style"* nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.tint::diag::Style", %"struct.tint::diag::Style"* %2, i64 0, i32 1
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %"class.tint::diag::(anonymous namespace)::PrinterLinux", %"class.tint::diag::(anonymous namespace)::PrinterLinux"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.tint::diag::Style", %"struct.tint::diag::Style"* %2, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %32 [
    i32 0, label %13
    i32 1, label %16
    i32 2, label %18
    i32 3, label %20
    i32 4, label %22
    i32 5, label %24
    i32 6, label %26
    i32 7, label %28
    i32 8, label %30
  ]

13:                                               ; preds = %10
  %14 = select i1 %6, [5 x i8]* @.str.13, [5 x i8]* @.str.14
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %14, i64 0, i64 0
  br label %32

16:                                               ; preds = %10
  %17 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0)
  br label %32

18:                                               ; preds = %10
  %19 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)
  br label %32

20:                                               ; preds = %10
  %21 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)
  br label %32

22:                                               ; preds = %10
  %23 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)
  br label %32

24:                                               ; preds = %10
  %25 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0)
  br label %32

26:                                               ; preds = %10
  %27 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0)
  br label %32

28:                                               ; preds = %10
  %29 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)
  br label %32

30:                                               ; preds = %10
  %31 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)
  br label %32

32:                                               ; preds = %30, %28, %26, %24, %22, %20, %18, %16, %13, %10
  %33 = phi i8* [ %31, %30 ], [ %29, %28 ], [ %27, %26 ], [ %25, %24 ], [ %23, %22 ], [ %21, %20 ], [ %19, %18 ], [ %17, %16 ], [ %15, %13 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.31, i64 0, i64 0), %10 ]
  %34 = tail call i64 @strlen(i8* %33) #15
  %35 = getelementptr inbounds %"class.tint::diag::(anonymous namespace)::PrinterLinux", %"class.tint::diag::(anonymous namespace)::PrinterLinux"* %0, i64 0, i32 1
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8
  %37 = tail call i64 @fwrite(i8* %33, i64 1, i64 %34, %struct._IO_FILE* %36) #13
  br label %38

38:                                               ; preds = %3, %32
  %39 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %48 = zext i8 %41 to i64
  %49 = select i1 %42, i8* %44, i8* %47
  %50 = select i1 %42, i64 %46, i64 %48
  %51 = getelementptr inbounds %"class.tint::diag::(anonymous namespace)::PrinterLinux", %"class.tint::diag::(anonymous namespace)::PrinterLinux"* %0, i64 0, i32 1
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %51, align 8
  %53 = tail call i64 @fwrite(i8* %49, i64 1, i64 %50, %struct._IO_FILE* %52)
  %54 = load i8, i8* %7, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %38
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %51, align 8
  %58 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i64 1, i64 4, %struct._IO_FILE* %57) #13
  br label %59

59:                                               ; preds = %38, %56
  ret void
}

; Function Attrs: nounwind
declare i32 @isatty(i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fileno(%struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
