; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_caret.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_caret.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_RectF = type { float, float, float, float }
%"class.fxcrt::UnownedPtr.30" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.31" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.3" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::UnownedPtr.32" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type opaque
%"class.fxcrt::UnownedPtr.33" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.14", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.22" }
%"class.fxcrt::UnownedPtr.14" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.20", %"class.fxcrt::UnownedPtr.21" }
%"class.fxcrt::UnownedPtr.20" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.21" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::unique_ptr.24" = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::unique_ptr.24"* }
%class.CFWL_Caret = type { %class.CFWL_Widget, %"class.CFX_Timer::CallbackIface", %"class.std::__1::unique_ptr" }
%"class.CFX_Timer::CallbackIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_Timer* }
%class.CFX_Timer = type { i32, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CFX_Timer::HandlerIface"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CFX_Timer::HandlerIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %"class.CFX_Timer::CallbackIface"* }
%class.CFWL_App = type { %"class.cppgc::internal::BasicMember.12", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.13" }
%"class.cppgc::internal::BasicMember.12" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.31" }
%class.IFWL_ThemeProvider = type { %"class.cppgc::GarbageCollectedMixin", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34" }
%"class.cppgc::internal::BasicMember.34" = type { %"class.cppgc::internal::MemberBase" }
%"class.CFWL_App::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%class.CFWL_Message = type opaque
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CFWL_Event = type opaque
%class.CFX_PTemplate = type { float, float }

@_ZTV10CFWL_Caret = hidden unnamed_addr constant { [21 x i8*], [5 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)* @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CFWL_Caret*)* @_ZN10CFWL_CaretD2Ev to i8*), i8* bitcast (void (%class.CFWL_Caret*)* @_ZN10CFWL_CaretD0Ev to i8*), i8* bitcast (void (%class.CFWL_Caret*, %class.CFWL_Message*)* @_ZN10CFWL_Caret16OnProcessMessageEP12CFWL_Message to i8*), i8* bitcast (void (%class.CFWL_Widget*, %class.CFWL_Event*)* @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event to i8*), i8* bitcast (void (%class.CFWL_Caret*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN10CFWL_Caret12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_Widget*)* @_ZN11CFWL_Widget11PreFinalizeEv to i8*), i8* bitcast (i32 (%class.CFWL_Caret*)* @_ZNK10CFWL_Caret10GetClassIDEv to i8*), i8* bitcast (i1 (%class.CFWL_Widget*)* @_ZNK11CFWL_Widget6IsFormEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetClientRectEv to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32, i32)* @_ZN11CFWL_Widget14ModifyStylesExEjj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget9SetStatesEj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget12RemoveStatesEj to i8*), i8* bitcast (void (%class.CFWL_Caret*)* @_ZN10CFWL_Caret6UpdateEv to i8*), i8* bitcast (i32 (%class.CFWL_Widget*, %class.CFX_PTemplate*)* @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CFWL_Caret*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN10CFWL_Caret10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_Caret*)* @_ZN10CFWL_Caret12OnTimerFiredEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%class.CFWL_Caret*)* @_ZThn88_N10CFWL_CaretD1Ev to i8*), i8* bitcast (void (%class.CFWL_Caret*)* @_ZThn88_N10CFWL_CaretD0Ev to i8*), i8* bitcast (void (%class.CFWL_Caret*)* @_ZThn88_N10CFWL_Caret12OnTimerFiredEv to i8*)] }, align 8
@__const._ZN10CFWL_Caret11DrawCaretBKEP16CFGAS_GEGraphicsRK10CFX_Matrix.param = private unnamed_addr constant { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" } { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" } { %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CFX_RectF { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::UnownedPtr.30" { %class.CFX_RectF* inttoptr (i64 -6148914691236517206 to %class.CFX_RectF*) }, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", %"class.fxcrt::UnownedPtr.31" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, %"class.fxcrt::UnownedPtr.32" { %class.CFGAS_GEPath* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEPath*) }, %"class.fxcrt::UnownedPtr.33" { %class.CFGAS_GEGraphics* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEGraphics*) } }, align 8

@_ZN10CFWL_CaretC1EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_ = hidden unnamed_addr alias void (%class.CFWL_Caret*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"*, %class.CFWL_Widget*), void (%class.CFWL_Caret*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"*, %class.CFWL_Widget*)* @_ZN10CFWL_CaretC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_
@_ZN10CFWL_CaretD1Ev = hidden unnamed_addr alias void (%class.CFWL_Caret*), void (%class.CFWL_Caret*)* @_ZN10CFWL_CaretD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_CaretC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_Caret*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget* %5, %class.CFWL_App* %1, %"class.CFWL_Widget::Properties"* dereferenceable(12) %2, %class.CFWL_Widget* %3) #7
  %6 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 0, i64* %9, align 8
  tail call void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget* %5, i32 1) #7
  ret void
}

declare void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #1

declare void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_CaretD2Ev(%class.CFWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Timer*, %class.CFX_Timer** %4, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %4, align 8
  %6 = icmp eq %class.CFX_Timer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %5) #7
  %8 = bitcast %class.CFX_Timer* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %10) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N10CFWL_CaretD1Ev(%class.CFWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 22
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 24
  %7 = bitcast i32* %6 to %class.CFX_Timer**
  %8 = load %class.CFX_Timer*, %class.CFX_Timer** %7, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %7, align 8
  %9 = icmp eq %class.CFX_Timer* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %8) #7
  %11 = bitcast %class.CFX_Timer* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast i32* %2 to %class.CFWL_Widget*
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %13) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_CaretD0Ev(%class.CFWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Timer*, %class.CFX_Timer** %4, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %4, align 8
  %6 = icmp eq %class.CFX_Timer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %5) #7
  %8 = bitcast %class.CFX_Timer* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N10CFWL_CaretD0Ev(%class.CFWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 22
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV10CFWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 24
  %7 = bitcast i32* %6 to %class.CFX_Timer**
  %8 = load %class.CFX_Timer*, %class.CFX_Timer** %7, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %7, align 8
  %9 = icmp eq %class.CFX_Timer* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %8) #7
  %11 = bitcast %class.CFX_Timer* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast i32* %2 to %class.CFWL_Widget*
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %13) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK10CFWL_Caret10GetClassIDEv(%class.CFWL_Caret* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10CFWL_Caret6UpdateEv(%class.CFWL_Caret* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_Caret10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_Caret*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = icmp eq %class.CFGAS_GEGraphics* %1, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %6
  %13 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN10CFWL_Caret11DrawCaretBKEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false) #7
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %7, %class.CFGAS_GEGraphics* nonnull %1) #7
  %14 = call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %7) #7
  %15 = extractvalue { <2 x float>, <2 x float> } %14, 1
  %16 = bitcast <2 x float> %15 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 0
  %18 = extractelement <2 x i32> %16, i32 1
  %19 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 0
  store float 0.000000e+00, float* %19, align 8
  %20 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 1
  store float 0.000000e+00, float* %20, align 4
  %21 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 2
  %22 = bitcast float* %21 to i32*
  store i32 %17, i32* %22, align 8
  %23 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 3
  %24 = bitcast float* %23 to i32*
  store i32 %18, i32* %24, align 4
  %25 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 2, i8* %25, align 4
  %26 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 64, i32* %26, align 8
  %27 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 4 %27, i64 24, i1 false) #7
  %28 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %7) #7
  %29 = bitcast %class.IFWL_ThemeProvider* %28 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %30 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %30, i64 3
  %32 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %31, align 8
  call void %32(%class.IFWL_ThemeProvider* %28, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #7
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #7
  br label %33

33:                                               ; preds = %12, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_Caret11DrawCaretBKEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_Caret*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0, i32 1, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %3
  %11 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN10CFWL_Caret11DrawCaretBKEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false)
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %5, %class.CFGAS_GEGraphics* %1) #7
  %12 = call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %5) #7
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 1
  %14 = bitcast <2 x float> %13 to <2 x i32>
  %15 = extractelement <2 x i32> %14, i32 0
  %16 = extractelement <2 x i32> %14, i32 1
  %17 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 0
  store float 0.000000e+00, float* %17, align 8
  %18 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 1
  store float 0.000000e+00, float* %18, align 4
  %19 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 2
  %20 = bitcast float* %19 to i32*
  store i32 %15, i32* %20, align 8
  %21 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 3
  %22 = bitcast float* %21 to i32*
  store i32 %16, i32* %22, align 4
  %23 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 2, i8* %23, align 4
  %24 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 64, i32* %24, align 8
  %25 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 4 %25, i64 24, i1 false)
  %26 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %5) #7
  %27 = bitcast %class.IFWL_ThemeProvider* %26 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %28 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %28, i64 3
  %30 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %29, align 8
  call void %30(%class.IFWL_ThemeProvider* %26, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #7
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #7
  br label %31

31:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_Caret9ShowCaretEv(%class.CFWL_Caret*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0
  %3 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0, i32 6
  %4 = bitcast %"class.cppgc::internal::BasicMember.0"* %3 to %"class.CFWL_App::AdapterIface"***
  %5 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %4, align 8
  %6 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %5, align 8
  %7 = bitcast %"class.CFWL_App::AdapterIface"* %6 to %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)***
  %8 = load %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)**, %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)*, %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)** %8, i64 4
  %10 = load %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)*, %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)** %9, align 8
  %11 = tail call %"class.CFX_Timer::HandlerIface"* %10(%"class.CFWL_App::AdapterIface"* %6) #7
  %12 = tail call i8* @_Znwm(i64 32) #8
  %13 = bitcast i8* %12 to %class.CFX_Timer*
  %14 = icmp eq %class.CFWL_Caret* %0, null
  %15 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 1
  %16 = select i1 %14, %"class.CFX_Timer::CallbackIface"* null, %"class.CFX_Timer::CallbackIface"* %15
  tail call void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer* nonnull %13, %"class.CFX_Timer::HandlerIface"* %11, %"class.CFX_Timer::CallbackIface"* %16, i32 600) #7
  %17 = ptrtoint i8* %12 to i64
  %18 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %class.CFX_Timer*, %class.CFX_Timer** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %class.CFX_Timer* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %20) #7
  %24 = bitcast %class.CFX_Timer* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #8
  br label %25

25:                                               ; preds = %23, %1
  tail call void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget* %2, i32 32) #7
  tail call void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget* %2, i32 1) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_Caret9HideCaretEv(%class.CFWL_Caret*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.CFX_Timer*, %class.CFX_Timer** %2, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %2, align 8
  %4 = icmp eq %class.CFX_Timer* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %3) #7
  %6 = bitcast %class.CFX_Timer* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget* %8, i32 32) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground*, %class.CFWL_Widget*, %class.CFGAS_GEGraphics*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #1

declare %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10CFWL_Caret16OnProcessMessageEP12CFWL_Message(%class.CFWL_Caret* nocapture, %class.CFWL_Message* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_Caret12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_Caret*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = icmp eq %class.CFGAS_GEGraphics* %1, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %6
  %13 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN10CFWL_Caret11DrawCaretBKEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false) #7
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %7, %class.CFGAS_GEGraphics* nonnull %1) #7
  %14 = call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %7) #7
  %15 = extractvalue { <2 x float>, <2 x float> } %14, 1
  %16 = bitcast <2 x float> %15 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 0
  %18 = extractelement <2 x i32> %16, i32 1
  %19 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 0
  store float 0.000000e+00, float* %19, align 8
  %20 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 1
  store float 0.000000e+00, float* %20, align 4
  %21 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 2
  %22 = bitcast float* %21 to i32*
  store i32 %17, i32* %22, align 8
  %23 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1, i32 3
  %24 = bitcast float* %23 to i32*
  store i32 %18, i32* %24, align 4
  %25 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 2, i8* %25, align 4
  %26 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 64, i32* %26, align 8
  %27 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 4 %27, i64 24, i1 false) #7
  %28 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %7) #7
  %29 = bitcast %class.IFWL_ThemeProvider* %28 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %30 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %30, i64 3
  %32 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %31, align 8
  call void %32(%class.IFWL_ThemeProvider* %28, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #7
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #7
  br label %33

33:                                               ; preds = %3, %6, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_Caret12OnTimerFiredEv(%class.CFWL_Caret*) unnamed_addr #0 align 2 {
  %2 = alloca %class.CFX_RectF, align 4
  %3 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 0, i32 0, i32 1, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget* %3, i32 1) #7
  br label %10

9:                                                ; preds = %1
  tail call void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget* %3, i32 1) #7
  br label %10

10:                                               ; preds = %9, %8
  %11 = tail call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %3) #7
  %12 = extractvalue { <2 x float>, <2 x float> } %11, 1
  %13 = bitcast %class.CFX_RectF* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fadd float %14, 1.000000e+00
  %16 = extractelement <2 x float> %12, i32 1
  %17 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  store float 0.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  store float 0.000000e+00, float* %18, align 4
  %19 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  store float %15, float* %19, align 4
  %20 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  store float %16, float* %20, align 4
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* nonnull dereferenceable(16) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  ret void
}

declare void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N10CFWL_Caret12OnTimerFiredEv(%class.CFWL_Caret*) unnamed_addr #0 align 2 {
  %2 = alloca %class.CFX_RectF, align 4
  %3 = getelementptr inbounds %class.CFWL_Caret, %class.CFWL_Caret* %0, i64 -1, i32 0, i32 1, i32 2
  %4 = bitcast i32* %3 to %class.CFWL_Widget*
  %5 = getelementptr inbounds i32, i32* %3, i64 4
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  tail call void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget* %4, i32 1) #7
  br label %11

10:                                               ; preds = %1
  tail call void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget* %4, i32 1) #7
  br label %11

11:                                               ; preds = %9, %10
  %12 = tail call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %4) #7
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 1
  %14 = bitcast %class.CFX_RectF* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = extractelement <2 x float> %13, i32 0
  %16 = fadd float %15, 1.000000e+00
  %17 = extractelement <2 x float> %13, i32 1
  %18 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  store float 0.000000e+00, float* %18, align 4
  %19 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  store float 0.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  store float %16, float* %20, align 4
  %21 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  store float %17, float* %21, align 4
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %4, %class.CFX_RectF* nonnull dereferenceable(16) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  ret void
}

declare void @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE(%class.CFWL_Widget*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event(%class.CFWL_Widget*, %class.CFWL_Event*) unnamed_addr #1

declare void @_ZN11CFWL_Widget11PreFinalizeEv(%class.CFWL_Widget*) unnamed_addr #1

declare zeroext i1 @_ZNK11CFWL_Widget6IsFormEv(%class.CFWL_Widget*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget*) unnamed_addr #1

declare void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget*, i32, i32) unnamed_addr #1

declare i32 @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE(%class.CFWL_Widget*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer*, %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::CallbackIface"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
