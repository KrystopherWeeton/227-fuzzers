; ModuleID = '../../third_party/libwebp/src/enc/filter_enc.c'
source_filename = "../../third_party/libwebp/src/enc/filter_enc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VP8EncIterator = type { i32, i32, i8*, i8*, i8*, i8*, %struct.VP8Encoder*, %struct.VP8MBInfo*, %struct.VP8BitWriter*, i8*, i32*, [37 x i8], i8*, i32, [9 x i32], [9 x i32], [4 x [3 x i64]], i64, i64, [4 x [64 x double]]*, i32, i32, i32, i32, [2 x [2 x i8]], [2 x [2 x i8]]*, i8*, i8*, i8*, i8*, i8*, [88 x i8], [3359 x i8] }
%struct.VP8Encoder = type { %struct.WebPConfig*, %struct.WebPPicture*, %struct.VP8EncFilterHeader, %struct.VP8EncSegmentHeader, i32, i32, i32, i32, i32, %struct.VP8BitWriter, [8 x %struct.VP8BitWriter], %struct.VP8TBuffer, i32, i32, i8*, i32, %struct.WebPWorker, [4 x %struct.VP8SegmentInfo], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VP8EncProba, [4 x i64], i64, i32, [3 x [4 x i32]], [3 x i32], i32, i32, i32, i32, i32, i32, i32, %struct.VP8MBInfo*, i8*, i32*, i8*, i8*, [4 x [64 x double]]*, [2 x [2 x i8]]* }
%struct.WebPConfig = type { i32, float, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.WebPPicture = type { i32, i32, i32, i32, i8*, i8*, i8*, i32, i32, i8*, i32, [2 x i32], i32*, i32, [3 x i32], i32 (i8*, i64, %struct.WebPPicture*)*, i8*, i32, i8*, %struct.WebPAuxStats*, i32, i32 (i32, %struct.WebPPicture*)*, i8*, [3 x i32], i8*, i8*, [8 x i32], i8*, i8*, [2 x i8*] }
%struct.WebPAuxStats = type { i32, [5 x float], [3 x i32], [2 x i32], [3 x [4 x i32]], [4 x i32], [4 x i32], [4 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.VP8EncFilterHeader = type { i32, i32, i32, i32 }
%struct.VP8EncSegmentHeader = type { i32, i32, i32 }
%struct.VP8BitWriter = type { i32, i32, i32, i32, i8*, i64, i64, i32 }
%struct.VP8TBuffer = type { %struct.VP8Tokens*, %struct.VP8Tokens**, i16*, i32, i32, i32 }
%struct.VP8Tokens = type opaque
%struct.WebPWorker = type { i8*, i32, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.VP8SegmentInfo = type { %struct.VP8Matrix, %struct.VP8Matrix, %struct.VP8Matrix, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.VP8Matrix = type { [16 x i16], [16 x i16], [16 x i32], [16 x i32], [16 x i16] }
%struct.VP8EncProba = type { [3 x i8], i8, [4 x [8 x [3 x [11 x i8]]]], [4 x [8 x [3 x [11 x i32]]]], [4 x [8 x [3 x [68 x i16]]]], [4 x [16 x [3 x i16*]]], i32, i32, i32 }
%struct.VP8MBInfo = type { i8, i8, [2 x i8] }

@kLevelsFromDelta = internal unnamed_addr constant [8 x [64 x i8]] [[64 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?", [64 x i8] c"\00\01\02\03\05\06\07\08\09\0B\0C\0D\0E\0F\11\12\14\15\17\18\1A\1B\1D\1E !#$&')*,-/0235689;<>???????????????????", [64 x i8] c"\00\01\02\03\05\06\07\08\09\0B\0C\0D\0E\10\11\13\14\16\17\19\1A\1C\1D\1F \22#%&()+,./124578:;=>???????????????????", [64 x i8] c"\00\01\02\03\05\06\07\08\09\0B\0C\0D\0F\10\12\13\15\16\18\19\1B\1C\1E\1F!\22$%'(*+-.0134679:<=????????????????????", [64 x i8] c"\00\01\02\03\05\06\07\08\09\0B\0C\0E\0F\11\12\14\15\17\18\1A\1B\1D\1E !#$&')*,-/0235689;<>????????????????????", [64 x i8] c"\00\01\02\04\05\07\08\09\0B\0C\0D\0F\10\11\13\14\16\17\19\1A\1C\1D\1F \22#%&()+,./124578:;=>????????????????????", [64 x i8] c"\00\01\02\04\05\07\08\09\0B\0C\0D\0F\10\12\13\15\16\18\19\1B\1C\1E\1F!\22$%'(*+-.0134679:<=?????????????????????", [64 x i8] c"\00\01\02\04\05\07\08\09\0B\0C\0E\0F\11\12\14\15\17\18\1A\1B\1D\1E !#$&')*,-/0235689;<>?????????????????????"], align 16

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @VP8FilterStrengthFromDelta(i32, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 63
  %4 = select i1 %3, i32 %1, i32 63
  %5 = sext i32 %0 to i64
  %6 = sext i32 %4 to i64
  %7 = getelementptr inbounds [8 x [64 x i8]], [8 x [64 x i8]]* @kLevelsFromDelta, i64 0, i64 %5, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  ret i32 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @VP8InitFilter(%struct.VP8EncIterator* nocapture) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @VP8StoreFilterStats(%struct.VP8EncIterator* nocapture) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @VP8AdjustFilterStrength(%struct.VP8EncIterator* nocapture readonly) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.VP8EncIterator, %struct.VP8EncIterator* %0, i64 0, i32 6
  %3 = load %struct.VP8Encoder*, %struct.VP8Encoder** %2, align 8
  %4 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 0
  %5 = load %struct.WebPConfig*, %struct.WebPConfig** %4, align 8
  %6 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %5, i64 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %50

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 2, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 0, i32 1, i32 0, i64 1
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = mul nsw i32 %14, %17
  %19 = ashr i32 %18, 3
  %20 = icmp slt i32 %19, 63
  %21 = select i1 %20, i32 %19, i32 63
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [8 x [64 x i8]], [8 x [64 x i8]]* @kLevelsFromDelta, i64 0, i64 %12, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 0, i32 6
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, %25
  br i1 %28, label %29, label %30

29:                                               ; preds = %9
  store i32 %25, i32* %26, align 4
  br label %30

30:                                               ; preds = %29, %9
  %31 = phi i32 [ %25, %29 ], [ %27, %9 ]
  %32 = icmp sgt i32 %31, 0
  %33 = select i1 %32, i32 %31, i32 0
  %34 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 1, i32 7
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 1, i32 1, i32 0, i64 1
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = mul nsw i32 %35, %38
  %40 = ashr i32 %39, 3
  %41 = icmp slt i32 %40, 63
  %42 = select i1 %41, i32 %40, i32 63
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [8 x [64 x i8]], [8 x [64 x i8]]* @kLevelsFromDelta, i64 0, i64 %12, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 1, i32 6
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, %46
  br i1 %49, label %51, label %52

50:                                               ; preds = %94, %1
  ret void

51:                                               ; preds = %30
  store i32 %46, i32* %47, align 4
  br label %52

52:                                               ; preds = %51, %30
  %53 = phi i32 [ %46, %51 ], [ %48, %30 ]
  %54 = icmp slt i32 %33, %53
  %55 = select i1 %54, i32 %53, i32 %33
  %56 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 2, i32 7
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 2, i32 1, i32 0, i64 1
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = mul nsw i32 %57, %60
  %62 = ashr i32 %61, 3
  %63 = icmp slt i32 %62, 63
  %64 = select i1 %63, i32 %62, i32 63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [8 x [64 x i8]], [8 x [64 x i8]]* @kLevelsFromDelta, i64 0, i64 %12, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 2, i32 6
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, %68
  br i1 %71, label %72, label %73

72:                                               ; preds = %52
  store i32 %68, i32* %69, align 4
  br label %73

73:                                               ; preds = %72, %52
  %74 = phi i32 [ %68, %72 ], [ %70, %52 ]
  %75 = icmp slt i32 %55, %74
  %76 = select i1 %75, i32 %74, i32 %55
  %77 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 3, i32 7
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 3, i32 1, i32 0, i64 1
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = mul nsw i32 %78, %81
  %83 = ashr i32 %82, 3
  %84 = icmp slt i32 %83, 63
  %85 = select i1 %84, i32 %83, i32 63
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [8 x [64 x i8]], [8 x [64 x i8]]* @kLevelsFromDelta, i64 0, i64 %12, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 17, i64 3, i32 6
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, %89
  br i1 %92, label %93, label %94

93:                                               ; preds = %73
  store i32 %89, i32* %90, align 4
  br label %94

94:                                               ; preds = %93, %73
  %95 = phi i32 [ %89, %93 ], [ %91, %73 ]
  %96 = icmp slt i32 %76, %95
  %97 = select i1 %96, i32 %95, i32 %76
  %98 = getelementptr inbounds %struct.VP8Encoder, %struct.VP8Encoder* %3, i64 0, i32 2, i32 1
  store i32 %97, i32* %98, align 4
  br label %50
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
