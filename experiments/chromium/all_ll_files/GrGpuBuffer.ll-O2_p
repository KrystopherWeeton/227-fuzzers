; ModuleID = '../../third_party/skia/src/gpu/GrGpuBuffer.cpp'
source_filename = "../../third_party/skia/src/gpu/GrGpuBuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp, i8* }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrBuffer = type { i32 (...)** }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.1, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %class.sk_sp.68, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.108", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.5", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.4 }
%class.sk_sp.4 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.15, %class.SkTArray.24, %class.SkTArray.26, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.8"*, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.26, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.27 }
%class.sk_sp.27 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.15 = type { %class.SkTHashTable.16 }
%class.SkTHashTable.16 = type { i32, i32, %class.SkAutoTArray.17 }
%class.SkAutoTArray.17 = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.141" }
%"struct.std::__1::pair.141" = type { i32, %class.SkTArray.142* }
%class.SkTArray.142 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.24 = type { %"class.std::__1::unique_ptr.25"*, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.142, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.26 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.40 }
%class.SkFibBlockSizes.40 = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.68 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.80, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.96, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.72 }
%class.SkTHashTable.72 = type { i32, i32, %class.SkAutoTArray.73 }
%class.SkAutoTArray.73 = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.80 = type { %class.SkTHashTable.81 }
%class.SkTHashTable.81 = type { i32, i32, %class.SkAutoTArray.82 }
%class.SkAutoTArray.82 = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.89, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.89 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.90" }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.95, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.95 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.134 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.134 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.135, void (i8*)*, i8* }
%class.SkNVRefCnt.135 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.96 = type { %class.SkTHashTable.97 }
%class.SkTHashTable.97 = type { i32, i32, %class.SkAutoTArray.98 }
%class.SkAutoTArray.98 = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.1, %class.sk_sp.111, %class.sk_sp.111 }
%class.sk_sp.111 = type { %class.GrGpuBuffer* }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.133 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.133 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%class.SkTraceMemoryDump = type opaque

$_ZNK11GrGpuBuffer15getResourceTypeEv = comdat any

$_ZN11GrGpuBufferD2Ev = comdat any

$_ZN11GrGpuBufferD0Ev = comdat any

$_ZN13GrGpuResource9onReleaseEv = comdat any

$_ZN13GrGpuResource9onAbandonEv = comdat any

$_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString = comdat any

$_ZNK11GrGpuBuffer15onGpuMemorySizeEv = comdat any

$_ZNK11GrGpuBuffer4sizeEv = comdat any

$_ZNK11GrGpuBuffer3refEv = comdat any

$_ZNK11GrGpuBuffer5unrefEv = comdat any

$_ZNK11GrGpuBuffer11isCpuBufferEv = comdat any

$_ZThn152_N11GrGpuBufferD1Ev = comdat any

$_ZThn152_N11GrGpuBufferD0Ev = comdat any

$_ZThn152_NK11GrGpuBuffer3refEv = comdat any

$_ZThn152_NK11GrGpuBuffer5unrefEv = comdat any

$_ZThn152_NK11GrGpuBuffer4sizeEv = comdat any

$_ZThn152_NK11GrGpuBuffer11isCpuBufferEv = comdat any

@_ZTV11GrGpuBuffer = hidden unnamed_addr constant { [18 x i8*], [8 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*)* @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i8* (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer15getResourceTypeEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZN11GrGpuBufferD2Ev to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZN11GrGpuBufferD0Ev to i8*), i8* bitcast (void (%class.GrGpuResource*)* @_ZN13GrGpuResource9onReleaseEv to i8*), i8* bitcast (void (%class.GrGpuResource*)* @_ZN13GrGpuResource9onAbandonEv to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrGpuBuffer*, %class.GrScratchKey*)* @_ZNK11GrGpuBuffer17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (i64 (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer15onGpuMemorySizeEv to i8*), i8* bitcast (i64 (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer4sizeEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer3refEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer5unrefEv to i8*), i8* bitcast (i1 (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer11isCpuBufferEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [8 x i8*] [i8* inttoptr (i64 -152 to i8*), i8* null, i8* bitcast (void (%class.GrGpuBuffer*)* @_ZThn152_N11GrGpuBufferD1Ev to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZThn152_N11GrGpuBufferD0Ev to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer3refEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer5unrefEv to i8*), i8* bitcast (i64 (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer4sizeEv to i8*), i8* bitcast (i1 (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer11isCpuBufferEv to i8*)] }, align 8
@_ZZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKeyE5kType = internal global i32 0, align 4
@_ZGVZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKeyE5kType = internal global i64 0, align 8
@.str = private unnamed_addr constant [14 x i8] c"Buffer Object\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGpuBufferC2EP5GrGpum15GrGpuBufferType15GrAccessPattern(%class.GrGpuBuffer*, %class.GrGpu*, i64, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* %6, %class.GrGpu* %1) #9
  %7 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV11GrGpuBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV11GrGpuBuffer, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 2
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 3
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 4
  store i32 %4, i32* %11, align 8
  %12 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 5
  store i32 %3, i32* %12, align 4
  ret void
}

declare void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource*, %class.GrGpu*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN11GrGpuBuffer3mapEv(%class.GrGpuBuffer*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.GrGpuBuffer* %0 to void (%class.GrGpuBuffer*)***
  %11 = load void (%class.GrGpuBuffer*)**, void (%class.GrGpuBuffer*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.GrGpuBuffer*)*, void (%class.GrGpuBuffer*)** %11, i64 13
  %13 = load void (%class.GrGpuBuffer*)*, void (%class.GrGpuBuffer*)** %12, align 8
  tail call void %13(%class.GrGpuBuffer* %0) #9
  %14 = load i8*, i8** %6, align 8
  br label %15

15:                                               ; preds = %9, %5, %1
  %16 = phi i8* [ null, %1 ], [ %7, %5 ], [ %14, %9 ]
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.GrGpuBuffer* %0 to void (%class.GrGpuBuffer*)***
  %7 = load void (%class.GrGpuBuffer*)**, void (%class.GrGpuBuffer*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.GrGpuBuffer*)*, void (%class.GrGpuBuffer*)** %7, i64 14
  %9 = load void (%class.GrGpuBuffer*)*, void (%class.GrGpuBuffer*)** %8, align 8
  tail call void %9(%class.GrGpuBuffer* %0) #9
  %10 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 2
  store i8* null, i8** %10, align 8
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11GrGpuBuffer8isMappedEv(%class.GrGpuBuffer* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11GrGpuBuffer10updateDataEPKvm(%class.GrGpuBuffer*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = bitcast %class.GrGpuBuffer* %0 to i1 (%class.GrGpuBuffer*, i8*, i64)***
  %9 = load i1 (%class.GrGpuBuffer*, i8*, i64)**, i1 (%class.GrGpuBuffer*, i8*, i64)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.GrGpuBuffer*, i8*, i64)*, i1 (%class.GrGpuBuffer*, i8*, i64)** %9, i64 15
  %11 = load i1 (%class.GrGpuBuffer*, i8*, i64)*, i1 (%class.GrGpuBuffer*, i8*, i64)** %10, align 8
  %12 = tail call zeroext i1 %11(%class.GrGpuBuffer* %0, i8* %1, i64 %2) #9
  br label %13

13:                                               ; preds = %3, %7
  %14 = phi i1 [ %12, %7 ], [ false, %3 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKey(i64, i32, %class.GrScratchKey*) local_unnamed_addr #0 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKeyE5kType to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKeyE5kType) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @_ZN12GrScratchKey20GenerateResourceTypeEv() #9
  store i32 %10, i32* @_ZZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKeyE5kType, align 4
  %11 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKeyE5kType to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKeyE5kType) #9
  br label %12

12:                                               ; preds = %6, %9, %3
  %13 = load i32, i32* @_ZZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKeyE5kType, align 4
  %14 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 0, i32 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %17 = icmp eq i32* %15, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = bitcast i32* %15 to i8*
  tail call void @_Z7sk_freePv(i8* %19) #9
  br label %20

20:                                               ; preds = %12, %18
  store i32* %16, i32** %14, align 8
  %21 = or i32 %13, 1310720
  %22 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  store i32 %1, i32* %23, align 4
  %24 = trunc i64 %0 to i32
  %25 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i64 3
  store i32 %24, i32* %25, align 4
  %26 = lshr i64 %0, 32
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i64 4
  store i32 %27, i32* %28, align 4
  %29 = icmp eq %class.GrScratchKey* %2, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %32 = lshr i32 %21, 16
  %33 = zext i32 %32 to i64
  %34 = add nsw i64 %33, -4
  %35 = tail call i32 @_Z17GrResourceKeyHashPKjm(i32* %31, i64 %34) #9
  store i32 %35, i32* %16, align 4
  br label %36

36:                                               ; preds = %20, %30
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

declare i32 @_ZN12GrScratchKey20GenerateResourceTypeEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11GrGpuBuffer17computeScratchKeyEP12GrScratchKey(%class.GrGpuBuffer* nocapture readonly, %class.GrScratchKey*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @llvm.ctpop.i64(i64 %4) #9, !range !3
  %6 = icmp ult i64 %5, 2
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  tail call void @_ZN11GrGpuBuffer33ComputeScratchKeyForDynamicBufferEm15GrGpuBufferTypeP12GrScratchKey(i64 %4, i32 %13, %class.GrScratchKey* %1)
  br label %14

14:                                               ; preds = %11, %7, %2
  ret void
}

declare void @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGpuResource*, %class.SkTraceMemoryDump*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK11GrGpuBuffer15getResourceTypeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrGpuBufferD2Ev(%class.GrGpuBuffer*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %2) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrGpuBufferD0Ev(%class.GrGpuBuffer*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrGpuResource9onReleaseEv(%class.GrGpuResource*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrGpuResource9onAbandonEv(%class.GrGpuResource*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString(%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK11GrGpuBuffer15onGpuMemorySizeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK11GrGpuBuffer4sizeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11GrGpuBuffer3refEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11GrGpuBuffer5unrefEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i32* %3, i32 -1 acq_rel
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %2, i64 -1
  %8 = bitcast %class.GrIORef* %7 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %8, i32 0) #9
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK11GrGpuBuffer11isCpuBufferEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_N11GrGpuBufferD1Ev(%class.GrGpuBuffer*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5
  %3 = bitcast %class.GrScratchKey* %2 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %3) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_N11GrGpuBufferD0Ev(%class.GrGpuBuffer*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_NK11GrGpuBuffer3refEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 0
  %3 = atomicrmw add i32* %2, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_NK11GrGpuBuffer5unrefEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %union.anon, %union.anon* %2, i64 0, i32 0, i64 0
  %4 = atomicrmw add i32* %3, i32 -1 acq_rel
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %union.anon, %union.anon* %2, i64 -1, i32 0, i64 5
  %8 = bitcast i32* %7 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %8, i32 0) #9
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZThn152_NK11GrGpuBuffer4sizeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5
  %3 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 4, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon* %3 to i64*
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn152_NK11GrGpuBuffer11isCpuBufferEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource*) unnamed_addr #7

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i64 0, i64 65}
