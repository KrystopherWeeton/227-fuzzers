; ModuleID = '../../base/trace_event/trace_event_impl.cc'
source_filename = "../../base/trace_event/trace_event_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon, i32, i64, i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.0" }
%"class.base::time_internal::TimeBase.0" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%union.anon = type { i32 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.5" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::RepeatingCallback.302" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::trace_event::TraceLog" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.base::Lock", i8, i32, %"class.std::__1::unique_ptr.17", %"class.std::__1::vector.23", %"class.base::Lock", i8, %"class.std::__1::vector.31", %"class.std::__1::map", %"class.std::__1::vector.45", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", i32, [4 x i8], %"class.std::__1::unordered_map.72", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.96", %"class.std::__1::unordered_map.120", %"class.base::TimeTicks", i64, i32, %"class.base::TimeDelta", %"struct.std::__1::atomic.148", %"class.base::trace_event::TraceConfig", %"class.std::__1::vector.197", %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalBoolean", %"class.base::ThreadLocalBoolean", %"class.std::__1::unordered_map.255", %"class.std::__1::unique_ptr.279", i64, %"class.base::RepeatingCallback.285", %class.scoped_refptr.286, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.288", i64, i8, %"struct.std::__1::atomic.289", %"struct.std::__1::atomic.293", %"struct.std::__1::atomic.297", {}* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.base::trace_event::TraceBuffer"* }
%"class.base::trace_event::TraceBuffer" = type opaque
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::unique_ptr.25" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::unique_ptr.25"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.std::__1::__compressed_pair.33" }
%"class.base::trace_event::TraceLog::EnabledStateObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.std::__1::unique_ptr.47"*, %"class.std::__1::unique_ptr.47"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::unique_ptr.47" = type opaque
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::unique_ptr.47"* }
%"class.std::__1::unordered_map.72" = type { %"class.std::__1::__hash_table.73" }
%"class.std::__1::__hash_table.73" = type <{ %"class.std::__1::unique_ptr.74", %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.92", [4 x i8] }>
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76", %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.std::__1::__hash_node_base.77"** }
%"struct.std::__1::__hash_node_base.77" = type { %"struct.std::__1::__hash_node_base.77"* }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.std::__1::__bucket_list_deallocator.79" }
%"class.std::__1::__bucket_list_deallocator.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::__hash_node_base.77" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { float }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.68", [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"class.std::__1::unordered_map.96" = type { %"class.std::__1::__hash_table.97" }
%"class.std::__1::__hash_table.97" = type <{ %"class.std::__1::unique_ptr.98", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.116", [4 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base.101"** }
%"struct.std::__1::__hash_node_base.101" = type { %"struct.std::__1::__hash_node_base.101"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator.103" }
%"class.std::__1::__bucket_list_deallocator.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base.101" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"class.std::__1::unordered_map.120" = type { %"class.std::__1::__hash_table.121" }
%"class.std::__1::__hash_table.121" = type <{ %"class.std::__1::unique_ptr.122", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", [4 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124", %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.125"** }
%"struct.std::__1::__hash_node_base.125" = type { %"struct.std::__1::__hash_node_base.125"* }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::__bucket_list_deallocator.127" }
%"class.std::__1::__bucket_list_deallocator.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::__hash_node_base.125" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::atomic.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__cxx_atomic_impl.151" }
%"struct.std::__1::__cxx_atomic_impl.151" = type { %"struct.std::__1::__cxx_atomic_base_impl.152" }
%"struct.std::__1::__cxx_atomic_base_impl.152" = type { i32 }
%"class.base::trace_event::TraceConfig" = type { i32, i64, i64, i8, %"class.base::trace_event::TraceConfigCategoryFilter", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"class.base::trace_event::TraceConfig::ProcessFilterConfig", %"class.std::__1::vector.197", %"class.std::__1::unordered_set.232", %"class.std::__1::unordered_set.232" }
%"class.base::trace_event::TraceConfigCategoryFilter" = type { %"class.std::__1::vector.153", %"class.std::__1::vector.153", %"class.std::__1::vector.153" }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.std::__1::basic_string"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig" = type <{ %"class.std::__1::set", %"class.std::__1::vector.169", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler", [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.160" }
%"class.std::__1::__tree.160" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"class.std::__1::__compressed_pair.171" }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler" = type { i32 }
%"class.base::trace_event::TraceConfig::ProcessFilterConfig" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.176" }
%"class.std::__1::__hash_table.176" = type <{ %"class.std::__1::unique_ptr.177", %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.194", [4 x i8] }>
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179", %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::__hash_node_base.180"** }
%"struct.std::__1::__hash_node_base.180" = type { %"struct.std::__1::__hash_node_base.180"* }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.std::__1::__bucket_list_deallocator.182" }
%"class.std::__1::__bucket_list_deallocator.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.std::__1::__hash_node_base.180" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"class.std::__1::unordered_set.232" = type { %"class.std::__1::__hash_table.233" }
%"class.std::__1::__hash_table.233" = type <{ %"class.std::__1::unique_ptr.234", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::__hash_node_base.237"** }
%"struct.std::__1::__hash_node_base.237" = type { %"struct.std::__1::__hash_node_base.237"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::__bucket_list_deallocator.239" }
%"class.std::__1::__bucket_list_deallocator.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.237" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.std::__1::__compressed_pair.227" }
%"class.base::trace_event::TraceConfig::EventFilterConfig" = type { %"class.std::__1::basic_string", %"class.base::trace_event::TraceConfigCategoryFilter", %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.199" }
%"union.absl::variant_internal::DestructibleUnionImpl.199" = type { %"union.absl::variant_internal::DestructibleUnionImpl.200" }
%"union.absl::variant_internal::DestructibleUnionImpl.200" = type { %"union.absl::variant_internal::DestructibleUnionImpl.201" }
%"union.absl::variant_internal::DestructibleUnionImpl.201" = type { %"union.absl::variant_internal::DestructibleUnionImpl.202" }
%"union.absl::variant_internal::DestructibleUnionImpl.202" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer.254" }
%"class.base::ThreadLocalPointer.254" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.std::__1::unordered_map.255" = type { %"class.std::__1::__hash_table.256" }
%"class.std::__1::__hash_table.256" = type <{ %"class.std::__1::unique_ptr.257", %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.275", [4 x i8] }>
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259", %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.std::__1::__hash_node_base.260"** }
%"struct.std::__1::__hash_node_base.260" = type { %"struct.std::__1::__hash_node_base.260"* }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::__bucket_list_deallocator.262" }
%"class.std::__1::__bucket_list_deallocator.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base.260" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.base::trace_event::TraceBufferChunk"* }
%"class.base::trace_event::TraceBufferChunk" = type opaque
%"class.base::RepeatingCallback.285" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.286 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.287" }>
%"class.base::RefCountedThreadSafe.287" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.288" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.289" = type { %"struct.std::__1::__atomic_base.290" }
%"struct.std::__1::__atomic_base.290" = type { %"struct.std::__1::__cxx_atomic_impl.291" }
%"struct.std::__1::__cxx_atomic_impl.291" = type { %"struct.std::__1::__cxx_atomic_base_impl.292" }
%"struct.std::__1::__cxx_atomic_base_impl.292" = type { void (%"class.base::trace_event::TraceEvent"*, i1, %"struct.base::trace_event::TraceEventHandle"*)* }
%"struct.base::trace_event::TraceEventHandle" = type { i32, i32 }
%"struct.std::__1::atomic.293" = type { %"struct.std::__1::__atomic_base.294" }
%"struct.std::__1::__atomic_base.294" = type { %"struct.std::__1::__cxx_atomic_impl.295" }
%"struct.std::__1::__cxx_atomic_impl.295" = type { %"struct.std::__1::__cxx_atomic_base_impl.296" }
%"struct.std::__1::__cxx_atomic_base_impl.296" = type { void ()* }
%"struct.std::__1::atomic.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__cxx_atomic_impl.299" }
%"struct.std::__1::__cxx_atomic_impl.299" = type { %"struct.std::__1::__cxx_atomic_base_impl.300" }
%"struct.std::__1::__cxx_atomic_base_impl.300" = type { void (i8*, i8*, i64, i32, i1, %"class.base::TimeTicks"*, %"class.base::ThreadTicks"*, i64)* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4base11trace_event24ConvertableToTraceFormatD2Ev = comdat any

$_ZN4base11trace_event24ConvertableToTraceFormatD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [57 x i8] c"{\22pid\22:%i,\22tid\22:%i,\22ts\22:%ld,\22ph\22:\22%c\22,\22cat\22:\22%s\22,\22name\22:\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c",\22args\22:\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"\22__stripped__\22\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"\22:\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c",\22dur\22:%ld\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c",\22tdur\22:%ld\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c",\22tidelta\22:%ld\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c",\22tts\22:%ld\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c",\22ticount\22:%ld\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c", \22use_async_tts\22:1\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c",\22scope\22:\22%s\22\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c",\22id\22:\220x%lx\22\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c",\22id2\22:{\22local\22:\220x%lx\22}\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c",\22id2\22:{\22global\22:\220x%lx\22}\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c",\22bp\22:\22e\22\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c",\22bind_id\22:\220x%lx\22\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c",\22flow_in\22:true\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c",\22flow_out\22:true\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c",\22s\22:\22%c\22\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c", {\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c":\00", align 1
@_ZTVN4base11trace_event24ConvertableToTraceFormatE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::ConvertableToTraceFormat"*)* @_ZN4base11trace_event24ConvertableToTraceFormatD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::ConvertableToTraceFormat"*)* @_ZN4base11trace_event24ConvertableToTraceFormatD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, align 8
@.str.28 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4base11trace_event10TraceEventC1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TraceEvent"*), void (%"class.base::trace_event::TraceEvent"*)* @_ZN4base11trace_event10TraceEventC2Ev
@_ZN4base11trace_event10TraceEventC1EiNS_9TimeTicksENS_11ThreadTicksENS0_22ThreadInstructionCountEcPKhPKcS8_yyPNS0_14TraceArgumentsEj = hidden unnamed_addr alias void (%"class.base::trace_event::TraceEvent"*, i32, i64, i64, i64, i8, i8*, i8*, i8*, i64, i64, %"class.base::trace_event::TraceArguments"*, i32), void (%"class.base::trace_event::TraceEvent"*, i32, i64, i64, i64, i8, i8*, i8*, i8*, i64, i64, %"class.base::trace_event::TraceArguments"*, i32)* @_ZN4base11trace_event10TraceEventC2EiNS_9TimeTicksENS_11ThreadTicksENS0_22ThreadInstructionCountEcPKhPKcS8_yyPNS0_14TraceArgumentsEj
@_ZN4base11trace_event10TraceEventD1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TraceEvent"*), void (%"class.base::trace_event::TraceEvent"*)* @_ZN4base11trace_event10TraceEventD2Ev
@_ZN4base11trace_event10TraceEventC1EOS1_ = hidden unnamed_addr alias void (%"class.base::trace_event::TraceEvent"*, %"class.base::trace_event::TraceEvent"*), void (%"class.base::trace_event::TraceEvent"*, %"class.base::trace_event::TraceEvent"*)* @_ZN4base11trace_event10TraceEventC2EOS1_

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE(%"class.base::trace_event::ConvertableToTraceFormat"* nocapture readnone, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11trace_event10TraceEventC2Ev(%"class.base::trace_event::TraceEvent"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 2, i32 0
  %3 = bitcast %"class.base::trace_event::TraceEvent"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  %4 = bitcast i64* %2 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %4, align 8
  %5 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 4, i32 0
  store i64 -1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 5, i32 0
  %7 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 12, i32 0
  %8 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 15
  %9 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 49, i1 false)
  %10 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  store i8 66, i8* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event10TraceEventC2EiNS_9TimeTicksENS_11ThreadTicksENS0_22ThreadInstructionCountEcPKhPKcS8_yyPNS0_14TraceArgumentsEj(%"class.base::trace_event::TraceEvent"*, i32, i64, i64, i64, i8 signext, i8*, i8*, i8*, i64, i64, %"class.base::trace_event::TraceArguments"*, i32) unnamed_addr #3 align 2 {
  %14 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 2, i32 0
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 4, i32 0
  store i64 %4, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 5, i32 0
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 6
  store i8* %8, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 7
  store i64 %9, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 8
  store i8* %6, i8** %22, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 9
  store i8* %7, i8** %23, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 10
  %25 = getelementptr inbounds %"class.base::trace_event::StringStorage", %"class.base::trace_event::StringStorage"* %24, i64 0, i32 0
  store %"struct.base::trace_event::StringStorage::Data"* null, %"struct.base::trace_event::StringStorage::Data"** %25, align 8
  %26 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %26, i64 0, i32 0
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 12, i32 0
  store i32 %1, i32* %28, align 8
  %29 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 13
  store i32 %12, i32* %29, align 4
  %30 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 14
  store i64 %10, i64* %30, align 8
  %31 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 15
  store i8 %5, i8* %31, align 8
  %32 = icmp eq %"class.base::trace_event::TraceArguments"* %11, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %13
  %34 = tail call dereferenceable(40) %"class.base::trace_event::TraceArguments"* @_ZN4base11trace_event14TraceArgumentsaSEOS1_(%"class.base::trace_event::TraceArguments"* %26, %"class.base::trace_event::TraceArguments"* nonnull dereferenceable(40) %11) #11
  %35 = load i32, i32* %29, align 4
  br label %36

36:                                               ; preds = %13, %33
  %37 = phi i32 [ %12, %13 ], [ %35, %33 ]
  %38 = and i32 %37, 1
  %39 = icmp ne i32 %38, 0
  tail call void @_ZN4base11trace_event14TraceArguments13CopyStringsToEPNS0_13StringStorageEbPPKcS6_(%"class.base::trace_event::TraceArguments"* %26, %"class.base::trace_event::StringStorage"* %24, i1 zeroext %39, i8** %23, i8** %20) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event10TraceEvent8InitArgsEPNS0_14TraceArgumentsE(%"class.base::trace_event::TraceEvent"*, %"class.base::trace_event::TraceArguments"*) local_unnamed_addr #3 align 2 {
  %3 = icmp eq %"class.base::trace_event::TraceArguments"* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11
  %6 = tail call dereferenceable(40) %"class.base::trace_event::TraceArguments"* @_ZN4base11trace_event14TraceArgumentsaSEOS1_(%"class.base::trace_event::TraceArguments"* %5, %"class.base::trace_event::TraceArguments"* nonnull dereferenceable(40) %1) #11
  br label %7

7:                                                ; preds = %2, %4
  %8 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11
  %9 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 10
  %10 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 13
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp ne i32 %12, 0
  %14 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 6
  tail call void @_ZN4base11trace_event14TraceArguments13CopyStringsToEPNS0_13StringStorageEbPPKcS6_(%"class.base::trace_event::TraceArguments"* %8, %"class.base::trace_event::StringStorage"* %9, i1 zeroext %13, i8** %14, i8** %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event10TraceEventD2Ev(%"class.base::trace_event::TraceEvent"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %39, label %5

5:                                                ; preds = %1, %34
  %6 = phi i64 [ %35, %34 ], [ 0, %1 ]
  %7 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 1, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 8
  br i1 %9, label %10, label %21

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 3, i64 %6
  %12 = bitcast %"union.base::trace_event::TraceValue"* %11 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %13 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %12, align 8
  %14 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %13 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %17 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %17, i64 1
  %19 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %18, align 8
  tail call void %19(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %13) #11
  %20 = load i8, i8* %7, align 1
  br label %21

21:                                               ; preds = %15, %5
  %22 = phi i8 [ %8, %5 ], [ %20, %15 ]
  %23 = icmp eq i8 %22, 9
  br i1 %23, label %24, label %34

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 3, i64 %6
  %26 = bitcast %"union.base::trace_event::TraceValue"* %25 to %"class.protozero::HeapBuffered"**
  %27 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %26, align 8
  %28 = icmp eq %"class.protozero::HeapBuffered"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %27, i64 0, i32 2, i32 1
  tail call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %30) #11
  %31 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %27, i64 0, i32 1
  tail call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %31) #11
  %32 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %27, i64 0, i32 0
  tail call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %32) #11
  %33 = bitcast %"class.protozero::HeapBuffered"* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %24, %21, %10
  %35 = add nuw nsw i64 %6, 1
  %36 = load i8, i8* %2, align 8
  %37 = zext i8 %36 to i64
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %5, label %39

39:                                               ; preds = %34, %1
  %40 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 10, i32 0
  %41 = load %"struct.base::trace_event::StringStorage::Data"*, %"struct.base::trace_event::StringStorage::Data"** %40, align 8
  %42 = icmp eq %"struct.base::trace_event::StringStorage::Data"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.base::trace_event::StringStorage::Data"* %41 to i8*
  tail call void @free(i8* %44) #11
  br label %45

45:                                               ; preds = %39, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event10TraceEventC2EOS1_(%"class.base::trace_event::TraceEvent"* nocapture, %"class.base::trace_event::TraceEvent"* nocapture dereferenceable(152)) unnamed_addr #3 align 2 {
  %3 = bitcast %"class.base::trace_event::TraceEvent"* %0 to i8*
  %4 = bitcast %"class.base::trace_event::TraceEvent"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 80, i1 false)
  %5 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 10
  %6 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 10
  %7 = getelementptr inbounds %"class.base::trace_event::StringStorage", %"class.base::trace_event::StringStorage"* %6, i64 0, i32 0
  %8 = bitcast %"class.base::trace_event::StringStorage"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::trace_event::StringStorage"* %5 to i64*
  store i64 %9, i64* %10, align 8
  store %"struct.base::trace_event::StringStorage::Data"* null, %"struct.base::trace_event::StringStorage::Data"** %7, align 8
  %11 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 0
  %12 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 11, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 40, i1 false) #11
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 12
  %14 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 12
  %15 = bitcast %union.anon* %13 to i8*
  %16 = bitcast %union.anon* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(152) %"class.base::trace_event::TraceEvent"* @_ZN4base11trace_event10TraceEventaSEOS1_(%"class.base::trace_event::TraceEvent"* returned, %"class.base::trace_event::TraceEvent"* dereferenceable(152)) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.base::trace_event::TraceEvent"* %0 to i8*
  %4 = bitcast %"class.base::trace_event::TraceEvent"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 80, i1 false)
  %5 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 10
  %6 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 10
  %7 = icmp eq %"class.base::trace_event::TraceEvent"* %0, %1
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::trace_event::StringStorage", %"class.base::trace_event::StringStorage"* %5, i64 0, i32 0
  %10 = load %"struct.base::trace_event::StringStorage::Data"*, %"struct.base::trace_event::StringStorage::Data"** %9, align 8
  %11 = icmp eq %"struct.base::trace_event::StringStorage::Data"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast %"struct.base::trace_event::StringStorage::Data"* %10 to i8*
  tail call void @free(i8* %13) #11
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %"class.base::trace_event::StringStorage", %"class.base::trace_event::StringStorage"* %6, i64 0, i32 0
  %16 = bitcast %"class.base::trace_event::StringStorage"* %6 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::trace_event::StringStorage"* %5 to i64*
  store i64 %17, i64* %18, align 8
  store %"struct.base::trace_event::StringStorage::Data"* null, %"struct.base::trace_event::StringStorage::Data"** %15, align 8
  br label %19

19:                                               ; preds = %2, %14
  %20 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11
  %21 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 11
  %22 = tail call dereferenceable(40) %"class.base::trace_event::TraceArguments"* @_ZN4base11trace_event14TraceArgumentsaSEOS1_(%"class.base::trace_event::TraceArguments"* %20, %"class.base::trace_event::TraceArguments"* dereferenceable(40) %21) #11
  %23 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 12
  %24 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 12
  %25 = bitcast %union.anon* %23 to i8*
  %26 = bitcast %union.anon* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 17, i1 false)
  ret %"class.base::trace_event::TraceEvent"* %0
}

; Function Attrs: nounwind
declare dereferenceable(40) %"class.base::trace_event::TraceArguments"* @_ZN4base11trace_event14TraceArgumentsaSEOS1_(%"class.base::trace_event::TraceArguments"*, %"class.base::trace_event::TraceArguments"* dereferenceable(40)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event10TraceEvent5ResetEv(%"class.base::trace_event::TraceEvent"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 2, i32 0
  store i64 -1, i64* %2, align 8
  %3 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 5, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11
  tail call void @_ZN4base11trace_event14TraceArguments5ResetEv(%"class.base::trace_event::TraceArguments"* %4) #11
  %5 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 10
  tail call void @_ZN4base11trace_event13StringStorage5ResetEm(%"class.base::trace_event::StringStorage"* %5, i64 0) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base11trace_event14TraceArguments5ResetEv(%"class.base::trace_event::TraceArguments"*) local_unnamed_addr #5

declare void @_ZN4base11trace_event13StringStorage5ResetEm(%"class.base::trace_event::StringStorage"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event10TraceEvent5ResetEiNS_9TimeTicksENS_11ThreadTicksENS0_22ThreadInstructionCountEcPKhPKcS8_yyPNS0_14TraceArgumentsEj(%"class.base::trace_event::TraceEvent"*, i32, i64, i64, i64, i8 signext, i8*, i8*, i8*, i64, i64, %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3 align 2 {
  %14 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 2, i32 0
  store i64 -1, i64* %14, align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 5, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11
  tail call void @_ZN4base11trace_event14TraceArguments5ResetEv(%"class.base::trace_event::TraceArguments"* %16) #11
  %17 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 10
  tail call void @_ZN4base11trace_event13StringStorage5ResetEm(%"class.base::trace_event::StringStorage"* %17, i64 0) #11
  %18 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 6
  store i8* %8, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 7
  store i64 %9, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 8
  store i8* %6, i8** %22, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 9
  store i8* %7, i8** %23, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 12, i32 0
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 13
  store i32 %12, i32* %25, align 4
  %26 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 14
  store i64 %10, i64* %26, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 4, i32 0
  store i64 %4, i64* %27, align 8
  %28 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 15
  store i8 %5, i8* %28, align 8
  %29 = icmp eq %"class.base::trace_event::TraceArguments"* %11, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %13
  %31 = tail call dereferenceable(40) %"class.base::trace_event::TraceArguments"* @_ZN4base11trace_event14TraceArgumentsaSEOS1_(%"class.base::trace_event::TraceArguments"* %16, %"class.base::trace_event::TraceArguments"* nonnull dereferenceable(40) %11) #11
  %32 = load i32, i32* %25, align 4
  br label %33

33:                                               ; preds = %13, %30
  %34 = phi i32 [ %12, %13 ], [ %32, %30 ]
  %35 = and i32 %34, 1
  %36 = icmp ne i32 %35, 0
  tail call void @_ZN4base11trace_event14TraceArguments13CopyStringsToEPNS0_13StringStorageEbPPKcS6_(%"class.base::trace_event::TraceArguments"* %16, %"class.base::trace_event::StringStorage"* %17, i1 zeroext %36, i8** %23, i8** %20) #11
  ret void
}

declare void @_ZN4base11trace_event14TraceArguments13CopyStringsToEPNS0_13StringStorageEbPPKcS6_(%"class.base::trace_event::TraceArguments"*, %"class.base::trace_event::StringStorage"*, i1 zeroext, i8**, i8**) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base11trace_event10TraceEvent14UpdateDurationERKNS_9TimeTicksERKNS_11ThreadTicksENS0_22ThreadInstructionCountE(%"class.base::trace_event::TraceEvent"* nocapture, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8), %"class.base::ThreadTicks"* nocapture readonly dereferenceable(8), i64) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %8, %6
  %10 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 2, i32 0
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.base::ThreadTicks", %"class.base::ThreadTicks"* %2, i64 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = sub nsw i64 %16, %12
  %18 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 3, i32 0
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %4, %14
  %20 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 4, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, -1
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = sub nsw i64 %3, %21
  %25 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 5, i32 0
  store i64 %24, i64* %25, align 8
  br label %26

26:                                               ; preds = %23, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event10TraceEvent27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TraceEvent"* nocapture readonly, %"class.base::trace_event::TraceEventMemoryOverhead"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 10, i32 0
  %4 = load %"struct.base::trace_event::StringStorage::Data"*, %"struct.base::trace_event::StringStorage::Data"** %3, align 8
  %5 = icmp eq %"struct.base::trace_event::StringStorage::Data"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.base::trace_event::StringStorage::Data", %"struct.base::trace_event::StringStorage::Data"* %4, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i64 [ %9, %6 ], [ 0, %2 ]
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEm(%"class.base::trace_event::TraceEventMemoryOverhead"* %1, i32 3, i64 %11) #11
  %12 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %31, %10
  ret void

16:                                               ; preds = %10, %31
  %17 = phi i8 [ %32, %31 ], [ %13, %10 ]
  %18 = phi i64 [ %33, %31 ], [ 0, %10 ]
  %19 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 1, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %31

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 3, i64 %18
  %24 = bitcast %"union.base::trace_event::TraceValue"* %23 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %25 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %24, align 8
  %26 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %25 to void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)***
  %27 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)** %27, i64 4
  %29 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)** %28, align 8
  tail call void %29(%"class.base::trace_event::ConvertableToTraceFormat"* %25, %"class.base::trace_event::TraceEventMemoryOverhead"* %1) #11
  %30 = load i8, i8* %12, align 8
  br label %31

31:                                               ; preds = %16, %22
  %32 = phi i8 [ %17, %16 ], [ %30, %22 ]
  %33 = add nuw nsw i64 %18, 1
  %34 = zext i8 %32 to i64
  %35 = icmp ult i64 %33, %34
  br i1 %35, label %16, label %15
}

declare void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEm(%"class.base::trace_event::TraceEventMemoryOverhead"*, i32, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11trace_event10TraceEvent12AppendAsJSONEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_17RepeatingCallbackIFbPKcSC_PNSA_IFbSC_EEEEEE(%"class.base::trace_event::TraceEvent"*, %"class.std::__1::basic_string"*, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::RepeatingCallback.302", align 8
  %6 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 13
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1024
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 12, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %12, %3
  %17 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #11
  %18 = getelementptr inbounds %"class.base::trace_event::TraceLog", %"class.base::trace_event::TraceLog"* %17, i64 0, i32 22
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 12, i32 0
  %21 = load i32, i32* %20, align 8
  br label %22

22:                                               ; preds = %12, %16
  %23 = phi i32 [ %21, %16 ], [ -1, %12 ]
  %24 = phi i32 [ %19, %16 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 8
  %26 = load i8*, i8** %25, align 8
  %27 = tail call i8* @_ZN4base11trace_event8TraceLog20GetCategoryGroupNameEPKh(i8* %26) #11
  %28 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 15
  %29 = load i8, i8* %28, align 8
  %30 = sext i8 %29 to i32
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 %24, i32 %23, i64 %7, i32 %30, i8* %27) #11
  %31 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 9
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %22
  %35 = tail call i64 @strlen(i8* nonnull %32) #11
  br label %39

36:                                               ; preds = %22
  %37 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #11
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  br label %39

39:                                               ; preds = %34, %36
  %40 = phi i64 [ 0, %36 ], [ %35, %34 ]
  %41 = call zeroext i1 @_ZN4base16EscapeJSONStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %32, i64 %40, i1 zeroext true, %"class.std::__1::basic_string"* %1) #11
  %42 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #11
  %43 = bitcast %"class.base::RepeatingCallback.302"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.base::RepeatingCallback.302", %"class.base::RepeatingCallback.302"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %45 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 0
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 2, i64 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %53, align 8
  %55 = icmp eq %"class.base::internal::BindStateBase"* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = load i8*, i8** %31, align 8
  %58 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %54, i64 0, i32 1
  %59 = bitcast void ()** %58 to i1 (%"class.base::internal::BindStateBase"*, i8*, i8*, %"class.base::RepeatingCallback.302"*)**
  %60 = load i1 (%"class.base::internal::BindStateBase"*, i8*, i8*, %"class.base::RepeatingCallback.302"*)*, i1 (%"class.base::internal::BindStateBase"*, i8*, i8*, %"class.base::RepeatingCallback.302"*)** %59, align 8
  %61 = call zeroext i1 %60(%"class.base::internal::BindStateBase"* nonnull %54, i8* %27, i8* %57, %"class.base::RepeatingCallback.302"* nonnull %5) #11
  br i1 %61, label %62, label %99

62:                                               ; preds = %56, %39, %48, %52
  %63 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #11
  %64 = load i8, i8* %45, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %99, label %66

66:                                               ; preds = %62, %94
  %67 = phi i64 [ %95, %94 ], [ 0, %62 ]
  %68 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 2, i64 %67
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %99, label %71

71:                                               ; preds = %66
  %72 = icmp eq i64 %67, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #11
  br label %75

75:                                               ; preds = %71, %73
  %76 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  %77 = load i8*, i8** %68, align 8
  %78 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* %77) #11
  %79 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)) #11
  %80 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %44, align 8
  %81 = icmp eq %"class.base::internal::BindStateBase"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %75
  %83 = load i8*, i8** %68, align 8
  %84 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %80, i64 0, i32 1
  %85 = bitcast void ()** %84 to i1 (%"class.base::internal::BindStateBase"*, i8*)**
  %86 = load i1 (%"class.base::internal::BindStateBase"*, i8*)*, i1 (%"class.base::internal::BindStateBase"*, i8*)** %85, align 8
  %87 = call zeroext i1 %86(%"class.base::internal::BindStateBase"* nonnull %80, i8* %83) #11
  br i1 %87, label %88, label %92

88:                                               ; preds = %82, %75
  %89 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 3, i64 %67
  %90 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 1, i64 %67
  %91 = load i8, i8* %90, align 1
  call void @_ZNK4base11trace_event10TraceValue12AppendAsJSONEhPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"union.base::trace_event::TraceValue"* %89, i8 zeroext %91, %"class.std::__1::basic_string"* %1) #11
  br label %94

92:                                               ; preds = %82
  %93 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %94

94:                                               ; preds = %88, %92
  %95 = add nuw nsw i64 %67, 1
  %96 = load i8, i8* %45, align 8
  %97 = zext i8 %96 to i64
  %98 = icmp ult i64 %95, %97
  br i1 %98, label %66, label %99

99:                                               ; preds = %66, %94, %62, %56
  %100 = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), %56 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), %62 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), %94 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), %66 ]
  %101 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* %100) #11
  %102 = load i8, i8* %28, align 8
  %103 = icmp eq i8 %102, 88
  br i1 %103, label %104, label %125

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 2, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, -1
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 %106) #11
  br label %109

109:                                              ; preds = %104, %108
  %110 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 3, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %115, -1
  br i1 %116, label %118, label %117

117:                                              ; preds = %113
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 %115) #11
  br label %118

118:                                              ; preds = %117, %113, %109
  %119 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 4, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, -1
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 5, i32 0
  %124 = load i64, i64* %123, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 %124) #11
  br label %125

125:                                              ; preds = %118, %122, %99
  %126 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 1, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %125
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i64 %127) #11
  br label %130

130:                                              ; preds = %129, %125
  %131 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 4, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = icmp eq i64 %132, -1
  br i1 %133, label %135, label %134

134:                                              ; preds = %130
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i64 %132) #11
  br label %135

135:                                              ; preds = %134, %130
  %136 = load i32, i32* %8, align 4
  %137 = and i32 %136, 32
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %135
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0)) #11
  %140 = load i32, i32* %8, align 4
  br label %141

141:                                              ; preds = %135, %139
  %142 = phi i32 [ %136, %135 ], [ %140, %139 ]
  %143 = and i32 %142, 6146
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %160, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 6
  %147 = load i8*, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %150, label %149

149:                                              ; preds = %145
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8* nonnull %147) #11
  br label %150

150:                                              ; preds = %145, %149
  switch i32 %143, label %160 [
    i32 2, label %151
    i32 2048, label %154
    i32 4096, label %157
  ]

151:                                              ; preds = %150
  %152 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 7
  %153 = load i64, i64* %152, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), i64 %153) #11
  br label %160

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 7
  %156 = load i64, i64* %155, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), i64 %156) #11
  br label %160

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 7
  %159 = load i64, i64* %158, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i64 %159) #11
  br label %160

160:                                              ; preds = %141, %151, %154, %157, %150
  %161 = load i32, i32* %8, align 4
  %162 = and i32 %161, 64
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %160
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0)) #11
  %165 = load i32, i32* %8, align 4
  br label %166

166:                                              ; preds = %160, %164
  %167 = phi i32 [ %161, %160 ], [ %165, %164 ]
  %168 = and i32 %167, 384
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 14
  %172 = load i64, i64* %171, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0), i64 %172) #11
  %173 = load i32, i32* %8, align 4
  br label %174

174:                                              ; preds = %166, %170
  %175 = phi i32 [ %167, %166 ], [ %173, %170 ]
  %176 = trunc i32 %175 to i8
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #11
  %179 = load i32, i32* %8, align 4
  br label %180

180:                                              ; preds = %178, %174
  %181 = phi i32 [ %179, %178 ], [ %175, %174 ]
  %182 = and i32 %181, 256
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %185, label %184

184:                                              ; preds = %180
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0)) #11
  br label %185

185:                                              ; preds = %180, %184
  %186 = load i8, i8* %28, align 8
  %187 = icmp eq i8 %186, 73
  br i1 %187, label %188, label %196

188:                                              ; preds = %185
  %189 = load i32, i32* %8, align 4
  %190 = and i32 %189, 12
  switch i32 %190, label %194 [
    i32 0, label %191
    i32 4, label %192
    i32 8, label %193
  ]

191:                                              ; preds = %188
  br label %194

192:                                              ; preds = %188
  br label %194

193:                                              ; preds = %188
  br label %194

194:                                              ; preds = %188, %193, %192, %191
  %195 = phi i32 [ 63, %188 ], [ 116, %193 ], [ 112, %192 ], [ 103, %191 ]
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i32 %195) #11
  br label %196

196:                                              ; preds = %194, %185
  %197 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #11
  %198 = getelementptr inbounds %"class.base::RepeatingCallback.302", %"class.base::RepeatingCallback.302"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %198) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  ret void
}

declare %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() local_unnamed_addr #5

declare i8* @_ZN4base11trace_event8TraceLog20GetCategoryGroupNameEPKh(i8*) local_unnamed_addr #5

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #5

declare zeroext i1 @_ZN4base16EscapeJSONStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i1 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #5

declare void @_ZNK4base11trace_event10TraceValue12AppendAsJSONEhPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"union.base::trace_event::TraceValue"*, i8 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11trace_event10TraceEvent19AppendPrettyPrintedEPNSt3__119basic_ostringstreamIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::TraceEvent"*, %"class.std::__1::basic_ostringstream"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %1 to %"class.std::__1::basic_ostream"*
  %5 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i64 @strlen(i8* %6) #11
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %6, i64 %7) #11
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1) #11
  %10 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 8
  %11 = load i8*, i8** %10, align 8
  %12 = tail call i8* @_ZN4base11trace_event8TraceLog20GetCategoryGroupNameEPKh(i8* %11) #11
  %13 = tail call i64 @strlen(i8* %12) #11
  %14 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %12, i64 %13) #11
  %15 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i64 1) #11
  %16 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %70, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 2, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %70, label %23

23:                                               ; preds = %19
  %24 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), i64 3) #11
  %25 = load i8, i8* %16, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  br label %33

33:                                               ; preds = %27, %65
  %34 = phi i64 [ 0, %27 ], [ %66, %65 ]
  %35 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 2, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %65, %33, %23
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #11
  br label %70

40:                                               ; preds = %33
  %41 = icmp eq i64 %34, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %40
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i64 2) #11
  %44 = load i8*, i8** %35, align 8
  br label %45

45:                                               ; preds = %40, %42
  %46 = phi i8* [ %36, %40 ], [ %44, %42 ]
  %47 = call i64 @strlen(i8* %46) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %46, i64 %47) #11
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #11
  %50 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 3, i64 %34
  %51 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %0, i64 0, i32 11, i32 1, i64 %34
  %52 = load i8, i8* %51, align 1
  call void @_ZNK4base11trace_event10TraceValue12AppendAsJSONEhPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"union.base::trace_event::TraceValue"* %50, i8 zeroext %52, %"class.std::__1::basic_string"* nonnull %3) #11
  %53 = load i8, i8* %32, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i8*, i8** %29, align 8
  %56 = load i64, i64* %30, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i8* %55, i8* %28
  %59 = select i1 %54, i64 %56, i64 %57
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %58, i64 %59) #11
  %61 = load i8, i8* %32, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %45
  %64 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %45, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  %66 = add nuw nsw i64 %34, 1
  %67 = load i8, i8* %16, align 8
  %68 = zext i8 %67 to i64
  %69 = icmp ult i64 %66, %68
  br i1 %69, label %33, label %38

70:                                               ; preds = %19, %2, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event24ConvertableToTraceFormatD2Ev(%"class.base::trace_event::ConvertableToTraceFormat"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event24ConvertableToTraceFormatD0Ev(%"class.base::trace_event::ConvertableToTraceFormat"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #3 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #3 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
