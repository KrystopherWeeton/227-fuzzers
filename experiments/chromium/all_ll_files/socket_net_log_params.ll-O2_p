; ModuleID = '../../net/socket/socket_net_log_params.cc'
source_filename = "../../net/socket/socket_net_log_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.28", %"class.std::__1::vector.35" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.30" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.37" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }

@.str = private unnamed_addr constant [10 x i8] c"net_error\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"os_error\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"host_and_port\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"local_address\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"remote_address\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23NetLogSocketErrorParamsEii(%"class.base::Value"* noalias sret, i32, i32) local_unnamed_addr #0 {
  %4 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #5
  %5 = tail call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9, i32 %1) #5
  %6 = tail call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8, i32 %2) #5
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17NetLogSocketErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEii(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %7 = load %"class.net::NetLog"*, %"class.net::NetLog"** %6, align 8
  %8 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %7, i64 0, i32 3
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !2

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %13 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #5, !alias.scope !3
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %5, i8 zeroext 6) #5
  %14 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9, i32 %2) #5
  %15 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8, i32 %3) #5
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %7, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %12, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %5) #5
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #5
  br label %16

16:                                               ; preds = %4, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30CreateNetLogHostPortPairParamsEPKNS_12HostPortPairE(%"class.base::Value"* noalias sret, %"class.net::HostPortPair"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #5
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  call void @_ZNK3net12HostPortPair8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.net::HostPortPair"* %1) #5
  %6 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #5
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %2, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret void
}

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3net12HostPortPair8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::HostPortPair"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28CreateNetLogIPEndPointParamsEPKNS_10IPEndPointE(%"class.base::Value"* noalias sret, %"class.net::IPEndPoint"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #5
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  call void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.net::IPEndPoint"* %1) #5
  %6 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #5
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %2, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret void
}

declare void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29CreateNetLogAddressPairParamsERKNS_10IPEndPointES2_(%"class.base::Value"* noalias sret, %"class.net::IPEndPoint"* dereferenceable(20), %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #5
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #5
  call void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.net::IPEndPoint"* %1) #5
  %8 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #5
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #6
  br label %16

16:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #5
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #5
  call void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::IPEndPoint"* %2) #5
  %18 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #5
  %19 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #6
  br label %26

26:                                               ; preds = %16, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN3net23NetLogSocketErrorParamsEii: argument 0"}
!5 = distinct !{!5, !"_ZN3net23NetLogSocketErrorParamsEii"}
!6 = distinct !{!6, !7, !"_ZZN3net17NetLogSocketErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiENK3$_0clEv: argument 0"}
!7 = distinct !{!7, !"_ZZN3net17NetLogSocketErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiENK3$_0clEv"}
