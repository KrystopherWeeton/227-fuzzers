; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.angle::PackedEnumMap.1397" = type { %"struct.std::__1::array.1398" }
%"struct.std::__1::array.1398" = type { [4 x i32] }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%struct.VkDevice_T = type opaque
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%struct.VkRenderPassCreateInfo2 = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription2*, i32, %struct.VkSubpassDescription2*, i32, %struct.VkSubpassDependency2*, i32, i32* }
%struct.VkAttachmentDescription2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription2 = type { i32, i8*, i32, i32, i32, i32, %struct.VkAttachmentReference2*, i32, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, i32, i32* }
%struct.VkAttachmentReference2 = type { i32, i8*, i32, i32, i32 }
%struct.VkSubpassDependency2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.rx::DescriptorSetCache" = type { %"class.rx::HasCacheStats", %"class.absl::flat_hash_map.644" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.absl::flat_hash_map.644" = type { %"class.absl::container_internal::raw_hash_map.645" }
%"class.absl::container_internal::raw_hash_map.645" = type { %"class.absl::container_internal::raw_hash_set.646" }
%"class.absl::container_internal::raw_hash_set.646" = type { i8*, %"union.absl::container_internal::map_slot_type.647"*, i64, i64, %"class.absl::container_internal::CompressedTuple.648" }
%"union.absl::container_internal::map_slot_type.647" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.rx::vk::TextureDescriptorDesc", %struct.VkDescriptorSet_T* }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.970" }
%"struct.std::__1::array.970" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::vk::SamplerSerial" = type { i32 }
%struct.VkDescriptorSet_T = type opaque
%"class.absl::container_internal::CompressedTuple.648" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.649" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.649" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.rx::DescriptorSetCache.973" = type { %"class.rx::HasCacheStats.974", %"class.absl::flat_hash_map.975" }
%"class.rx::HasCacheStats.974" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.975" = type { %"class.absl::container_internal::raw_hash_map.976" }
%"class.absl::container_internal::raw_hash_map.976" = type { %"class.absl::container_internal::raw_hash_set.977" }
%"class.absl::container_internal::raw_hash_set.977" = type { i8*, %"union.absl::container_internal::map_slot_type.978"*, i64, i64, %"class.absl::container_internal::CompressedTuple.979" }
%"union.absl::container_internal::map_slot_type.978" = type { %"struct.std::__1::pair.993" }
%"struct.std::__1::pair.993" = type { %"class.rx::vk::UniformsAndXfbDescriptorDesc", %struct.VkDescriptorSet_T* }
%"class.rx::vk::UniformsAndXfbDescriptorDesc" = type { i32, %"struct.std::__1::array.990", %"struct.std::__1::array.991" }
%"struct.std::__1::array.990" = type { [5 x %"class.rx::vk::BufferSerial"] }
%"class.rx::vk::BufferSerial" = type { i32 }
%"struct.std::__1::array.991" = type { [4 x i32] }
%"class.absl::container_internal::CompressedTuple.979" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.980" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.980" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::DescriptorSetCache.996" = type { %"class.rx::HasCacheStats.997", %"class.absl::flat_hash_map.998" }
%"class.rx::HasCacheStats.997" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.998" = type { %"class.absl::container_internal::raw_hash_map.999" }
%"class.absl::container_internal::raw_hash_map.999" = type { %"class.absl::container_internal::raw_hash_set.1000" }
%"class.absl::container_internal::raw_hash_set.1000" = type { i8*, %"union.absl::container_internal::map_slot_type.1001"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1002" }
%"union.absl::container_internal::map_slot_type.1001" = type { %"struct.std::__1::pair.1016" }
%"struct.std::__1::pair.1016" = type { %"class.rx::vk::ShaderBuffersDescriptorDesc", %struct.VkDescriptorSet_T* }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.1013" }
%"class.angle::FastVector.1013" = type { %"struct.std::__1::array.1014", i32*, i64, i64 }
%"struct.std::__1::array.1014" = type { [32 x i32] }
%"class.absl::container_internal::CompressedTuple.1002" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1003" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1003" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT", %"class.angle::BitSetT", %"struct.std::__1::array.770" }
%"class.angle::BitSetT" = type { i8 }
%"struct.std::__1::array.770" = type { [9 x i8] }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.771" }
%"struct.std::__1::array.771" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::DescriptorSetLayoutDesc" = type { %"struct.std::__1::array.1401" }
%"struct.std::__1::array.1401" = type { [96 x %"struct.rx::vk::DescriptorSetLayoutDesc::PackedDescriptorSetBinding"] }
%"struct.rx::vk::DescriptorSetLayoutDesc::PackedDescriptorSetBinding" = type { i8, i8, i16, i32, %struct.VkSampler_T* }
%"class.rx::vk::PipelineLayoutDesc" = type { %"class.angle::PackedEnumMap.1411", %"class.angle::PackedEnumMap.1413" }
%"class.angle::PackedEnumMap.1411" = type { %"struct.std::__1::array.1412" }
%"struct.std::__1::array.1412" = type { [4 x %"class.rx::vk::DescriptorSetLayoutDesc"] }
%"class.angle::PackedEnumMap.1413" = type { %"struct.std::__1::array.1414" }
%"struct.std::__1::array.1414" = type { [6 x %"struct.rx::vk::PackedPushConstantRange"] }
%"struct.rx::vk::PackedPushConstantRange" = type { i32, i32 }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.1021", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.1021" = type { %"class.std::__1::__vector_base.1022" }
%"class.std::__1::__vector_base.1022" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.1024" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.1023", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.angle::BitSetT.1023" = type { i64 }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::Serial" = type { i64 }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject.1029" }
%"class.rx::vk::WrappedObject.1029" = type { %struct.VkPipeline_T* }
%"class.rx::vk::FramebufferDesc" = type { i32, %"struct.std::__1::array.1088" }
%"struct.std::__1::array.1088" = type { [18 x %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"] }
%"class.rx::vk::SamplerDesc" = type { float, float, float, float, i64, i32, %"struct.angle::Color", i32 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.670", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.659" }
%"class.std::__1::map.659" = type { %"class.std::__1::__tree.660" }
%"class.std::__1::__tree.660" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.661", %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::array.670" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.281, i8, [3 x i8] }>
%union.anon.281 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.1197" }
%"class.rx::vk::WrappedObject.1197" = type { %struct.VkSampler_T* }
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.1019", %"struct.std::__1::array.1020", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial.1030"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.1031", %"class.angle::BitSetT.1023", %"class.angle::PackedEnumMap.1037", %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1071", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.1181", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.1185", %"struct.std::__1::array.1196", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.1198", %"class.angle::BitSetT.126", %"struct.std::__1::array.1199", %"class.rx::vk::CommandPool", %"class.std::__1::vector.684", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.1273", %"class.std::__1::vector.1281", i8, i8, i8, %"class.std::__1::vector.829", %"class.std::__1::vector.37", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.128", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.1296", %"class.std::__1::vector.1303", %"class.std::__1::vector.1310", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.92", %"class.std::__1::vector.92" }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.403", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.404", %"class.gl::Program"*, %"class.gl::BindingPointer.406", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.408", %"class.gl::VertexArray"*, %"class.angle::BitSetT.44", i64, %"class.angle::PackedEnumMap.436", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.344", %"class.angle::BitSetArray", %"class.std::__1::vector.448", %"class.std::__1::vector.457", %"class.angle::PackedEnumMap.464", %"class.angle::PackedEnumMap.468", %"class.std::__1::vector.470", %"class.std::__1::vector.470", %"class.std::__1::vector.470", %"class.angle::BitSetArray.477", %"class.angle::BitSetT.478", %"class.angle::BitSetT.128", %"class.gl::BindingPointer.479", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.506", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.128", %"class.angle::BitSetT.565", [4 x i8], %"class.angle::BitSetT.45", %"class.angle::BitSetT.126", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT", %"class.angle::BitSetT", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector.37", %"class.std::__1::vector.37", %"class.std::__1::vector.37", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap.185", %"class.angle::PackedEnumMap.185", %"class.angle::PackedEnumMap.185", %"class.angle::PackedEnumMap.185", %"class.angle::PackedEnumMap.185", %"class.angle::PackedEnumMap.185", %"class.angle::PackedEnumMap.185", %"class.angle::PackedEnumMap.241", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.76", %"struct.std::__1::array.76", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.240", i32 }
%"struct.std::__1::array.240" = type { [2 x i32] }
%"class.angle::PackedEnumMap.185" = type { %"struct.std::__1::array.186" }
%"struct.std::__1::array.186" = type { [6 x i32] }
%"class.angle::PackedEnumMap.241" = type { %"struct.std::__1::array.242" }
%"struct.std::__1::array.242" = type { [6 x i64] }
%"struct.std::__1::array.76" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.243" }
%"class.angle::PackedEnumMap.243" = type { %"struct.std::__1::array.244" }
%"struct.std::__1::array.244" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.245" }
%"class.std::__1::set.245" = type { %"class.std::__1::__tree.246" }
%"class.std::__1::__tree.246" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.254" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector.37", %"class.std::__1::vector.196", %"class.std::__1::vector.37", i8, [7 x i8] }>
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.198" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.gl::ResourceMap.254" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map.268" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.256", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.256" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map.257" }
%"class.std::__1::map.257" = type { %"class.std::__1::__tree.258" }
%"class.std::__1::__tree.258" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map.268" = type { %"class.absl::container_internal::raw_hash_map.269" }
%"class.absl::container_internal::raw_hash_map.269" = type { %"class.absl::container_internal::raw_hash_set.270" }
%"class.absl::container_internal::raw_hash_set.270" = type { i8*, %"union.absl::container_internal::map_slot_type.271"*, i64, i64, %"class.absl::container_internal::CompressedTuple.272" }
%"union.absl::container_internal::map_slot_type.271" = type { %"struct.std::__1::pair.1474" }
%"struct.std::__1::pair.1474" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple.272" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.273" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.273" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap", %"class.gl::ResourceMap.215" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.203" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.63", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.86", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector.37", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.47", %"class.std::__1::vector.47", %"class.std::__1::vector.47", %"class.std::__1::vector.54", %"class.std::__1::vector.54", %"class.std::__1::vector.47", %"class.std::__1::vector.47", %"class.std::__1::vector.47", i8, [3 x i8], %"class.angle::BitSetT.61", i32, %struct.Optional, %struct.Optional, %struct.Optional.62, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.56" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.47" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.49" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.37", i8, i8, %"class.std::__1::vector.47", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT.61" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.62 = type { i8, i32 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.69" }
%"class.angle::BindingPointer.69" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.70", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.77" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.76", %"struct.std::__1::array.76", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.77" = type { %"struct.std::__1::array.78" }
%"struct.std::__1::array.78" = type { [6 x %"class.std::__1::vector.79"] }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.81" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.203" = type { %"class.absl::container_internal::raw_hash_map.204" }
%"class.absl::container_internal::raw_hash_map.204" = type { %"class.absl::container_internal::raw_hash_set.205" }
%"class.absl::container_internal::raw_hash_set.205" = type { i8*, %"union.absl::container_internal::map_slot_type.206"*, i64, i64, %"class.absl::container_internal::CompressedTuple.207" }
%"union.absl::container_internal::map_slot_type.206" = type opaque
%"class.absl::container_internal::CompressedTuple.207" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.208" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.208" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.215" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.231" }
%"class.absl::flat_hash_map.231" = type { %"class.absl::container_internal::raw_hash_map.232" }
%"class.absl::container_internal::raw_hash_map.232" = type { %"class.absl::container_internal::raw_hash_set.233" }
%"class.absl::container_internal::raw_hash_set.233" = type { i8*, %"union.absl::container_internal::map_slot_type.234"*, i64, i64, %"class.absl::container_internal::CompressedTuple.235" }
%"union.absl::container_internal::map_slot_type.234" = type { %"struct.std::__1::pair.1476" }
%"struct.std::__1::pair.1476" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.235" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.236" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.236" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.277" }
%"class.gl::TypedResourceManager.277" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.278" }
%"class.gl::ResourceMap.278" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.297" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.280", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.293", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.295", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.280" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.13", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.13" = type { i32 (...)**, i64 }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.14", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.284", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.286" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.291", i64, i64 }
%"class.gl::BindingPointer.291" = type { %"class.angle::BindingPointer.292" }
%"class.angle::BindingPointer.292" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.293" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.294", i32, i32 }
%"class.egl::Display" = type opaque
%"class.rx::StreamProducerImpl" = type opaque
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.566", [4 x i8], %"class.std::__1::unique_ptr.567", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.573", %"class.gl::ResourceMap.575", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.585", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.595", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.605", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.615", i8*, %"class.std::__1::vector.615", %"class.std::__1::unique_ptr.622", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.45", %"class.gl::StateCache", %"class.angle::BitSetT.128", %"class.angle::BitSetT.128", %"class.angle::BitSetT.45", %"class.angle::BitSetT.128", %"class.angle::BitSetT.45", %"class.angle::BitSetT.128", %"class.angle::BitSetT.45", %"class.angle::BitSetT.128", %"class.angle::BitSetT.45", %"class.angle::BitSetT.128", %"class.angle::BitSetT.45", %"class.angle::BitSetT.128", %"class.angle::BitSetT.45", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.344", %"class.std::__1::vector.344", %"class.std::__1::vector.344", %struct.Optional.636, %struct.Optional.636, %"class.std::__1::shared_ptr.637", %"class.std::__1::unique_ptr.638", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.245" }
%"class.angle::BitSetT.566" = type { i32 }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.rx::ContextImpl"* }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.573" = type { %"struct.std::__1::array.574" }
%"struct.std::__1::array.574" = type { [11 x %"class.gl::BindingPointer.440"] }
%"class.gl::BindingPointer.440" = type { %"class.angle::BindingPointer.441" }
%"class.angle::BindingPointer.441" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.gl::ResourceMap.575" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.576" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.576" = type { %"class.absl::container_internal::raw_hash_map.577" }
%"class.absl::container_internal::raw_hash_map.577" = type { %"class.absl::container_internal::raw_hash_set.578" }
%"class.absl::container_internal::raw_hash_set.578" = type { i8*, %"union.absl::container_internal::map_slot_type.579"*, i64, i64, %"class.absl::container_internal::CompressedTuple.580" }
%"union.absl::container_internal::map_slot_type.579" = type opaque
%"class.absl::container_internal::CompressedTuple.580" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.581" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.585" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.586" }
%"class.gl::Query" = type opaque
%"class.absl::flat_hash_map.586" = type { %"class.absl::container_internal::raw_hash_map.587" }
%"class.absl::container_internal::raw_hash_map.587" = type { %"class.absl::container_internal::raw_hash_set.588" }
%"class.absl::container_internal::raw_hash_set.588" = type { i8*, %"union.absl::container_internal::map_slot_type.589"*, i64, i64, %"class.absl::container_internal::CompressedTuple.590" }
%"union.absl::container_internal::map_slot_type.589" = type opaque
%"class.absl::container_internal::CompressedTuple.590" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.591" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.591" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.595" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.596" }
%"class.absl::flat_hash_map.596" = type { %"class.absl::container_internal::raw_hash_map.597" }
%"class.absl::container_internal::raw_hash_map.597" = type { %"class.absl::container_internal::raw_hash_set.598" }
%"class.absl::container_internal::raw_hash_set.598" = type { i8*, %"union.absl::container_internal::map_slot_type.599"*, i64, i64, %"class.absl::container_internal::CompressedTuple.600" }
%"union.absl::container_internal::map_slot_type.599" = type opaque
%"class.absl::container_internal::CompressedTuple.600" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.601" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.601" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.605" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.606" }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.482", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.482" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.470" }
%"class.rx::TransformFeedbackImpl" = type { i32 (...)**, %"class.gl::TransformFeedbackState"* }
%"class.absl::flat_hash_map.606" = type { %"class.absl::container_internal::raw_hash_map.607" }
%"class.absl::container_internal::raw_hash_map.607" = type { %"class.absl::container_internal::raw_hash_set.608" }
%"class.absl::container_internal::raw_hash_set.608" = type { i8*, %"union.absl::container_internal::map_slot_type.609"*, i64, i64, %"class.absl::container_internal::CompressedTuple.610" }
%"union.absl::container_internal::map_slot_type.609" = type opaque
%"class.absl::container_internal::CompressedTuple.610" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.611" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.611" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { i8**, i8**, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { i8** }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.128", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.628", %"class.angle::PackedEnumMap.630", %"class.angle::PackedEnumMap.632", %"class.angle::PackedEnumMap.634", %"class.angle::PackedEnumMap.634", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.628" = type { %"struct.std::__1::array.629" }
%"struct.std::__1::array.629" = type { [16 x i8] }
%"class.angle::PackedEnumMap.630" = type { %"struct.std::__1::array.631" }
%"struct.std::__1::array.631" = type { [12 x i8] }
%"class.angle::PackedEnumMap.632" = type { %"struct.std::__1::array.633" }
%"struct.std::__1::array.633" = type { [4 x i8] }
%"class.angle::PackedEnumMap.634" = type { %"struct.std::__1::array.635" }
%"struct.std::__1::array.635" = type { [19 x i32] }
%struct.Optional.636 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.637" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"struct.std::__1::array.294" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.295" = type { %"struct.std::__1::array.296", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.296" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.297" = type { %"class.absl::container_internal::raw_hash_map.298" }
%"class.absl::container_internal::raw_hash_map.298" = type { %"class.absl::container_internal::raw_hash_set.299" }
%"class.absl::container_internal::raw_hash_set.299" = type { i8*, %"union.absl::container_internal::map_slot_type.300"*, i64, i64, %"class.absl::container_internal::CompressedTuple.301" }
%"union.absl::container_internal::map_slot_type.300" = type { %"struct.std::__1::pair.1478" }
%"struct.std::__1::pair.1478" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.301" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.302" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.302" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.306" }
%"class.gl::TypedResourceManager.306" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.307" }
%"class.gl::ResourceMap.307" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.308" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.308" = type { %"class.absl::container_internal::raw_hash_map.309" }
%"class.absl::container_internal::raw_hash_map.309" = type { %"class.absl::container_internal::raw_hash_set.310" }
%"class.absl::container_internal::raw_hash_set.310" = type { i8*, %"union.absl::container_internal::map_slot_type.311"*, i64, i64, %"class.absl::container_internal::CompressedTuple.312" }
%"union.absl::container_internal::map_slot_type.311" = type { %"struct.std::__1::pair.1480" }
%"struct.std::__1::pair.1480" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.312" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.313" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.313" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.317" }
%"class.gl::TypedResourceManager.317" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.318" }
%"class.gl::ResourceMap.318" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.321" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.320", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.320" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.321" = type { %"class.absl::container_internal::raw_hash_map.322" }
%"class.absl::container_internal::raw_hash_map.322" = type { %"class.absl::container_internal::raw_hash_set.323" }
%"class.absl::container_internal::raw_hash_set.323" = type { i8*, %"union.absl::container_internal::map_slot_type.324"*, i64, i64, %"class.absl::container_internal::CompressedTuple.325" }
%"union.absl::container_internal::map_slot_type.324" = type { %"struct.std::__1::pair.1482" }
%"struct.std::__1::pair.1482" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.325" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.326" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.326" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.330" }
%"class.gl::TypedResourceManager.330" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.331" }
%"class.gl::ResourceMap.331" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.332" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.332" = type { %"class.absl::container_internal::raw_hash_map.333" }
%"class.absl::container_internal::raw_hash_map.333" = type { %"class.absl::container_internal::raw_hash_set.334" }
%"class.absl::container_internal::raw_hash_set.334" = type { i8*, %"union.absl::container_internal::map_slot_type.335"*, i64, i64, %"class.absl::container_internal::CompressedTuple.336" }
%"union.absl::container_internal::map_slot_type.335" = type opaque
%"class.absl::container_internal::CompressedTuple.336" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.337" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.337" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.341" }
%"class.gl::TypedResourceManager.341" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.342" }
%"class.gl::ResourceMap.342" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.353" }
%"class.absl::flat_hash_map.353" = type { %"class.absl::container_internal::raw_hash_map.354" }
%"class.absl::container_internal::raw_hash_map.354" = type { %"class.absl::container_internal::raw_hash_set.355" }
%"class.absl::container_internal::raw_hash_set.355" = type { i8*, %"union.absl::container_internal::map_slot_type.356"*, i64, i64, %"class.absl::container_internal::CompressedTuple.357" }
%"union.absl::container_internal::map_slot_type.356" = type { %"struct.std::__1::pair.1484" }
%"struct.std::__1::pair.1484" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.357" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.358" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.362" }
%"class.gl::TypedResourceManager.362" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.374" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.365", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.366", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.344", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.365" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.372", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.372" = type { %"struct.std::__1::array.373" }
%"struct.std::__1::array.373" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.374" = type { %"class.absl::container_internal::raw_hash_map.375" }
%"class.absl::container_internal::raw_hash_map.375" = type { %"class.absl::container_internal::raw_hash_set.376" }
%"class.absl::container_internal::raw_hash_set.376" = type { i8*, %"union.absl::container_internal::map_slot_type.377"*, i64, i64, %"class.absl::container_internal::CompressedTuple.378" }
%"union.absl::container_internal::map_slot_type.377" = type { %"struct.std::__1::pair.1486" }
%"struct.std::__1::pair.1486" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.378" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.383" }
%"class.gl::ResourceMap.383" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.384" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.384" = type { %"class.absl::container_internal::raw_hash_map.385" }
%"class.absl::container_internal::raw_hash_map.385" = type { %"class.absl::container_internal::raw_hash_set.386" }
%"class.absl::container_internal::raw_hash_set.386" = type { i8*, %"union.absl::container_internal::map_slot_type.387"*, i64, i64, %"class.absl::container_internal::CompressedTuple.388" }
%"union.absl::container_internal::map_slot_type.387" = type opaque
%"class.absl::container_internal::CompressedTuple.388" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.389" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.389" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.393" }
%"class.gl::ResourceMap.393" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.394" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.394" = type { %"class.absl::container_internal::raw_hash_map.395" }
%"class.absl::container_internal::raw_hash_map.395" = type { %"class.absl::container_internal::raw_hash_set.396" }
%"class.absl::container_internal::raw_hash_set.396" = type { i8*, %"union.absl::container_internal::map_slot_type.397"*, i64, i64, %"class.absl::container_internal::CompressedTuple.398" }
%"union.absl::container_internal::map_slot_type.397" = type opaque
%"class.absl::container_internal::CompressedTuple.398" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.399" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.399" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT", %"class.angle::BitSetT", i64 }
%"struct.std::__1::array.403" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.343, %"class.std::__1::vector.344", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.351", %"class.angle::BitSetT", %struct.Optional.352 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT", %"class.std::__1::vector.37", i32, %"class.angle::BitSetT", %"class.angle::BitSetT.44", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.45", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type { i32 (...)**, %"class.gl::FramebufferState"* }
%struct.Optional.343 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.351" = type { i64 }
%struct.Optional.352 = type { i8, %"class.angle::BitSetT.351" }
%"class.gl::BindingPointer.404" = type { %"class.angle::BindingPointer.405" }
%"class.angle::BindingPointer.405" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.225", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.161" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap", i32, %"class.std::__1::vector.92", %"class.std::__1::vector.99", %"class.std::__1::vector.106", %"class.gl::Range", %"class.angle::BitSetT", %"class.std::__1::vector.37", %"class.angle::BitSetT.44", i8, i8, i8, i8, %"class.angle::BitSetT.61", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.46" }
%"struct.std::__1::array.46" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.101" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.109" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.108" }>
%"class.angle::BitSetT.108" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::ProgramImpl" = type { i32 (...)**, %"class.gl::ProgramState"* }
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.216" }
%"class.absl::flat_hash_map.216" = type { %"class.absl::container_internal::raw_hash_map.217" }
%"class.absl::container_internal::raw_hash_map.217" = type { %"class.absl::container_internal::raw_hash_set.218" }
%"class.absl::container_internal::raw_hash_set.218" = type { i8*, %"union.absl::container_internal::map_slot_type.219"*, i64, i64, %"class.absl::container_internal::CompressedTuple.220" }
%"union.absl::container_internal::map_slot_type.219" = type opaque
%"class.absl::container_internal::CompressedTuple.220" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.221" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.221" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.161" = type { i64 }
%"class.gl::BindingPointer.406" = type { %"class.angle::BindingPointer.407" }
%"class.angle::BindingPointer.407" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.108", %"class.angle::BitSetT.108", [6 x i8], %"class.angle::BitSetT.126", i32, [4 x i8], %"class.angle::BitSetT.44", %"class.angle::BitSetT.126", %"class.angle::BitSetArray", %"struct.std::__1::array.129", %"struct.std::__1::array.130", %"class.angle::BitSetArray", %"struct.std::__1::array.131", %"struct.std::__1::array.132", %"class.angle::BitSetArray", %"struct.std::__1::array.132", i8, [7 x i8], %"class.std::__1::vector.47", %"class.std::__1::vector.99", %"class.std::__1::vector.99", i8, [7 x i8], %"class.std::__1::vector.47", %"class.std::__1::vector.133", %"class.std::__1::vector.140", i32, [4 x i8], %"class.std::__1::vector.147", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.154", %"class.angle::BitSetT.161", %"class.std::__1::vector.162", %"class.gl::Range", %"class.std::__1::vector.154", %"class.std::__1::vector.154", %"class.gl::Range", %"class.std::__1::vector.169", %"class.std::__1::vector.176", %"class.std::__1::vector.176", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.183", %"class.angle::PackedEnumMap.183", %"class.angle::PackedEnumMap.185", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.187, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.120" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.129" = type { [96 x i32] }
%"struct.std::__1::array.130" = type { [96 x i8] }
%"struct.std::__1::array.131" = type { [96 x i8] }
%"struct.std::__1::array.132" = type { [96 x %"class.angle::BitSetT.108"] }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.135" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { i32*, i32*, %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { i32* }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.149" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector.37" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.164" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector.37" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.156" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.171" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector.37" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.178" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector.37" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.183" = type { %"struct.std::__1::array.184" }
%"struct.std::__1::array.184" = type { [6 x %"class.std::__1::vector.47"] }
%struct.Optional.187 = type { i8, i8 }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.411" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.410, i32 }
%union.anon.410 = type { [4 x float] }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.430", %"struct.std::__1::array.431", %"struct.std::__1::array.433", %struct.Optional.435, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.344", %"class.angle::BitSetT.126", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.416", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.423", %"class.angle::BitSetT.126", %"class.angle::BitSetT.44", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126", %"class.angle::BitSetT.126" }
%"class.std::__1::vector.416" = type { %"class.std::__1::__vector_base.417" }
%"class.std::__1::__vector_base.417" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.418" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.291", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.423" = type { %"class.std::__1::__vector_base.424" }
%"class.std::__1::__vector_base.424" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.425" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.291", %"class.angle::BitSetT.126" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.430" = type { i64 }
%"struct.std::__1::array.431" = type { [16 x %"class.angle::BitSetT.432"] }
%"class.angle::BitSetT.432" = type { i64 }
%"struct.std::__1::array.433" = type { [16 x %"class.angle::BitSetT.434"] }
%"class.angle::BitSetT.434" = type { i64 }
%struct.Optional.435 = type { i8, %"class.angle::BitSetT.430" }
%"class.rx::VertexArrayImpl" = type { i32 (...)**, %"class.gl::VertexArrayState"* }
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.44" = type { i64 }
%"class.angle::PackedEnumMap.436" = type { %"struct.std::__1::array.437" }
%"struct.std::__1::array.437" = type { [11 x %"class.std::__1::vector.438"] }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"class.gl::BindingPointer.440"*, %"class.gl::BindingPointer.440"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::BindingPointer.440"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.447" }
%"struct.std::__1::array.447" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.angle::ObserverBinding"* }
%"class.std::__1::vector.448" = type { %"class.std::__1::__vector_base.449" }
%"class.std::__1::__vector_base.449" = type { %"class.gl::BindingPointer.450"*, %"class.gl::BindingPointer.450"*, %"class.std::__1::__compressed_pair.452" }
%"class.gl::BindingPointer.450" = type { %"class.angle::BindingPointer.451" }
%"class.angle::BindingPointer.451" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.gl::BindingPointer.450"* }
%"class.std::__1::vector.457" = type { %"class.std::__1::__vector_base.458" }
%"class.std::__1::__vector_base.458" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.459" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.440", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.464" = type { %"struct.std::__1::array.465" }
%"struct.std::__1::array.465" = type { [7 x %"class.gl::BindingPointer.466"] }
%"class.gl::BindingPointer.466" = type { %"class.angle::BindingPointer.467" }
%"class.angle::BindingPointer.467" = type { i32 (...)**, %"class.gl::Query"* }
%"class.angle::PackedEnumMap.468" = type { %"struct.std::__1::array.469" }
%"struct.std::__1::array.469" = type { [13 x %"class.gl::BindingPointer.291"] }
%"class.std::__1::vector.470" = type { %"class.std::__1::__vector_base.471" }
%"class.std::__1::__vector_base.471" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.477" = type { %"struct.std::__1::array.127" }
%"struct.std::__1::array.127" = type { [2 x %"class.angle::BitSetT.128"] }
%"class.angle::BitSetT.478" = type { i64 }
%"class.gl::BindingPointer.479" = type { %"class.angle::BindingPointer.480" }
%"class.angle::BindingPointer.480" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.492" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.488" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.483" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.492" = type { %"class.std::__1::__vector_base.493" }
%"class.std::__1::__vector_base.493" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.501" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.494" }
%"class.std::__1::vector.494" = type { %"class.std::__1::__vector_base.495" }
%"class.std::__1::__vector_base.495" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.496" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector.37", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.506" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.126", %"class.std::__1::vector.507", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.515", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.520", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.535", %"class.std::__1::vector.542", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.549", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.558", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.507" = type { %"class.std::__1::__vector_base.508" }
%"class.std::__1::__vector_base.508" = type { %"class.angle::BitSetT.509"*, %"class.angle::BitSetT.509"*, %"class.std::__1::__compressed_pair.510" }
%"class.angle::BitSetT.509" = type opaque
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.angle::BitSetT.509"* }
%"class.std::__1::vector.515" = type { i64*, i64, %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.520" = type { %"class.std::__1::__vector_base.521" }
%"class.std::__1::__vector_base.521" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.522" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.527", i64 }
%"struct.std::__1::array.527" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.528", i32, i32 }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { float*, float*, %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { float* }
%"class.std::__1::vector.535" = type { %"class.std::__1::__vector_base.536" }
%"class.std::__1::__vector_base.536" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.544" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.549" = type { %"class.std::__1::__vector_base.550" }
%"class.std::__1::__vector_base.550" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.553" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.551", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.551" = type { %"class.angle::VectorBase.552" }
%"class.angle::VectorBase.552" = type { [4 x float] }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.558" = type { %"class.std::__1::__vector_base.559" }
%"class.std::__1::__vector_base.559" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.560" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.551" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.565" = type { i32 }
%"class.angle::BitSetT.45" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.127" }
%"class.gl::MemoryProgramCache" = type opaque
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.671", %"class.angle::PackedEnumMap.678", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.680", i8, %"class.std::__1::mutex", %"class.std::__1::vector.682", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.697", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.700", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.744", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.966", i32, %"class.std::__1::shared_ptr.968" }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.671" = type { %"class.std::__1::__vector_base.672" }
%"class.std::__1::__vector_base.672" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.673" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.678" = type { %"struct.std::__1::array.679" }
%"struct.std::__1::array.679" = type { [3 x i8] }
%"class.rx::SerialFactoryBase.680" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.681" }
%"struct.std::__1::__atomic_base.681" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.682" = type { %"class.std::__1::__vector_base.683" }
%"class.std::__1::__vector_base.683" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.691" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.684" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.696" }
%"struct.std::__1::array.696" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkPipelineCache_T* }
%"class.angle::PackedEnumMap.697" = type { %"struct.std::__1::array.698" }
%"struct.std::__1::array.698" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.std::__1::deque.700" = type { %"class.std::__1::__deque_base.701" }
%"class.std::__1::__deque_base.701" = type { %"struct.std::__1::__split_buffer.702", i64, %"class.std::__1::__compressed_pair.709" }
%"struct.std::__1::__split_buffer.702" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.704" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.703" }
%"class.rx::vk::WrappedObject.703" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.713", %"class.std::__1::vector.720", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.680", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.734", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.713" = type { %"class.std::__1::__vector_base.714" }
%"class.std::__1::__vector_base.714" = type { %"class.rx::vk::ObjectAndSerial"*, %"class.rx::vk::ObjectAndSerial"*, %"class.std::__1::__compressed_pair.715" }
%"class.rx::vk::ObjectAndSerial" = type opaque
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.rx::vk::ObjectAndSerial"* }
%"class.std::__1::vector.720" = type { %"class.std::__1::__vector_base.721" }
%"class.std::__1::__vector_base.721" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.722" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared", %"class.rx::Serial" }
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.738" }
%"class.rx::vk::WrappedObject.738" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.727", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.727" = type { %"class.std::__1::__vector_base.728" }
%"class.std::__1::__vector_base.728" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.734" = type { %"struct.std::__1::array.735" }
%"struct.std::__1::array.735" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.736" }
%"class.std::__1::vector.736" = type { %"class.std::__1::__vector_base.737" }
%"class.std::__1::__vector_base.737" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.744" = type { %"class.std::__1::__vector_base.745" }
%"class.std::__1::__vector_base.745" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.857", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.870", %"class.std::__1::thread" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.825" }
%"class.std::__1::deque.825" = type { %"class.std::__1::__deque_base.826" }
%"class.std::__1::__deque_base.826" = type { %"struct.std::__1::__split_buffer.827", i64, %"class.std::__1::__compressed_pair.849" }
%"struct.std::__1::__split_buffer.827" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.844" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.829", %"class.std::__1::vector.37", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.684", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.837", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.828" }
%"class.rx::vk::WrappedObject.828" = type { %struct.VkRenderPass_T* }
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.836" }
%"class.rx::vk::WrappedObject.836" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.837" = type { %"class.std::__1::__vector_base.838" }
%"class.std::__1::__vector_base.838" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.857" = type { %"class.std::__1::deque.858" }
%"class.std::__1::deque.858" = type { %"class.std::__1::__deque_base.859" }
%"class.std::__1::__deque_base.859" = type { %"struct.std::__1::__split_buffer.860", i64, %"class.std::__1::__compressed_pair.866" }
%"struct.std::__1::__split_buffer.860" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.861" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.853, %union.anon.855, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.853 = type { i64 }
%union.anon.855 = type { i64 }
%"class.std::__1::map.870" = type { %"class.std::__1::__tree.871" }
%"class.std::__1::__tree.871" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.881" }
%"class.rx::vk::WrappedObject.881" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats.882", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats.882" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.883", %"class.std::__1::__compressed_pair.891", %"class.std::__1::__compressed_pair.896", %"class.std::__1::__compressed_pair.898", [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885", %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { float }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.903", %"class.std::__1::unordered_map.904" }
%"class.rx::HasCacheStats.903" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.904" = type { %"class.std::__1::__hash_table.905" }
%"class.std::__1::__hash_table.905" = type <{ %"class.std::__1::unique_ptr.906", %"class.std::__1::__compressed_pair.916", %"class.std::__1::__compressed_pair.921", %"class.std::__1::__compressed_pair.925", [4 x i8] }>
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908", %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"struct.std::__1::__hash_node_base.909"** }
%"struct.std::__1::__hash_node_base.909" = type { %"struct.std::__1::__hash_node_base.909"* }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.std::__1::__bucket_list_deallocator.911" }
%"class.std::__1::__bucket_list_deallocator.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"struct.std::__1::__hash_node_base.909" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.931", %"class.angle::PackedEnumMap.931" }
%"class.angle::PackedEnumMap.931" = type { %"struct.std::__1::array.932" }
%"struct.std::__1::array.932" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.933" }
%"struct.std::__1::atomic.933" = type { %"struct.std::__1::__atomic_base.934" }
%"struct.std::__1::__atomic_base.934" = type { %"struct.std::__1::__atomic_base.935" }
%"struct.std::__1::__atomic_base.935" = type { %"struct.std::__1::__cxx_atomic_impl.936" }
%"struct.std::__1::__cxx_atomic_impl.936" = type { %"struct.std::__1::__cxx_atomic_base_impl.937" }
%"struct.std::__1::__cxx_atomic_base_impl.937" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.938", i64, i64, %"class.absl::flat_hash_map.953" }
%"class.absl::flat_hash_map.938" = type { %"class.absl::container_internal::raw_hash_map.939" }
%"class.absl::container_internal::raw_hash_map.939" = type { %"class.absl::container_internal::raw_hash_set.940" }
%"class.absl::container_internal::raw_hash_set.940" = type { i8*, %"union.absl::container_internal::map_slot_type.941"*, i64, i64, %"class.absl::container_internal::CompressedTuple.942" }
%"union.absl::container_internal::map_slot_type.941" = type opaque
%"class.absl::container_internal::CompressedTuple.942" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.943" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.943" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.953" = type { %"class.absl::container_internal::raw_hash_map.954" }
%"class.absl::container_internal::raw_hash_map.954" = type { %"class.absl::container_internal::raw_hash_set.955" }
%"class.absl::container_internal::raw_hash_set.955" = type { i8*, %"union.absl::container_internal::map_slot_type.956"*, i64, i64, %"class.absl::container_internal::CompressedTuple.957" }
%"union.absl::container_internal::map_slot_type.956" = type opaque
%"class.absl::container_internal::CompressedTuple.957" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.958" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.958" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.966" = type { %"struct.std::__1::array.967" }
%"struct.std::__1::array.967" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.968" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.969" }
%"class.std::__1::shared_ptr.969" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.637" }
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.1019" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.1020" = type { [16 x { i64, i64 }] }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.763", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.763" = type { %"class.std::__1::__vector_base.764" }
%"class.std::__1::__vector_base.764" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.765" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.746", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.746" = type { %"class.std::__1::__vector_base.747" }
%"class.std::__1::__vector_base.747" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.748" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.rx::vk::ObjectAndSerial.1030" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.rx::WindowSurfaceVk" = type opaque
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::PackedEnumMap.1037" = type { %"struct.std::__1::array.1038" }
%"struct.std::__1::array.1038" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.1039", %"class.std::__1::vector.1047", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.1039" = type { %"class.std::__1::__vector_base.1040" }
%"class.std::__1::__vector_base.1040" = type { %"class.rx::vk::RefCounted.1041"**, %"class.rx::vk::RefCounted.1041"**, %"class.std::__1::__compressed_pair.1042" }
%"class.rx::vk::RefCounted.1041" = type opaque
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.rx::vk::RefCounted.1041"** }
%"class.std::__1::vector.1047" = type { %"class.std::__1::__vector_base.1048" }
%"class.std::__1::__vector_base.1048" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.1049" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %struct.VkDescriptorPoolSize* }
%"class.angle::PackedEnumMap.1054" = type { %"struct.std::__1::array.1055" }
%"struct.std::__1::array.1055" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.1071" = type { %"struct.std::__1::array.1072" }
%"struct.std::__1::array.1072" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared.1073", %"class.std::__1::vector.1075", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared.1073" = type { %"class.rx::vk::RefCounted.1074"* }
%"class.rx::vk::RefCounted.1074" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.1075" = type { %"class.std::__1::__vector_base.1076" }
%"class.std::__1::__vector_base.1076" = type { %"class.rx::vk::Shared.1073"*, %"class.rx::vk::Shared.1073"*, %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.rx::vk::Shared.1073"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::VertexArrayVk" = type { %"class.rx::VertexArrayImpl", %"struct.std::__1::array.1082", %"struct.std::__1::array.1083", %"struct.std::__1::array.1084", %"struct.std::__1::array.1085", %"struct.std::__1::array.1084", %"class.angle::BitSetT.126", i64, %"class.rx::vk::BufferHelper"*, %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::LineLoopHelper", %struct.Optional.62, %struct.Optional.1086, i8, %"class.angle::BitSetT.126" }
%"struct.std::__1::array.1082" = type { [16 x %struct.VkBuffer_T*] }
%struct.VkBuffer_T = type opaque
%"struct.std::__1::array.1083" = type { [16 x i64] }
%"struct.std::__1::array.1085" = type { [16 x %"class.rx::vk::BufferHelper"*] }
%"struct.std::__1::array.1084" = type { [16 x i32] }
%"class.rx::vk::LineLoopHelper" = type { [8 x i8], %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer" }
%struct.Optional.1086 = type { i8, i64 }
%"class.rx::FramebufferVk" = type <{ %"class.rx::FramebufferImpl", %"class.rx::WindowSurfaceVk"*, %"class.rx::vk::RenderPassDesc", [4 x i8], %"class.rx::vk::FramebufferHelper"*, %"class.rx::RenderTargetCache", i64, %"class.rx::vk::DynamicBuffer", %"class.angle::BitSetT", [3 x i8], %"class.rx::vk::FramebufferDesc", %"class.rx::FramebufferCache", %"class.rx::vk::ClearValuesArray", i8, [7 x i8] }>
%"class.rx::vk::FramebufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Framebuffer" }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.772" }
%"class.rx::vk::WrappedObject.772" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::RenderTargetCache" = type { %"class.rx::RenderTargetVk"*, %"struct.std::__1::array.1087", %"class.rx::RenderTargetVk"* }
%"struct.std::__1::array.1087" = type { [10 x %"class.rx::RenderTargetVk"*] }
%"class.rx::RenderTargetVk" = type opaque
%"class.rx::FramebufferCache" = type { %"class.absl::flat_hash_map.1089", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1089" = type { %"class.absl::container_internal::raw_hash_map.1090" }
%"class.absl::container_internal::raw_hash_map.1090" = type { %"class.absl::container_internal::raw_hash_set.1091" }
%"class.absl::container_internal::raw_hash_set.1091" = type { i8*, %"union.absl::container_internal::map_slot_type.1092"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1093" }
%"union.absl::container_internal::map_slot_type.1092" = type { %"struct.std::__1::pair.1472" }
%"struct.std::__1::pair.1472" = type { %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferHelper" }
%"class.absl::container_internal::CompressedTuple.1093" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1094" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1094" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::ClearValuesArray" = type { %"struct.std::__1::array.773", %"class.angle::BitSetT.1104" }
%"struct.std::__1::array.773" = type { [10 x %union.VkClearValue] }
%"class.angle::BitSetT.1104" = type { i64 }
%"class.rx::ProgramVk" = type { %"class.rx::ProgramImpl", %"class.angle::PackedEnumMap.1105", %"class.angle::BitSetT.108", [7 x i8], %"class.rx::ShaderInfo", %"struct.rx::GlslangProgramInterfaceInfo", %"class.rx::ProgramExecutableVk" }
%"class.angle::PackedEnumMap.1105" = type { %"struct.std::__1::array.1106" }
%"struct.std::__1::array.1106" = type { [6 x %"struct.rx::DefaultUniformBlock"] }
%"struct.rx::DefaultUniformBlock" = type { [8 x i8], %"class.angle::MemoryBuffer", %"class.std::__1::vector.1107" }
%"class.std::__1::vector.1107" = type { %"class.std::__1::__vector_base.1108" }
%"class.std::__1::__vector_base.1108" = type { %"struct.sh::BlockMemberInfo"*, %"struct.sh::BlockMemberInfo"*, %"class.std::__1::__compressed_pair.1109" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"struct.sh::BlockMemberInfo"* }
%"class.rx::ShaderInfo" = type <{ %"class.angle::PackedEnumMap.1114", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.1114" = type { %"struct.std::__1::array.1115" }
%"struct.std::__1::array.1115" = type { [6 x %"class.std::__1::vector.37"] }
%"struct.rx::GlslangProgramInterfaceInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.rx::ProgramExecutableVk" = type { i32 (...)**, %"class.angle::PackedEnumMap.1116", %"class.angle::PackedEnumMap.1116", i32, %"class.rx::vk::BufferSerial", %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache.996", %"class.rx::vk::BindingPointer.1118", %"class.angle::PackedEnumMap.1121", %"class.angle::PackedEnumMap.1126", %"class.angle::PackedEnumMap.1129", i32, %"class.angle::FixedVector.1131", %"class.std::__1::vector.37", %"class.rx::ShaderInterfaceVariableInfoMap", [64 x %"class.rx::ProgramInfo"], %"class.rx::ProgramInfo", %"struct.rx::ProgramTransformOptions", %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"struct.rx::ProgramExecutablePerfCounters", %"struct.rx::ProgramExecutablePerfCounters" }
%"class.angle::PackedEnumMap.1116" = type { %"struct.std::__1::array.1117" }
%"struct.std::__1::array.1117" = type { [4 x %struct.VkDescriptorSet_T*] }
%"class.rx::vk::BindingPointer.1118" = type { %"class.rx::vk::RefCounted.1119"* }
%"class.rx::vk::RefCounted.1119" = type { i32, %"class.rx::vk::PipelineLayout" }
%"class.rx::vk::PipelineLayout" = type { %"class.rx::vk::WrappedObject.1120" }
%"class.rx::vk::WrappedObject.1120" = type { %struct.VkPipelineLayout_T* }
%"class.angle::PackedEnumMap.1121" = type { %"struct.std::__1::array.1122" }
%"struct.std::__1::array.1122" = type { [4 x %"class.rx::vk::BindingPointer.1123"] }
%"class.rx::vk::BindingPointer.1123" = type { %"class.rx::vk::RefCounted.1124"* }
%"class.rx::vk::RefCounted.1124" = type { i32, %"class.rx::vk::DescriptorSetLayout" }
%"class.rx::vk::DescriptorSetLayout" = type { %"class.rx::vk::WrappedObject.1125" }
%"class.rx::vk::WrappedObject.1125" = type { %struct.VkDescriptorSetLayout_T* }
%"class.angle::PackedEnumMap.1126" = type { %"struct.std::__1::array.1127" }
%"struct.std::__1::array.1127" = type { [4 x %"class.rx::vk::BindingPointer.1128"] }
%"class.rx::vk::BindingPointer.1128" = type { %"class.rx::vk::RefCounted.1041"* }
%"class.angle::PackedEnumMap.1129" = type { %"struct.std::__1::array.1130" }
%"struct.std::__1::array.1130" = type { [4 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.angle::FixedVector.1131" = type { %"struct.std::__1::array.1132", i64 }
%"struct.std::__1::array.1132" = type { [6 x i32] }
%"class.rx::ShaderInterfaceVariableInfoMap" = type { %"class.angle::PackedEnumMap.1133" }
%"class.angle::PackedEnumMap.1133" = type { %"struct.std::__1::array.1134" }
%"struct.std::__1::array.1134" = type { [6 x %"class.absl::flat_hash_map.1135"] }
%"class.absl::flat_hash_map.1135" = type { %"class.absl::container_internal::raw_hash_map.1136" }
%"class.absl::container_internal::raw_hash_map.1136" = type { %"class.absl::container_internal::raw_hash_set.1137" }
%"class.absl::container_internal::raw_hash_set.1137" = type { i8*, %"union.absl::container_internal::map_slot_type.1138"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1139" }
%"union.absl::container_internal::map_slot_type.1138" = type opaque
%"class.absl::container_internal::CompressedTuple.1139" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1140" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1140" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::ProgramInfo" = type { [8 x i8], %"class.rx::vk::ShaderProgramHelper", %"class.angle::PackedEnumMap.1178" }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.1144", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial.1030", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.1144" = type { %"struct.std::__1::array.1145" }
%"struct.std::__1::array.1145" = type { [6 x %"class.rx::vk::BindingPointer.1146"] }
%"class.rx::vk::BindingPointer.1146" = type { %"class.rx::vk::RefCounted.1147"* }
%"class.rx::vk::RefCounted.1147" = type { i32, %"class.rx::vk::ObjectAndSerial.1148" }
%"class.rx::vk::ObjectAndSerial.1148" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject.1149" }
%"class.rx::vk::WrappedObject.1149" = type { %struct.VkShaderModule_T* }
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.1150", %"class.std::__1::unordered_map.1151" }
%"class.rx::HasCacheStats.1150" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1151" = type { %"class.std::__1::__hash_table.1152" }
%"class.std::__1::__hash_table.1152" = type <{ %"class.std::__1::unique_ptr.1153", %"class.std::__1::__compressed_pair.1163", %"class.std::__1::__compressed_pair.1168", %"class.std::__1::__compressed_pair.1172", [4 x i8] }>
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155", %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"struct.std::__1::__hash_node_base.1156"** }
%"struct.std::__1::__hash_node_base.1156" = type { %"struct.std::__1::__hash_node_base.1156"* }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.std::__1::__bucket_list_deallocator.1158" }
%"class.std::__1::__bucket_list_deallocator.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.std::__1::__hash_node_base.1156" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.1178" = type { %"struct.std::__1::array.1179" }
%"struct.std::__1::array.1179" = type { [6 x %"class.rx::vk::RefCounted.1147"] }
%"struct.rx::ProgramTransformOptions" = type { i8 }
%"struct.rx::ProgramExecutablePerfCounters" = type { %"class.angle::PackedEnumMap.1180", %"class.angle::PackedEnumMap.1180", %"class.angle::PackedEnumMap.1180" }
%"class.angle::PackedEnumMap.1180" = type { %"struct.std::__1::array.991" }
%"class.rx::ProgramPipelineVk" = type opaque
%"class.angle::PackedEnumMap.1181" = type { %"struct.std::__1::array.1182" }
%"struct.std::__1::array.1182" = type { [3 x i32] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.1183", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.1183" = type { %"struct.std::__1::array.1184" }
%"struct.std::__1::array.1184" = type { [4 x %"class.angle::PackedEnumMap.573"] }
%"class.angle::PackedEnumMap.1185" = type { %"struct.std::__1::array.1186" }
%"struct.std::__1::array.1186" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer.1123", %"class.rx::vk::BindingPointer.1128", %"class.rx::DriverUniformsDescriptorSetCache" }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats.1187", %"class.angle::FastIntegerMap.1188" }
%"class.rx::HasCacheStats.1187" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap.1188" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.1189" }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.775" }
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"class.angle::BitSetT.128"*, %"class.angle::BitSetT.128"*, %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.angle::BitSetT.128"* }
%"class.std::__1::vector.1189" = type { %"class.std::__1::__vector_base.1190" }
%"class.std::__1::__vector_base.1190" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.1196" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type opaque
%"struct.std::__1::array.1198" = type { [96 x %"class.rx::TextureVk"*] }
%"class.angle::BitSetT.126" = type { i64 }
%"struct.std::__1::array.1199" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.699" }
%"class.rx::vk::WrappedObject.699" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::vector.684" = type { %"class.std::__1::__vector_base.685" }
%"class.std::__1::__vector_base.685" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.686" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.rx::vk::GarbageObject"* }
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.1200", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1200" = type { %"class.absl::container_internal::raw_hash_map.1201" }
%"class.absl::container_internal::raw_hash_map.1201" = type { %"class.absl::container_internal::raw_hash_set.1202" }
%"class.absl::container_internal::raw_hash_set.1202" = type { i8*, %"union.absl::container_internal::map_slot_type.1203"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1204" }
%"union.absl::container_internal::map_slot_type.1203" = type { %"struct.std::__1::pair.1417" }
%"struct.std::__1::pair.1417" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1418" }
%"class.absl::flat_hash_map.1418" = type { %"class.absl::container_internal::raw_hash_map.1419" }
%"class.absl::container_internal::raw_hash_map.1419" = type { %"class.absl::container_internal::raw_hash_set.1420" }
%"class.absl::container_internal::raw_hash_set.1420" = type { i8*, %"union.absl::container_internal::map_slot_type.1421"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1422" }
%"union.absl::container_internal::map_slot_type.1421" = type { %"struct.std::__1::pair.1434" }
%"struct.std::__1::pair.1434" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1422" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1423" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1423" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.1204" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1205" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1205" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.753", %"class.angle::BitSetT.762", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.774", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PackedEnumMap.753" = type { %"struct.std::__1::array.754" }
%"struct.std::__1::array.754" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.755" }
%"class.std::__1::vector.755" = type { %"class.std::__1::__vector_base.756" }
%"class.std::__1::__vector_base.756" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.757" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImage_T = type opaque
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.762" = type { i16 }
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.773" }
%"struct.std::__1::array.774" = type { [4 x %struct.VkBuffer_T*] }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.782" }
%"class.std::__1::vector.782" = type { %"class.std::__1::__vector_base.783" }
%"class.std::__1::__vector_base.783" = type { i32*, i32*, %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { i32* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.819" }
%"struct.std::__1::array.819" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.791", [6 x i8], %"class.rx::vk::BindingPointer", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.809", %struct.Optional.817, %"struct.std::__1::array.818", %"struct.std::__1::array.818", [4 x i8] }>
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.789" }
%"class.rx::vk::WrappedObject.789" = type { %struct.VkImage_T* }
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.790" }
%"class.rx::vk::WrappedObject.790" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.791" = type { i16 }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.792"* }
%"class.rx::vk::RefCounted.792" = type { i32, %"class.rx::vk::SamplerYcbcrConversion" }
%"class.rx::vk::SamplerYcbcrConversion" = type { %"class.rx::vk::WrappedObject.793" }
%"class.rx::vk::WrappedObject.793" = type { %struct.VkSamplerYcbcrConversion_T* }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.std::__1::vector.811"*, %"class.std::__1::vector.811"*, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::vector.811" = type opaque
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.std::__1::vector.811"* }
%struct.Optional.817 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.818" = type { [16 x %"class.angle::BitSetT"] }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.1215" }
%"class.angle::FastVector.1215" = type { %"struct.std::__1::array.1216", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.1216" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.1147"], [4 x %"class.rx::vk::RefCounted.1147"], [4 x %"class.rx::vk::RefCounted.1147"], [3 x %"class.rx::vk::RefCounted.1147"], [1 x %"class.rx::vk::RefCounted.1147"], [8 x %"class.rx::vk::RefCounted.1147"], [1 x %"class.rx::vk::RefCounted.1147"], [10 x %"class.rx::vk::RefCounted.1147"], [48 x %"class.rx::vk::RefCounted.1147"], [43 x %"class.rx::vk::RefCounted.1147"], [6 x %"class.rx::vk::RefCounted.1147"], [2 x %"class.rx::vk::RefCounted.1147"] }
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.1217", %"class.angle::PackedEnumMap.1219", %"class.angle::PackedEnumMap.1221", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.1223", %"class.std::__1::unordered_map.1249", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.1217" = type { %"struct.std::__1::array.1218" }
%"struct.std::__1::array.1218" = type { [22 x %"class.angle::PackedEnumMap.1121"] }
%"class.angle::PackedEnumMap.1219" = type { %"struct.std::__1::array.1220" }
%"struct.std::__1::array.1220" = type { [22 x %"class.rx::vk::BindingPointer.1118"] }
%"class.angle::PackedEnumMap.1221" = type { %"struct.std::__1::array.1222" }
%"struct.std::__1::array.1222" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.std::__1::unordered_map.1223" = type { %"class.std::__1::__hash_table.1224" }
%"class.std::__1::__hash_table.1224" = type <{ %"class.std::__1::unique_ptr.1225", %"class.std::__1::__compressed_pair.1235", %"class.std::__1::__compressed_pair.1240", %"class.std::__1::__compressed_pair.1245", [4 x i8] }>
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227", %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"struct.std::__1::__hash_node_base.1228"** }
%"struct.std::__1::__hash_node_base.1228" = type { %"struct.std::__1::__hash_node_base.1228"* }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.std::__1::__bucket_list_deallocator.1230" }
%"class.std::__1::__bucket_list_deallocator.1230" = type { %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"struct.std::__1::__hash_node_base.1228" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"class.std::__1::unordered_map.1249" = type { %"class.std::__1::__hash_table.1250" }
%"class.std::__1::__hash_table.1250" = type <{ %"class.std::__1::unique_ptr.1251", %"class.std::__1::__compressed_pair.1261", %"class.std::__1::__compressed_pair.1266", %"class.std::__1::__compressed_pair.1269", [4 x i8] }>
%"class.std::__1::unique_ptr.1251" = type { %"class.std::__1::__compressed_pair.1252" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253", %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"struct.std::__1::__hash_node_base.1254"** }
%"struct.std::__1::__hash_node_base.1254" = type { %"struct.std::__1::__hash_node_base.1254"* }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.std::__1::__bucket_list_deallocator.1256" }
%"class.std::__1::__bucket_list_deallocator.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"struct.std::__1::__hash_node_base.1254" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.1056", %"class.std::__1::vector.1064", i64, i32 }>
%"class.std::__1::vector.1056" = type { %"class.std::__1::__vector_base.1057" }
%"class.std::__1::__vector_base.1057" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.1059" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.1058" }
%"class.rx::vk::WrappedObject.1058" = type { %struct.VkQueryPool_T* }
%struct.VkQueryPool_T = type opaque
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.1064" = type { %"class.std::__1::__vector_base.1065" }
%"class.std::__1::__vector_base.1065" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.1066" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.1273" = type { %"class.std::__1::__vector_base.1274" }
%"class.std::__1::__vector_base.1274" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.1276" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.1275", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.1275" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.1281" = type { %"class.std::__1::__vector_base.1282" }
%"class.std::__1::__vector_base.1282" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.1283" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.1275", i8 }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"class.std::__1::vector.829" = type { %"class.std::__1::__vector_base.830" }
%"class.std::__1::__vector_base.830" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %struct.VkSemaphore_T** }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i32*, i32*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i32* }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.1288" }
%"class.angle::PackedEnumMap.1288" = type { %"struct.std::__1::array.403" }
%"class.angle::BitSetT.128" = type { i64 }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.1289" }
%"class.std::__1::vector.1289" = type { %"class.std::__1::__vector_base.1290" }
%"class.std::__1::__vector_base.1290" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.std::__1::vector.1296" = type { %"class.std::__1::__vector_base.1297" }
%"class.std::__1::__vector_base.1297" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.1298" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.1303" = type { %"class.std::__1::__vector_base.1304" }
%"class.std::__1::__vector_base.1304" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.1305" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.1310" = type { %"class.std::__1::__vector_base.1311" }
%"class.std::__1::__vector_base.1311" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.1312" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkBufferView_T = type opaque
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.1372", %"class.std::__1::vector.1382", i8, [7 x i8] }>
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.1317", %"class.std::__1::unordered_map.1318" }
%"class.rx::HasCacheStats.1317" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1318" = type { %"class.std::__1::__hash_table.1319" }
%"class.std::__1::__hash_table.1319" = type <{ %"class.std::__1::unique_ptr.1320", %"class.std::__1::__compressed_pair.1330", %"class.std::__1::__compressed_pair.1335", %"class.std::__1::__compressed_pair.1339", [4 x i8] }>
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322", %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"struct.std::__1::__hash_node_base.1323"** }
%"struct.std::__1::__hash_node_base.1323" = type { %"struct.std::__1::__hash_node_base.1323"* }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.std::__1::__bucket_list_deallocator.1325" }
%"class.std::__1::__bucket_list_deallocator.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"struct.std::__1::__hash_node_base.1323" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.1345", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1345" = type { %"class.std::__1::__hash_table.1346" }
%"class.std::__1::__hash_table.1346" = type <{ %"class.std::__1::unique_ptr.1347", %"class.std::__1::__compressed_pair.1357", %"class.std::__1::__compressed_pair.1362", %"class.std::__1::__compressed_pair.1366", [4 x i8] }>
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349", %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"struct.std::__1::__hash_node_base.1350"** }
%"struct.std::__1::__hash_node_base.1350" = type { %"struct.std::__1::__hash_node_base.1350"* }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.std::__1::__bucket_list_deallocator.1352" }
%"class.std::__1::__bucket_list_deallocator.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"struct.std::__1::__hash_node_base.1350" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"class.std::__1::set.1372" = type { %"class.std::__1::__tree.1373" }
%"class.std::__1::__tree.1373" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1374", %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.1382" = type { %"class.std::__1::__vector_base.1383" }
%"class.std::__1::__vector_base.1383" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.1384" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.rx::vk::ResourceUseList"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.797" }
%"class.rx::vk::WrappedObject.797" = type { %struct.VkBuffer_T* }
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.798" }
%"class.rx::vk::WrappedObject.798" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.794", i32, i32, i64, i64, i32, %"class.std::__1::vector.802", %"class.std::__1::vector.802" }
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.rx::vk::BufferHelper"* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.std::__1::unique_ptr.794"*, %"class.std::__1::unique_ptr.794"*, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.std::__1::unique_ptr.794"* }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::basic_string"* }
%"class.angle::FixedVector.1389" = type { %"struct.std::__1::array.1390", i64 }
%"struct.std::__1::array.1390" = type { [5 x %struct.VkPipelineShaderStageCreateInfo] }
%"struct.std::__1::array.1391" = type { [8 x %struct.VkPipelineColorBlendAttachmentState] }
%struct.VkPipelineTessellationDomainOriginStateCreateInfo = type { i32, i8*, i32 }
%"class.angle::PackedEnumMap.1392" = type { %"struct.std::__1::array.1393" }
%"struct.std::__1::array.1393" = type { [4 x %struct.VkSpecializationMapEntry] }
%"struct.std::__1::array.1394" = type { [16 x %struct.VkVertexInputBindingDescription] }
%"struct.std::__1::array.1395" = type { [16 x %struct.VkVertexInputAttributeDescription] }
%"struct.std::__1::array.1396" = type { [16 x %struct.VkVertexInputBindingDivisorDescriptionEXT] }
%struct.VkVertexInputBindingDivisorDescriptionEXT = type { i32, i32 }
%struct.VkPipelineVertexInputDivisorStateCreateInfoEXT = type { i32, i8*, i32, %struct.VkVertexInputBindingDivisorDescriptionEXT* }
%struct.VkPipelineRasterizationLineStateCreateInfoEXT = type { i32, i8*, i32, i32, i32, i16 }
%struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT = type { i32, i8*, i32 }
%struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT = type { i32, i8*, i32, i32 }
%"class.angle::FixedVector.1399" = type { %"struct.std::__1::array.1400", i64 }
%"struct.std::__1::array.1400" = type { [1 x i32] }
%"struct.gl::VertexFormat" = type <{ i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.angle::FixedVector.1402" = type { %"struct.std::__1::array.1403", i64 }
%"struct.std::__1::array.1403" = type { [96 x %struct.VkDescriptorSetLayoutBinding] }
%"class.std::__1::vector.1404" = type { %"class.std::__1::__vector_base.1405" }
%"class.std::__1::__vector_base.1405" = type { %struct.VkSampler_T**, %struct.VkSampler_T**, %"class.std::__1::__compressed_pair.1406" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %struct.VkSampler_T** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.angle::BitSetT.1415" = type { i16 }
%struct.VkSamplerFilteringPrecisionGOOGLE = type { i32, i8*, i32 }
%struct.VkSamplerYcbcrConversionInfo = type { i32, i8*, %struct.VkSamplerYcbcrConversion_T* }
%struct.VkSamplerCustomBorderColorCreateInfoEXT = type { i32, i8*, %union.VkClearColorValue, i32 }
%"struct.std::__1::array.1522" = type { [18 x %struct.VkAttachmentDescription2] }
%"class.angle::FastVector.1523" = type { %"struct.std::__1::array.1524", %"class.angle::FixedVector.1525"*, i64, i64 }
%"struct.std::__1::array.1524" = type { [2 x %"class.angle::FixedVector.1525"] }
%"class.angle::FixedVector.1525" = type { %"struct.std::__1::array.1526", i64 }
%"struct.std::__1::array.1526" = type { [18 x %struct.VkAttachmentReference2] }
%"class.angle::FastVector.1527" = type { %"struct.std::__1::array.1528", %"class.angle::FixedVector.1529"*, i64, i64 }
%"struct.std::__1::array.1528" = type { [2 x %"class.angle::FixedVector.1529"] }
%"class.angle::FixedVector.1529" = type { %"struct.std::__1::array.1530", i64 }
%"struct.std::__1::array.1530" = type { [8 x %struct.VkAttachmentReference2] }
%"class.angle::FastVector.1531" = type { %"struct.std::__1::array.1532", %struct.VkAttachmentReference2*, i64, i64 }
%"struct.std::__1::array.1532" = type { [2 x %struct.VkAttachmentReference2] }
%"class.angle::FastVector.1533" = type { %"struct.std::__1::array.1534", %struct.VkSubpassDescription2*, i64, i64 }
%"struct.std::__1::array.1534" = type { [2 x %struct.VkSubpassDescription2] }
%struct.VkMultisampledRenderToSingleSampledInfoEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.angle::FixedVector.1503" = type { %"struct.std::__1::array.1504", i64 }
%"struct.std::__1::array.1504" = type { [8 x %struct.VkAttachmentReference] }
%"struct.std::__1::array.1505" = type { [18 x %struct.VkAttachmentDescription] }
%"class.angle::FastVector.1506" = type { %"struct.std::__1::array.1507", %struct.VkSubpassDescription*, i64, i64 }
%"struct.std::__1::array.1507" = type { [2 x %struct.VkSubpassDescription] }
%"class.angle::FixedVector.1508" = type { %"struct.std::__1::array.1509", i64 }
%"struct.std::__1::array.1509" = type { [18 x %struct.VkAttachmentReference] }
%"class.angle::FixedVector.1510" = type { %"struct.std::__1::array.1511", i64 }
%"struct.std::__1::array.1511" = type { [18 x i32] }
%struct.VkSubpassDescriptionDepthStencilResolve = type { i32, i8*, i32, i32, %struct.VkAttachmentReference2* }
%"class.std::__1::vector.1512" = type { %"class.std::__1::__vector_base.1513" }
%"class.std::__1::__vector_base.1513" = type { %struct.VkSubpassDependency*, %struct.VkSubpassDependency*, %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %struct.VkSubpassDependency* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1156", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1439" }
%"struct.std::__1::pair.1439" = type { %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::PipelineHelper" }
%"struct.std::__1::__hash_node.1594" = type { %"struct.std::__1::__hash_node_base.1350", i64, %"struct.std::__1::__hash_value_type.1595" }
%"struct.std::__1::__hash_value_type.1595" = type { %"struct.std::__1::pair.1444" }
%"struct.std::__1::pair.1444" = type { %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::RefCounted.1124" }
%"struct.std::__1::__hash_node.1604" = type { %"struct.std::__1::__hash_node_base.1323", i64, %"struct.std::__1::__hash_value_type.1605" }
%"struct.std::__1::__hash_value_type.1605" = type { %"struct.std::__1::pair.1449" }
%"struct.std::__1::pair.1449" = type { %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::RefCounted.1119" }
%"class.angle::FixedVector.1450" = type { %"struct.std::__1::array.1451", i64 }
%"struct.std::__1::array.1451" = type { [4 x %struct.VkDescriptorSetLayout_T*] }
%"class.angle::FixedVector.1452" = type { %"struct.std::__1::array.1453", i64 }
%"struct.std::__1::array.1453" = type { [6 x %struct.VkPushConstantRange] }
%"struct.std::__1::__hash_node.1614" = type { %"struct.std::__1::__hash_node_base.909", i64, %"struct.std::__1::__hash_value_type.1615" }
%"struct.std::__1::__hash_value_type.1615" = type { %"struct.std::__1::pair.1460" }
%"struct.std::__1::pair.1460" = type { i64, %"class.rx::vk::RefCounted.792" }
%"struct.std::__1::__hash_node.1624" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type.1625" }
%"struct.std::__1::__hash_value_type.1625" = type { %"struct.std::__1::pair.1465" }
%"struct.std::__1::pair.1465" = type { %"class.rx::vk::SamplerDesc", %"class.rx::vk::RefCounted.1466" }
%"class.rx::vk::RefCounted.1466" = type { i32, [4 x i8], %"class.rx::vk::SamplerHelper" }
%"class.rx::vk::BindingPointer.1467" = type { %"class.rx::vk::RefCounted.1466"* }

$_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED5Ev = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EE7destroyEPNS_10RendererVkE = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EE3getERKS2_PP17VkDescriptorSet_T = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_ = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EE6insertERKS2_P17VkDescriptorSet_T = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED5Ev = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EE7destroyEPNS_10RendererVkE = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EE3getERKS2_PP17VkDescriptorSet_T = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EE6insertERKS2_P17VkDescriptorSet_T = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED5Ev = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EE7destroyEPNS_10RendererVkE = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE5clearEv = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EE3getERKS2_PP17VkDescriptorSet_T = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_ = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EE6insertERKS2_P17VkDescriptorSet_T = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE5clearEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE4findIS5_EENSR_8iteratorERSO_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE4findIS5_EENSJ_8iteratorERSG_ = comdat any

$_ZN5angle10FastVectorINS_11FixedVectorI22VkAttachmentReference2Lm18ENSt3__15arrayIS2_Lm18EEEEELm2ENS4_IS6_Lm2EEEE15ensure_capacityEm = comdat any

$_ZN5angle10FastVectorINS_11FixedVectorI22VkAttachmentReference2Lm8ENSt3__15arrayIS2_Lm8EEEEELm2ENS4_IS6_Lm2EEEE15ensure_capacityEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE22find_or_prepare_insertIS5_EENSF_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRKS4_NS3_8PipelineEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JRKS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JRKS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRmS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JRKS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_m = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE = comdat any

$_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE = comdat any

$_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DescriptorSetCache"*)* @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED2Ev to i8*), i8* bitcast (void (%"class.rx::DescriptorSetCache"*)* @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED0Ev to i8*)] }, comdat, align 8
@_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DescriptorSetCache.973"*)* @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED2Ev to i8*), i8* bitcast (void (%"class.rx::DescriptorSetCache.973"*)* @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED0Ev to i8*)] }, comdat, align 8
@_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DescriptorSetCache.996"*)* @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED2Ev to i8*), i8* bitcast (void (%"class.rx::DescriptorSetCache.996"*)* @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED0Ev to i8*)] }, comdat, align 8
@_ZN2rx2vk12_GLOBAL__N_127kMismatchedComponentTypeMapE = internal unnamed_addr constant %"class.angle::PackedEnumMap.1397" { %"struct.std::__1::array.1398" { [4 x i32] [i32 109, i32 108, i32 107, i32 0] } }, align 4
@.str = private unnamed_addr constant [72 x i8] c"../../third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp\00", align 1
@__func__._ZNK2rx2vk20GraphicsPipelineDesc18initializePipelineEPNS_9ContextVkERKNS0_13PipelineCacheERKNS0_10RenderPassERKNS0_14PipelineLayoutERKN5angle7BitSetTILm16EmmEERKNSE_ILm32EmmEEPKNS0_12ShaderModuleESN_SN_SN_SN_RKNS0_23SpecializationConstantsEPNS0_8PipelineE = private unnamed_addr constant [19 x i8] c"initializePipeline\00", align 1
@_ZN5angle12DirtyPointerE = external local_unnamed_addr constant i64, align 8
@__func__._ZNK2rx2vk11SamplerDesc4initEPNS_9ContextVkEPNS0_7SamplerE = private unnamed_addr constant [5 x i8] c"init\00", align 1
@_ZTVN2rx21GraphicsPipelineCacheE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::GraphicsPipelineCache"*)* @_ZN2rx21GraphicsPipelineCacheD2Ev to i8*), i8* bitcast (void (%"class.rx::GraphicsPipelineCache"*)* @_ZN2rx21GraphicsPipelineCacheD0Ev to i8*)] }, align 8
@__func__._ZN2rx24DescriptorSetLayoutCache22getDescriptorSetLayoutEPNS_2vk7ContextERKNS1_23DescriptorSetLayoutDescEPNS1_14BindingPointerINS1_19DescriptorSetLayoutEEE = private unnamed_addr constant [23 x i8] c"getDescriptorSetLayout\00", align 1
@_ZTVN2rx19PipelineLayoutCacheE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::PipelineLayoutCache"*)* @_ZN2rx19PipelineLayoutCacheD2Ev to i8*), i8* bitcast (void (%"class.rx::PipelineLayoutCache"*)* @_ZN2rx19PipelineLayoutCacheD0Ev to i8*)] }, align 8
@__func__._ZN2rx19PipelineLayoutCache17getPipelineLayoutEPNS_2vk7ContextERKNS1_18PipelineLayoutDescERKN5angle13PackedEnumMapINS_18DescriptorSetIndexENS1_14BindingPointerINS1_19DescriptorSetLayoutEEELm4EEEPNSA_INS1_14PipelineLayoutEEE = private unnamed_addr constant [18 x i8] c"getPipelineLayout\00", align 1
@_ZTVN2rx27SamplerYcbcrConversionCacheE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::SamplerYcbcrConversionCache"*)* @_ZN2rx27SamplerYcbcrConversionCacheD2Ev to i8*), i8* bitcast (void (%"class.rx::SamplerYcbcrConversionCache"*)* @_ZN2rx27SamplerYcbcrConversionCacheD0Ev to i8*)] }, align 8
@__func__._ZN2rx27SamplerYcbcrConversionCache16getYuvConversionEPNS_2vk7ContextEmRK34VkSamplerYcbcrConversionCreateInfoPNS1_14BindingPointerINS1_22SamplerYcbcrConversionEEE = private unnamed_addr constant [17 x i8] c"getYuvConversion\00", align 1
@_ZTVN2rx12SamplerCacheE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::SamplerCache"*)* @_ZN2rx12SamplerCacheD2Ev to i8*), i8* bitcast (void (%"class.rx::SamplerCache"*)* @_ZN2rx12SamplerCacheD0Ev to i8*)] }, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@_ZN5angle16gFormatInfoTableE = external global [0 x %"struct.angle::Format"], align 8
@vkCreateGraphicsPipelines = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, align 8
@vkDestroyPipeline = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkCreateSampler = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, align 8
@vkDestroyRenderPass = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, align 8
@__const._ZN2rx2vk12_GLOBAL__N_128InitializeRenderPassFromDescEPNS_9ContextVkERKNS0_14RenderPassDescERKNS0_18AttachmentOpsArrayEPNS0_16RenderPassHelperE.depthStencilResolveAttachmentRef = private unnamed_addr constant { i32, [4 x i8], i8*, i32, i32, i32, [4 x i8] } { i32 1000109001, [4 x i8] zeroinitializer, i8* null, i32 -1, i32 0, i32 0, [4 x i8] zeroinitializer }, align 8
@__func__._ZN2rx2vk12_GLOBAL__N_128InitializeRenderPassFromDescEPNS_9ContextVkERKNS0_14RenderPassDescERKNS0_18AttachmentOpsArrayEPNS0_16RenderPassHelperE = private unnamed_addr constant [29 x i8] c"InitializeRenderPassFromDesc\00", align 1
@__func__._ZN2rx2vk12_GLOBAL__N_117CreateRenderPass2EPNS0_7ContextERK22VkRenderPassCreateInfoRK39VkSubpassDescriptionDepthStencilResolvebbbhPNS0_10RenderPassE = private unnamed_addr constant [18 x i8] c"CreateRenderPass2\00", align 1
@vkCreateRenderPass2KHR = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, align 8
@vkCreateRenderPass = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, align 8
@vkDestroyDescriptorSetLayout = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkCreateDescriptorSetLayout = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, align 8
@vkDestroyPipelineLayout = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkCreatePipelineLayout = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, align 8
@vkDestroySamplerYcbcrConversionKHR = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkCreateSamplerYcbcrConversionKHR = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)*, align 8
@vkDestroySampler = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@switch.table._ZNK2rx2vk20GraphicsPipelineDesc18initializePipelineEPNS_9ContextVkERKNS0_13PipelineCacheERKNS0_10RenderPassERKNS0_14PipelineLayoutERKN5angle7BitSetTILm16EmmEERKNSE_ILm32EmmEEPKNS0_12ShaderModuleESN_SN_SN_SN_RKNS0_23SpecializationConstantsEPNS0_8PipelineE = private unnamed_addr constant [6 x i32] [i32 1, i32 2, i32 1, i32 2, i32 1, i32 2], align 4
@switch.table._ZN2rx2vk20GraphicsPipelineDesc20updateBlendEquationsEPN5angle7BitSetTILm63EmmEERKN2gl13BlendStateExtE = private unnamed_addr constant [5 x i32] [i32 3072, i32 4096, i32 0, i32 1024, i32 2048], align 4
@switch.table._ZN2rx2vk20GraphicsPipelineDesc20updateBlendEquationsEPN5angle7BitSetTILm63EmmEERKN2gl13BlendStateExtE.4 = private unnamed_addr constant [5 x i32] [i32 201326592, i32 268435456, i32 0, i32 67108864, i32 134217728], align 4

@_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.rx::DescriptorSetCache"*), void (%"class.rx::DescriptorSetCache"*)* @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED2Ev
@_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.rx::DescriptorSetCache.973"*), void (%"class.rx::DescriptorSetCache.973"*)* @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED2Ev
@_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.rx::DescriptorSetCache.996"*), void (%"class.rx::DescriptorSetCache.996"*)* @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED2Ev
@_ZN2rx2vk14RenderPassDescC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::RenderPassDesc"*), void (%"class.rx::vk::RenderPassDesc"*)* @_ZN2rx2vk14RenderPassDescC2Ev
@_ZN2rx2vk14RenderPassDescD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::RenderPassDesc"*), void (%"class.rx::vk::RenderPassDesc"*)* @_ZN2rx2vk14RenderPassDescD2Ev
@_ZN2rx2vk14RenderPassDescC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::RenderPassDesc"*, %"class.rx::vk::RenderPassDesc"*), void (%"class.rx::vk::RenderPassDesc"*, %"class.rx::vk::RenderPassDesc"*)* @_ZN2rx2vk14RenderPassDescC2ERKS1_
@_ZN2rx2vk20GraphicsPipelineDescC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::GraphicsPipelineDesc"*), void (%"class.rx::vk::GraphicsPipelineDesc"*)* @_ZN2rx2vk20GraphicsPipelineDescC2Ev
@_ZN2rx2vk20GraphicsPipelineDescD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::GraphicsPipelineDesc"*), void (%"class.rx::vk::GraphicsPipelineDesc"*)* @_ZN2rx2vk20GraphicsPipelineDescD2Ev
@_ZN2rx2vk20GraphicsPipelineDescC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::GraphicsPipelineDesc"*), void (%"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::GraphicsPipelineDesc"*)* @_ZN2rx2vk20GraphicsPipelineDescC2ERKS1_
@_ZN2rx2vk18AttachmentOpsArrayC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::AttachmentOpsArray"*), void (%"class.rx::vk::AttachmentOpsArray"*)* @_ZN2rx2vk18AttachmentOpsArrayC2Ev
@_ZN2rx2vk18AttachmentOpsArrayD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::AttachmentOpsArray"*), void (%"class.rx::vk::AttachmentOpsArray"*)* @_ZN2rx2vk18AttachmentOpsArrayD2Ev
@_ZN2rx2vk18AttachmentOpsArrayC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::AttachmentOpsArray"*, %"class.rx::vk::AttachmentOpsArray"*), void (%"class.rx::vk::AttachmentOpsArray"*, %"class.rx::vk::AttachmentOpsArray"*)* @_ZN2rx2vk18AttachmentOpsArrayC2ERKS1_
@_ZN2rx2vk23DescriptorSetLayoutDescC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::DescriptorSetLayoutDesc"*), void (%"class.rx::vk::DescriptorSetLayoutDesc"*)* @_ZN2rx2vk23DescriptorSetLayoutDescC2Ev
@_ZN2rx2vk23DescriptorSetLayoutDescD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::DescriptorSetLayoutDesc"*), void (%"class.rx::vk::DescriptorSetLayoutDesc"*)* @_ZN2rx2vk23DescriptorSetLayoutDescD2Ev
@_ZN2rx2vk23DescriptorSetLayoutDescC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::DescriptorSetLayoutDesc"*, %"class.rx::vk::DescriptorSetLayoutDesc"*), void (%"class.rx::vk::DescriptorSetLayoutDesc"*, %"class.rx::vk::DescriptorSetLayoutDesc"*)* @_ZN2rx2vk23DescriptorSetLayoutDescC2ERKS1_
@_ZN2rx2vk18PipelineLayoutDescC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::PipelineLayoutDesc"*), void (%"class.rx::vk::PipelineLayoutDesc"*)* @_ZN2rx2vk18PipelineLayoutDescC2Ev
@_ZN2rx2vk18PipelineLayoutDescD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::PipelineLayoutDesc"*), void (%"class.rx::vk::PipelineLayoutDesc"*)* @_ZN2rx2vk18PipelineLayoutDescD2Ev
@_ZN2rx2vk18PipelineLayoutDescC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::PipelineLayoutDesc"*, %"class.rx::vk::PipelineLayoutDesc"*), void (%"class.rx::vk::PipelineLayoutDesc"*, %"class.rx::vk::PipelineLayoutDesc"*)* @_ZN2rx2vk18PipelineLayoutDescC2ERKS1_
@_ZN2rx2vk14PipelineHelperC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::PipelineHelper"*), void (%"class.rx::vk::PipelineHelper"*)* @_ZN2rx2vk14PipelineHelperC2Ev
@_ZN2rx2vk14PipelineHelperD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::PipelineHelper"*), void (%"class.rx::vk::PipelineHelper"*)* @_ZN2rx2vk14PipelineHelperD2Ev
@_ZN2rx2vk21TextureDescriptorDescC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::TextureDescriptorDesc"*), void (%"class.rx::vk::TextureDescriptorDesc"*)* @_ZN2rx2vk21TextureDescriptorDescC2Ev
@_ZN2rx2vk21TextureDescriptorDescD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::TextureDescriptorDesc"*), void (%"class.rx::vk::TextureDescriptorDesc"*)* @_ZN2rx2vk21TextureDescriptorDescD2Ev
@_ZN2rx2vk21TextureDescriptorDescC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::TextureDescriptorDesc"*, %"class.rx::vk::TextureDescriptorDesc"*), void (%"class.rx::vk::TextureDescriptorDesc"*, %"class.rx::vk::TextureDescriptorDesc"*)* @_ZN2rx2vk21TextureDescriptorDescC2ERKS1_
@_ZN2rx2vk28UniformsAndXfbDescriptorDescC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::UniformsAndXfbDescriptorDesc"*), void (%"class.rx::vk::UniformsAndXfbDescriptorDesc"*)* @_ZN2rx2vk28UniformsAndXfbDescriptorDescC2Ev
@_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::UniformsAndXfbDescriptorDesc"*), void (%"class.rx::vk::UniformsAndXfbDescriptorDesc"*)* @_ZN2rx2vk28UniformsAndXfbDescriptorDescD2Ev
@_ZN2rx2vk28UniformsAndXfbDescriptorDescC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::UniformsAndXfbDescriptorDesc"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"*), void (%"class.rx::vk::UniformsAndXfbDescriptorDesc"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"*)* @_ZN2rx2vk28UniformsAndXfbDescriptorDescC2ERKS1_
@_ZN2rx2vk27ShaderBuffersDescriptorDescC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::ShaderBuffersDescriptorDesc"*), void (%"class.rx::vk::ShaderBuffersDescriptorDesc"*)* @_ZN2rx2vk27ShaderBuffersDescriptorDescC2Ev
@_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::ShaderBuffersDescriptorDesc"*), void (%"class.rx::vk::ShaderBuffersDescriptorDesc"*)* @_ZN2rx2vk27ShaderBuffersDescriptorDescD2Ev
@_ZN2rx2vk27ShaderBuffersDescriptorDescC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::ShaderBuffersDescriptorDesc"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"*), void (%"class.rx::vk::ShaderBuffersDescriptorDesc"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"*)* @_ZN2rx2vk27ShaderBuffersDescriptorDescC2ERKS1_
@_ZN2rx2vk15FramebufferDescC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::FramebufferDesc"*), void (%"class.rx::vk::FramebufferDesc"*)* @_ZN2rx2vk15FramebufferDescC2Ev
@_ZN2rx2vk15FramebufferDescD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::FramebufferDesc"*), void (%"class.rx::vk::FramebufferDesc"*)* @_ZN2rx2vk15FramebufferDescD2Ev
@_ZN2rx2vk15FramebufferDescC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::FramebufferDesc"*, %"class.rx::vk::FramebufferDesc"*), void (%"class.rx::vk::FramebufferDesc"*, %"class.rx::vk::FramebufferDesc"*)* @_ZN2rx2vk15FramebufferDescC2ERKS1_
@_ZN2rx2vk11SamplerDescC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::SamplerDesc"*), void (%"class.rx::vk::SamplerDesc"*)* @_ZN2rx2vk11SamplerDescC2Ev
@_ZN2rx2vk11SamplerDescD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::SamplerDesc"*), void (%"class.rx::vk::SamplerDesc"*)* @_ZN2rx2vk11SamplerDescD2Ev
@_ZN2rx2vk11SamplerDescC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::SamplerDesc"*, %"class.rx::vk::SamplerDesc"*), void (%"class.rx::vk::SamplerDesc"*, %"class.rx::vk::SamplerDesc"*)* @_ZN2rx2vk11SamplerDescC2ERKS1_
@_ZN2rx2vk11SamplerDescC1ERKN5angle10FeaturesVkERKN2gl12SamplerStateEbm = hidden unnamed_addr alias void (%"class.rx::vk::SamplerDesc"*, %"struct.angle::FeaturesVk"*, %"class.gl::SamplerState"*, i1, i64), void (%"class.rx::vk::SamplerDesc"*, %"struct.angle::FeaturesVk"*, %"class.gl::SamplerState"*, i1, i64)* @_ZN2rx2vk11SamplerDescC2ERKN5angle10FeaturesVkERKN2gl12SamplerStateEbm
@_ZN2rx2vk13SamplerHelperC1EPNS_9ContextVkE = hidden unnamed_addr alias void (%"class.rx::vk::SamplerHelper"*, %"class.rx::ContextVk"*), void (%"class.rx::vk::SamplerHelper"*, %"class.rx::ContextVk"*)* @_ZN2rx2vk13SamplerHelperC2EPNS_9ContextVkE
@_ZN2rx2vk13SamplerHelperD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::SamplerHelper"*), void (%"class.rx::vk::SamplerHelper"*)* @_ZN2rx2vk13SamplerHelperD2Ev
@_ZN2rx2vk13SamplerHelperC1EOS1_ = hidden unnamed_addr alias void (%"class.rx::vk::SamplerHelper"*, %"class.rx::vk::SamplerHelper"*), void (%"class.rx::vk::SamplerHelper"*, %"class.rx::vk::SamplerHelper"*)* @_ZN2rx2vk13SamplerHelperC2EOS1_
@_ZN2rx2vk16RenderPassHelperC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::RenderPassHelper"*), void (%"class.rx::vk::RenderPassHelper"*)* @_ZN2rx2vk16RenderPassHelperC2Ev
@_ZN2rx2vk16RenderPassHelperD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::RenderPassHelper"*), void (%"class.rx::vk::RenderPassHelper"*)* @_ZN2rx2vk16RenderPassHelperD2Ev
@_ZN2rx2vk16RenderPassHelperC1EOS1_ = hidden unnamed_addr alias void (%"class.rx::vk::RenderPassHelper"*, %"class.rx::vk::RenderPassHelper"*), void (%"class.rx::vk::RenderPassHelper"*, %"class.rx::vk::RenderPassHelper"*)* @_ZN2rx2vk16RenderPassHelperC2EOS1_
@_ZN2rx15RenderPassCacheC1Ev = hidden unnamed_addr alias void (%"class.rx::RenderPassCache"*), void (%"class.rx::RenderPassCache"*)* @_ZN2rx15RenderPassCacheC2Ev
@_ZN2rx15RenderPassCacheD1Ev = hidden unnamed_addr alias void (%"class.rx::RenderPassCache"*), void (%"class.rx::RenderPassCache"*)* @_ZN2rx15RenderPassCacheD2Ev
@_ZN2rx21GraphicsPipelineCacheC1Ev = hidden unnamed_addr alias void (%"class.rx::GraphicsPipelineCache"*), void (%"class.rx::GraphicsPipelineCache"*)* @_ZN2rx21GraphicsPipelineCacheC2Ev
@_ZN2rx21GraphicsPipelineCacheD1Ev = hidden unnamed_addr alias void (%"class.rx::GraphicsPipelineCache"*), void (%"class.rx::GraphicsPipelineCache"*)* @_ZN2rx21GraphicsPipelineCacheD2Ev
@_ZN2rx24DescriptorSetLayoutCacheC1Ev = hidden unnamed_addr alias void (%"class.rx::DescriptorSetLayoutCache"*), void (%"class.rx::DescriptorSetLayoutCache"*)* @_ZN2rx24DescriptorSetLayoutCacheC2Ev
@_ZN2rx24DescriptorSetLayoutCacheD1Ev = hidden unnamed_addr alias void (%"class.rx::DescriptorSetLayoutCache"*), void (%"class.rx::DescriptorSetLayoutCache"*)* @_ZN2rx24DescriptorSetLayoutCacheD2Ev
@_ZN2rx19PipelineLayoutCacheC1Ev = hidden unnamed_addr alias void (%"class.rx::PipelineLayoutCache"*), void (%"class.rx::PipelineLayoutCache"*)* @_ZN2rx19PipelineLayoutCacheC2Ev
@_ZN2rx19PipelineLayoutCacheD1Ev = hidden unnamed_addr alias void (%"class.rx::PipelineLayoutCache"*), void (%"class.rx::PipelineLayoutCache"*)* @_ZN2rx19PipelineLayoutCacheD2Ev
@_ZN2rx27SamplerYcbcrConversionCacheC1Ev = hidden unnamed_addr alias void (%"class.rx::SamplerYcbcrConversionCache"*), void (%"class.rx::SamplerYcbcrConversionCache"*)* @_ZN2rx27SamplerYcbcrConversionCacheC2Ev
@_ZN2rx27SamplerYcbcrConversionCacheD1Ev = hidden unnamed_addr alias void (%"class.rx::SamplerYcbcrConversionCache"*), void (%"class.rx::SamplerYcbcrConversionCache"*)* @_ZN2rx27SamplerYcbcrConversionCacheD2Ev
@_ZN2rx12SamplerCacheC1Ev = hidden unnamed_addr alias void (%"class.rx::SamplerCache"*), void (%"class.rx::SamplerCache"*)* @_ZN2rx12SamplerCacheC2Ev
@_ZN2rx12SamplerCacheD1Ev = hidden unnamed_addr alias void (%"class.rx::SamplerCache"*), void (%"class.rx::SamplerCache"*)* @_ZN2rx12SamplerCacheD2Ev

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED2Ev(%"class.rx::DescriptorSetCache"*) unnamed_addr #2 comdat($_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type.647"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #17
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED0Ev(%"class.rx::DescriptorSetCache"*) unnamed_addr #2 comdat($_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #21
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.rx::DescriptorSetCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache"*, %"class.rx::RendererVk"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 8, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 8, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  store i64 %13, i64* %11, align 8
  %14 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #17
  %15 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, 127
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %15, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %21, align 8
  %23 = bitcast %"union.absl::container_internal::map_slot_type.647"** %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #17
  br label %40

24:                                               ; preds = %2
  %25 = icmp eq i64 %17, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %15, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = add nuw nsw i64 %17, 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 -128, i64 %30, i1 false) #17
  %31 = load i8*, i8** %28, align 8
  %32 = load i64, i64* %16, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8 -1, i8* %33, align 1
  %34 = load i64, i64* %16, align 8
  %35 = lshr i64 %34, 3
  %36 = sub i64 %34, %35
  %37 = load i64, i64* %27, align 8
  %38 = sub i64 %36, %37
  %39 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %38, i64* %39, align 8
  br label %40

40:                                               ; preds = %19, %24, %26
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EE3getERKS2_PP17VkDescriptorSet_T(%"class.rx::DescriptorSetCache"*, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156), %struct.VkDescriptorSet_T**) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = tail call { i8*, %"union.absl::container_internal::map_slot_type.647"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.646"* %4, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %1)
  %6 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.647"* } %5, 0
  %7 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.647"* } %5, 1
  %8 = icmp eq i8* %6, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = load i8, i8* %6, align 1
  %11 = icmp sgt i8 %10, -1
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %9
  tail call void @llvm.trap() #17
  unreachable

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %7, i64 0, i32 0, i32 1
  %15 = bitcast %struct.VkDescriptorSet_T** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %struct.VkDescriptorSet_T** %2 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 0, i32 1, i32 0
  br label %21

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 0, i32 1, i32 1
  br label %21

21:                                               ; preds = %19, %13
  %22 = phi i64* [ %20, %19 ], [ %18, %13 ]
  %23 = phi i1 [ false, %19 ], [ true, %13 ]
  %24 = load i64, i64* %22, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %22, align 8
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.647"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.646"*, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %1, i64 0, i32 1
  %5 = bitcast %"struct.std::__1::array.970"* %4 to i8*
  %6 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = mul nuw nsw i64 %8, 12
  %10 = tail call i64 @XXH64(i8* %5, i64 %9, i64 2882400152) #17
  %11 = add i64 %10, %3
  %12 = zext i64 %11 to i128
  %13 = mul nuw i128 %12, 11376068507788127593
  %14 = lshr i128 %13, 64
  %15 = xor i128 %14, %13
  %16 = trunc i128 %15 to i64
  %17 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %16, 7
  %22 = ptrtoint i8* %18 to i64
  %23 = lshr i64 %22, 12
  %24 = xor i64 %21, %23
  %25 = trunc i128 %15 to i8
  %26 = and i8 %25, 127
  %27 = insertelement <16 x i8> undef, i8 %26, i32 0
  %28 = shufflevector <16 x i8> %27, <16 x i8> undef, <16 x i32> zeroinitializer
  %29 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 1
  %30 = load i32, i32* %6, align 4
  %31 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %1, i64 0, i32 1, i32 0, i64 0
  %32 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %31 to i8*
  %33 = icmp eq i32 %30, 0
  %34 = zext i32 %30 to i64
  %35 = mul nuw nsw i64 %34, 12
  br label %36

36:                                               ; preds = %76, %2
  %37 = phi i64 [ %24, %2 ], [ %78, %76 ]
  %38 = phi i64 [ 0, %2 ], [ %77, %76 ]
  %39 = and i64 %37, %20
  %40 = getelementptr inbounds i8, i8* %18, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %28, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.647"*, %"union.absl::container_internal::map_slot_type.647"** %29, align 8
  br label %49

49:                                               ; preds = %65, %46
  %50 = phi i32 [ %47, %46 ], [ %67, %65 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #17, !range !3
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %20
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %48, i64 %54
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %30
  br i1 %58, label %59, label %65, !prof !4

59:                                               ; preds = %49
  br i1 %33, label %69, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %48, i64 %54, i32 0, i32 0, i32 1, i32 0, i64 0
  %62 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %61 to i8*
  %63 = tail call i32 @bcmp(i8* %62, i8* %32, i64 %35) #17
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65, !prof !2

65:                                               ; preds = %60, %49
  %66 = add i32 %50, -1
  %67 = and i32 %66, %50
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %49

69:                                               ; preds = %60, %59
  %70 = getelementptr inbounds i8, i8* %18, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #17
  br label %79

72:                                               ; preds = %65, %36
  %73 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %74 = bitcast <16 x i1> %73 to i16
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %79, !prof !5

76:                                               ; preds = %72
  %77 = add i64 %38, 16
  %78 = add i64 %77, %39
  br label %36

79:                                               ; preds = %72, %69
  %80 = phi %"union.absl::container_internal::map_slot_type.647"* [ %55, %69 ], [ undef, %72 ]
  %81 = phi i8* [ %70, %69 ], [ null, %72 ]
  %82 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.647"* } undef, i8* %81, 0
  %83 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.647"* } %82, %"union.absl::container_internal::map_slot_type.647"* %80, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.647"* } %83
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EE6insertERKS2_P17VkDescriptorSet_T(%"class.rx::DescriptorSetCache"*, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156), %struct.VkDescriptorSet_T*) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.646"* %4, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %1) #17, !noalias !6
  %6 = extractvalue { i64, i8 } %5, 0
  %7 = extractvalue { i64, i8 } %5, 1
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = ptrtoint %struct.VkDescriptorSet_T* %2 to i64
  %12 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"union.absl::container_internal::map_slot_type.647"*, %"union.absl::container_internal::map_slot_type.647"** %12, align 8, !noalias !6
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %13, i64 %6
  %15 = bitcast %"class.rx::vk::TextureDescriptorDesc"* %1 to i8*
  %16 = bitcast %"union.absl::container_internal::map_slot_type.647"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %15, i64 1156, i1 false) #17, !noalias !6
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %13, i64 %6, i32 0, i32 1
  %18 = bitcast %struct.VkDescriptorSet_T** %17 to i64*
  store i64 %11, i64* %18, align 8, !noalias !6
  br label %19

19:                                               ; preds = %3, %10
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !noalias !6
  %22 = getelementptr inbounds i8, i8* %21, i64 %6
  %23 = icmp ne i8* %22, null
  tail call void @llvm.assume(i1 %23) #17, !noalias !6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED2Ev(%"class.rx::DescriptorSetCache.973"*) unnamed_addr #2 comdat($_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type.978"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #17
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED0Ev(%"class.rx::DescriptorSetCache.973"*) unnamed_addr #2 comdat($_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #21
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.rx::DescriptorSetCache.973"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache.973"*, %"class.rx::RendererVk"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 9, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 9, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  store i64 %13, i64* %11, align 8
  %14 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #17
  %15 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, 127
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %15, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %21, align 8
  %23 = bitcast %"union.absl::container_internal::map_slot_type.978"** %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #17
  br label %40

24:                                               ; preds = %2
  %25 = icmp eq i64 %17, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %15, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = add nuw nsw i64 %17, 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 -128, i64 %30, i1 false) #17
  %31 = load i8*, i8** %28, align 8
  %32 = load i64, i64* %16, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8 -1, i8* %33, align 1
  %34 = load i64, i64* %16, align 8
  %35 = lshr i64 %34, 3
  %36 = sub i64 %34, %35
  %37 = load i64, i64* %27, align 8
  %38 = sub i64 %36, %37
  %39 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %38, i64* %39, align 8
  br label %40

40:                                               ; preds = %19, %24, %26
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EE3getERKS2_PP17VkDescriptorSet_T(%"class.rx::DescriptorSetCache.973"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40), %struct.VkDescriptorSet_T**) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %6 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 1
  %7 = bitcast %"struct.std::__1::array.990"* %6 to i8*
  %8 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = tail call i64 @XXH64(i8* %7, i64 %11, i64 2882400152) #17
  %13 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 2
  %14 = bitcast %"struct.std::__1::array.991"* %13 to i8*
  %15 = load i32, i32* %8, align 4
  %16 = zext i32 %15 to i64
  %17 = shl nuw nsw i64 %16, 2
  %18 = add nsw i64 %17, -4
  %19 = tail call i64 @XXH64(i8* %14, i64 %18, i64 2882400152) #17
  %20 = xor i64 %19, %12
  %21 = add i64 %20, %5
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = tail call { i8*, %"union.absl::container_internal::map_slot_type.978"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_m(%"class.absl::container_internal::raw_hash_set.977"* %4, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %1, i64 %26) #17
  %28 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.978"* } %27, 0
  %29 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.978"* } %27, 1
  %30 = icmp eq i8* %28, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %3
  %32 = load i8, i8* %28, align 1
  %33 = icmp sgt i8 %32, -1
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %31
  tail call void @llvm.trap() #17
  unreachable

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %29, i64 0, i32 0, i32 1
  %37 = bitcast %struct.VkDescriptorSet_T** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %struct.VkDescriptorSet_T** %2 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 0, i32 1, i32 0
  br label %43

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 0, i32 1, i32 1
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i64* [ %42, %41 ], [ %40, %35 ]
  %45 = phi i1 [ false, %41 ], [ true, %35 ]
  %46 = load i64, i64* %44, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %44, align 8
  ret i1 %45
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EE6insertERKS2_P17VkDescriptorSet_T(%"class.rx::DescriptorSetCache.973"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40), %struct.VkDescriptorSet_T*) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.977"* %4, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %1) #17, !noalias !19
  %6 = extractvalue { i64, i8 } %5, 0
  %7 = extractvalue { i64, i8 } %5, 1
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = ptrtoint %struct.VkDescriptorSet_T* %2 to i64
  %12 = getelementptr inbounds %"class.rx::DescriptorSetCache.973", %"class.rx::DescriptorSetCache.973"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"union.absl::container_internal::map_slot_type.978"*, %"union.absl::container_internal::map_slot_type.978"** %12, align 8, !noalias !19
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %13, i64 %6
  %15 = bitcast %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1 to i8*
  %16 = bitcast %"union.absl::container_internal::map_slot_type.978"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %15, i64 40, i1 false) #17, !noalias !19
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %13, i64 %6, i32 0, i32 1
  %18 = bitcast %struct.VkDescriptorSet_T** %17 to i64*
  store i64 %11, i64* %18, align 8, !noalias !19
  br label %19

19:                                               ; preds = %3, %10
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !noalias !19
  %22 = getelementptr inbounds i8, i8* %21, i64 %6
  %23 = icmp ne i8* %22, null
  tail call void @llvm.assume(i1 %23) #17, !noalias !19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED2Ev(%"class.rx::DescriptorSetCache.996"*) unnamed_addr #2 comdat($_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %12

9:                                                ; preds = %29
  %10 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %10) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %7, align 8
  %11 = bitcast %"union.absl::container_internal::map_slot_type.1001"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #17
  br label %33

12:                                               ; preds = %29, %6
  %13 = phi i64 [ 0, %6 ], [ %30, %29 ]
  %14 = load i8*, i8** %7, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = load i8, i8* %15, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %18, label %29

18:                                               ; preds = %12
  %19 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %8, align 8
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %19, i64 %13, i32 0, i32 0, i32 0, i32 2
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %19, i64 %13, i32 0, i32 0, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %19, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %24 = icmp eq i32* %22, %23
  %25 = icmp eq i32* %22, null
  %26 = or i1 %24, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  %28 = bitcast i32* %22 to i8*
  tail call void @_ZdaPv(i8* %28) #21
  br label %29

29:                                               ; preds = %27, %18, %12
  %30 = add i64 %13, 1
  %31 = load i64, i64* %3, align 8
  %32 = icmp eq i64 %30, %31
  br i1 %32, label %9, label %12

33:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED0Ev(%"class.rx::DescriptorSetCache.996"*) unnamed_addr #2 comdat($_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %32, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %11

9:                                                ; preds = %28
  %10 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %10) #21
  br label %32

11:                                               ; preds = %28, %6
  %12 = phi i64 [ 0, %6 ], [ %29, %28 ]
  %13 = load i8*, i8** %7, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = load i8, i8* %14, align 1
  %16 = icmp sgt i8 %15, -1
  br i1 %16, label %17, label %28

17:                                               ; preds = %11
  %18 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %8, align 8
  %19 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %18, i64 %12, i32 0, i32 0, i32 0, i32 2
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %18, i64 %12, i32 0, i32 0, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %18, i64 %12, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %23 = icmp eq i32* %21, %22
  %24 = icmp eq i32* %21, null
  %25 = or i1 %23, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  %27 = bitcast i32* %21 to i8*
  tail call void @_ZdaPv(i8* %27) #21
  br label %28

28:                                               ; preds = %26, %17, %11
  %29 = add i64 %12, 1
  %30 = load i64, i64* %3, align 8
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %9, label %11

32:                                               ; preds = %1, %9
  %33 = bitcast %"class.rx::DescriptorSetCache.996"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache.996"*, %"class.rx::RendererVk"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 10, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 10, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  store i64 %13, i64* %11, align 8
  %14 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #17
  %15 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.1000"* %15)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.1000"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 127
  br i1 %4, label %5, label %32

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %25, %5
  %9 = phi i64 [ 0, %5 ], [ %26, %25 ]
  %10 = load i8*, i8** %6, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %9
  %12 = load i8, i8* %11, align 1
  %13 = icmp sgt i8 %12, -1
  br i1 %13, label %14, label %25

14:                                               ; preds = %8
  %15 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %7, align 8
  %16 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %15, i64 %9, i32 0, i32 0, i32 0, i32 2
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %15, i64 %9, i32 0, i32 0, i32 0, i32 1
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %15, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %20 = icmp eq i32* %18, %19
  %21 = icmp eq i32* %18, null
  %22 = or i1 %20, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %14
  %24 = bitcast i32* %18 to i8*
  tail call void @_ZdaPv(i8* %24) #21
  br label %25

25:                                               ; preds = %23, %14, %8
  %26 = add i64 %9, 1
  %27 = load i64, i64* %2, align 8
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %29, label %8

29:                                               ; preds = %25
  %30 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %30) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %31 = bitcast %"union.absl::container_internal::map_slot_type.1001"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #17
  br label %72

32:                                               ; preds = %1
  %33 = icmp eq i64 %3, 0
  br i1 %33, label %72, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 0
  %36 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 1
  br label %51

37:                                               ; preds = %68
  %38 = add i64 %52, 17
  %39 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 2
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 -128, i64 %38, i1 false) #17
  %42 = load i8*, i8** %40, align 8
  %43 = load i64, i64* %2, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  store i8 -1, i8* %44, align 1
  %45 = load i64, i64* %2, align 8
  %46 = lshr i64 %45, 3
  %47 = sub i64 %45, %46
  %48 = load i64, i64* %39, align 8
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %49, i64* %50, align 8
  br label %72

51:                                               ; preds = %34, %68
  %52 = phi i64 [ 0, %34 ], [ %69, %68 ]
  %53 = load i8*, i8** %35, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  %55 = load i8, i8* %54, align 1
  %56 = icmp sgt i8 %55, -1
  br i1 %56, label %57, label %68

57:                                               ; preds = %51
  %58 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %36, align 8
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %58, i64 %52, i32 0, i32 0, i32 0, i32 2
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %58, i64 %52, i32 0, i32 0, i32 0, i32 1
  %61 = load i32*, i32** %60, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %58, i64 %52, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %63 = icmp eq i32* %61, %62
  %64 = icmp eq i32* %61, null
  %65 = or i1 %63, %64
  br i1 %65, label %68, label %66

66:                                               ; preds = %57
  %67 = bitcast i32* %61 to i8*
  tail call void @_ZdaPv(i8* %67) #21
  br label %68

68:                                               ; preds = %66, %57, %51
  %69 = add i64 %52, 1
  %70 = load i64, i64* %2, align 8
  %71 = icmp eq i64 %69, %70
  br i1 %71, label %37, label %51

72:                                               ; preds = %32, %37, %29
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EE3getERKS2_PP17VkDescriptorSet_T(%"class.rx::DescriptorSetCache.996"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152), %struct.VkDescriptorSet_T**) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = tail call { i8*, %"union.absl::container_internal::map_slot_type.1001"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.1000"* %4, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %1)
  %6 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.1001"* } %5, 0
  %7 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.1001"* } %5, 1
  %8 = icmp eq i8* %6, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = load i8, i8* %6, align 1
  %11 = icmp sgt i8 %10, -1
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %9
  tail call void @llvm.trap() #17
  unreachable

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %7, i64 0, i32 0, i32 1
  %15 = bitcast %struct.VkDescriptorSet_T** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %struct.VkDescriptorSet_T** %2 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 0, i32 1, i32 0
  br label %21

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 0, i32 1, i32 1
  br label %21

21:                                               ; preds = %19, %13
  %22 = phi i64* [ %20, %19 ], [ %18, %13 ]
  %23 = phi i1 [ false, %19 ], [ true, %13 ]
  %24 = load i64, i64* %22, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %22, align 8
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.1001"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.1000"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = shl i64 %8, 2
  %10 = tail call i64 @XXH64(i8* %6, i64 %9, i64 2882400152) #17
  %11 = add i64 %10, %3
  %12 = zext i64 %11 to i128
  %13 = mul nuw i128 %12, 11376068507788127593
  %14 = lshr i128 %13, 64
  %15 = xor i128 %14, %13
  %16 = trunc i128 %15 to i64
  %17 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %16, 7
  %22 = ptrtoint i8* %18 to i64
  %23 = lshr i64 %22, 12
  %24 = xor i64 %21, %23
  %25 = trunc i128 %15 to i8
  %26 = and i8 %25, 127
  %27 = insertelement <16 x i8> undef, i8 %26, i32 0
  %28 = shufflevector <16 x i8> %27, <16 x i8> undef, <16 x i32> zeroinitializer
  %29 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 1
  %30 = load i64, i64* %7, align 8
  %31 = load i32*, i32** %4, align 8
  %32 = icmp eq i64 %30, 0
  br label %33

33:                                               ; preds = %81, %2
  %34 = phi i64 [ %24, %2 ], [ %83, %81 ]
  %35 = phi i64 [ 0, %2 ], [ %82, %81 ]
  %36 = and i64 %34, %20
  %37 = getelementptr inbounds i8, i8* %18, i64 %36
  %38 = bitcast i8* %37 to <16 x i8>*
  %39 = load <16 x i8>, <16 x i8>* %38, align 1
  %40 = icmp eq <16 x i8> %28, %39
  %41 = bitcast <16 x i1> %40 to i16
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %77, label %43

43:                                               ; preds = %33
  %44 = zext i16 %41 to i32
  %45 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %29, align 8
  br label %46

46:                                               ; preds = %69, %43
  %47 = phi i32 [ %44, %43 ], [ %71, %69 ]
  %48 = tail call i32 @llvm.cttz.i32(i32 %47, i1 false) #17, !range !3
  %49 = zext i32 %48 to i64
  %50 = add i64 %36, %49
  %51 = and i64 %50, %20
  %52 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %45, i64 %51, i32 0, i32 0, i32 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %69, !prof !4

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %45, i64 %51, i32 0, i32 0, i32 0, i32 1
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 %30
  br i1 %32, label %73, label %59

59:                                               ; preds = %55, %65
  %60 = phi i32* [ %67, %65 ], [ %31, %55 ]
  %61 = phi i32* [ %66, %65 ], [ %57, %55 ]
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %60, align 4
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %65, label %69, !prof !4

65:                                               ; preds = %59
  %66 = getelementptr inbounds i32, i32* %61, i64 1
  %67 = getelementptr inbounds i32, i32* %60, i64 1
  %68 = icmp eq i32* %66, %58
  br i1 %68, label %73, label %59

69:                                               ; preds = %59, %46
  %70 = add i32 %47, -1
  %71 = and i32 %70, %47
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %46

73:                                               ; preds = %55, %65
  %74 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %45, i64 %51
  %75 = getelementptr inbounds i8, i8* %18, i64 %51
  %76 = icmp ne i8* %75, null
  tail call void @llvm.assume(i1 %76) #17
  br label %84

77:                                               ; preds = %69, %33
  %78 = icmp eq <16 x i8> %39, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %79 = bitcast <16 x i1> %78 to i16
  %80 = icmp eq i16 %79, 0
  br i1 %80, label %81, label %84, !prof !5

81:                                               ; preds = %77
  %82 = add i64 %35, 16
  %83 = add i64 %82, %36
  br label %33

84:                                               ; preds = %77, %73
  %85 = phi %"union.absl::container_internal::map_slot_type.1001"* [ %74, %73 ], [ undef, %77 ]
  %86 = phi i8* [ %75, %73 ], [ null, %77 ]
  %87 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.1001"* } undef, i8* %86, 0
  %88 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.1001"* } %87, %"union.absl::container_internal::map_slot_type.1001"* %85, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.1001"* } %88
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EE6insertERKS2_P17VkDescriptorSet_T(%"class.rx::DescriptorSetCache.996"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152), %struct.VkDescriptorSet_T*) local_unnamed_addr #4 comdat align 2 {
  %4 = ptrtoint %struct.VkDescriptorSet_T* %2 to i64
  %5 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.1000"* %5, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %1) #17, !noalias !32
  %7 = extractvalue { i64, i8 } %6, 0
  %8 = extractvalue { i64, i8 } %6, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %49, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.rx::DescriptorSetCache.996", %"class.rx::DescriptorSetCache.996"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %12, align 8, !noalias !32
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %13, i64 %7
  %15 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %13, i64 %7, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  store i32* %16, i32** %15, align 8, !noalias !32
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %13, i64 %7, i32 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %13, i64 %7, i32 0, i32 0, i32 0, i32 3
  %19 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %19, align 8, !noalias !32
  %20 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 2
  %21 = load i64, i64* %20, align 8, !noalias !32
  %22 = icmp ugt i64 %21, 32
  %23 = bitcast %"union.absl::container_internal::map_slot_type.1001"* %14 to i8*
  br i1 %22, label %24, label %36

24:                                               ; preds = %11, %24
  %25 = phi i64 [ %27, %24 ], [ 32, %11 ]
  %26 = icmp ult i64 %25, %21
  %27 = shl i64 %25, 1
  br i1 %26, label %24, label %28

28:                                               ; preds = %24
  %29 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %25, i64 4) #17
  %30 = extractvalue { i64, i1 } %29, 1
  %31 = extractvalue { i64, i1 } %29, 0
  %32 = select i1 %30, i64 -1, i64 %31
  %33 = tail call i8* @_Znam(i64 %32) #21, !noalias !32
  %34 = bitcast i32** %15 to i8**
  store i8* %33, i8** %34, align 8, !noalias !32
  store i64 %25, i64* %18, align 8, !noalias !32
  %35 = load i64, i64* %20, align 8, !noalias !32
  br label %36

36:                                               ; preds = %28, %11
  %37 = phi i8* [ %23, %11 ], [ %33, %28 ]
  %38 = phi i64 [ %21, %11 ], [ %35, %28 ]
  store i64 %38, i64* %17, align 8, !noalias !32
  %39 = load i64, i64* %20, align 8, !noalias !32
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = shl nuw i64 %39, 2
  %43 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 1
  %44 = bitcast i32** %43 to i8**
  %45 = load i8*, i8** %44, align 8, !noalias !32
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %45, i64 %42, i1 false) #17, !noalias !32
  br label %46

46:                                               ; preds = %41, %36
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %13, i64 %7, i32 0, i32 1
  %48 = bitcast %struct.VkDescriptorSet_T** %47 to i64*
  store i64 %4, i64* %48, align 8, !noalias !32
  br label %49

49:                                               ; preds = %3, %46
  %50 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %5, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8, !noalias !32
  %52 = getelementptr inbounds i8, i8* %51, i64 %7
  %53 = icmp ne i8* %52, null
  tail call void @llvm.assume(i1 %53) #17, !noalias !32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDescC2Ev(%"class.rx::vk::RenderPassDesc"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDescD2Ev(%"class.rx::vk::RenderPassDesc"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDescC2ERKS1_(%"class.rx::vk::RenderPassDesc"* nocapture, %"class.rx::vk::RenderPassDesc"* nocapture readonly dereferenceable(12)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 1, i32 0
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 2, i32 0
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 12, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc10setSamplesEi(%"class.rx::vk::RenderPassDesc"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = tail call i64 @_ZN2rx15PackSampleCountEi(i32 %1) #17
  %4 = trunc i64 %3 to i8
  %5 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %4, 7
  %8 = and i8 %6, -8
  %9 = or i8 %8, %7
  store i8 %9, i8* %5, align 4
  ret void
}

declare i64 @_ZN2rx15PackSampleCountEi(i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc23setFramebufferFetchModeEb(%"class.rx::vk::RenderPassDesc"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 4
  %6 = shl nuw i8 %3, 7
  %7 = and i8 %5, 127
  %8 = or i8 %7, %6
  store i8 %8, i8* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc21updateRenderToTextureEb(%"class.rx::vk::RenderPassDesc"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 8
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 127
  %6 = or i8 %4, -128
  %7 = select i1 %1, i8 %6, i8 %5
  store i8 %7, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc19packColorAttachmentEmN5angle8FormatIDE(%"class.rx::vk::RenderPassDesc"* nocapture, i64, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %1
  %5 = trunc i32 %2 to i8
  store i8 %5, i8* %4, align 1
  %6 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 4
  %8 = lshr i8 %7, 3
  %9 = and i8 %8, 15
  %10 = zext i8 %9 to i64
  %11 = add i64 %1, 1
  %12 = icmp ugt i64 %11, %10
  %13 = select i1 %12, i64 %11, i64 %10
  %14 = trunc i64 %13 to i8
  %15 = shl i8 %14, 3
  %16 = and i8 %15, 120
  %17 = and i8 %7, -121
  %18 = or i8 %16, %17
  store i8 %18, i8* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk14RenderPassDesc22packColorAttachmentGapEm(%"class.rx::vk::RenderPassDesc"* nocapture, i64) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %1
  store i8 0, i8* %3, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc26packDepthStencilAttachmentEN5angle8FormatIDE(%"class.rx::vk::RenderPassDesc"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 4
  %5 = lshr i8 %4, 3
  %6 = and i8 %5, 15
  %7 = zext i8 %6 to i64
  %8 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %7
  %9 = trunc i32 %1 to i8
  store i8 %9, i8* %8, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc26packColorResolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* nocapture, i64) local_unnamed_addr #8 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 1, %3
  %5 = trunc i32 %4 to i8
  %6 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = or i8 %7, %5
  store i8 %8, i8* %6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc28removeColorResolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* nocapture, i64) local_unnamed_addr #8 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 1, %3
  %5 = trunc i32 %4 to i8
  %6 = xor i8 %5, -1
  %7 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, %6
  store i8 %9, i8* %7, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc28packColorUnresolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* nocapture, i64) local_unnamed_addr #8 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 1, %3
  %5 = trunc i32 %4 to i8
  %6 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 2, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = or i8 %7, %5
  store i8 %8, i8* %6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc30removeColorUnresolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* nocapture, i64) local_unnamed_addr #8 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 1, %3
  %5 = trunc i32 %4 to i8
  %6 = xor i8 %5, -1
  %7 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 2, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, %6
  store i8 %9, i8* %7, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc33packDepthStencilResolveAttachmentEv(%"class.rx::vk::RenderPassDesc"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 8
  %3 = load i8, i8* %2, align 1
  %4 = or i8 %3, 64
  store i8 %4, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc35packDepthStencilUnresolveAttachmentEbb(%"class.rx::vk::RenderPassDesc"* nocapture, i1 zeroext, i1 zeroext) local_unnamed_addr #8 align 2 {
  br i1 %1, label %4, label %8

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 8
  %6 = load i8, i8* %5, align 1
  %7 = or i8 %6, 32
  store i8 %7, i8* %5, align 1
  br label %8

8:                                                ; preds = %4, %3
  br i1 %2, label %9, label %13

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 8
  %11 = load i8, i8* %10, align 1
  %12 = or i8 %11, 16
  store i8 %12, i8* %10, align 1
  br label %13

13:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc37removeDepthStencilUnresolveAttachmentEv(%"class.rx::vk::RenderPassDesc"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 8
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, -49
  store i8 %4, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(12) %"class.rx::vk::RenderPassDesc"* @_ZN2rx2vk14RenderPassDescaSERKS1_(%"class.rx::vk::RenderPassDesc"* returned, %"class.rx::vk::RenderPassDesc"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 12, i1 false)
  ret %"class.rx::vk::RenderPassDesc"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk14RenderPassDesc19setWriteControlModeEN2gl20SrgbWriteControlModeE(%"class.rx::vk::RenderPassDesc"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 8
  %5 = load i8, i8* %4, align 1
  %6 = or i8 %5, 8
  %7 = and i8 %5, -9
  %8 = select i1 %3, i8 %7, i8 %6
  store i8 %8, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk14RenderPassDesc4hashEv(%"class.rx::vk::RenderPassDesc"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %3 = tail call i64 @XXH64(i8* %2, i64 12, i64 2882400152) #17
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk14RenderPassDesc24isColorAttachmentEnabledEm(%"class.rx::vk::RenderPassDesc"* nocapture readonly, i64) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %1
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 4
  %7 = lshr i8 %6, 3
  %8 = and i8 %7, 15
  %9 = zext i8 %8 to i64
  %10 = icmp ugt i64 %9, %1
  %11 = and i8 %4, 7
  %12 = select i1 %10, i8 %4, i8 %11
  %13 = icmp ne i8 %12, 0
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk14RenderPassDesc25hasDepthStencilAttachmentEv(%"class.rx::vk::RenderPassDesc"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 4
  %4 = lshr i8 %3, 3
  %5 = and i8 %4, 15
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, 7
  %10 = icmp ne i8 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK2rx2vk14RenderPassDesc15attachmentCountEv(%"class.rx::vk::RenderPassDesc"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 4
  %4 = lshr i8 %3, 3
  %5 = and i8 %4, 15
  %6 = zext i8 %5 to i64
  %7 = icmp eq i8 %5, 0
  br i1 %7, label %31, label %8

8:                                                ; preds = %1
  %9 = add nsw i64 %6, -1
  %10 = and i64 %6, 3
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = sub nsw i64 %6, %10
  br label %51

14:                                               ; preds = %51, %8
  %15 = phi i64 [ undef, %8 ], [ %77, %51 ]
  %16 = phi i64 [ 0, %8 ], [ %77, %51 ]
  %17 = phi i64 [ 0, %8 ], [ %78, %51 ]
  %18 = icmp eq i64 %10, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %14, %19
  %20 = phi i64 [ %27, %19 ], [ %16, %14 ]
  %21 = phi i64 [ %28, %19 ], [ %17, %14 ]
  %22 = phi i64 [ %29, %19 ], [ %10, %14 ]
  %23 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp ne i8 %24, 0
  %26 = zext i1 %25 to i64
  %27 = add i64 %20, %26
  %28 = add nuw nsw i64 %21, 1
  %29 = add i64 %22, -1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %19, !llvm.loop !35

31:                                               ; preds = %14, %19, %1
  %32 = phi i64 [ 0, %1 ], [ %15, %14 ], [ %27, %19 ]
  %33 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %6
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, 7
  %36 = icmp ne i8 %35, 0
  %37 = zext i1 %36 to i64
  %38 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 8
  %39 = load i8, i8* %38, align 1
  %40 = lshr i8 %39, 6
  %41 = and i8 %40, 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = tail call i32 @llvm.ctpop.i32(i32 %45) #17, !range !3
  %47 = zext i32 %46 to i64
  %48 = add i64 %32, %37
  %49 = add i64 %48, %42
  %50 = add i64 %49, %47
  ret i64 %50

51:                                               ; preds = %51, %12
  %52 = phi i64 [ 0, %12 ], [ %77, %51 ]
  %53 = phi i64 [ 0, %12 ], [ %78, %51 ]
  %54 = phi i64 [ %13, %12 ], [ %79, %51 ]
  %55 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %53
  %56 = load i8, i8* %55, align 1
  %57 = icmp ne i8 %56, 0
  %58 = zext i1 %57 to i64
  %59 = add i64 %52, %58
  %60 = or i64 %53, 1
  %61 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = icmp ne i8 %62, 0
  %64 = zext i1 %63 to i64
  %65 = add i64 %59, %64
  %66 = or i64 %53, 2
  %67 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = icmp ne i8 %68, 0
  %70 = zext i1 %69 to i64
  %71 = add i64 %65, %70
  %72 = or i64 %53, 3
  %73 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 3, i32 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = icmp ne i8 %74, 0
  %76 = zext i1 %75 to i64
  %77 = add i64 %71, %76
  %78 = add nuw nsw i64 %53, 4
  %79 = add i64 %54, -4
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %14, label %51
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2rx2vkeqERKNS0_14RenderPassDescES3_(%"class.rx::vk::RenderPassDesc"* nocapture readonly dereferenceable(12), %"class.rx::vk::RenderPassDesc"* nocapture readonly dereferenceable(12)) local_unnamed_addr #11 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %1, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 12)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2rx2vk20GraphicsPipelineDescnwEm(i64) local_unnamed_addr #2 align 2 {
  %2 = tail call i8* @_ZN5angle12AlignedAllocEmm(i64 %0, i64 32) #17
  ret i8* %2
}

declare i8* @_ZN5angle12AlignedAllocEmm(i64, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDescdlEPv(i8*) local_unnamed_addr #2 align 2 {
  tail call void @_ZN5angle11AlignedFreeEPv(i8* %0) #17
  ret void
}

declare void @_ZN5angle11AlignedFreeEPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDescC2Ev(%"class.rx::vk::GraphicsPipelineDesc"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 252, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDescD2Ev(%"class.rx::vk::GraphicsPipelineDesc"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDescC2ERKS1_(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.rx::vk::GraphicsPipelineDesc"* nocapture readonly dereferenceable(252)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 1, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 12, i1 false) #17
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 252, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(252) %"class.rx::vk::GraphicsPipelineDesc"* @_ZN2rx2vk20GraphicsPipelineDescaSERKS1_(%"class.rx::vk::GraphicsPipelineDesc"* returned, %"class.rx::vk::GraphicsPipelineDesc"* nocapture readonly dereferenceable(252)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 252, i1 false)
  ret %"class.rx::vk::GraphicsPipelineDesc"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk20GraphicsPipelineDesc4hashEv(%"class.rx::vk::GraphicsPipelineDesc"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %3 = tail call i64 @XXH64(i8* %2, i64 252, i64 2882400152) #17
  ret i64 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk20GraphicsPipelineDesceqERKS1_(%"class.rx::vk::GraphicsPipelineDesc"* nocapture readonly, %"class.rx::vk::GraphicsPipelineDesc"* nocapture readonly dereferenceable(252)) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 252)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc12initDefaultsEPKNS_9ContextVkE(%"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::ContextVk"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = tail call i32 @_ZN2gl23GetCurrentValueFormatIDENS_16VertexAttribTypeE(i32 6) #17
  %4 = trunc i32 %3 to i8
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 3
  store i16 0, i16* %5, align 2
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  store i8 %4, i8* %7, align 2
  %8 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 2
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 1, i32 3
  store i16 0, i16* %9, align 2
  %10 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 1, i32 1
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 1, i32 0
  store i8 %4, i8* %11, align 2
  %12 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 1, i32 2
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 2, i32 3
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 2, i32 0
  store i8 %4, i8* %15, align 2
  %16 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 2, i32 2
  store i16 0, i16* %16, align 2
  %17 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 3, i32 3
  store i16 0, i16* %17, align 2
  %18 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 3, i32 1
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 3, i32 0
  store i8 %4, i8* %19, align 2
  %20 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 3, i32 2
  store i16 0, i16* %20, align 2
  %21 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 4, i32 3
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 4, i32 1
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 4, i32 0
  store i8 %4, i8* %23, align 2
  %24 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 4, i32 2
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 5, i32 3
  store i16 0, i16* %25, align 2
  %26 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 5, i32 1
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 5, i32 0
  store i8 %4, i8* %27, align 2
  %28 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 5, i32 2
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 6, i32 3
  store i16 0, i16* %29, align 2
  %30 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 6, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 6, i32 0
  store i8 %4, i8* %31, align 2
  %32 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 6, i32 2
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 7, i32 3
  store i16 0, i16* %33, align 2
  %34 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 7, i32 1
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 7, i32 0
  store i8 %4, i8* %35, align 2
  %36 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 7, i32 2
  store i16 0, i16* %36, align 2
  %37 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 8, i32 3
  store i16 0, i16* %37, align 2
  %38 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 8, i32 1
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 8, i32 0
  store i8 %4, i8* %39, align 2
  %40 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 8, i32 2
  store i16 0, i16* %40, align 2
  %41 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 9, i32 3
  store i16 0, i16* %41, align 2
  %42 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 9, i32 1
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 9, i32 0
  store i8 %4, i8* %43, align 2
  %44 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 9, i32 2
  store i16 0, i16* %44, align 2
  %45 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 10, i32 3
  store i16 0, i16* %45, align 2
  %46 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 10, i32 1
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 10, i32 0
  store i8 %4, i8* %47, align 2
  %48 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 10, i32 2
  store i16 0, i16* %48, align 2
  %49 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 11, i32 3
  store i16 0, i16* %49, align 2
  %50 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 11, i32 1
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 11, i32 0
  store i8 %4, i8* %51, align 2
  %52 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 11, i32 2
  store i16 0, i16* %52, align 2
  %53 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 12, i32 3
  store i16 0, i16* %53, align 2
  %54 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 12, i32 1
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 12, i32 0
  store i8 %4, i8* %55, align 2
  %56 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 12, i32 2
  store i16 0, i16* %56, align 2
  %57 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 13, i32 3
  store i16 0, i16* %57, align 2
  %58 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 13, i32 1
  store i8 0, i8* %58, align 1
  %59 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 13, i32 0
  store i8 %4, i8* %59, align 2
  %60 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 13, i32 2
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 14, i32 3
  store i16 0, i16* %61, align 2
  %62 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 14, i32 1
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 14, i32 0
  store i8 %4, i8* %63, align 2
  %64 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 14, i32 2
  store i16 0, i16* %64, align 2
  %65 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 15, i32 3
  store i16 0, i16* %65, align 2
  %66 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 15, i32 1
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 15, i32 0
  store i8 %4, i8* %67, align 2
  %68 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 15, i32 2
  store i16 0, i16* %68, align 2
  %69 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, -64
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %73 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %72, align 8
  %74 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %73, i64 0, i32 7, i32 7, i32 4
  %75 = load i8, i8* %74, align 8, !range !37
  %76 = shl nuw nsw i8 %75, 6
  %77 = zext i8 %76 to i32
  %78 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 3
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %79, align 4
  %80 = or i32 %77, 16785408
  %81 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 1
  store float 1.000000e+00, float* %81, align 4
  %82 = getelementptr %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 2, i64 0
  %83 = bitcast i32* %82 to i64*
  store i64 -1, i64* %83, align 4
  store i32 %80, i32* %69, align 4
  %84 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 0, i32 0
  %85 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 3, i32 0
  %86 = load i8, i8* %85, align 1
  store i8 4, i8* %84, align 4
  %87 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 4
  store float 0.000000e+00, float* %87, align 4
  %88 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 5
  store float 0.000000e+00, float* %88, align 4
  %89 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  store i16 28672, i16* %89, align 4
  %90 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 1
  store i8 -1, i8* %90, align 2
  %91 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 2
  store i8 -1, i8* %91, align 1
  %92 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %92, align 1
  %93 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  store i16 28672, i16* %93, align 4
  %94 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 1
  store i8 -1, i8* %94, align 2
  %95 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 2
  store i8 -1, i8* %95, align 1
  %96 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 2
  store i8 0, i8* %96, align 2
  %97 = and i8 %86, -128
  %98 = or i8 %97, 1
  store i8 %98, i8* %85, align 1
  %99 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 2, i64 0
  %100 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 0
  %101 = bitcast float* %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %101, i8 0, i64 18, i1 false)
  store i8 -1, i8* %100, align 1
  %102 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 1
  store i8 -1, i8* %102, align 1
  %103 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 2
  store i8 -1, i8* %103, align 1
  %104 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 3
  store i8 -1, i8* %104, align 1
  %105 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 1, i64 0, i32 0
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> <i32 65537, i32 65537, i32 65537, i32 65537>, <4 x i32>* %106, align 2
  %107 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 1, i64 4, i32 0
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> <i32 65537, i32 65537, i32 65537, i32 65537>, <4 x i32>* %108, align 2
  %109 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 5, i32 0
  store i16 1539, i16* %109, align 2
  %110 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 5, i32 0
  %111 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 5, i32 5
  %112 = bitcast float* %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %112, i8 0, i64 20, i1 false)
  store float 1.000000e+00, float* %111, align 4
  %113 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 0
  %114 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 7, i32 0
  %115 = bitcast i16* %113 to i64*
  store i64 0, i64* %115, align 4
  store i16 1, i16* %114, align 4
  %116 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 7, i32 1
  store i16 1, i16* %116, align 2
  ret void
}

declare i32 @_ZN2gl23GetCurrentValueFormatIDENS_16VertexAttribTypeE(i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx2vk20GraphicsPipelineDesc18initializePipelineEPNS_9ContextVkERKNS0_13PipelineCacheERKNS0_10RenderPassERKNS0_14PipelineLayoutERKN5angle7BitSetTILm16EmmEERKNSE_ILm32EmmEEPKNS0_12ShaderModuleESN_SN_SN_SN_RKNS0_23SpecializationConstantsEPNS0_8PipelineE(%"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::ContextVk"*, %"class.rx::vk::PipelineCache"* nocapture readonly dereferenceable(8), %"class.rx::vk::RenderPass"* nocapture readonly dereferenceable(8), %"class.rx::vk::PipelineLayout"* nocapture readonly dereferenceable(8), %"class.angle::BitSetT.126"* nocapture readonly dereferenceable(8), %"class.angle::BitSetT.44"* nocapture readonly dereferenceable(8), %"class.rx::vk::ShaderModule"* nocapture readonly, %"class.rx::vk::ShaderModule"* readonly, %"class.rx::vk::ShaderModule"* readonly, %"class.rx::vk::ShaderModule"* readonly, %"class.rx::vk::ShaderModule"* readonly, %"struct.rx::vk::SpecializationConstants"* dereferenceable(16), %"class.rx::vk::Pipeline"*) local_unnamed_addr #2 align 2 {
  %15 = alloca %"class.angle::FixedVector.1389", align 8
  %16 = alloca %struct.VkPipelineVertexInputStateCreateInfo, align 8
  %17 = alloca %struct.VkPipelineInputAssemblyStateCreateInfo, align 8
  %18 = alloca %struct.VkPipelineViewportStateCreateInfo, align 8
  %19 = alloca %struct.VkPipelineRasterizationStateCreateInfo, align 8
  %20 = alloca %struct.VkPipelineMultisampleStateCreateInfo, align 8
  %21 = alloca %struct.VkPipelineDepthStencilStateCreateInfo, align 8
  %22 = alloca %"struct.std::__1::array.1391", align 4
  %23 = alloca %struct.VkPipelineTessellationStateCreateInfo, align 8
  %24 = alloca %struct.VkPipelineTessellationDomainOriginStateCreateInfo, align 8
  %25 = alloca %struct.VkPipelineColorBlendStateCreateInfo, align 8
  %26 = alloca %struct.VkSpecializationInfo, align 8
  %27 = alloca %struct.VkGraphicsPipelineCreateInfo, align 8
  %28 = alloca %"class.angle::PackedEnumMap.1392", align 8
  %29 = alloca %"struct.std::__1::array.1394", align 4
  %30 = alloca %"struct.std::__1::array.1395", align 4
  %31 = alloca %"struct.std::__1::array.1396", align 4
  %32 = alloca %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT, align 8
  %33 = alloca %struct.VkViewport, align 4
  %34 = alloca %struct.VkRect2D, align 4
  %35 = alloca %struct.VkPipelineRasterizationLineStateCreateInfoEXT, align 8
  %36 = alloca %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT, align 8
  %37 = alloca %struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT, align 8
  %38 = alloca <2 x i64>, align 16
  %39 = bitcast <2 x i64>* %38 to %"class.angle::FixedVector.1399"*
  %40 = alloca %struct.VkPipelineDynamicStateCreateInfo, align 8
  %41 = bitcast %"class.angle::FixedVector.1389"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 1
  %43 = bitcast %struct.VkPipelineShaderStageCreateInfo* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 192, i1 false)
  %44 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 1
  %45 = bitcast %struct.VkPipelineVertexInputStateCreateInfo* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %45) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 48, i1 false)
  %46 = bitcast %struct.VkPipelineInputAssemblyStateCreateInfo* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 32, i1 false)
  %47 = bitcast %struct.VkPipelineViewportStateCreateInfo* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %47) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 48, i1 false)
  %48 = bitcast %struct.VkPipelineRasterizationStateCreateInfo* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %48) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 64, i1 false)
  %49 = bitcast %struct.VkPipelineMultisampleStateCreateInfo* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %49) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 48, i1 false)
  %50 = bitcast %struct.VkPipelineDepthStencilStateCreateInfo* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %50) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 104, i1 false)
  %51 = bitcast %"struct.std::__1::array.1391"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %51) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %51, i8 -86, i64 256, i1 false)
  %52 = bitcast %struct.VkPipelineTessellationStateCreateInfo* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false)
  %53 = bitcast %struct.VkPipelineTessellationDomainOriginStateCreateInfo* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false)
  %54 = bitcast %struct.VkPipelineColorBlendStateCreateInfo* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %54) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 56, i1 false)
  %55 = bitcast %struct.VkSpecializationInfo* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #17
  %56 = bitcast %struct.VkSpecializationInfo* %26 to i64*
  store i64 0, i64* %56, align 8
  %57 = bitcast %struct.VkGraphicsPipelineCreateInfo* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %57) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 144, i1 false)
  %58 = bitcast %"class.angle::PackedEnumMap.1392"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %58) #17
  %59 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 0, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 0, i32 1
  store i32 0, i32* %60, align 4
  %61 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 0, i32 2
  store i64 4, i64* %61, align 8
  %62 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 1, i32 0
  store i32 1, i32* %62, align 8
  %63 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 1, i32 1
  store i32 4, i32* %63, align 4
  %64 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 1, i32 2
  store i64 4, i64* %64, align 8
  %65 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 2, i32 0
  store i32 2, i32* %65, align 8
  %66 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 2, i32 1
  store i32 8, i32* %66, align 4
  %67 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 2, i32 2
  store i64 4, i64* %67, align 8
  %68 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 3, i32 0
  store i32 3, i32* %68, align 8
  %69 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 3, i32 1
  store i32 12, i32* %69, align 4
  %70 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 3, i32 2
  store i64 4, i64* %70, align 8
  %71 = getelementptr inbounds %struct.VkSpecializationInfo, %struct.VkSpecializationInfo* %26, i64 0, i32 0
  store i32 4, i32* %71, align 8
  %72 = getelementptr inbounds %"class.angle::PackedEnumMap.1392", %"class.angle::PackedEnumMap.1392"* %28, i64 0, i32 0, i32 0, i64 0
  %73 = getelementptr inbounds %struct.VkSpecializationInfo, %struct.VkSpecializationInfo* %26, i64 0, i32 1
  store %struct.VkSpecializationMapEntry* %72, %struct.VkSpecializationMapEntry** %73, align 8
  %74 = getelementptr inbounds %struct.VkSpecializationInfo, %struct.VkSpecializationInfo* %26, i64 0, i32 2
  store i64 16, i64* %74, align 8
  %75 = getelementptr inbounds %struct.VkSpecializationInfo, %struct.VkSpecializationInfo* %26, i64 0, i32 3
  %76 = bitcast i8** %75 to %"struct.rx::vk::SpecializationConstants"**
  store %"struct.rx::vk::SpecializationConstants"* %12, %"struct.rx::vk::SpecializationConstants"** %76, align 8
  %77 = bitcast %"class.rx::vk::ShaderModule"* %7 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 0
  %80 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 0, i32 0
  store i32 18, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %41, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 12, i1 false)
  %82 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 0, i32 2
  store i32 0, i32* %82, align 8
  %83 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 0, i32 3
  store i32 1, i32* %83, align 4
  %84 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 0, i32 4
  %85 = bitcast %struct.VkShaderModule_T** %84 to i64*
  store i64 %78, i64* %85, align 8
  %86 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 0, i32 5
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %86, align 8
  %87 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 0, i32 6
  store %struct.VkSpecializationInfo* %26, %struct.VkSpecializationInfo** %87, align 8
  store i64 1, i64* %44, align 8
  %88 = icmp ne %"class.rx::vk::ShaderModule"* %10, null
  br i1 %88, label %89, label %102

89:                                               ; preds = %14
  %90 = bitcast %"class.rx::vk::ShaderModule"* %10 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 1
  %93 = getelementptr inbounds %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineShaderStageCreateInfo* %92, i64 0, i32 0
  store i32 18, i32* %93, align 8
  %94 = bitcast %struct.VkPipelineShaderStageCreateInfo* %92 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %95, i8 0, i64 12, i1 false)
  %96 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 1, i32 2
  store i32 0, i32* %96, align 8
  %97 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 1, i32 3
  store i32 2, i32* %97, align 4
  %98 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 1, i32 4
  %99 = bitcast %struct.VkShaderModule_T** %98 to i64*
  store i64 %91, i64* %99, align 8
  %100 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 1, i32 5
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %100, align 8
  %101 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 1, i32 6
  store %struct.VkSpecializationInfo* %26, %struct.VkSpecializationInfo** %101, align 8
  store i64 2, i64* %44, align 8
  br label %102

102:                                              ; preds = %89, %14
  %103 = phi i64 [ 2, %89 ], [ 1, %14 ]
  %104 = icmp ne %"class.rx::vk::ShaderModule"* %11, null
  br i1 %104, label %105, label %120

105:                                              ; preds = %102
  %106 = bitcast %"class.rx::vk::ShaderModule"* %11 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %103
  %109 = getelementptr inbounds %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineShaderStageCreateInfo* %108, i64 0, i32 0
  store i32 18, i32* %109, align 8
  %110 = bitcast %struct.VkPipelineShaderStageCreateInfo* %108 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %111, i8 0, i64 12, i1 false)
  %112 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %103, i32 2
  store i32 0, i32* %112, align 8
  %113 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %103, i32 3
  store i32 4, i32* %113, align 4
  %114 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %103, i32 4
  %115 = bitcast %struct.VkShaderModule_T** %114 to i64*
  store i64 %107, i64* %115, align 8
  %116 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %103, i32 5
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %116, align 8
  %117 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %103, i32 6
  store %struct.VkSpecializationInfo* %26, %struct.VkSpecializationInfo** %117, align 8
  %118 = load i64, i64* %44, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %44, align 8
  br label %120

120:                                              ; preds = %105, %102
  %121 = phi i64 [ %119, %105 ], [ %103, %102 ]
  %122 = icmp eq %"class.rx::vk::ShaderModule"* %9, null
  br i1 %122, label %138, label %123

123:                                              ; preds = %120
  %124 = bitcast %"class.rx::vk::ShaderModule"* %9 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %121
  %127 = getelementptr inbounds %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineShaderStageCreateInfo* %126, i64 0, i32 0
  store i32 18, i32* %127, align 8
  %128 = bitcast %struct.VkPipelineShaderStageCreateInfo* %126 to i8*
  %129 = getelementptr inbounds i8, i8* %128, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %129, i8 0, i64 12, i1 false)
  %130 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %121, i32 2
  store i32 0, i32* %130, align 8
  %131 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %121, i32 3
  store i32 8, i32* %131, align 4
  %132 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %121, i32 4
  %133 = bitcast %struct.VkShaderModule_T** %132 to i64*
  store i64 %125, i64* %133, align 8
  %134 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %121, i32 5
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %134, align 8
  %135 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %121, i32 6
  store %struct.VkSpecializationInfo* %26, %struct.VkSpecializationInfo** %135, align 8
  %136 = load i64, i64* %44, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %44, align 8
  br label %138

138:                                              ; preds = %120, %123
  %139 = phi i64 [ %121, %120 ], [ %137, %123 ]
  %140 = icmp eq %"class.rx::vk::ShaderModule"* %8, null
  br i1 %140, label %161, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = trunc i32 %143 to i8
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %161, label %146

146:                                              ; preds = %141
  %147 = bitcast %"class.rx::vk::ShaderModule"* %8 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %139
  %150 = getelementptr inbounds %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineShaderStageCreateInfo* %149, i64 0, i32 0
  store i32 18, i32* %150, align 8
  %151 = bitcast %struct.VkPipelineShaderStageCreateInfo* %149 to i8*
  %152 = getelementptr inbounds i8, i8* %151, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %152, i8 0, i64 12, i1 false)
  %153 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %139, i32 2
  store i32 0, i32* %153, align 8
  %154 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %139, i32 3
  store i32 16, i32* %154, align 4
  %155 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %139, i32 4
  %156 = bitcast %struct.VkShaderModule_T** %155 to i64*
  store i64 %148, i64* %156, align 8
  %157 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %139, i32 5
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %157, align 8
  %158 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %139, i32 6
  store %struct.VkSpecializationInfo* %26, %struct.VkSpecializationInfo** %158, align 8
  %159 = load i64, i64* %44, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %44, align 8
  br label %161

161:                                              ; preds = %138, %146, %141
  %162 = bitcast %"struct.std::__1::array.1394"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %162) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %162, i8 -86, i64 192, i1 false)
  %163 = bitcast %"struct.std::__1::array.1395"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %163) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %163, i8 -86, i64 256, i1 false)
  %164 = bitcast %"struct.std::__1::array.1396"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %164) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %164, i8 -86, i64 128, i1 false)
  %165 = bitcast %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %165) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 24, i1 false)
  %166 = getelementptr inbounds %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT, %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT* %32, i64 0, i32 0
  store i32 1000190001, i32* %166, align 8
  %167 = getelementptr inbounds %"struct.std::__1::array.1396", %"struct.std::__1::array.1396"* %31, i64 0, i32 0, i64 0
  %168 = getelementptr inbounds %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT, %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT* %32, i64 0, i32 3
  store %struct.VkVertexInputBindingDivisorDescriptionEXT* %167, %struct.VkVertexInputBindingDivisorDescriptionEXT** %168, align 8
  %169 = getelementptr inbounds %"class.angle::BitSetT.126", %"class.angle::BitSetT.126"* %5, i64 0, i32 0
  %170 = load i64, i64* %169, align 8, !noalias !38
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %161
  %173 = call i64 @llvm.cttz.i64(i64 %170, i1 true) #17, !range !41
  %174 = getelementptr inbounds %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT, %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT* %32, i64 0, i32 2
  %175 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %176 = getelementptr inbounds %"class.angle::BitSetT.44", %"class.angle::BitSetT.44"* %6, i64 0, i32 0
  %177 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  br label %192

178:                                              ; preds = %298
  %179 = load i32, i32* %174, align 8
  br label %180

180:                                              ; preds = %178, %161
  %181 = phi i32 [ 0, %161 ], [ %179, %178 ]
  %182 = phi i32 [ 0, %161 ], [ %307, %178 ]
  %183 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %16, i64 0, i32 0
  store i32 19, i32* %183, align 8
  %184 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %16, i64 0, i32 2
  store i32 0, i32* %184, align 8
  %185 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %16, i64 0, i32 3
  store i32 %182, i32* %185, align 4
  %186 = getelementptr inbounds %"struct.std::__1::array.1394", %"struct.std::__1::array.1394"* %29, i64 0, i32 0, i64 0
  %187 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %16, i64 0, i32 4
  store %struct.VkVertexInputBindingDescription* %186, %struct.VkVertexInputBindingDescription** %187, align 8
  %188 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %16, i64 0, i32 5
  store i32 %182, i32* %188, align 8
  %189 = getelementptr inbounds %"struct.std::__1::array.1395", %"struct.std::__1::array.1395"* %30, i64 0, i32 0, i64 0
  %190 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %16, i64 0, i32 6
  store %struct.VkVertexInputAttributeDescription* %189, %struct.VkVertexInputAttributeDescription** %190, align 8
  %191 = icmp eq i32 %181, 0
  br i1 %191, label %316, label %313

192:                                              ; preds = %172, %298
  %193 = phi i32 [ 0, %172 ], [ %307, %298 ]
  %194 = phi i64 [ %170, %172 ], [ %310, %298 ]
  %195 = phi i64 [ %173, %172 ], [ %312, %298 ]
  %196 = trunc i64 %195 to i32
  %197 = zext i32 %193 to i64
  %198 = getelementptr inbounds %"struct.std::__1::array.1394", %"struct.std::__1::array.1394"* %29, i64 0, i32 0, i64 %197, i32 0
  store i32 %196, i32* %198, align 4
  %199 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 %195, i32 3
  %200 = load i16, i16* %199, align 2
  %201 = zext i16 %200 to i32
  %202 = getelementptr inbounds %"struct.std::__1::array.1394", %"struct.std::__1::array.1394"* %29, i64 0, i32 0, i64 %197, i32 1
  store i32 %201, i32* %202, align 4
  %203 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 %195, i32 1
  %204 = load i8, i8* %203, align 1
  %205 = icmp eq i8 %204, 0
  %206 = getelementptr inbounds %"struct.std::__1::array.1394", %"struct.std::__1::array.1394"* %29, i64 0, i32 0, i64 %197, i32 2
  br i1 %205, label %214, label %207

207:                                              ; preds = %192
  store i32 1, i32* %206, align 4
  %208 = load i32, i32* %174, align 8
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds %"struct.std::__1::array.1396", %"struct.std::__1::array.1396"* %31, i64 0, i32 0, i64 %209, i32 0
  store i32 %196, i32* %210, align 4
  %211 = zext i8 %204 to i32
  %212 = getelementptr inbounds %"struct.std::__1::array.1396", %"struct.std::__1::array.1396"* %31, i64 0, i32 0, i64 %209, i32 1
  store i32 %211, i32* %212, align 4
  %213 = add i32 %208, 1
  store i32 %213, i32* %174, align 8
  br label %215

214:                                              ; preds = %192
  store i32 0, i32* %206, align 4
  br label %215

215:                                              ; preds = %214, %207
  %216 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 %195, i32 0
  %217 = load i8, i8* %216, align 2
  %218 = zext i8 %217 to i32
  %219 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %175, align 8
  %220 = zext i8 %217 to i64
  %221 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %219, i64 0, i32 49, i32 1, i32 0, i64 %220, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %223
  %225 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 %195, i32 2
  %226 = load i16, i16* %225, align 2
  %227 = icmp slt i16 %226, 0
  %228 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %219, i64 0, i32 49, i32 1, i32 0, i64 %220, i32 4
  %229 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %219, i64 0, i32 49, i32 1, i32 0, i64 %220, i32 3
  %230 = select i1 %227, i32* %228, i32* %229
  %231 = load i32, i32* %230, align 4
  %232 = call i32 @_ZN2rx2vk23GetVkFormatFromFormatIDEN5angle8FormatIDE(i32 %231) #17
  %233 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %223, i32 7
  %234 = load i32, i32* %233, align 8
  %235 = or i32 %234, 1
  %236 = icmp eq i32 %235, 5125
  br i1 %236, label %237, label %249

237:                                              ; preds = %215
  %238 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %223, i32 20
  %239 = load i8, i8* %238, align 2, !range !37
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %241, label %249

241:                                              ; preds = %237
  %242 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %223, i32 23
  %243 = load i32, i32* %242, align 4
  %244 = icmp ult i32 %243, 6
  br i1 %244, label %245, label %249

245:                                              ; preds = %241
  %246 = sext i32 %243 to i64
  %247 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZNK2rx2vk20GraphicsPipelineDesc18initializePipelineEPNS_9ContextVkERKNS0_13PipelineCacheERKNS0_10RenderPassERKNS0_14PipelineLayoutERKN5angle7BitSetTILm16EmmEERKNSE_ILm32EmmEEPKNS0_12ShaderModuleESN_SN_SN_SN_RKNS0_23SpecializationConstantsEPNS0_8PipelineE, i64 0, i64 %246
  %248 = load i32, i32* %247, align 4
  br label %249

249:                                              ; preds = %241, %245, %215, %237
  %250 = phi i32 [ 0, %237 ], [ 0, %215 ], [ %248, %245 ], [ 3, %241 ]
  %251 = load i64, i64* %176, align 8
  %252 = lshr i64 %251, %195
  %253 = trunc i64 %252 to i32
  %254 = and i32 %253, 65537
  switch i32 %254, label %257 [
    i32 65537, label %258
    i32 1, label %255
    i32 65536, label %256
  ]

255:                                              ; preds = %249
  br label %258

256:                                              ; preds = %249
  br label %258

257:                                              ; preds = %249
  br label %258

258:                                              ; preds = %249, %255, %256, %257
  %259 = phi i32 [ 4, %257 ], [ 2, %256 ], [ 1, %255 ], [ 0, %249 ]
  %260 = icmp eq i32 %250, %259
  br i1 %260, label %298, label %261

261:                                              ; preds = %258
  %262 = icmp eq i32 %250, 0
  %263 = icmp eq i32 %259, 0
  %264 = or i1 %262, %263
  br i1 %264, label %265, label %269

265:                                              ; preds = %261
  %266 = zext i32 %259 to i64
  %267 = getelementptr inbounds %"class.angle::PackedEnumMap.1397", %"class.angle::PackedEnumMap.1397"* @_ZN2rx2vk12_GLOBAL__N_127kMismatchedComponentTypeMapE, i64 0, i32 0, i32 0, i64 %266
  %268 = load i32, i32* %267, align 4
  br label %280

269:                                              ; preds = %261
  %270 = call i32 @_ZN2gl23ConvertFormatSignednessERKN5angle6FormatE(%"struct.angle::Format"* dereferenceable(104) %224) #17
  %271 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %175, align 8
  %272 = sext i32 %270 to i64
  %273 = load i16, i16* %225, align 2
  %274 = icmp slt i16 %273, 0
  %275 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %271, i64 0, i32 49, i32 1, i32 0, i64 %272, i32 4
  %276 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %271, i64 0, i32 49, i32 1, i32 0, i64 %272, i32 3
  %277 = select i1 %274, i32* %275, i32* %276
  %278 = load i32, i32* %277, align 4
  %279 = call i32 @_ZN2rx2vk23GetVkFormatFromFormatIDEN5angle8FormatIDE(i32 %278) #17
  br label %280

280:                                              ; preds = %269, %265
  %281 = phi i32 [ %268, %265 ], [ %279, %269 ]
  %282 = load %"class.gl::State"*, %"class.gl::State"** %177, align 8
  %283 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %282, i64 0, i32 65
  %284 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %283, align 8
  %285 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %284, i64 0, i32 25, i32 0, i32 0
  %286 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %285, align 8
  %287 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %286, i64 %195, i32 0
  %288 = load i32, i32* %287, align 8
  %289 = call dereferenceable(16) %"struct.gl::VertexFormat"* @_ZN2gl21GetVertexFormatFromIDEN5angle8FormatIDE(i32 %218) #17
  %290 = getelementptr inbounds %"struct.gl::VertexFormat", %"struct.gl::VertexFormat"* %289, i64 0, i32 3
  %291 = load i32, i32* %290, align 4
  %292 = call i32 @_ZN2gl19VariableColumnCountEj(i32 %288) #17
  %293 = or i1 %262, %263
  %294 = xor i1 %293, true
  %295 = icmp eq i32 %291, %292
  %296 = and i1 %295, %294
  br i1 %296, label %298, label %297

297:                                              ; preds = %280
  store i32 0, i32* %202, align 4
  br label %298

298:                                              ; preds = %297, %280, %258
  %299 = phi i32 [ %232, %258 ], [ %281, %280 ], [ %281, %297 ]
  %300 = getelementptr inbounds %"struct.std::__1::array.1395", %"struct.std::__1::array.1395"* %30, i64 0, i32 0, i64 %197, i32 1
  store i32 %196, i32* %300, align 4
  %301 = getelementptr inbounds %"struct.std::__1::array.1395", %"struct.std::__1::array.1395"* %30, i64 0, i32 0, i64 %197, i32 2
  store i32 %299, i32* %301, align 4
  %302 = getelementptr inbounds %"struct.std::__1::array.1395", %"struct.std::__1::array.1395"* %30, i64 0, i32 0, i64 %197, i32 0
  store i32 %196, i32* %302, align 4
  %303 = load i16, i16* %225, align 2
  %304 = and i16 %303, 32767
  %305 = zext i16 %304 to i32
  %306 = getelementptr inbounds %"struct.std::__1::array.1395", %"struct.std::__1::array.1395"* %30, i64 0, i32 0, i64 %197, i32 3
  store i32 %305, i32* %306, align 4
  %307 = add i32 %193, 1
  %308 = shl i64 1, %195
  %309 = xor i64 %308, -1
  %310 = and i64 %194, %309
  %311 = icmp eq i64 %310, 0
  %312 = call i64 @llvm.cttz.i64(i64 %310, i1 true) #17, !range !41
  br i1 %311, label %178, label %192

313:                                              ; preds = %180
  %314 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %16, i64 0, i32 1
  %315 = bitcast i8** %314 to %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT**
  store %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT* %32, %struct.VkPipelineVertexInputDivisorStateCreateInfoEXT** %315, align 8
  br label %316

316:                                              ; preds = %180, %313
  %317 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %17, i64 0, i32 0
  store i32 20, i32* %317, align 8
  %318 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %17, i64 0, i32 2
  store i32 0, i32* %318, align 8
  %319 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 5, i32 0
  %320 = load i16, i16* %319, align 2
  %321 = and i16 %320, 511
  %322 = zext i16 %321 to i32
  %323 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %17, i64 0, i32 3
  store i32 %322, i32* %323, align 4
  %324 = lshr i16 %320, 15
  %325 = zext i16 %324 to i32
  %326 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %17, i64 0, i32 4
  store i32 %325, i32* %326, align 8
  %327 = bitcast %struct.VkViewport* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %327) #17
  %328 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %33, i64 0, i32 2
  %329 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %33, i64 0, i32 3
  %330 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 5
  %331 = bitcast %struct.VkViewport* %330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %327, i8* align 4 %331, i64 24, i1 false)
  %332 = load float, float* %328, align 4
  %333 = fcmp oeq float %332, 0.000000e+00
  br i1 %333, label %334, label %335

334:                                              ; preds = %316
  store float 1.000000e+00, float* %328, align 4
  br label %335

335:                                              ; preds = %334, %316
  %336 = load float, float* %329, align 4
  %337 = fcmp oeq float %336, 0.000000e+00
  br i1 %337, label %338, label %339

338:                                              ; preds = %335
  store float 1.000000e+00, float* %329, align 4
  br label %339

339:                                              ; preds = %338, %335
  %340 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %18, i64 0, i32 0
  store i32 22, i32* %340, align 8
  %341 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %18, i64 0, i32 2
  store i32 0, i32* %341, align 8
  %342 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %18, i64 0, i32 3
  store i32 1, i32* %342, align 4
  %343 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %18, i64 0, i32 4
  store %struct.VkViewport* %33, %struct.VkViewport** %343, align 8
  %344 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %18, i64 0, i32 5
  store i32 1, i32* %344, align 8
  %345 = bitcast %struct.VkRect2D* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %345) #17
  %346 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 0
  %347 = bitcast %struct.VkRect2D* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %347, i8 -86, i64 16, i1 false)
  %348 = load i16, i16* %346, align 2
  %349 = icmp eq i16 %348, -1
  %350 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %18, i64 0, i32 6
  br i1 %349, label %351, label %352

351:                                              ; preds = %339
  store %struct.VkRect2D* null, %struct.VkRect2D** %350, align 8
  br label %367

352:                                              ; preds = %339
  %353 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %34, i64 0, i32 0, i32 0
  %354 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %34, i64 0, i32 1, i32 1
  %355 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %34, i64 0, i32 1, i32 0
  %356 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %34, i64 0, i32 0, i32 1
  store %struct.VkRect2D* %34, %struct.VkRect2D** %350, align 8
  %357 = zext i16 %348 to i32
  store i32 %357, i32* %353, align 4
  %358 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 1
  %359 = load i16, i16* %358, align 2
  %360 = zext i16 %359 to i32
  store i32 %360, i32* %356, align 4
  %361 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 2
  %362 = load i16, i16* %361, align 4
  %363 = zext i16 %362 to i32
  store i32 %363, i32* %355, align 4
  %364 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 3
  %365 = load i16, i16* %364, align 2
  %366 = zext i16 %365 to i32
  store i32 %366, i32* %354, align 4
  br label %367

367:                                              ; preds = %352, %351
  %368 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 0
  store i32 23, i32* %368, align 8
  %369 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 2
  store i32 0, i32* %369, align 8
  %370 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %371 = load i32, i32* %370, align 4
  %372 = lshr i32 %371, 6
  %373 = and i32 %372, 1
  %374 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 3
  store i32 %373, i32* %374, align 4
  %375 = lshr i32 %371, 7
  %376 = and i32 %375, 1
  %377 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 4
  store i32 %376, i32* %377, align 8
  %378 = lshr i32 %371, 8
  %379 = and i32 %378, 15
  %380 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 5
  store i32 %379, i32* %380, align 4
  %381 = lshr i32 %371, 12
  %382 = and i32 %381, 15
  %383 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 6
  store i32 %382, i32* %383, align 8
  %384 = lshr i32 %371, 16
  %385 = and i32 %384, 15
  %386 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 7
  store i32 %385, i32* %386, align 4
  %387 = lshr i32 %371, 20
  %388 = and i32 %387, 1
  %389 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 8
  store i32 %388, i32* %389, align 8
  %390 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 9
  %391 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 3
  %392 = bitcast float* %391 to <4 x i32>*
  %393 = load <4 x i32>, <4 x i32>* %392, align 4
  %394 = shufflevector <4 x i32> %393, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 2, i32 3>
  %395 = bitcast float* %390 to <4 x i32>*
  store <4 x i32> %394, <4 x i32>* %395, align 4
  %396 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %19, i64 0, i32 1
  %397 = bitcast %struct.VkPipelineRasterizationLineStateCreateInfoEXT* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %397) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %397, i8 0, i64 32, i1 false)
  %398 = getelementptr inbounds %struct.VkPipelineRasterizationLineStateCreateInfoEXT, %struct.VkPipelineRasterizationLineStateCreateInfoEXT* %35, i64 0, i32 0
  store i32 1000259001, i32* %398, align 8
  %399 = and i32 %371, -18874240
  %400 = icmp eq i32 %399, 0
  %401 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %402 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %401, align 8
  br i1 %400, label %403, label %411

403:                                              ; preds = %367
  %404 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %402, i64 0, i32 7, i32 2, i32 4
  %405 = load i8, i8* %404, align 8, !range !37
  %406 = icmp eq i8 %405, 0
  br i1 %406, label %411, label %407

407:                                              ; preds = %403
  %408 = getelementptr inbounds %struct.VkPipelineRasterizationLineStateCreateInfoEXT, %struct.VkPipelineRasterizationLineStateCreateInfoEXT* %35, i64 0, i32 2
  store i32 2, i32* %408, align 8
  %409 = bitcast i8** %396 to %struct.VkPipelineRasterizationLineStateCreateInfoEXT**
  store %struct.VkPipelineRasterizationLineStateCreateInfoEXT* %35, %struct.VkPipelineRasterizationLineStateCreateInfoEXT** %409, align 8
  %410 = getelementptr inbounds %struct.VkPipelineRasterizationLineStateCreateInfoEXT, %struct.VkPipelineRasterizationLineStateCreateInfoEXT* %35, i64 0, i32 1
  br label %411

411:                                              ; preds = %367, %403, %407
  %412 = phi i8** [ %410, %407 ], [ %396, %403 ], [ %396, %367 ]
  %413 = bitcast %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %413) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %413, i8 0, i64 24, i1 false)
  %414 = getelementptr inbounds %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT, %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT* %36, i64 0, i32 0
  store i32 1000254001, i32* %414, align 8
  %415 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %402, i64 0, i32 7, i32 3, i32 4
  %416 = load i8, i8* %415, align 8, !range !37
  %417 = icmp eq i8 %416, 0
  br i1 %417, label %422, label %418

418:                                              ; preds = %411
  %419 = getelementptr inbounds %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT, %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT* %36, i64 0, i32 2
  store i32 1, i32* %419, align 8
  %420 = bitcast i8** %412 to %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT**
  store %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT* %36, %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT** %420, align 8
  %421 = getelementptr inbounds %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT, %struct.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT* %36, i64 0, i32 1
  br label %422

422:                                              ; preds = %411, %418
  %423 = phi i8** [ %421, %418 ], [ %412, %411 ]
  %424 = bitcast %struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %424) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %424, i8 0, i64 24, i1 false)
  %425 = getelementptr inbounds %struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT, %struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT* %37, i64 0, i32 0
  store i32 1000102001, i32* %425, align 8
  %426 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %402, i64 0, i32 7, i32 7, i32 4
  %427 = load i8, i8* %426, align 8, !range !37
  %428 = icmp eq i8 %427, 0
  br i1 %428, label %432, label %429

429:                                              ; preds = %422
  %430 = getelementptr inbounds %struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT, %struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT* %37, i64 0, i32 3
  store i32 1, i32* %430, align 4
  %431 = bitcast i8** %423 to %struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT**
  store %struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT* %37, %struct.VkPipelineRasterizationDepthClipStateCreateInfoEXT** %431, align 8
  br label %432

432:                                              ; preds = %422, %429
  %433 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %402, i64 0, i32 7, i32 27, i32 4
  %434 = load i8, i8* %433, align 8, !range !37
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %438, label %436

436:                                              ; preds = %432
  %437 = bitcast i8** %396 to %struct.VkPipelineRasterizationLineStateCreateInfoEXT**
  store %struct.VkPipelineRasterizationLineStateCreateInfoEXT* %35, %struct.VkPipelineRasterizationLineStateCreateInfoEXT** %437, align 8
  br label %438

438:                                              ; preds = %432, %436
  %439 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %20, i64 0, i32 0
  store i32 24, i32* %439, align 8
  %440 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %20, i64 0, i32 2
  store i32 0, i32* %440, align 8
  %441 = lshr i32 %371, 24
  %442 = call i32 @_ZN2rx5gl_vk10GetSamplesEi(i32 %441) #17
  %443 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %20, i64 0, i32 3
  store i32 %442, i32* %443, align 4
  %444 = load i32, i32* %370, align 4
  %445 = lshr i32 %444, 21
  %446 = and i32 %445, 1
  %447 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %20, i64 0, i32 4
  store i32 %446, i32* %447, align 8
  %448 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 1
  %449 = bitcast float* %448 to i32*
  %450 = load i32, i32* %449, align 4
  %451 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %20, i64 0, i32 5
  %452 = bitcast float* %451 to i32*
  store i32 %450, i32* %452, align 4
  %453 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 2, i64 0
  %454 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %20, i64 0, i32 6
  store i32* %453, i32** %454, align 8
  %455 = lshr i32 %444, 22
  %456 = and i32 %455, 1
  %457 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %20, i64 0, i32 7
  store i32 %456, i32* %457, align 8
  %458 = lshr i32 %444, 23
  %459 = and i32 %458, 1
  %460 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %20, i64 0, i32 8
  store i32 %459, i32* %460, align 4
  %461 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 0
  store i32 25, i32* %461, align 8
  %462 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 2
  store i32 0, i32* %462, align 8
  %463 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 0, i32 0
  %464 = load i8, i8* %463, align 4
  %465 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 3
  %466 = lshr i8 %464, 2
  %467 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 3, i32 0
  %468 = load i8, i8* %467, align 1
  %469 = lshr i8 %464, 4
  %470 = insertelement <4 x i8> undef, i8 %464, i32 0
  %471 = insertelement <4 x i8> %470, i8 %466, i32 1
  %472 = insertelement <4 x i8> %471, i8 %468, i32 2
  %473 = insertelement <4 x i8> %472, i8 %469, i32 3
  %474 = and <4 x i8> %473, <i8 3, i8 3, i8 15, i8 3>
  %475 = zext <4 x i8> %474 to <4 x i32>
  %476 = bitcast i32* %465 to <4 x i32>*
  store <4 x i32> %475, <4 x i32>* %476, align 4
  %477 = lshr i8 %464, 6
  %478 = zext i8 %477 to i32
  %479 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 7
  store i32 %478, i32* %479, align 4
  %480 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 1
  %481 = load i8, i8* %480, align 1
  %482 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %483 = load i16, i16* %482, align 1
  %484 = and i16 %483, 15
  %485 = zext i16 %484 to i32
  %486 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 8, i32 0
  store i32 %485, i32* %486, align 8
  %487 = lshr i16 %483, 4
  %488 = and i16 %487, 15
  %489 = zext i16 %488 to i32
  %490 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 8, i32 1
  store i32 %489, i32* %490, align 4
  %491 = lshr i16 %483, 8
  %492 = and i16 %491, 15
  %493 = zext i16 %492 to i32
  %494 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 8, i32 2
  store i32 %493, i32* %494, align 8
  %495 = lshr i16 %483, 12
  %496 = zext i16 %495 to i32
  %497 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 8, i32 3
  store i32 %496, i32* %497, align 4
  %498 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 1
  %499 = load i8, i8* %498, align 1
  %500 = zext i8 %499 to i32
  %501 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 8, i32 4
  store i32 %500, i32* %501, align 8
  %502 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 2
  %503 = load i8, i8* %502, align 1
  %504 = zext i8 %503 to i32
  %505 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 8, i32 5
  store i32 %504, i32* %505, align 4
  %506 = zext i8 %481 to i32
  %507 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 8, i32 6
  store i32 %506, i32* %507, align 8
  %508 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 2
  %509 = load i8, i8* %508, align 2
  %510 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %511 = load i16, i16* %510, align 1
  %512 = and i16 %511, 15
  %513 = zext i16 %512 to i32
  %514 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 9, i32 0
  store i32 %513, i32* %514, align 4
  %515 = lshr i16 %511, 4
  %516 = and i16 %515, 15
  %517 = zext i16 %516 to i32
  %518 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 9, i32 1
  store i32 %517, i32* %518, align 4
  %519 = lshr i16 %511, 8
  %520 = and i16 %519, 15
  %521 = zext i16 %520 to i32
  %522 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 9, i32 2
  store i32 %521, i32* %522, align 4
  %523 = lshr i16 %511, 12
  %524 = zext i16 %523 to i32
  %525 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 9, i32 3
  store i32 %524, i32* %525, align 4
  %526 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 1
  %527 = load i8, i8* %526, align 1
  %528 = zext i8 %527 to i32
  %529 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 9, i32 4
  store i32 %528, i32* %529, align 4
  %530 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 2
  %531 = load i8, i8* %530, align 1
  %532 = zext i8 %531 to i32
  %533 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 9, i32 5
  store i32 %532, i32* %533, align 4
  %534 = zext i8 %509 to i32
  %535 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 9, i32 6
  store i32 %534, i32* %535, align 4
  %536 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 4
  %537 = bitcast float* %536 to i32*
  %538 = load i32, i32* %537, align 4
  %539 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 10
  %540 = bitcast float* %539 to i32*
  store i32 %538, i32* %540, align 8
  %541 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 5
  %542 = bitcast float* %541 to i32*
  %543 = load i32, i32* %542, align 4
  %544 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %21, i64 0, i32 11
  %545 = bitcast float* %544 to i32*
  store i32 %543, i32* %545, align 4
  %546 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %25, i64 0, i32 0
  store i32 26, i32* %546, align 8
  %547 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %25, i64 0, i32 2
  store i32 0, i32* %547, align 8
  %548 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 3, i32 0
  %549 = load i8, i8* %548, align 4
  %550 = and i8 %549, 1
  %551 = zext i8 %550 to i32
  %552 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %25, i64 0, i32 3
  store i32 %551, i32* %552, align 4
  %553 = lshr i8 %549, 1
  %554 = zext i8 %553 to i32
  %555 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %25, i64 0, i32 4
  store i32 %554, i32* %555, align 8
  %556 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 1, i32 0
  %557 = load i8, i8* %556, align 4
  %558 = lshr i8 %557, 3
  %559 = and i8 %558, 15
  %560 = zext i8 %559 to i64
  %561 = zext i8 %559 to i32
  %562 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %25, i64 0, i32 5
  store i32 %561, i32* %562, align 4
  %563 = getelementptr inbounds %"struct.std::__1::array.1391", %"struct.std::__1::array.1391"* %22, i64 0, i32 0, i64 0
  %564 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %25, i64 0, i32 6
  store %struct.VkPipelineColorBlendAttachmentState* %563, %struct.VkPipelineColorBlendAttachmentState** %564, align 8
  %565 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 1, i32 2, i32 0
  %566 = load i8, i8* %565, align 1, !noalias !42
  %567 = icmp eq i8 %566, 0
  br i1 %567, label %568, label %573

568:                                              ; preds = %438
  %569 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 1, i32 3, i32 0, i64 8
  %570 = load i8, i8* %569, align 1
  %571 = and i8 %570, 48
  %572 = icmp eq i8 %571, 0
  br i1 %572, label %579, label %573

573:                                              ; preds = %568, %438
  %574 = and i32 %444, 63
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %579

576:                                              ; preds = %573
  %577 = zext i8 %566 to i32
  %578 = call i32 @llvm.ctpop.i32(i32 %577) #17, !range !3
  store i32 %578, i32* %562, align 4
  br label %579

579:                                              ; preds = %568, %576, %573
  %580 = phi i32 [ %561, %568 ], [ %578, %576 ], [ %561, %573 ]
  %581 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %25, i64 0, i32 7, i64 0
  %582 = bitcast float* %581 to i8*
  %583 = getelementptr %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 2, i64 0
  %584 = bitcast float* %583 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 4 %584, i64 16, i1 false)
  %585 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 4
  %586 = load i8, i8* %585, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %51, i8 0, i64 256, i1 false)
  %587 = icmp eq i32 %580, 0
  br i1 %587, label %590, label %588

588:                                              ; preds = %579
  %589 = zext i32 %580 to i64
  br label %595

590:                                              ; preds = %632, %579
  %591 = bitcast <2 x i64>* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %591) #17
  %592 = getelementptr inbounds %"class.angle::FixedVector.1399", %"class.angle::FixedVector.1399"* %39, i64 0, i32 1
  store <2 x i64> <i64 -6148914691236517206, i64 0>, <2 x i64>* %38, align 16
  %593 = load i16, i16* %346, align 2
  %594 = icmp eq i16 %593, -1
  br i1 %594, label %646, label %648

595:                                              ; preds = %588, %632
  %596 = phi i64 [ 0, %588 ], [ %644, %632 ]
  %597 = trunc i64 %596 to i32
  %598 = shl i32 1, %597
  %599 = trunc i32 %598 to i8
  %600 = and i8 %586, %599
  %601 = icmp eq i8 %600, 0
  br i1 %601, label %632, label %602

602:                                              ; preds = %595
  %603 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 1, i32 3, i32 0, i64 %596
  %604 = load i8, i8* %603, align 1
  %605 = icmp ult i64 %596, %560
  %606 = and i8 %604, 7
  %607 = select i1 %605, i8 %604, i8 %606
  %608 = zext i8 %607 to i64
  %609 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %608, i32 7
  %610 = load i32, i32* %609, align 8
  %611 = or i32 %610, 1
  %612 = icmp eq i32 %611, 5125
  br i1 %612, label %632, label %613

613:                                              ; preds = %602
  %614 = getelementptr inbounds %"struct.std::__1::array.1391", %"struct.std::__1::array.1391"* %22, i64 0, i32 0, i64 %596, i32 0
  store i32 1, i32* %614, align 4
  %615 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 1, i64 %596, i32 0
  %616 = load i32, i32* %615, align 2
  %617 = getelementptr inbounds %"struct.std::__1::array.1391", %"struct.std::__1::array.1391"* %22, i64 0, i32 0, i64 %596, i32 1
  %618 = lshr i32 %616, 5
  %619 = lshr i32 %616, 10
  %620 = lshr i32 %616, 16
  %621 = insertelement <4 x i32> undef, i32 %616, i32 0
  %622 = insertelement <4 x i32> %621, i32 %618, i32 1
  %623 = insertelement <4 x i32> %622, i32 %619, i32 2
  %624 = insertelement <4 x i32> %623, i32 %620, i32 3
  %625 = and <4 x i32> %624, <i32 31, i32 31, i32 63, i32 31>
  %626 = bitcast i32* %617 to <4 x i32>*
  store <4 x i32> %625, <4 x i32>* %626, align 4
  %627 = lshr i32 %616, 21
  %628 = and i32 %627, 31
  %629 = getelementptr inbounds %"struct.std::__1::array.1391", %"struct.std::__1::array.1391"* %22, i64 0, i32 0, i64 %596, i32 5
  store i32 %628, i32* %629, align 4
  %630 = lshr i32 %616, 26
  %631 = getelementptr inbounds %"struct.std::__1::array.1391", %"struct.std::__1::array.1391"* %22, i64 0, i32 0, i64 %596, i32 6
  store i32 %630, i32* %631, align 4
  br label %632

632:                                              ; preds = %595, %602, %613
  %633 = lshr i64 %596, 1
  %634 = and i32 %597, 1
  %635 = icmp eq i32 %634, 0
  %636 = and i64 %633, 2147483647
  %637 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 %636
  %638 = load i8, i8* %637, align 1
  %639 = zext i8 %638 to i32
  %640 = and i32 %639, 15
  %641 = lshr i32 %639, 4
  %642 = select i1 %635, i32 %640, i32 %641
  %643 = getelementptr inbounds %"struct.std::__1::array.1391", %"struct.std::__1::array.1391"* %22, i64 0, i32 0, i64 %596, i32 7
  store i32 %642, i32* %643, align 4
  %644 = add nuw nsw i64 %596, 1
  %645 = icmp ult i64 %644, %589
  br i1 %645, label %595, label %590

646:                                              ; preds = %590
  %647 = bitcast <2 x i64>* %38 to i32*
  store i32 1, i32* %647, align 16
  store i64 1, i64* %592, align 8
  br label %648

648:                                              ; preds = %646, %590
  %649 = phi i64 [ 1, %646 ], [ 0, %590 ]
  %650 = bitcast %struct.VkPipelineDynamicStateCreateInfo* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %650) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %650, i8 0, i64 32, i1 false)
  %651 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %40, i64 0, i32 0
  store i32 27, i32* %651, align 8
  %652 = trunc i64 %649 to i32
  %653 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %40, i64 0, i32 3
  store i32 %652, i32* %653, align 4
  %654 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %40, i64 0, i32 4
  %655 = bitcast i32** %654 to <2 x i64>**
  store <2 x i64>* %38, <2 x i64>** %655, align 8
  %656 = and i1 %88, %104
  br i1 %656, label %657, label %670

657:                                              ; preds = %648
  %658 = getelementptr inbounds %struct.VkPipelineTessellationDomainOriginStateCreateInfo, %struct.VkPipelineTessellationDomainOriginStateCreateInfo* %24, i64 0, i32 0
  store i32 1000117003, i32* %658, align 8
  %659 = getelementptr inbounds %struct.VkPipelineTessellationDomainOriginStateCreateInfo, %struct.VkPipelineTessellationDomainOriginStateCreateInfo* %24, i64 0, i32 1
  store i8* null, i8** %659, align 8
  %660 = getelementptr inbounds %struct.VkPipelineTessellationDomainOriginStateCreateInfo, %struct.VkPipelineTessellationDomainOriginStateCreateInfo* %24, i64 0, i32 2
  store i32 1, i32* %660, align 8
  %661 = getelementptr inbounds %struct.VkPipelineTessellationStateCreateInfo, %struct.VkPipelineTessellationStateCreateInfo* %23, i64 0, i32 0
  store i32 21, i32* %661, align 8
  %662 = getelementptr inbounds %struct.VkPipelineTessellationStateCreateInfo, %struct.VkPipelineTessellationStateCreateInfo* %23, i64 0, i32 2
  store i32 0, i32* %662, align 8
  %663 = getelementptr inbounds %struct.VkPipelineTessellationStateCreateInfo, %struct.VkPipelineTessellationStateCreateInfo* %23, i64 0, i32 1
  %664 = bitcast i8** %663 to %struct.VkPipelineTessellationDomainOriginStateCreateInfo**
  store %struct.VkPipelineTessellationDomainOriginStateCreateInfo* %24, %struct.VkPipelineTessellationDomainOriginStateCreateInfo** %664, align 8
  %665 = load i16, i16* %319, align 2
  %666 = lshr i16 %665, 9
  %667 = and i16 %666, 63
  %668 = zext i16 %667 to i32
  %669 = getelementptr inbounds %struct.VkPipelineTessellationStateCreateInfo, %struct.VkPipelineTessellationStateCreateInfo* %23, i64 0, i32 3
  store i32 %668, i32* %669, align 4
  br label %670

670:                                              ; preds = %657, %648
  %671 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 0
  store i32 28, i32* %671, align 8
  %672 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 2
  store i32 0, i32* %672, align 8
  %673 = load i64, i64* %44, align 8
  %674 = trunc i64 %673 to i32
  %675 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 3
  store i32 %674, i32* %675, align 4
  %676 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 4
  store %struct.VkPipelineShaderStageCreateInfo* %79, %struct.VkPipelineShaderStageCreateInfo** %676, align 8
  %677 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 5
  store %struct.VkPipelineVertexInputStateCreateInfo* %16, %struct.VkPipelineVertexInputStateCreateInfo** %677, align 8
  %678 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 6
  store %struct.VkPipelineInputAssemblyStateCreateInfo* %17, %struct.VkPipelineInputAssemblyStateCreateInfo** %678, align 8
  %679 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 7
  store %struct.VkPipelineTessellationStateCreateInfo* %23, %struct.VkPipelineTessellationStateCreateInfo** %679, align 8
  %680 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 8
  store %struct.VkPipelineViewportStateCreateInfo* %18, %struct.VkPipelineViewportStateCreateInfo** %680, align 8
  %681 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 9
  store %struct.VkPipelineRasterizationStateCreateInfo* %19, %struct.VkPipelineRasterizationStateCreateInfo** %681, align 8
  %682 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 10
  store %struct.VkPipelineMultisampleStateCreateInfo* %20, %struct.VkPipelineMultisampleStateCreateInfo** %682, align 8
  %683 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 11
  store %struct.VkPipelineDepthStencilStateCreateInfo* %21, %struct.VkPipelineDepthStencilStateCreateInfo** %683, align 8
  %684 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 12
  store %struct.VkPipelineColorBlendStateCreateInfo* %25, %struct.VkPipelineColorBlendStateCreateInfo** %684, align 8
  %685 = icmp eq i64 %649, 0
  %686 = select i1 %685, %struct.VkPipelineDynamicStateCreateInfo* null, %struct.VkPipelineDynamicStateCreateInfo* %40
  %687 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 13
  store %struct.VkPipelineDynamicStateCreateInfo* %686, %struct.VkPipelineDynamicStateCreateInfo** %687, align 8
  %688 = bitcast %"class.rx::vk::PipelineLayout"* %4 to i64*
  %689 = load i64, i64* %688, align 8
  %690 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 14
  %691 = bitcast %struct.VkPipelineLayout_T** %690 to i64*
  store i64 %689, i64* %691, align 8
  %692 = bitcast %"class.rx::vk::RenderPass"* %3 to i64*
  %693 = load i64, i64* %692, align 8
  %694 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 15
  %695 = bitcast %struct.VkRenderPass_T** %694 to i64*
  store i64 %693, i64* %695, align 8
  %696 = load i32, i32* %370, align 4
  %697 = and i32 %696, 63
  %698 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 16
  store i32 %697, i32* %698, align 8
  %699 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 17
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %699, align 8
  %700 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %27, i64 0, i32 18
  store i32 0, i32* %700, align 8
  %701 = call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %1) #17
  %702 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** @vkCreateGraphicsPipelines, align 8
  %703 = getelementptr inbounds %"class.rx::vk::PipelineCache", %"class.rx::vk::PipelineCache"* %2, i64 0, i32 0, i32 0
  %704 = load %struct.VkPipelineCache_T*, %struct.VkPipelineCache_T** %703, align 8
  %705 = getelementptr inbounds %"class.rx::vk::Pipeline", %"class.rx::vk::Pipeline"* %13, i64 0, i32 0, i32 0
  %706 = call i32 %702(%struct.VkDevice_T* %701, %struct.VkPipelineCache_T* %704, i32 1, %struct.VkGraphicsPipelineCreateInfo* nonnull %27, %struct.VkAllocationCallbacks* null, %struct.VkPipeline_T** %705) #17
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %713, label %708, !prof !2

708:                                              ; preds = %670
  %709 = bitcast %"class.rx::ContextVk"* %1 to void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)***
  %710 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)**, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*** %709, align 8
  %711 = getelementptr inbounds void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %710, i64 67
  %712 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %711, align 8
  call void %712(%"class.rx::ContextVk"* %1, i32 %706, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZNK2rx2vk20GraphicsPipelineDesc18initializePipelineEPNS_9ContextVkERKNS0_13PipelineCacheERKNS0_10RenderPassERKNS0_14PipelineLayoutERKN5angle7BitSetTILm16EmmEERKNSE_ILm32EmmEEPKNS0_12ShaderModuleESN_SN_SN_SN_RKNS0_23SpecializationConstantsEPNS0_8PipelineE, i64 0, i64 0), i32 2163) #17
  br label %713

713:                                              ; preds = %670, %708
  %714 = phi i32 [ 1, %708 ], [ 0, %670 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %650) #17
  %715 = load i64, i64* %592, align 8
  %716 = icmp eq i64 %715, 0
  br i1 %716, label %723, label %717

717:                                              ; preds = %713, %717
  %718 = phi i64 [ %721, %717 ], [ %715, %713 ]
  %719 = add i64 %718, -1
  store i64 %719, i64* %592, align 8
  %720 = getelementptr inbounds %"class.angle::FixedVector.1399", %"class.angle::FixedVector.1399"* %39, i64 0, i32 0, i32 0, i64 %719
  store i32 0, i32* %720, align 4
  %721 = load i64, i64* %592, align 8
  %722 = icmp eq i64 %721, 0
  br i1 %722, label %723, label %717

723:                                              ; preds = %717, %713
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %591) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %424) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %413) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %397) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %345) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %327) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165) #17
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %164) #17
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %163) #17
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %162) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %58) #17
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %57) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #17
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %54) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #17
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %51) #17
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %50) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %49) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %48) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %47) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %45) #17
  %724 = load i64, i64* %44, align 8
  %725 = icmp eq i64 %724, 0
  br i1 %725, label %733, label %726

726:                                              ; preds = %723, %726
  %727 = phi i64 [ %731, %726 ], [ %724, %723 ]
  %728 = add i64 %727, -1
  store i64 %728, i64* %44, align 8
  %729 = getelementptr inbounds %"class.angle::FixedVector.1389", %"class.angle::FixedVector.1389"* %15, i64 0, i32 0, i32 0, i64 %728
  %730 = bitcast %struct.VkPipelineShaderStageCreateInfo* %729 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %730, i8 0, i64 48, i1 false) #17
  %731 = load i64, i64* %44, align 8
  %732 = icmp eq i64 %731, 0
  br i1 %732, label %733, label %726

733:                                              ; preds = %726, %723
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %41) #17
  ret i32 %714
}

declare i32 @_ZN2gl23ConvertFormatSignednessERKN5angle6FormatE(%"struct.angle::Format"* dereferenceable(104)) local_unnamed_addr #7

declare dereferenceable(16) %"struct.gl::VertexFormat"* @_ZN2gl21GetVertexFormatFromIDEN5angle8FormatIDE(i32) local_unnamed_addr #7

declare i32 @_ZN2gl19VariableColumnCountEj(i32) local_unnamed_addr #7

declare i32 @_ZN2rx5gl_vk10GetSamplesEi(i32) local_unnamed_addr #7

declare %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"*) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc17updateVertexInputEPN5angle7BitSetTILm63EmmEEjjjNS2_8FormatIDEbj(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i32, i32, i32, i32, i1 zeroext, i32) local_unnamed_addr #8 align 2 {
  %9 = zext i32 %2 to i64
  %10 = trunc i32 %3 to i16
  %11 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 %9, i32 3
  store i16 %10, i16* %11, align 2
  %12 = trunc i32 %4 to i8
  %13 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 %9, i32 1
  store i8 %12, i8* %13, align 1
  %14 = trunc i32 %5 to i8
  %15 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 %9, i32 0
  store i8 %14, i8* %15, align 2
  %16 = zext i1 %6 to i16
  %17 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 0, i32 0, i64 %9, i32 2
  %18 = shl nuw i16 %16, 15
  %19 = trunc i32 %7 to i16
  %20 = and i16 %19, 32767
  %21 = or i16 %20, %18
  store i16 %21, i16* %17, align 2
  %22 = mul nuw nsw i64 %9, 48
  %23 = lshr i64 %22, 5
  %24 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = shl i64 3, %23
  %27 = and i64 %26, 9223372036854775807
  %28 = or i64 %27, %25
  store i64 %28, i64* %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc14updateTopologyEPN5angle7BitSetTILm63EmmEEN2gl13PrimitiveModeE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i8 zeroext) local_unnamed_addr #2 align 2 {
  %4 = tail call i32 @_ZN2rx5gl_vk20GetPrimitiveTopologyEN2gl13PrimitiveModeE(i8 zeroext %2) #17
  %5 = trunc i32 %4 to i16
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 5, i32 0
  %7 = load i16, i16* %6, align 2
  %8 = and i16 %5, 511
  %9 = and i16 %7, -512
  %10 = or i16 %9, %8
  store i16 %10, i16* %6, align 2
  %11 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = or i64 %12, 9007199254740992
  store i64 %13, i64* %11, align 8
  ret void
}

declare i32 @_ZN2rx5gl_vk20GetPrimitiveTopologyEN2gl13PrimitiveModeE(i8 zeroext) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc29updatePrimitiveRestartEnabledEPN5angle7BitSetTILm63EmmEEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %4 = zext i1 %2 to i16
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 5, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = shl nuw i16 %4, 15
  %8 = and i16 %6, 32767
  %9 = or i16 %8, %7
  store i16 %9, i16* %5, align 2
  %10 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = or i64 %11, 9007199254740992
  store i64 %12, i64* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc11setCullModeE18VkCullModeFlagBits(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = shl i32 %1, 12
  %6 = and i32 %5, 61440
  %7 = and i32 %4, -61441
  %8 = or i32 %7, %6
  store i32 %8, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc14updateCullModeEPN5angle7BitSetTILm63EmmEERKN2gl15RasterizerStateE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::RasterizerState"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = tail call i32 @_ZN2rx5gl_vk11GetCullModeERKN2gl15RasterizerStateE(%"struct.gl::RasterizerState"* dereferenceable(24) %2) #17
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %4, 12
  %8 = and i32 %7, 61440
  %9 = and i32 %6, -61441
  %10 = or i32 %9, %8
  store i32 %10, i32* %5, align 4
  %11 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = or i64 %12, 134217728
  store i64 %13, i64* %11, align 8
  ret void
}

declare i32 @_ZN2rx5gl_vk11GetCullModeERKN2gl15RasterizerStateE(%"struct.gl::RasterizerState"* dereferenceable(24)) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc15updateFrontFaceEPN5angle7BitSetTILm63EmmEERKN2gl15RasterizerStateEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::RasterizerState"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %2, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call i32 @_ZN2rx5gl_vk12GetFrontFaceEjb(i32 %6, i1 zeroext %3) #17
  %8 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = shl i32 %7, 16
  %11 = and i32 %10, 983040
  %12 = and i32 %9, -983041
  %13 = or i32 %12, %11
  store i32 %13, i32* %8, align 4
  %14 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = or i64 %15, 134217728
  store i64 %16, i64* %14, align 8
  ret void
}

declare i32 @_ZN2rx5gl_vk12GetFrontFaceEjb(i32, i1 zeroext) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc15updateLineWidthEPN5angle7BitSetTILm63EmmEEf(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, float) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 6
  store float %2, float* %4, align 4
  %5 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, 17179869184
  store i64 %7, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc30updateRasterizerDiscardEnabledEPN5angle7BitSetTILm63EmmEEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %4 = zext i1 %2 to i32
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = shl nuw nsw i32 %4, 7
  %8 = and i32 %6, -129
  %9 = or i32 %8, %7
  store i32 %9, i32* %5, align 4
  %10 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = or i64 %11, 134217728
  store i64 %12, i64* %10, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2rx2vk20GraphicsPipelineDesc23getRasterizationSamplesEv(%"class.rx::vk::GraphicsPipelineDesc"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = lshr i32 %3, 24
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc23setRasterizationSamplesEj(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = shl i32 %1, 24
  %6 = and i32 %4, 16777215
  %7 = or i32 %6, %5
  store i32 %7, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc26updateRasterizationSamplesEPN5angle7BitSetTILm63EmmEEj(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = shl i32 %2, 24
  %7 = and i32 %5, 16777215
  %8 = or i32 %7, %6
  store i32 %8, i32* %4, align 4
  %9 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %10, 134217728
  store i64 %11, i64* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc27updateAlphaToCoverageEnableEPN5angle7BitSetTILm63EmmEEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %4 = zext i1 %2 to i32
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = shl nuw nsw i32 %4, 22
  %8 = and i32 %6, -4194305
  %9 = or i32 %8, %7
  store i32 %9, i32* %5, align 4
  %10 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = or i64 %11, 134217728
  store i64 %12, i64* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc22updateAlphaToOneEnableEPN5angle7BitSetTILm63EmmEEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %4 = zext i1 %2 to i32
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = shl nuw nsw i32 %4, 23
  %8 = and i32 %6, -8388609
  %9 = or i32 %8, %7
  store i32 %9, i32* %5, align 4
  %10 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = or i64 %11, 134217728
  store i64 %12, i64* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc16updateSampleMaskEPN5angle7BitSetTILm63EmmEEjj(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = zext i32 %2 to i64
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 2, i64 %5
  store i32 %3, i32* %6, align 4
  %7 = shl i64 536870912, %5
  %8 = and i64 %7, 9223372036854775807
  %9 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %10, %8
  store i64 %11, i64* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc19updateSampleShadingEPN5angle7BitSetTILm63EmmEEbf(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i1 zeroext, float) local_unnamed_addr #8 align 2 {
  %5 = zext i1 %2 to i32
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = shl nuw nsw i32 %5, 21
  %9 = and i32 %7, -2097153
  %10 = or i32 %9, %8
  store i32 %10, i32* %6, align 4
  %11 = select i1 %2, float %3, float 1.000000e+00
  %12 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 1
  store float %11, float* %12, align 4
  %13 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = or i64 %14, 402653184
  store i64 %15, i64* %13, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc16updateBlendColorEPN5angle7BitSetTILm63EmmEERKNS2_5ColorIfEE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.angle::Color"* nocapture readonly dereferenceable(16)) local_unnamed_addr #8 align 2 {
  %4 = bitcast %"struct.angle::Color"* %2 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 2
  %7 = bitcast [4 x float]* %6 to i32*
  store i32 %5, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %2, i64 0, i32 1
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 2, i64 1
  %12 = bitcast float* %11 to i32*
  store i32 %10, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %2, i64 0, i32 2
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 2, i64 2
  %17 = bitcast float* %16 to i32*
  store i32 %15, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %2, i64 0, i32 3
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 2, i64 3
  %22 = bitcast float* %21 to i32*
  store i32 %20, i32* %22, align 4
  %23 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = or i64 %24, 8444249301319680
  store i64 %25, i64* %23, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc18updateBlendEnabledEPN5angle7BitSetTILm63EmmEENS3_ILm8EhmEE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"class.angle::BitSetT"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %2, i64 0, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 4
  store i8 %5, i8* %6, align 1
  %7 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = or i64 %8, 9007199254740992
  store i64 %9, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc20updateBlendEquationsEPN5angle7BitSetTILm63EmmEERKN2gl13BlendStateExtE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"class.gl::BlendStateExt"* dereferenceable(96)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %2, i64 0, i32 12
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  br label %10

9:                                                ; preds = %32, %3
  ret void

10:                                               ; preds = %7, %32
  %11 = phi i64 [ 0, %7 ], [ %42, %32 ]
  %12 = tail call i32 @_ZNK2gl13BlendStateExt23getEquationColorIndexedEm(%"class.gl::BlendStateExt"* %2, i64 %11) #17
  %13 = add i32 %12, -32775
  %14 = icmp ult i32 %13, 5
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = sext i32 %13 to i64
  %17 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2rx2vk20GraphicsPipelineDesc20updateBlendEquationsEPN5angle7BitSetTILm63EmmEERKN2gl13BlendStateExtE, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  br label %19

19:                                               ; preds = %15, %10
  %20 = phi i32 [ 0, %10 ], [ %18, %15 ]
  %21 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 1, i64 %11, i32 0
  %22 = load i32, i32* %21, align 2
  %23 = and i32 %22, -64513
  %24 = or i32 %23, %20
  store i32 %24, i32* %21, align 2
  %25 = tail call i32 @_ZNK2gl13BlendStateExt23getEquationAlphaIndexedEm(%"class.gl::BlendStateExt"* %2, i64 %11) #17
  %26 = add i32 %25, -32775
  %27 = icmp ult i32 %26, 5
  br i1 %27, label %28, label %32

28:                                               ; preds = %19
  %29 = sext i32 %26 to i64
  %30 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2rx2vk20GraphicsPipelineDesc20updateBlendEquationsEPN5angle7BitSetTILm63EmmEERKN2gl13BlendStateExtE.4, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %28, %19
  %33 = phi i32 [ 0, %19 ], [ %31, %28 ]
  %34 = load i32, i32* %21, align 2
  %35 = and i32 %34, 67108863
  %36 = or i32 %35, %33
  store i32 %36, i32* %21, align 2
  %37 = and i64 %11, 576460752303423487
  %38 = shl i64 2199023255552, %37
  %39 = and i64 %38, 9223372036854775807
  %40 = load i64, i64* %8, align 8
  %41 = or i64 %40, %39
  store i64 %41, i64* %8, align 8
  %42 = add nuw i64 %11, 1
  %43 = load i64, i64* %4, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %10, label %9
}

declare i32 @_ZNK2gl13BlendStateExt23getEquationColorIndexedEm(%"class.gl::BlendStateExt"*, i64) local_unnamed_addr #7

declare i32 @_ZNK2gl13BlendStateExt23getEquationAlphaIndexedEm(%"class.gl::BlendStateExt"*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc16updateBlendFuncsEPN5angle7BitSetTILm63EmmEERKN2gl13BlendStateExtE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"class.gl::BlendStateExt"* dereferenceable(96)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %2, i64 0, i32 12
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  br label %10

9:                                                ; preds = %10, %3
  ret void

10:                                               ; preds = %7, %10
  %11 = phi i64 [ 0, %7 ], [ %49, %10 ]
  %12 = tail call i32 @_ZNK2gl13BlendStateExt18getSrcColorIndexedEm(%"class.gl::BlendStateExt"* %2, i64 %11) #17
  %13 = tail call fastcc zeroext i8 @_ZN2rx2vk12_GLOBAL__N_117PackGLBlendFactorEj(i32 %12)
  %14 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 1, i64 %11, i32 0
  %15 = load i32, i32* %14, align 2
  %16 = and i8 %13, 31
  %17 = zext i8 %16 to i32
  %18 = and i32 %15, -32
  %19 = or i32 %18, %17
  store i32 %19, i32* %14, align 2
  %20 = tail call i32 @_ZNK2gl13BlendStateExt18getDstColorIndexedEm(%"class.gl::BlendStateExt"* %2, i64 %11) #17
  %21 = tail call fastcc zeroext i8 @_ZN2rx2vk12_GLOBAL__N_117PackGLBlendFactorEj(i32 %20)
  %22 = load i32, i32* %14, align 2
  %23 = and i8 %21, 31
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 5
  %26 = and i32 %22, -993
  %27 = or i32 %25, %26
  store i32 %27, i32* %14, align 2
  %28 = tail call i32 @_ZNK2gl13BlendStateExt18getSrcAlphaIndexedEm(%"class.gl::BlendStateExt"* %2, i64 %11) #17
  %29 = tail call fastcc zeroext i8 @_ZN2rx2vk12_GLOBAL__N_117PackGLBlendFactorEj(i32 %28)
  %30 = load i32, i32* %14, align 2
  %31 = and i8 %29, 31
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 16
  %34 = and i32 %30, -2031617
  %35 = or i32 %33, %34
  store i32 %35, i32* %14, align 2
  %36 = tail call i32 @_ZNK2gl13BlendStateExt18getDstAlphaIndexedEm(%"class.gl::BlendStateExt"* %2, i64 %11) #17
  %37 = tail call fastcc zeroext i8 @_ZN2rx2vk12_GLOBAL__N_117PackGLBlendFactorEj(i32 %36)
  %38 = load i32, i32* %14, align 2
  %39 = and i8 %37, 31
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 21
  %42 = and i32 %38, -65011713
  %43 = or i32 %41, %42
  store i32 %43, i32* %14, align 2
  %44 = and i64 %11, 576460752303423487
  %45 = shl i64 2199023255552, %44
  %46 = and i64 %45, 9223372036854775807
  %47 = load i64, i64* %8, align 8
  %48 = or i64 %47, %46
  store i64 %48, i64* %8, align 8
  %49 = add nuw i64 %11, 1
  %50 = load i64, i64* %4, align 8
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %10, label %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal fastcc zeroext i8 @_ZN2rx2vk12_GLOBAL__N_117PackGLBlendFactorEj(i32) unnamed_addr #6 {
  switch i32 %0, label %20 [
    i32 35067, label %19
    i32 1, label %2
    i32 768, label %3
    i32 774, label %4
    i32 769, label %5
    i32 770, label %6
    i32 771, label %7
    i32 772, label %8
    i32 773, label %9
    i32 775, label %10
    i32 776, label %11
    i32 32769, label %12
    i32 32771, label %13
    i32 32770, label %14
    i32 32772, label %15
    i32 35065, label %16
    i32 34185, label %17
    i32 35066, label %18
  ]

2:                                                ; preds = %1
  br label %20

3:                                                ; preds = %1
  br label %20

4:                                                ; preds = %1
  br label %20

5:                                                ; preds = %1
  br label %20

6:                                                ; preds = %1
  br label %20

7:                                                ; preds = %1
  br label %20

8:                                                ; preds = %1
  br label %20

9:                                                ; preds = %1
  br label %20

10:                                               ; preds = %1
  br label %20

11:                                               ; preds = %1
  br label %20

12:                                               ; preds = %1
  br label %20

13:                                               ; preds = %1
  br label %20

14:                                               ; preds = %1
  br label %20

15:                                               ; preds = %1
  br label %20

16:                                               ; preds = %1
  br label %20

17:                                               ; preds = %1
  br label %20

18:                                               ; preds = %1
  br label %20

19:                                               ; preds = %1
  br label %20

20:                                               ; preds = %1, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %21 = phi i8 [ 18, %19 ], [ 16, %18 ], [ 17, %17 ], [ 15, %16 ], [ 13, %15 ], [ 11, %14 ], [ 12, %13 ], [ 10, %12 ], [ 14, %11 ], [ 5, %10 ], [ 9, %9 ], [ 8, %8 ], [ 7, %7 ], [ 6, %6 ], [ 3, %5 ], [ 4, %4 ], [ 2, %3 ], [ 1, %2 ], [ 0, %1 ]
  ret i8 %21
}

declare i32 @_ZNK2gl13BlendStateExt18getSrcColorIndexedEm(%"class.gl::BlendStateExt"*, i64) local_unnamed_addr #7

declare i32 @_ZNK2gl13BlendStateExt18getDstColorIndexedEm(%"class.gl::BlendStateExt"*, i64) local_unnamed_addr #7

declare i32 @_ZNK2gl13BlendStateExt18getSrcAlphaIndexedEm(%"class.gl::BlendStateExt"*, i64) local_unnamed_addr #7

declare i32 @_ZNK2gl13BlendStateExt18getDstAlphaIndexedEm(%"class.gl::BlendStateExt"*, i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc18setColorWriteMasksEmRKN5angle7BitSetTILm8EhmEES6_(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i64, %"class.angle::BitSetT"* nocapture readonly dereferenceable(1), %"class.angle::BitSetT"* nocapture readonly dereferenceable(1)) local_unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %2, i64 0, i32 0
  %7 = trunc i64 %1 to i8
  %8 = load i8, i8* %5, align 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %4
  %12 = load i8, i8* %6, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  %15 = and i8 %7, -9
  %16 = select i1 %14, i8 %7, i8 %15
  br label %17

17:                                               ; preds = %4, %11
  %18 = phi i8 [ %16, %11 ], [ 0, %4 ]
  %19 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 0
  %20 = load i8, i8* %19, align 1
  %21 = and i8 %20, -16
  %22 = or i8 %21, %18
  store i8 %22, i8* %19, align 1
  %23 = load i8, i8* %5, align 1
  %24 = and i8 %23, 2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %17
  %27 = load i8, i8* %6, align 1
  %28 = and i8 %27, 2
  %29 = icmp eq i8 %28, 0
  %30 = lshr i64 %1, 4
  %31 = trunc i64 %30 to i8
  %32 = select i1 %29, i8 -16, i8 112
  %33 = and i8 %32, %31
  br label %34

34:                                               ; preds = %26, %17
  %35 = phi i8 [ %33, %26 ], [ 0, %17 ]
  %36 = and i8 %18, 15
  %37 = or i8 %36, %35
  store i8 %37, i8* %19, align 1
  %38 = lshr i64 %1, 16
  %39 = trunc i64 %38 to i8
  %40 = load i8, i8* %5, align 1
  %41 = and i8 %40, 4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %34
  %44 = load i8, i8* %6, align 1
  %45 = and i8 %44, 4
  %46 = icmp eq i8 %45, 0
  %47 = and i8 %39, -9
  %48 = select i1 %46, i8 %39, i8 %47
  br label %49

49:                                               ; preds = %43, %34
  %50 = phi i8 [ %48, %43 ], [ 0, %34 ]
  %51 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = and i8 %52, -16
  %54 = or i8 %53, %50
  store i8 %54, i8* %51, align 1
  %55 = load i8, i8* %5, align 1
  %56 = and i8 %55, 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %49
  %59 = load i8, i8* %6, align 1
  %60 = and i8 %59, 8
  %61 = icmp eq i8 %60, 0
  %62 = lshr i64 %1, 20
  %63 = trunc i64 %62 to i8
  %64 = select i1 %61, i8 -16, i8 112
  %65 = and i8 %64, %63
  br label %66

66:                                               ; preds = %58, %49
  %67 = phi i8 [ %65, %58 ], [ 0, %49 ]
  %68 = and i8 %50, 15
  %69 = or i8 %68, %67
  store i8 %69, i8* %51, align 1
  %70 = lshr i64 %1, 32
  %71 = trunc i64 %70 to i8
  %72 = load i8, i8* %5, align 1
  %73 = and i8 %72, 16
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %66
  %76 = load i8, i8* %6, align 1
  %77 = and i8 %76, 16
  %78 = icmp eq i8 %77, 0
  %79 = and i8 %71, -9
  %80 = select i1 %78, i8 %71, i8 %79
  br label %81

81:                                               ; preds = %75, %66
  %82 = phi i8 [ %80, %75 ], [ 0, %66 ]
  %83 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = and i8 %84, -16
  %86 = or i8 %85, %82
  store i8 %86, i8* %83, align 1
  %87 = load i8, i8* %5, align 1
  %88 = and i8 %87, 32
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %81
  %91 = load i8, i8* %6, align 1
  %92 = and i8 %91, 32
  %93 = icmp eq i8 %92, 0
  %94 = lshr i64 %1, 36
  %95 = trunc i64 %94 to i8
  %96 = select i1 %93, i8 -16, i8 112
  %97 = and i8 %96, %95
  br label %98

98:                                               ; preds = %90, %81
  %99 = phi i8 [ %97, %90 ], [ 0, %81 ]
  %100 = and i8 %82, 15
  %101 = or i8 %100, %99
  store i8 %101, i8* %83, align 1
  %102 = lshr i64 %1, 48
  %103 = trunc i64 %102 to i8
  %104 = load i8, i8* %5, align 1
  %105 = and i8 %104, 64
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %98
  %108 = load i8, i8* %6, align 1
  %109 = and i8 %108, 64
  %110 = icmp eq i8 %109, 0
  %111 = and i8 %103, -9
  %112 = select i1 %110, i8 %103, i8 %111
  br label %113

113:                                              ; preds = %107, %98
  %114 = phi i8 [ %112, %107 ], [ 0, %98 ]
  %115 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 3
  %116 = load i8, i8* %115, align 1
  %117 = and i8 %116, -16
  %118 = or i8 %117, %114
  store i8 %118, i8* %115, align 1
  %119 = load i8, i8* %5, align 1
  %120 = icmp sgt i8 %119, -1
  br i1 %120, label %128, label %121

121:                                              ; preds = %113
  %122 = load i8, i8* %6, align 1
  %123 = lshr i64 %1, 52
  %124 = trunc i64 %123 to i8
  %125 = and i8 %122, -128
  %126 = xor i8 %125, -16
  %127 = and i8 %126, %124
  br label %128

128:                                              ; preds = %121, %113
  %129 = phi i8 [ %127, %121 ], [ 0, %113 ]
  %130 = and i8 %114, 15
  %131 = or i8 %130, %129
  store i8 %131, i8* %115, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc23setSingleColorWriteMaskEjj(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i32, i32) local_unnamed_addr #8 align 2 {
  %4 = trunc i32 %2 to i8
  %5 = lshr i32 %1, 1
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  %8 = zext i32 %5 to i64
  %9 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 0, i64 %8
  %10 = load i8, i8* %9, align 1
  br i1 %7, label %11, label %14

11:                                               ; preds = %3
  %12 = and i8 %10, -16
  %13 = or i8 %12, %4
  br label %18

14:                                               ; preds = %3
  %15 = and i8 %10, 15
  %16 = shl i8 %4, 4
  %17 = or i8 %15, %16
  br label %18

18:                                               ; preds = %11, %14
  %19 = phi i8 [ %17, %14 ], [ %13, %11 ]
  store i8 %19, i8* %9, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc21updateColorWriteMasksEPN5angle7BitSetTILm63EmmEEmRKNS3_ILm8EhmEES8_(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i64, %"class.angle::BitSetT"* nocapture readonly dereferenceable(1), %"class.angle::BitSetT"* nocapture readonly dereferenceable(1)) local_unnamed_addr #8 align 2 {
  tail call void @_ZN2rx2vk20GraphicsPipelineDesc18setColorWriteMasksEmRKN5angle7BitSetTILm8EhmEES6_(%"class.rx::vk::GraphicsPipelineDesc"* %0, i64 %2, %"class.angle::BitSetT"* dereferenceable(1) %3, %"class.angle::BitSetT"* dereferenceable(1) %4)
  %6 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = or i64 %7, 1099511627776
  store i64 %8, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc19setDepthTestEnabledEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i8, i8* %4, align 4
  %6 = and i8 %5, -4
  %7 = or i8 %6, %3
  store i8 %7, i8* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc20setDepthWriteEnabledEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i8, i8* %4, align 4
  %6 = shl nuw nsw i8 %3, 2
  %7 = and i8 %5, -13
  %8 = or i8 %7, %6
  store i8 %8, i8* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc12setDepthFuncE11VkCompareOp(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = trunc i32 %1 to i8
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 3, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %3, 15
  %7 = and i8 %5, -16
  %8 = or i8 %7, %6
  store i8 %8, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc20setDepthClampEnabledEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = shl nuw nsw i32 %3, 6
  %7 = and i32 %5, -65
  %8 = or i32 %7, %6
  store i32 %8, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc21setStencilTestEnabledEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i8, i8* %4, align 4
  %6 = shl nuw nsw i8 %3, 6
  %7 = and i8 %5, 63
  %8 = or i8 %7, %6
  store i8 %8, i8* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc20setStencilFrontFuncsEh11VkCompareOph(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 1
  store i8 %1, i8* %5, align 1
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 1
  store i8 %3, i8* %6, align 2
  %7 = trunc i32 %2 to i16
  %8 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %9 = load i16, i16* %8, align 4
  %10 = shl i16 %7, 12
  %11 = and i16 %9, 4095
  %12 = or i16 %11, %10
  store i16 %12, i16* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc19setStencilBackFuncsEh11VkCompareOph(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 2
  store i8 %1, i8* %5, align 2
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 1
  store i8 %3, i8* %6, align 2
  %7 = trunc i32 %2 to i16
  %8 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %9 = load i16, i16* %8, align 4
  %10 = shl i16 %7, 12
  %11 = and i16 %9, 4095
  %12 = or i16 %11, %10
  store i16 %12, i16* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc18setStencilFrontOpsE11VkStencilOpS2_S2_(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i32, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = trunc i32 %1 to i16
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %7 = load i16, i16* %6, align 4
  %8 = and i16 %5, 15
  %9 = and i16 %7, -4096
  %10 = trunc i32 %2 to i16
  %11 = shl i16 %10, 4
  %12 = and i16 %11, 240
  %13 = trunc i32 %3 to i16
  %14 = shl i16 %13, 8
  %15 = and i16 %14, 3840
  %16 = or i16 %12, %8
  %17 = or i16 %16, %15
  %18 = or i16 %17, %9
  store i16 %18, i16* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc17setStencilBackOpsE11VkStencilOpS2_S2_(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i32, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = trunc i32 %1 to i16
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %7 = load i16, i16* %6, align 4
  %8 = and i16 %5, 15
  %9 = and i16 %7, -4096
  %10 = trunc i32 %2 to i16
  %11 = shl i16 %10, 4
  %12 = and i16 %11, 240
  %13 = trunc i32 %3 to i16
  %14 = shl i16 %13, 8
  %15 = and i16 %14, 3840
  %16 = or i16 %12, %8
  %17 = or i16 %16, %15
  %18 = or i16 %17, %9
  store i16 %18, i16* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc24setStencilFrontWriteMaskEh(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i8 zeroext) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 2
  store i8 %1, i8* %3, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc23setStencilBackWriteMaskEh(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i8 zeroext) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 2
  store i8 %1, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc22updateDepthTestEnabledEPN5angle7BitSetTILm63EmmEERKN2gl17DepthStencilStateEPKNS6_11FramebufferE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60), %"class.gl::Framebuffer"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !37
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK2gl11Framebuffer8hasDepthEv(%"class.gl::Framebuffer"* %3) #17
  %10 = zext i1 %9 to i8
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi i8 [ 0, %4 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load i8, i8* %13, align 4
  %15 = and i8 %14, -4
  %16 = or i8 %15, %12
  store i8 %16, i8* %13, align 4
  %17 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = or i64 %18, 34359738368
  store i64 %19, i64* %17, align 8
  ret void
}

declare zeroext i1 @_ZNK2gl11Framebuffer8hasDepthEv(%"class.gl::Framebuffer"*) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc15updateDepthFuncEPN5angle7BitSetTILm63EmmEERKN2gl17DepthStencilStateE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60)) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, -513
  %7 = icmp ult i32 %6, 7
  %8 = trunc i32 %6 to i8
  %9 = add i8 %8, 1
  %10 = select i1 %7, i8 %9, i8 0
  %11 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 3, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, -16
  %14 = or i8 %13, %10
  store i8 %14, i8* %11, align 1
  %15 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = or i64 %16, 34359738368
  store i64 %17, i64* %15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc21updateSurfaceRotationEPN5angle7BitSetTILm63EmmEENS_15SurfaceRotationE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %4 = trunc i32 %2 to i8
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 3, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = shl i8 %4, 4
  %8 = and i8 %7, 112
  %9 = and i8 %6, -113
  %10 = or i8 %9, %8
  store i8 %10, i8* %5, align 1
  %11 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = or i64 %12, 34359738368
  store i64 %13, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc23updateDepthWriteEnabledEPN5angle7BitSetTILm63EmmEERKN2gl17DepthStencilStateEPKNS6_11FramebufferE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60), %"class.gl::Framebuffer"*) local_unnamed_addr #2 align 2 {
  %5 = tail call zeroext i1 @_ZNK2gl11Framebuffer8hasDepthEv(%"class.gl::Framebuffer"* %3) #17
  %6 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 4
  %8 = icmp ne i8 %7, 0
  %9 = and i1 %5, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load i8, i8* %11, align 4
  %13 = shl nuw nsw i8 %10, 2
  %14 = and i8 %12, -13
  %15 = or i8 %13, %14
  store i8 %15, i8* %11, align 4
  %16 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = or i64 %17, 34359738368
  store i64 %18, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc24updateStencilTestEnabledEPN5angle7BitSetTILm63EmmEERKN2gl17DepthStencilStateEPKNS6_11FramebufferE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60), %"class.gl::Framebuffer"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 3
  %6 = load i8, i8* %5, align 1, !range !37
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK2gl11Framebuffer10hasStencilEv(%"class.gl::Framebuffer"* %3) #17
  %10 = zext i1 %9 to i8
  %11 = shl nuw nsw i8 %10, 6
  br label %12

12:                                               ; preds = %4, %8
  %13 = phi i8 [ 0, %4 ], [ %11, %8 ]
  %14 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %15, 63
  %17 = or i8 %16, %13
  store i8 %17, i8* %14, align 4
  %18 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = or i64 %19, 34359738368
  store i64 %20, i64* %18, align 8
  ret void
}

declare zeroext i1 @_ZNK2gl11Framebuffer10hasStencilEv(%"class.gl::Framebuffer"*) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc23updateStencilFrontFuncsEPN5angle7BitSetTILm63EmmEEiRKN2gl17DepthStencilStateE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i32, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60)) local_unnamed_addr #8 align 2 {
  %5 = trunc i32 %2 to i8
  %6 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %3, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -513
  %9 = icmp ult i32 %8, 7
  %10 = trunc i32 %8 to i16
  %11 = shl i16 %10, 12
  %12 = add i16 %11, 4096
  %13 = select i1 %9, i16 %12, i16 0
  %14 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %3, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 1
  store i8 %5, i8* %17, align 1
  %18 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 1
  store i8 %16, i8* %18, align 2
  %19 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %20 = load i16, i16* %19, align 4
  %21 = and i16 %20, 4095
  %22 = or i16 %21, %13
  store i16 %22, i16* %19, align 4
  %23 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = or i64 %24, 309237645312
  store i64 %25, i64* %23, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc22updateStencilBackFuncsEPN5angle7BitSetTILm63EmmEEiRKN2gl17DepthStencilStateE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i32, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60)) local_unnamed_addr #8 align 2 {
  %5 = trunc i32 %2 to i8
  %6 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %3, i64 0, i32 10
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -513
  %9 = icmp ult i32 %8, 7
  %10 = trunc i32 %8 to i16
  %11 = shl i16 %10, 12
  %12 = add i16 %11, 4096
  %13 = select i1 %9, i16 %12, i16 0
  %14 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %3, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 2
  store i8 %5, i8* %17, align 2
  %18 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 1
  store i8 %16, i8* %18, align 2
  %19 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %20 = load i16, i16* %19, align 4
  %21 = and i16 %20, 4095
  %22 = or i16 %21, %13
  store i16 %22, i16* %19, align 4
  %23 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = or i64 %24, 584115552256
  store i64 %25, i64* %23, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc21updateStencilFrontOpsEPN5angle7BitSetTILm63EmmEERKN2gl17DepthStencilStateE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60)) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %13 [
    i32 5386, label %12
    i32 0, label %6
    i32 7681, label %7
    i32 7682, label %8
    i32 7683, label %9
    i32 34055, label %10
    i32 34056, label %11
  ]

6:                                                ; preds = %3
  br label %13

7:                                                ; preds = %3
  br label %13

8:                                                ; preds = %3
  br label %13

9:                                                ; preds = %3
  br label %13

10:                                               ; preds = %3
  br label %13

11:                                               ; preds = %3
  br label %13

12:                                               ; preds = %3
  br label %13

13:                                               ; preds = %3, %6, %7, %8, %9, %10, %11, %12
  %14 = phi i16 [ 5, %12 ], [ 7, %11 ], [ 6, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %3 ]
  %15 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 8
  %16 = load i32, i32* %15, align 4
  switch i32 %16, label %24 [
    i32 5386, label %23
    i32 0, label %17
    i32 7681, label %18
    i32 7682, label %19
    i32 7683, label %20
    i32 34055, label %21
    i32 34056, label %22
  ]

17:                                               ; preds = %13
  br label %24

18:                                               ; preds = %13
  br label %24

19:                                               ; preds = %13
  br label %24

20:                                               ; preds = %13
  br label %24

21:                                               ; preds = %13
  br label %24

22:                                               ; preds = %13
  br label %24

23:                                               ; preds = %13
  br label %24

24:                                               ; preds = %13, %17, %18, %19, %20, %21, %22, %23
  %25 = phi i16 [ 80, %23 ], [ 112, %22 ], [ 96, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %13 ]
  %26 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  switch i32 %27, label %35 [
    i32 5386, label %34
    i32 0, label %28
    i32 7681, label %29
    i32 7682, label %30
    i32 7683, label %31
    i32 34055, label %32
    i32 34056, label %33
  ]

28:                                               ; preds = %24
  br label %35

29:                                               ; preds = %24
  br label %35

30:                                               ; preds = %24
  br label %35

31:                                               ; preds = %24
  br label %35

32:                                               ; preds = %24
  br label %35

33:                                               ; preds = %24
  br label %35

34:                                               ; preds = %24
  br label %35

35:                                               ; preds = %24, %28, %29, %30, %31, %32, %33, %34
  %36 = phi i16 [ 1280, %34 ], [ 1792, %33 ], [ 1536, %32 ], [ 1024, %31 ], [ 768, %30 ], [ 512, %29 ], [ 256, %28 ], [ 0, %24 ]
  %37 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %38 = load i16, i16* %37, align 4
  %39 = and i16 %38, -4096
  %40 = or i16 %25, %14
  %41 = or i16 %40, %36
  %42 = or i16 %41, %39
  store i16 %42, i16* %37, align 4
  %43 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = or i64 %44, 274877906944
  store i64 %45, i64* %43, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc20updateStencilBackOpsEPN5angle7BitSetTILm63EmmEERKN2gl17DepthStencilStateE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60)) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 12
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %13 [
    i32 5386, label %12
    i32 0, label %6
    i32 7681, label %7
    i32 7682, label %8
    i32 7683, label %9
    i32 34055, label %10
    i32 34056, label %11
  ]

6:                                                ; preds = %3
  br label %13

7:                                                ; preds = %3
  br label %13

8:                                                ; preds = %3
  br label %13

9:                                                ; preds = %3
  br label %13

10:                                               ; preds = %3
  br label %13

11:                                               ; preds = %3
  br label %13

12:                                               ; preds = %3
  br label %13

13:                                               ; preds = %3, %6, %7, %8, %9, %10, %11, %12
  %14 = phi i16 [ 5, %12 ], [ 7, %11 ], [ 6, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %3 ]
  %15 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 14
  %16 = load i32, i32* %15, align 4
  switch i32 %16, label %24 [
    i32 5386, label %23
    i32 0, label %17
    i32 7681, label %18
    i32 7682, label %19
    i32 7683, label %20
    i32 34055, label %21
    i32 34056, label %22
  ]

17:                                               ; preds = %13
  br label %24

18:                                               ; preds = %13
  br label %24

19:                                               ; preds = %13
  br label %24

20:                                               ; preds = %13
  br label %24

21:                                               ; preds = %13
  br label %24

22:                                               ; preds = %13
  br label %24

23:                                               ; preds = %13
  br label %24

24:                                               ; preds = %13, %17, %18, %19, %20, %21, %22, %23
  %25 = phi i16 [ 80, %23 ], [ 112, %22 ], [ 96, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %13 ]
  %26 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 13
  %27 = load i32, i32* %26, align 4
  switch i32 %27, label %35 [
    i32 5386, label %34
    i32 0, label %28
    i32 7681, label %29
    i32 7682, label %30
    i32 7683, label %31
    i32 34055, label %32
    i32 34056, label %33
  ]

28:                                               ; preds = %24
  br label %35

29:                                               ; preds = %24
  br label %35

30:                                               ; preds = %24
  br label %35

31:                                               ; preds = %24
  br label %35

32:                                               ; preds = %24
  br label %35

33:                                               ; preds = %24
  br label %35

34:                                               ; preds = %24
  br label %35

35:                                               ; preds = %24, %28, %29, %30, %31, %32, %33, %34
  %36 = phi i16 [ 1280, %34 ], [ 1792, %33 ], [ 1536, %32 ], [ 1024, %31 ], [ 768, %30 ], [ 512, %29 ], [ 256, %28 ], [ 0, %24 ]
  %37 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %38 = load i16, i16* %37, align 4
  %39 = and i16 %38, -4096
  %40 = or i16 %25, %14
  %41 = or i16 %40, %36
  %42 = or i16 %41, %39
  store i16 %42, i16* %37, align 4
  %43 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = or i64 %44, 549755813888
  store i64 %45, i64* %43, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc27updateStencilFrontWriteMaskEPN5angle7BitSetTILm63EmmEERKN2gl17DepthStencilStateEPKNS6_11FramebufferE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60), %"class.gl::Framebuffer"*) local_unnamed_addr #2 align 2 {
  %5 = tail call zeroext i1 @_ZNK2gl11Framebuffer10hasStencilEv(%"class.gl::Framebuffer"* %3) #17
  %6 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i8
  %9 = select i1 %5, i8 %8, i8 0
  %10 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 6, i32 2
  store i8 %9, i8* %10, align 1
  %11 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = or i64 %12, 274877906944
  store i64 %13, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc26updateStencilBackWriteMaskEPN5angle7BitSetTILm63EmmEERKN2gl17DepthStencilStateEPKNS6_11FramebufferE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60), %"class.gl::Framebuffer"*) local_unnamed_addr #2 align 2 {
  %5 = tail call zeroext i1 @_ZNK2gl11Framebuffer10hasStencilEv(%"class.gl::Framebuffer"* %3) #17
  %6 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i8
  %9 = select i1 %5, i8 %8, i8 0
  %10 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 3, i32 7, i32 2
  store i8 %9, i8* %10, align 1
  %11 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = or i64 %12, 549755813888
  store i64 %13, i64* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc30updatePolygonOffsetFillEnabledEPN5angle7BitSetTILm63EmmEEb(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %4 = zext i1 %2 to i32
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = shl nuw nsw i32 %4, 20
  %8 = and i32 %6, -1048577
  %9 = or i32 %8, %7
  store i32 %9, i32* %5, align 4
  %10 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = or i64 %11, 134217728
  store i64 %12, i64* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc19updatePolygonOffsetEPN5angle7BitSetTILm63EmmEERKN2gl15RasterizerStateE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"struct.gl::RasterizerState"* nocapture readonly dereferenceable(24)) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %2, i64 0, i32 4
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 5
  %8 = bitcast float* %7 to i32*
  store i32 %6, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %2, i64 0, i32 5
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 4
  %13 = bitcast float* %12 to i32*
  store i32 %11, i32* %13, align 4
  %14 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = or i64 %15, 12884901888
  store i64 %16, i64* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc17setRenderPassDescERKNS0_14RenderPassDescE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.rx::vk::RenderPassDesc"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 12, i1 false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc11setViewportERK10VkViewport(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %struct.VkViewport* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 5
  %4 = bitcast %struct.VkViewport* %3 to i8*
  %5 = bitcast %struct.VkViewport* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc14updateViewportEPN5angle7BitSetTILm63EmmEERK10VkViewport(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %struct.VkViewport* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 5
  %5 = bitcast %struct.VkViewport* %4 to i8*
  %6 = bitcast %struct.VkViewport* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = or i64 %8, 1134907106097364992
  store i64 %9, i64* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc16updateDepthRangeEPN5angle7BitSetTILm63EmmEEff(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, float, float) local_unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 5, i32 4
  store float %2, float* %5, align 4
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 5, i32 5
  store float %3, float* %6, align 4
  %7 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = or i64 %8, 864691128455135232
  store i64 %9, i64* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc17setDynamicScissorEv(%"class.rx::vk::GraphicsPipelineDesc"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 0
  store i16 -1, i16* %2, align 4
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 1
  store i16 0, i16* %3, align 2
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 2
  store i16 0, i16* %4, align 4
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 3
  store i16 0, i16* %5, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc10setScissorERK8VkRect2D(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %struct.VkRect2D* nocapture readonly dereferenceable(16)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = trunc i32 %4 to i16
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 0
  store i16 %5, i16* %6, align 4
  %7 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = trunc i32 %8 to i16
  %10 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 1
  store i16 %9, i16* %10, align 2
  %11 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %1, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i16
  %14 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 2
  store i16 %13, i16* %14, align 4
  %15 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %1, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = trunc i32 %16 to i16
  %18 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 3
  store i16 %17, i16* %18, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc13updateScissorEPN5angle7BitSetTILm63EmmEERK8VkRect2D(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %struct.VkRect2D* nocapture readonly dereferenceable(16)) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = trunc i32 %5 to i16
  %7 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 0
  store i16 %6, i16* %7, align 4
  %8 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %2, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = trunc i32 %9 to i16
  %11 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 1
  store i16 %10, i16* %11, align 2
  %12 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %2, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = trunc i32 %13 to i16
  %15 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 2
  store i16 %14, i16* %15, align 4
  %16 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %2, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = trunc i32 %17 to i16
  %19 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 6, i32 3
  store i16 %18, i16* %19, align 2
  %20 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = or i64 %21, 3458764513820540928
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc18updateDrawableSizeEPN5angle7BitSetTILm63EmmEEjj(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = trunc i32 %2 to i16
  %6 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 7, i32 0
  store i16 %5, i16* %6, align 4
  %7 = trunc i32 %3 to i16
  %8 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 7, i32 1
  store i16 %7, i16* %8, align 2
  %9 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %10, 4611686018427387904
  store i64 %11, i64* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc13updateSubpassEPN5angle7BitSetTILm63EmmEEj(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 63
  %7 = icmp eq i32 %6, %2
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = and i32 %2, 63
  %10 = and i32 %5, -64
  %11 = or i32 %10, %9
  store i32 %11, i32* %4, align 4
  %12 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = or i64 %13, 134217728
  store i64 %14, i64* %12, align 8
  br label %15

15:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc19updatePatchVerticesEPN5angle7BitSetTILm63EmmEEj(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %4 = trunc i32 %2 to i16
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 4, i32 5, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = shl i16 %4, 9
  %8 = and i16 %7, 32256
  %9 = and i16 %6, -32257
  %10 = or i16 %9, %8
  store i16 %10, i16* %5, align 2
  %11 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = or i64 %12, 9007199254740992
  store i64 %13, i64* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc12resetSubpassEPN5angle7BitSetTILm63EmmEE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 63
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = and i32 %4, -64
  store i32 %8, i32* %3, align 4
  %9 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %10, 134217728
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc11nextSubpassEPN5angle7BitSetTILm63EmmEE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = and i32 %5, 63
  %7 = and i32 %4, -64
  %8 = or i32 %6, %7
  store i32 %8, i32* %3, align 4
  %9 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %10, 134217728
  store i64 %11, i64* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc10setSubpassEj(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %1, 63
  %6 = and i32 %4, -64
  %7 = or i32 %6, %5
  store i32 %7, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2rx2vk20GraphicsPipelineDesc10getSubpassEv(%"class.rx::vk::GraphicsPipelineDesc"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 63
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk20GraphicsPipelineDesc20updateRenderPassDescEPN5angle7BitSetTILm63EmmEERKNS0_14RenderPassDescE(%"class.rx::vk::GraphicsPipelineDesc"* nocapture, %"class.angle::BitSetT.1023"* nocapture, %"class.rx::vk::RenderPassDesc"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false) #17
  %6 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = or i64 %7, 117440512
  store i64 %8, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk18AttachmentOpsArrayC2Ev(%"class.rx::vk::AttachmentOpsArray"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::vk::AttachmentOpsArray"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %2, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk18AttachmentOpsArrayD2Ev(%"class.rx::vk::AttachmentOpsArray"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk18AttachmentOpsArrayC2ERKS1_(%"class.rx::vk::AttachmentOpsArray"* nocapture, %"class.rx::vk::AttachmentOpsArray"* nocapture readonly dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::AttachmentOpsArray"* %0 to i8*
  %4 = bitcast %"class.rx::vk::AttachmentOpsArray"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %3, i8* align 2 %4, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.rx::vk::AttachmentOpsArray"* @_ZN2rx2vk18AttachmentOpsArrayaSERKS1_(%"class.rx::vk::AttachmentOpsArray"* returned, %"class.rx::vk::AttachmentOpsArray"* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::AttachmentOpsArray"* %0 to i8*
  %4 = bitcast %"class.rx::vk::AttachmentOpsArray"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %3, i8* align 2 %4, i64 40, i1 false)
  ret %"class.rx::vk::AttachmentOpsArray"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZNK2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* readnone, i32) local_unnamed_addr #6 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %0, i64 0, i32 0, i32 0, i64 %3
  ret %"struct.rx::vk::PackedAttachmentOpsDesc"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZN2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* readnone, i32) local_unnamed_addr #6 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %0, i64 0, i32 0, i32 0, i64 %3
  ret %"struct.rx::vk::PackedAttachmentOpsDesc"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk18AttachmentOpsArray17initWithLoadStoreENS0_21PackedAttachmentIndexENS0_11ImageLayoutES3_(%"class.rx::vk::AttachmentOpsArray"* nocapture, i32, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %0, i64 0, i32 0, i32 0, i64 %5, i32 0
  %7 = load i32, i32* %6, align 2
  %8 = shl i32 %2, 16
  %9 = and i32 %8, 983040
  %10 = and i32 %7, -16712704
  %11 = shl i32 %3, 20
  %12 = and i32 %11, 15728640
  %13 = or i32 %12, %9
  %14 = or i32 %13, %10
  store i32 %14, i32* %6, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk18AttachmentOpsArray10setLayoutsENS0_21PackedAttachmentIndexENS0_11ImageLayoutES3_(%"class.rx::vk::AttachmentOpsArray"* nocapture, i32, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %0, i64 0, i32 0, i32 0, i64 %5, i32 0
  %7 = load i32, i32* %6, align 2
  %8 = shl i32 %2, 16
  %9 = and i32 %8, 983040
  %10 = and i32 %7, -16711681
  %11 = shl i32 %3, 20
  %12 = and i32 %11, 15728640
  %13 = or i32 %12, %9
  %14 = or i32 %13, %10
  store i32 %14, i32* %6, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk18AttachmentOpsArray6setOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"* nocapture, i32, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %0, i64 0, i32 0, i32 0, i64 %5, i32 0
  %7 = load i32, i32* %6, align 2
  %8 = and i32 %2, 3
  %9 = and i32 %7, -272
  %10 = shl i32 %3, 2
  %11 = and i32 %10, 12
  %12 = or i32 %11, %8
  %13 = or i32 %12, %9
  store i32 %13, i32* %6, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk18AttachmentOpsArray13setStencilOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"* nocapture, i32, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %0, i64 0, i32 0, i32 0, i64 %5, i32 0
  %7 = load i32, i32* %6, align 2
  %8 = shl i32 %2, 4
  %9 = and i32 %8, 48
  %10 = and i32 %7, -753
  %11 = shl i32 %3, 6
  %12 = and i32 %11, 192
  %13 = or i32 %12, %9
  %14 = or i32 %13, %10
  store i32 %14, i32* %6, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk18AttachmentOpsArray10setClearOpENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %0, i64 0, i32 0, i32 0, i64 %3, i32 0
  %5 = load i32, i32* %4, align 2
  %6 = and i32 %5, -4
  %7 = or i32 %6, 1
  store i32 %7, i32* %4, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk18AttachmentOpsArray17setClearStencilOpENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %0, i64 0, i32 0, i32 0, i64 %3, i32 0
  %5 = load i32, i32* %4, align 2
  %6 = and i32 %5, -49
  %7 = or i32 %6, 16
  store i32 %7, i32* %4, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk18AttachmentOpsArray4hashEv(%"class.rx::vk::AttachmentOpsArray"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::vk::AttachmentOpsArray"* %0 to i8*
  %3 = tail call i64 @XXH64(i8* %2, i64 40, i64 2882400152) #17
  ret i64 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2rx2vkeqERKNS0_18AttachmentOpsArrayES3_(%"class.rx::vk::AttachmentOpsArray"* nocapture readonly dereferenceable(40), %"class.rx::vk::AttachmentOpsArray"* nocapture readonly dereferenceable(40)) local_unnamed_addr #11 {
  %3 = bitcast %"class.rx::vk::AttachmentOpsArray"* %0 to i8*
  %4 = bitcast %"class.rx::vk::AttachmentOpsArray"* %1 to i8*
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 40)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk23DescriptorSetLayoutDescC2Ev(%"class.rx::vk::DescriptorSetLayoutDesc"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 1536, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk23DescriptorSetLayoutDescD2Ev(%"class.rx::vk::DescriptorSetLayoutDesc"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk23DescriptorSetLayoutDescC2ERKS1_(%"class.rx::vk::DescriptorSetLayoutDesc"* nocapture, %"class.rx::vk::DescriptorSetLayoutDesc"* nocapture readonly dereferenceable(1536)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 1536, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1536) %"class.rx::vk::DescriptorSetLayoutDesc"* @_ZN2rx2vk23DescriptorSetLayoutDescaSERKS1_(%"class.rx::vk::DescriptorSetLayoutDesc"* returned, %"class.rx::vk::DescriptorSetLayoutDesc"* nocapture readonly dereferenceable(1536)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 1536, i1 false)
  ret %"class.rx::vk::DescriptorSetLayoutDesc"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk23DescriptorSetLayoutDesc4hashEv(%"class.rx::vk::DescriptorSetLayoutDesc"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %3 = tail call i64 @XXH64(i8* %2, i64 1536, i64 2882400152) #17
  ret i64 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk23DescriptorSetLayoutDesceqERKS1_(%"class.rx::vk::DescriptorSetLayoutDesc"* nocapture readonly, %"class.rx::vk::DescriptorSetLayoutDesc"* nocapture readonly dereferenceable(1536)) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 1536)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* nocapture, i32, i32, i32, i32, %"class.rx::vk::Sampler"* readonly) local_unnamed_addr #8 align 2 {
  %7 = zext i32 %1 to i64
  %8 = trunc i32 %2 to i8
  %9 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 %7, i32 0
  store i8 %8, i8* %9, align 8
  %10 = trunc i32 %3 to i16
  %11 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 %7, i32 2
  store i16 %10, i16* %11, align 2
  %12 = trunc i32 %4 to i8
  %13 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 %7, i32 1
  store i8 %12, i8* %13, align 1
  %14 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 %7, i32 4
  store %struct.VkSampler_T* null, %struct.VkSampler_T** %14, align 8
  %15 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 %7, i32 3
  store i32 0, i32* %15, align 4
  %16 = icmp eq %"class.rx::vk::Sampler"* %5, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %6
  %18 = bitcast %"class.rx::vk::Sampler"* %5 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %struct.VkSampler_T** %14 to i64*
  store i64 %19, i64* %20, align 8
  br label %21

21:                                               ; preds = %6, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx2vk23DescriptorSetLayoutDesc14unpackBindingsEPN5angle11FixedVectorI28VkDescriptorSetLayoutBindingLm96ENSt3__15arrayIS4_Lm96EEEEEPNS5_6vectorIP11VkSampler_TNS5_9allocatorISC_EEEE(%"class.rx::vk::DescriptorSetLayoutDesc"* nocapture readonly, %"class.angle::FixedVector.1402"*, %"class.std::__1::vector.1404"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1404", %"class.std::__1::vector.1404"* %2, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.1404", %"class.std::__1::vector.1404"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %struct.VkSampler_T*** %4 to i64*
  %7 = bitcast %"class.std::__1::vector.1404"* %2 to i64*
  %8 = bitcast %struct.VkSampler_T*** %5 to i64*
  %9 = getelementptr inbounds %"class.std::__1::vector.1404", %"class.std::__1::vector.1404"* %2, i64 0, i32 0, i32 0
  %10 = load i64, i64* @_ZN5angle12DirtyPointerE, align 8
  %11 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %1, i64 0, i32 1
  br label %16

12:                                               ; preds = %107
  %13 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %9, align 8
  %14 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %4, align 8
  %15 = icmp eq %struct.VkSampler_T** %13, %14
  br i1 %15, label %131, label %110

16:                                               ; preds = %107, %3
  %17 = phi i64 [ 0, %3 ], [ %108, %107 ]
  %18 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 %17, i32 2
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %107, label %21

21:                                               ; preds = %16
  %22 = zext i16 %19 to i32
  %23 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 %17, i32 0
  %24 = load i8, i8* %23, align 8
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 %17, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %0, i64 0, i32 0, i32 0, i64 %17, i32 4
  %30 = load %struct.VkSampler_T*, %struct.VkSampler_T** %29, align 8
  %31 = icmp eq %struct.VkSampler_T* %30, null
  %32 = ptrtoint %struct.VkSampler_T* %30 to i64
  br i1 %31, label %95, label %33

33:                                               ; preds = %21
  %34 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %4, align 8
  %35 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %5, align 8
  %36 = icmp eq %struct.VkSampler_T** %34, %35
  %37 = ptrtoint %struct.VkSampler_T** %35 to i64
  br i1 %36, label %42, label %38

38:                                               ; preds = %33
  %39 = bitcast %struct.VkSampler_T** %34 to i64*
  store i64 %32, i64* %39, align 8
  %40 = getelementptr inbounds %struct.VkSampler_T*, %struct.VkSampler_T** %34, i64 1
  %41 = ptrtoint %struct.VkSampler_T** %40 to i64
  store i64 %41, i64* %6, align 8
  br label %95

42:                                               ; preds = %33
  %43 = ptrtoint %struct.VkSampler_T** %34 to i64
  %44 = load i64, i64* %7, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 3
  %47 = add nsw i64 %46, 1
  %48 = icmp ugt i64 %47, 2305843009213693951
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = bitcast %"class.std::__1::vector.1404"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #22
  unreachable

51:                                               ; preds = %42
  %52 = sub i64 %37, %44
  %53 = ashr exact i64 %52, 3
  %54 = icmp ult i64 %53, 1152921504606846975
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = ashr exact i64 %52, 2
  %57 = icmp ult i64 %56, %47
  %58 = select i1 %57, i64 %47, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %55
  %61 = icmp ugt i64 %58, 2305843009213693951
  br i1 %61, label %62, label %63

62:                                               ; preds = %60
  tail call void @abort() #22
  unreachable

63:                                               ; preds = %60, %51
  %64 = phi i64 [ %58, %60 ], [ 2305843009213693951, %51 ]
  %65 = shl i64 %64, 3
  %66 = tail call i8* @_Znwm(i64 %65) #21
  %67 = bitcast i8* %66 to %struct.VkSampler_T**
  br label %68

68:                                               ; preds = %63, %55
  %69 = phi i64 [ %64, %63 ], [ 0, %55 ]
  %70 = phi %struct.VkSampler_T** [ %67, %63 ], [ null, %55 ]
  %71 = getelementptr inbounds %struct.VkSampler_T*, %struct.VkSampler_T** %70, i64 %46
  %72 = getelementptr inbounds %struct.VkSampler_T*, %struct.VkSampler_T** %70, i64 %69
  %73 = ptrtoint %struct.VkSampler_T** %72 to i64
  %74 = bitcast %struct.VkSampler_T** %71 to i64*
  store i64 %32, i64* %74, align 8
  %75 = getelementptr inbounds %struct.VkSampler_T*, %struct.VkSampler_T** %71, i64 1
  %76 = ptrtoint %struct.VkSampler_T** %75 to i64
  %77 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %9, align 8
  %78 = load i64, i64* %6, align 8
  %79 = ptrtoint %struct.VkSampler_T** %77 to i64
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 3
  %82 = sub nsw i64 0, %81
  %83 = getelementptr inbounds %struct.VkSampler_T*, %struct.VkSampler_T** %71, i64 %82
  %84 = ptrtoint %struct.VkSampler_T** %83 to i64
  %85 = icmp sgt i64 %80, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %68
  %87 = bitcast %struct.VkSampler_T** %83 to i8*
  %88 = bitcast %struct.VkSampler_T** %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 %80, i1 false) #17
  %89 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %9, align 8
  br label %90

90:                                               ; preds = %86, %68
  %91 = phi %struct.VkSampler_T** [ %77, %68 ], [ %89, %86 ]
  store i64 %84, i64* %7, align 8
  store i64 %76, i64* %6, align 8
  store i64 %73, i64* %8, align 8
  %92 = icmp eq %struct.VkSampler_T** %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = bitcast %struct.VkSampler_T** %91 to i8*
  tail call void @_ZdlPv(i8* %94) #21
  br label %95

95:                                               ; preds = %93, %90, %38, %21
  %96 = phi i64 [ 0, %21 ], [ %10, %38 ], [ %10, %90 ], [ %10, %93 ]
  %97 = load i64, i64* %11, align 8
  %98 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %1, i64 0, i32 0, i32 0, i64 %97, i32 0
  %99 = trunc i64 %17 to i32
  store i32 %99, i32* %98, align 8
  %100 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %1, i64 0, i32 0, i32 0, i64 %97, i32 1
  store i32 %25, i32* %100, align 4
  %101 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %1, i64 0, i32 0, i32 0, i64 %97, i32 2
  store i32 %22, i32* %101, align 8
  %102 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %1, i64 0, i32 0, i32 0, i64 %97, i32 3
  store i32 %28, i32* %102, align 4
  %103 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %1, i64 0, i32 0, i32 0, i64 %97, i32 4
  %104 = bitcast %struct.VkSampler_T*** %103 to i64*
  store i64 %96, i64* %104, align 8
  %105 = load i64, i64* %11, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %11, align 8
  br label %107

107:                                              ; preds = %16, %95
  %108 = add nuw nsw i64 %17, 1
  %109 = icmp eq i64 %108, 96
  br i1 %109, label %12, label %16

110:                                              ; preds = %12
  %111 = load i64, i64* %11, align 8
  %112 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %1, i64 0, i32 0, i32 0, i64 %111
  %113 = icmp eq i64 %111, 0
  br i1 %113, label %131, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %1, i64 0, i32 0, i32 0, i64 0
  br label %116

116:                                              ; preds = %114, %127
  %117 = phi %struct.VkDescriptorSetLayoutBinding* [ %129, %127 ], [ %115, %114 ]
  %118 = phi i32 [ %128, %127 ], [ 0, %114 ]
  %119 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %117, i64 0, i32 4
  %120 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %119, align 8
  %121 = icmp eq %struct.VkSampler_T** %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = sext i32 %118 to i64
  %124 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %9, align 8
  %125 = getelementptr inbounds %struct.VkSampler_T*, %struct.VkSampler_T** %124, i64 %123
  store %struct.VkSampler_T** %125, %struct.VkSampler_T*** %119, align 8
  %126 = add nsw i32 %118, 1
  br label %127

127:                                              ; preds = %116, %122
  %128 = phi i32 [ %126, %122 ], [ %118, %116 ]
  %129 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %117, i64 1
  %130 = icmp eq %struct.VkDescriptorSetLayoutBinding* %129, %112
  br i1 %130, label %131, label %116

131:                                              ; preds = %127, %110, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk18PipelineLayoutDescC2Ev(%"class.rx::vk::PipelineLayoutDesc"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 6192, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk18PipelineLayoutDescD2Ev(%"class.rx::vk::PipelineLayoutDesc"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk18PipelineLayoutDescC2ERKS1_(%"class.rx::vk::PipelineLayoutDesc"* nocapture, %"class.rx::vk::PipelineLayoutDesc"* nocapture readonly dereferenceable(6192)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 1536, i1 false) #17
  %5 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 1536, i1 false) #17
  %7 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 1536, i1 false) #17
  %9 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 1536, i1 false) #17
  %11 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 1
  %13 = bitcast %"class.angle::PackedEnumMap.1413"* %11 to i8*
  %14 = bitcast %"class.angle::PackedEnumMap.1413"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(6192) %"class.rx::vk::PipelineLayoutDesc"* @_ZN2rx2vk18PipelineLayoutDescaSERKS1_(%"class.rx::vk::PipelineLayoutDesc"* returned, %"class.rx::vk::PipelineLayoutDesc"* nocapture readonly dereferenceable(6192)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 1536, i1 false) #17
  %5 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 1536, i1 false) #17
  %7 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 1536, i1 false) #17
  %9 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 1536, i1 false) #17
  %11 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 1
  %13 = bitcast %"class.angle::PackedEnumMap.1413"* %12 to i8*
  %14 = bitcast %"class.angle::PackedEnumMap.1413"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 4 %14, i64 48, i1 false)
  ret %"class.rx::vk::PipelineLayoutDesc"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk18PipelineLayoutDesc4hashEv(%"class.rx::vk::PipelineLayoutDesc"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  %3 = tail call i64 @XXH64(i8* %2, i64 6192, i64 2882400152) #17
  ret i64 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk18PipelineLayoutDesceqERKS1_(%"class.rx::vk::PipelineLayoutDesc"* nocapture readonly, %"class.rx::vk::PipelineLayoutDesc"* nocapture readonly dereferenceable(6192)) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 6192)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk18PipelineLayoutDesc25updateDescriptorSetLayoutENS_18DescriptorSetIndexERKNS0_23DescriptorSetLayoutDescE(%"class.rx::vk::PipelineLayoutDesc"* nocapture, i32, %"class.rx::vk::DescriptorSetLayoutDesc"* nocapture readonly dereferenceable(1536)) local_unnamed_addr #2 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %2, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 1536, i1 false) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk18PipelineLayoutDesc23updatePushConstantRangeEN2gl10ShaderTypeEjj(%"class.rx::vk::PipelineLayoutDesc"* nocapture, i8 zeroext, i32, i32) local_unnamed_addr #9 align 2 {
  %5 = zext i8 %1 to i64
  %6 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 1, i32 0, i32 0, i64 %5, i32 0
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 1, i32 0, i32 0, i64 %5, i32 1
  store i32 %3, i32* %7, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(48) %"class.angle::PackedEnumMap.1413"* @_ZNK2rx2vk18PipelineLayoutDesc21getPushConstantRangesEv(%"class.rx::vk::PipelineLayoutDesc"* readnone) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %0, i64 0, i32 1
  ret %"class.angle::PackedEnumMap.1413"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk14PipelineHelperC2Ev(%"class.rx::vk::PipelineHelper"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::vk::PipelineHelper"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk14PipelineHelperD2Ev(%"class.rx::vk::PipelineHelper"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::PipelineHelper", %"class.rx::vk::PipelineHelper"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"** %2, align 8
  %4 = icmp eq %"struct.rx::vk::GraphicsPipelineTransition"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %3 to i64
  %7 = getelementptr inbounds %"class.rx::vk::PipelineHelper", %"class.rx::vk::PipelineHelper"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.rx::vk::GraphicsPipelineTransition"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.rx::vk::GraphicsPipelineTransition"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #21
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk14PipelineHelper7destroyEP10VkDevice_T(%"class.rx::vk::PipelineHelper"* nocapture, %struct.VkDevice_T*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::PipelineHelper", %"class.rx::vk::PipelineHelper"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %3, align 8
  %5 = icmp eq %struct.VkPipeline_T* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = load void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)** @vkDestroyPipeline, align 8
  tail call void %7(%struct.VkDevice_T* %1, %struct.VkPipeline_T* nonnull %4, %struct.VkAllocationCallbacks* null) #17
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk14PipelineHelper13addTransitionEN5angle7BitSetTILm63EmmEEPKNS0_20GraphicsPipelineDescEPS1_(%"class.rx::vk::PipelineHelper"*, %"class.angle::BitSetT.1023"* nocapture readonly, %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"*) local_unnamed_addr #2 align 2 {
  %5 = ptrtoint %"class.rx::vk::GraphicsPipelineDesc"* %2 to i64
  %6 = ptrtoint %"class.rx::vk::PipelineHelper"* %3 to i64
  %7 = getelementptr inbounds %"class.rx::vk::PipelineHelper", %"class.rx::vk::PipelineHelper"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::vk::PipelineHelper", %"class.rx::vk::PipelineHelper"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"** %9, align 8
  %11 = icmp ult %"struct.rx::vk::GraphicsPipelineTransition"* %8, %10
  %12 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %10 to i64
  br i1 %11, label %13, label %24

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %8, i64 0, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %8, i64 0, i32 1
  %18 = bitcast %"class.rx::vk::GraphicsPipelineDesc"** %17 to i64*
  store i64 %5, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %8, i64 0, i32 2
  %20 = bitcast %"class.rx::vk::PipelineHelper"** %19 to i64*
  store i64 %6, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %8, i64 1
  %22 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %21 to i64
  %23 = bitcast %"struct.rx::vk::GraphicsPipelineTransition"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %93

24:                                               ; preds = %4
  %25 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %8 to i64
  %26 = bitcast %"struct.rx::vk::GraphicsPipelineTransition"** %7 to i64*
  %27 = bitcast %"class.rx::vk::PipelineHelper"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = sdiv exact i64 %29, 24
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 768614336404564650
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.rx::vk::PipelineHelper"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #22
  unreachable

35:                                               ; preds = %24
  %36 = bitcast %"struct.rx::vk::GraphicsPipelineTransition"** %9 to i64*
  %37 = sub i64 %12, %28
  %38 = sdiv exact i64 %37, 24
  %39 = icmp ult i64 %38, 384307168202282325
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = shl nsw i64 %38, 1
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40, %35
  %46 = phi i64 [ %43, %40 ], [ 768614336404564650, %35 ]
  %47 = mul i64 %46, 24
  %48 = tail call i8* @_Znwm(i64 %47) #21
  %49 = bitcast i8* %48 to %"struct.rx::vk::GraphicsPipelineTransition"*
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi i64 [ %46, %45 ], [ 0, %40 ]
  %52 = phi %"struct.rx::vk::GraphicsPipelineTransition"* [ %49, %45 ], [ null, %40 ]
  %53 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %52, i64 %30
  %54 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %52, i64 %51
  %55 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %54 to i64
  %56 = getelementptr inbounds %"class.angle::BitSetT.1023", %"class.angle::BitSetT.1023"* %1, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %53, i64 0, i32 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %52, i64 %30, i32 1
  %60 = bitcast %"class.rx::vk::GraphicsPipelineDesc"** %59 to i64*
  store i64 %5, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %52, i64 %30, i32 2
  %62 = bitcast %"class.rx::vk::PipelineHelper"** %61 to i64*
  store i64 %6, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %53, i64 1
  %64 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %63 to i64
  %65 = getelementptr inbounds %"class.rx::vk::PipelineHelper", %"class.rx::vk::PipelineHelper"* %0, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"** %65, align 8
  %67 = load %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"** %7, align 8
  %68 = icmp eq %"struct.rx::vk::GraphicsPipelineTransition"* %67, %66
  br i1 %68, label %69, label %71

69:                                               ; preds = %50
  %70 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %66 to i64
  br label %86

71:                                               ; preds = %50, %71
  %72 = phi %"struct.rx::vk::GraphicsPipelineTransition"* [ %82, %71 ], [ %53, %50 ]
  %73 = phi %"struct.rx::vk::GraphicsPipelineTransition"* [ %74, %71 ], [ %67, %50 ]
  %74 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %72, i64 -1, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %74, i64 0, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %75, align 8
  %78 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %72, i64 -1, i32 1
  %79 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %73, i64 -1, i32 1
  %80 = bitcast %"class.rx::vk::GraphicsPipelineDesc"** %78 to i8*
  %81 = bitcast %"class.rx::vk::GraphicsPipelineDesc"** %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 16, i1 false) #17
  %82 = getelementptr inbounds %"struct.rx::vk::GraphicsPipelineTransition", %"struct.rx::vk::GraphicsPipelineTransition"* %72, i64 -1
  %83 = icmp eq %"struct.rx::vk::GraphicsPipelineTransition"* %74, %66
  br i1 %83, label %84, label %71

84:                                               ; preds = %71
  %85 = load i64, i64* %27, align 8
  br label %86

86:                                               ; preds = %84, %69
  %87 = phi %"struct.rx::vk::GraphicsPipelineTransition"* [ %53, %69 ], [ %82, %84 ]
  %88 = phi i64 [ %70, %69 ], [ %85, %84 ]
  %89 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %87 to i64
  store i64 %89, i64* %27, align 8
  store i64 %64, i64* %26, align 8
  store i64 %55, i64* %36, align 8
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %86
  %92 = inttoptr i64 %88 to i8*
  tail call void @_ZdlPv(i8* %92) #21
  br label %93

93:                                               ; preds = %91, %86, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk21TextureDescriptorDescC2Ev(%"class.rx::vk::TextureDescriptorDesc"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 1, i32 0, i64 0
  %4 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 1, i32 0, i64 96
  br label %5

5:                                                ; preds = %5, %1
  %6 = phi %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* [ %3, %1 ], [ %31, %5 ]
  %7 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 0, i32 1, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 1, i32 0, i32 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 1, i32 1, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 2, i32 0, i32 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 2, i32 1, i32 0
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 3, i32 0, i32 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 3, i32 1, i32 0
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 4, i32 0, i32 0, i32 0
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 4, i32 1, i32 0
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 5, i32 0, i32 0, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 5, i32 1, i32 0
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 6, i32 0, i32 0, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 6, i32 1, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 7, i32 0, i32 0, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 7, i32 1, i32 0
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 8, i32 0, i32 0, i32 0
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 8, i32 1, i32 0
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 9, i32 0, i32 0, i32 0
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 9, i32 1, i32 0
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 10, i32 0, i32 0, i32 0
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 10, i32 1, i32 0
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 11, i32 0, i32 0, i32 0
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 11, i32 1, i32 0
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %6, i64 12
  %32 = icmp eq %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %31, %4
  br i1 %32, label %33, label %5

33:                                               ; preds = %5, %33
  %34 = phi %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* [ %59, %33 ], [ %3, %5 ]
  %35 = phi i64 [ %60, %33 ], [ 96, %5 ]
  %36 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 12, i1 false)
  %37 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 1
  %38 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 12, i1 false)
  %39 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 2
  %40 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 12, i1 false)
  %41 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 3
  %42 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 12, i1 false)
  %43 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 4
  %44 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 12, i1 false)
  %45 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 5
  %46 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 12, i1 false)
  %47 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 6
  %48 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 12, i1 false)
  %49 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 7
  %50 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 12, i1 false)
  %51 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 8
  %52 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 12, i1 false)
  %53 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 9
  %54 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 12, i1 false)
  %55 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 10
  %56 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 12, i1 false)
  %57 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 11
  %58 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 12, i1 false)
  %59 = getelementptr inbounds %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials", %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %34, i64 12
  %60 = add nsw i64 %35, -12
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %33

62:                                               ; preds = %33
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk21TextureDescriptorDescD2Ev(%"class.rx::vk::TextureDescriptorDesc"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk21TextureDescriptorDescC2ERKS1_(%"class.rx::vk::TextureDescriptorDesc"* nocapture, %"class.rx::vk::TextureDescriptorDesc"* nocapture readonly dereferenceable(1156)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::TextureDescriptorDesc"* %0 to i8*
  %4 = bitcast %"class.rx::vk::TextureDescriptorDesc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 1156, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1156) %"class.rx::vk::TextureDescriptorDesc"* @_ZN2rx2vk21TextureDescriptorDescaSERKS1_(%"class.rx::vk::TextureDescriptorDesc"* returned, %"class.rx::vk::TextureDescriptorDesc"* nocapture readonly dereferenceable(1156)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::TextureDescriptorDesc"* %0 to i8*
  %4 = bitcast %"class.rx::vk::TextureDescriptorDesc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 1156, i1 false)
  ret %"class.rx::vk::TextureDescriptorDesc"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk21TextureDescriptorDesc6updateEmNS0_34ImageOrBufferViewSubresourceSerialENS0_13SamplerSerialE(%"class.rx::vk::TextureDescriptorDesc"* nocapture, i64, i64, i32) local_unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = icmp ugt i64 %7, %1
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = trunc i64 %1 to i32
  %11 = add i32 %10, 1
  store i32 %11, i32* %5, align 4
  br label %12

12:                                               ; preds = %4, %9
  %13 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 1, i32 0, i64 %1
  %14 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %13 to i64*
  store i64 %2, i64* %14, align 4
  %15 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 1, i32 0, i64 %1, i32 1, i32 0
  store i32 %3, i32* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk21TextureDescriptorDesc4hashEv(%"class.rx::vk::TextureDescriptorDesc"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::array.970"* %2 to i8*
  %4 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = mul nuw nsw i64 %6, 12
  %8 = tail call i64 @XXH64(i8* %3, i64 %7, i64 2882400152) #17
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk21TextureDescriptorDesc5resetEv(%"class.rx::vk::TextureDescriptorDesc"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 1, i32 0, i64 0
  %3 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %2 to i8*
  %4 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = mul nuw nsw i64 %6, 12
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %7, i1 false)
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk21TextureDescriptorDesceqERKS1_(%"class.rx::vk::TextureDescriptorDesc"* nocapture readonly, %"class.rx::vk::TextureDescriptorDesc"* nocapture readonly dereferenceable(1156)) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = icmp eq i32 %4, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %0, i64 0, i32 1, i32 0, i64 0
  %12 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %11 to i8*
  %13 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %1, i64 0, i32 1, i32 0, i64 0
  %14 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %13 to i8*
  %15 = zext i32 %4 to i64
  %16 = mul nuw nsw i64 %15, 12
  %17 = tail call i32 @bcmp(i8* %12, i8* %14, i64 %16)
  %18 = icmp eq i32 %17, 0
  br label %19

19:                                               ; preds = %8, %2, %10
  %20 = phi i1 [ %18, %10 ], [ false, %2 ], [ true, %8 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC2Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk28UniformsAndXfbDescriptorDesc5resetEv(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD2Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC2ERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nocapture, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* nocapture readonly dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0 to i8*
  %4 = bitcast %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.rx::vk::UniformsAndXfbDescriptorDesc"* @_ZN2rx2vk28UniformsAndXfbDescriptorDescaSERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* returned, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0 to i8*
  %4 = bitcast %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 40, i1 false)
  ret %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesc4hashEv(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::array.990"* %2 to i8*
  %4 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = shl nuw nsw i64 %6, 2
  %8 = tail call i64 @XXH64(i8* %3, i64 %7, i64 2882400152) #17
  %9 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0, i64 0, i32 2
  %10 = bitcast %"struct.std::__1::array.991"* %9 to i8*
  %11 = load i32, i32* %4, align 4
  %12 = zext i32 %11 to i64
  %13 = shl nuw nsw i64 %12, 2
  %14 = add nsw i64 %13, -4
  %15 = tail call i64 @XXH64(i8* %10, i64 %14, i64 2882400152) #17
  %16 = xor i64 %15, %8
  ret i64 %16
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesceqERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nocapture readonly, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* nocapture readonly dereferenceable(40)) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0, i64 0, i32 1
  %10 = bitcast %"struct.std::__1::array.990"* %9 to i8*
  %11 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 1
  %12 = bitcast %"struct.std::__1::array.990"* %11 to i8*
  %13 = zext i32 %4 to i64
  %14 = shl nuw nsw i64 %13, 2
  %15 = tail call i32 @bcmp(i8* %10, i8* %12, i64 %14)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %0, i64 0, i32 2
  %19 = bitcast %"struct.std::__1::array.991"* %18 to i8*
  %20 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 2
  %21 = bitcast %"struct.std::__1::array.991"* %20 to i8*
  %22 = add nsw i64 %14, -4
  %23 = tail call i32 @bcmp(i8* %19, i8* %21, i64 %22)
  %24 = icmp eq i32 %23, 0
  br label %25

25:                                               ; preds = %8, %17, %2
  %26 = phi i1 [ false, %2 ], [ false, %8 ], [ %24, %17 ]
  ret i1 %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk27ShaderBuffersDescriptorDescC2Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  store i32* %3, i32** %2, align 8
  %4 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 2
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk27ShaderBuffersDescriptorDesc5resetEv(%"class.rx::vk::ShaderBuffersDescriptorDesc"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 2
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk27ShaderBuffersDescriptorDescD2Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 2
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 1
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %6 = icmp eq i32* %4, %5
  %7 = icmp eq i32* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdaPv(i8* %10) #21
  br label %11

11:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk27ShaderBuffersDescriptorDescC2ERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* nocapture readonly dereferenceable(152)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  store i32* %4, i32** %3, align 8
  %5 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 3
  %7 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %7, align 8
  %8 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, 32
  %11 = bitcast %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0 to i8*
  br i1 %10, label %12, label %24

12:                                               ; preds = %2, %12
  %13 = phi i64 [ %15, %12 ], [ 32, %2 ]
  %14 = icmp ult i64 %13, %9
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 4) #17
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #21
  %22 = bitcast i32** %3 to i8**
  store i8* %21, i8** %22, align 8
  store i64 %13, i64* %6, align 8
  %23 = load i64, i64* %8, align 8
  br label %24

24:                                               ; preds = %2, %16
  %25 = phi i8* [ %11, %2 ], [ %21, %16 ]
  %26 = phi i64 [ %9, %2 ], [ %23, %16 ]
  store i64 %26, i64* %5, align 8
  %27 = load i64, i64* %8, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = shl nuw i64 %27, 2
  %31 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 1
  %32 = bitcast i32** %31 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %33, i64 %30, i1 false) #17
  br label %34

34:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(152) %"class.rx::vk::ShaderBuffersDescriptorDesc"* @_ZN2rx2vk27ShaderBuffersDescriptorDescaSERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* returned, %"class.rx::vk::ShaderBuffersDescriptorDesc"* nocapture readonly dereferenceable(152)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  br i1 %7, label %8, label %46

8:                                                ; preds = %2
  %9 = icmp ugt i64 %6, 32
  %10 = select i1 %9, i64 %6, i64 32
  br label %11

11:                                               ; preds = %11, %8
  %12 = phi i64 [ %10, %8 ], [ %14, %11 ]
  %13 = icmp ult i64 %12, %4
  %14 = shl i64 %12, 1
  br i1 %13, label %11, label %15

15:                                               ; preds = %11
  %16 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %12, i64 4) #17
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  %19 = select i1 %17, i64 -1, i64 %18
  %20 = tail call i8* @_Znam(i64 %19) #21
  %21 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 1
  %26 = load i32*, i32** %25, align 8
  %27 = bitcast i32* %26 to i8*
  br label %34

28:                                               ; preds = %15
  %29 = shl nuw i64 %22, 2
  %30 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 1
  %31 = bitcast i32** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %32, i64 %29, i1 false) #17
  %33 = bitcast i8* %32 to i32*
  br label %34

34:                                               ; preds = %28, %24
  %35 = phi i8* [ %27, %24 ], [ %32, %28 ]
  %36 = phi i32* [ %26, %24 ], [ %33, %28 ]
  %37 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %39 = icmp eq i32* %36, %38
  %40 = icmp eq i32* %36, null
  %41 = or i1 %39, %40
  br i1 %41, label %43, label %42

42:                                               ; preds = %34
  tail call void @_ZdaPv(i8* %35) #21
  br label %43

43:                                               ; preds = %42, %34
  %44 = bitcast i32** %37 to i8**
  store i8* %20, i8** %44, align 8
  store i64 %12, i64* %5, align 8
  %45 = load i64, i64* %3, align 8
  br label %46

46:                                               ; preds = %43, %2
  %47 = phi i64 [ %4, %2 ], [ %45, %43 ]
  %48 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = load i64, i64* %3, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = shl nuw i64 %49, 2
  %53 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 1
  %57 = bitcast i32** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %55, i64 %52, i1 false) #17
  br label %59

59:                                               ; preds = %46, %51
  ret %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk27ShaderBuffersDescriptorDesc4hashEv(%"class.rx::vk::ShaderBuffersDescriptorDesc"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 1
  %3 = bitcast i32** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = shl i64 %6, 2
  %8 = tail call i64 @XXH64(i8* %4, i64 %7, i64 2882400152) #17
  ret i64 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk27ShaderBuffersDescriptorDesceqERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* nocapture readonly, %"class.rx::vk::ShaderBuffersDescriptorDesc"* nocapture readonly dereferenceable(152)) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %0, i64 0, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 %4
  %12 = icmp eq i64 %4, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  br label %16

16:                                               ; preds = %22, %13
  %17 = phi i32* [ %24, %22 ], [ %15, %13 ]
  %18 = phi i32* [ %23, %22 ], [ %10, %13 ]
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* %17, align 4
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  %23 = getelementptr inbounds i32, i32* %18, i64 1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = icmp eq i32* %23, %11
  br i1 %25, label %26, label %16

26:                                               ; preds = %16, %22, %2, %8
  %27 = phi i1 [ false, %2 ], [ true, %8 ], [ false, %16 ], [ true, %22 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDescC2Ev(%"class.rx::vk::FramebufferDesc"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::vk::FramebufferDesc"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 148, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc5resetEv(%"class.rx::vk::FramebufferDesc"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::vk::FramebufferDesc"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 148, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDescD2Ev(%"class.rx::vk::FramebufferDesc"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDescC2ERKS1_(%"class.rx::vk::FramebufferDesc"* nocapture, %"class.rx::vk::FramebufferDesc"* nocapture readonly dereferenceable(148)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::FramebufferDesc"* %0 to i8*
  %4 = bitcast %"class.rx::vk::FramebufferDesc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 148, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(148) %"class.rx::vk::FramebufferDesc"* @_ZN2rx2vk15FramebufferDescaSERKS1_(%"class.rx::vk::FramebufferDesc"* returned, %"class.rx::vk::FramebufferDesc"* nocapture readonly dereferenceable(148)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::FramebufferDesc"* %0 to i8*
  %4 = bitcast %"class.rx::vk::FramebufferDesc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 148, i1 false)
  ret %"class.rx::vk::FramebufferDesc"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc6updateEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* nocapture, i32, i64) local_unnamed_addr #2 align 2 {
  %4 = trunc i64 %2 to i32
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 %5
  %7 = bitcast %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"* %6 to i64*
  store i64 %2, i64* %7, align 4
  %8 = icmp eq i32 %4, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = trunc i32 %11 to i16
  %13 = and i16 %12, 31
  %14 = trunc i32 %1 to i16
  %15 = add i16 %14, 1
  %16 = icmp ult i16 %13, %15
  %17 = select i1 %16, i16 %15, i16 %13
  %18 = and i16 %17, 31
  %19 = zext i16 %18 to i32
  %20 = and i32 %11, -32
  %21 = or i32 %20, %19
  store i32 %21, i32* %10, align 4
  br label %22

22:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc11updateColorEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* nocapture, i32, i64) local_unnamed_addr #8 align 2 {
  %4 = add i32 %1, 1
  %5 = trunc i64 %2 to i32
  %6 = zext i32 %4 to i64
  %7 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 %6
  %8 = bitcast %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"* %7 to i64*
  store i64 %2, i64* %8, align 4
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i16
  %14 = and i16 %13, 31
  %15 = trunc i32 %4 to i16
  %16 = add i16 %15, 1
  %17 = icmp ult i16 %14, %16
  %18 = select i1 %17, i16 %16, i16 %14
  %19 = and i16 %18, 31
  %20 = zext i16 %19 to i32
  %21 = and i32 %12, -32
  %22 = or i32 %21, %20
  store i32 %22, i32* %11, align 4
  br label %23

23:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc18updateColorResolveEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* nocapture, i32, i64) local_unnamed_addr #8 align 2 {
  %4 = add i32 %1, 10
  %5 = trunc i64 %2 to i32
  %6 = zext i32 %4 to i64
  %7 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 %6
  %8 = bitcast %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"* %7 to i64*
  store i64 %2, i64* %8, align 4
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i16
  %14 = and i16 %13, 31
  %15 = trunc i32 %4 to i16
  %16 = add i16 %15, 1
  %17 = icmp ult i16 %14, %16
  %18 = select i1 %17, i16 %16, i16 %14
  %19 = and i16 %18, 31
  %20 = zext i16 %19 to i32
  %21 = and i32 %12, -32
  %22 = or i32 %21, %20
  store i32 %22, i32* %11, align 4
  br label %23

23:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc19updateUnresolveMaskEN5angle7BitSetTILm9EtmEE(%"class.rx::vk::FramebufferDesc"* nocapture, %"class.angle::BitSetT.1415"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.angle::BitSetT.1415", %"class.angle::BitSetT.1415"* %1, i64 0, i32 0
  %4 = load i16, i16* %3, align 2
  %5 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = and i16 %4, 511
  %8 = zext i16 %7 to i32
  %9 = shl nuw nsw i32 %8, 16
  %10 = and i32 %6, -33488897
  %11 = or i32 %9, %10
  store i32 %11, i32* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc18updateDepthStencilENS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* nocapture, i64) local_unnamed_addr #8 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 0
  %5 = bitcast %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"* %4 to i64*
  store i64 %1, i64* %5, align 4
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = trunc i32 %9 to i16
  %11 = and i16 %10, 31
  %12 = icmp eq i16 %11, 0
  %13 = select i1 %12, i16 1, i16 %11
  %14 = zext i16 %13 to i32
  %15 = and i32 %9, -32
  %16 = or i32 %15, %14
  store i32 %16, i32* %8, align 4
  br label %17

17:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc25updateDepthStencilResolveENS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* nocapture, i64) local_unnamed_addr #8 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 9
  %5 = bitcast %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"* %4 to i64*
  store i64 %1, i64* %5, align 4
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = trunc i32 %9 to i16
  %11 = and i16 %10, 31
  %12 = icmp ugt i16 %11, 10
  %13 = select i1 %12, i16 %11, i16 10
  %14 = zext i16 %13 to i32
  %15 = and i32 %9, -32
  %16 = or i32 %15, %14
  store i32 %16, i32* %8, align 4
  br label %17

17:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk15FramebufferDesc4hashEv(%"class.rx::vk::FramebufferDesc"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::array.1088"* %2 to i8*
  %4 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = shl i32 %5, 3
  %7 = and i32 %6, 248
  %8 = zext i32 %7 to i64
  %9 = tail call i64 @XXH64(i8* %3, i64 %8, i64 2882400152) #17
  %10 = load i32, i32* %4, align 4
  %11 = shl i32 %10, 21
  %12 = and i32 %11, 67108864
  %13 = zext i32 %12 to i64
  %14 = and i32 %10, -33554432
  %15 = sext i32 %14 to i64
  %16 = shl i32 %10, 10
  %17 = and i32 %16, 33488896
  %18 = zext i32 %17 to i64
  %19 = lshr i32 %10, 16
  %20 = and i32 %19, 511
  %21 = zext i32 %20 to i64
  %22 = xor i64 %9, %15
  %23 = xor i64 %22, %13
  %24 = xor i64 %23, %18
  %25 = xor i64 %24, %21
  ret i64 %25
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk15FramebufferDesceqERKS1_(%"class.rx::vk::FramebufferDesc"* nocapture readonly, %"class.rx::vk::FramebufferDesc"* nocapture readonly dereferenceable(148)) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = trunc i32 %4 to i16
  %6 = and i16 %5, 31
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 31
  %11 = icmp eq i32 %10, %7
  %12 = xor i32 %9, %4
  %13 = icmp ult i32 %12, 32
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %24

15:                                               ; preds = %2
  %16 = shl nuw nsw i16 %6, 3
  %17 = zext i16 %16 to i64
  %18 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::array.1088"* %18 to i8*
  %20 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %1, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::array.1088"* %20 to i8*
  %22 = tail call i32 @bcmp(i8* %19, i8* %21, i64 %17)
  %23 = icmp eq i32 %22, 0
  br label %24

24:                                               ; preds = %2, %15
  %25 = phi i1 [ %23, %15 ], [ false, %2 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2rx2vk15FramebufferDesc15attachmentCountEv(%"class.rx::vk::FramebufferDesc"* readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 4, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 5, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 6, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 7, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 8, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 9, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 10, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 11, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 12, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 13, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 14, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 15, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = insertelement <16 x i32> undef, i32 %3, i32 0
  %35 = insertelement <16 x i32> %34, i32 %5, i32 1
  %36 = insertelement <16 x i32> %35, i32 %7, i32 2
  %37 = insertelement <16 x i32> %36, i32 %9, i32 3
  %38 = insertelement <16 x i32> %37, i32 %11, i32 4
  %39 = insertelement <16 x i32> %38, i32 %13, i32 5
  %40 = insertelement <16 x i32> %39, i32 %15, i32 6
  %41 = insertelement <16 x i32> %40, i32 %17, i32 7
  %42 = insertelement <16 x i32> %41, i32 %19, i32 8
  %43 = insertelement <16 x i32> %42, i32 %21, i32 9
  %44 = insertelement <16 x i32> %43, i32 %23, i32 10
  %45 = insertelement <16 x i32> %44, i32 %25, i32 11
  %46 = insertelement <16 x i32> %45, i32 %27, i32 12
  %47 = insertelement <16 x i32> %46, i32 %29, i32 13
  %48 = insertelement <16 x i32> %47, i32 %31, i32 14
  %49 = insertelement <16 x i32> %48, i32 %33, i32 15
  %50 = icmp ne <16 x i32> %49, zeroinitializer
  %51 = zext <16 x i1> %50 to <16 x i32>
  %52 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 16, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  %55 = zext i1 %54 to i32
  %56 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 1, i32 0, i64 17, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  %59 = zext i1 %58 to i32
  %60 = shufflevector <16 x i32> %51, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %61 = add nuw nsw <16 x i32> %60, %51
  %62 = shufflevector <16 x i32> %61, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add nuw nsw <16 x i32> %61, %62
  %64 = shufflevector <16 x i32> %63, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %65 = add nuw nsw <16 x i32> %63, %64
  %66 = shufflevector <16 x i32> %65, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %67 = add nuw nsw <16 x i32> %65, %66
  %68 = extractelement <16 x i32> %67, i32 0
  %69 = add nuw nsw i32 %68, %55
  %70 = add nuw nsw i32 %69, %59
  ret i32 %70
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2rx2vk15FramebufferDesc26getUnresolveAttachmentMaskEv(%"class.angle::BitSetT.1415"* noalias nocapture sret, %"class.rx::vk::FramebufferDesc"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = lshr i32 %4, 16
  %6 = trunc i32 %5 to i16
  %7 = and i16 %6, 511
  %8 = getelementptr inbounds %"class.angle::BitSetT.1415", %"class.angle::BitSetT.1415"* %0, i64 0, i32 0
  store i16 %7, i16* %8, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc16updateLayerCountEj(%"class.rx::vk::FramebufferDesc"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = shl i32 %1, 6
  %6 = and i32 %5, 32704
  %7 = and i32 %4, -32705
  %8 = or i32 %7, %6
  store i32 %8, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc26updateFramebufferFetchModeEb(%"class.rx::vk::FramebufferDesc"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %4 = zext i1 %1 to i32
  %5 = load i32, i32* %3, align 4
  %6 = shl nuw nsw i32 %4, 5
  %7 = and i32 %5, -33
  %8 = or i32 %7, %6
  store i32 %8, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk15FramebufferDesc21updateRenderToTextureEb(%"class.rx::vk::FramebufferDesc"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %0, i64 0, i32 0
  %4 = zext i1 %1 to i32
  %5 = load i32, i32* %3, align 4
  %6 = shl nuw nsw i32 %4, 25
  %7 = and i32 %5, 33554431
  %8 = or i32 %7, %6
  store i32 %8, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk11SamplerDescC2Ev(%"class.rx::vk::SamplerDesc"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::vk::SamplerDesc"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk11SamplerDesc5resetEv(%"class.rx::vk::SamplerDesc"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = bitcast %"class.rx::vk::SamplerDesc"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk11SamplerDescD2Ev(%"class.rx::vk::SamplerDesc"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk11SamplerDescC2ERKS1_(%"class.rx::vk::SamplerDesc"* nocapture, %"class.rx::vk::SamplerDesc"* nocapture readonly dereferenceable(48)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::SamplerDesc"* %0 to i8*
  %4 = bitcast %"class.rx::vk::SamplerDesc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.rx::vk::SamplerDesc"* @_ZN2rx2vk11SamplerDescaSERKS1_(%"class.rx::vk::SamplerDesc"* returned, %"class.rx::vk::SamplerDesc"* nocapture readonly dereferenceable(48)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rx::vk::SamplerDesc"* %0 to i8*
  %4 = bitcast %"class.rx::vk::SamplerDesc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
  ret %"class.rx::vk::SamplerDesc"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk11SamplerDescC2ERKN5angle10FeaturesVkERKN2gl12SamplerStateEbm(%"class.rx::vk::SamplerDesc"* nocapture, %"struct.angle::FeaturesVk"* nocapture readonly dereferenceable(3672), %"class.gl::SamplerState"* nocapture readonly dereferenceable(68), i1 zeroext, i64) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 6
  %7 = bitcast %"struct.angle::Color"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 16, i1 false) #17
  tail call void @_ZN2rx2vk11SamplerDesc6updateERKN5angle10FeaturesVkERKN2gl12SamplerStateEbm(%"class.rx::vk::SamplerDesc"* %0, %"struct.angle::FeaturesVk"* dereferenceable(3672) %1, %"class.gl::SamplerState"* dereferenceable(68) %2, i1 zeroext %3, i64 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk11SamplerDesc6updateERKN5angle10FeaturesVkERKN2gl12SamplerStateEbm(%"class.rx::vk::SamplerDesc"* nocapture, %"struct.angle::FeaturesVk"* nocapture readonly dereferenceable(3672), %"class.gl::SamplerState"* nocapture readonly dereferenceable(68), i1 zeroext, i64) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %6, align 8
  %7 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %1, i64 0, i32 59, i32 0, i64 0, i32 4
  %8 = load i8, i8* %7, align 8, !range !37
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, float 0.000000e+00, float 1.000000e+00
  store float %10, float* %6, align 8
  %11 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %1, i64 0, i32 59, i32 0, i64 1, i32 4
  %12 = load i8, i8* %11, align 8, !range !37
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %13, float %10, float 2.000000e+00
  store float %14, float* %6, align 8
  %15 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %1, i64 0, i32 59, i32 0, i64 2, i32 4
  %16 = load i8, i8* %15, align 8, !range !37
  %17 = icmp eq i8 %16, 0
  %18 = select i1 %17, float %14, float 3.000000e+00
  store float %18, float* %6, align 8
  %19 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %1, i64 0, i32 59, i32 0, i64 3, i32 4
  %20 = load i8, i8* %19, align 8, !range !37
  %21 = icmp eq i8 %20, 0
  %22 = select i1 %21, float %18, float 4.000000e+00
  store float %22, float* %6, align 8
  %23 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 5
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  store i32 %25, i32* %27, align 4
  %28 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 6
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 2
  %32 = bitcast float* %31 to i32*
  store i32 %30, i32* %32, align 8
  %33 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 7
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 3
  %37 = bitcast float* %36 to i32*
  store i32 %35, i32* %37, align 4
  %38 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 4
  store i64 %4, i64* %38, align 8
  %39 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 8
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 34894
  %42 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 9
  %43 = load i32, i32* %42, align 4
  %44 = tail call i32 @_ZN2rx5gl_vk12GetCompareOpEj(i32 %43) #17
  %45 = xor i1 %3, true
  %46 = and i1 %41, %45
  %47 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %1, i64 0, i32 60, i32 4
  %52 = load i8, i8* %51, align 8, !range !37
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %5
  %55 = tail call i32 @_ZN2gl26ConvertToNearestFilterModeEj(i32 %48) #17
  %56 = tail call i32 @_ZN2gl26ConvertToNearestFilterModeEj(i32 %50) #17
  br label %57

57:                                               ; preds = %5, %54
  %58 = phi i32 [ %56, %54 ], [ %50, %5 ]
  %59 = phi i32 [ %55, %54 ], [ %48, %5 ]
  %60 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %1, i64 0, i32 61, i32 4
  %61 = load i8, i8* %60, align 8, !range !37
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  %64 = tail call i32 @_ZN2gl29ConvertToNearestMipFilterModeEj(i32 %58) #17
  br label %65

65:                                               ; preds = %57, %63
  %66 = phi i32 [ %64, %63 ], [ %58, %57 ]
  %67 = tail call i32 @_ZN2rx5gl_vk9GetFilterEj(i32 %59) #17
  %68 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 5
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %67, 1
  %71 = and i32 %69, -2
  %72 = or i32 %71, %70
  store i32 %72, i32* %68, align 8
  %73 = tail call i32 @_ZN2rx5gl_vk9GetFilterEj(i32 %66) #17
  %74 = load i32, i32* %68, align 8
  %75 = shl i32 %73, 1
  %76 = and i32 %75, 2
  %77 = and i32 %74, -3
  %78 = or i32 %77, %76
  store i32 %78, i32* %68, align 8
  %79 = load i32, i32* %49, align 4
  %80 = tail call i32 @_ZN2rx5gl_vk20GetSamplerMipmapModeEj(i32 %79) #17
  %81 = load i32, i32* %68, align 8
  %82 = shl i32 %80, 2
  %83 = and i32 %82, 4
  %84 = and i32 %81, -5
  %85 = or i32 %84, %83
  store i32 %85, i32* %68, align 8
  %86 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = tail call i32 @_ZN2rx5gl_vk21GetSamplerAddressModeEj(i32 %87) #17
  %89 = load i32, i32* %68, align 8
  %90 = shl i32 %88, 3
  %91 = and i32 %90, 56
  %92 = and i32 %89, -57
  %93 = or i32 %92, %91
  store i32 %93, i32* %68, align 8
  %94 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = tail call i32 @_ZN2rx5gl_vk21GetSamplerAddressModeEj(i32 %95) #17
  %97 = load i32, i32* %68, align 8
  %98 = shl i32 %96, 6
  %99 = and i32 %98, 448
  %100 = and i32 %97, -449
  %101 = or i32 %100, %99
  store i32 %101, i32* %68, align 8
  %102 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 4
  %103 = load i32, i32* %102, align 4
  %104 = tail call i32 @_ZN2rx5gl_vk21GetSamplerAddressModeEj(i32 %103) #17
  %105 = load i32, i32* %68, align 8
  %106 = shl i32 %104, 9
  %107 = and i32 %106, 3584
  %108 = and i32 %105, -65025
  %109 = zext i1 %46 to i32
  %110 = shl nuw nsw i32 %109, 12
  %111 = shl i32 %44, 13
  %112 = and i32 %111, 57344
  %113 = select i1 %3, i32 57344, i32 %112
  %114 = or i32 %113, %110
  %115 = or i32 %114, %107
  %116 = or i32 %115, %108
  store i32 %116, i32* %68, align 8
  %117 = tail call zeroext i1 @_ZN2gl16IsMipmapFilteredEj(i32 %66) #17
  %118 = load i32, i32* %68, align 8
  br i1 %117, label %121, label %119

119:                                              ; preds = %65
  %120 = and i32 %118, -5
  store i32 %120, i32* %68, align 8
  store float 0.000000e+00, float* %31, align 8
  store float 2.500000e-01, float* %36, align 4
  br label %121

121:                                              ; preds = %65, %119
  %122 = phi i32 [ %120, %119 ], [ %118, %65 ]
  %123 = and i32 %122, -2147418113
  store i32 %123, i32* %68, align 8
  %124 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 11
  %125 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %2, i64 0, i32 11, i32 1
  %126 = load i8, i8* %125, align 4
  %127 = icmp ne i8 %126, 0
  %128 = zext i1 %127 to i32
  %129 = shl nuw i32 %128, 31
  %130 = and i32 %122, 65535
  %131 = or i32 %129, %130
  store i32 %131, i32* %68, align 8
  %132 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 6
  %133 = bitcast %"struct.angle::Color"* %132 to i8*
  %134 = bitcast %"struct.angle::ColorGeneric"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 16, i1 false)
  %135 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 7
  store i32 0, i32* %135, align 4
  ret void
}

declare i32 @_ZN2rx5gl_vk12GetCompareOpEj(i32) local_unnamed_addr #7

declare i32 @_ZN2gl26ConvertToNearestFilterModeEj(i32) local_unnamed_addr #7

declare i32 @_ZN2gl29ConvertToNearestMipFilterModeEj(i32) local_unnamed_addr #7

declare i32 @_ZN2rx5gl_vk9GetFilterEj(i32) local_unnamed_addr #7

declare i32 @_ZN2rx5gl_vk20GetSamplerMipmapModeEj(i32) local_unnamed_addr #7

declare i32 @_ZN2rx5gl_vk21GetSamplerAddressModeEj(i32) local_unnamed_addr #7

declare zeroext i1 @_ZN2gl16IsMipmapFilteredEj(i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx2vk11SamplerDesc4initEPNS_9ContextVkEPNS0_7SamplerE(%"class.rx::vk::SamplerDesc"* nocapture readonly, %"class.rx::ContextVk"*, %"class.rx::vk::Sampler"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %struct.VkSamplerCreateInfo, align 8
  %5 = alloca %struct.VkSamplerFilteringPrecisionGOOGLE, align 8
  %6 = alloca %struct.VkSamplerYcbcrConversionInfo, align 8
  %7 = alloca %struct.VkSamplerCustomBorderColorCreateInfoEXT, align 8
  %8 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.gl::State"*, %"class.gl::State"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %9, i64 0, i32 7, i32 59
  %11 = load i8, i8* %10, align 1, !range !37
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 1
  br i1 %12, label %14, label %17

14:                                               ; preds = %3
  %15 = bitcast float* %13 to i32*
  %16 = load i32, i32* %15, align 4
  br label %22

17:                                               ; preds = %3
  %18 = load float, float* %13, align 4
  %19 = fcmp ogt float %18, 1.000000e+00
  %20 = zext i1 %19 to i32
  %21 = bitcast float %18 to i32
  br label %22

22:                                               ; preds = %14, %17
  %23 = phi i32 [ %16, %14 ], [ %21, %17 ]
  %24 = phi i32 [ 0, %14 ], [ %20, %17 ]
  %25 = bitcast %struct.VkSamplerCreateInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %25) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false)
  %26 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 0
  store i32 31, i32* %26, align 8
  %27 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 2
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 3
  %31 = lshr i32 %29, 1
  %32 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 4
  %33 = lshr i32 %29, 2
  %34 = lshr i32 %29, 3
  %35 = insertelement <4 x i32> undef, i32 %29, i32 0
  %36 = insertelement <4 x i32> %35, i32 %31, i32 1
  %37 = insertelement <4 x i32> %36, i32 %33, i32 2
  %38 = insertelement <4 x i32> %37, i32 %34, i32 3
  %39 = and <4 x i32> %38, <i32 1, i32 1, i32 1, i32 7>
  %40 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 6
  %41 = bitcast i32* %30 to <4 x i32>*
  store <4 x i32> %39, <4 x i32>* %41, align 4
  %42 = lshr i32 %29, 6
  %43 = and i32 %42, 7
  %44 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 7
  store i32 %43, i32* %44, align 4
  %45 = lshr i32 %29, 9
  %46 = and i32 %45, 7
  %47 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 8
  store i32 %46, i32* %47, align 8
  %48 = bitcast %"class.rx::vk::SamplerDesc"* %0 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 9
  %51 = bitcast float* %50 to i32*
  store i32 %49, i32* %51, align 4
  %52 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 10
  store i32 %24, i32* %52, align 8
  %53 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 11
  %54 = bitcast float* %53 to i32*
  store i32 %23, i32* %54, align 4
  %55 = lshr i32 %29, 12
  %56 = and i32 %55, 1
  %57 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 12
  store i32 %56, i32* %57, align 8
  %58 = lshr i32 %29, 13
  %59 = and i32 %58, 7
  %60 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 13
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 2
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 14
  %65 = bitcast float* %64 to i32*
  store i32 %63, i32* %65, align 8
  %66 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 3
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 15
  %70 = bitcast float* %69 to i32*
  store i32 %68, i32* %70, align 4
  %71 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 16
  store i32 1, i32* %71, align 8
  %72 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 17
  store i32 0, i32* %72, align 4
  %73 = bitcast %struct.VkSamplerFilteringPrecisionGOOGLE* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 24, i1 false)
  %74 = tail call i32 @_ZNK2gl5State23getTextureFilteringHintEv(%"class.gl::State"* %9) #17
  %75 = icmp eq i32 %74, 4354
  br i1 %75, label %76, label %84

76:                                               ; preds = %22
  %77 = getelementptr inbounds %struct.VkSamplerFilteringPrecisionGOOGLE, %struct.VkSamplerFilteringPrecisionGOOGLE* %5, i64 0, i32 0
  store i32 1000264000, i32* %77, align 8
  %78 = getelementptr inbounds %struct.VkSamplerFilteringPrecisionGOOGLE, %struct.VkSamplerFilteringPrecisionGOOGLE* %5, i64 0, i32 2
  store i32 1, i32* %78, align 8
  %79 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 1
  %80 = getelementptr inbounds %struct.VkSamplerFilteringPrecisionGOOGLE, %struct.VkSamplerFilteringPrecisionGOOGLE* %5, i64 0, i32 1
  %81 = bitcast i8** %80 to i64*
  store i64 0, i64* %81, align 8
  %82 = bitcast i8** %79 to %struct.VkSamplerFilteringPrecisionGOOGLE**
  store %struct.VkSamplerFilteringPrecisionGOOGLE* %5, %struct.VkSamplerFilteringPrecisionGOOGLE** %82, align 8
  %83 = ptrtoint %struct.VkSamplerFilteringPrecisionGOOGLE* %5 to i64
  br label %84

84:                                               ; preds = %76, %22
  %85 = phi i64 [ %83, %76 ], [ 0, %22 ]
  %86 = bitcast %struct.VkSamplerYcbcrConversionInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 24, i1 false)
  %87 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 4
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  %90 = extractelement <4 x i32> %39, i32 3
  br i1 %89, label %158, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %struct.VkSamplerYcbcrConversionInfo, %struct.VkSamplerYcbcrConversionInfo* %6, i64 0, i32 0
  store i32 1000156001, i32* %92, align 8
  %93 = getelementptr inbounds %struct.VkSamplerYcbcrConversionInfo, %struct.VkSamplerYcbcrConversionInfo* %6, i64 0, i32 1
  store i8* null, i8** %93, align 8
  %94 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %95 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %94, align 8
  %96 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %95, i64 0, i32 69, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %151, label %99

99:                                               ; preds = %91
  %100 = call i64 @llvm.ctpop.i64(i64 %97) #17, !range !41
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %99
  %103 = add i64 %97, -1
  %104 = and i64 %103, %88
  br label %109

105:                                              ; preds = %99
  %106 = icmp ugt i64 %97, %88
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %88, %97
  br label %109

109:                                              ; preds = %107, %105, %102
  %110 = phi i64 [ %104, %102 ], [ %108, %107 ], [ %88, %105 ]
  %111 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %95, i64 0, i32 69, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %112, i64 %110
  %114 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.909"* %114, null
  br i1 %115, label %151, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %114, i64 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %117, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base.909"* %118, null
  br i1 %119, label %151, label %120

120:                                              ; preds = %116
  %121 = add i64 %97, -1
  br label %122

122:                                              ; preds = %143, %120
  %123 = phi %"struct.std::__1::__hash_node_base.909"* [ %118, %120 ], [ %145, %143 ]
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %123, i64 1
  %125 = bitcast %"struct.std::__1::__hash_node_base.909"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, %88
  br i1 %127, label %138, label %128

128:                                              ; preds = %122
  br i1 %101, label %131, label %129

129:                                              ; preds = %128
  %130 = and i64 %126, %121
  br label %135

131:                                              ; preds = %128
  %132 = icmp ult i64 %126, %97
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = urem i64 %126, %97
  br label %135

135:                                              ; preds = %133, %131, %129
  %136 = phi i64 [ %130, %129 ], [ %134, %133 ], [ %126, %131 ]
  %137 = icmp eq i64 %136, %110
  br i1 %137, label %143, label %151

138:                                              ; preds = %122
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %123, i64 2
  %140 = bitcast %"struct.std::__1::__hash_node_base.909"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, %88
  br i1 %142, label %147, label %143

143:                                              ; preds = %138, %135
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %123, i64 0, i32 0
  %145 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.909"* %145, null
  br i1 %146, label %151, label %122

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %123, i64 4
  %149 = bitcast %"struct.std::__1::__hash_node_base.909"* %148 to %struct.VkSamplerYcbcrConversion_T**
  %150 = load %struct.VkSamplerYcbcrConversion_T*, %struct.VkSamplerYcbcrConversion_T** %149, align 8
  br label %151

151:                                              ; preds = %135, %143, %91, %109, %116, %147
  %152 = phi %struct.VkSamplerYcbcrConversion_T* [ %150, %147 ], [ null, %109 ], [ null, %91 ], [ null, %116 ], [ null, %143 ], [ null, %135 ]
  %153 = getelementptr inbounds %struct.VkSamplerYcbcrConversionInfo, %struct.VkSamplerYcbcrConversionInfo* %6, i64 0, i32 2
  store %struct.VkSamplerYcbcrConversion_T* %152, %struct.VkSamplerYcbcrConversion_T** %153, align 8
  %154 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 1
  %155 = bitcast i8** %93 to i64*
  store i64 %85, i64* %155, align 8
  %156 = bitcast i8** %154 to %struct.VkSamplerYcbcrConversionInfo**
  store %struct.VkSamplerYcbcrConversionInfo* %6, %struct.VkSamplerYcbcrConversionInfo** %156, align 8
  store i32 2, i32* %40, align 8
  store i32 2, i32* %44, align 4
  store i32 2, i32* %47, align 8
  store i32 0, i32* %52, align 8
  store i32 0, i32* %72, align 4
  store i32 0, i32* %30, align 4
  store i32 0, i32* %32, align 8
  %157 = ptrtoint %struct.VkSamplerYcbcrConversionInfo* %6 to i64
  br label %158

158:                                              ; preds = %84, %151
  %159 = phi i64 [ %85, %84 ], [ %157, %151 ]
  %160 = phi i32 [ %46, %84 ], [ 2, %151 ]
  %161 = phi i32 [ %43, %84 ], [ 2, %151 ]
  %162 = phi i32 [ %90, %84 ], [ 2, %151 ]
  %163 = bitcast %struct.VkSamplerCustomBorderColorCreateInfoEXT* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %163) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 40, i1 false)
  %164 = icmp eq i32 %162, 3
  %165 = icmp eq i32 %161, 3
  %166 = or i1 %164, %165
  %167 = icmp eq i32 %160, 3
  %168 = or i1 %166, %167
  br i1 %168, label %169, label %183

169:                                              ; preds = %158
  %170 = getelementptr inbounds %struct.VkSamplerCustomBorderColorCreateInfoEXT, %struct.VkSamplerCustomBorderColorCreateInfoEXT* %7, i64 0, i32 0
  store i32 1000287000, i32* %170, align 8
  %171 = getelementptr inbounds %"class.rx::vk::SamplerDesc", %"class.rx::vk::SamplerDesc"* %0, i64 0, i32 6
  %172 = getelementptr inbounds %struct.VkSamplerCustomBorderColorCreateInfoEXT, %struct.VkSamplerCustomBorderColorCreateInfoEXT* %7, i64 0, i32 2
  %173 = bitcast %"struct.angle::Color"* %171 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = bitcast %union.VkClearColorValue* %172 to <4 x i32>*
  store <4 x i32> %174, <4 x i32>* %175, align 8
  %176 = load i32, i32* %28, align 8
  %177 = icmp sgt i32 %176, -1
  %178 = select i1 %177, i32 1000287003, i32 1000287004
  store i32 %178, i32* %71, align 8
  %179 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %4, i64 0, i32 1
  %180 = getelementptr inbounds %struct.VkSamplerCustomBorderColorCreateInfoEXT, %struct.VkSamplerCustomBorderColorCreateInfoEXT* %7, i64 0, i32 1
  %181 = bitcast i8** %180 to i64*
  store i64 %159, i64* %181, align 8
  %182 = bitcast i8** %179 to %struct.VkSamplerCustomBorderColorCreateInfoEXT**
  store %struct.VkSamplerCustomBorderColorCreateInfoEXT* %7, %struct.VkSamplerCustomBorderColorCreateInfoEXT** %182, align 8
  br label %183

183:                                              ; preds = %158, %169
  %184 = call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %1) #17
  %185 = load i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)** @vkCreateSampler, align 8
  %186 = getelementptr inbounds %"class.rx::vk::Sampler", %"class.rx::vk::Sampler"* %2, i64 0, i32 0, i32 0
  %187 = call i32 %185(%struct.VkDevice_T* %184, %struct.VkSamplerCreateInfo* nonnull %4, %struct.VkAllocationCallbacks* null, %struct.VkSampler_T** %186) #17
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %194, label %189, !prof !2

189:                                              ; preds = %183
  %190 = bitcast %"class.rx::ContextVk"* %1 to void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)***
  %191 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)**, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %191, i64 67
  %193 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %192, align 8
  call void %193(%"class.rx::ContextVk"* %1, i32 %187, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__func__._ZNK2rx2vk11SamplerDesc4initEPNS_9ContextVkEPNS0_7SamplerE, i64 0, i64 0), i32 3425) #17
  br label %194

194:                                              ; preds = %183, %189
  %195 = phi i32 [ 1, %189 ], [ 0, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %163) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %25) #17
  ret i32 %195
}

declare i32 @_ZNK2gl5State23getTextureFilteringHintEv(%"class.gl::State"*) local_unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
define hidden %struct.VkSamplerYcbcrConversion_T* @_ZNK2rx27SamplerYcbcrConversionCache34getYuvConversionFromExternalFormatEm(%"class.rx::SamplerYcbcrConversionCache"* nocapture readonly, i64) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @llvm.ctpop.i64(i64 %4) #17, !range !41
  %8 = icmp ugt i64 %7, 1
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = add i64 %4, -1
  %11 = and i64 %10, %1
  br label %16

12:                                               ; preds = %6
  %13 = icmp ugt i64 %4, %1
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = urem i64 %1, %4
  br label %16

16:                                               ; preds = %14, %12, %9
  %17 = phi i64 [ %11, %9 ], [ %15, %14 ], [ %1, %12 ]
  %18 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %19, i64 %17
  %21 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.909"* %21, null
  br i1 %22, label %58, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %21, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.909"* %25, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %23
  %28 = add i64 %4, -1
  br label %29

29:                                               ; preds = %50, %27
  %30 = phi %"struct.std::__1::__hash_node_base.909"* [ %25, %27 ], [ %52, %50 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %30, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base.909"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, %1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  br i1 %8, label %38, label %36

36:                                               ; preds = %35
  %37 = and i64 %33, %28
  br label %42

38:                                               ; preds = %35
  %39 = icmp ult i64 %33, %4
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %33, %4
  br label %42

42:                                               ; preds = %40, %38, %36
  %43 = phi i64 [ %37, %36 ], [ %41, %40 ], [ %33, %38 ]
  %44 = icmp eq i64 %43, %17
  br i1 %44, label %50, label %58

45:                                               ; preds = %29
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %30, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base.909"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %1
  br i1 %49, label %54, label %50

50:                                               ; preds = %45, %42
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %30, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.909"* %52, null
  br i1 %53, label %58, label %29

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %30, i64 4
  %56 = bitcast %"struct.std::__1::__hash_node_base.909"* %55 to %struct.VkSamplerYcbcrConversion_T**
  %57 = load %struct.VkSamplerYcbcrConversion_T*, %struct.VkSamplerYcbcrConversion_T** %56, align 8
  br label %58

58:                                               ; preds = %50, %42, %23, %2, %16, %54
  %59 = phi %struct.VkSamplerYcbcrConversion_T* [ %57, %54 ], [ null, %16 ], [ null, %2 ], [ null, %23 ], [ null, %42 ], [ null, %50 ]
  ret %struct.VkSamplerYcbcrConversion_T* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx2vk11SamplerDesc4hashEv(%"class.rx::vk::SamplerDesc"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::vk::SamplerDesc"* %0 to i8*
  %3 = tail call i64 @XXH64(i8* %2, i64 48, i64 2882400152) #17
  ret i64 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk11SamplerDesceqERKS1_(%"class.rx::vk::SamplerDesc"* nocapture readonly, %"class.rx::vk::SamplerDesc"* nocapture readonly dereferenceable(48)) local_unnamed_addr #11 align 2 {
  %3 = bitcast %"class.rx::vk::SamplerDesc"* %0 to i8*
  %4 = bitcast %"class.rx::vk::SamplerDesc"* %1 to i8*
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 48)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk13SamplerHelperC2EPNS_9ContextVkE(%"class.rx::vk::SamplerHelper"* nocapture, %"class.rx::ContextVk"* nocapture readonly) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %0, i64 0, i32 1, i32 0, i32 0
  store %struct.VkSampler_T* null, %struct.VkSampler_T** %3, align 8
  %4 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %5 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %5, i64 0, i32 71
  %7 = tail call i32 @_ZN2rx2vk21ResourceSerialFactory21generateSamplerSerialEv(%"class.rx::vk::ResourceSerialFactory"* %6) #17
  %8 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %0, i64 0, i32 2, i32 0
  store i32 %7, i32* %8, align 8
  ret void
}

declare i32 @_ZN2rx2vk21ResourceSerialFactory21generateSamplerSerialEv(%"class.rx::vk::ResourceSerialFactory"*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk13SamplerHelperD2Ev(%"class.rx::vk::SamplerHelper"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk13SamplerHelperC2EOS1_(%"class.rx::vk::SamplerHelper"* nocapture, %"class.rx::vk::SamplerHelper"* nocapture dereferenceable(24)) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.rx::vk::Sampler", %"class.rx::vk::Sampler"* %3, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %1, i64 0, i32 1
  %7 = bitcast %"class.rx::vk::Sampler"* %3 to i64*
  store %struct.VkSampler_T* null, %struct.VkSampler_T** %4, align 8
  %8 = bitcast %"class.rx::vk::Sampler"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  store i64 0, i64* %8, align 8
  %10 = load i32, i32* %5, align 4
  %11 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %1, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %5, align 4
  store i32 %10, i32* %11, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(24) %"class.rx::vk::SamplerHelper"* @_ZN2rx2vk13SamplerHelperaSEOS1_(%"class.rx::vk::SamplerHelper"* returned, %"class.rx::vk::SamplerHelper"* nocapture dereferenceable(24)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.rx::vk::Sampler", %"class.rx::vk::Sampler"* %3, i64 0, i32 0, i32 0
  %6 = bitcast %"class.rx::vk::Sampler"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  store %struct.VkSampler_T* null, %struct.VkSampler_T** %5, align 8
  %8 = bitcast %"class.rx::vk::Sampler"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  store i64 %7, i64* %8, align 8
  %10 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %0, i64 0, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %1, i64 0, i32 2, i32 0
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  store i32 %11, i32* %12, align 4
  ret %"class.rx::vk::SamplerHelper"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk16RenderPassHelperC2Ev(%"class.rx::vk::RenderPassHelper"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %struct.VkRenderPass_T** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 21, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk16RenderPassHelperD2Ev(%"class.rx::vk::RenderPassHelper"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk16RenderPassHelperC2EOS1_(%"class.rx::vk::RenderPassHelper"* nocapture, %"class.rx::vk::RenderPassHelper"* nocapture dereferenceable(32)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.rx::vk::RenderPass", %"class.rx::vk::RenderPass"* %3, i64 0, i32 0, i32 0
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %4, align 8
  %5 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %1, i64 0, i32 1
  %6 = bitcast %"class.rx::vk::RenderPass"* %3 to i64*
  %7 = bitcast %"class.rx::vk::RenderPass"* %5 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  store i64 0, i64* %7, align 8
  %9 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %1, i64 0, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 %10, i64 13, i1 false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.rx::vk::RenderPassHelper"* @_ZN2rx2vk16RenderPassHelperaSEOS1_(%"class.rx::vk::RenderPassHelper"* returned, %"class.rx::vk::RenderPassHelper"* nocapture dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 1
  %5 = bitcast %"class.rx::vk::RenderPass"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.rx::vk::RenderPass"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  store i64 %6, i64* %7, align 8
  %9 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %1, i64 0, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 %10, i64 13, i1 false)
  ret %"class.rx::vk::RenderPassHelper"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk16RenderPassHelper7destroyEP10VkDevice_T(%"class.rx::vk::RenderPassHelper"* nocapture, %struct.VkDevice_T*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %struct.VkRenderPass_T*, %struct.VkRenderPass_T** %3, align 8
  %5 = icmp eq %struct.VkRenderPass_T* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = load void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)** @vkDestroyRenderPass, align 8
  tail call void %7(%struct.VkDevice_T* %1, %struct.VkRenderPass_T* nonnull %4, %struct.VkAllocationCallbacks* null) #17
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.rx::vk::RenderPass"* @_ZNK2rx2vk16RenderPassHelper13getRenderPassEv(%"class.rx::vk::RenderPassHelper"* readnone) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 1
  ret %"class.rx::vk::RenderPass"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.rx::vk::RenderPass"* @_ZN2rx2vk16RenderPassHelper13getRenderPassEv(%"class.rx::vk::RenderPassHelper"* readnone) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 1
  ret %"class.rx::vk::RenderPass"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(13) %"struct.rx::vk::RenderPassPerfCounters"* @_ZNK2rx2vk16RenderPassHelper15getPerfCountersEv(%"class.rx::vk::RenderPassHelper"* readnone) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 2
  ret %"struct.rx::vk::RenderPassPerfCounters"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(13) %"struct.rx::vk::RenderPassPerfCounters"* @_ZN2rx2vk16RenderPassHelper15getPerfCountersEv(%"class.rx::vk::RenderPassHelper"* readnone) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %0, i64 0, i32 2
  ret %"struct.rx::vk::RenderPassPerfCounters"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx15RenderPassCacheC2Ev(%"class.rx::RenderPassCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %2, align 8
  %3 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"union.absl::container_internal::map_slot_type.1203"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx15RenderPassCacheD2Ev(%"class.rx::RenderPassCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %11

8:                                                ; preds = %29
  %9 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %9) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type.1203"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #17
  br label %33

11:                                               ; preds = %29, %5
  %12 = phi i64 [ %3, %5 ], [ %30, %29 ]
  %13 = phi i64 [ 0, %5 ], [ %31, %29 ]
  %14 = load i8*, i8** %6, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = load i8, i8* %15, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %18, label %29

18:                                               ; preds = %11
  %19 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %7, align 8
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %19, i64 %13, i32 0, i32 1, i32 0, i32 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %19, i64 %13, i32 0, i32 1, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %19, i64 %13, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %25, align 8
  %27 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #17
  %28 = load i64, i64* %2, align 8
  br label %29

29:                                               ; preds = %23, %18, %11
  %30 = phi i64 [ %28, %23 ], [ %12, %18 ], [ %12, %11 ]
  %31 = add i64 %13, 1
  %32 = icmp eq i64 %31, %30
  br i1 %32, label %8, label %11

33:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx15RenderPassCache7destroyEPNS_10RendererVkE(%"class.rx::RenderPassCache"*, %"class.rx::RendererVk"* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 2, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 1, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %14
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 2, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %19
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 43
  %24 = load %struct.VkDevice_T*, %struct.VkDevice_T** %23, align 8
  %25 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %28, align 8
  %30 = icmp ne i8* %27, null
  tail call void @llvm.assume(i1 %30) #17
  %31 = load i8, i8* %27, align 1
  %32 = icmp slt i8 %31, -1
  br i1 %32, label %33, label %48

33:                                               ; preds = %2, %33
  %34 = phi %"union.absl::container_internal::map_slot_type.1203"* [ %45, %33 ], [ %29, %2 ]
  %35 = phi i8* [ %44, %33 ], [ %27, %2 ]
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = icmp slt <16 x i8> %37, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %39 = bitcast <16 x i1> %38 to i16
  %40 = zext i16 %39 to i32
  %41 = add nuw nsw i32 %40, 1
  %42 = tail call i32 @llvm.cttz.i32(i32 %41, i1 true) #17, !range !3
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %35, i64 %43
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %34, i64 %43
  %46 = load i8, i8* %44, align 1
  %47 = icmp slt i8 %46, -1
  br i1 %47, label %33, label %48

48:                                               ; preds = %33, %2
  %49 = phi %"union.absl::container_internal::map_slot_type.1203"* [ %29, %2 ], [ %45, %33 ]
  %50 = phi i8* [ %27, %2 ], [ %44, %33 ]
  %51 = phi i8 [ %31, %2 ], [ %46, %33 ]
  %52 = icmp eq i8 %51, -1
  %53 = icmp eq i8* %50, null
  %54 = or i1 %52, %53
  br i1 %54, label %61, label %55

55:                                               ; preds = %48, %124
  %56 = phi %"union.absl::container_internal::map_slot_type.1203"* [ %126, %124 ], [ %49, %48 ]
  %57 = phi i8* [ %129, %124 ], [ %50, %48 ]
  %58 = load i8, i8* %57, align 1
  %59 = icmp sgt i8 %58, -1
  br i1 %59, label %62, label %60, !prof !2

60:                                               ; preds = %55
  tail call void @llvm.trap() #17
  unreachable

61:                                               ; preds = %124, %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.1202"* %25)
  ret void

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %56, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %56, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %66 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %65, align 8
  %67 = icmp ne i8* %64, null
  tail call void @llvm.assume(i1 %67) #17
  %68 = load i8, i8* %64, align 1
  %69 = icmp slt i8 %68, -1
  br i1 %69, label %70, label %85

70:                                               ; preds = %62, %70
  %71 = phi %"union.absl::container_internal::map_slot_type.1421"* [ %82, %70 ], [ %66, %62 ]
  %72 = phi i8* [ %81, %70 ], [ %64, %62 ]
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  %75 = icmp slt <16 x i8> %74, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %76 = bitcast <16 x i1> %75 to i16
  %77 = zext i16 %76 to i32
  %78 = add nuw nsw i32 %77, 1
  %79 = tail call i32 @llvm.cttz.i32(i32 %78, i1 true) #17, !range !3
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %72, i64 %80
  %82 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %71, i64 %80
  %83 = load i8, i8* %81, align 1
  %84 = icmp slt i8 %83, -1
  br i1 %84, label %70, label %85

85:                                               ; preds = %70, %62
  %86 = phi %"union.absl::container_internal::map_slot_type.1421"* [ %66, %62 ], [ %82, %70 ]
  %87 = phi i8* [ %64, %62 ], [ %81, %70 ]
  %88 = phi i8 [ %68, %62 ], [ %83, %70 ]
  %89 = icmp eq i8 %88, -1
  %90 = icmp eq i8* %87, null
  %91 = or i1 %89, %90
  br i1 %91, label %100, label %92

92:                                               ; preds = %85, %160
  %93 = phi i8* [ %165, %160 ], [ %87, %85 ]
  %94 = phi %"union.absl::container_internal::map_slot_type.1421"* [ %161, %160 ], [ %86, %85 ]
  %95 = load i8, i8* %93, align 1
  %96 = icmp sgt i8 %95, -1
  br i1 %96, label %131, label %97, !prof !2

97:                                               ; preds = %92
  tail call void @llvm.trap() #17
  unreachable

98:                                               ; preds = %160
  %99 = load i8, i8* %57, align 1
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i8 [ %99, %98 ], [ %58, %85 ]
  %102 = icmp sgt i8 %101, -1
  br i1 %102, label %104, label %103, !prof !2

103:                                              ; preds = %100
  tail call void @llvm.trap() #17
  unreachable

104:                                              ; preds = %100
  %105 = getelementptr inbounds i8, i8* %57, i64 1
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %56, i64 1
  %107 = load i8, i8* %105, align 1
  %108 = icmp slt i8 %107, -1
  br i1 %108, label %109, label %124

109:                                              ; preds = %104, %109
  %110 = phi %"union.absl::container_internal::map_slot_type.1203"* [ %121, %109 ], [ %106, %104 ]
  %111 = phi i8* [ %120, %109 ], [ %105, %104 ]
  %112 = bitcast i8* %111 to <16 x i8>*
  %113 = load <16 x i8>, <16 x i8>* %112, align 1
  %114 = icmp slt <16 x i8> %113, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %115 = bitcast <16 x i1> %114 to i16
  %116 = zext i16 %115 to i32
  %117 = add nuw nsw i32 %116, 1
  %118 = tail call i32 @llvm.cttz.i32(i32 %117, i1 true) #17, !range !3
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %111, i64 %119
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %110, i64 %119
  %122 = load i8, i8* %120, align 1
  %123 = icmp slt i8 %122, -1
  br i1 %123, label %109, label %124

124:                                              ; preds = %109, %104
  %125 = phi i8* [ %105, %104 ], [ %120, %109 ]
  %126 = phi %"union.absl::container_internal::map_slot_type.1203"* [ %106, %104 ], [ %121, %109 ]
  %127 = phi i8 [ %107, %104 ], [ %122, %109 ]
  %128 = icmp eq i8 %127, -1
  %129 = select i1 %128, i8* null, i8* %125, !prof !5
  %130 = icmp eq i8* %129, null
  br i1 %130, label %61, label %55

131:                                              ; preds = %92
  %132 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %94, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %133 = load %struct.VkRenderPass_T*, %struct.VkRenderPass_T** %132, align 8
  %134 = icmp eq %struct.VkRenderPass_T* %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %131
  %136 = load void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)** @vkDestroyRenderPass, align 8
  tail call void %136(%struct.VkDevice_T* %24, %struct.VkRenderPass_T* nonnull %133, %struct.VkAllocationCallbacks* null) #17
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %132, align 8
  %137 = load i8, i8* %93, align 1
  %138 = icmp sgt i8 %137, -1
  br i1 %138, label %140, label %139, !prof !2

139:                                              ; preds = %135
  tail call void @llvm.trap() #17
  unreachable

140:                                              ; preds = %131, %135
  %141 = getelementptr inbounds i8, i8* %93, i64 1
  %142 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %94, i64 1
  %143 = load i8, i8* %141, align 1
  %144 = icmp slt i8 %143, -1
  br i1 %144, label %145, label %160

145:                                              ; preds = %140, %145
  %146 = phi %"union.absl::container_internal::map_slot_type.1421"* [ %157, %145 ], [ %142, %140 ]
  %147 = phi i8* [ %156, %145 ], [ %141, %140 ]
  %148 = bitcast i8* %147 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1
  %150 = icmp slt <16 x i8> %149, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %151 = bitcast <16 x i1> %150 to i16
  %152 = zext i16 %151 to i32
  %153 = add nuw nsw i32 %152, 1
  %154 = tail call i32 @llvm.cttz.i32(i32 %153, i1 true) #17, !range !3
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %147, i64 %155
  %157 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %146, i64 %155
  %158 = load i8, i8* %156, align 1
  %159 = icmp slt i8 %158, -1
  br i1 %159, label %145, label %160

160:                                              ; preds = %145, %140
  %161 = phi %"union.absl::container_internal::map_slot_type.1421"* [ %142, %140 ], [ %157, %145 ]
  %162 = phi i8* [ %141, %140 ], [ %156, %145 ]
  %163 = phi i8 [ %143, %140 ], [ %158, %145 ]
  %164 = icmp eq i8 %163, -1
  %165 = select i1 %164, i8* null, i8* %162, !prof !5
  %166 = icmp eq i8* %165, null
  br i1 %166, label %98, label %92
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.1202"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 127
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %26, %5
  %9 = phi i64 [ %3, %5 ], [ %27, %26 ]
  %10 = phi i64 [ 0, %5 ], [ %28, %26 ]
  %11 = load i8*, i8** %6, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %10
  %13 = load i8, i8* %12, align 1
  %14 = icmp sgt i8 %13, -1
  br i1 %14, label %15, label %26

15:                                               ; preds = %8
  %16 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %7, align 8
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %16, i64 %10, i32 0, i32 1, i32 0, i32 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %16, i64 %10, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %16, i64 %10, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %22, align 8
  %24 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #17
  %25 = load i64, i64* %2, align 8
  br label %26

26:                                               ; preds = %20, %15, %8
  %27 = phi i64 [ %25, %20 ], [ %9, %15 ], [ %9, %8 ]
  %28 = add i64 %10, 1
  %29 = icmp eq i64 %28, %27
  br i1 %29, label %30, label %8

30:                                               ; preds = %26
  %31 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %31) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %32 = bitcast %"union.absl::container_internal::map_slot_type.1203"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #17
  br label %74

33:                                               ; preds = %1
  %34 = icmp eq i64 %3, 0
  br i1 %34, label %74, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 0
  %37 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 1
  br label %52

38:                                               ; preds = %70
  %39 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 2
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = add i64 %71, 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 -128, i64 %42, i1 false) #17
  %43 = load i8*, i8** %40, align 8
  %44 = load i64, i64* %2, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  store i8 -1, i8* %45, align 1
  %46 = load i64, i64* %2, align 8
  %47 = lshr i64 %46, 3
  %48 = sub i64 %46, %47
  %49 = load i64, i64* %39, align 8
  %50 = sub i64 %48, %49
  %51 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %50, i64* %51, align 8
  br label %74

52:                                               ; preds = %35, %70
  %53 = phi i64 [ %3, %35 ], [ %71, %70 ]
  %54 = phi i64 [ 0, %35 ], [ %72, %70 ]
  %55 = load i8*, i8** %36, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = icmp sgt i8 %57, -1
  br i1 %58, label %59, label %70

59:                                               ; preds = %52
  %60 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %37, align 8
  %61 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %60, i64 %54, i32 0, i32 1, i32 0, i32 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %60, i64 %54, i32 0, i32 1, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %60, i64 %54, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %66, align 8
  %68 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false) #17
  %69 = load i64, i64* %2, align 8
  br label %70

70:                                               ; preds = %64, %59, %52
  %71 = phi i64 [ %69, %64 ], [ %53, %59 ], [ %53, %52 ]
  %72 = add i64 %54, 1
  %73 = icmp eq i64 %72, %71
  br i1 %73, label %38, label %52

74:                                               ; preds = %33, %38, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx15RenderPassCache13addRenderPassEPNS_9ContextVkERKNS_2vk14RenderPassDescEPPNS3_10RenderPassE(%"class.rx::RenderPassCache"*, %"class.rx::ContextVk"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12), %"class.rx::vk::RenderPass"** nocapture) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.rx::vk::AttachmentOpsArray", align 2
  %6 = bitcast %"class.rx::vk::AttachmentOpsArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %6, i8 0, i64 40, i1 false) #17
  %7 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 0
  %8 = load i8, i8* %7, align 4
  %9 = lshr i8 %8, 3
  %10 = and i8 %9, 15
  %11 = zext i8 %10 to i64
  %12 = icmp eq i8 %10, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %33, %4
  %14 = phi i32 [ 0, %4 ], [ %34, %33 ]
  %15 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 3, i32 0, i64 %11
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, 7
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %44, label %38

19:                                               ; preds = %4, %33
  %20 = phi i64 [ %36, %33 ], [ 0, %4 ]
  %21 = phi i32 [ %35, %33 ], [ 0, %4 ]
  %22 = phi i32 [ %34, %33 ], [ 0, %4 ]
  %23 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 3, i32 0, i64 %20
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %19
  %27 = zext i32 %22 to i64
  %28 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %5, i64 0, i32 0, i32 0, i64 %27, i32 0
  %29 = load i32, i32* %28, align 2
  %30 = and i32 %29, -16712704
  %31 = or i32 %30, 1114112
  store i32 %31, i32* %28, align 2
  %32 = add i32 %22, 1
  br label %33

33:                                               ; preds = %19, %26
  %34 = phi i32 [ %32, %26 ], [ %22, %19 ]
  %35 = add i32 %21, 1
  %36 = zext i32 %35 to i64
  %37 = icmp ugt i64 %11, %36
  br i1 %37, label %19, label %13

38:                                               ; preds = %13
  %39 = zext i32 %14 to i64
  %40 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %5, i64 0, i32 0, i32 0, i64 %39, i32 0
  %41 = load i32, i32* %40, align 2
  %42 = and i32 %41, -16712704
  %43 = or i32 %42, 7798784
  store i32 %43, i32* %40, align 2
  br label %44

44:                                               ; preds = %13, %38
  %45 = call i32 @_ZN2rx15RenderPassCache24getRenderPassWithOpsImplEPNS_9ContextVkERKNS_2vk14RenderPassDescERKNS3_18AttachmentOpsArrayEbPPNS3_10RenderPassE(%"class.rx::RenderPassCache"* %0, %"class.rx::ContextVk"* %1, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %2, %"class.rx::vk::AttachmentOpsArray"* nonnull dereferenceable(40) %5, i1 zeroext false, %"class.rx::vk::RenderPass"** %3)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #17
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx15RenderPassCache24getRenderPassWithOpsImplEPNS_9ContextVkERKNS_2vk14RenderPassDescERKNS3_18AttachmentOpsArrayEbPPNS3_10RenderPassE(%"class.rx::RenderPassCache"*, %"class.rx::ContextVk"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12), %"class.rx::vk::AttachmentOpsArray"* dereferenceable(40), i1 zeroext, %"class.rx::vk::RenderPass"** nocapture) local_unnamed_addr #2 align 2 {
  %7 = alloca %"struct.std::__1::array.1522", align 8
  %8 = bitcast %"struct.std::__1::array.1522"* %7 to i8*
  %9 = alloca %"class.angle::FastVector.1523", align 8
  %10 = alloca %"class.angle::FastVector.1527", align 8
  %11 = alloca %"class.angle::FastVector.1527", align 8
  %12 = alloca %"class.angle::FastVector.1531", align 8
  %13 = alloca %"class.angle::FastVector.1533", align 8
  %14 = alloca %struct.VkMultisampledRenderToSingleSampledInfoEXT, align 8
  %15 = alloca %struct.VkRenderPassCreateInfo2, align 8
  %16 = alloca %"class.angle::FixedVector.1503", align 8
  %17 = alloca %"class.angle::FixedVector.1503", align 8
  %18 = alloca i64, align 8
  %19 = alloca %struct.VkAttachmentReference2, align 8
  %20 = alloca %"struct.std::__1::array.1505", align 4
  %21 = alloca %"class.angle::FastVector.1506", align 8
  %22 = alloca %"class.angle::FixedVector.1503", align 8
  %23 = alloca i64, align 8
  %24 = alloca %"class.angle::FixedVector.1508", align 8
  %25 = alloca %"class.angle::FixedVector.1510", align 8
  %26 = alloca %struct.VkSubpassDescriptionDepthStencilResolve, align 8
  %27 = alloca %"class.std::__1::vector.1512", align 8
  %28 = alloca %struct.VkRenderPassCreateInfo, align 8
  %29 = alloca %"class.rx::vk::RenderPassHelper", align 8
  %30 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = tail call { i8*, %"union.absl::container_internal::map_slot_type.1203"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE4findIS5_EENSR_8iteratorERSO_(%"class.absl::container_internal::raw_hash_set.1202"* %30, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %2)
  %32 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.1203"* } %31, 0
  %33 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.1203"* } %31, 1
  %34 = icmp eq i8* %32, null
  br i1 %34, label %134, label %35

35:                                               ; preds = %6
  %36 = load i8, i8* %32, align 1
  %37 = icmp sgt i8 %36, -1
  br i1 %37, label %39, label %38, !prof !2

38:                                               ; preds = %35
  tail call void @llvm.trap() #17
  unreachable

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %33, i64 0, i32 0, i32 1, i32 0, i32 0
  %41 = tail call { i8*, %"union.absl::container_internal::map_slot_type.1421"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE4findIS5_EENSJ_8iteratorERSG_(%"class.absl::container_internal::raw_hash_set.1420"* %40, %"class.rx::vk::AttachmentOpsArray"* dereferenceable(40) %3)
  %42 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.1421"* } %41, 0
  %43 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.1421"* } %41, 1
  %44 = icmp eq i8* %42, null
  br i1 %44, label %159, label %45

45:                                               ; preds = %39
  %46 = load i8, i8* %42, align 1
  %47 = icmp sgt i8 %46, -1
  br i1 %47, label %49, label %48, !prof !2

48:                                               ; preds = %45
  tail call void @llvm.trap() #17
  unreachable

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 1
  store %"class.rx::vk::RenderPass"* %50, %"class.rx::vk::RenderPass"** %5, align 8
  br i1 %4, label %51, label %130

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 5
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, %54
  store i32 %57, i32* %55, align 4
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 6
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, %60
  store i32 %63, i32* %61, align 4
  %64 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 7
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %68, %66
  store i32 %69, i32* %67, align 4
  %70 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 3
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 8
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, %72
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 4
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 9
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %80, %78
  store i32 %81, i32* %79, align 4
  %82 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 5
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 10
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, %84
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 6
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 11
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, %90
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 7
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 14
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, %96
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 12
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, %102
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 9
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 15
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, %108
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 10
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 13
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %116, %114
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 11
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 16
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, %120
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %43, i64 0, i32 0, i32 1, i32 2, i32 12
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 17
  %128 = load i32, i32* %127, align 4
  %129 = add i32 %128, %126
  store i32 %129, i32* %127, align 4
  br label %130

130:                                              ; preds = %49, %51
  %131 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 2, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %131, align 8
  br label %1776

134:                                              ; preds = %6
  %135 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.1202"* %30, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %2) #17, !noalias !45
  %136 = extractvalue { i64, i8 } %135, 0
  %137 = extractvalue { i64, i8 } %135, 1
  %138 = and i8 %137, 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %142 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %141, align 8, !noalias !45
  %143 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %142, i64 %136, i32 0, i32 0, i32 1, i32 0
  store i8 0, i8* %143, align 1, !noalias !45
  %144 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %142, i64 %136, i32 0, i32 0, i32 2, i32 0
  store i8 0, i8* %144, align 1, !noalias !45
  %145 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %142, i64 %136, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 12, i1 false) #17, !noalias !45
  %147 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %142, i64 %136, i32 0, i32 1
  %148 = bitcast %"class.absl::flat_hash_map.1418"* %147 to i64*
  store i64 ptrtoint ([16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group to i64), i64* %148, align 8, !noalias !45
  %149 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %142, i64 %136, i32 0, i32 1, i32 0, i32 0, i32 1
  %150 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %149 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 32, i1 false)
  br label %151

151:                                              ; preds = %140, %134
  %152 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8, !noalias !45
  %154 = getelementptr inbounds i8, i8* %153, i64 %136
  %155 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %156 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %155, align 8, !noalias !45
  %157 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %156, i64 %136
  %158 = icmp ne i8* %154, null
  tail call void @llvm.assume(i1 %158) #17, !noalias !45
  br label %159

159:                                              ; preds = %39, %151
  %160 = phi i8* [ %154, %151 ], [ %32, %39 ]
  %161 = phi %"union.absl::container_internal::map_slot_type.1203"* [ %157, %151 ], [ %33, %39 ]
  %162 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %0, i64 0, i32 2, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %162, align 8
  %165 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %165) #17
  %166 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 1, i32 0, i32 0
  %167 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 0
  %168 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 1
  %169 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 2
  %170 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 3
  %171 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 4
  %172 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 5
  %173 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 6
  %174 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 7
  %175 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 8
  %176 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 9
  %177 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 10
  %178 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 11
  %179 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2, i32 12
  %180 = bitcast %struct.VkRenderPass_T** %166 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 21, i1 false) #17
  %181 = bitcast i64* %18 to %struct.VkAttachmentReference*
  %182 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1
  %183 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %184 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %183, align 8
  %185 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 0
  %186 = load i8, i8* %185, align 4
  %187 = icmp slt i8 %186, 0
  %188 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 3, i32 0, i64 8
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  %191 = and i8 %186, 7
  %192 = zext i8 %191 to i32
  %193 = shl i32 1, %192
  %194 = trunc i32 %193 to i8
  %195 = select i1 %190, i8 1, i8 %194
  %196 = select i1 %190, i32 %193, i32 1
  %197 = bitcast %"class.angle::FixedVector.1503"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %197) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 64, i1 false) #17
  %198 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %16, i64 0, i32 1
  store i64 0, i64* %198, align 8
  %199 = bitcast %"class.angle::FixedVector.1503"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %199) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 -86, i64 64, i1 false) #17
  %200 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %17, i64 0, i32 1
  store i64 0, i64* %200, align 8
  %201 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #17
  store i64 4294967295, i64* %18, align 8
  %202 = bitcast %struct.VkAttachmentReference2* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %202, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, i32, i32, [4 x i8] }* @__const._ZN2rx2vk12_GLOBAL__N_128InitializeRenderPassFromDescEPNS_9ContextVkERKNS0_14RenderPassDescERKNS0_18AttachmentOpsArrayEPNS0_16RenderPassHelperE.depthStencilResolveAttachmentRef to i8*), i64 32, i1 false) #17
  %203 = bitcast %"struct.std::__1::array.1505"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %203) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %203, i8 -86, i64 648, i1 false) #17
  %204 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 2, i32 0
  %205 = load i8, i8* %204, align 1, !noalias !58
  %206 = and i8 %189, 48
  %207 = or i8 %205, %206
  %208 = icmp ne i8 %207, 0
  %209 = and i8 %186, 120
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %213, label %211

211:                                              ; preds = %159
  %212 = zext i8 %195 to i32
  br label %222

213:                                              ; preds = %314, %159
  %214 = phi i8 [ %186, %159 ], [ %315, %314 ]
  %215 = phi i32 [ 0, %159 ], [ %317, %314 ]
  %216 = phi i8 [ 0, %159 ], [ %318, %314 ]
  %217 = phi i64 [ 0, %159 ], [ %323, %314 ]
  %218 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 3, i32 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = and i8 %219, 7
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %377, label %325

222:                                              ; preds = %314, %211
  %223 = phi i8 [ %186, %211 ], [ %315, %314 ]
  %224 = phi i64 [ 0, %211 ], [ %316, %314 ]
  %225 = phi i64 [ 0, %211 ], [ %320, %314 ]
  %226 = phi i32 [ 0, %211 ], [ %319, %314 ]
  %227 = phi i8 [ 0, %211 ], [ %318, %314 ]
  %228 = phi i32 [ 0, %211 ], [ %317, %314 ]
  %229 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 3, i32 0, i64 %225
  %230 = load i8, i8* %229, align 1
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %237

232:                                              ; preds = %222
  %233 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %16, i64 0, i32 0, i32 0, i64 %224
  %234 = bitcast %struct.VkAttachmentReference* %233 to i64*
  store i64 4294967295, i64* %234, align 8
  %235 = load i64, i64* %198, align 8
  %236 = add i64 %235, 1
  store i64 %236, i64* %198, align 8
  br label %314

237:                                              ; preds = %222
  %238 = zext i8 %230 to i64
  %239 = zext i32 %228 to i64
  br i1 %187, label %246, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %3, i64 0, i32 0, i32 0, i64 %239, i32 0
  %242 = load i32, i32* %241, align 2
  %243 = lshr i32 %242, 16
  %244 = and i32 %243, 15
  %245 = tail call i32 @_ZN2rx2vk33ConvertImageLayoutToVkImageLayoutENS0_11ImageLayoutE(i32 %244) #17
  br label %246

246:                                              ; preds = %240, %237
  %247 = phi i32 [ %245, %240 ], [ 1, %237 ]
  %248 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %16, i64 0, i32 0, i32 0, i64 %224
  %249 = bitcast %struct.VkAttachmentReference* %248 to i64*
  %250 = zext i32 %247 to i64
  %251 = shl nuw i64 %250, 32
  %252 = or i64 %251, %239
  store i64 %252, i64* %249, align 8
  %253 = load i64, i64* %198, align 8
  %254 = add i64 %253, 1
  store i64 %254, i64* %198, align 8
  %255 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %239, i32 0
  store i32 0, i32* %255, align 4
  %256 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %184, i64 0, i32 49, i32 1, i32 0, i64 %238, i32 2
  %257 = load i32, i32* %256, align 8
  %258 = tail call i32 @_ZN2rx2vk23GetVkFormatFromFormatIDEN5angle8FormatIDE(i32 %257) #17
  %259 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %239, i32 1
  store i32 %258, i32* %259, align 4
  %260 = tail call i32 @_ZN2rx5gl_vk10GetSamplesEi(i32 %212) #17
  %261 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %239, i32 2
  store i32 %260, i32* %261, align 4
  %262 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %3, i64 0, i32 0, i32 0, i64 %239, i32 0
  %263 = load i32, i32* %262, align 2
  %264 = and i32 %263, 3
  %265 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %239, i32 3
  store i32 %264, i32* %265, align 4
  %266 = lshr i32 %263, 2
  %267 = and i32 %266, 3
  %268 = icmp eq i32 %267, 2
  %269 = select i1 %268, i32 1000301000, i32 %267
  %270 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %239, i32 4
  store i32 %269, i32* %270, align 4
  %271 = lshr i32 %263, 4
  %272 = and i32 %271, 3
  %273 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %239, i32 5
  store i32 %272, i32* %273, align 4
  %274 = lshr i32 %263, 6
  %275 = and i32 %274, 3
  %276 = icmp eq i32 %275, 2
  %277 = select i1 %276, i32 1000301000, i32 %275
  %278 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %239, i32 6
  store i32 %277, i32* %278, align 4
  %279 = lshr i32 %263, 16
  %280 = and i32 %279, 15
  %281 = tail call i32 @_ZN2rx2vk33ConvertImageLayoutToVkImageLayoutENS0_11ImageLayoutE(i32 %280) #17
  %282 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %239, i32 7
  store i32 %281, i32* %282, align 4
  %283 = load i32, i32* %262, align 2
  %284 = lshr i32 %283, 20
  %285 = and i32 %284, 15
  %286 = tail call i32 @_ZN2rx2vk33ConvertImageLayoutToVkImageLayoutENS0_11ImageLayoutE(i32 %285) #17
  %287 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %239, i32 8
  store i32 %286, i32* %287, align 4
  %288 = load i32, i32* %256, align 8
  %289 = tail call i32 @_ZN2rx15ConvertToLinearEN5angle8FormatIDE(i32 %288) #17
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %296, label %291

291:                                              ; preds = %246
  %292 = load i8, i8* %188, align 1
  %293 = and i8 %292, 8
  %294 = icmp eq i8 %293, 0
  %295 = select i1 %294, i32 %288, i32 %289
  br label %296

296:                                              ; preds = %291, %246
  %297 = phi i32 [ %288, %246 ], [ %295, %291 ]
  %298 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %183, align 8
  %299 = sext i32 %297 to i64
  %300 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %298, i64 0, i32 49, i32 1, i32 0, i64 %299, i32 2
  %301 = load i32, i32* %300, align 8
  %302 = tail call i32 @_ZN2rx2vk23GetVkFormatFromFormatIDEN5angle8FormatIDE(i32 %301) #17
  store i32 %302, i32* %259, align 4
  %303 = load i32, i32* %262, align 2
  %304 = and i32 %303, 256
  %305 = icmp eq i32 %304, 0
  %306 = shl i32 1, %226
  %307 = trunc i32 %306 to i8
  %308 = or i8 %227, %307
  %309 = xor i8 %307, -1
  %310 = and i8 %227, %309
  %311 = select i1 %305, i8 %310, i8 %308
  %312 = add i32 %228, 1
  %313 = load i8, i8* %185, align 4
  br label %314

314:                                              ; preds = %296, %232
  %315 = phi i8 [ %313, %296 ], [ %223, %232 ]
  %316 = phi i64 [ %254, %296 ], [ %236, %232 ]
  %317 = phi i32 [ %312, %296 ], [ %228, %232 ]
  %318 = phi i8 [ %311, %296 ], [ %227, %232 ]
  %319 = add i32 %226, 1
  %320 = zext i32 %319 to i64
  %321 = lshr i8 %315, 3
  %322 = and i8 %321, 15
  %323 = zext i8 %322 to i64
  %324 = icmp ugt i64 %323, %320
  br i1 %324, label %222, label %213

325:                                              ; preds = %213
  %326 = zext i8 %220 to i64
  %327 = bitcast i64* %18 to i32*
  store i32 %215, i32* %327, align 8
  %328 = zext i32 %215 to i64
  %329 = getelementptr inbounds %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::AttachmentOpsArray"* %3, i64 0, i32 0, i32 0, i64 %328, i32 0
  %330 = load i32, i32* %329, align 2
  %331 = lshr i32 %330, 16
  %332 = and i32 %331, 15
  %333 = tail call i32 @_ZN2rx2vk33ConvertImageLayoutToVkImageLayoutENS0_11ImageLayoutE(i32 %332) #17
  %334 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %181, i64 0, i32 1
  store i32 %333, i32* %334, align 4
  %335 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %328, i32 0
  store i32 0, i32* %335, align 4
  %336 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %184, i64 0, i32 49, i32 1, i32 0, i64 %326, i32 2
  %337 = load i32, i32* %336, align 8
  %338 = tail call i32 @_ZN2rx2vk23GetVkFormatFromFormatIDEN5angle8FormatIDE(i32 %337) #17
  %339 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %328, i32 1
  store i32 %338, i32* %339, align 4
  %340 = zext i8 %195 to i32
  %341 = tail call i32 @_ZN2rx5gl_vk10GetSamplesEi(i32 %340) #17
  %342 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %328, i32 2
  store i32 %341, i32* %342, align 4
  %343 = load i32, i32* %329, align 2
  %344 = and i32 %343, 3
  %345 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %328, i32 3
  store i32 %344, i32* %345, align 4
  %346 = lshr i32 %343, 2
  %347 = and i32 %346, 3
  %348 = icmp eq i32 %347, 2
  %349 = select i1 %348, i32 1000301000, i32 %347
  %350 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %328, i32 4
  store i32 %349, i32* %350, align 4
  %351 = lshr i32 %343, 4
  %352 = and i32 %351, 3
  %353 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %328, i32 5
  store i32 %352, i32* %353, align 4
  %354 = lshr i32 %343, 6
  %355 = and i32 %354, 3
  %356 = icmp eq i32 %355, 2
  %357 = select i1 %356, i32 1000301000, i32 %355
  %358 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %328, i32 6
  store i32 %357, i32* %358, align 4
  %359 = lshr i32 %343, 16
  %360 = and i32 %359, 15
  %361 = tail call i32 @_ZN2rx2vk33ConvertImageLayoutToVkImageLayoutENS0_11ImageLayoutE(i32 %360) #17
  %362 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %328, i32 7
  store i32 %361, i32* %362, align 4
  %363 = load i32, i32* %329, align 2
  %364 = lshr i32 %363, 20
  %365 = and i32 %364, 15
  %366 = tail call i32 @_ZN2rx2vk33ConvertImageLayoutToVkImageLayoutENS0_11ImageLayoutE(i32 %365) #17
  %367 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %328, i32 8
  store i32 %366, i32* %367, align 4
  %368 = load i32, i32* %329, align 2
  %369 = lshr i32 %368, 8
  %370 = trunc i32 %369 to i8
  %371 = and i8 %370, 1
  %372 = lshr i32 %368, 9
  %373 = trunc i32 %372 to i8
  %374 = and i8 %373, 1
  %375 = add i32 %215, 1
  %376 = load i8, i8* %185, align 4
  br label %377

377:                                              ; preds = %325, %213
  %378 = phi i32 [ %215, %325 ], [ -1, %213 ]
  %379 = phi i8 [ %376, %325 ], [ %214, %213 ]
  %380 = phi i32 [ %375, %325 ], [ %215, %213 ]
  %381 = phi i8 [ %374, %325 ], [ 0, %213 ]
  %382 = phi i8 [ %371, %325 ], [ 0, %213 ]
  %383 = and i8 %379, 120
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %388, label %385

385:                                              ; preds = %377
  %386 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 1, i32 0
  %387 = xor i1 %208, true
  br label %394

388:                                              ; preds = %447, %377
  %389 = phi i32 [ %380, %377 ], [ %450, %447 ]
  %390 = phi i64 [ 0, %377 ], [ %455, %447 ]
  %391 = load i8, i8* %188, align 1
  %392 = and i8 %391, 64
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %504, label %457

394:                                              ; preds = %447, %385
  %395 = phi i8 [ %379, %385 ], [ %448, %447 ]
  %396 = phi i64 [ 0, %385 ], [ %449, %447 ]
  %397 = phi i64 [ 0, %385 ], [ %452, %447 ]
  %398 = phi i32 [ 0, %385 ], [ %451, %447 ]
  %399 = phi i32 [ %380, %385 ], [ %450, %447 ]
  %400 = load i8, i8* %386, align 1
  %401 = shl i32 1, %398
  %402 = trunc i32 %401 to i8
  %403 = and i8 %400, %402
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %405, label %410

405:                                              ; preds = %394
  %406 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %17, i64 0, i32 0, i32 0, i64 %396
  %407 = bitcast %struct.VkAttachmentReference* %406 to i64*
  store i64 4294967295, i64* %407, align 8
  %408 = load i64, i64* %200, align 8
  %409 = add i64 %408, 1
  store i64 %409, i64* %200, align 8
  br label %447

410:                                              ; preds = %394
  %411 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 3, i32 0, i64 %397
  %412 = load i8, i8* %411, align 1
  %413 = zext i8 %412 to i64
  %414 = and i8 %216, %402
  %415 = icmp ne i8 %414, 0
  %416 = and i1 %415, %387
  %417 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %17, i64 0, i32 0, i32 0, i64 %396
  %418 = bitcast %struct.VkAttachmentReference* %417 to i64*
  br i1 %416, label %419, label %422

419:                                              ; preds = %410
  store i64 4294967295, i64* %418, align 8
  %420 = load i64, i64* %200, align 8
  %421 = zext i32 %399 to i64
  br label %426

422:                                              ; preds = %410
  %423 = zext i32 %399 to i64
  %424 = or i64 %423, 8589934592
  store i64 %424, i64* %418, align 8
  %425 = load i64, i64* %200, align 8
  br label %426

426:                                              ; preds = %422, %419
  %427 = phi i64 [ %423, %422 ], [ %421, %419 ]
  %428 = phi i64 [ %425, %422 ], [ %420, %419 ]
  %429 = add i64 %428, 1
  store i64 %429, i64* %200, align 8
  %430 = load i8, i8* %204, align 1
  %431 = and i8 %430, %402
  %432 = icmp eq i8 %431, 0
  %433 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %427, i32 0
  store i32 0, i32* %433, align 4
  %434 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %184, i64 0, i32 49, i32 1, i32 0, i64 %413, i32 2
  %435 = load i32, i32* %434, align 8
  %436 = tail call i32 @_ZN2rx2vk23GetVkFormatFromFormatIDEN5angle8FormatIDE(i32 %435) #17
  %437 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %427, i32 1
  store i32 %436, i32* %437, align 4
  %438 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %427, i32 2
  store i32 1, i32* %438, align 4
  %439 = select i1 %432, i32 2, i32 0
  %440 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %427, i32 3
  store i32 %439, i32* %440, align 4
  %441 = zext i1 %415 to i32
  %442 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %427, i32 4
  store i32 %441, i32* %442, align 4
  %443 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %427, i32 5
  %444 = bitcast i32* %443 to <4 x i32>*
  store <4 x i32> <i32 2, i32 1, i32 2, i32 2>, <4 x i32>* %444, align 4
  %445 = add i32 %399, 1
  %446 = load i8, i8* %185, align 4
  br label %447

447:                                              ; preds = %426, %405
  %448 = phi i8 [ %446, %426 ], [ %395, %405 ]
  %449 = phi i64 [ %429, %426 ], [ %409, %405 ]
  %450 = phi i32 [ %445, %426 ], [ %399, %405 ]
  %451 = add i32 %398, 1
  %452 = zext i32 %451 to i64
  %453 = lshr i8 %448, 3
  %454 = and i8 %453, 15
  %455 = zext i8 %454 to i64
  %456 = icmp ugt i64 %455, %452
  br i1 %456, label %394, label %388

457:                                              ; preds = %388
  %458 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 3, i32 0, i64 %390
  %459 = load i8, i8* %458, align 1
  %460 = and i8 %459, 7
  %461 = zext i8 %460 to i64
  %462 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %184, i64 0, i32 49, i32 1, i32 0, i64 %461, i32 0
  %463 = load i32, i32* %462, align 8
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %464, i32 13
  %466 = load i32, i32* %465, align 8
  %467 = icmp eq i32 %466, 0
  %468 = select i1 %467, i8 1, i8 %382
  %469 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %464, i32 14
  %470 = load i32, i32* %469, align 4
  %471 = icmp eq i32 %470, 0
  %472 = select i1 %471, i8 1, i8 %381
  %473 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %19, i64 0, i32 2
  store i32 %389, i32* %473, align 8
  %474 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %19, i64 0, i32 3
  store i32 3, i32* %474, align 4
  %475 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %19, i64 0, i32 4
  %476 = icmp eq i8 %468, 0
  %477 = select i1 %476, i32 2, i32 0
  %478 = icmp eq i8 %472, 0
  %479 = or i32 %477, 4
  %480 = select i1 %478, i32 %479, i32 %477
  store i32 %480, i32* %475, align 8
  %481 = zext i32 %389 to i64
  %482 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %481, i32 0
  store i32 0, i32* %482, align 4
  %483 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %184, i64 0, i32 49, i32 1, i32 0, i64 %461, i32 2
  %484 = load i32, i32* %483, align 8
  %485 = tail call i32 @_ZN2rx2vk23GetVkFormatFromFormatIDEN5angle8FormatIDE(i32 %484) #17
  %486 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %481, i32 1
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %481, i32 2
  store i32 1, i32* %487, align 4
  %488 = lshr i8 %391, 4
  %489 = and i8 %488, 2
  %490 = xor i8 %489, 2
  %491 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %481, i32 3
  %492 = lshr i8 %391, 3
  %493 = and i8 %492, 2
  %494 = xor i8 %493, 2
  %495 = insertelement <4 x i8> undef, i8 %490, i32 0
  %496 = insertelement <4 x i8> %495, i8 %468, i32 1
  %497 = insertelement <4 x i8> %496, i8 %494, i32 2
  %498 = insertelement <4 x i8> %497, i8 %472, i32 3
  %499 = zext <4 x i8> %498 to <4 x i32>
  %500 = bitcast i32* %491 to <4 x i32>*
  store <4 x i32> %499, <4 x i32>* %500, align 4
  %501 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %481, i32 7
  store i32 3, i32* %501, align 4
  %502 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %481, i32 8
  store i32 3, i32* %502, align 4
  %503 = add i32 %389, 1
  br label %504

504:                                              ; preds = %457, %388
  %505 = phi i32 [ %389, %457 ], [ -1, %388 ]
  %506 = phi i32 [ %503, %457 ], [ %389, %388 ]
  %507 = phi i8 [ %472, %457 ], [ %381, %388 ]
  %508 = phi i8 [ %468, %457 ], [ %382, %388 ]
  %509 = bitcast %"class.angle::FastVector.1506"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %509) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %509, i8 -86, i64 144, i1 false) #17
  %510 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 1
  %511 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0
  store %struct.VkSubpassDescription* %511, %struct.VkSubpassDescription** %510, align 8
  %512 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 2
  %513 = bitcast i64* %512 to <2 x i64>*
  store <2 x i64> <i64 0, i64 2>, <2 x i64>* %513, align 8
  %514 = bitcast %"class.angle::FixedVector.1503"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %514) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %514, i8 -86, i64 64, i1 false) #17
  %515 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %22, i64 0, i32 1
  store i64 0, i64* %515, align 8
  %516 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %516) #17
  store i64 4294967295, i64* %23, align 8
  %517 = bitcast %"class.angle::FixedVector.1508"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %517) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %517, i8 -86, i64 144, i1 false) #17
  %518 = getelementptr inbounds %"class.angle::FixedVector.1508", %"class.angle::FixedVector.1508"* %24, i64 0, i32 1
  store i64 0, i64* %518, align 8
  %519 = bitcast %"class.angle::FixedVector.1510"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %519) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %519, i8 -86, i64 72, i1 false) #17
  %520 = getelementptr inbounds %"class.angle::FixedVector.1510", %"class.angle::FixedVector.1510"* %25, i64 0, i32 1
  store i64 0, i64* %520, align 8
  br i1 %208, label %521, label %616

521:                                              ; preds = %504
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %509, i8 0, i64 72, i1 false) #17
  store i64 1, i64* %512, align 8
  %522 = load i8, i8* %185, align 4
  %523 = and i8 %522, 120
  %524 = icmp eq i8 %523, 0
  br i1 %524, label %530, label %525

525:                                              ; preds = %521
  %526 = load i8, i8* %204, align 1
  %527 = lshr i8 %522, 3
  %528 = and i8 %527, 15
  %529 = zext i8 %528 to i64
  br label %537

530:                                              ; preds = %573, %521
  %531 = phi i64 [ 0, %521 ], [ %575, %573 ]
  %532 = phi i64 [ 0, %521 ], [ %574, %573 ]
  %533 = phi i64 [ 0, %521 ], [ %529, %573 ]
  %534 = load i8, i8* %188, align 1
  %535 = and i8 %534, 48
  %536 = icmp eq i8 %535, 0
  br i1 %536, label %587, label %578

537:                                              ; preds = %573, %525
  %538 = phi i64 [ %576, %573 ], [ 0, %525 ]
  %539 = phi i64 [ %574, %573 ], [ 0, %525 ]
  %540 = phi i64 [ %575, %573 ], [ 0, %525 ]
  %541 = trunc i64 %538 to i32
  %542 = shl i32 1, %541
  %543 = trunc i32 %542 to i8
  %544 = and i8 %526, %543
  %545 = icmp eq i8 %544, 0
  br i1 %545, label %546, label %556

546:                                              ; preds = %537
  %547 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 3, i32 0, i64 %538
  %548 = load i8, i8* %547, align 1
  %549 = icmp eq i8 %548, 0
  br i1 %549, label %573, label %550

550:                                              ; preds = %546
  %551 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %16, i64 0, i32 0, i32 0, i64 %538, i32 0
  %552 = load i32, i32* %551, align 8
  %553 = getelementptr inbounds %"class.angle::FixedVector.1510", %"class.angle::FixedVector.1510"* %25, i64 0, i32 0, i32 0, i64 %539
  store i32 %552, i32* %553, align 4
  %554 = load i64, i64* %520, align 8
  %555 = add i64 %554, 1
  store i64 %555, i64* %520, align 8
  br label %573

556:                                              ; preds = %537
  %557 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %16, i64 0, i32 0, i32 0, i64 %538
  %558 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %22, i64 0, i32 0, i32 0, i64 %540
  %559 = bitcast %struct.VkAttachmentReference* %557 to i64*
  %560 = bitcast %struct.VkAttachmentReference* %558 to i64*
  %561 = load i64, i64* %559, align 8
  store i64 %561, i64* %560, align 8
  %562 = load i64, i64* %515, align 8
  %563 = add i64 %562, 1
  store i64 %563, i64* %515, align 8
  %564 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %17, i64 0, i32 0, i32 0, i64 %538
  %565 = load i64, i64* %518, align 8
  %566 = getelementptr inbounds %"class.angle::FixedVector.1508", %"class.angle::FixedVector.1508"* %24, i64 0, i32 0, i32 0, i64 %565
  %567 = bitcast %struct.VkAttachmentReference* %564 to i64*
  %568 = bitcast %struct.VkAttachmentReference* %566 to i64*
  %569 = load i64, i64* %567, align 8
  store i64 %569, i64* %568, align 8
  %570 = load i64, i64* %518, align 8
  %571 = add i64 %570, 1
  store i64 %571, i64* %518, align 8
  %572 = getelementptr inbounds %"class.angle::FixedVector.1508", %"class.angle::FixedVector.1508"* %24, i64 0, i32 0, i32 0, i64 %570, i32 1
  store i32 5, i32* %572, align 4
  br label %573

573:                                              ; preds = %556, %550, %546
  %574 = phi i64 [ %539, %556 ], [ %555, %550 ], [ %539, %546 ]
  %575 = phi i64 [ %563, %556 ], [ %540, %550 ], [ %540, %546 ]
  %576 = add nuw nsw i64 %538, 1
  %577 = icmp ult i64 %576, %529
  br i1 %577, label %537, label %530

578:                                              ; preds = %530
  %579 = load i64, i64* %18, align 8
  store i64 %579, i64* %23, align 8
  %580 = load i64, i64* %518, align 8
  %581 = getelementptr inbounds %"class.angle::FixedVector.1508", %"class.angle::FixedVector.1508"* %24, i64 0, i32 0, i32 0, i64 %580
  %582 = bitcast %struct.VkAttachmentReference* %581 to i64*
  %583 = zext i32 %505 to i64
  %584 = or i64 %583, 21474836480
  store i64 %584, i64* %582, align 8
  %585 = load i64, i64* %518, align 8
  %586 = add i64 %585, 1
  store i64 %586, i64* %518, align 8
  br label %596

587:                                              ; preds = %530
  %588 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %2, i64 0, i32 3, i32 0, i64 %533
  %589 = load i8, i8* %588, align 1
  %590 = and i8 %589, 7
  %591 = icmp eq i8 %590, 0
  br i1 %591, label %596, label %592

592:                                              ; preds = %587
  %593 = getelementptr inbounds %"class.angle::FixedVector.1510", %"class.angle::FixedVector.1510"* %25, i64 0, i32 0, i32 0, i64 %532
  store i32 %378, i32* %593, align 4
  %594 = load i64, i64* %520, align 8
  %595 = add i64 %594, 1
  store i64 %595, i64* %520, align 8
  br label %596

596:                                              ; preds = %592, %587, %578
  %597 = phi i64 [ %532, %578 ], [ %532, %587 ], [ %595, %592 ]
  %598 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 0
  store i32 0, i32* %598, align 8
  %599 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 1
  store i32 0, i32* %599, align 4
  %600 = load i64, i64* %518, align 8
  %601 = trunc i64 %600 to i32
  %602 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 2
  store i32 %601, i32* %602, align 8
  %603 = getelementptr inbounds %"class.angle::FixedVector.1508", %"class.angle::FixedVector.1508"* %24, i64 0, i32 0, i32 0, i64 0
  %604 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 3
  store %struct.VkAttachmentReference* %603, %struct.VkAttachmentReference** %604, align 8
  %605 = trunc i64 %531 to i32
  %606 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 4
  store i32 %605, i32* %606, align 8
  %607 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %22, i64 0, i32 0, i32 0, i64 0
  %608 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 5
  store %struct.VkAttachmentReference* %607, %struct.VkAttachmentReference** %608, align 8
  %609 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 6
  store %struct.VkAttachmentReference* null, %struct.VkAttachmentReference** %609, align 8
  %610 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 7
  %611 = bitcast %struct.VkAttachmentReference** %610 to i64**
  store i64* %23, i64** %611, align 8
  %612 = trunc i64 %597 to i32
  %613 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 8
  store i32 %612, i32* %613, align 8
  %614 = getelementptr inbounds %"class.angle::FixedVector.1510", %"class.angle::FixedVector.1510"* %25, i64 0, i32 0, i32 0, i64 0
  %615 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 0, i32 9
  store i32* %614, i32** %615, align 8
  br label %616

616:                                              ; preds = %596, %504
  %617 = phi i64 [ 1, %596 ], [ 0, %504 ]
  %618 = add nuw nsw i64 %617, 1
  store i64 %618, i64* %512, align 8
  %619 = getelementptr inbounds %"class.angle::FastVector.1506", %"class.angle::FastVector.1506"* %21, i64 0, i32 0, i32 0, i64 %617
  %620 = bitcast %struct.VkSubpassDescription* %619 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %620, i8 0, i64 72, i1 false)
  %621 = load %struct.VkSubpassDescription*, %struct.VkSubpassDescription** %510, align 8
  %622 = load i64, i64* %512, align 8
  %623 = add i64 %622, -1
  %624 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 0
  store i32 0, i32* %624, align 8
  %625 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 1
  store i32 0, i32* %625, align 4
  %626 = load i64, i64* %198, align 8
  %627 = trunc i64 %626 to i32
  %628 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %16, i64 0, i32 0, i32 0, i64 0
  %629 = select i1 %187, i32 %627, i32 0
  %630 = select i1 %187, %struct.VkAttachmentReference* %628, %struct.VkAttachmentReference* null
  %631 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 2
  store i32 %629, i32* %631, align 8
  %632 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 3
  store %struct.VkAttachmentReference* %630, %struct.VkAttachmentReference** %632, align 8
  %633 = load i64, i64* %198, align 8
  %634 = trunc i64 %633 to i32
  %635 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 4
  store i32 %634, i32* %635, align 8
  %636 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 5
  store %struct.VkAttachmentReference* %628, %struct.VkAttachmentReference** %636, align 8
  %637 = icmp ugt i32 %506, %380
  %638 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %17, i64 0, i32 0, i32 0, i64 0
  %639 = select i1 %637, %struct.VkAttachmentReference* %638, %struct.VkAttachmentReference* null
  %640 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 6
  store %struct.VkAttachmentReference* %639, %struct.VkAttachmentReference** %640, align 8
  %641 = bitcast i64* %18 to i32*
  %642 = load i32, i32* %641, align 8
  %643 = icmp eq i32 %642, -1
  %644 = select i1 %643, %struct.VkAttachmentReference* null, %struct.VkAttachmentReference* %181
  %645 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 7
  store %struct.VkAttachmentReference* %644, %struct.VkAttachmentReference** %645, align 8
  %646 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 8
  store i32 0, i32* %646, align 8
  %647 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %621, i64 %623, i32 9
  store i32* null, i32** %647, align 8
  %648 = bitcast %struct.VkSubpassDescriptionDepthStencilResolve* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %648) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %648, i8 0, i64 32, i1 false) #17
  %649 = load i8, i8* %188, align 1
  %650 = and i8 %649, 64
  %651 = icmp eq i8 %650, 0
  br i1 %651, label %665, label %652

652:                                              ; preds = %616
  %653 = getelementptr inbounds %struct.VkSubpassDescriptionDepthStencilResolve, %struct.VkSubpassDescriptionDepthStencilResolve* %26, i64 0, i32 0
  store i32 1000199001, i32* %653, align 8
  %654 = getelementptr inbounds %struct.VkSubpassDescriptionDepthStencilResolve, %struct.VkSubpassDescriptionDepthStencilResolve* %26, i64 0, i32 2
  store i32 1, i32* %654, align 8
  %655 = getelementptr inbounds %struct.VkSubpassDescriptionDepthStencilResolve, %struct.VkSubpassDescriptionDepthStencilResolve* %26, i64 0, i32 3
  store i32 1, i32* %655, align 4
  %656 = and i8 %508, 1
  %657 = icmp eq i8 %656, 0
  %658 = or i1 %208, %657
  %659 = xor i1 %658, true
  %660 = and i8 %507, 1
  %661 = icmp ne i8 %660, 0
  %662 = and i1 %661, %659
  br i1 %662, label %665, label %663

663:                                              ; preds = %652
  %664 = getelementptr inbounds %struct.VkSubpassDescriptionDepthStencilResolve, %struct.VkSubpassDescriptionDepthStencilResolve* %26, i64 0, i32 4
  store %struct.VkAttachmentReference2* %19, %struct.VkAttachmentReference2** %664, align 8
  br label %665

665:                                              ; preds = %663, %652, %616
  %666 = bitcast %"class.std::__1::vector.1512"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %666) #17
  %667 = getelementptr inbounds %"class.std::__1::vector.1512", %"class.std::__1::vector.1512"* %27, i64 0, i32 0, i32 0
  %668 = getelementptr inbounds %"class.std::__1::vector.1512", %"class.std::__1::vector.1512"* %27, i64 0, i32 0, i32 1
  %669 = getelementptr inbounds %"class.std::__1::vector.1512", %"class.std::__1::vector.1512"* %27, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %666, i8 0, i64 24, i1 false) #17
  br i1 %208, label %670, label %712

670:                                              ; preds = %665
  %671 = load i8, i8* %204, align 1, !noalias !61
  %672 = icmp ne i8 %671, 0
  %673 = and i8 %649, 48
  %674 = icmp eq i8 %673, 0
  %675 = bitcast %struct.VkSubpassDependency** %668 to i64*
  %676 = bitcast %"class.std::__1::vector.1512"* %27 to i64*
  %677 = bitcast %struct.VkSubpassDependency** %669 to i64*
  %678 = call i8* @_Znwm(i64 28) #21
  %679 = getelementptr inbounds i8, i8* %678, i64 28
  %680 = ptrtoint i8* %679 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %678, i8 0, i64 28, i1 false) #17
  %681 = ptrtoint i8* %678 to i64
  store i64 %681, i64* %676, align 8
  store i64 %680, i64* %675, align 8
  store i64 %680, i64* %677, align 8
  %682 = select i1 %672, i32 1024, i32 0
  %683 = select i1 %672, i32 256, i32 0
  %684 = select i1 %672, i32 384, i32 0
  %685 = insertelement <4 x i32> undef, i32 %682, i32 0
  %686 = insertelement <4 x i32> %685, i32 %682, i32 1
  %687 = insertelement <4 x i32> %686, i32 %683, i32 2
  %688 = insertelement <4 x i32> %687, i32 %684, i32 3
  %689 = or <4 x i32> %688, <i32 512, i32 256, i32 1024, i32 1536>
  %690 = select i1 %674, <4 x i32> %688, <4 x i32> %689
  %691 = bitcast i8* %678 to i32*
  store i32 0, i32* %691, align 4
  %692 = getelementptr inbounds i8, i8* %678, i64 4
  %693 = bitcast i8* %692 to i32*
  store i32 1, i32* %693, align 4
  %694 = getelementptr inbounds i8, i8* %678, i64 8
  %695 = bitcast i8* %694 to <4 x i32>*
  store <4 x i32> %690, <4 x i32>* %695, align 4
  %696 = getelementptr inbounds i8, i8* %678, i64 24
  %697 = bitcast i8* %696 to i32*
  store i32 1, i32* %697, align 4
  %698 = call i8* @_Znwm(i64 56) #21
  %699 = getelementptr inbounds i8, i8* %698, i64 28
  call void @llvm.memset.p0i8.i64(i8* align 4 %699, i8 0, i64 28, i1 false) #17
  %700 = insertelement <2 x i8*> undef, i8* %698, i32 0
  %701 = shufflevector <2 x i8*> %700, <2 x i8*> undef, <2 x i32> zeroinitializer
  %702 = getelementptr i8, <2 x i8*> %701, <2 x i64> <i64 56, i64 56>
  %703 = ptrtoint <2 x i8*> %702 to <2 x i64>
  %704 = ptrtoint i8* %698 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %698, i8* nonnull align 4 %678, i64 28, i1 false) #17
  store i64 %704, i64* %676, align 8
  %705 = bitcast %struct.VkSubpassDependency** %668 to <2 x i64>*
  store <2 x i64> %703, <2 x i64>* %705, align 8
  call void @_ZdlPv(i8* nonnull %678) #21
  %706 = load %struct.VkSubpassDependency*, %struct.VkSubpassDependency** %668, align 8
  %707 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %706, i64 -1, i32 0
  %708 = bitcast i32* %707 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 128, i32 1024>, <4 x i32>* %708, align 4
  %709 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %706, i64 -1, i32 4
  store i32 16, i32* %709, align 4
  %710 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %706, i64 -1, i32 5
  store i32 256, i32* %710, align 4
  %711 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %706, i64 -1, i32 6
  store i32 1, i32* %711, align 4
  br label %712

712:                                              ; preds = %670, %665
  br i1 %187, label %713, label %780

713:                                              ; preds = %712
  %714 = load i64, i64* %512, align 8
  %715 = trunc i64 %714 to i32
  %716 = add i32 %715, -1
  %717 = load %struct.VkSubpassDependency*, %struct.VkSubpassDependency** %668, align 8
  %718 = load %struct.VkSubpassDependency*, %struct.VkSubpassDependency** %669, align 8
  %719 = icmp ult %struct.VkSubpassDependency* %717, %718
  %720 = ptrtoint %struct.VkSubpassDependency* %718 to i64
  br i1 %719, label %721, label %726

721:                                              ; preds = %713
  %722 = bitcast %struct.VkSubpassDependency* %717 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %722, i8 0, i64 28, i1 false) #17
  %723 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %717, i64 1
  %724 = ptrtoint %struct.VkSubpassDependency* %723 to i64
  %725 = bitcast %struct.VkSubpassDependency** %668 to i64*
  store i64 %724, i64* %725, align 8
  br label %773

726:                                              ; preds = %713
  %727 = ptrtoint %struct.VkSubpassDependency* %717 to i64
  %728 = bitcast %struct.VkSubpassDependency** %668 to i64*
  %729 = bitcast %"class.std::__1::vector.1512"* %27 to i64*
  %730 = load i64, i64* %729, align 8
  %731 = sub i64 %727, %730
  %732 = sdiv exact i64 %731, 28
  %733 = add nsw i64 %732, 1
  %734 = icmp ugt i64 %733, 658812288346769700
  br i1 %734, label %735, label %737

735:                                              ; preds = %726
  %736 = bitcast %"class.std::__1::vector.1512"* %27 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %736) #22
  unreachable

737:                                              ; preds = %726
  %738 = bitcast %struct.VkSubpassDependency** %669 to i64*
  %739 = sub i64 %720, %730
  %740 = sdiv exact i64 %739, 28
  %741 = icmp ult i64 %740, 329406144173384850
  br i1 %741, label %742, label %747

742:                                              ; preds = %737
  %743 = shl nsw i64 %740, 1
  %744 = icmp ult i64 %743, %733
  %745 = select i1 %744, i64 %733, i64 %743
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %752, label %747

747:                                              ; preds = %742, %737
  %748 = phi i64 [ %745, %742 ], [ 658812288346769700, %737 ]
  %749 = mul i64 %748, 28
  %750 = call i8* @_Znwm(i64 %749) #21
  %751 = bitcast i8* %750 to %struct.VkSubpassDependency*
  br label %752

752:                                              ; preds = %747, %742
  %753 = phi i64 [ %748, %747 ], [ 0, %742 ]
  %754 = phi %struct.VkSubpassDependency* [ %751, %747 ], [ null, %742 ]
  %755 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %754, i64 %732
  %756 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %754, i64 %753
  %757 = ptrtoint %struct.VkSubpassDependency* %756 to i64
  %758 = bitcast %struct.VkSubpassDependency* %755 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %758, i8 0, i64 28, i1 false) #17
  %759 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %755, i64 1
  %760 = ptrtoint %struct.VkSubpassDependency* %759 to i64
  %761 = sdiv exact i64 %731, -28
  %762 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %755, i64 %761
  %763 = ptrtoint %struct.VkSubpassDependency* %762 to i64
  %764 = icmp sgt i64 %731, 0
  br i1 %764, label %765, label %768

765:                                              ; preds = %752
  %766 = bitcast %struct.VkSubpassDependency* %762 to i8*
  %767 = inttoptr i64 %730 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %766, i8* align 4 %767, i64 %731, i1 false) #17
  br label %768

768:                                              ; preds = %765, %752
  store i64 %763, i64* %729, align 8
  store i64 %760, i64* %728, align 8
  store i64 %757, i64* %738, align 8
  %769 = icmp eq i64 %730, 0
  br i1 %769, label %773, label %770

770:                                              ; preds = %768
  %771 = inttoptr i64 %730 to i8*
  call void @_ZdlPv(i8* %771) #21
  %772 = load %struct.VkSubpassDependency*, %struct.VkSubpassDependency** %668, align 8
  br label %773

773:                                              ; preds = %770, %768, %721
  %774 = phi %struct.VkSubpassDependency* [ %723, %721 ], [ %759, %768 ], [ %772, %770 ]
  %775 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %774, i64 -1, i32 0
  store i32 %716, i32* %775, align 4
  %776 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %774, i64 -1, i32 1
  store i32 %716, i32* %776, align 4
  %777 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %774, i64 -1, i32 2
  %778 = bitcast i32* %777 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 128, i32 256, i32 16>, <4 x i32>* %778, align 4
  %779 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %774, i64 -1, i32 6
  store i32 1, i32* %779, align 4
  br label %780

780:                                              ; preds = %773, %712
  %781 = bitcast %struct.VkRenderPassCreateInfo* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %781) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %781, i8 0, i64 56, i1 false) #17
  %782 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %28, i64 0, i32 0
  store i32 38, i32* %782, align 8
  %783 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %28, i64 0, i32 2
  store i32 0, i32* %783, align 8
  %784 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %28, i64 0, i32 3
  store i32 %506, i32* %784, align 4
  %785 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 0
  %786 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %28, i64 0, i32 4
  store %struct.VkAttachmentDescription* %785, %struct.VkAttachmentDescription** %786, align 8
  %787 = load i64, i64* %512, align 8
  %788 = trunc i64 %787 to i32
  %789 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %28, i64 0, i32 5
  store i32 %788, i32* %789, align 8
  %790 = bitcast %struct.VkSubpassDescription** %510 to i64*
  %791 = load i64, i64* %790, align 8
  %792 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %28, i64 0, i32 6
  %793 = bitcast %struct.VkSubpassDescription** %792 to i64*
  store i64 %791, i64* %793, align 8
  %794 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %28, i64 0, i32 7
  store i32 0, i32* %794, align 8
  %795 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %28, i64 0, i32 8
  store %struct.VkSubpassDependency* null, %struct.VkSubpassDependency** %795, align 8
  %796 = load %struct.VkSubpassDependency*, %struct.VkSubpassDependency** %667, align 8
  %797 = load %struct.VkSubpassDependency*, %struct.VkSubpassDependency** %668, align 8
  %798 = icmp eq %struct.VkSubpassDependency* %796, %797
  br i1 %798, label %805, label %799

799:                                              ; preds = %780
  %800 = ptrtoint %struct.VkSubpassDependency* %796 to i64
  %801 = ptrtoint %struct.VkSubpassDependency* %797 to i64
  %802 = sub i64 %801, %800
  %803 = sdiv exact i64 %802, 28
  %804 = trunc i64 %803 to i32
  store i32 %804, i32* %794, align 8
  store %struct.VkSubpassDependency* %796, %struct.VkSubpassDependency** %795, align 8
  br label %805

805:                                              ; preds = %799, %780
  %806 = getelementptr inbounds %struct.VkSubpassDescriptionDepthStencilResolve, %struct.VkSubpassDescriptionDepthStencilResolve* %26, i64 0, i32 4
  %807 = load %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2** %806, align 8
  %808 = icmp ne %struct.VkAttachmentReference2* %807, null
  %809 = load i8, i8* %188, align 1
  %810 = icmp slt i8 %809, 0
  %811 = or i1 %808, %810
  br i1 %811, label %812, label %1395

812:                                              ; preds = %805
  %813 = icmp eq %"class.rx::ContextVk"* %1, null
  %814 = select i1 %813, %"class.rx::vk::Context"* null, %"class.rx::vk::Context"* %182
  call void @llvm.lifetime.start.p0i8(i64 1008, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 1008, i1 false) #17
  %815 = icmp eq i32 %506, 0
  br i1 %815, label %818, label %816

816:                                              ; preds = %812
  %817 = zext i32 %506 to i64
  br label %894

818:                                              ; preds = %894, %812
  %819 = bitcast %"class.angle::FastVector.1523"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1192, i8* nonnull %819) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %819, i8 -86, i64 1160, i1 false) #17
  %820 = and i64 %787, 4294967295
  %821 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %9, i64 0, i32 0, i32 0, i64 0, i32 1
  store i64 0, i64* %821, align 8
  %822 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %9, i64 0, i32 0, i32 0, i64 1, i32 1
  store i64 0, i64* %822, align 8
  %823 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %9, i64 0, i32 1
  %824 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %9, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::FixedVector.1525"* %824, %"class.angle::FixedVector.1525"** %823, align 8
  %825 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %9, i64 0, i32 2
  %826 = bitcast i64* %825 to <2 x i64>*
  store <2 x i64> <i64 0, i64 2>, <2 x i64>* %826, align 8
  call void @_ZN5angle10FastVectorINS_11FixedVectorI22VkAttachmentReference2Lm18ENSt3__15arrayIS2_Lm18EEEEELm2ENS4_IS6_Lm2EEEE15ensure_capacityEm(%"class.angle::FastVector.1523"* nonnull %9, i64 %820) #17
  store i64 %820, i64* %825, align 8
  %827 = bitcast %"class.angle::FastVector.1527"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 552, i8* nonnull %827) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %827, i8 -86, i64 520, i1 false) #17
  %828 = load i32, i32* %789, align 8
  %829 = zext i32 %828 to i64
  %830 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %10, i64 0, i32 0, i32 0, i64 0, i32 1
  store i64 0, i64* %830, align 8
  %831 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %10, i64 0, i32 0, i32 0, i64 1, i32 1
  store i64 0, i64* %831, align 8
  %832 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %10, i64 0, i32 1
  %833 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %10, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::FixedVector.1529"* %833, %"class.angle::FixedVector.1529"** %832, align 8
  %834 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %10, i64 0, i32 2
  %835 = bitcast i64* %834 to <2 x i64>*
  store <2 x i64> <i64 0, i64 2>, <2 x i64>* %835, align 8
  call void @_ZN5angle10FastVectorINS_11FixedVectorI22VkAttachmentReference2Lm8ENSt3__15arrayIS2_Lm8EEEEELm2ENS4_IS6_Lm2EEEE15ensure_capacityEm(%"class.angle::FastVector.1527"* nonnull %10, i64 %829) #17
  store i64 %829, i64* %834, align 8
  %836 = bitcast %"class.angle::FastVector.1527"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 552, i8* nonnull %836) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %836, i8 -86, i64 520, i1 false) #17
  %837 = load i32, i32* %789, align 8
  %838 = zext i32 %837 to i64
  %839 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %11, i64 0, i32 0, i32 0, i64 0, i32 1
  store i64 0, i64* %839, align 8
  %840 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %11, i64 0, i32 0, i32 0, i64 1, i32 1
  store i64 0, i64* %840, align 8
  %841 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %11, i64 0, i32 1
  %842 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %11, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::FixedVector.1529"* %842, %"class.angle::FixedVector.1529"** %841, align 8
  %843 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %11, i64 0, i32 2
  %844 = bitcast i64* %843 to <2 x i64>*
  store <2 x i64> <i64 0, i64 2>, <2 x i64>* %844, align 8
  call void @_ZN5angle10FastVectorINS_11FixedVectorI22VkAttachmentReference2Lm8ENSt3__15arrayIS2_Lm8EEEEELm2ENS4_IS6_Lm2EEEE15ensure_capacityEm(%"class.angle::FastVector.1527"* nonnull %11, i64 %838) #17
  store i64 %838, i64* %843, align 8
  %845 = bitcast %"class.angle::FastVector.1531"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %845) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %845, i8 -86, i64 64, i1 false) #17
  %846 = load i32, i32* %789, align 8
  %847 = zext i32 %846 to i64
  %848 = getelementptr inbounds %"class.angle::FastVector.1531", %"class.angle::FastVector.1531"* %12, i64 0, i32 1
  %849 = getelementptr inbounds %"class.angle::FastVector.1531", %"class.angle::FastVector.1531"* %12, i64 0, i32 0, i32 0, i64 0
  store %struct.VkAttachmentReference2* %849, %struct.VkAttachmentReference2** %848, align 8
  %850 = getelementptr inbounds %"class.angle::FastVector.1531", %"class.angle::FastVector.1531"* %12, i64 0, i32 2
  %851 = getelementptr inbounds %"class.angle::FastVector.1531", %"class.angle::FastVector.1531"* %12, i64 0, i32 3
  %852 = bitcast i64* %850 to <2 x i64>*
  store <2 x i64> <i64 0, i64 2>, <2 x i64>* %852, align 8
  %853 = icmp ugt i32 %846, 2
  br i1 %853, label %854, label %866

854:                                              ; preds = %818, %854
  %855 = phi i64 [ %857, %854 ], [ 2, %818 ]
  %856 = icmp ult i64 %855, %847
  %857 = shl i64 %855, 1
  br i1 %856, label %854, label %858

858:                                              ; preds = %854
  %859 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %855, i64 32) #17
  %860 = extractvalue { i64, i1 } %859, 1
  %861 = extractvalue { i64, i1 } %859, 0
  %862 = select i1 %860, i64 -1, i64 %861
  %863 = call i8* @_Znam(i64 %862) #21
  %864 = bitcast %struct.VkAttachmentReference2** %848 to i8**
  store i8* %863, i8** %864, align 8
  store i64 %855, i64* %851, align 8
  %865 = bitcast i8* %863 to %struct.VkAttachmentReference2*
  br label %866

866:                                              ; preds = %858, %818
  %867 = phi %struct.VkAttachmentReference2* [ %849, %818 ], [ %865, %858 ]
  store i64 %847, i64* %850, align 8
  %868 = bitcast %"class.angle::FastVector.1533"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %868) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %868, i8 -86, i64 176, i1 false) #17
  %869 = getelementptr inbounds %"class.angle::FastVector.1533", %"class.angle::FastVector.1533"* %13, i64 0, i32 1
  %870 = getelementptr inbounds %"class.angle::FastVector.1533", %"class.angle::FastVector.1533"* %13, i64 0, i32 0, i32 0, i64 0
  store %struct.VkSubpassDescription2* %870, %struct.VkSubpassDescription2** %869, align 8
  %871 = getelementptr inbounds %"class.angle::FastVector.1533", %"class.angle::FastVector.1533"* %13, i64 0, i32 2
  %872 = getelementptr inbounds %"class.angle::FastVector.1533", %"class.angle::FastVector.1533"* %13, i64 0, i32 3
  %873 = bitcast i64* %871 to <2 x i64>*
  store <2 x i64> <i64 0, i64 2>, <2 x i64>* %873, align 8
  br i1 %853, label %874, label %885

874:                                              ; preds = %866, %874
  %875 = phi i64 [ %877, %874 ], [ 2, %866 ]
  %876 = icmp ult i64 %875, %847
  %877 = shl i64 %875, 1
  br i1 %876, label %874, label %878

878:                                              ; preds = %874
  %879 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %875, i64 88) #17
  %880 = extractvalue { i64, i1 } %879, 1
  %881 = extractvalue { i64, i1 } %879, 0
  %882 = select i1 %880, i64 -1, i64 %881
  %883 = call i8* @_Znam(i64 %882) #21
  %884 = bitcast %struct.VkSubpassDescription2** %869 to i8**
  store i8* %883, i8** %884, align 8
  store i64 %875, i64* %872, align 8
  br label %885

885:                                              ; preds = %878, %866
  store i64 %847, i64* %871, align 8
  %886 = icmp eq i32 %846, 0
  br i1 %886, label %914, label %887

887:                                              ; preds = %885
  %888 = lshr i8 %809, 4
  %889 = and i8 %888, 2
  %890 = lshr i8 %809, 2
  %891 = and i8 %890, 4
  %892 = or i8 %891, %889
  %893 = zext i8 %892 to i32
  br label %928

894:                                              ; preds = %894, %816
  %895 = phi i64 [ 0, %816 ], [ %912, %894 ]
  %896 = getelementptr inbounds %"struct.std::__1::array.1522", %"struct.std::__1::array.1522"* %7, i64 0, i32 0, i64 %895
  %897 = bitcast %struct.VkAttachmentDescription2* %896 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %897, i8 0, i64 56, i1 false) #17
  %898 = getelementptr inbounds %struct.VkAttachmentDescription2, %struct.VkAttachmentDescription2* %896, i64 0, i32 0
  store i32 1000109000, i32* %898, align 8
  %899 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %895, i32 0
  %900 = getelementptr inbounds %"struct.std::__1::array.1522", %"struct.std::__1::array.1522"* %7, i64 0, i32 0, i64 %895, i32 2
  %901 = bitcast i32* %899 to <4 x i32>*
  %902 = load <4 x i32>, <4 x i32>* %901, align 4
  %903 = bitcast i32* %900 to <4 x i32>*
  store <4 x i32> %902, <4 x i32>* %903, align 8
  %904 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %895, i32 4
  %905 = getelementptr inbounds %"struct.std::__1::array.1522", %"struct.std::__1::array.1522"* %7, i64 0, i32 0, i64 %895, i32 6
  %906 = bitcast i32* %904 to <4 x i32>*
  %907 = load <4 x i32>, <4 x i32>* %906, align 4
  %908 = bitcast i32* %905 to <4 x i32>*
  store <4 x i32> %907, <4 x i32>* %908, align 8
  %909 = getelementptr inbounds %"struct.std::__1::array.1505", %"struct.std::__1::array.1505"* %20, i64 0, i32 0, i64 %895, i32 8
  %910 = load i32, i32* %909, align 4
  %911 = getelementptr inbounds %"struct.std::__1::array.1522", %"struct.std::__1::array.1522"* %7, i64 0, i32 0, i64 %895, i32 10
  store i32 %910, i32* %911, align 8
  %912 = add nuw nsw i64 %895, 1
  %913 = icmp eq i64 %912, %817
  br i1 %913, label %818, label %894

914:                                              ; preds = %1092, %885
  %915 = bitcast %struct.VkMultisampledRenderToSingleSampledInfoEXT* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %915) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %915, i8 0, i64 32, i1 false) #17
  %916 = getelementptr inbounds %struct.VkMultisampledRenderToSingleSampledInfoEXT, %struct.VkMultisampledRenderToSingleSampledInfoEXT* %14, i64 0, i32 0
  store i32 1000376001, i32* %916, align 8
  %917 = getelementptr inbounds %struct.VkMultisampledRenderToSingleSampledInfoEXT, %struct.VkMultisampledRenderToSingleSampledInfoEXT* %14, i64 0, i32 2
  store i32 1, i32* %917, align 8
  %918 = call i32 @_ZN2rx5gl_vk10GetSamplesEi(i32 %196) #17
  %919 = getelementptr inbounds %struct.VkMultisampledRenderToSingleSampledInfoEXT, %struct.VkMultisampledRenderToSingleSampledInfoEXT* %14, i64 0, i32 3
  store i32 %918, i32* %919, align 4
  %920 = getelementptr inbounds %struct.VkMultisampledRenderToSingleSampledInfoEXT, %struct.VkMultisampledRenderToSingleSampledInfoEXT* %14, i64 0, i32 4
  store i32 1, i32* %920, align 8
  %921 = getelementptr inbounds %struct.VkMultisampledRenderToSingleSampledInfoEXT, %struct.VkMultisampledRenderToSingleSampledInfoEXT* %14, i64 0, i32 5
  store i32 1, i32* %921, align 4
  %922 = load %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2** %806, align 8
  %923 = icmp eq %struct.VkAttachmentReference2* %922, null
  %924 = load %struct.VkSubpassDescription2*, %struct.VkSubpassDescription2** %869, align 8
  %925 = load i64, i64* %871, align 8
  %926 = add i64 %925, -1
  %927 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %924, i64 %926, i32 1
  br i1 %923, label %1145, label %1143

928:                                              ; preds = %1141, %887
  %929 = phi %struct.VkAttachmentReference2* [ %867, %887 ], [ %1142, %1141 ]
  %930 = phi i64 [ 0, %887 ], [ %1137, %1141 ]
  %931 = load %struct.VkSubpassDescription*, %struct.VkSubpassDescription** %792, align 8
  %932 = load %"class.angle::FixedVector.1525"*, %"class.angle::FixedVector.1525"** %823, align 8
  %933 = load %"class.angle::FixedVector.1529"*, %"class.angle::FixedVector.1529"** %832, align 8
  %934 = load %"class.angle::FixedVector.1529"*, %"class.angle::FixedVector.1529"** %841, align 8
  %935 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %929, i64 %930
  %936 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 2
  %937 = load i32, i32* %936, align 8
  %938 = zext i32 %937 to i64
  %939 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %932, i64 %930, i32 1
  %940 = load i64, i64* %939, align 8
  %941 = icmp ugt i64 %940, %938
  br i1 %941, label %945, label %942

942:                                              ; preds = %945, %928
  %943 = phi i64 [ %940, %928 ], [ %950, %945 ]
  %944 = icmp ult i64 %943, %938
  br i1 %944, label %952, label %959

945:                                              ; preds = %928, %945
  %946 = phi i64 [ %950, %945 ], [ %940, %928 ]
  %947 = add i64 %946, -1
  store i64 %947, i64* %939, align 8
  %948 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %932, i64 %930, i32 0, i32 0, i64 %947
  %949 = bitcast %struct.VkAttachmentReference2* %948 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %949, i8 0, i64 32, i1 false) #17
  %950 = load i64, i64* %939, align 8
  %951 = icmp ugt i64 %950, %938
  br i1 %951, label %945, label %942

952:                                              ; preds = %942, %952
  %953 = phi i64 [ %957, %952 ], [ %943, %942 ]
  %954 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %932, i64 %930, i32 0, i32 0, i64 %953
  %955 = bitcast %struct.VkAttachmentReference2* %954 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %955, i8 0, i64 32, i1 false) #17
  %956 = load i64, i64* %939, align 8
  %957 = add i64 %956, 1
  store i64 %957, i64* %939, align 8
  %958 = icmp ult i64 %957, %938
  br i1 %958, label %952, label %959

959:                                              ; preds = %952, %942
  %960 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 4
  %961 = load i32, i32* %960, align 8
  %962 = zext i32 %961 to i64
  %963 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %933, i64 %930, i32 1
  %964 = load i64, i64* %963, align 8
  %965 = icmp ugt i64 %964, %962
  br i1 %965, label %969, label %966

966:                                              ; preds = %969, %959
  %967 = phi i64 [ %964, %959 ], [ %974, %969 ]
  %968 = icmp ult i64 %967, %962
  br i1 %968, label %976, label %983

969:                                              ; preds = %959, %969
  %970 = phi i64 [ %974, %969 ], [ %964, %959 ]
  %971 = add i64 %970, -1
  store i64 %971, i64* %963, align 8
  %972 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %933, i64 %930, i32 0, i32 0, i64 %971
  %973 = bitcast %struct.VkAttachmentReference2* %972 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %973, i8 0, i64 32, i1 false) #17
  %974 = load i64, i64* %963, align 8
  %975 = icmp ugt i64 %974, %962
  br i1 %975, label %969, label %966

976:                                              ; preds = %966, %976
  %977 = phi i64 [ %981, %976 ], [ %967, %966 ]
  %978 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %933, i64 %930, i32 0, i32 0, i64 %977
  %979 = bitcast %struct.VkAttachmentReference2* %978 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %979, i8 0, i64 32, i1 false) #17
  %980 = load i64, i64* %963, align 8
  %981 = add i64 %980, 1
  store i64 %981, i64* %963, align 8
  %982 = icmp ult i64 %981, %962
  br i1 %982, label %976, label %983

983:                                              ; preds = %976, %966
  %984 = load i32, i32* %936, align 8
  %985 = icmp eq i32 %984, 0
  br i1 %985, label %988, label %986

986:                                              ; preds = %983
  %987 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 3
  br label %993

988:                                              ; preds = %993, %983
  %989 = load i32, i32* %960, align 8
  %990 = icmp eq i32 %989, 0
  br i1 %990, label %1014, label %991

991:                                              ; preds = %988
  %992 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 5
  br label %1019

993:                                              ; preds = %993, %986
  %994 = phi i64 [ 0, %986 ], [ %1010, %993 ]
  %995 = load i32, i32* %960, align 8
  %996 = zext i32 %995 to i64
  %997 = icmp ult i64 %994, %996
  %998 = select i1 %997, i32 1, i32 %893
  %999 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %987, align 8
  %1000 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %932, i64 %930, i32 0, i32 0, i64 %994
  %1001 = bitcast %struct.VkAttachmentReference2* %1000 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1001, i8 0, i64 32, i1 false) #17
  %1002 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %1000, i64 0, i32 0
  store i32 1000109001, i32* %1002, align 8
  %1003 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %999, i64 %994, i32 0
  %1004 = load i32, i32* %1003, align 4
  %1005 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %932, i64 %930, i32 0, i32 0, i64 %994, i32 2
  store i32 %1004, i32* %1005, align 8
  %1006 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %999, i64 %994, i32 1
  %1007 = load i32, i32* %1006, align 4
  %1008 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %932, i64 %930, i32 0, i32 0, i64 %994, i32 3
  store i32 %1007, i32* %1008, align 4
  %1009 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %932, i64 %930, i32 0, i32 0, i64 %994, i32 4
  store i32 %998, i32* %1009, align 8
  %1010 = add nuw nsw i64 %994, 1
  %1011 = load i32, i32* %936, align 8
  %1012 = zext i32 %1011 to i64
  %1013 = icmp ult i64 %1010, %1012
  br i1 %1013, label %993, label %988

1014:                                             ; preds = %1019, %988
  %1015 = phi i32 [ 0, %988 ], [ %1033, %1019 ]
  %1016 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 6
  %1017 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %1016, align 8
  %1018 = icmp eq %struct.VkAttachmentReference* %1017, null
  br i1 %1018, label %1078, label %1036

1019:                                             ; preds = %1019, %991
  %1020 = phi i64 [ 0, %991 ], [ %1032, %1019 ]
  %1021 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %992, align 8
  %1022 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %933, i64 %930, i32 0, i32 0, i64 %1020
  %1023 = bitcast %struct.VkAttachmentReference2* %1022 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1023, i8 0, i64 32, i1 false) #17
  %1024 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %1022, i64 0, i32 0
  store i32 1000109001, i32* %1024, align 8
  %1025 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %1021, i64 %1020, i32 0
  %1026 = load i32, i32* %1025, align 4
  %1027 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %933, i64 %930, i32 0, i32 0, i64 %1020, i32 2
  store i32 %1026, i32* %1027, align 8
  %1028 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %1021, i64 %1020, i32 1
  %1029 = load i32, i32* %1028, align 4
  %1030 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %933, i64 %930, i32 0, i32 0, i64 %1020, i32 3
  store i32 %1029, i32* %1030, align 4
  %1031 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %933, i64 %930, i32 0, i32 0, i64 %1020, i32 4
  store i32 1, i32* %1031, align 8
  %1032 = add nuw nsw i64 %1020, 1
  %1033 = load i32, i32* %960, align 8
  %1034 = zext i32 %1033 to i64
  %1035 = icmp ult i64 %1032, %1034
  br i1 %1035, label %1019, label %1014

1036:                                             ; preds = %1014
  %1037 = zext i32 %1015 to i64
  %1038 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %934, i64 %930, i32 1
  %1039 = load i64, i64* %1038, align 8
  %1040 = icmp ugt i64 %1039, %1037
  br i1 %1040, label %1044, label %1041

1041:                                             ; preds = %1044, %1036
  %1042 = phi i64 [ %1039, %1036 ], [ %1049, %1044 ]
  %1043 = icmp ult i64 %1042, %1037
  br i1 %1043, label %1051, label %1058

1044:                                             ; preds = %1036, %1044
  %1045 = phi i64 [ %1049, %1044 ], [ %1039, %1036 ]
  %1046 = add i64 %1045, -1
  store i64 %1046, i64* %1038, align 8
  %1047 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %934, i64 %930, i32 0, i32 0, i64 %1046
  %1048 = bitcast %struct.VkAttachmentReference2* %1047 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1048, i8 0, i64 32, i1 false) #17
  %1049 = load i64, i64* %1038, align 8
  %1050 = icmp ugt i64 %1049, %1037
  br i1 %1050, label %1044, label %1041

1051:                                             ; preds = %1041, %1051
  %1052 = phi i64 [ %1056, %1051 ], [ %1042, %1041 ]
  %1053 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %934, i64 %930, i32 0, i32 0, i64 %1052
  %1054 = bitcast %struct.VkAttachmentReference2* %1053 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1054, i8 0, i64 32, i1 false) #17
  %1055 = load i64, i64* %1038, align 8
  %1056 = add i64 %1055, 1
  store i64 %1056, i64* %1038, align 8
  %1057 = icmp ult i64 %1056, %1037
  br i1 %1057, label %1051, label %1058

1058:                                             ; preds = %1051, %1041
  %1059 = load i32, i32* %960, align 8
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1078, label %1061

1061:                                             ; preds = %1058, %1061
  %1062 = phi i64 [ %1074, %1061 ], [ 0, %1058 ]
  %1063 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %1016, align 8
  %1064 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %934, i64 %930, i32 0, i32 0, i64 %1062
  %1065 = bitcast %struct.VkAttachmentReference2* %1064 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1065, i8 0, i64 32, i1 false) #17
  %1066 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %1064, i64 0, i32 0
  store i32 1000109001, i32* %1066, align 8
  %1067 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %1063, i64 %1062, i32 0
  %1068 = load i32, i32* %1067, align 4
  %1069 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %934, i64 %930, i32 0, i32 0, i64 %1062, i32 2
  store i32 %1068, i32* %1069, align 8
  %1070 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %1063, i64 %1062, i32 1
  %1071 = load i32, i32* %1070, align 4
  %1072 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %934, i64 %930, i32 0, i32 0, i64 %1062, i32 3
  store i32 %1071, i32* %1072, align 4
  %1073 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %934, i64 %930, i32 0, i32 0, i64 %1062, i32 4
  store i32 1, i32* %1073, align 8
  %1074 = add nuw nsw i64 %1062, 1
  %1075 = load i32, i32* %960, align 8
  %1076 = zext i32 %1075 to i64
  %1077 = icmp ult i64 %1074, %1076
  br i1 %1077, label %1061, label %1078

1078:                                             ; preds = %1061, %1058, %1014
  %1079 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 7
  %1080 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %1079, align 8
  %1081 = icmp eq %struct.VkAttachmentReference* %1080, null
  br i1 %1081, label %1092, label %1082

1082:                                             ; preds = %1078
  %1083 = bitcast %struct.VkAttachmentReference2* %935 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1083, i8 0, i64 32, i1 false) #17
  %1084 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %935, i64 0, i32 0
  store i32 1000109001, i32* %1084, align 8
  %1085 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %1080, i64 0, i32 0
  %1086 = load i32, i32* %1085, align 4
  %1087 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %929, i64 %930, i32 2
  store i32 %1086, i32* %1087, align 8
  %1088 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %1080, i64 0, i32 1
  %1089 = load i32, i32* %1088, align 4
  %1090 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %929, i64 %930, i32 3
  store i32 %1089, i32* %1090, align 4
  %1091 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %929, i64 %930, i32 4
  store i32 6, i32* %1091, align 8
  br label %1092

1092:                                             ; preds = %1082, %1078
  %1093 = load %struct.VkSubpassDescription2*, %struct.VkSubpassDescription2** %869, align 8
  %1094 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930
  %1095 = bitcast %struct.VkSubpassDescription2* %1094 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1095, i8 0, i64 88, i1 false) #17
  %1096 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1094, i64 0, i32 0
  store i32 1000109002, i32* %1096, align 8
  %1097 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 0
  %1098 = load i32, i32* %1097, align 8
  %1099 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 2
  store i32 %1098, i32* %1099, align 8
  %1100 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 1
  %1101 = load i32, i32* %1100, align 4
  %1102 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 3
  store i32 %1101, i32* %1102, align 4
  %1103 = load i64, i64* %939, align 8
  %1104 = trunc i64 %1103 to i32
  %1105 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 5
  store i32 %1104, i32* %1105, align 4
  %1106 = load i64, i64* %939, align 8
  %1107 = icmp eq i64 %1106, 0
  %1108 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %932, i64 %930, i32 0, i32 0, i64 0
  %1109 = select i1 %1107, %struct.VkAttachmentReference2* null, %struct.VkAttachmentReference2* %1108
  %1110 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 6
  store %struct.VkAttachmentReference2* %1109, %struct.VkAttachmentReference2** %1110, align 8
  %1111 = load i64, i64* %963, align 8
  %1112 = trunc i64 %1111 to i32
  %1113 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 7
  store i32 %1112, i32* %1113, align 8
  %1114 = load i64, i64* %963, align 8
  %1115 = icmp eq i64 %1114, 0
  %1116 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %933, i64 %930, i32 0, i32 0, i64 0
  %1117 = select i1 %1115, %struct.VkAttachmentReference2* null, %struct.VkAttachmentReference2* %1116
  %1118 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 8
  store %struct.VkAttachmentReference2* %1117, %struct.VkAttachmentReference2** %1118, align 8
  %1119 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %934, i64 %930, i32 1
  %1120 = load i64, i64* %1119, align 8
  %1121 = icmp eq i64 %1120, 0
  %1122 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %934, i64 %930, i32 0, i32 0, i64 0
  %1123 = select i1 %1121, %struct.VkAttachmentReference2* null, %struct.VkAttachmentReference2* %1122
  %1124 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 9
  store %struct.VkAttachmentReference2* %1123, %struct.VkAttachmentReference2** %1124, align 8
  %1125 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %1079, align 8
  %1126 = icmp eq %struct.VkAttachmentReference* %1125, null
  %1127 = select i1 %1126, %struct.VkAttachmentReference2* null, %struct.VkAttachmentReference2* %935
  %1128 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 10
  store %struct.VkAttachmentReference2* %1127, %struct.VkAttachmentReference2** %1128, align 8
  %1129 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 8
  %1130 = load i32, i32* %1129, align 8
  %1131 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 11
  store i32 %1130, i32* %1131, align 8
  %1132 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %931, i64 %930, i32 9
  %1133 = bitcast i32** %1132 to i64*
  %1134 = load i64, i64* %1133, align 8
  %1135 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %1093, i64 %930, i32 12
  %1136 = bitcast i32** %1135 to i64*
  store i64 %1134, i64* %1136, align 8
  %1137 = add nuw nsw i64 %930, 1
  %1138 = load i32, i32* %789, align 8
  %1139 = zext i32 %1138 to i64
  %1140 = icmp ult i64 %1137, %1139
  br i1 %1140, label %1141, label %914

1141:                                             ; preds = %1092
  %1142 = load %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2** %848, align 8
  br label %928

1143:                                             ; preds = %914
  %1144 = bitcast i8** %927 to %struct.VkSubpassDescriptionDepthStencilResolve**
  store %struct.VkSubpassDescriptionDepthStencilResolve* %26, %struct.VkSubpassDescriptionDepthStencilResolve** %1144, align 8
  br label %1147

1145:                                             ; preds = %914
  %1146 = bitcast i8** %927 to %struct.VkMultisampledRenderToSingleSampledInfoEXT**
  store %struct.VkMultisampledRenderToSingleSampledInfoEXT* %14, %struct.VkMultisampledRenderToSingleSampledInfoEXT** %1146, align 8
  br label %1147

1147:                                             ; preds = %1145, %1143
  %1148 = load i32, i32* %794, align 8
  %1149 = zext i32 %1148 to i64
  %1150 = icmp eq i32 %1148, 0
  br i1 %1150, label %1167, label %1151

1151:                                             ; preds = %1147
  %1152 = mul nuw nsw i64 %1149, 48
  %1153 = call i8* @_Znwm(i64 %1152) #21
  %1154 = bitcast i8* %1153 to %struct.VkSubpassDependency2*
  %1155 = ptrtoint i8* %1153 to i64
  %1156 = add nsw i64 %1149, -1
  %1157 = getelementptr %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1156, i32 0
  %1158 = ptrtoint i32* %1157 to i64
  %1159 = sub i64 %1158, %1155
  %1160 = urem i64 %1159, 48
  %1161 = add i64 %1159, 48
  %1162 = sub i64 %1161, %1160
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1153, i8 0, i64 %1162, i1 false) #17
  %1163 = load %struct.VkSubpassDependency*, %struct.VkSubpassDependency** %795, align 8
  br label %1197

1164:                                             ; preds = %1197
  %1165 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1149
  %1166 = ptrtoint %struct.VkSubpassDependency2* %1165 to i64
  br label %1167

1167:                                             ; preds = %1164, %1147
  %1168 = phi i64 [ 0, %1147 ], [ %1166, %1164 ]
  %1169 = phi i64 [ 0, %1147 ], [ %1155, %1164 ]
  %1170 = phi %struct.VkSubpassDependency2* [ null, %1147 ], [ %1154, %1164 ]
  %1171 = bitcast %struct.VkRenderPassCreateInfo2* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %1171) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1171, i8 0, i64 80, i1 false) #17
  %1172 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %15, i64 0, i32 0
  store i32 1000109004, i32* %1172, align 8
  %1173 = load i32, i32* %783, align 8
  %1174 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %15, i64 0, i32 2
  store i32 %1173, i32* %1174, align 8
  %1175 = load i32, i32* %784, align 4
  %1176 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %15, i64 0, i32 3
  store i32 %1175, i32* %1176, align 4
  %1177 = getelementptr inbounds %"struct.std::__1::array.1522", %"struct.std::__1::array.1522"* %7, i64 0, i32 0, i64 0
  %1178 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %15, i64 0, i32 4
  store %struct.VkAttachmentDescription2* %1177, %struct.VkAttachmentDescription2** %1178, align 8
  %1179 = load i32, i32* %789, align 8
  %1180 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %15, i64 0, i32 5
  store i32 %1179, i32* %1180, align 8
  %1181 = bitcast %struct.VkSubpassDescription2** %869 to i64*
  %1182 = load i64, i64* %1181, align 8
  %1183 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %15, i64 0, i32 6
  %1184 = bitcast %struct.VkSubpassDescription2** %1183 to i64*
  store i64 %1182, i64* %1184, align 8
  %1185 = sub i64 %1168, %1169
  %1186 = sdiv exact i64 %1185, 48
  %1187 = trunc i64 %1186 to i32
  %1188 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %15, i64 0, i32 7
  store i32 %1187, i32* %1188, align 8
  %1189 = inttoptr i64 %1168 to %struct.VkSubpassDependency2*
  %1190 = icmp eq %struct.VkSubpassDependency2* %1170, %1189
  %1191 = select i1 %1190, %struct.VkSubpassDependency2* null, %struct.VkSubpassDependency2* %1170
  %1192 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %15, i64 0, i32 8
  store %struct.VkSubpassDependency2* %1191, %struct.VkSubpassDependency2** %1192, align 8
  %1193 = call %struct.VkDevice_T* @_ZNK2rx2vk7Context9getDeviceEv(%"class.rx::vk::Context"* %814) #17
  %1194 = load i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** @vkCreateRenderPass2KHR, align 8
  %1195 = call i32 %1194(%struct.VkDevice_T* %1193, %struct.VkRenderPassCreateInfo2* nonnull %15, %struct.VkAllocationCallbacks* null, %struct.VkRenderPass_T** %166) #17
  %1196 = icmp eq i32 %1195, 0
  br i1 %1196, label %1230, label %1225, !prof !2

1197:                                             ; preds = %1197, %1151
  %1198 = phi i64 [ 0, %1151 ], [ %1223, %1197 ]
  %1199 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1198
  %1200 = bitcast %struct.VkSubpassDependency2* %1199 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1200, i8 0, i64 48, i1 false) #17
  %1201 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1199, i64 0, i32 0
  store i32 1000109003, i32* %1201, align 8
  %1202 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %1163, i64 %1198, i32 0
  %1203 = load i32, i32* %1202, align 4
  %1204 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1198, i32 2
  store i32 %1203, i32* %1204, align 8
  %1205 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %1163, i64 %1198, i32 1
  %1206 = load i32, i32* %1205, align 4
  %1207 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1198, i32 3
  store i32 %1206, i32* %1207, align 4
  %1208 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %1163, i64 %1198, i32 2
  %1209 = load i32, i32* %1208, align 4
  %1210 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1198, i32 4
  store i32 %1209, i32* %1210, align 8
  %1211 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %1163, i64 %1198, i32 3
  %1212 = load i32, i32* %1211, align 4
  %1213 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1198, i32 5
  store i32 %1212, i32* %1213, align 4
  %1214 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %1163, i64 %1198, i32 4
  %1215 = load i32, i32* %1214, align 4
  %1216 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1198, i32 6
  store i32 %1215, i32* %1216, align 8
  %1217 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %1163, i64 %1198, i32 5
  %1218 = load i32, i32* %1217, align 4
  %1219 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1198, i32 7
  store i32 %1218, i32* %1219, align 4
  %1220 = getelementptr inbounds %struct.VkSubpassDependency, %struct.VkSubpassDependency* %1163, i64 %1198, i32 6
  %1221 = load i32, i32* %1220, align 4
  %1222 = getelementptr inbounds %struct.VkSubpassDependency2, %struct.VkSubpassDependency2* %1154, i64 %1198, i32 8
  store i32 %1221, i32* %1222, align 8
  %1223 = add nuw nsw i64 %1198, 1
  %1224 = icmp eq i64 %1223, %1149
  br i1 %1224, label %1164, label %1197

1225:                                             ; preds = %1167
  %1226 = bitcast %"class.rx::vk::Context"* %814 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %1227 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %1226, align 8
  %1228 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %1227, i64 2
  %1229 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %1228, align 8
  call void %1229(%"class.rx::vk::Context"* %814, i32 %1195, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN2rx2vk12_GLOBAL__N_117CreateRenderPass2EPNS0_7ContextERK22VkRenderPassCreateInfoRK39VkSubpassDescriptionDepthStencilResolvebbbhPNS0_10RenderPassE, i64 0, i64 0), i32 783) #17
  br label %1230

1230:                                             ; preds = %1225, %1167
  %1231 = phi i32 [ 1, %1225 ], [ 0, %1167 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %1171) #17
  %1232 = icmp eq i64 %1169, 0
  br i1 %1232, label %1235, label %1233

1233:                                             ; preds = %1230
  %1234 = inttoptr i64 %1169 to i8*
  call void @_ZdlPv(i8* %1234) #21
  br label %1235

1235:                                             ; preds = %1233, %1230
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %915) #17
  store i64 0, i64* %871, align 8
  %1236 = load %struct.VkSubpassDescription2*, %struct.VkSubpassDescription2** %869, align 8
  %1237 = icmp eq %struct.VkSubpassDescription2* %1236, %870
  %1238 = icmp eq %struct.VkSubpassDescription2* %1236, null
  %1239 = or i1 %1237, %1238
  br i1 %1239, label %1242, label %1240

1240:                                             ; preds = %1235
  %1241 = bitcast %struct.VkSubpassDescription2* %1236 to i8*
  call void @_ZdaPv(i8* %1241) #21
  br label %1242

1242:                                             ; preds = %1240, %1235
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %868) #17
  store i64 0, i64* %850, align 8
  %1243 = load %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2** %848, align 8
  %1244 = icmp eq %struct.VkAttachmentReference2* %1243, %849
  %1245 = icmp eq %struct.VkAttachmentReference2* %1243, null
  %1246 = or i1 %1244, %1245
  br i1 %1246, label %1249, label %1247

1247:                                             ; preds = %1242
  %1248 = bitcast %struct.VkAttachmentReference2* %1243 to i8*
  call void @_ZdaPv(i8* %1248) #21
  br label %1249

1249:                                             ; preds = %1247, %1242
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %845) #17
  store i64 0, i64* %843, align 8
  %1250 = load %"class.angle::FixedVector.1529"*, %"class.angle::FixedVector.1529"** %841, align 8
  %1251 = icmp eq %"class.angle::FixedVector.1529"* %1250, %842
  %1252 = icmp eq %"class.angle::FixedVector.1529"* %1250, null
  %1253 = or i1 %1251, %1252
  br i1 %1253, label %1277, label %1254

1254:                                             ; preds = %1249
  %1255 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1250, i64 -1, i32 1
  %1256 = bitcast i64* %1255 to i8*
  %1257 = load i64, i64* %1255, align 8
  %1258 = icmp eq i64 %1257, 0
  br i1 %1258, label %1276, label %1259

1259:                                             ; preds = %1254
  %1260 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1250, i64 %1257
  br label %1261

1261:                                             ; preds = %1274, %1259
  %1262 = phi %"class.angle::FixedVector.1529"* [ %1263, %1274 ], [ %1260, %1259 ]
  %1263 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1262, i64 -1
  %1264 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1262, i64 -1, i32 1
  %1265 = load i64, i64* %1264, align 8
  %1266 = icmp eq i64 %1265, 0
  br i1 %1266, label %1274, label %1267

1267:                                             ; preds = %1261, %1267
  %1268 = phi i64 [ %1272, %1267 ], [ %1265, %1261 ]
  %1269 = add i64 %1268, -1
  store i64 %1269, i64* %1264, align 8
  %1270 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1262, i64 -1, i32 0, i32 0, i64 %1269
  %1271 = bitcast %struct.VkAttachmentReference2* %1270 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1271, i8 0, i64 32, i1 false) #17
  %1272 = load i64, i64* %1264, align 8
  %1273 = icmp eq i64 %1272, 0
  br i1 %1273, label %1274, label %1267

1274:                                             ; preds = %1267, %1261
  %1275 = icmp eq %"class.angle::FixedVector.1529"* %1263, %1250
  br i1 %1275, label %1276, label %1261

1276:                                             ; preds = %1274, %1254
  call void @_ZdaPv(i8* %1256) #21
  br label %1277

1277:                                             ; preds = %1276, %1249
  %1278 = load i64, i64* %840, align 8
  %1279 = icmp eq i64 %1278, 0
  br i1 %1279, label %1287, label %1280

1280:                                             ; preds = %1277, %1280
  %1281 = phi i64 [ %1285, %1280 ], [ %1278, %1277 ]
  %1282 = add i64 %1281, -1
  store i64 %1282, i64* %840, align 8
  %1283 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %11, i64 0, i32 0, i32 0, i64 1, i32 0, i32 0, i64 %1282
  %1284 = bitcast %struct.VkAttachmentReference2* %1283 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1284, i8 0, i64 32, i1 false) #17
  %1285 = load i64, i64* %840, align 8
  %1286 = icmp eq i64 %1285, 0
  br i1 %1286, label %1287, label %1280

1287:                                             ; preds = %1280, %1277
  %1288 = load i64, i64* %839, align 8
  %1289 = icmp eq i64 %1288, 0
  br i1 %1289, label %1297, label %1290

1290:                                             ; preds = %1287, %1290
  %1291 = phi i64 [ %1295, %1290 ], [ %1288, %1287 ]
  %1292 = add i64 %1291, -1
  store i64 %1292, i64* %839, align 8
  %1293 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %11, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 %1292
  %1294 = bitcast %struct.VkAttachmentReference2* %1293 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1294, i8 0, i64 32, i1 false) #17
  %1295 = load i64, i64* %839, align 8
  %1296 = icmp eq i64 %1295, 0
  br i1 %1296, label %1297, label %1290

1297:                                             ; preds = %1290, %1287
  call void @llvm.lifetime.end.p0i8(i64 552, i8* nonnull %836) #17
  store i64 0, i64* %834, align 8
  %1298 = load %"class.angle::FixedVector.1529"*, %"class.angle::FixedVector.1529"** %832, align 8
  %1299 = icmp eq %"class.angle::FixedVector.1529"* %1298, %833
  %1300 = icmp eq %"class.angle::FixedVector.1529"* %1298, null
  %1301 = or i1 %1299, %1300
  br i1 %1301, label %1325, label %1302

1302:                                             ; preds = %1297
  %1303 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1298, i64 -1, i32 1
  %1304 = bitcast i64* %1303 to i8*
  %1305 = load i64, i64* %1303, align 8
  %1306 = icmp eq i64 %1305, 0
  br i1 %1306, label %1324, label %1307

1307:                                             ; preds = %1302
  %1308 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1298, i64 %1305
  br label %1309

1309:                                             ; preds = %1322, %1307
  %1310 = phi %"class.angle::FixedVector.1529"* [ %1311, %1322 ], [ %1308, %1307 ]
  %1311 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1310, i64 -1
  %1312 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1310, i64 -1, i32 1
  %1313 = load i64, i64* %1312, align 8
  %1314 = icmp eq i64 %1313, 0
  br i1 %1314, label %1322, label %1315

1315:                                             ; preds = %1309, %1315
  %1316 = phi i64 [ %1320, %1315 ], [ %1313, %1309 ]
  %1317 = add i64 %1316, -1
  store i64 %1317, i64* %1312, align 8
  %1318 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %1310, i64 -1, i32 0, i32 0, i64 %1317
  %1319 = bitcast %struct.VkAttachmentReference2* %1318 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1319, i8 0, i64 32, i1 false) #17
  %1320 = load i64, i64* %1312, align 8
  %1321 = icmp eq i64 %1320, 0
  br i1 %1321, label %1322, label %1315

1322:                                             ; preds = %1315, %1309
  %1323 = icmp eq %"class.angle::FixedVector.1529"* %1311, %1298
  br i1 %1323, label %1324, label %1309

1324:                                             ; preds = %1322, %1302
  call void @_ZdaPv(i8* %1304) #21
  br label %1325

1325:                                             ; preds = %1324, %1297
  %1326 = load i64, i64* %831, align 8
  %1327 = icmp eq i64 %1326, 0
  br i1 %1327, label %1335, label %1328

1328:                                             ; preds = %1325, %1328
  %1329 = phi i64 [ %1333, %1328 ], [ %1326, %1325 ]
  %1330 = add i64 %1329, -1
  store i64 %1330, i64* %831, align 8
  %1331 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %10, i64 0, i32 0, i32 0, i64 1, i32 0, i32 0, i64 %1330
  %1332 = bitcast %struct.VkAttachmentReference2* %1331 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1332, i8 0, i64 32, i1 false) #17
  %1333 = load i64, i64* %831, align 8
  %1334 = icmp eq i64 %1333, 0
  br i1 %1334, label %1335, label %1328

1335:                                             ; preds = %1328, %1325
  %1336 = load i64, i64* %830, align 8
  %1337 = icmp eq i64 %1336, 0
  br i1 %1337, label %1345, label %1338

1338:                                             ; preds = %1335, %1338
  %1339 = phi i64 [ %1343, %1338 ], [ %1336, %1335 ]
  %1340 = add i64 %1339, -1
  store i64 %1340, i64* %830, align 8
  %1341 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %10, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 %1340
  %1342 = bitcast %struct.VkAttachmentReference2* %1341 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1342, i8 0, i64 32, i1 false) #17
  %1343 = load i64, i64* %830, align 8
  %1344 = icmp eq i64 %1343, 0
  br i1 %1344, label %1345, label %1338

1345:                                             ; preds = %1338, %1335
  call void @llvm.lifetime.end.p0i8(i64 552, i8* nonnull %827) #17
  store i64 0, i64* %825, align 8
  %1346 = load %"class.angle::FixedVector.1525"*, %"class.angle::FixedVector.1525"** %823, align 8
  %1347 = icmp eq %"class.angle::FixedVector.1525"* %1346, %824
  %1348 = icmp eq %"class.angle::FixedVector.1525"* %1346, null
  %1349 = or i1 %1347, %1348
  br i1 %1349, label %1373, label %1350

1350:                                             ; preds = %1345
  %1351 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %1346, i64 -1, i32 1
  %1352 = bitcast i64* %1351 to i8*
  %1353 = load i64, i64* %1351, align 8
  %1354 = icmp eq i64 %1353, 0
  br i1 %1354, label %1372, label %1355

1355:                                             ; preds = %1350
  %1356 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %1346, i64 %1353
  br label %1357

1357:                                             ; preds = %1370, %1355
  %1358 = phi %"class.angle::FixedVector.1525"* [ %1359, %1370 ], [ %1356, %1355 ]
  %1359 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %1358, i64 -1
  %1360 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %1358, i64 -1, i32 1
  %1361 = load i64, i64* %1360, align 8
  %1362 = icmp eq i64 %1361, 0
  br i1 %1362, label %1370, label %1363

1363:                                             ; preds = %1357, %1363
  %1364 = phi i64 [ %1368, %1363 ], [ %1361, %1357 ]
  %1365 = add i64 %1364, -1
  store i64 %1365, i64* %1360, align 8
  %1366 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %1358, i64 -1, i32 0, i32 0, i64 %1365
  %1367 = bitcast %struct.VkAttachmentReference2* %1366 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1367, i8 0, i64 32, i1 false) #17
  %1368 = load i64, i64* %1360, align 8
  %1369 = icmp eq i64 %1368, 0
  br i1 %1369, label %1370, label %1363

1370:                                             ; preds = %1363, %1357
  %1371 = icmp eq %"class.angle::FixedVector.1525"* %1359, %1346
  br i1 %1371, label %1372, label %1357

1372:                                             ; preds = %1370, %1350
  call void @_ZdaPv(i8* %1352) #21
  br label %1373

1373:                                             ; preds = %1372, %1345
  %1374 = load i64, i64* %822, align 8
  %1375 = icmp eq i64 %1374, 0
  br i1 %1375, label %1383, label %1376

1376:                                             ; preds = %1373, %1376
  %1377 = phi i64 [ %1381, %1376 ], [ %1374, %1373 ]
  %1378 = add i64 %1377, -1
  store i64 %1378, i64* %822, align 8
  %1379 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %9, i64 0, i32 0, i32 0, i64 1, i32 0, i32 0, i64 %1378
  %1380 = bitcast %struct.VkAttachmentReference2* %1379 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1380, i8 0, i64 32, i1 false) #17
  %1381 = load i64, i64* %822, align 8
  %1382 = icmp eq i64 %1381, 0
  br i1 %1382, label %1383, label %1376

1383:                                             ; preds = %1376, %1373
  %1384 = load i64, i64* %821, align 8
  %1385 = icmp eq i64 %1384, 0
  br i1 %1385, label %1393, label %1386

1386:                                             ; preds = %1383, %1386
  %1387 = phi i64 [ %1391, %1386 ], [ %1384, %1383 ]
  %1388 = add i64 %1387, -1
  store i64 %1388, i64* %821, align 8
  %1389 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %9, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 %1388
  %1390 = bitcast %struct.VkAttachmentReference2* %1389 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1390, i8 0, i64 32, i1 false) #17
  %1391 = load i64, i64* %821, align 8
  %1392 = icmp eq i64 %1391, 0
  br i1 %1392, label %1393, label %1386

1393:                                             ; preds = %1386, %1383
  call void @llvm.lifetime.end.p0i8(i64 1192, i8* nonnull %819) #17
  call void @llvm.lifetime.end.p0i8(i64 1008, i8* nonnull %8) #17
  %1394 = icmp eq i32 %1231, 1
  br i1 %1394, label %1591, label %1405

1395:                                             ; preds = %805
  %1396 = call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %1) #17
  %1397 = load i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** @vkCreateRenderPass, align 8
  %1398 = call i32 %1397(%struct.VkDevice_T* %1396, %struct.VkRenderPassCreateInfo* nonnull %28, %struct.VkAllocationCallbacks* null, %struct.VkRenderPass_T** %166) #17
  %1399 = icmp eq i32 %1398, 0
  br i1 %1399, label %1405, label %1400, !prof !2

1400:                                             ; preds = %1395
  %1401 = bitcast %"class.rx::ContextVk"* %1 to void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)***
  %1402 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)**, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*** %1401, align 8
  %1403 = getelementptr inbounds void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %1402, i64 67
  %1404 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %1403, align 8
  call void %1404(%"class.rx::ContextVk"* %1, i32 %1398, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__._ZN2rx2vk12_GLOBAL__N_128InitializeRenderPassFromDescEPNS_9ContextVkERKNS0_14RenderPassDescERKNS0_18AttachmentOpsArrayEPNS0_16RenderPassHelperE, i64 0, i64 0), i32 1217) #17
  br label %1591

1405:                                             ; preds = %1395, %1393
  %1406 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 2
  %1407 = load i32, i32* %789, align 8
  %1408 = icmp eq i32 %1407, 0
  br i1 %1408, label %1470, label %1409

1409:                                             ; preds = %1405
  %1410 = zext i32 %1407 to i64
  %1411 = load %struct.VkSubpassDescription*, %struct.VkSubpassDescription** %792, align 8
  br label %1425

1412:                                             ; preds = %1466
  %1413 = icmp eq i64 %1467, 0
  br i1 %1413, label %1470, label %1414

1414:                                             ; preds = %1412
  %1415 = call i64 @llvm.cttz.i64(i64 %1467, i1 true) #17, !range !41
  %1416 = getelementptr inbounds %"struct.rx::vk::RenderPassPerfCounters", %"struct.rx::vk::RenderPassPerfCounters"* %1406, i64 0, i32 0
  %1417 = load i8, i8* %1416, align 8
  %1418 = load i8, i8* %168, align 1
  %1419 = load i8, i8* %169, align 2
  %1420 = load i8, i8* %170, align 1
  %1421 = load i8, i8* %171, align 4
  %1422 = load i8, i8* %172, align 1
  %1423 = load i8, i8* %179, align 4
  %1424 = load %struct.VkAttachmentDescription*, %struct.VkAttachmentDescription** %786, align 8
  br label %1527

1425:                                             ; preds = %1466, %1409
  %1426 = phi i64 [ 0, %1409 ], [ %1468, %1466 ]
  %1427 = phi i64 [ 0, %1409 ], [ %1467, %1466 ]
  %1428 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %1411, i64 %1426, i32 6
  %1429 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %1428, align 8
  %1430 = icmp eq %struct.VkAttachmentReference* %1429, null
  br i1 %1430, label %1453, label %1431

1431:                                             ; preds = %1425
  %1432 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %1411, i64 %1426, i32 4
  %1433 = load i32, i32* %1432, align 8
  %1434 = icmp eq i32 %1433, 0
  br i1 %1434, label %1453, label %1435

1435:                                             ; preds = %1431, %1451
  %1436 = phi i32 [ %1447, %1451 ], [ %1433, %1431 ]
  %1437 = phi %struct.VkAttachmentReference* [ %1452, %1451 ], [ %1429, %1431 ]
  %1438 = phi i64 [ %1448, %1451 ], [ 0, %1431 ]
  %1439 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %1437, i64 %1438, i32 0
  %1440 = load i32, i32* %1439, align 4
  %1441 = icmp eq i32 %1440, -1
  br i1 %1441, label %1446, label %1442

1442:                                             ; preds = %1435
  %1443 = load i8, i8* %174, align 1
  %1444 = add i8 %1443, 1
  store i8 %1444, i8* %174, align 1
  %1445 = load i32, i32* %1432, align 8
  br label %1446

1446:                                             ; preds = %1442, %1435
  %1447 = phi i32 [ %1436, %1435 ], [ %1445, %1442 ]
  %1448 = add nuw nsw i64 %1438, 1
  %1449 = zext i32 %1447 to i64
  %1450 = icmp ult i64 %1448, %1449
  br i1 %1450, label %1451, label %1453

1451:                                             ; preds = %1446
  %1452 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %1428, align 8
  br label %1435

1453:                                             ; preds = %1446, %1431, %1425
  %1454 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %1411, i64 %1426, i32 7
  %1455 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %1454, align 8
  %1456 = icmp eq %struct.VkAttachmentReference* %1455, null
  br i1 %1456, label %1466, label %1457

1457:                                             ; preds = %1453
  %1458 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %1455, i64 0, i32 0
  %1459 = load i32, i32* %1458, align 4
  %1460 = icmp eq i32 %1459, -1
  br i1 %1460, label %1466, label %1461

1461:                                             ; preds = %1457
  %1462 = zext i32 %1459 to i64
  %1463 = shl i64 1, %1462
  %1464 = and i64 %1463, 262143
  %1465 = or i64 %1464, %1427
  br label %1466

1466:                                             ; preds = %1461, %1457, %1453
  %1467 = phi i64 [ %1427, %1453 ], [ %1427, %1457 ], [ %1465, %1461 ]
  %1468 = add nuw nsw i64 %1426, 1
  %1469 = icmp eq i64 %1468, %1410
  br i1 %1469, label %1412, label %1425

1470:                                             ; preds = %1527, %1412, %1405
  %1471 = load %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2** %806, align 8
  %1472 = icmp eq %struct.VkAttachmentReference2* %1471, null
  br i1 %1472, label %1575, label %1473

1473:                                             ; preds = %1470
  %1474 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %1471, i64 0, i32 2
  %1475 = load i32, i32* %1474, align 8
  %1476 = icmp eq i32 %1475, -1
  br i1 %1476, label %1575, label %1477

1477:                                             ; preds = %1473
  %1478 = load %struct.VkAttachmentDescription*, %struct.VkAttachmentDescription** %786, align 8
  %1479 = zext i32 %1475 to i64
  %1480 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %1478, i64 %1479, i32 3
  %1481 = load i32, i32* %1480, align 4
  %1482 = icmp eq i32 %1481, 1
  %1483 = zext i1 %1482 to i8
  %1484 = getelementptr inbounds %"struct.rx::vk::RenderPassPerfCounters", %"struct.rx::vk::RenderPassPerfCounters"* %1406, i64 0, i32 0
  %1485 = load i8, i8* %1484, align 8
  %1486 = add i8 %1485, %1483
  store i8 %1486, i8* %1484, align 8
  %1487 = load i32, i32* %1480, align 4
  %1488 = icmp eq i32 %1487, 0
  %1489 = zext i1 %1488 to i8
  %1490 = load i8, i8* %168, align 1
  %1491 = add i8 %1490, %1489
  store i8 %1491, i8* %168, align 1
  %1492 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %1478, i64 %1479, i32 4
  %1493 = load i32, i32* %1492, align 4
  %1494 = icmp eq i32 %1493, 0
  %1495 = zext i1 %1494 to i8
  %1496 = load i8, i8* %169, align 2
  %1497 = add i8 %1496, %1495
  store i8 %1497, i8* %169, align 2
  %1498 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %1478, i64 %1479, i32 5
  %1499 = load i32, i32* %1498, align 4
  %1500 = icmp eq i32 %1499, 1
  %1501 = zext i1 %1500 to i8
  %1502 = load i8, i8* %170, align 1
  %1503 = add i8 %1502, %1501
  store i8 %1503, i8* %170, align 1
  %1504 = load i32, i32* %1498, align 4
  %1505 = icmp eq i32 %1504, 0
  %1506 = zext i1 %1505 to i8
  %1507 = load i8, i8* %171, align 4
  %1508 = add i8 %1507, %1506
  store i8 %1508, i8* %171, align 4
  %1509 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %1478, i64 %1479, i32 6
  %1510 = load i32, i32* %1509, align 4
  %1511 = icmp eq i32 %1510, 0
  %1512 = zext i1 %1511 to i8
  %1513 = load i8, i8* %172, align 1
  %1514 = add i8 %1513, %1512
  store i8 %1514, i8* %172, align 1
  %1515 = getelementptr inbounds %struct.VkSubpassDescriptionDepthStencilResolve, %struct.VkSubpassDescriptionDepthStencilResolve* %26, i64 0, i32 2
  %1516 = load i32, i32* %1515, align 8
  %1517 = icmp ne i32 %1516, 0
  %1518 = zext i1 %1517 to i8
  %1519 = load i8, i8* %176, align 1
  %1520 = add i8 %1519, %1518
  store i8 %1520, i8* %176, align 1
  %1521 = getelementptr inbounds %struct.VkSubpassDescriptionDepthStencilResolve, %struct.VkSubpassDescriptionDepthStencilResolve* %26, i64 0, i32 3
  %1522 = load i32, i32* %1521, align 4
  %1523 = icmp ne i32 %1522, 0
  %1524 = zext i1 %1523 to i8
  %1525 = load i8, i8* %178, align 1
  %1526 = add i8 %1525, %1524
  store i8 %1526, i8* %178, align 1
  br label %1575

1527:                                             ; preds = %1527, %1414
  %1528 = phi i8 [ %1423, %1414 ], [ %1569, %1527 ]
  %1529 = phi i8 [ %1422, %1414 ], [ %1564, %1527 ]
  %1530 = phi i8 [ %1421, %1414 ], [ %1559, %1527 ]
  %1531 = phi i8 [ %1420, %1414 ], [ %1555, %1527 ]
  %1532 = phi i8 [ %1419, %1414 ], [ %1550, %1527 ]
  %1533 = phi i8 [ %1418, %1414 ], [ %1545, %1527 ]
  %1534 = phi i8 [ %1417, %1414 ], [ %1541, %1527 ]
  %1535 = phi i64 [ %1415, %1414 ], [ %1574, %1527 ]
  %1536 = phi i64 [ %1467, %1414 ], [ %1572, %1527 ]
  %1537 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %1424, i64 %1535, i32 3
  %1538 = load i32, i32* %1537, align 4
  %1539 = icmp eq i32 %1538, 1
  %1540 = zext i1 %1539 to i8
  %1541 = add i8 %1534, %1540
  store i8 %1541, i8* %1416, align 8
  %1542 = load i32, i32* %1537, align 4
  %1543 = icmp eq i32 %1542, 0
  %1544 = zext i1 %1543 to i8
  %1545 = add i8 %1533, %1544
  store i8 %1545, i8* %168, align 1
  %1546 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %1424, i64 %1535, i32 4
  %1547 = load i32, i32* %1546, align 4
  %1548 = icmp eq i32 %1547, 0
  %1549 = zext i1 %1548 to i8
  %1550 = add i8 %1532, %1549
  store i8 %1550, i8* %169, align 2
  %1551 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %1424, i64 %1535, i32 5
  %1552 = load i32, i32* %1551, align 4
  %1553 = icmp eq i32 %1552, 1
  %1554 = zext i1 %1553 to i8
  %1555 = add i8 %1531, %1554
  store i8 %1555, i8* %170, align 1
  %1556 = load i32, i32* %1551, align 4
  %1557 = icmp eq i32 %1556, 0
  %1558 = zext i1 %1557 to i8
  %1559 = add i8 %1530, %1558
  store i8 %1559, i8* %171, align 4
  %1560 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %1424, i64 %1535, i32 6
  %1561 = load i32, i32* %1560, align 4
  %1562 = icmp eq i32 %1561, 0
  %1563 = zext i1 %1562 to i8
  %1564 = add i8 %1529, %1563
  store i8 %1564, i8* %172, align 1
  %1565 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %1424, i64 %1535, i32 8
  %1566 = load i32, i32* %1565, align 4
  %1567 = icmp eq i32 %1566, 4
  %1568 = zext i1 %1567 to i8
  %1569 = add i8 %1528, %1568
  store i8 %1569, i8* %179, align 4
  %1570 = shl i64 1, %1535
  %1571 = xor i64 %1570, -1
  %1572 = and i64 %1536, %1571
  %1573 = icmp eq i64 %1572, 0
  %1574 = call i64 @llvm.cttz.i64(i64 %1572, i1 true) #17, !range !41
  br i1 %1573, label %1470, label %1527

1575:                                             ; preds = %1477, %1473, %1470
  %1576 = load i8, i8* %204, align 1, !noalias !64
  %1577 = zext i8 %1576 to i32
  %1578 = call i32 @llvm.ctpop.i32(i32 %1577) #17, !range !3
  %1579 = load i8, i8* %173, align 2
  %1580 = trunc i32 %1578 to i8
  %1581 = add i8 %1579, %1580
  store i8 %1581, i8* %173, align 2
  %1582 = load i8, i8* %188, align 1
  %1583 = lshr i8 %1582, 5
  %1584 = and i8 %1583, 1
  %1585 = load i8, i8* %175, align 8
  %1586 = add i8 %1584, %1585
  store i8 %1586, i8* %175, align 8
  %1587 = lshr i8 %1582, 4
  %1588 = and i8 %1587, 1
  %1589 = load i8, i8* %177, align 2
  %1590 = add i8 %1589, %1588
  store i8 %1590, i8* %177, align 2
  br label %1591

1591:                                             ; preds = %1575, %1400, %1393
  %1592 = phi i32 [ 0, %1575 ], [ 1, %1393 ], [ 1, %1400 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %781) #17
  %1593 = load %struct.VkSubpassDependency*, %struct.VkSubpassDependency** %667, align 8
  %1594 = icmp eq %struct.VkSubpassDependency* %1593, null
  br i1 %1594, label %1599, label %1595

1595:                                             ; preds = %1591
  %1596 = ptrtoint %struct.VkSubpassDependency* %1593 to i64
  %1597 = bitcast %struct.VkSubpassDependency** %668 to i64*
  store i64 %1596, i64* %1597, align 8
  %1598 = bitcast %struct.VkSubpassDependency* %1593 to i8*
  call void @_ZdlPv(i8* %1598) #21
  br label %1599

1599:                                             ; preds = %1595, %1591
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %666) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %648) #17
  %1600 = load i64, i64* %520, align 8
  %1601 = icmp eq i64 %1600, 0
  br i1 %1601, label %1608, label %1602

1602:                                             ; preds = %1599, %1602
  %1603 = phi i64 [ %1606, %1602 ], [ %1600, %1599 ]
  %1604 = add i64 %1603, -1
  store i64 %1604, i64* %520, align 8
  %1605 = getelementptr inbounds %"class.angle::FixedVector.1510", %"class.angle::FixedVector.1510"* %25, i64 0, i32 0, i32 0, i64 %1604
  store i32 0, i32* %1605, align 4
  %1606 = load i64, i64* %520, align 8
  %1607 = icmp eq i64 %1606, 0
  br i1 %1607, label %1608, label %1602

1608:                                             ; preds = %1602, %1599
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %519) #17
  %1609 = load i64, i64* %518, align 8
  %1610 = icmp eq i64 %1609, 0
  br i1 %1610, label %1618, label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1616, %1611 ], [ %1609, %1608 ]
  %1613 = add i64 %1612, -1
  store i64 %1613, i64* %518, align 8
  %1614 = getelementptr inbounds %"class.angle::FixedVector.1508", %"class.angle::FixedVector.1508"* %24, i64 0, i32 0, i32 0, i64 %1613
  %1615 = bitcast %struct.VkAttachmentReference* %1614 to i64*
  store i64 0, i64* %1615, align 8
  %1616 = load i64, i64* %518, align 8
  %1617 = icmp eq i64 %1616, 0
  br i1 %1617, label %1618, label %1611

1618:                                             ; preds = %1611, %1608
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %517) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %516) #17
  %1619 = load i64, i64* %515, align 8
  %1620 = icmp eq i64 %1619, 0
  br i1 %1620, label %1628, label %1621

1621:                                             ; preds = %1618, %1621
  %1622 = phi i64 [ %1626, %1621 ], [ %1619, %1618 ]
  %1623 = add i64 %1622, -1
  store i64 %1623, i64* %515, align 8
  %1624 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %22, i64 0, i32 0, i32 0, i64 %1623
  %1625 = bitcast %struct.VkAttachmentReference* %1624 to i64*
  store i64 0, i64* %1625, align 8
  %1626 = load i64, i64* %515, align 8
  %1627 = icmp eq i64 %1626, 0
  br i1 %1627, label %1628, label %1621

1628:                                             ; preds = %1621, %1618
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %514) #17
  store i64 0, i64* %512, align 8
  %1629 = load %struct.VkSubpassDescription*, %struct.VkSubpassDescription** %510, align 8
  %1630 = icmp eq %struct.VkSubpassDescription* %1629, %511
  %1631 = icmp eq %struct.VkSubpassDescription* %1629, null
  %1632 = or i1 %1630, %1631
  br i1 %1632, label %1635, label %1633

1633:                                             ; preds = %1628
  %1634 = bitcast %struct.VkSubpassDescription* %1629 to i8*
  call void @_ZdaPv(i8* %1634) #21
  br label %1635

1635:                                             ; preds = %1633, %1628
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %509) #17
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %203) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #17
  %1636 = load i64, i64* %200, align 8
  %1637 = icmp eq i64 %1636, 0
  br i1 %1637, label %1645, label %1638

1638:                                             ; preds = %1635, %1638
  %1639 = phi i64 [ %1643, %1638 ], [ %1636, %1635 ]
  %1640 = add i64 %1639, -1
  store i64 %1640, i64* %200, align 8
  %1641 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %17, i64 0, i32 0, i32 0, i64 %1640
  %1642 = bitcast %struct.VkAttachmentReference* %1641 to i64*
  store i64 0, i64* %1642, align 8
  %1643 = load i64, i64* %200, align 8
  %1644 = icmp eq i64 %1643, 0
  br i1 %1644, label %1645, label %1638

1645:                                             ; preds = %1638, %1635
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %199) #17
  %1646 = load i64, i64* %198, align 8
  %1647 = icmp eq i64 %1646, 0
  br i1 %1647, label %1655, label %1648

1648:                                             ; preds = %1645, %1648
  %1649 = phi i64 [ %1653, %1648 ], [ %1646, %1645 ]
  %1650 = add i64 %1649, -1
  store i64 %1650, i64* %198, align 8
  %1651 = getelementptr inbounds %"class.angle::FixedVector.1503", %"class.angle::FixedVector.1503"* %16, i64 0, i32 0, i32 0, i64 %1650
  %1652 = bitcast %struct.VkAttachmentReference* %1651 to i64*
  store i64 0, i64* %1652, align 8
  %1653 = load i64, i64* %198, align 8
  %1654 = icmp eq i64 %1653, 0
  br i1 %1654, label %1655, label %1648

1655:                                             ; preds = %1648, %1645
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %197) #17
  %1656 = icmp eq i32 %1592, 1
  br i1 %1656, label %1774, label %1657

1657:                                             ; preds = %1655
  %1658 = icmp eq i8* %160, null
  br i1 %1658, label %1662, label %1659, !prof !5

1659:                                             ; preds = %1657
  %1660 = load i8, i8* %160, align 1
  %1661 = icmp sgt i8 %1660, -1
  br i1 %1661, label %1663, label %1662, !prof !2

1662:                                             ; preds = %1659, %1657
  call void @llvm.trap() #17
  unreachable

1663:                                             ; preds = %1659
  %1664 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %161, i64 0, i32 0, i32 1, i32 0, i32 0
  %1665 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE22find_or_prepare_insertIS5_EENSF_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.1420"* %1664, %"class.rx::vk::AttachmentOpsArray"* dereferenceable(40) %3) #17, !noalias !67
  %1666 = extractvalue { i64, i8 } %1665, 0
  %1667 = extractvalue { i64, i8 } %1665, 1
  %1668 = and i8 %1667, 1
  %1669 = icmp eq i8 %1668, 0
  br i1 %1669, label %1683, label %1670

1670:                                             ; preds = %1663
  %1671 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %161, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %1672 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %1671, align 8, !noalias !67
  %1673 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1672, i64 %1666
  %1674 = bitcast %"class.rx::vk::AttachmentOpsArray"* %3 to i8*
  %1675 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %1673 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1675, i8* align 2 %1674, i64 40, i1 false) #17, !noalias !67
  %1676 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1672, i64 %1666, i32 0, i32 1, i32 1
  %1677 = getelementptr inbounds %"class.rx::vk::RenderPass", %"class.rx::vk::RenderPass"* %1676, i64 0, i32 0, i32 0
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %1677, align 8, !noalias !67
  %1678 = getelementptr inbounds %"class.rx::vk::RenderPassHelper", %"class.rx::vk::RenderPassHelper"* %29, i64 0, i32 1
  %1679 = bitcast %"class.rx::vk::RenderPass"* %1676 to i64*
  %1680 = bitcast %"class.rx::vk::RenderPass"* %1678 to i64*
  %1681 = load i64, i64* %1680, align 8, !noalias !67
  store i64 %1681, i64* %1679, align 8, !noalias !67
  store i64 0, i64* %1680, align 8, !noalias !67
  %1682 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1672, i64 %1666, i32 0, i32 1, i32 2, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1682, i8* align 8 %167, i64 13, i1 false) #17, !noalias !67
  br label %1683

1683:                                             ; preds = %1670, %1663
  %1684 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %1664, i64 0, i32 0
  %1685 = load i8*, i8** %1684, align 8, !noalias !67
  %1686 = getelementptr inbounds i8, i8* %1685, i64 %1666
  %1687 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %161, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %1688 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %1687, align 8, !noalias !67
  %1689 = icmp ne i8* %1686, null
  call void @llvm.assume(i1 %1689) #17, !noalias !67
  %1690 = load i8, i8* %1686, align 1
  %1691 = icmp sgt i8 %1690, -1
  br i1 %1691, label %1693, label %1692, !prof !2

1692:                                             ; preds = %1683
  call void @llvm.trap() #17
  unreachable

1693:                                             ; preds = %1683
  %1694 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 1
  store %"class.rx::vk::RenderPass"* %1694, %"class.rx::vk::RenderPass"** %5, align 8
  br i1 %4, label %1695, label %1774

1695:                                             ; preds = %1693
  %1696 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 0
  %1697 = load i8, i8* %1696, align 1
  %1698 = zext i8 %1697 to i32
  %1699 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 5
  %1700 = load i32, i32* %1699, align 4
  %1701 = add i32 %1700, %1698
  store i32 %1701, i32* %1699, align 4
  %1702 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 1
  %1703 = load i8, i8* %1702, align 1
  %1704 = zext i8 %1703 to i32
  %1705 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 6
  %1706 = load i32, i32* %1705, align 4
  %1707 = add i32 %1706, %1704
  store i32 %1707, i32* %1705, align 4
  %1708 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 2
  %1709 = load i8, i8* %1708, align 1
  %1710 = zext i8 %1709 to i32
  %1711 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 7
  %1712 = load i32, i32* %1711, align 4
  %1713 = add i32 %1712, %1710
  store i32 %1713, i32* %1711, align 4
  %1714 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 3
  %1715 = load i8, i8* %1714, align 1
  %1716 = zext i8 %1715 to i32
  %1717 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 8
  %1718 = load i32, i32* %1717, align 4
  %1719 = add i32 %1718, %1716
  store i32 %1719, i32* %1717, align 4
  %1720 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 4
  %1721 = load i8, i8* %1720, align 1
  %1722 = zext i8 %1721 to i32
  %1723 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 9
  %1724 = load i32, i32* %1723, align 4
  %1725 = add i32 %1724, %1722
  store i32 %1725, i32* %1723, align 4
  %1726 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 5
  %1727 = load i8, i8* %1726, align 1
  %1728 = zext i8 %1727 to i32
  %1729 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 10
  %1730 = load i32, i32* %1729, align 4
  %1731 = add i32 %1730, %1728
  store i32 %1731, i32* %1729, align 4
  %1732 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 6
  %1733 = load i8, i8* %1732, align 1
  %1734 = zext i8 %1733 to i32
  %1735 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 11
  %1736 = load i32, i32* %1735, align 4
  %1737 = add i32 %1736, %1734
  store i32 %1737, i32* %1735, align 4
  %1738 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 7
  %1739 = load i8, i8* %1738, align 1
  %1740 = zext i8 %1739 to i32
  %1741 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 14
  %1742 = load i32, i32* %1741, align 4
  %1743 = add i32 %1742, %1740
  store i32 %1743, i32* %1741, align 4
  %1744 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 8
  %1745 = load i8, i8* %1744, align 1
  %1746 = zext i8 %1745 to i32
  %1747 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 12
  %1748 = load i32, i32* %1747, align 4
  %1749 = add i32 %1748, %1746
  store i32 %1749, i32* %1747, align 4
  %1750 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 9
  %1751 = load i8, i8* %1750, align 1
  %1752 = zext i8 %1751 to i32
  %1753 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 15
  %1754 = load i32, i32* %1753, align 4
  %1755 = add i32 %1754, %1752
  store i32 %1755, i32* %1753, align 4
  %1756 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 10
  %1757 = load i8, i8* %1756, align 1
  %1758 = zext i8 %1757 to i32
  %1759 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 13
  %1760 = load i32, i32* %1759, align 4
  %1761 = add i32 %1760, %1758
  store i32 %1761, i32* %1759, align 4
  %1762 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 11
  %1763 = load i8, i8* %1762, align 1
  %1764 = zext i8 %1763 to i32
  %1765 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 16
  %1766 = load i32, i32* %1765, align 4
  %1767 = add i32 %1766, %1764
  store i32 %1767, i32* %1765, align 4
  %1768 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %1688, i64 %1666, i32 0, i32 1, i32 2, i32 12
  %1769 = load i8, i8* %1768, align 1
  %1770 = zext i8 %1769 to i32
  %1771 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 17
  %1772 = load i32, i32* %1771, align 4
  %1773 = add i32 %1772, %1770
  store i32 %1773, i32* %1771, align 4
  br label %1774

1774:                                             ; preds = %1655, %1695, %1693
  %1775 = phi i32 [ 1, %1655 ], [ 0, %1693 ], [ 0, %1695 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165) #17
  br label %1776

1776:                                             ; preds = %130, %1774
  %1777 = phi i32 [ %1775, %1774 ], [ 0, %130 ]
  ret i32 %1777
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx15RenderPassCache20getRenderPassWithOpsEPNS_9ContextVkERKNS_2vk14RenderPassDescERKNS3_18AttachmentOpsArrayEPPNS3_10RenderPassE(%"class.rx::RenderPassCache"*, %"class.rx::ContextVk"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12), %"class.rx::vk::AttachmentOpsArray"* dereferenceable(40), %"class.rx::vk::RenderPass"** nocapture) local_unnamed_addr #2 align 2 {
  %6 = tail call i32 @_ZN2rx15RenderPassCache24getRenderPassWithOpsImplEPNS_9ContextVkERKNS_2vk14RenderPassDescERKNS3_18AttachmentOpsArrayEbPPNS3_10RenderPassE(%"class.rx::RenderPassCache"* %0, %"class.rx::ContextVk"* %1, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %2, %"class.rx::vk::AttachmentOpsArray"* dereferenceable(40) %3, i1 zeroext true, %"class.rx::vk::RenderPass"** %4)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.1203"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE4findIS5_EENSR_8iteratorERSO_(%"class.absl::container_internal::raw_hash_set.1202"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %1, i64 0, i32 0
  %5 = tail call i64 @XXH64(i8* %4, i64 12, i64 2882400152) #17
  %6 = add i64 %5, %3
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 1
  br label %25

25:                                               ; preds = %59, %2
  %26 = phi i64 [ %19, %2 ], [ %61, %59 ]
  %27 = phi i64 [ 0, %2 ], [ %60, %59 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %24, align 8
  br label %38

38:                                               ; preds = %48, %35
  %39 = phi i32 [ %36, %35 ], [ %50, %48 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #17, !range !3
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %37, i64 %43
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = tail call i32 @bcmp(i8* %45, i8* %4, i64 12) #17
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48, !prof !2

48:                                               ; preds = %38
  %49 = add i32 %39, -1
  %50 = and i32 %49, %39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %38

52:                                               ; preds = %38
  %53 = getelementptr inbounds i8, i8* %13, i64 %43
  %54 = icmp ne i8* %53, null
  tail call void @llvm.assume(i1 %54) #17
  br label %62

55:                                               ; preds = %48, %25
  %56 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %62, !prof !5

59:                                               ; preds = %55
  %60 = add i64 %27, 16
  %61 = add i64 %60, %28
  br label %25

62:                                               ; preds = %55, %52
  %63 = phi %"union.absl::container_internal::map_slot_type.1203"* [ %44, %52 ], [ undef, %55 ]
  %64 = phi i8* [ %53, %52 ], [ null, %55 ]
  %65 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.1203"* } undef, i8* %64, 0
  %66 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.1203"* } %65, %"union.absl::container_internal::map_slot_type.1203"* %63, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.1203"* } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.1421"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE4findIS5_EENSJ_8iteratorERSG_(%"class.absl::container_internal::raw_hash_set.1420"*, %"class.rx::vk::AttachmentOpsArray"* dereferenceable(40)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = bitcast %"class.rx::vk::AttachmentOpsArray"* %1 to i8*
  %5 = tail call i64 @XXH64(i8* %4, i64 40, i64 2882400152) #17
  %6 = add i64 %5, %3
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 1
  br label %25

25:                                               ; preds = %59, %2
  %26 = phi i64 [ %19, %2 ], [ %61, %59 ]
  %27 = phi i64 [ 0, %2 ], [ %60, %59 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %24, align 8
  br label %38

38:                                               ; preds = %48, %35
  %39 = phi i32 [ %36, %35 ], [ %50, %48 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #17, !range !3
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %37, i64 %43
  %45 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %44 to i8*
  %46 = tail call i32 @bcmp(i8* %45, i8* %4, i64 40) #17
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48, !prof !2

48:                                               ; preds = %38
  %49 = add i32 %39, -1
  %50 = and i32 %49, %39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %38

52:                                               ; preds = %38
  %53 = getelementptr inbounds i8, i8* %13, i64 %43
  %54 = icmp ne i8* %53, null
  tail call void @llvm.assume(i1 %54) #17
  br label %62

55:                                               ; preds = %48, %25
  %56 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %62, !prof !5

59:                                               ; preds = %55
  %60 = add i64 %27, 16
  %61 = add i64 %60, %28
  br label %25

62:                                               ; preds = %55, %52
  %63 = phi %"union.absl::container_internal::map_slot_type.1421"* [ %44, %52 ], [ undef, %55 ]
  %64 = phi i8* [ %53, %52 ], [ null, %55 ]
  %65 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.1421"* } undef, i8* %64, 0
  %66 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.1421"* } %65, %"union.absl::container_internal::map_slot_type.1421"* %63, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.1421"* } %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx21GraphicsPipelineCacheC2Ev(%"class.rx::GraphicsPipelineCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx21GraphicsPipelineCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 3
  %7 = bitcast %"class.std::__1::__compressed_pair.1172"* %6 to i32*
  %8 = bitcast %"class.std::__1::unordered_map.1151"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx21GraphicsPipelineCacheD2Ev(%"class.rx::GraphicsPipelineCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx21GraphicsPipelineCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1, %19
  %7 = phi %"struct.std::__1::__hash_node_base.1156"* [ %9, %19 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %7, i64 34
  %11 = bitcast %"struct.std::__1::__hash_node_base.1156"* %10 to %"struct.rx::vk::GraphicsPipelineTransition"**
  %12 = load %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"** %11, align 8
  %13 = icmp eq %"struct.rx::vk::GraphicsPipelineTransition"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %12 to i64
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %7, i64 35
  %17 = bitcast %"struct.std::__1::__hash_node_base.1156"* %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.rx::vk::GraphicsPipelineTransition"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #21
  br label %19

19:                                               ; preds = %14, %6
  %20 = bitcast %"struct.std::__1::__hash_node_base.1156"* %7 to i8*
  tail call void @_ZdlPv(i8* %20) #21
  %21 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %9, null
  br i1 %21, label %22, label %6

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %23, align 8
  store %"struct.std::__1::__hash_node_base.1156"** null, %"struct.std::__1::__hash_node_base.1156"*** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1156"** %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.std::__1::__hash_node_base.1156"** %24 to i8*
  tail call void @_ZdlPv(i8* %27) #21
  br label %28

28:                                               ; preds = %22, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx21GraphicsPipelineCacheD0Ev(%"class.rx::GraphicsPipelineCache"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx21GraphicsPipelineCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1, %19
  %7 = phi %"struct.std::__1::__hash_node_base.1156"* [ %9, %19 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %7, i64 34
  %11 = bitcast %"struct.std::__1::__hash_node_base.1156"* %10 to %"struct.rx::vk::GraphicsPipelineTransition"**
  %12 = load %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"** %11, align 8
  %13 = icmp eq %"struct.rx::vk::GraphicsPipelineTransition"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %12 to i64
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %7, i64 35
  %17 = bitcast %"struct.std::__1::__hash_node_base.1156"* %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.rx::vk::GraphicsPipelineTransition"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #21
  br label %19

19:                                               ; preds = %14, %6
  %20 = bitcast %"struct.std::__1::__hash_node_base.1156"* %7 to i8*
  tail call void @_ZdlPv(i8* %20) #21
  %21 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %9, null
  br i1 %21, label %22, label %6

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %23, align 8
  store %"struct.std::__1::__hash_node_base.1156"** null, %"struct.std::__1::__hash_node_base.1156"*** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1156"** %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.std::__1::__hash_node_base.1156"** %24 to i8*
  tail call void @_ZdlPv(i8* %27) #21
  br label %28

28:                                               ; preds = %22, %26
  %29 = bitcast %"class.rx::GraphicsPipelineCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx21GraphicsPipelineCache7destroyEPNS_10RendererVkE(%"class.rx::GraphicsPipelineCache"* nocapture, %"class.rx::RendererVk"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  store i64 %13, i64* %11, align 8
  %14 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #17
  %15 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 43
  %16 = load %struct.VkDevice_T*, %struct.VkDevice_T** %15, align 8
  %17 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = bitcast %"struct.std::__1::__hash_node_base.1156"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %85

21:                                               ; preds = %93, %2
  %22 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %84, label %25

25:                                               ; preds = %21
  %26 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %17, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %26, null
  br i1 %27, label %44, label %28

28:                                               ; preds = %25, %41
  %29 = phi %"struct.std::__1::__hash_node_base.1156"* [ %31, %41 ], [ %26, %25 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %29, i64 34
  %33 = bitcast %"struct.std::__1::__hash_node_base.1156"* %32 to %"struct.rx::vk::GraphicsPipelineTransition"**
  %34 = load %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"** %33, align 8
  %35 = icmp eq %"struct.rx::vk::GraphicsPipelineTransition"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %28
  %37 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %29, i64 35
  %39 = bitcast %"struct.std::__1::__hash_node_base.1156"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"struct.rx::vk::GraphicsPipelineTransition"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #21
  br label %41

41:                                               ; preds = %36, %28
  %42 = bitcast %"struct.std::__1::__hash_node_base.1156"* %29 to i8*
  tail call void @_ZdlPv(i8* %42) #21
  %43 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %31, null
  br i1 %43, label %44, label %28

44:                                               ; preds = %41, %25
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %17, align 8
  %45 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %66, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = add i64 %46, -1
  %51 = and i64 %46, 3
  %52 = icmp ult i64 %50, 3
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = sub i64 %46, %51
  br label %67

55:                                               ; preds = %67, %48
  %56 = phi i64 [ 0, %48 ], [ %81, %67 ]
  %57 = icmp eq i64 %51, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %55, %58
  %59 = phi i64 [ %63, %58 ], [ %56, %55 ]
  %60 = phi i64 [ %64, %58 ], [ %51, %55 ]
  %61 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %49, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %61, i64 %59
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %62, align 8
  %63 = add nuw i64 %59, 1
  %64 = add i64 %60, -1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %58, !llvm.loop !80

66:                                               ; preds = %55, %58, %44
  store i64 0, i64* %22, align 8
  br label %84

67:                                               ; preds = %67, %53
  %68 = phi i64 [ 0, %53 ], [ %81, %67 ]
  %69 = phi i64 [ %54, %53 ], [ %82, %67 ]
  %70 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %49, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %70, i64 %68
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %71, align 8
  %72 = or i64 %68, 1
  %73 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %49, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %73, i64 %72
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %74, align 8
  %75 = or i64 %68, 2
  %76 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %49, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %76, i64 %75
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %77, align 8
  %78 = or i64 %68, 3
  %79 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %49, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %80, align 8
  %81 = add nuw i64 %68, 4
  %82 = add i64 %69, -4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %55, label %67

84:                                               ; preds = %21, %66
  ret void

85:                                               ; preds = %2, %93
  %86 = phi i64 [ %95, %93 ], [ %19, %2 ]
  %87 = inttoptr i64 %86 to %"struct.std::__1::__hash_node"*
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %87, i64 0, i32 2, i32 0, i32 1, i32 2, i32 0, i32 0
  %89 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %88, align 8
  %90 = icmp eq %struct.VkPipeline_T* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  %92 = load void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)** @vkDestroyPipeline, align 8
  tail call void %92(%struct.VkDevice_T* %16, %struct.VkPipeline_T* nonnull %89, %struct.VkAllocationCallbacks* null) #17
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %88, align 8
  br label %93

93:                                               ; preds = %85, %91
  %94 = inttoptr i64 %86 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %21, label %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx21GraphicsPipelineCache7releaseEPNS_9ContextVkE(%"class.rx::GraphicsPipelineCache"* nocapture, %"class.rx::ContextVk"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.rx::vk::GarbageObject", align 8
  %4 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = bitcast %"struct.std::__1::__hash_node_base.1156"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.rx::vk::GarbageObject"* %3 to i8*
  %10 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 51, i32 0, i32 1
  %11 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 51, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 51
  %13 = bitcast %"class.rx::vk::GarbageObject"** %10 to i64*
  br label %78

14:                                               ; preds = %94, %2
  %15 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %77, label %18

18:                                               ; preds = %14
  %19 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %4, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %18, %34
  %22 = phi %"struct.std::__1::__hash_node_base.1156"* [ %24, %34 ], [ %19, %18 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %22, i64 34
  %26 = bitcast %"struct.std::__1::__hash_node_base.1156"* %25 to %"struct.rx::vk::GraphicsPipelineTransition"**
  %27 = load %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"** %26, align 8
  %28 = icmp eq %"struct.rx::vk::GraphicsPipelineTransition"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint %"struct.rx::vk::GraphicsPipelineTransition"* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %22, i64 35
  %32 = bitcast %"struct.std::__1::__hash_node_base.1156"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast %"struct.rx::vk::GraphicsPipelineTransition"* %27 to i8*
  call void @_ZdlPv(i8* %33) #21
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.1156"* %22 to i8*
  call void @_ZdlPv(i8* %35) #21
  %36 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %18
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %4, align 8
  %38 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %59, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = add i64 %39, -1
  %44 = and i64 %39, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = sub i64 %39, %44
  br label %60

48:                                               ; preds = %60, %41
  %49 = phi i64 [ 0, %41 ], [ %74, %60 ]
  %50 = icmp eq i64 %44, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %48, %51
  %52 = phi i64 [ %56, %51 ], [ %49, %48 ]
  %53 = phi i64 [ %57, %51 ], [ %44, %48 ]
  %54 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %42, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %54, i64 %52
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %55, align 8
  %56 = add nuw i64 %52, 1
  %57 = add i64 %53, -1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %51, !llvm.loop !81

59:                                               ; preds = %48, %51, %37
  store i64 0, i64* %15, align 8
  br label %77

60:                                               ; preds = %60, %46
  %61 = phi i64 [ 0, %46 ], [ %74, %60 ]
  %62 = phi i64 [ %47, %46 ], [ %75, %60 ]
  %63 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %42, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %63, i64 %61
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %64, align 8
  %65 = or i64 %61, 1
  %66 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %42, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %66, i64 %65
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %67, align 8
  %68 = or i64 %61, 2
  %69 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %42, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %70, align 8
  %71 = or i64 %61, 3
  %72 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %42, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %73, align 8
  %74 = add nuw i64 %61, 4
  %75 = add i64 %62, -4
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %48, label %60

77:                                               ; preds = %14, %59
  ret void

78:                                               ; preds = %8, %94
  %79 = phi i64 [ %6, %8 ], [ %96, %94 ]
  %80 = inttoptr i64 %79 to %"struct.std::__1::__hash_node"*
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %80, i64 0, i32 2, i32 0, i32 1, i32 2, i32 0, i32 0
  %82 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %81, align 8
  %83 = icmp eq %struct.VkPipeline_T* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %78
  %85 = bitcast %struct.VkPipeline_T* %82 to %"struct.rx::vk::GarbageHandle_T"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #17
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %81, align 8, !noalias !82
  call void @_ZN2rx2vk13GarbageObjectC1ENS0_10HandleTypeEPNS0_15GarbageHandle_TE(%"class.rx::vk::GarbageObject"* nonnull %3, i32 15, %"struct.rx::vk::GarbageHandle_T"* nonnull %85) #17
  %86 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %10, align 8
  %87 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %11, align 8
  %88 = icmp ult %"class.rx::vk::GarbageObject"* %86, %87
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %86, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %3) #17
  %90 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %86, i64 1
  %91 = ptrtoint %"class.rx::vk::GarbageObject"* %90 to i64
  store i64 %91, i64* %13, align 8
  br label %93

92:                                               ; preds = %84
  call void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.684"* %12, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %3) #17
  br label %93

93:                                               ; preds = %92, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #17
  br label %94

94:                                               ; preds = %78, %93
  %95 = inttoptr i64 %79 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %14, label %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx21GraphicsPipelineCache14insertPipelineEPNS_9ContextVkERKNS_2vk13PipelineCacheERKNS3_10RenderPassERKNS3_14PipelineLayoutERKN5angle7BitSetTILm16EmmEERKNSE_ILm32EmmEEPKNS3_12ShaderModuleESN_SN_SN_SN_RKNS3_23SpecializationConstantsERKNS3_20GraphicsPipelineDescEPPSS_PPNS3_14PipelineHelperE(%"class.rx::GraphicsPipelineCache"*, %"class.rx::ContextVk"*, %"class.rx::vk::PipelineCache"* nocapture readonly dereferenceable(8), %"class.rx::vk::RenderPass"* nocapture readonly dereferenceable(8), %"class.rx::vk::PipelineLayout"* nocapture readonly dereferenceable(8), %"class.angle::BitSetT.126"* nocapture readonly dereferenceable(8), %"class.angle::BitSetT.44"* nocapture readonly dereferenceable(8), %"class.rx::vk::ShaderModule"* nocapture readonly, %"class.rx::vk::ShaderModule"* readonly, %"class.rx::vk::ShaderModule"* readonly, %"class.rx::vk::ShaderModule"* readonly, %"class.rx::vk::ShaderModule"* readonly, %"struct.rx::vk::SpecializationConstants"* dereferenceable(16), %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252), %"class.rx::vk::GraphicsPipelineDesc"** nocapture, %"class.rx::vk::PipelineHelper"** nocapture) local_unnamed_addr #2 align 2 {
  %17 = alloca %"class.rx::vk::Pipeline", align 8
  %18 = bitcast %"class.rx::vk::Pipeline"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.rx::vk::Pipeline", %"class.rx::vk::Pipeline"* %17, i64 0, i32 0, i32 0
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %19, align 8
  %20 = icmp eq %"class.rx::ContextVk"* %1, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %23 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %22, align 8
  %24 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %23, i64 0, i32 50
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %24) #17
  %25 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %23, i64 0, i32 53
  store i8 1, i8* %25, align 4
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %24) #17
  %26 = call i32 @_ZNK2rx2vk20GraphicsPipelineDesc18initializePipelineEPNS_9ContextVkERKNS0_13PipelineCacheERKNS0_10RenderPassERKNS0_14PipelineLayoutERKN5angle7BitSetTILm16EmmEERKNSE_ILm32EmmEEPKNS0_12ShaderModuleESN_SN_SN_SN_RKNS0_23SpecializationConstantsEPNS0_8PipelineE(%"class.rx::vk::GraphicsPipelineDesc"* %13, %"class.rx::ContextVk"* nonnull %1, %"class.rx::vk::PipelineCache"* dereferenceable(8) %2, %"class.rx::vk::RenderPass"* dereferenceable(8) %3, %"class.rx::vk::PipelineLayout"* dereferenceable(8) %4, %"class.angle::BitSetT.126"* dereferenceable(8) %5, %"class.angle::BitSetT.44"* dereferenceable(8) %6, %"class.rx::vk::ShaderModule"* %7, %"class.rx::vk::ShaderModule"* %8, %"class.rx::vk::ShaderModule"* %9, %"class.rx::vk::ShaderModule"* %10, %"class.rx::vk::ShaderModule"* %11, %"struct.rx::vk::SpecializationConstants"* dereferenceable(16) %12, %"class.rx::vk::Pipeline"* nonnull %17)
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %36, label %28

28:                                               ; preds = %21, %16
  %29 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0
  %30 = call { %"struct.std::__1::__hash_node_base.1156"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRKS4_NS3_8PipelineEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1152"* %29, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252) %13, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252) %13, %"class.rx::vk::Pipeline"* nonnull dereferenceable(8) %17) #17
  %31 = extractvalue { %"struct.std::__1::__hash_node_base.1156"*, i8 } %30, 0
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %31, i64 2
  %33 = bitcast %"class.rx::vk::GraphicsPipelineDesc"** %14 to %"struct.std::__1::__hash_node_base.1156"**
  store %"struct.std::__1::__hash_node_base.1156"* %32, %"struct.std::__1::__hash_node_base.1156"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %31, i64 34
  %35 = bitcast %"class.rx::vk::PipelineHelper"** %15 to %"struct.std::__1::__hash_node_base.1156"**
  store %"struct.std::__1::__hash_node_base.1156"* %34, %"struct.std::__1::__hash_node_base.1156"** %35, align 8
  br label %36

36:                                               ; preds = %21, %28
  %37 = phi i32 [ 0, %28 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx21GraphicsPipelineCache8populateERKNS_2vk20GraphicsPipelineDescEONS1_8PipelineE(%"class.rx::GraphicsPipelineCache"*, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252), %"class.rx::vk::Pipeline"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  %6 = tail call i64 @XXH64(i8* %5, i64 252, i64 2882400152) #17
  %7 = getelementptr inbounds %"class.rx::GraphicsPipelineCache", %"class.rx::GraphicsPipelineCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %58, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #17, !range !41
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::unordered_map.1151", %"class.std::__1::unordered_map.1151"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %25, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %29, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base.1156"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1156"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %58

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.1156"* %50 to i8*
  %52 = tail call i32 @bcmp(i8* %51, i8* %5, i64 252) #17
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %56, null
  br i1 %57, label %58, label %33

58:                                               ; preds = %46, %54, %20, %3, %27
  %59 = getelementptr inbounds %"class.std::__1::unordered_map.1151", %"class.std::__1::unordered_map.1151"* %4, i64 0, i32 0
  %60 = tail call { %"struct.std::__1::__hash_node_base.1156"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRKS4_NS3_8PipelineEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1152"* %59, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252) %1, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252) %1, %"class.rx::vk::Pipeline"* dereferenceable(8) %2) #17
  br label %61

61:                                               ; preds = %49, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx24DescriptorSetLayoutCacheC2Ev(%"class.rx::DescriptorSetLayoutCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.std::__1::__compressed_pair.1366"* %2 to i32*
  %4 = bitcast %"class.rx::DescriptorSetLayoutCache"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %3, align 4
  %5 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 1
  %6 = bitcast %"class.rx::CacheStats"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx24DescriptorSetLayoutCacheD2Ev(%"class.rx::DescriptorSetLayoutCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.1350"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.1350"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #21
  %10 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.1350"** null, %"struct.std::__1::__hash_node_base.1350"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1350"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.1350"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx24DescriptorSetLayoutCache7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetLayoutCache"* nocapture, %"class.rx::RendererVk"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 6, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 6, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 43
  %14 = load %struct.VkDevice_T*, %struct.VkDevice_T** %13, align 8
  %15 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::__hash_node_base.1350"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %73

19:                                               ; preds = %81, %2
  %20 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %72, label %23

23:                                               ; preds = %19
  %24 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %15, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %23, %26
  %27 = phi %"struct.std::__1::__hash_node_base.1350"* [ %29, %26 ], [ %24, %23 ]
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %27, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %28, align 8
  %30 = bitcast %"struct.std::__1::__hash_node_base.1350"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #21
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %29, null
  br i1 %31, label %32, label %26

32:                                               ; preds = %26, %23
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %15, align 8
  %33 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = add i64 %34, -1
  %39 = and i64 %34, 3
  %40 = icmp ult i64 %38, 3
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = sub i64 %34, %39
  br label %55

43:                                               ; preds = %55, %36
  %44 = phi i64 [ 0, %36 ], [ %69, %55 ]
  %45 = icmp eq i64 %39, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %43, %46
  %47 = phi i64 [ %51, %46 ], [ %44, %43 ]
  %48 = phi i64 [ %52, %46 ], [ %39, %43 ]
  %49 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %37, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %49, i64 %47
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %50, align 8
  %51 = add nuw i64 %47, 1
  %52 = add i64 %48, -1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %46, !llvm.loop !87

54:                                               ; preds = %43, %46, %32
  store i64 0, i64* %20, align 8
  br label %72

55:                                               ; preds = %55, %41
  %56 = phi i64 [ 0, %41 ], [ %69, %55 ]
  %57 = phi i64 [ %42, %41 ], [ %70, %55 ]
  %58 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %37, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %58, i64 %56
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %59, align 8
  %60 = or i64 %56, 1
  %61 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %37, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %61, i64 %60
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %62, align 8
  %63 = or i64 %56, 2
  %64 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %37, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %64, i64 %63
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %65, align 8
  %66 = or i64 %56, 3
  %67 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %37, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %67, i64 %66
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %68, align 8
  %69 = add nuw i64 %56, 4
  %70 = add i64 %57, -4
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %43, label %55

72:                                               ; preds = %19, %54
  ret void

73:                                               ; preds = %2, %81
  %74 = phi i64 [ %83, %81 ], [ %17, %2 ]
  %75 = inttoptr i64 %74 to %"struct.std::__1::__hash_node.1594"*
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node.1594", %"struct.std::__1::__hash_node.1594"* %75, i64 0, i32 2, i32 0, i32 1, i32 1, i32 0, i32 0
  %77 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %76, align 8
  %78 = icmp eq %struct.VkDescriptorSetLayout_T* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %73
  %80 = load void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)** @vkDestroyDescriptorSetLayout, align 8
  tail call void %80(%struct.VkDevice_T* %14, %struct.VkDescriptorSetLayout_T* nonnull %77, %struct.VkAllocationCallbacks* null) #17
  store %struct.VkDescriptorSetLayout_T* null, %struct.VkDescriptorSetLayout_T** %76, align 8
  br label %81

81:                                               ; preds = %73, %79
  %82 = inttoptr i64 %74 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %19, label %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx24DescriptorSetLayoutCache22getDescriptorSetLayoutEPNS_2vk7ContextERKNS1_23DescriptorSetLayoutDescEPNS1_14BindingPointerINS1_19DescriptorSetLayoutEEE(%"class.rx::DescriptorSetLayoutCache"*, %"class.rx::vk::Context"*, %"class.rx::vk::DescriptorSetLayoutDesc"* dereferenceable(1536), %"class.rx::vk::BindingPointer.1123"* nocapture) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.angle::FixedVector.1402", align 8
  %6 = alloca %"class.std::__1::vector.1404", align 8
  %7 = alloca %struct.VkDescriptorSetLayoutCreateInfo, align 8
  %8 = alloca %"class.rx::vk::DescriptorSetLayout", align 8
  %9 = alloca %"class.rx::vk::RefCounted.1124", align 8
  %10 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %2, i64 0, i32 0, i32 0, i64 0, i32 0
  %11 = tail call i64 @XXH64(i8* %10, i64 1536, i64 2882400152) #17
  %12 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %83, label %15

15:                                               ; preds = %4
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #17, !range !41
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, -1
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ult i64 %11, %13
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %23, %21, %18
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %30, null
  br i1 %31, label %83, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %34, null
  br i1 %35, label %83, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  br label %38

38:                                               ; preds = %59, %36
  %39 = phi %"struct.std::__1::__hash_node_base.1350"* [ %34, %36 ], [ %61, %59 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %39, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base.1350"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %11
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  br i1 %17, label %47, label %45

45:                                               ; preds = %44
  %46 = and i64 %42, %37
  br label %51

47:                                               ; preds = %44
  %48 = icmp ult i64 %42, %13
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %42, %13
  br label %51

51:                                               ; preds = %49, %47, %45
  %52 = phi i64 [ %46, %45 ], [ %50, %49 ], [ %42, %47 ]
  %53 = icmp eq i64 %52, %26
  br i1 %53, label %59, label %83

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %39, i64 2
  %56 = bitcast %"struct.std::__1::__hash_node_base.1350"* %55 to i8*
  %57 = tail call i32 @bcmp(i8* %56, i8* %10, i64 1536) #17
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %54, %51
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %39, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %61, null
  br i1 %62, label %83, label %38

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %39, i64 194
  %65 = getelementptr inbounds %"class.rx::vk::BindingPointer.1123", %"class.rx::vk::BindingPointer.1123"* %3, i64 0, i32 0
  %66 = load %"class.rx::vk::RefCounted.1124"*, %"class.rx::vk::RefCounted.1124"** %65, align 8
  %67 = icmp eq %"class.rx::vk::RefCounted.1124"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %66, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, -1
  store i32 %71, i32* %69, align 8
  br label %72

72:                                               ; preds = %68, %63
  %73 = bitcast %"class.rx::vk::BindingPointer.1123"* %3 to %"struct.std::__1::__hash_node_base.1350"**
  store %"struct.std::__1::__hash_node_base.1350"* %64, %"struct.std::__1::__hash_node_base.1350"** %73, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %64, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %72
  %76 = bitcast %"struct.std::__1::__hash_node_base.1350"* %64 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 8
  br label %79

79:                                               ; preds = %72, %75
  %80 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 1, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  br label %155

83:                                               ; preds = %51, %59, %25, %4, %32
  %84 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 1, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  %87 = bitcast %"class.angle::FixedVector.1402"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2312, i8* nonnull %87) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 2304, i1 false)
  %88 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %5, i64 0, i32 1
  store i64 0, i64* %88, align 8
  %89 = bitcast %"class.std::__1::vector.1404"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #17
  %90 = getelementptr inbounds %"class.std::__1::vector.1404", %"class.std::__1::vector.1404"* %6, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::vector.1404", %"class.std::__1::vector.1404"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 24, i1 false) #17
  call void @_ZNK2rx2vk23DescriptorSetLayoutDesc14unpackBindingsEPN5angle11FixedVectorI28VkDescriptorSetLayoutBindingLm96ENSt3__15arrayIS4_Lm96EEEEEPNS5_6vectorIP11VkSampler_TNS5_9allocatorISC_EEEE(%"class.rx::vk::DescriptorSetLayoutDesc"* %2, %"class.angle::FixedVector.1402"* nonnull %5, %"class.std::__1::vector.1404"* nonnull %6)
  %92 = bitcast %struct.VkDescriptorSetLayoutCreateInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 16, i1 false)
  %93 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %7, i64 0, i32 0
  store i32 32, i32* %93, align 8
  %94 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %7, i64 0, i32 2
  store i32 0, i32* %94, align 8
  %95 = load i64, i64* %88, align 8
  %96 = trunc i64 %95 to i32
  %97 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %7, i64 0, i32 3
  store i32 %96, i32* %97, align 4
  %98 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %5, i64 0, i32 0, i32 0, i64 0
  %99 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %7, i64 0, i32 4
  store %struct.VkDescriptorSetLayoutBinding* %98, %struct.VkDescriptorSetLayoutBinding** %99, align 8
  %100 = bitcast %"class.rx::vk::DescriptorSetLayout"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #17
  %101 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayout", %"class.rx::vk::DescriptorSetLayout"* %8, i64 0, i32 0, i32 0
  store %struct.VkDescriptorSetLayout_T* null, %struct.VkDescriptorSetLayout_T** %101, align 8
  %102 = call %struct.VkDevice_T* @_ZNK2rx2vk7Context9getDeviceEv(%"class.rx::vk::Context"* %1) #17
  %103 = load i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)** @vkCreateDescriptorSetLayout, align 8
  %104 = call i32 %103(%struct.VkDevice_T* %102, %struct.VkDescriptorSetLayoutCreateInfo* nonnull %7, %struct.VkAllocationCallbacks* null, %struct.VkDescriptorSetLayout_T** nonnull %101) #17
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %111, label %106, !prof !2

106:                                              ; preds = %83
  %107 = bitcast %"class.rx::vk::Context"* %1 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %108 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %108, i64 2
  %110 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %109, align 8
  call void %110(%"class.rx::vk::Context"* %1, i32 %104, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__._ZN2rx24DescriptorSetLayoutCache22getDescriptorSetLayoutEPNS_2vk7ContextERKNS1_23DescriptorSetLayoutDescEPNS1_14BindingPointerINS1_19DescriptorSetLayoutEEE, i64 0, i64 0), i32 3749) #17
  br label %136

111:                                              ; preds = %83
  %112 = bitcast %"class.rx::vk::RefCounted.1124"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #17
  %113 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %9, i64 0, i32 0
  store i32 0, i32* %113, align 8
  %114 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %9, i64 0, i32 1
  %115 = bitcast %"class.rx::vk::DescriptorSetLayout"* %8 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.rx::vk::DescriptorSetLayout"* %114 to i64*
  store i64 %116, i64* %117, align 8
  store %struct.VkDescriptorSetLayout_T* null, %struct.VkDescriptorSetLayout_T** %101, align 8
  %118 = getelementptr inbounds %"class.rx::DescriptorSetLayoutCache", %"class.rx::DescriptorSetLayoutCache"* %0, i64 0, i32 0, i32 0
  %119 = call { %"struct.std::__1::__hash_node_base.1350"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JRKS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1346"* %118, %"class.rx::vk::DescriptorSetLayoutDesc"* dereferenceable(1536) %2, %"class.rx::vk::DescriptorSetLayoutDesc"* dereferenceable(1536) %2, %"class.rx::vk::RefCounted.1124"* nonnull dereferenceable(16) %9) #17
  %120 = extractvalue { %"struct.std::__1::__hash_node_base.1350"*, i8 } %119, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #17
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %120, i64 194
  %122 = getelementptr inbounds %"class.rx::vk::BindingPointer.1123", %"class.rx::vk::BindingPointer.1123"* %3, i64 0, i32 0
  %123 = load %"class.rx::vk::RefCounted.1124"*, %"class.rx::vk::RefCounted.1124"** %122, align 8
  %124 = icmp eq %"class.rx::vk::RefCounted.1124"* %123, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %111
  %126 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %123, i64 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = add i32 %127, -1
  store i32 %128, i32* %126, align 8
  br label %129

129:                                              ; preds = %125, %111
  %130 = bitcast %"class.rx::vk::BindingPointer.1123"* %3 to %"struct.std::__1::__hash_node_base.1350"**
  store %"struct.std::__1::__hash_node_base.1350"* %121, %"struct.std::__1::__hash_node_base.1350"** %130, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %121, null
  br i1 %131, label %136, label %132

132:                                              ; preds = %129
  %133 = bitcast %"struct.std::__1::__hash_node_base.1350"* %121 to i32*
  %134 = load i32, i32* %133, align 8
  %135 = add i32 %134, 1
  store i32 %135, i32* %133, align 8
  br label %136

136:                                              ; preds = %132, %129, %106
  %137 = phi i32 [ 1, %106 ], [ 0, %129 ], [ 0, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #17
  %138 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %90, align 8
  %139 = icmp eq %struct.VkSampler_T** %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %136
  %141 = ptrtoint %struct.VkSampler_T** %138 to i64
  %142 = bitcast %struct.VkSampler_T*** %91 to i64*
  store i64 %141, i64* %142, align 8
  %143 = bitcast %struct.VkSampler_T** %138 to i8*
  call void @_ZdlPv(i8* %143) #21
  br label %144

144:                                              ; preds = %136, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #17
  %145 = load i64, i64* %88, align 8
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %154, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %152, %147 ], [ %145, %144 ]
  %149 = add i64 %148, -1
  store i64 %149, i64* %88, align 8
  %150 = getelementptr inbounds %"class.angle::FixedVector.1402", %"class.angle::FixedVector.1402"* %5, i64 0, i32 0, i32 0, i64 %149
  %151 = bitcast %struct.VkDescriptorSetLayoutBinding* %150 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 24, i1 false) #17
  %152 = load i64, i64* %88, align 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %147

154:                                              ; preds = %147, %144
  call void @llvm.lifetime.end.p0i8(i64 2312, i8* nonnull %87) #17
  br label %155

155:                                              ; preds = %154, %79
  %156 = phi i32 [ 0, %79 ], [ %137, %154 ]
  ret i32 %156
}

declare %struct.VkDevice_T* @_ZNK2rx2vk7Context9getDeviceEv(%"class.rx::vk::Context"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19PipelineLayoutCacheC2Ev(%"class.rx::PipelineLayoutCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx19PipelineLayoutCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 3
  %7 = bitcast %"class.std::__1::__compressed_pair.1339"* %6 to i32*
  %8 = bitcast %"class.std::__1::unordered_map.1318"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19PipelineLayoutCacheD2Ev(%"class.rx::PipelineLayoutCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx19PipelineLayoutCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.1323"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.1323"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  %11 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.1323"** null, %"struct.std::__1::__hash_node_base.1323"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.1323"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.1323"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19PipelineLayoutCacheD0Ev(%"class.rx::PipelineLayoutCache"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx19PipelineLayoutCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.1323"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.1323"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  %11 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.1323"** null, %"struct.std::__1::__hash_node_base.1323"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.1323"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.1323"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %12, %16
  %19 = bitcast %"class.rx::PipelineLayoutCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19PipelineLayoutCache7destroyEPNS_10RendererVkE(%"class.rx::PipelineLayoutCache"* nocapture, %"class.rx::RendererVk"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 3, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 3, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  store i64 %13, i64* %11, align 8
  %14 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #17
  %15 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 43
  %16 = load %struct.VkDevice_T*, %struct.VkDevice_T** %15, align 8
  %17 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = bitcast %"struct.std::__1::__hash_node_base.1323"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %75

21:                                               ; preds = %83, %2
  %22 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %74, label %25

25:                                               ; preds = %21
  %26 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %17, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25, %28
  %29 = phi %"struct.std::__1::__hash_node_base.1323"* [ %31, %28 ], [ %26, %25 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %30, align 8
  %32 = bitcast %"struct.std::__1::__hash_node_base.1323"* %29 to i8*
  tail call void @_ZdlPv(i8* %32) #21
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %31, null
  br i1 %33, label %34, label %28

34:                                               ; preds = %28, %25
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %17, align 8
  %35 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = add i64 %36, -1
  %41 = and i64 %36, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = sub i64 %36, %41
  br label %57

45:                                               ; preds = %57, %38
  %46 = phi i64 [ 0, %38 ], [ %71, %57 ]
  %47 = icmp eq i64 %41, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %45, %48
  %49 = phi i64 [ %53, %48 ], [ %46, %45 ]
  %50 = phi i64 [ %54, %48 ], [ %41, %45 ]
  %51 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %39, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %51, i64 %49
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %52, align 8
  %53 = add nuw i64 %49, 1
  %54 = add i64 %50, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %48, !llvm.loop !88

56:                                               ; preds = %45, %48, %34
  store i64 0, i64* %22, align 8
  br label %74

57:                                               ; preds = %57, %43
  %58 = phi i64 [ 0, %43 ], [ %71, %57 ]
  %59 = phi i64 [ %44, %43 ], [ %72, %57 ]
  %60 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %39, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %60, i64 %58
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %61, align 8
  %62 = or i64 %58, 1
  %63 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %39, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %63, i64 %62
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %64, align 8
  %65 = or i64 %58, 2
  %66 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %39, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %66, i64 %65
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %67, align 8
  %68 = or i64 %58, 3
  %69 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %39, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %70, align 8
  %71 = add nuw i64 %58, 4
  %72 = add i64 %59, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %45, label %57

74:                                               ; preds = %21, %56
  ret void

75:                                               ; preds = %2, %83
  %76 = phi i64 [ %85, %83 ], [ %19, %2 ]
  %77 = inttoptr i64 %76 to %"struct.std::__1::__hash_node.1604"*
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node.1604", %"struct.std::__1::__hash_node.1604"* %77, i64 0, i32 2, i32 0, i32 1, i32 1, i32 0, i32 0
  %79 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %78, align 8
  %80 = icmp eq %struct.VkPipelineLayout_T* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  %82 = load void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** @vkDestroyPipelineLayout, align 8
  tail call void %82(%struct.VkDevice_T* %16, %struct.VkPipelineLayout_T* nonnull %79, %struct.VkAllocationCallbacks* null) #17
  store %struct.VkPipelineLayout_T* null, %struct.VkPipelineLayout_T** %78, align 8
  br label %83

83:                                               ; preds = %75, %81
  %84 = inttoptr i64 %76 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %21, label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19PipelineLayoutCache17getPipelineLayoutEPNS_2vk7ContextERKNS1_18PipelineLayoutDescERKN5angle13PackedEnumMapINS_18DescriptorSetIndexENS1_14BindingPointerINS1_19DescriptorSetLayoutEEELm4EEEPNSA_INS1_14PipelineLayoutEEE(%"class.rx::PipelineLayoutCache"*, %"class.rx::vk::Context"*, %"class.rx::vk::PipelineLayoutDesc"* dereferenceable(6192), %"class.angle::PackedEnumMap.1121"* readonly dereferenceable(32), %"class.rx::vk::BindingPointer.1118"* nocapture) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.angle::FixedVector.1450", align 8
  %7 = alloca %"class.angle::FixedVector.1452", align 8
  %8 = alloca %struct.VkPipelineLayoutCreateInfo, align 8
  %9 = alloca %"class.rx::vk::PipelineLayout", align 8
  %10 = alloca %"class.rx::vk::RefCounted.1119", align 8
  %11 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  %13 = tail call i64 @XXH64(i8* %12, i64 6192, i64 2882400152) #17
  %14 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %85, label %17

17:                                               ; preds = %5
  %18 = tail call i64 @llvm.ctpop.i64(i64 %15) #17, !range !41
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = add i64 %15, -1
  %22 = and i64 %21, %13
  br label %27

23:                                               ; preds = %17
  %24 = icmp ult i64 %13, %15
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = urem i64 %13, %15
  br label %27

27:                                               ; preds = %25, %23, %20
  %28 = phi i64 [ %22, %20 ], [ %26, %25 ], [ %13, %23 ]
  %29 = getelementptr inbounds %"class.std::__1::unordered_map.1318", %"class.std::__1::unordered_map.1318"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %30, i64 %28
  %32 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %32, null
  br i1 %33, label %85, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %32, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %36, null
  br i1 %37, label %85, label %38

38:                                               ; preds = %34
  %39 = add i64 %15, -1
  br label %40

40:                                               ; preds = %61, %38
  %41 = phi %"struct.std::__1::__hash_node_base.1323"* [ %36, %38 ], [ %63, %61 ]
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %41, i64 1
  %43 = bitcast %"struct.std::__1::__hash_node_base.1323"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, %13
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  br i1 %19, label %49, label %47

47:                                               ; preds = %46
  %48 = and i64 %44, %39
  br label %53

49:                                               ; preds = %46
  %50 = icmp ult i64 %44, %15
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = urem i64 %44, %15
  br label %53

53:                                               ; preds = %51, %49, %47
  %54 = phi i64 [ %48, %47 ], [ %52, %51 ], [ %44, %49 ]
  %55 = icmp eq i64 %54, %28
  br i1 %55, label %61, label %85

56:                                               ; preds = %40
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %41, i64 2
  %58 = bitcast %"struct.std::__1::__hash_node_base.1323"* %57 to i8*
  %59 = tail call i32 @bcmp(i8* %58, i8* %12, i64 6192) #17
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56, %53
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %41, i64 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %63, null
  br i1 %64, label %85, label %40

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %41, i64 776
  %67 = getelementptr inbounds %"class.rx::vk::BindingPointer.1118", %"class.rx::vk::BindingPointer.1118"* %4, i64 0, i32 0
  %68 = load %"class.rx::vk::RefCounted.1119"*, %"class.rx::vk::RefCounted.1119"** %67, align 8
  %69 = icmp eq %"class.rx::vk::RefCounted.1119"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.rx::vk::RefCounted.1119", %"class.rx::vk::RefCounted.1119"* %68, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, -1
  store i32 %73, i32* %71, align 8
  br label %74

74:                                               ; preds = %70, %65
  %75 = bitcast %"class.rx::vk::BindingPointer.1118"* %4 to %"struct.std::__1::__hash_node_base.1323"**
  store %"struct.std::__1::__hash_node_base.1323"* %66, %"struct.std::__1::__hash_node_base.1323"** %75, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %66, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = bitcast %"struct.std::__1::__hash_node_base.1323"* %66 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 8
  br label %81

81:                                               ; preds = %74, %77
  %82 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 0, i32 1, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %82, align 8
  br label %170

85:                                               ; preds = %53, %61, %27, %5, %34
  %86 = getelementptr inbounds %"class.rx::PipelineLayoutCache", %"class.rx::PipelineLayoutCache"* %0, i64 0, i32 0, i32 1, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, 1
  store i64 %88, i64* %86, align 8
  %89 = bitcast %"class.angle::FixedVector.1450"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %89) #17
  %90 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %6, i64 0, i32 0, i32 0, i64 0
  %91 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %6, i64 0, i32 1
  %92 = bitcast %"class.angle::FixedVector.1450"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 32, i1 false)
  store i64 0, i64* %91, align 8
  %93 = getelementptr inbounds %"class.angle::PackedEnumMap.1121", %"class.angle::PackedEnumMap.1121"* %3, i64 0, i32 0, i32 0, i64 0, i32 0
  %94 = load %"class.rx::vk::RefCounted.1124"*, %"class.rx::vk::RefCounted.1124"** %93, align 8
  %95 = icmp eq %"class.rx::vk::RefCounted.1124"* %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %85
  %97 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %94, i64 0, i32 1, i32 0, i32 0
  %98 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %97, align 8
  %99 = icmp eq %struct.VkDescriptorSetLayout_T* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %struct.VkDescriptorSetLayout_T* %98 to i64
  %102 = bitcast %"class.angle::FixedVector.1450"* %6 to i64*
  store i64 %101, i64* %102, align 8
  store i64 1, i64* %91, align 8
  br label %103

103:                                              ; preds = %85, %100, %96
  %104 = phi i64 [ 0, %85 ], [ 1, %100 ], [ 0, %96 ]
  %105 = getelementptr inbounds %"class.angle::PackedEnumMap.1121", %"class.angle::PackedEnumMap.1121"* %3, i64 0, i32 0, i32 0, i64 1, i32 0
  %106 = load %"class.rx::vk::RefCounted.1124"*, %"class.rx::vk::RefCounted.1124"** %105, align 8
  %107 = icmp eq %"class.rx::vk::RefCounted.1124"* %106, null
  br i1 %107, label %260, label %250

108:                                              ; preds = %290
  %109 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 0, i32 0
  store i32 1, i32* %111, align 8
  %112 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 0, i32 1
  store i32 %110, i32* %112, align 4
  %113 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 0, i32 2
  store i32 %295, i32* %113, align 8
  store i64 1, i64* %293, align 8
  br label %114

114:                                              ; preds = %290, %108
  %115 = phi i64 [ 0, %290 ], [ 1, %108 ]
  %116 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 1, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %180, label %172

119:                                              ; preds = %232
  %120 = bitcast %"class.rx::vk::Context"* %1 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %121 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %121, i64 2
  %123 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %122, align 8
  call void %123(%"class.rx::vk::Context"* %1, i32 %248, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN2rx19PipelineLayoutCache17getPipelineLayoutEPNS_2vk7ContextERKNS1_18PipelineLayoutDescERKN5angle13PackedEnumMapINS_18DescriptorSetIndexENS1_14BindingPointerINS1_19DescriptorSetLayoutEEELm4EEEPNSA_INS1_14PipelineLayoutEEE, i64 0, i64 0), i32 3841) #17
  br label %149

124:                                              ; preds = %232
  %125 = bitcast %"class.rx::vk::RefCounted.1119"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #17
  %126 = getelementptr inbounds %"class.rx::vk::RefCounted.1119", %"class.rx::vk::RefCounted.1119"* %10, i64 0, i32 0
  store i32 0, i32* %126, align 8
  %127 = getelementptr inbounds %"class.rx::vk::RefCounted.1119", %"class.rx::vk::RefCounted.1119"* %10, i64 0, i32 1
  %128 = bitcast %"class.rx::vk::PipelineLayout"* %9 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.rx::vk::PipelineLayout"* %127 to i64*
  store i64 %129, i64* %130, align 8
  store %struct.VkPipelineLayout_T* null, %struct.VkPipelineLayout_T** %245, align 8
  %131 = getelementptr inbounds %"class.std::__1::unordered_map.1318", %"class.std::__1::unordered_map.1318"* %11, i64 0, i32 0
  %132 = call { %"struct.std::__1::__hash_node_base.1323"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JRKS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1319"* %131, %"class.rx::vk::PipelineLayoutDesc"* dereferenceable(6192) %2, %"class.rx::vk::PipelineLayoutDesc"* dereferenceable(6192) %2, %"class.rx::vk::RefCounted.1119"* nonnull dereferenceable(16) %10) #17
  %133 = extractvalue { %"struct.std::__1::__hash_node_base.1323"*, i8 } %132, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #17
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %133, i64 776
  %135 = getelementptr inbounds %"class.rx::vk::BindingPointer.1118", %"class.rx::vk::BindingPointer.1118"* %4, i64 0, i32 0
  %136 = load %"class.rx::vk::RefCounted.1119"*, %"class.rx::vk::RefCounted.1119"** %135, align 8
  %137 = icmp eq %"class.rx::vk::RefCounted.1119"* %136, null
  br i1 %137, label %142, label %138

138:                                              ; preds = %124
  %139 = getelementptr inbounds %"class.rx::vk::RefCounted.1119", %"class.rx::vk::RefCounted.1119"* %136, i64 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, -1
  store i32 %141, i32* %139, align 8
  br label %142

142:                                              ; preds = %138, %124
  %143 = bitcast %"class.rx::vk::BindingPointer.1118"* %4 to %"struct.std::__1::__hash_node_base.1323"**
  store %"struct.std::__1::__hash_node_base.1323"* %134, %"struct.std::__1::__hash_node_base.1323"** %143, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %134, null
  br i1 %144, label %149, label %145

145:                                              ; preds = %142
  %146 = bitcast %"struct.std::__1::__hash_node_base.1323"* %134 to i32*
  %147 = load i32, i32* %146, align 8
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 8
  br label %149

149:                                              ; preds = %145, %142, %119
  %150 = phi i32 [ 1, %119 ], [ 0, %142 ], [ 0, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %234) #17
  %151 = load i64, i64* %293, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %160, label %153

153:                                              ; preds = %149, %153
  %154 = phi i64 [ %158, %153 ], [ %151, %149 ]
  %155 = add i64 %154, -1
  store i64 %155, i64* %293, align 8
  %156 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %155
  %157 = bitcast %struct.VkPushConstantRange* %156 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %157, i8 0, i64 12, i1 false) #17
  %158 = load i64, i64* %293, align 8
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %153

160:                                              ; preds = %153, %149
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %292) #17
  %161 = load i64, i64* %91, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %169, label %163

163:                                              ; preds = %160, %163
  %164 = phi i64 [ %167, %163 ], [ %161, %160 ]
  %165 = add i64 %164, -1
  store i64 %165, i64* %91, align 8
  %166 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %6, i64 0, i32 0, i32 0, i64 %165
  store %struct.VkDescriptorSetLayout_T* null, %struct.VkDescriptorSetLayout_T** %166, align 8
  %167 = load i64, i64* %91, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %163

169:                                              ; preds = %163, %160
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %89) #17
  br label %170

170:                                              ; preds = %169, %81
  %171 = phi i32 [ 0, %81 ], [ %150, %169 ]
  ret i32 %171

172:                                              ; preds = %114
  %173 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %115, i32 0
  store i32 2, i32* %175, align 4
  %176 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %115, i32 1
  store i32 %174, i32* %176, align 4
  %177 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %115, i32 2
  store i32 %117, i32* %177, align 4
  %178 = load i64, i64* %293, align 8
  %179 = add i64 %178, 1
  store i64 %179, i64* %293, align 8
  br label %180

180:                                              ; preds = %172, %114
  %181 = phi i64 [ %179, %172 ], [ %115, %114 ]
  %182 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 2, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %193, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %181, i32 0
  store i32 4, i32* %188, align 4
  %189 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %181, i32 1
  store i32 %187, i32* %189, align 4
  %190 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %181, i32 2
  store i32 %183, i32* %190, align 4
  %191 = load i64, i64* %293, align 8
  %192 = add i64 %191, 1
  store i64 %192, i64* %293, align 8
  br label %193

193:                                              ; preds = %185, %180
  %194 = phi i64 [ %192, %185 ], [ %181, %180 ]
  %195 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 3, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %206, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 3, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %194, i32 0
  store i32 8, i32* %201, align 4
  %202 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %194, i32 1
  store i32 %200, i32* %202, align 4
  %203 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %194, i32 2
  store i32 %196, i32* %203, align 4
  %204 = load i64, i64* %293, align 8
  %205 = add i64 %204, 1
  store i64 %205, i64* %293, align 8
  br label %206

206:                                              ; preds = %198, %193
  %207 = phi i64 [ %205, %198 ], [ %194, %193 ]
  %208 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 4, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %219, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 4, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %207, i32 0
  store i32 16, i32* %214, align 4
  %215 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %207, i32 1
  store i32 %213, i32* %215, align 4
  %216 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %207, i32 2
  store i32 %209, i32* %216, align 4
  %217 = load i64, i64* %293, align 8
  %218 = add i64 %217, 1
  store i64 %218, i64* %293, align 8
  br label %219

219:                                              ; preds = %211, %206
  %220 = phi i64 [ %218, %211 ], [ %207, %206 ]
  %221 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 5, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %232, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 5, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %220, i32 0
  store i32 32, i32* %227, align 4
  %228 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %220, i32 1
  store i32 %226, i32* %228, align 4
  %229 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 %220, i32 2
  store i32 %222, i32* %229, align 4
  %230 = load i64, i64* %293, align 8
  %231 = add i64 %230, 1
  store i64 %231, i64* %293, align 8
  br label %232

232:                                              ; preds = %224, %219
  %233 = phi i64 [ %231, %224 ], [ %220, %219 ]
  %234 = bitcast %struct.VkPipelineLayoutCreateInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %234) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 0, i64 40, i1 false)
  %235 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %8, i64 0, i32 0
  store i32 30, i32* %235, align 8
  %236 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %8, i64 0, i32 2
  store i32 0, i32* %236, align 8
  %237 = trunc i64 %291 to i32
  %238 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %8, i64 0, i32 3
  store i32 %237, i32* %238, align 4
  %239 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %8, i64 0, i32 4
  store %struct.VkDescriptorSetLayout_T** %90, %struct.VkDescriptorSetLayout_T*** %239, align 8
  %240 = trunc i64 %233 to i32
  %241 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %8, i64 0, i32 5
  store i32 %240, i32* %241, align 8
  %242 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 0, i32 0, i64 0
  %243 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %8, i64 0, i32 6
  store %struct.VkPushConstantRange* %242, %struct.VkPushConstantRange** %243, align 8
  %244 = bitcast %"class.rx::vk::PipelineLayout"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #17
  %245 = getelementptr inbounds %"class.rx::vk::PipelineLayout", %"class.rx::vk::PipelineLayout"* %9, i64 0, i32 0, i32 0
  store %struct.VkPipelineLayout_T* null, %struct.VkPipelineLayout_T** %245, align 8
  %246 = call %struct.VkDevice_T* @_ZNK2rx2vk7Context9getDeviceEv(%"class.rx::vk::Context"* %1) #17
  %247 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)** @vkCreatePipelineLayout, align 8
  %248 = call i32 %247(%struct.VkDevice_T* %246, %struct.VkPipelineLayoutCreateInfo* nonnull %8, %struct.VkAllocationCallbacks* null, %struct.VkPipelineLayout_T** nonnull %245) #17
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %124, label %119, !prof !2

250:                                              ; preds = %103
  %251 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %106, i64 0, i32 1, i32 0, i32 0
  %252 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %251, align 8
  %253 = icmp eq %struct.VkDescriptorSetLayout_T* %252, null
  br i1 %253, label %260, label %254

254:                                              ; preds = %250
  %255 = ptrtoint %struct.VkDescriptorSetLayout_T* %252 to i64
  %256 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %6, i64 0, i32 0, i32 0, i64 %104
  %257 = bitcast %struct.VkDescriptorSetLayout_T** %256 to i64*
  store i64 %255, i64* %257, align 8
  %258 = load i64, i64* %91, align 8
  %259 = add i64 %258, 1
  store i64 %259, i64* %91, align 8
  br label %260

260:                                              ; preds = %254, %250, %103
  %261 = phi i64 [ %259, %254 ], [ %104, %250 ], [ %104, %103 ]
  %262 = getelementptr inbounds %"class.angle::PackedEnumMap.1121", %"class.angle::PackedEnumMap.1121"* %3, i64 0, i32 0, i32 0, i64 2, i32 0
  %263 = load %"class.rx::vk::RefCounted.1124"*, %"class.rx::vk::RefCounted.1124"** %262, align 8
  %264 = icmp eq %"class.rx::vk::RefCounted.1124"* %263, null
  br i1 %264, label %275, label %265

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %263, i64 0, i32 1, i32 0, i32 0
  %267 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %266, align 8
  %268 = icmp eq %struct.VkDescriptorSetLayout_T* %267, null
  br i1 %268, label %275, label %269

269:                                              ; preds = %265
  %270 = ptrtoint %struct.VkDescriptorSetLayout_T* %267 to i64
  %271 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %6, i64 0, i32 0, i32 0, i64 %261
  %272 = bitcast %struct.VkDescriptorSetLayout_T** %271 to i64*
  store i64 %270, i64* %272, align 8
  %273 = load i64, i64* %91, align 8
  %274 = add i64 %273, 1
  store i64 %274, i64* %91, align 8
  br label %275

275:                                              ; preds = %269, %265, %260
  %276 = phi i64 [ %274, %269 ], [ %261, %265 ], [ %261, %260 ]
  %277 = getelementptr inbounds %"class.angle::PackedEnumMap.1121", %"class.angle::PackedEnumMap.1121"* %3, i64 0, i32 0, i32 0, i64 3, i32 0
  %278 = load %"class.rx::vk::RefCounted.1124"*, %"class.rx::vk::RefCounted.1124"** %277, align 8
  %279 = icmp eq %"class.rx::vk::RefCounted.1124"* %278, null
  br i1 %279, label %290, label %280

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %278, i64 0, i32 1, i32 0, i32 0
  %282 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %281, align 8
  %283 = icmp eq %struct.VkDescriptorSetLayout_T* %282, null
  br i1 %283, label %290, label %284

284:                                              ; preds = %280
  %285 = ptrtoint %struct.VkDescriptorSetLayout_T* %282 to i64
  %286 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %6, i64 0, i32 0, i32 0, i64 %276
  %287 = bitcast %struct.VkDescriptorSetLayout_T** %286 to i64*
  store i64 %285, i64* %287, align 8
  %288 = load i64, i64* %91, align 8
  %289 = add i64 %288, 1
  store i64 %289, i64* %91, align 8
  br label %290

290:                                              ; preds = %284, %280, %275
  %291 = phi i64 [ %289, %284 ], [ %276, %280 ], [ %276, %275 ]
  %292 = bitcast %"class.angle::FixedVector.1452"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %292) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %292, i8 -86, i64 72, i1 false)
  %293 = getelementptr inbounds %"class.angle::FixedVector.1452", %"class.angle::FixedVector.1452"* %7, i64 0, i32 1
  store i64 0, i64* %293, align 8
  %294 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1, i32 0, i32 0, i64 0, i32 1
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %114, label %108
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx27SamplerYcbcrConversionCacheC2Ev(%"class.rx::SamplerYcbcrConversionCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx27SamplerYcbcrConversionCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 3
  %7 = bitcast %"class.std::__1::__compressed_pair.925"* %6 to i32*
  %8 = bitcast %"class.std::__1::unordered_map.904"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx27SamplerYcbcrConversionCacheD2Ev(%"class.rx::SamplerYcbcrConversionCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx27SamplerYcbcrConversionCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.909"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.909"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.909"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  %11 = icmp eq %"struct.std::__1::__hash_node_base.909"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.909"** null, %"struct.std::__1::__hash_node_base.909"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.909"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.909"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx27SamplerYcbcrConversionCacheD0Ev(%"class.rx::SamplerYcbcrConversionCache"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx27SamplerYcbcrConversionCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.909"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.909"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.909"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  %11 = icmp eq %"struct.std::__1::__hash_node_base.909"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.909"** null, %"struct.std::__1::__hash_node_base.909"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.909"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.909"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %12, %16
  %19 = bitcast %"class.rx::SamplerYcbcrConversionCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx27SamplerYcbcrConversionCache7destroyEPNS_10RendererVkE(%"class.rx::SamplerYcbcrConversionCache"* nocapture, %"class.rx::RendererVk"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 5, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 5, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 43
  %14 = load %struct.VkDevice_T*, %struct.VkDevice_T** %13, align 8
  %15 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::__hash_node_base.909"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 70, i32 0, i32 0, i32 0, i64 21
  br label %75

21:                                               ; preds = %83, %2
  %22 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %74, label %25

25:                                               ; preds = %21
  %26 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %15, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.909"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25, %28
  %29 = phi %"struct.std::__1::__hash_node_base.909"* [ %31, %28 ], [ %26, %25 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %30, align 8
  %32 = bitcast %"struct.std::__1::__hash_node_base.909"* %29 to i8*
  tail call void @_ZdlPv(i8* %32) #21
  %33 = icmp eq %"struct.std::__1::__hash_node_base.909"* %31, null
  br i1 %33, label %34, label %28

34:                                               ; preds = %28, %25
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %15, align 8
  %35 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = add i64 %36, -1
  %41 = and i64 %36, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = sub i64 %36, %41
  br label %57

45:                                               ; preds = %57, %38
  %46 = phi i64 [ 0, %38 ], [ %71, %57 ]
  %47 = icmp eq i64 %41, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %45, %48
  %49 = phi i64 [ %53, %48 ], [ %46, %45 ]
  %50 = phi i64 [ %54, %48 ], [ %41, %45 ]
  %51 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %39, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %51, i64 %49
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %52, align 8
  %53 = add nuw i64 %49, 1
  %54 = add i64 %50, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %48, !llvm.loop !89

56:                                               ; preds = %45, %48, %34
  store i64 0, i64* %22, align 8
  br label %74

57:                                               ; preds = %57, %43
  %58 = phi i64 [ 0, %43 ], [ %71, %57 ]
  %59 = phi i64 [ %44, %43 ], [ %72, %57 ]
  %60 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %39, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %60, i64 %58
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %61, align 8
  %62 = or i64 %58, 1
  %63 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %39, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %63, i64 %62
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %64, align 8
  %65 = or i64 %58, 2
  %66 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %39, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %66, i64 %65
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %67, align 8
  %68 = or i64 %58, 3
  %69 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %39, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %70, align 8
  %71 = add nuw i64 %58, 4
  %72 = add i64 %59, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %45, label %57

74:                                               ; preds = %21, %56
  ret void

75:                                               ; preds = %19, %83
  %76 = phi i64 [ %17, %19 ], [ %87, %83 ]
  %77 = inttoptr i64 %76 to %"struct.std::__1::__hash_node.1614"*
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node.1614", %"struct.std::__1::__hash_node.1614"* %77, i64 0, i32 2, i32 0, i32 1, i32 1, i32 0, i32 0
  %79 = load %struct.VkSamplerYcbcrConversion_T*, %struct.VkSamplerYcbcrConversion_T** %78, align 8
  %80 = icmp eq %struct.VkSamplerYcbcrConversion_T* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  %82 = load void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)** @vkDestroySamplerYcbcrConversionKHR, align 8
  tail call void %82(%struct.VkDevice_T* %14, %struct.VkSamplerYcbcrConversion_T* nonnull %79, %struct.VkAllocationCallbacks* null) #17
  store %struct.VkSamplerYcbcrConversion_T* null, %struct.VkSamplerYcbcrConversion_T** %78, align 8
  br label %83

83:                                               ; preds = %75, %81
  %84 = load i32, i32* %20, align 4
  %85 = add i32 %84, -1
  store i32 %85, i32* %20, align 4
  %86 = inttoptr i64 %76 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %21, label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx27SamplerYcbcrConversionCache16getYuvConversionEPNS_2vk7ContextEmRK34VkSamplerYcbcrConversionCreateInfoPNS1_14BindingPointerINS1_22SamplerYcbcrConversionEEE(%"class.rx::SamplerYcbcrConversionCache"*, %"class.rx::vk::Context"*, i64, %struct.VkSamplerYcbcrConversionCreateInfo* dereferenceable(64), %"class.rx::vk::BindingPointer"* nocapture) local_unnamed_addr #2 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.rx::vk::SamplerYcbcrConversion", align 8
  %8 = alloca %"class.rx::vk::RefCounted.792", align 8
  store i64 %2, i64* %6, align 8
  %9 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %81, label %13

13:                                               ; preds = %5
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #17, !range !41
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, -1
  %18 = and i64 %17, %2
  br label %23

19:                                               ; preds = %13
  %20 = icmp ugt i64 %11, %2
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %2, %11
  br label %23

23:                                               ; preds = %21, %19, %16
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %2, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::unordered_map.904", %"class.std::__1::unordered_map.904"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.909"* %28, null
  br i1 %29, label %81, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.909"* %32, null
  br i1 %33, label %81, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  br label %36

36:                                               ; preds = %57, %34
  %37 = phi %"struct.std::__1::__hash_node_base.909"* [ %32, %34 ], [ %59, %57 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.909"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %2
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  br i1 %15, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %35
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %11
  br label %49

49:                                               ; preds = %47, %45, %43
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %24
  br i1 %51, label %57, label %81

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %37, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base.909"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, %2
  br i1 %56, label %61, label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %37, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base.909"* %59, null
  br i1 %60, label %81, label %36

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %37, i64 3
  %63 = getelementptr inbounds %"class.rx::vk::BindingPointer", %"class.rx::vk::BindingPointer"* %4, i64 0, i32 0
  %64 = load %"class.rx::vk::RefCounted.792"*, %"class.rx::vk::RefCounted.792"** %63, align 8
  %65 = icmp eq %"class.rx::vk::RefCounted.792"* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.rx::vk::RefCounted.792", %"class.rx::vk::RefCounted.792"* %64, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, -1
  store i32 %69, i32* %67, align 8
  br label %70

70:                                               ; preds = %66, %61
  %71 = bitcast %"class.rx::vk::BindingPointer"* %4 to %"struct.std::__1::__hash_node_base.909"**
  store %"struct.std::__1::__hash_node_base.909"* %62, %"struct.std::__1::__hash_node_base.909"** %71, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.909"* %62, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = bitcast %"struct.std::__1::__hash_node_base.909"* %62 to i32*
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 8
  br label %77

77:                                               ; preds = %70, %73
  %78 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 0, i32 1, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %132

81:                                               ; preds = %49, %57, %23, %5, %30
  %82 = getelementptr inbounds %"class.rx::SamplerYcbcrConversionCache", %"class.rx::SamplerYcbcrConversionCache"* %0, i64 0, i32 0, i32 1, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %82, align 8
  %85 = bitcast %"class.rx::vk::SamplerYcbcrConversion"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #17
  %86 = getelementptr inbounds %"class.rx::vk::SamplerYcbcrConversion", %"class.rx::vk::SamplerYcbcrConversion"* %7, i64 0, i32 0, i32 0
  store %struct.VkSamplerYcbcrConversion_T* null, %struct.VkSamplerYcbcrConversion_T** %86, align 8
  %87 = tail call %struct.VkDevice_T* @_ZNK2rx2vk7Context9getDeviceEv(%"class.rx::vk::Context"* %1) #17
  %88 = load i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)** @vkCreateSamplerYcbcrConversionKHR, align 8
  %89 = call i32 %88(%struct.VkDevice_T* %87, %struct.VkSamplerYcbcrConversionCreateInfo* %3, %struct.VkAllocationCallbacks* null, %struct.VkSamplerYcbcrConversion_T** nonnull %86) #17
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %96, label %91, !prof !2

91:                                               ; preds = %81
  %92 = bitcast %"class.rx::vk::Context"* %1 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %93 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %93, i64 2
  %95 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %94, align 8
  call void %95(%"class.rx::vk::Context"* %1, i32 %89, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN2rx27SamplerYcbcrConversionCache16getYuvConversionEPNS_2vk7ContextEmRK34VkSamplerYcbcrConversionCreateInfoPNS1_14BindingPointerINS1_22SamplerYcbcrConversionEEE, i64 0, i64 0), i32 3893) #17
  br label %130

96:                                               ; preds = %81
  %97 = bitcast %"class.rx::vk::RefCounted.792"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #17
  %98 = getelementptr inbounds %"class.rx::vk::RefCounted.792", %"class.rx::vk::RefCounted.792"* %8, i64 0, i32 0
  store i32 0, i32* %98, align 8
  %99 = getelementptr inbounds %"class.rx::vk::RefCounted.792", %"class.rx::vk::RefCounted.792"* %8, i64 0, i32 1
  %100 = bitcast %"class.rx::vk::SamplerYcbcrConversion"* %7 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.rx::vk::SamplerYcbcrConversion"* %99 to i64*
  store i64 %101, i64* %102, align 8
  store %struct.VkSamplerYcbcrConversion_T* null, %struct.VkSamplerYcbcrConversion_T** %86, align 8
  %103 = getelementptr inbounds %"class.std::__1::unordered_map.904", %"class.std::__1::unordered_map.904"* %9, i64 0, i32 0
  %104 = call { %"struct.std::__1::__hash_node_base.909"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRmS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.905"* %103, i64* nonnull dereferenceable(8) %6, i64* nonnull dereferenceable(8) %6, %"class.rx::vk::RefCounted.792"* nonnull dereferenceable(16) %8) #17
  %105 = extractvalue { %"struct.std::__1::__hash_node_base.909"*, i8 } %104, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #17
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %105, i64 3
  %107 = getelementptr inbounds %"class.rx::vk::BindingPointer", %"class.rx::vk::BindingPointer"* %4, i64 0, i32 0
  %108 = load %"class.rx::vk::RefCounted.792"*, %"class.rx::vk::RefCounted.792"** %107, align 8
  %109 = icmp eq %"class.rx::vk::RefCounted.792"* %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %96
  %111 = getelementptr inbounds %"class.rx::vk::RefCounted.792", %"class.rx::vk::RefCounted.792"* %108, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, -1
  store i32 %113, i32* %111, align 8
  br label %114

114:                                              ; preds = %110, %96
  %115 = bitcast %"class.rx::vk::BindingPointer"* %4 to %"struct.std::__1::__hash_node_base.909"**
  store %"struct.std::__1::__hash_node_base.909"* %106, %"struct.std::__1::__hash_node_base.909"** %115, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.909"* %106, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = bitcast %"struct.std::__1::__hash_node_base.909"* %106 to i32*
  %119 = load i32, i32* %118, align 8
  %120 = add i32 %119, 1
  store i32 %120, i32* %118, align 8
  br label %121

121:                                              ; preds = %114, %117
  %122 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %1, i64 0, i32 1
  %123 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %122, align 8
  %124 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %123, i64 0, i32 70, i32 0, i32 0, i32 0, i64 21
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %124, align 4
  %127 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %123, i64 0, i32 70, i32 1, i32 0, i32 0, i64 21
  %128 = load i32, i32* %127, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %127, align 4
  br label %130

130:                                              ; preds = %91, %121
  %131 = phi i32 [ 0, %121 ], [ 1, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #17
  br label %132

132:                                              ; preds = %130, %77
  %133 = phi i32 [ 0, %77 ], [ %131, %130 ]
  ret i32 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx12SamplerCacheC2Ev(%"class.rx::SamplerCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx12SamplerCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 3
  %7 = bitcast %"class.std::__1::__compressed_pair.898"* %6 to i32*
  %8 = bitcast %"class.std::__1::unordered_map"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx12SamplerCacheD2Ev(%"class.rx::SamplerCache"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx12SamplerCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %13, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx12SamplerCacheD0Ev(%"class.rx::SamplerCache"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx12SamplerCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %13, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %12, %16
  %19 = bitcast %"class.rx::SamplerCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx12SamplerCache7destroyEPNS_10RendererVkE(%"class.rx::SamplerCache"* nocapture, %"class.rx::RendererVk"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 4, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 4, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 43
  %14 = load %struct.VkDevice_T*, %struct.VkDevice_T** %13, align 8
  %15 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 70, i32 0, i32 0, i32 0, i64 20
  br label %75

21:                                               ; preds = %83, %2
  %22 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %74, label %25

25:                                               ; preds = %21
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %15, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25, %28
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %28 ], [ %26, %25 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = bitcast %"struct.std::__1::__hash_node_base"* %29 to i8*
  tail call void @_ZdlPv(i8* %32) #21
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %33, label %34, label %28

34:                                               ; preds = %28, %25
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %15, align 8
  %35 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = add i64 %36, -1
  %41 = and i64 %36, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = sub i64 %36, %41
  br label %57

45:                                               ; preds = %57, %38
  %46 = phi i64 [ 0, %38 ], [ %71, %57 ]
  %47 = icmp eq i64 %41, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %45, %48
  %49 = phi i64 [ %53, %48 ], [ %46, %45 ]
  %50 = phi i64 [ %54, %48 ], [ %41, %45 ]
  %51 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %39, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, i64 %49
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %52, align 8
  %53 = add nuw i64 %49, 1
  %54 = add i64 %50, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %48, !llvm.loop !90

56:                                               ; preds = %45, %48, %34
  store i64 0, i64* %22, align 8
  br label %74

57:                                               ; preds = %57, %43
  %58 = phi i64 [ 0, %43 ], [ %71, %57 ]
  %59 = phi i64 [ %44, %43 ], [ %72, %57 ]
  %60 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %39, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %60, i64 %58
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %61, align 8
  %62 = or i64 %58, 1
  %63 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %39, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, i64 %62
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %64, align 8
  %65 = or i64 %58, 2
  %66 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %39, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, i64 %65
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %68 = or i64 %58, 3
  %69 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %39, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %70, align 8
  %71 = add nuw i64 %58, 4
  %72 = add i64 %59, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %45, label %57

74:                                               ; preds = %21, %56
  ret void

75:                                               ; preds = %19, %83
  %76 = phi i64 [ %17, %19 ], [ %87, %83 ]
  %77 = inttoptr i64 %76 to %"struct.std::__1::__hash_node.1624"*
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node.1624", %"struct.std::__1::__hash_node.1624"* %77, i64 0, i32 2, i32 0, i32 1, i32 2, i32 1, i32 0, i32 0
  %79 = load %struct.VkSampler_T*, %struct.VkSampler_T** %78, align 8
  %80 = icmp eq %struct.VkSampler_T* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  %82 = load void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)** @vkDestroySampler, align 8
  tail call void %82(%struct.VkDevice_T* %14, %struct.VkSampler_T* nonnull %79, %struct.VkAllocationCallbacks* null) #17
  store %struct.VkSampler_T* null, %struct.VkSampler_T** %78, align 8
  br label %83

83:                                               ; preds = %75, %81
  %84 = load i32, i32* %20, align 4
  %85 = add i32 %84, -1
  store i32 %85, i32* %20, align 4
  %86 = inttoptr i64 %76 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %21, label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx12SamplerCache10getSamplerEPNS_9ContextVkERKNS_2vk11SamplerDescEPNS3_14BindingPointerINS3_13SamplerHelperEEE(%"class.rx::SamplerCache"*, %"class.rx::ContextVk"*, %"class.rx::vk::SamplerDesc"* dereferenceable(48), %"class.rx::vk::BindingPointer.1467"* nocapture) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.rx::vk::SamplerHelper", align 8
  %6 = alloca %"class.rx::vk::RefCounted.1466", align 8
  %7 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1
  %8 = bitcast %"class.rx::vk::SamplerDesc"* %2 to i8*
  %9 = tail call i64 @XXH64(i8* %8, i64 48, i64 2882400152) #17
  %10 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %81, label %13

13:                                               ; preds = %4
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #17, !range !41
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, -1
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ult i64 %9, %11
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %21, %19, %16
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %81, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %81, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  br label %36

36:                                               ; preds = %57, %34
  %37 = phi %"struct.std::__1::__hash_node_base"* [ %32, %34 ], [ %59, %57 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  br i1 %15, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %35
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %11
  br label %49

49:                                               ; preds = %47, %45, %43
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %24
  br i1 %51, label %57, label %81

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %53 to i8*
  %55 = tail call i32 @bcmp(i8* %54, i8* %8, i64 48) #17
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base"* %59, null
  br i1 %60, label %81, label %36

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 8
  %63 = getelementptr inbounds %"class.rx::vk::BindingPointer.1467", %"class.rx::vk::BindingPointer.1467"* %3, i64 0, i32 0
  %64 = load %"class.rx::vk::RefCounted.1466"*, %"class.rx::vk::RefCounted.1466"** %63, align 8
  %65 = icmp eq %"class.rx::vk::RefCounted.1466"* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.rx::vk::RefCounted.1466", %"class.rx::vk::RefCounted.1466"* %64, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, -1
  store i32 %69, i32* %67, align 8
  br label %70

70:                                               ; preds = %66, %61
  %71 = bitcast %"class.rx::vk::BindingPointer.1467"* %3 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %62, %"struct.std::__1::__hash_node_base"** %71, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base"* %62, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i32*
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 8
  br label %77

77:                                               ; preds = %70, %73
  %78 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 0, i32 1, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %133

81:                                               ; preds = %49, %57, %23, %4, %30
  %82 = getelementptr inbounds %"class.rx::SamplerCache", %"class.rx::SamplerCache"* %0, i64 0, i32 0, i32 1, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %82, align 8
  %85 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #17
  %86 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %5, i64 0, i32 1, i32 0, i32 0
  %87 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %5, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 24, i1 false)
  store %struct.VkSampler_T* null, %struct.VkSampler_T** %86, align 8
  %88 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %89 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %88, align 8
  %90 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %89, i64 0, i32 71
  %91 = tail call i32 @_ZN2rx2vk21ResourceSerialFactory21generateSamplerSerialEv(%"class.rx::vk::ResourceSerialFactory"* %90) #17
  store i32 %91, i32* %87, align 8
  %92 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %5, i64 0, i32 1
  %93 = call i32 @_ZNK2rx2vk11SamplerDesc4initEPNS_9ContextVkEPNS0_7SamplerE(%"class.rx::vk::SamplerDesc"* %2, %"class.rx::ContextVk"* %1, %"class.rx::vk::Sampler"* %92)
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %131, label %95

95:                                               ; preds = %81
  %96 = bitcast %"class.rx::vk::RefCounted.1466"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #17
  %97 = getelementptr inbounds %"class.rx::vk::RefCounted.1466", %"class.rx::vk::RefCounted.1466"* %6, i64 0, i32 0
  %98 = getelementptr inbounds %"class.rx::vk::RefCounted.1466", %"class.rx::vk::RefCounted.1466"* %6, i64 0, i32 2, i32 2, i32 0
  %99 = bitcast %"class.rx::vk::RefCounted.1466"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 32, i1 false)
  store i32 0, i32* %97, align 8
  %100 = getelementptr inbounds %"class.rx::vk::RefCounted.1466", %"class.rx::vk::RefCounted.1466"* %6, i64 0, i32 2, i32 1
  %101 = bitcast %"class.rx::vk::Sampler"* %100 to i64*
  %102 = bitcast %"class.rx::vk::Sampler"* %92 to i64*
  %103 = load i64, i64* %102, align 8
  store i64 %103, i64* %101, align 8
  store i64 0, i64* %102, align 8
  %104 = load i32, i32* %87, align 8
  store i32 %104, i32* %98, align 8
  store i32 0, i32* %87, align 8
  %105 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %7, i64 0, i32 0
  %106 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JRKS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %105, %"class.rx::vk::SamplerDesc"* dereferenceable(48) %2, %"class.rx::vk::SamplerDesc"* dereferenceable(48) %2, %"class.rx::vk::RefCounted.1466"* nonnull dereferenceable(32) %6) #17
  %107 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %106, 0
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 8
  %109 = getelementptr inbounds %"class.rx::vk::BindingPointer.1467", %"class.rx::vk::BindingPointer.1467"* %3, i64 0, i32 0
  %110 = load %"class.rx::vk::RefCounted.1466"*, %"class.rx::vk::RefCounted.1466"** %109, align 8
  %111 = icmp eq %"class.rx::vk::RefCounted.1466"* %110, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %95
  %113 = getelementptr inbounds %"class.rx::vk::RefCounted.1466", %"class.rx::vk::RefCounted.1466"* %110, i64 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = add i32 %114, -1
  store i32 %115, i32* %113, align 8
  br label %116

116:                                              ; preds = %112, %95
  %117 = bitcast %"class.rx::vk::BindingPointer.1467"* %3 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %108, %"struct.std::__1::__hash_node_base"** %117, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i32*
  %121 = load i32, i32* %120, align 8
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 8
  br label %123

123:                                              ; preds = %116, %119
  %124 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %88, align 8
  %125 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %124, i64 0, i32 70, i32 0, i32 0, i32 0, i64 20
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %124, i64 0, i32 70, i32 1, i32 0, i32 0, i64 20
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #17
  br label %131

131:                                              ; preds = %81, %123
  %132 = phi i32 [ 0, %123 ], [ 1, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #17
  br label %133

133:                                              ; preds = %131, %77
  %134 = phi i32 [ 0, %77 ], [ %132, %131 ]
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx32DriverUniformsDescriptorSetCache7destroyEPNS_10RendererVkE(%"class.rx::DriverUniformsDescriptorSetCache"* nocapture, %"class.rx::RendererVk"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::DriverUniformsDescriptorSetCache", %"class.rx::DriverUniformsDescriptorSetCache"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 7, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.rx::DriverUniformsDescriptorSetCache", %"class.rx::DriverUniformsDescriptorSetCache"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 7, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  store i64 %13, i64* %11, align 8
  %14 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #17
  %15 = getelementptr inbounds %"class.rx::DriverUniformsDescriptorSetCache", %"class.rx::DriverUniformsDescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.angle::BitSetT.128"*, %"class.angle::BitSetT.128"** %15, align 8
  %17 = getelementptr inbounds %"class.rx::DriverUniformsDescriptorSetCache", %"class.rx::DriverUniformsDescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %18 = load %"class.angle::BitSetT.128"*, %"class.angle::BitSetT.128"** %17, align 8
  %19 = icmp eq %"class.angle::BitSetT.128"* %16, %18
  br i1 %19, label %28, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.angle::BitSetT.128"* %16 to i8*
  %22 = ptrtoint %"class.angle::BitSetT.128"* %16 to i64
  %23 = getelementptr %"class.angle::BitSetT.128", %"class.angle::BitSetT.128"* %18, i64 -1, i32 0
  %24 = ptrtoint i64* %23 to i64
  %25 = sub i64 8, %22
  %26 = add i64 %25, %24
  %27 = and i64 %26, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 %27, i1 false) #17
  br label %28

28:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #12

declare i32 @_ZN2rx2vk23GetVkFormatFromFormatIDEN5angle8FormatIDE(i32) local_unnamed_addr #7

declare i64 @XXH64(i8*, i64, i64) local_unnamed_addr #7

declare i32 @_ZN2rx2vk33ConvertImageLayoutToVkImageLayoutENS0_11ImageLayoutE(i32) local_unnamed_addr #7

declare i32 @_ZN2rx15ConvertToLinearEN5angle8FormatIDE(i32) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #0

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle10FastVectorINS_11FixedVectorI22VkAttachmentReference2Lm18ENSt3__15arrayIS2_Lm18EEEEELm2ENS4_IS6_Lm2EEEE15ensure_capacityEm(%"class.angle::FastVector.1523"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %6, label %82

6:                                                ; preds = %2
  %7 = icmp ugt i64 %4, 2
  %8 = select i1 %7, i64 %4, i64 2
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi i64 [ %8, %6 ], [ %12, %9 ]
  %11 = icmp ult i64 %10, %1
  %12 = shl i64 %10, 1
  br i1 %11, label %9, label %13

13:                                               ; preds = %9
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %10, i64 584)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %16, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = or i1 %15, %18
  %20 = extractvalue { i64, i1 } %17, 0
  %21 = select i1 %19, i64 -1, i64 %20
  %22 = tail call i8* @_Znam(i64 %21) #21
  %23 = bitcast i8* %22 to i64*
  store i64 %10, i64* %23, align 16
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to %"class.angle::FixedVector.1525"*
  %26 = icmp eq i64 %10, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %25, i64 %10
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi %"class.angle::FixedVector.1525"* [ %25, %27 ], [ %32, %29 ]
  %31 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %30, i64 0, i32 1
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %30, i64 1
  %33 = icmp eq %"class.angle::FixedVector.1525"* %32, %28
  br i1 %33, label %34, label %29

34:                                               ; preds = %29, %13
  %35 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %0, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %0, i64 0, i32 1
  %40 = load %"class.angle::FixedVector.1525"*, %"class.angle::FixedVector.1525"** %39, align 8
  %41 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %40, i64 %36
  br label %42

42:                                               ; preds = %38, %42
  %43 = phi %"class.angle::FixedVector.1525"* [ %48, %42 ], [ %25, %38 ]
  %44 = phi %"class.angle::FixedVector.1525"* [ %47, %42 ], [ %40, %38 ]
  %45 = bitcast %"class.angle::FixedVector.1525"* %43 to i8*
  %46 = bitcast %"class.angle::FixedVector.1525"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 584, i1 false) #17
  %47 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %44, i64 1
  %48 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %43, i64 1
  %49 = icmp eq %"class.angle::FixedVector.1525"* %47, %41
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %34
  %51 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %0, i64 0, i32 1
  %52 = load %"class.angle::FixedVector.1525"*, %"class.angle::FixedVector.1525"** %51, align 8
  %53 = getelementptr inbounds %"class.angle::FastVector.1523", %"class.angle::FastVector.1523"* %0, i64 0, i32 0, i32 0, i64 0
  %54 = icmp eq %"class.angle::FixedVector.1525"* %52, %53
  %55 = icmp eq %"class.angle::FixedVector.1525"* %52, null
  %56 = or i1 %54, %55
  br i1 %56, label %80, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %52, i64 -1, i32 1
  %59 = bitcast i64* %58 to i8*
  %60 = load i64, i64* %58, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %52, i64 %60
  br label %64

64:                                               ; preds = %62, %77
  %65 = phi %"class.angle::FixedVector.1525"* [ %66, %77 ], [ %63, %62 ]
  %66 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %65, i64 -1
  %67 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %65, i64 -1, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %64, %70
  %71 = phi i64 [ %75, %70 ], [ %68, %64 ]
  %72 = add i64 %71, -1
  store i64 %72, i64* %67, align 8
  %73 = getelementptr inbounds %"class.angle::FixedVector.1525", %"class.angle::FixedVector.1525"* %65, i64 -1, i32 0, i32 0, i64 %72
  %74 = bitcast %struct.VkAttachmentReference2* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 32, i1 false) #17
  %75 = load i64, i64* %67, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %70

77:                                               ; preds = %70, %64
  %78 = icmp eq %"class.angle::FixedVector.1525"* %66, %52
  br i1 %78, label %79, label %64

79:                                               ; preds = %77, %57
  tail call void @_ZdaPv(i8* %59) #21
  br label %80

80:                                               ; preds = %79, %50
  %81 = bitcast %"class.angle::FixedVector.1525"** %51 to i8**
  store i8* %24, i8** %81, align 8
  store i64 %10, i64* %3, align 8
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle10FastVectorINS_11FixedVectorI22VkAttachmentReference2Lm8ENSt3__15arrayIS2_Lm8EEEEELm2ENS4_IS6_Lm2EEEE15ensure_capacityEm(%"class.angle::FastVector.1527"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %6, label %82

6:                                                ; preds = %2
  %7 = icmp ugt i64 %4, 2
  %8 = select i1 %7, i64 %4, i64 2
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi i64 [ %8, %6 ], [ %12, %9 ]
  %11 = icmp ult i64 %10, %1
  %12 = shl i64 %10, 1
  br i1 %11, label %9, label %13

13:                                               ; preds = %9
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %10, i64 264)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %16, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = or i1 %15, %18
  %20 = extractvalue { i64, i1 } %17, 0
  %21 = select i1 %19, i64 -1, i64 %20
  %22 = tail call i8* @_Znam(i64 %21) #21
  %23 = bitcast i8* %22 to i64*
  store i64 %10, i64* %23, align 16
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to %"class.angle::FixedVector.1529"*
  %26 = icmp eq i64 %10, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %25, i64 %10
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi %"class.angle::FixedVector.1529"* [ %25, %27 ], [ %32, %29 ]
  %31 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %30, i64 0, i32 1
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %30, i64 1
  %33 = icmp eq %"class.angle::FixedVector.1529"* %32, %28
  br i1 %33, label %34, label %29

34:                                               ; preds = %29, %13
  %35 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %0, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %0, i64 0, i32 1
  %40 = load %"class.angle::FixedVector.1529"*, %"class.angle::FixedVector.1529"** %39, align 8
  %41 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %40, i64 %36
  br label %42

42:                                               ; preds = %38, %42
  %43 = phi %"class.angle::FixedVector.1529"* [ %48, %42 ], [ %25, %38 ]
  %44 = phi %"class.angle::FixedVector.1529"* [ %47, %42 ], [ %40, %38 ]
  %45 = bitcast %"class.angle::FixedVector.1529"* %43 to i8*
  %46 = bitcast %"class.angle::FixedVector.1529"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 264, i1 false) #17
  %47 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %44, i64 1
  %48 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %43, i64 1
  %49 = icmp eq %"class.angle::FixedVector.1529"* %47, %41
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %34
  %51 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %0, i64 0, i32 1
  %52 = load %"class.angle::FixedVector.1529"*, %"class.angle::FixedVector.1529"** %51, align 8
  %53 = getelementptr inbounds %"class.angle::FastVector.1527", %"class.angle::FastVector.1527"* %0, i64 0, i32 0, i32 0, i64 0
  %54 = icmp eq %"class.angle::FixedVector.1529"* %52, %53
  %55 = icmp eq %"class.angle::FixedVector.1529"* %52, null
  %56 = or i1 %54, %55
  br i1 %56, label %80, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %52, i64 -1, i32 1
  %59 = bitcast i64* %58 to i8*
  %60 = load i64, i64* %58, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %52, i64 %60
  br label %64

64:                                               ; preds = %62, %77
  %65 = phi %"class.angle::FixedVector.1529"* [ %66, %77 ], [ %63, %62 ]
  %66 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %65, i64 -1
  %67 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %65, i64 -1, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %64, %70
  %71 = phi i64 [ %75, %70 ], [ %68, %64 ]
  %72 = add i64 %71, -1
  store i64 %72, i64* %67, align 8
  %73 = getelementptr inbounds %"class.angle::FixedVector.1529", %"class.angle::FixedVector.1529"* %65, i64 -1, i32 0, i32 0, i64 %72
  %74 = bitcast %struct.VkAttachmentReference2* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 32, i1 false) #17
  %75 = load i64, i64* %67, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %70

77:                                               ; preds = %70, %64
  %78 = icmp eq %"class.angle::FixedVector.1529"* %66, %52
  br i1 %78, label %79, label %64

79:                                               ; preds = %77, %57
  tail call void @_ZdaPv(i8* %59) #21
  br label %80

80:                                               ; preds = %79, %50
  %81 = bitcast %"class.angle::FixedVector.1529"** %51 to i8**
  store i8* %24, i8** %81, align 8
  store i64 %10, i64* %3, align 8
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #12

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #16

; Function Attrs: nounwind
declare void @llvm.assume(i1) #17

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.1202"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %1, i64 0, i32 0
  %5 = tail call i64 @XXH64(i8* %4, i64 12, i64 2882400152) #17
  %6 = add i64 %5, %3
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 1
  br label %25

25:                                               ; preds = %55, %2
  %26 = phi i64 [ %19, %2 ], [ %57, %55 ]
  %27 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %24, align 8
  br label %38

38:                                               ; preds = %35, %47
  %39 = phi i32 [ %36, %35 ], [ %49, %47 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #17, !range !3
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %37, i64 %43, i32 0, i32 0, i32 0
  %45 = tail call i32 @bcmp(i8* %44, i8* %4, i64 12) #17
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %60, label %47, !prof !2

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %58, !prof !5

55:                                               ; preds = %51
  %56 = add i64 %27, 16
  %57 = add i64 %56, %28
  br label %25

58:                                               ; preds = %51
  %59 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.1202"* %0, i64 %11)
  br label %60

60:                                               ; preds = %38, %58
  %61 = phi i64 [ %59, %58 ], [ %43, %38 ]
  %62 = phi i8 [ 1, %58 ], [ 0, %38 ]
  %63 = insertvalue { i64, i8 } undef, i64 %61, 0
  %64 = insertvalue { i64, i8 } %63, i8 %62, 1
  ret { i64, i8 } %64
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.1202"*, i64) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #17, !range !3
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !2

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.1202"* %0, i64 1) #17
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.1202"* %0) #17
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.1202"* %0, i64 %58) #17
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #17, !range !3
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.1202"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 56
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #21
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.1203"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %118, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %114
  br i1 %24, label %118, label %117

28:                                               ; preds = %25, %114
  %29 = phi i64 [ 0, %25 ], [ %115, %114 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %114

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %6, i64 %29, i32 0, i32 0, i32 0
  %35 = tail call i64 @XXH64(i8* %34, i64 12, i64 2882400152) #17
  %36 = add i64 %35, %26
  %37 = zext i64 %36 to i128
  %38 = mul nuw i128 %37, 11376068507788127593
  %39 = lshr i128 %38, 64
  %40 = xor i128 %39, %38
  %41 = trunc i128 %40 to i64
  %42 = load i8*, i8** %3, align 8
  %43 = load i64, i64* %7, align 8
  %44 = lshr i64 %41, 7
  %45 = ptrtoint i8* %42 to i64
  %46 = lshr i64 %45, 12
  %47 = xor i64 %44, %46
  %48 = and i64 %47, %43
  %49 = getelementptr inbounds i8, i8* %42, i64 %48
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = icmp slt <16 x i8> %51, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %33, %55
  %56 = phi i64 [ %60, %55 ], [ %48, %33 ]
  %57 = phi i64 [ %58, %55 ], [ 0, %33 ]
  %58 = add i64 %57, 16
  %59 = add i64 %58, %56
  %60 = and i64 %59, %43
  %61 = getelementptr inbounds i8, i8* %42, i64 %60
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1
  %64 = icmp slt <16 x i8> %63, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %55, label %67

67:                                               ; preds = %55, %33
  %68 = phi i64 [ %48, %33 ], [ %60, %55 ]
  %69 = phi i16 [ %53, %33 ], [ %65, %55 ]
  %70 = zext i16 %69 to i32
  %71 = tail call i32 @llvm.cttz.i32(i32 %70, i1 false) #17, !range !3
  %72 = zext i32 %71 to i64
  %73 = add i64 %68, %72
  %74 = and i64 %73, %43
  %75 = trunc i128 %40 to i8
  %76 = and i8 %75, 127
  %77 = getelementptr inbounds i8, i8* %42, i64 %74
  store i8 %76, i8* %77, align 1
  %78 = load i8*, i8** %3, align 8
  %79 = add i64 %74, -15
  %80 = load i64, i64* %7, align 8
  %81 = and i64 %79, %80
  %82 = and i64 %80, 15
  %83 = add i64 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  store i8 %76, i8* %84, align 1
  %85 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %5, align 8
  %86 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %85, i64 %74, i32 0, i32 0, i32 1, i32 0
  store i8 0, i8* %86, align 1
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %85, i64 %74, i32 0, i32 0, i32 2, i32 0
  store i8 0, i8* %87, align 1
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %85, i64 %74, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %34, i64 12, i1 false) #17
  %89 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %85, i64 %74, i32 0, i32 1
  %90 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %6, i64 %29, i32 0, i32 1
  %91 = bitcast %"class.absl::flat_hash_map.1418"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 ptrtoint ([16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group to i64), i64* %91, align 8
  %93 = bitcast %"class.absl::flat_hash_map.1418"* %89 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %85, i64 %74, i32 0, i32 1, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %6, i64 %29, i32 0, i32 1, i32 0, i32 0, i32 1
  %96 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  store %"union.absl::container_internal::map_slot_type.1421"* null, %"union.absl::container_internal::map_slot_type.1421"** %95, align 8
  %98 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %85, i64 %74, i32 0, i32 1, i32 0, i32 0, i32 2
  %100 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %6, i64 %29, i32 0, i32 1, i32 0, i32 0, i32 2
  %101 = load i64, i64* %100, align 8
  store i64 0, i64* %100, align 8
  store i64 %101, i64* %99, align 8
  %102 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %85, i64 %74, i32 0, i32 1, i32 0, i32 0, i32 3
  %103 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %6, i64 %29, i32 0, i32 1, i32 0, i32 0, i32 3
  %104 = load i64, i64* %103, align 8
  store i64 0, i64* %103, align 8
  store i64 %104, i64* %102, align 8
  %105 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %6, i64 %29, i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  store i64 0, i64* %105, align 8
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %85, i64 %74, i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %106, i64* %107, align 8
  %108 = load i64, i64* %103, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %67
  %111 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %6, i64 %29, i32 0, i32 1, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  tail call void @_ZdlPv(i8* %112) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %111, align 8
  %113 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 32, i1 false) #17
  br label %114

114:                                              ; preds = %110, %67, %28
  %115 = add nuw i64 %29, 1
  %116 = icmp eq i64 %115, %8
  br i1 %116, label %27, label %28

117:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #21
  br label %118

118:                                              ; preds = %2, %27, %117
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.1202"*) local_unnamed_addr #18 comdat align 2 {
  %2 = alloca [13 x i8], align 1
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #17
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %7)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 -86, i64 13, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 1
  %12 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %21

13:                                               ; preds = %201, %1
  %14 = phi i64 [ 0, %1 ], [ %203, %201 ]
  %15 = lshr i64 %14, 3
  %16 = sub i64 %14, %15
  %17 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1202", %"class.absl::container_internal::raw_hash_set.1202"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %7)
  ret void

21:                                               ; preds = %10, %201
  %22 = phi i64 [ 0, %10 ], [ %203, %201 ]
  %23 = load i8*, i8** %3, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, -2
  br i1 %26, label %27, label %201

27:                                               ; preds = %21
  %28 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %11, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %28, i64 %22, i32 0, i32 0, i32 0
  %30 = tail call i64 @XXH64(i8* %29, i64 12, i64 2882400152) #17
  %31 = add i64 %30, %12
  %32 = zext i64 %31 to i128
  %33 = mul nuw i128 %32, 11376068507788127593
  %34 = lshr i128 %33, 64
  %35 = xor i128 %34, %33
  %36 = trunc i128 %35 to i64
  %37 = load i8*, i8** %3, align 8
  %38 = load i64, i64* %5, align 8
  %39 = lshr i64 %36, 7
  %40 = ptrtoint i8* %37 to i64
  %41 = lshr i64 %40, 12
  %42 = xor i64 %39, %41
  %43 = and i64 %42, %38
  %44 = getelementptr inbounds i8, i8* %37, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp slt <16 x i8> %46, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %27, %50
  %51 = phi i64 [ %55, %50 ], [ %43, %27 ]
  %52 = phi i64 [ %53, %50 ], [ 0, %27 ]
  %53 = add i64 %52, 16
  %54 = add i64 %53, %51
  %55 = and i64 %54, %38
  %56 = getelementptr inbounds i8, i8* %37, i64 %55
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 1
  %59 = icmp slt <16 x i8> %58, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %60 = bitcast <16 x i1> %59 to i16
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %27
  %63 = phi i64 [ %43, %27 ], [ %55, %50 ]
  %64 = phi i16 [ %48, %27 ], [ %60, %50 ]
  %65 = zext i16 %64 to i32
  %66 = tail call i32 @llvm.cttz.i32(i32 %65, i1 false) #17, !range !3
  %67 = zext i32 %66 to i64
  %68 = add i64 %63, %67
  %69 = and i64 %68, %38
  %70 = sub i64 %69, %43
  %71 = sub i64 %22, %43
  %72 = xor i64 %70, %71
  %73 = and i64 %72, %38
  %74 = icmp ult i64 %73, 16
  br i1 %74, label %75, label %86, !prof !2

75:                                               ; preds = %62
  %76 = trunc i128 %35 to i8
  %77 = and i8 %76, 127
  %78 = getelementptr inbounds i8, i8* %37, i64 %22
  store i8 %77, i8* %78, align 1
  %79 = load i8*, i8** %3, align 8
  %80 = add i64 %22, -15
  %81 = load i64, i64* %5, align 8
  %82 = and i64 %81, %80
  %83 = and i64 %81, 15
  %84 = add i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  store i8 %77, i8* %85, align 1
  br label %201

86:                                               ; preds = %62
  %87 = getelementptr inbounds i8, i8* %37, i64 %69
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, -128
  %90 = trunc i128 %35 to i8
  %91 = and i8 %90, 127
  store i8 %91, i8* %87, align 1
  %92 = load i8*, i8** %3, align 8
  %93 = add i64 %69, -15
  %94 = load i64, i64* %5, align 8
  %95 = and i64 %94, %93
  %96 = and i64 %94, 15
  %97 = add i64 %95, %96
  %98 = getelementptr inbounds i8, i8* %92, i64 %97
  store i8 %91, i8* %98, align 1
  %99 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %11, align 8
  br i1 %89, label %100, label %140

100:                                              ; preds = %86
  %101 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %69, i32 0, i32 0, i32 1, i32 0
  store i8 0, i8* %101, align 1
  %102 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %69, i32 0, i32 0, i32 2, i32 0
  store i8 0, i8* %102, align 1
  %103 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %69, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 12, i1 false) #17
  %105 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %69, i32 0, i32 1
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1
  %107 = bitcast %"class.absl::flat_hash_map.1418"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 ptrtoint ([16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group to i64), i64* %107, align 8
  %109 = bitcast %"class.absl::flat_hash_map.1418"* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 1
  %111 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 1
  %112 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  store %"union.absl::container_internal::map_slot_type.1421"* null, %"union.absl::container_internal::map_slot_type.1421"** %111, align 8
  %114 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 2
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 2
  %117 = load i64, i64* %116, align 8
  store i64 0, i64* %116, align 8
  store i64 %117, i64* %115, align 8
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 3
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 3
  %120 = load i64, i64* %119, align 8
  store i64 0, i64* %119, align 8
  store i64 %120, i64* %118, align 8
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  store i64 0, i64* %121, align 8
  %123 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %122, i64* %123, align 8
  %124 = load i64, i64* %119, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %100
  %127 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  tail call void @_ZdlPv(i8* %128) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %127, align 8
  %129 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 32, i1 false) #17
  br label %130

130:                                              ; preds = %100, %126
  %131 = load i8*, i8** %3, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 %22
  store i8 -128, i8* %132, align 1
  %133 = load i8*, i8** %3, align 8
  %134 = add i64 %22, -15
  %135 = load i64, i64* %5, align 8
  %136 = and i64 %135, %134
  %137 = and i64 %135, 15
  %138 = add i64 %136, %137
  %139 = getelementptr inbounds i8, i8* %133, i64 %138
  store i8 -128, i8* %139, align 1
  br label %201

140:                                              ; preds = %86
  %141 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 0, i32 0
  %142 = load i8, i8* %141, align 4
  %143 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 0, i32 2, i32 0
  %146 = load i8, i8* %145, align 2
  %147 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 0, i32 3, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %147, i64 9, i1 false)
  %148 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1
  %149 = bitcast %"class.absl::flat_hash_map.1418"* %148 to i64*
  %150 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 1
  %151 = bitcast %"class.absl::flat_hash_map.1418"* %148 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8
  store i64 ptrtoint ([16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group to i64), i64* %149, align 8
  store %"union.absl::container_internal::map_slot_type.1421"* null, %"union.absl::container_internal::map_slot_type.1421"** %150, align 8
  %153 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 2
  %154 = bitcast i64* %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8
  %156 = bitcast i64* %153 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %156, align 8
  %157 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %99, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %158 = load i64, i64* %157, align 8
  store i64 0, i64* %157, align 8
  %159 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %11, align 8
  %160 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %22, i32 0, i32 0, i32 1, i32 0
  store i8 0, i8* %160, align 1
  %161 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %22, i32 0, i32 0, i32 2, i32 0
  store i8 0, i8* %161, align 1
  %162 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %22, i32 0, i32 0, i32 0
  %163 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %69, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %162, i8* align 4 %163, i64 12, i1 false) #17
  %164 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %22, i32 0, i32 1
  %165 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %69, i32 0, i32 1
  %166 = bitcast %"class.absl::flat_hash_map.1418"* %165 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 ptrtoint ([16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group to i64), i64* %166, align 8
  %168 = bitcast %"class.absl::flat_hash_map.1418"* %164 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 1
  %170 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 1
  %171 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %170 to i64*
  %172 = load i64, i64* %171, align 8
  store %"union.absl::container_internal::map_slot_type.1421"* null, %"union.absl::container_internal::map_slot_type.1421"** %170, align 8
  %173 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %169 to i64*
  store i64 %172, i64* %173, align 8
  %174 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 2
  %175 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 2
  %176 = load i64, i64* %175, align 8
  store i64 0, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  %177 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 3
  %178 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 3
  %179 = load i64, i64* %178, align 8
  store i64 0, i64* %178, align 8
  store i64 %179, i64* %177, align 8
  %180 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %181 = load i64, i64* %180, align 8
  store i64 0, i64* %180, align 8
  %182 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %22, i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %181, i64* %182, align 8
  %183 = load i64, i64* %178, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %140
  %186 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %159, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  tail call void @_ZdlPv(i8* %187) #21
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %186, align 8
  %188 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %170 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 32, i1 false) #17
  br label %189

189:                                              ; preds = %185, %140
  %190 = load %"union.absl::container_internal::map_slot_type.1203"*, %"union.absl::container_internal::map_slot_type.1203"** %11, align 8
  %191 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %190, i64 %69, i32 0, i32 0, i32 1, i32 0
  %192 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %190, i64 %69, i32 0, i32 0, i32 2, i32 0
  %193 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %190, i64 %69, i32 0, i32 0, i32 0
  store i8 %142, i8* %193, align 4
  store i8 %144, i8* %191, align 1
  store i8 %146, i8* %192, align 2
  %194 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %190, i64 %69, i32 0, i32 0, i32 3, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %194, i8* nonnull align 1 %7, i64 9, i1 false)
  %195 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %190, i64 %69, i32 0, i32 1
  %196 = bitcast %"class.absl::flat_hash_map.1418"* %195 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %196, align 8
  %197 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %190, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 2
  %198 = bitcast i64* %197 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %198, align 8
  %199 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1203", %"union.absl::container_internal::map_slot_type.1203"* %190, i64 %69, i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %158, i64* %199, align 8
  %200 = add i64 %22, -1
  br label %201

201:                                              ; preds = %75, %189, %130, %21
  %202 = phi i64 [ %22, %21 ], [ %22, %75 ], [ %22, %130 ], [ %200, %189 ]
  %203 = add i64 %202, 1
  %204 = load i64, i64* %5, align 8
  %205 = icmp eq i64 %203, %204
  br i1 %205, label %13, label %21
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE22find_or_prepare_insertIS5_EENSF_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.1420"*, %"class.rx::vk::AttachmentOpsArray"* dereferenceable(40)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = bitcast %"class.rx::vk::AttachmentOpsArray"* %1 to i8*
  %5 = tail call i64 @XXH64(i8* %4, i64 40, i64 2882400152) #17
  %6 = add i64 %5, %3
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 1
  br label %25

25:                                               ; preds = %56, %2
  %26 = phi i64 [ %19, %2 ], [ %58, %56 ]
  %27 = phi i64 [ 0, %2 ], [ %57, %56 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %24, align 8
  br label %38

38:                                               ; preds = %35, %48
  %39 = phi i32 [ %36, %35 ], [ %50, %48 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #17, !range !3
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %37, i64 %43, i32 0
  %45 = bitcast %"struct.std::__1::pair.1434"* %44 to i8*
  %46 = tail call i32 @bcmp(i8* %45, i8* %4, i64 40) #17
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %61, label %48, !prof !2

48:                                               ; preds = %38
  %49 = add i32 %39, -1
  %50 = and i32 %49, %39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %38

52:                                               ; preds = %48, %25
  %53 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %59, !prof !5

56:                                               ; preds = %52
  %57 = add i64 %27, 16
  %58 = add i64 %57, %28
  br label %25

59:                                               ; preds = %52
  %60 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.1420"* %0, i64 %11)
  br label %61

61:                                               ; preds = %38, %59
  %62 = phi i64 [ %60, %59 ], [ %43, %38 ]
  %63 = phi i8 [ 1, %59 ], [ 0, %38 ]
  %64 = insertvalue { i64, i8 } undef, i64 %62, 0
  %65 = insertvalue { i64, i8 } %64, i8 %63, 1
  ret { i64, i8 } %65
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.1420"*, i64) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #17, !range !3
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !2

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.1420"* %0, i64 1) #17
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.1420"* %0) #17
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.1420"* %0, i64 %58) #17
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #17, !range !3
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.1420"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 72
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #21
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.1421"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %101, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %97
  br i1 %24, label %101, label %100

28:                                               ; preds = %25, %97
  %29 = phi i64 [ 0, %25 ], [ %98, %97 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %97

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %6, i64 %29
  %35 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %34 to i8*
  %36 = tail call i64 @XXH64(i8* %35, i64 40, i64 2882400152) #17
  %37 = add i64 %36, %26
  %38 = zext i64 %37 to i128
  %39 = mul nuw i128 %38, 11376068507788127593
  %40 = lshr i128 %39, 64
  %41 = xor i128 %40, %39
  %42 = trunc i128 %41 to i64
  %43 = load i8*, i8** %3, align 8
  %44 = load i64, i64* %7, align 8
  %45 = lshr i64 %42, 7
  %46 = ptrtoint i8* %43 to i64
  %47 = lshr i64 %46, 12
  %48 = xor i64 %45, %47
  %49 = and i64 %48, %44
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp slt <16 x i8> %52, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %33, %56
  %57 = phi i64 [ %61, %56 ], [ %49, %33 ]
  %58 = phi i64 [ %59, %56 ], [ 0, %33 ]
  %59 = add i64 %58, 16
  %60 = add i64 %59, %57
  %61 = and i64 %60, %44
  %62 = getelementptr inbounds i8, i8* %43, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp slt <16 x i8> %64, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %56, label %68

68:                                               ; preds = %56, %33
  %69 = phi i64 [ %49, %33 ], [ %61, %56 ]
  %70 = phi i16 [ %54, %33 ], [ %66, %56 ]
  %71 = zext i16 %70 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 false) #17, !range !3
  %73 = zext i32 %72 to i64
  %74 = add i64 %69, %73
  %75 = and i64 %74, %44
  %76 = trunc i128 %41 to i8
  %77 = and i8 %76, 127
  %78 = getelementptr inbounds i8, i8* %43, i64 %75
  store i8 %77, i8* %78, align 1
  %79 = load i8*, i8** %3, align 8
  %80 = add i64 %75, -15
  %81 = load i64, i64* %7, align 8
  %82 = and i64 %80, %81
  %83 = and i64 %81, 15
  %84 = add i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  store i8 %77, i8* %85, align 1
  %86 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %5, align 8
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %86, i64 %75
  %88 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %88, i8* align 2 %35, i64 40, i1 false) #17
  %89 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %86, i64 %75, i32 0, i32 1, i32 1
  %90 = getelementptr inbounds %"class.rx::vk::RenderPass", %"class.rx::vk::RenderPass"* %89, i64 0, i32 0, i32 0
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %90, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %6, i64 %29, i32 0, i32 1, i32 1
  %92 = bitcast %"class.rx::vk::RenderPass"* %89 to i64*
  %93 = bitcast %"class.rx::vk::RenderPass"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %92, align 8
  store i64 0, i64* %93, align 8
  %95 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %86, i64 %75, i32 0, i32 1, i32 2, i32 0
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %6, i64 %29, i32 0, i32 1, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 1 %96, i64 13, i1 false) #17
  br label %97

97:                                               ; preds = %28, %68
  %98 = add nuw i64 %29, 1
  %99 = icmp eq i64 %98, %8
  br i1 %99, label %27, label %28

100:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #21
  br label %101

101:                                              ; preds = %2, %27, %100
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.1420"*) local_unnamed_addr #18 comdat align 2 {
  %2 = alloca [48 x i8], align 8
  %3 = alloca %"struct.rx::vk::RenderPassPerfCounters", align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %5, i64 %7) #17
  %8 = getelementptr inbounds [48 x i8], [48 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8)
  %9 = getelementptr inbounds %"struct.rx::vk::RenderPassPerfCounters", %"struct.rx::vk::RenderPassPerfCounters"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %9)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 13, i1 false)
  %10 = load i64, i64* %6, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 1
  %14 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %23

15:                                               ; preds = %152, %1
  %16 = phi i64 [ 0, %1 ], [ %154, %152 ]
  %17 = lshr i64 %16, 3
  %18 = sub i64 %16, %17
  %19 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1420", %"class.absl::container_internal::raw_hash_set.1420"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %21, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %9)
  ret void

23:                                               ; preds = %12, %152
  %24 = phi i64 [ 0, %12 ], [ %154, %152 ]
  %25 = load i8*, i8** %4, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, -2
  br i1 %28, label %29, label %152

29:                                               ; preds = %23
  %30 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %13, align 8
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %30, i64 %24, i32 0
  %32 = bitcast %"struct.std::__1::pair.1434"* %31 to i8*
  %33 = tail call i64 @XXH64(i8* %32, i64 40, i64 2882400152) #17
  %34 = add i64 %33, %14
  %35 = zext i64 %34 to i128
  %36 = mul nuw i128 %35, 11376068507788127593
  %37 = lshr i128 %36, 64
  %38 = xor i128 %37, %36
  %39 = trunc i128 %38 to i64
  %40 = load i8*, i8** %4, align 8
  %41 = load i64, i64* %6, align 8
  %42 = lshr i64 %39, 7
  %43 = ptrtoint i8* %40 to i64
  %44 = lshr i64 %43, 12
  %45 = xor i64 %42, %44
  %46 = and i64 %45, %41
  %47 = getelementptr inbounds i8, i8* %40, i64 %46
  %48 = bitcast i8* %47 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 1
  %50 = icmp slt <16 x i8> %49, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %51 = bitcast <16 x i1> %50 to i16
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %29, %53
  %54 = phi i64 [ %58, %53 ], [ %46, %29 ]
  %55 = phi i64 [ %56, %53 ], [ 0, %29 ]
  %56 = add i64 %55, 16
  %57 = add i64 %56, %54
  %58 = and i64 %57, %41
  %59 = getelementptr inbounds i8, i8* %40, i64 %58
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1
  %62 = icmp slt <16 x i8> %61, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %53, label %65

65:                                               ; preds = %53, %29
  %66 = phi i64 [ %46, %29 ], [ %58, %53 ]
  %67 = phi i16 [ %51, %29 ], [ %63, %53 ]
  %68 = zext i16 %67 to i32
  %69 = tail call i32 @llvm.cttz.i32(i32 %68, i1 false) #17, !range !3
  %70 = zext i32 %69 to i64
  %71 = add i64 %66, %70
  %72 = and i64 %71, %41
  %73 = sub i64 %72, %46
  %74 = sub i64 %24, %46
  %75 = xor i64 %73, %74
  %76 = and i64 %75, %41
  %77 = icmp ult i64 %76, 16
  br i1 %77, label %78, label %89, !prof !2

78:                                               ; preds = %65
  %79 = trunc i128 %38 to i8
  %80 = and i8 %79, 127
  %81 = getelementptr inbounds i8, i8* %40, i64 %24
  store i8 %80, i8* %81, align 1
  %82 = load i8*, i8** %4, align 8
  %83 = add i64 %24, -15
  %84 = load i64, i64* %6, align 8
  %85 = and i64 %84, %83
  %86 = and i64 %84, 15
  %87 = add i64 %85, %86
  %88 = getelementptr inbounds i8, i8* %82, i64 %87
  store i8 %80, i8* %88, align 1
  br label %152

89:                                               ; preds = %65
  %90 = getelementptr inbounds i8, i8* %40, i64 %72
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, -128
  %93 = trunc i128 %38 to i8
  %94 = and i8 %93, 127
  store i8 %94, i8* %90, align 1
  %95 = load i8*, i8** %4, align 8
  %96 = add i64 %72, -15
  %97 = load i64, i64* %6, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %94, i8* %101, align 1
  %102 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %13, align 8
  br i1 %92, label %103, label %125

103:                                              ; preds = %89
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %102, i64 %72
  %105 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %102, i64 %24
  %106 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %104 to i8*
  %107 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %106, i8* align 2 %107, i64 40, i1 false) #17
  %108 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %102, i64 %72, i32 0, i32 1, i32 1
  %109 = getelementptr inbounds %"class.rx::vk::RenderPass", %"class.rx::vk::RenderPass"* %108, i64 0, i32 0, i32 0
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %109, align 8
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %102, i64 %24, i32 0, i32 1, i32 1
  %111 = bitcast %"class.rx::vk::RenderPass"* %108 to i64*
  %112 = bitcast %"class.rx::vk::RenderPass"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store i64 %113, i64* %111, align 8
  store i64 0, i64* %112, align 8
  %114 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %102, i64 %72, i32 0, i32 1, i32 2, i32 0
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %102, i64 %24, i32 0, i32 1, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 1 %115, i64 13, i1 false) #17
  %116 = load i8*, i8** %4, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 %24
  store i8 -128, i8* %117, align 1
  %118 = load i8*, i8** %4, align 8
  %119 = add i64 %24, -15
  %120 = load i64, i64* %6, align 8
  %121 = and i64 %120, %119
  %122 = and i64 %120, 15
  %123 = add i64 %121, %122
  %124 = getelementptr inbounds i8, i8* %118, i64 %123
  store i8 -128, i8* %124, align 1
  br label %152

125:                                              ; preds = %89
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %102, i64 %24
  %127 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 2 %127, i64 40, i1 false)
  %128 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %102, i64 %24, i32 0, i32 1, i32 1
  %129 = bitcast %"class.rx::vk::RenderPass"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  store i64 0, i64* %129, align 8
  %131 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %102, i64 %24, i32 0, i32 1, i32 2, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %131, i64 13, i1 false)
  %132 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %13, align 8
  %133 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %132, i64 %24
  %134 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %132, i64 %72
  %135 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %133 to i8*
  %136 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %135, i8* align 2 %136, i64 40, i1 false) #17
  %137 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %132, i64 %24, i32 0, i32 1, i32 1
  %138 = getelementptr inbounds %"class.rx::vk::RenderPass", %"class.rx::vk::RenderPass"* %137, i64 0, i32 0, i32 0
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %138, align 8
  %139 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %132, i64 %72, i32 0, i32 1, i32 1
  %140 = bitcast %"class.rx::vk::RenderPass"* %137 to i64*
  %141 = bitcast %"class.rx::vk::RenderPass"* %139 to i64*
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* %140, align 8
  store i64 0, i64* %141, align 8
  %143 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %132, i64 %24, i32 0, i32 1, i32 2, i32 0
  %144 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %132, i64 %72, i32 0, i32 1, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 1 %144, i64 13, i1 false) #17
  %145 = load %"union.absl::container_internal::map_slot_type.1421"*, %"union.absl::container_internal::map_slot_type.1421"** %13, align 8
  %146 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %145, i64 %72
  %147 = bitcast %"union.absl::container_internal::map_slot_type.1421"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %147, i8* nonnull align 8 %8, i64 40, i1 false)
  %148 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %145, i64 %72, i32 0, i32 1, i32 1
  %149 = bitcast %"class.rx::vk::RenderPass"* %148 to i64*
  store i64 %130, i64* %149, align 8
  %150 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1421", %"union.absl::container_internal::map_slot_type.1421"* %145, i64 %72, i32 0, i32 1, i32 2, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* nonnull align 8 %9, i64 13, i1 false)
  %151 = add i64 %24, -1
  br label %152

152:                                              ; preds = %78, %125, %103, %23
  %153 = phi i64 [ %24, %23 ], [ %24, %78 ], [ %24, %103 ], [ %151, %125 ]
  %154 = add i64 %153, 1
  %155 = load i64, i64* %6, align 8
  %156 = icmp eq i64 %154, %155
  br i1 %156, label %15, label %23
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.684"*, %"class.rx::vk::GarbageObject"* dereferenceable(16)) local_unnamed_addr #19 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.684", %"class.std::__1::vector.684"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rx::vk::GarbageObject"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.684"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.684"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #22
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.684", %"class.std::__1::vector.684"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.rx::vk::GarbageObject"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #22
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #21
  %33 = bitcast i8* %32 to %"class.rx::vk::GarbageObject"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.rx::vk::GarbageObject"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 %9
  %38 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 %35
  %39 = ptrtoint %"class.rx::vk::GarbageObject"* %38 to i64
  tail call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %37, %"class.rx::vk::GarbageObject"* dereferenceable(16) %1) #17
  %40 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %37, i64 1
  %41 = ptrtoint %"class.rx::vk::GarbageObject"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.684", %"class.std::__1::vector.684"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %42, align 8
  %44 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %3, align 8
  %45 = icmp eq %"class.rx::vk::GarbageObject"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.rx::vk::GarbageObject"* %43 to i64
  br label %56

48:                                               ; preds = %34, %48
  %49 = phi %"class.rx::vk::GarbageObject"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.rx::vk::GarbageObject"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %49, i64 -1
  %52 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %50, i64 -1
  tail call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %51, %"class.rx::vk::GarbageObject"* dereferenceable(16) %52) #17
  %53 = icmp eq %"class.rx::vk::GarbageObject"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  br label %56

56:                                               ; preds = %46, %54
  %57 = phi %"class.rx::vk::GarbageObject"* [ %37, %46 ], [ %51, %54 ]
  %58 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %59 = ptrtoint %"class.rx::vk::GarbageObject"* %57 to i64
  store i64 %59, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %62) #21
  br label %63

63:                                               ; preds = %56, %61
  ret void
}

declare void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"* dereferenceable(16)) unnamed_addr #7

declare void @_ZN2rx2vk13GarbageObjectC1ENS0_10HandleTypeEPNS0_15GarbageHandle_TE(%"class.rx::vk::GarbageObject"*, i32, %"struct.rx::vk::GarbageHandle_T"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1156"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRKS4_NS3_8PipelineEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1152"*, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252), %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252), %"class.rx::vk::Pipeline"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  %6 = tail call i64 @XXH64(i8* %5, i64 252, i64 2882400152) #17
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #17, !range !41
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base.1156"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1156"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.1156"* %50 to i8*
  %52 = tail call i32 @bcmp(i8* %51, i8* %5, i64 252) #17
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %146, label %29

54:                                               ; preds = %29, %46, %20, %4
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %4 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 312) #21, !noalias !91
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %2, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 252, i1 false) #17, !noalias !91
  %59 = getelementptr inbounds i8, i8* %56, i64 272
  %60 = getelementptr inbounds i8, i8* %56, i64 304
  %61 = getelementptr inbounds %"class.rx::vk::Pipeline", %"class.rx::vk::Pipeline"* %3, i64 0, i32 0, i32 0
  %62 = bitcast %"class.rx::vk::Pipeline"* %3 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 32, i1 false) #17, !noalias !91
  %63 = load i64, i64* %62, align 8, !noalias !91
  %64 = bitcast i8* %60 to i64*
  store i64 %63, i64* %64, align 8, !noalias !91
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %61, align 8, !noalias !91
  %65 = getelementptr inbounds i8, i8* %56, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %6, i64* %66, align 8, !noalias !91
  %67 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.1156"**
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %67, align 8, !noalias !91
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %8 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %9, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %54
  %79 = shl i64 %8, 1
  %80 = icmp ult i64 %8, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %8) #17, !range !41
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #17
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1152"* %0, i64 %90)
  %91 = load i64, i64* %7, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #17, !range !41
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, -1
  %96 = and i64 %95, %6
  br label %101

97:                                               ; preds = %78
  %98 = icmp ult i64 %6, %91
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %6, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %54
  %102 = phi i64 [ %8, %54 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %55, %54 ], [ %96, %94 ], [ %6, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.1156"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %56 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.1156"* %110 to i8**
  store i8* %56, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.1156"* %110, %"struct.std::__1::__hash_node_base.1156"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.1156"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #17, !range !41
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.1156"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.1156"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %56 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.1156"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %56, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.1156"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %49, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %49 ]
  %148 = phi %"struct.std::__1::__hash_node_base.1156"* [ %143, %142 ], [ %32, %49 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.1156"*, i8 } undef, %"struct.std::__1::__hash_node_base.1156"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.1156"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.1156"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1152"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !41
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1152"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !41
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !41
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1152"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1152"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %133, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #22
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1152"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1156"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1156"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1158", %"class.std::__1::__bucket_list_deallocator.1158"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !94

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %38, null
  br i1 %39, label %141, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1156"* null, %"struct.std::__1::__hash_node_base.1156"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1156"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !41
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1156"* %36, %"struct.std::__1::__hash_node_base.1156"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %75, null
  br i1 %76, label %141, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %127
  %80 = phi %"struct.std::__1::__hash_node_base.1156"* [ %75, %77 ], [ %131, %127 ]
  %81 = phi i64 [ %71, %77 ], [ %129, %127 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1156"* [ %38, %77 ], [ %128, %127 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1156"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %127, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1156"* %101 to i8*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1156"* %82, %"struct.std::__1::__hash_node_base.1156"** %97, align 8
  br label %127

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1156"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1156"* %110 to i8*
  %112 = tail call i32 @bcmp(i8* %102, i8* %111, i64 252) #17
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %104, label %114

114:                                              ; preds = %104, %109
  %115 = ptrtoint %"struct.std::__1::__hash_node_base.1156"* %107 to i64
  %116 = bitcast %"struct.std::__1::__hash_node_base.1156"* %105 to i64*
  %117 = bitcast %"struct.std::__1::__hash_node_base.1156"* %82 to i64*
  store i64 %115, i64* %117, align 8
  %118 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %118, i64 %93
  %120 = bitcast %"struct.std::__1::__hash_node_base.1156"** %119 to i64**
  %121 = load i64*, i64** %120, align 8
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %116, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %11, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %123, i64 %93
  %125 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %125, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1156"* %80, %"struct.std::__1::__hash_node_base.1156"** %126, align 8
  br label %127

127:                                              ; preds = %92, %114, %103
  %128 = phi %"struct.std::__1::__hash_node_base.1156"* [ %80, %103 ], [ %82, %114 ], [ %80, %92 ]
  %129 = phi i64 [ %93, %103 ], [ %81, %114 ], [ %81, %92 ]
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1156", %"struct.std::__1::__hash_node_base.1156"* %128, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.1156"*, %"struct.std::__1::__hash_node_base.1156"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.1156"* %131, null
  br i1 %132, label %141, label %79

133:                                              ; preds = %2
  %134 = getelementptr inbounds %"class.std::__1::__hash_table.1152", %"class.std::__1::__hash_table.1152"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.1156"**, %"struct.std::__1::__hash_node_base.1156"*** %134, align 8
  store %"struct.std::__1::__hash_node_base.1156"** null, %"struct.std::__1::__hash_node_base.1156"*** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.1156"** %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = bitcast %"struct.std::__1::__hash_node_base.1156"** %135 to i8*
  tail call void @_ZdlPv(i8* %138) #21
  br label %139

139:                                              ; preds = %133, %137
  %140 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1158", %"class.std::__1::__bucket_list_deallocator.1158"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %140, align 8
  br label %141

141:                                              ; preds = %127, %70, %35, %139
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1350"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JRKS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1346"*, %"class.rx::vk::DescriptorSetLayoutDesc"* dereferenceable(1536), %"class.rx::vk::DescriptorSetLayoutDesc"* dereferenceable(1536), %"class.rx::vk::RefCounted.1124"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  %6 = tail call i64 @XXH64(i8* %5, i64 1536, i64 2882400152) #17
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #17, !range !41
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base.1350"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1350"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.1350"* %50 to i8*
  %52 = tail call i32 @bcmp(i8* %51, i8* %5, i64 1536) #17
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %150, label %29

54:                                               ; preds = %29, %46, %20, %4
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %4 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 1568) #21, !noalias !95
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %2, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 1536, i1 false) #17, !noalias !95
  %59 = getelementptr inbounds i8, i8* %56, i64 1552
  %60 = bitcast i8* %59 to i32*
  %61 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %3, i64 0, i32 0
  %62 = load i32, i32* %61, align 8, !noalias !95
  store i32 %62, i32* %60, align 8, !noalias !95
  %63 = getelementptr inbounds i8, i8* %56, i64 1560
  %64 = getelementptr inbounds %"class.rx::vk::RefCounted.1124", %"class.rx::vk::RefCounted.1124"* %3, i64 0, i32 1
  %65 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayout", %"class.rx::vk::DescriptorSetLayout"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.rx::vk::DescriptorSetLayout"* %64 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !95
  %68 = bitcast i8* %63 to i64*
  store i64 %67, i64* %68, align 8, !noalias !95
  store %struct.VkDescriptorSetLayout_T* null, %struct.VkDescriptorSetLayout_T** %65, align 8, !noalias !95
  store i32 0, i32* %61, align 8, !noalias !95
  %69 = getelementptr inbounds i8, i8* %56, i64 8
  %70 = bitcast i8* %69 to i64*
  store i64 %6, i64* %70, align 8, !noalias !95
  %71 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.1350"**
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %71, align 8, !noalias !95
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  %75 = uitofp i64 %74 to float
  %76 = uitofp i64 %8 to float
  %77 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 3, i32 0, i32 0
  %78 = load float, float* %77, align 4
  %79 = fmul float %78, %76
  %80 = fcmp olt float %79, %75
  %81 = or i1 %9, %80
  br i1 %81, label %82, label %105

82:                                               ; preds = %54
  %83 = shl i64 %8, 1
  %84 = icmp ult i64 %8, 3
  %85 = tail call i64 @llvm.ctpop.i64(i64 %8) #17, !range !41
  %86 = icmp ugt i64 %85, 1
  %87 = or i1 %84, %86
  %88 = zext i1 %87 to i64
  %89 = or i64 %83, %88
  %90 = fdiv float %75, %78
  %91 = tail call float @llvm.ceil.f32(float %90) #17
  %92 = fptoui float %91 to i64
  %93 = icmp ult i64 %89, %92
  %94 = select i1 %93, i64 %92, i64 %89
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.1346"* %0, i64 %94)
  %95 = load i64, i64* %7, align 8
  %96 = tail call i64 @llvm.ctpop.i64(i64 %95) #17, !range !41
  %97 = icmp ugt i64 %96, 1
  br i1 %97, label %101, label %98

98:                                               ; preds = %82
  %99 = add i64 %95, -1
  %100 = and i64 %99, %6
  br label %105

101:                                              ; preds = %82
  %102 = icmp ult i64 %6, %95
  br i1 %102, label %105, label %103

103:                                              ; preds = %101
  %104 = urem i64 %6, %95
  br label %105

105:                                              ; preds = %103, %101, %98, %54
  %106 = phi i64 [ %8, %54 ], [ %95, %98 ], [ %95, %101 ], [ %95, %103 ]
  %107 = phi i64 [ %55, %54 ], [ %100, %98 ], [ %6, %101 ], [ %104, %103 ]
  %108 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %109, i64 %107
  %111 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %111, null
  br i1 %112, label %113, label %139

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 1, i32 0, i32 0
  %115 = bitcast %"struct.std::__1::__hash_node_base.1350"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast i8* %56 to i64*
  store i64 %116, i64* %117, align 8
  %118 = bitcast %"struct.std::__1::__hash_node_base.1350"* %114 to i8**
  store i8* %56, i8** %118, align 8
  store %"struct.std::__1::__hash_node_base.1350"* %114, %"struct.std::__1::__hash_node_base.1350"** %110, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %71, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %119, null
  br i1 %120, label %146, label %121

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %119, i64 1
  %123 = bitcast %"struct.std::__1::__hash_node_base.1350"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = tail call i64 @llvm.ctpop.i64(i64 %106) #17, !range !41
  %126 = icmp ugt i64 %125, 1
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = add i64 %106, -1
  %129 = and i64 %124, %128
  br label %134

130:                                              ; preds = %121
  %131 = icmp ult i64 %124, %106
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = urem i64 %124, %106
  br label %134

134:                                              ; preds = %127, %130, %132
  %135 = phi i64 [ %129, %127 ], [ %133, %132 ], [ %124, %130 ]
  %136 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %108, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %136, i64 %135
  %138 = bitcast %"struct.std::__1::__hash_node_base.1350"** %137 to i8**
  br label %144

139:                                              ; preds = %105
  %140 = bitcast %"struct.std::__1::__hash_node_base.1350"* %111 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast i8* %56 to i64*
  store i64 %141, i64* %142, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.1350"* %111 to i8**
  br label %144

144:                                              ; preds = %134, %139
  %145 = phi i8** [ %143, %139 ], [ %138, %134 ]
  store i8* %56, i8** %145, align 8
  br label %146

146:                                              ; preds = %144, %113
  %147 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.1350"*
  %148 = load i64, i64* %72, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %72, align 8
  br label %150

150:                                              ; preds = %49, %146
  %151 = phi i8 [ 1, %146 ], [ 0, %49 ]
  %152 = phi %"struct.std::__1::__hash_node_base.1350"* [ %147, %146 ], [ %32, %49 ]
  %153 = insertvalue { %"struct.std::__1::__hash_node_base.1350"*, i8 } undef, %"struct.std::__1::__hash_node_base.1350"* %152, 0
  %154 = insertvalue { %"struct.std::__1::__hash_node_base.1350"*, i8 } %153, i8 %151, 1
  ret { %"struct.std::__1::__hash_node_base.1350"*, i8 } %154
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.1346"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !41
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1346"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !41
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !41
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1346"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1346"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %133, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #22
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1346"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1350"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1350"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1352", %"class.std::__1::__bucket_list_deallocator.1352"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !98

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %38, null
  br i1 %39, label %141, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1350"* null, %"struct.std::__1::__hash_node_base.1350"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1350"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !41
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1350"* %36, %"struct.std::__1::__hash_node_base.1350"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %75, null
  br i1 %76, label %141, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %127
  %80 = phi %"struct.std::__1::__hash_node_base.1350"* [ %75, %77 ], [ %131, %127 ]
  %81 = phi i64 [ %71, %77 ], [ %129, %127 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1350"* [ %38, %77 ], [ %128, %127 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1350"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %127, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1350"* %101 to i8*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1350"* %82, %"struct.std::__1::__hash_node_base.1350"** %97, align 8
  br label %127

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1350"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1350"* %110 to i8*
  %112 = tail call i32 @bcmp(i8* %102, i8* %111, i64 1536) #17
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %104, label %114

114:                                              ; preds = %104, %109
  %115 = ptrtoint %"struct.std::__1::__hash_node_base.1350"* %107 to i64
  %116 = bitcast %"struct.std::__1::__hash_node_base.1350"* %105 to i64*
  %117 = bitcast %"struct.std::__1::__hash_node_base.1350"* %82 to i64*
  store i64 %115, i64* %117, align 8
  %118 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %118, i64 %93
  %120 = bitcast %"struct.std::__1::__hash_node_base.1350"** %119 to i64**
  %121 = load i64*, i64** %120, align 8
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %116, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %11, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %123, i64 %93
  %125 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %125, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1350"* %80, %"struct.std::__1::__hash_node_base.1350"** %126, align 8
  br label %127

127:                                              ; preds = %92, %114, %103
  %128 = phi %"struct.std::__1::__hash_node_base.1350"* [ %80, %103 ], [ %82, %114 ], [ %80, %92 ]
  %129 = phi i64 [ %93, %103 ], [ %81, %114 ], [ %81, %92 ]
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1350", %"struct.std::__1::__hash_node_base.1350"* %128, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.1350"*, %"struct.std::__1::__hash_node_base.1350"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.1350"* %131, null
  br i1 %132, label %141, label %79

133:                                              ; preds = %2
  %134 = getelementptr inbounds %"class.std::__1::__hash_table.1346", %"class.std::__1::__hash_table.1346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.1350"**, %"struct.std::__1::__hash_node_base.1350"*** %134, align 8
  store %"struct.std::__1::__hash_node_base.1350"** null, %"struct.std::__1::__hash_node_base.1350"*** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.1350"** %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = bitcast %"struct.std::__1::__hash_node_base.1350"** %135 to i8*
  tail call void @_ZdlPv(i8* %138) #21
  br label %139

139:                                              ; preds = %133, %137
  %140 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1352", %"class.std::__1::__bucket_list_deallocator.1352"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %140, align 8
  br label %141

141:                                              ; preds = %127, %70, %35, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1323"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JRKS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1319"*, %"class.rx::vk::PipelineLayoutDesc"* dereferenceable(6192), %"class.rx::vk::PipelineLayoutDesc"* dereferenceable(6192), %"class.rx::vk::RefCounted.1119"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %1, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  %6 = tail call i64 @XXH64(i8* %5, i64 6192, i64 2882400152) #17
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #17, !range !41
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base.1323"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1323"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.1323"* %50 to i8*
  %52 = tail call i32 @bcmp(i8* %51, i8* %5, i64 6192) #17
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %159, label %29

54:                                               ; preds = %29, %46, %20, %4
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %4 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 6224) #21, !noalias !99
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 1536, i1 false) #17, !noalias !99
  %59 = getelementptr inbounds i8, i8* %56, i64 1552
  %60 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 1536, i1 false) #17, !noalias !99
  %61 = getelementptr inbounds i8, i8* %56, i64 3088
  %62 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 1536, i1 false) #17, !noalias !99
  %63 = getelementptr inbounds i8, i8* %56, i64 4624
  %64 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 1536, i1 false) #17, !noalias !99
  %65 = getelementptr inbounds i8, i8* %56, i64 6160
  %66 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %2, i64 0, i32 1
  %67 = bitcast %"class.angle::PackedEnumMap.1413"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %67, i64 48, i1 false) #17, !noalias !99
  %68 = getelementptr inbounds i8, i8* %56, i64 6208
  %69 = bitcast i8* %68 to i32*
  %70 = getelementptr inbounds %"class.rx::vk::RefCounted.1119", %"class.rx::vk::RefCounted.1119"* %3, i64 0, i32 0
  %71 = load i32, i32* %70, align 8, !noalias !99
  store i32 %71, i32* %69, align 8, !noalias !99
  %72 = getelementptr inbounds i8, i8* %56, i64 6216
  %73 = getelementptr inbounds %"class.rx::vk::RefCounted.1119", %"class.rx::vk::RefCounted.1119"* %3, i64 0, i32 1
  %74 = getelementptr inbounds %"class.rx::vk::PipelineLayout", %"class.rx::vk::PipelineLayout"* %73, i64 0, i32 0, i32 0
  %75 = bitcast %"class.rx::vk::PipelineLayout"* %73 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !99
  %77 = bitcast i8* %72 to i64*
  store i64 %76, i64* %77, align 8, !noalias !99
  store %struct.VkPipelineLayout_T* null, %struct.VkPipelineLayout_T** %74, align 8, !noalias !99
  store i32 0, i32* %70, align 8, !noalias !99
  %78 = getelementptr inbounds i8, i8* %56, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %6, i64* %79, align 8, !noalias !99
  %80 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.1323"**
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %80, align 8, !noalias !99
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %8 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %9, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %54
  %92 = shl i64 %8, 1
  %93 = icmp ult i64 %8, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %8) #17, !range !41
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #17
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.1319"* %0, i64 %103)
  %104 = load i64, i64* %7, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #17, !range !41
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %6
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %6, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %6, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %54
  %115 = phi i64 [ %8, %54 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %55, %54 ], [ %109, %107 ], [ %6, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.1323"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %56 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.1323"* %123 to i8**
  store i8* %56, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.1323"* %123, %"struct.std::__1::__hash_node_base.1323"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.1323"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #17, !range !41
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.1323"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.1323"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %56 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.1323"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %56, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.1323"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %49, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %49 ]
  %161 = phi %"struct.std::__1::__hash_node_base.1323"* [ %156, %155 ], [ %32, %49 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.1323"*, i8 } undef, %"struct.std::__1::__hash_node_base.1323"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1323"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.1323"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.1319"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !41
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1319"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !41
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !41
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1319"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1319"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %133, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #22
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1319"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1323"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1323"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1325", %"class.std::__1::__bucket_list_deallocator.1325"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !102

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %38, null
  br i1 %39, label %141, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1323"* null, %"struct.std::__1::__hash_node_base.1323"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1323"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !41
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1323"* %36, %"struct.std::__1::__hash_node_base.1323"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %75, null
  br i1 %76, label %141, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %127
  %80 = phi %"struct.std::__1::__hash_node_base.1323"* [ %75, %77 ], [ %131, %127 ]
  %81 = phi i64 [ %71, %77 ], [ %129, %127 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1323"* [ %38, %77 ], [ %128, %127 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1323"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %127, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1323"* %101 to i8*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1323"* %82, %"struct.std::__1::__hash_node_base.1323"** %97, align 8
  br label %127

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1323"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1323"* %110 to i8*
  %112 = tail call i32 @bcmp(i8* %102, i8* %111, i64 6192) #17
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %104, label %114

114:                                              ; preds = %104, %109
  %115 = ptrtoint %"struct.std::__1::__hash_node_base.1323"* %107 to i64
  %116 = bitcast %"struct.std::__1::__hash_node_base.1323"* %105 to i64*
  %117 = bitcast %"struct.std::__1::__hash_node_base.1323"* %82 to i64*
  store i64 %115, i64* %117, align 8
  %118 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %118, i64 %93
  %120 = bitcast %"struct.std::__1::__hash_node_base.1323"** %119 to i64**
  %121 = load i64*, i64** %120, align 8
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %116, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %11, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %123, i64 %93
  %125 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %125, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1323"* %80, %"struct.std::__1::__hash_node_base.1323"** %126, align 8
  br label %127

127:                                              ; preds = %92, %114, %103
  %128 = phi %"struct.std::__1::__hash_node_base.1323"* [ %80, %103 ], [ %82, %114 ], [ %80, %92 ]
  %129 = phi i64 [ %93, %103 ], [ %81, %114 ], [ %81, %92 ]
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1323", %"struct.std::__1::__hash_node_base.1323"* %128, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.1323"*, %"struct.std::__1::__hash_node_base.1323"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.1323"* %131, null
  br i1 %132, label %141, label %79

133:                                              ; preds = %2
  %134 = getelementptr inbounds %"class.std::__1::__hash_table.1319", %"class.std::__1::__hash_table.1319"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.1323"**, %"struct.std::__1::__hash_node_base.1323"*** %134, align 8
  store %"struct.std::__1::__hash_node_base.1323"** null, %"struct.std::__1::__hash_node_base.1323"*** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.1323"** %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = bitcast %"struct.std::__1::__hash_node_base.1323"** %135 to i8*
  tail call void @_ZdlPv(i8* %138) #21
  br label %139

139:                                              ; preds = %133, %137
  %140 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1325", %"class.std::__1::__bucket_list_deallocator.1325"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %140, align 8
  br label %141

141:                                              ; preds = %127, %70, %35, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.909"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRmS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.905"*, i64* dereferenceable(8), i64* dereferenceable(8), %"class.rx::vk::RefCounted.792"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !41
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.909"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.909"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.909"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.909"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.909"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %5
  br i1 %52, label %150, label %28

53:                                               ; preds = %28, %45, %19, %4
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %4 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 40) #21, !noalias !103
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %2, align 8, !noalias !103
  store i64 %58, i64* %57, align 8, !noalias !103
  %59 = getelementptr inbounds i8, i8* %55, i64 24
  %60 = bitcast i8* %59 to i32*
  %61 = getelementptr inbounds %"class.rx::vk::RefCounted.792", %"class.rx::vk::RefCounted.792"* %3, i64 0, i32 0
  %62 = load i32, i32* %61, align 8, !noalias !103
  store i32 %62, i32* %60, align 8, !noalias !103
  %63 = getelementptr inbounds i8, i8* %55, i64 32
  %64 = getelementptr inbounds %"class.rx::vk::RefCounted.792", %"class.rx::vk::RefCounted.792"* %3, i64 0, i32 1
  %65 = getelementptr inbounds %"class.rx::vk::SamplerYcbcrConversion", %"class.rx::vk::SamplerYcbcrConversion"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.rx::vk::SamplerYcbcrConversion"* %64 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !103
  %68 = bitcast i8* %63 to i64*
  store i64 %67, i64* %68, align 8, !noalias !103
  store %struct.VkSamplerYcbcrConversion_T* null, %struct.VkSamplerYcbcrConversion_T** %65, align 8, !noalias !103
  store i32 0, i32* %61, align 8, !noalias !103
  %69 = getelementptr inbounds i8, i8* %55, i64 8
  %70 = bitcast i8* %69 to i64*
  store i64 %5, i64* %70, align 8, !noalias !103
  %71 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.909"**
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %71, align 8, !noalias !103
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  %75 = uitofp i64 %74 to float
  %76 = uitofp i64 %7 to float
  %77 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 3, i32 0, i32 0
  %78 = load float, float* %77, align 4
  %79 = fmul float %78, %76
  %80 = fcmp olt float %79, %75
  %81 = or i1 %8, %80
  br i1 %81, label %82, label %105

82:                                               ; preds = %53
  %83 = shl i64 %7, 1
  %84 = icmp ult i64 %7, 3
  %85 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !41
  %86 = icmp ugt i64 %85, 1
  %87 = or i1 %84, %86
  %88 = zext i1 %87 to i64
  %89 = or i64 %83, %88
  %90 = fdiv float %75, %78
  %91 = tail call float @llvm.ceil.f32(float %90) #17
  %92 = fptoui float %91 to i64
  %93 = icmp ult i64 %89, %92
  %94 = select i1 %93, i64 %92, i64 %89
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.905"* %0, i64 %94)
  %95 = load i64, i64* %6, align 8
  %96 = tail call i64 @llvm.ctpop.i64(i64 %95) #17, !range !41
  %97 = icmp ugt i64 %96, 1
  br i1 %97, label %101, label %98

98:                                               ; preds = %82
  %99 = add i64 %95, -1
  %100 = and i64 %99, %5
  br label %105

101:                                              ; preds = %82
  %102 = icmp ult i64 %5, %95
  br i1 %102, label %105, label %103

103:                                              ; preds = %101
  %104 = urem i64 %5, %95
  br label %105

105:                                              ; preds = %103, %101, %98, %53
  %106 = phi i64 [ %7, %53 ], [ %95, %98 ], [ %95, %101 ], [ %95, %103 ]
  %107 = phi i64 [ %54, %53 ], [ %100, %98 ], [ %5, %101 ], [ %104, %103 ]
  %108 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %109, i64 %107
  %111 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base.909"* %111, null
  br i1 %112, label %113, label %139

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 1, i32 0, i32 0
  %115 = bitcast %"struct.std::__1::__hash_node_base.909"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast i8* %55 to i64*
  store i64 %116, i64* %117, align 8
  %118 = bitcast %"struct.std::__1::__hash_node_base.909"* %114 to i8**
  store i8* %55, i8** %118, align 8
  store %"struct.std::__1::__hash_node_base.909"* %114, %"struct.std::__1::__hash_node_base.909"** %110, align 8
  %119 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %71, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.909"* %119, null
  br i1 %120, label %146, label %121

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %119, i64 1
  %123 = bitcast %"struct.std::__1::__hash_node_base.909"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = tail call i64 @llvm.ctpop.i64(i64 %106) #17, !range !41
  %126 = icmp ugt i64 %125, 1
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = add i64 %106, -1
  %129 = and i64 %124, %128
  br label %134

130:                                              ; preds = %121
  %131 = icmp ult i64 %124, %106
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = urem i64 %124, %106
  br label %134

134:                                              ; preds = %127, %130, %132
  %135 = phi i64 [ %129, %127 ], [ %133, %132 ], [ %124, %130 ]
  %136 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %108, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %136, i64 %135
  %138 = bitcast %"struct.std::__1::__hash_node_base.909"** %137 to i8**
  br label %144

139:                                              ; preds = %105
  %140 = bitcast %"struct.std::__1::__hash_node_base.909"* %111 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast i8* %55 to i64*
  store i64 %141, i64* %142, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.909"* %111 to i8**
  br label %144

144:                                              ; preds = %134, %139
  %145 = phi i8** [ %143, %139 ], [ %138, %134 ]
  store i8* %55, i8** %145, align 8
  br label %146

146:                                              ; preds = %144, %113
  %147 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.909"*
  %148 = load i64, i64* %72, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %72, align 8
  br label %150

150:                                              ; preds = %48, %146
  %151 = phi i8 [ 1, %146 ], [ 0, %48 ]
  %152 = phi %"struct.std::__1::__hash_node_base.909"* [ %147, %146 ], [ %31, %48 ]
  %153 = insertvalue { %"struct.std::__1::__hash_node_base.909"*, i8 } undef, %"struct.std::__1::__hash_node_base.909"* %152, 0
  %154 = insertvalue { %"struct.std::__1::__hash_node_base.909"*, i8 } %153, i8 %151, 1
  ret { %"struct.std::__1::__hash_node_base.909"*, i8 } %154
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.905"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !41
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.905"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !41
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !41
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.905"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.905"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #22
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.905"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.909"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.909"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.911", %"class.std::__1::__bucket_list_deallocator.911"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !106

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.909"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.909"* null, %"struct.std::__1::__hash_node_base.909"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.909"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !41
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.909"* %36, %"struct.std::__1::__hash_node_base.909"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.909"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.909"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.909"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.909"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.909"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.909"* %101 to i64*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.909"* %82, %"struct.std::__1::__hash_node_base.909"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.909"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.909"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.909"* %110 to i64*
  %112 = load i64, i64* %102, align 8
  %113 = load i64, i64* %111, align 8
  %114 = icmp eq i64 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.909"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.909"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.909"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.909"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.909"* %80, %"struct.std::__1::__hash_node_base.909"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.909"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.909", %"struct.std::__1::__hash_node_base.909"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.909"*, %"struct.std::__1::__hash_node_base.909"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.909"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.905", %"class.std::__1::__hash_table.905"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.909"**, %"struct.std::__1::__hash_node_base.909"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.909"** null, %"struct.std::__1::__hash_node_base.909"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.909"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.909"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #21
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.911", %"class.std::__1::__bucket_list_deallocator.911"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JRKS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.rx::vk::SamplerDesc"* dereferenceable(48), %"class.rx::vk::SamplerDesc"* dereferenceable(48), %"class.rx::vk::RefCounted.1466"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %5 = bitcast %"class.rx::vk::SamplerDesc"* %1 to i8*
  %6 = tail call i64 @XXH64(i8* %5, i64 48, i64 2882400152) #17
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #17, !range !41
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i8*
  %52 = tail call i32 @bcmp(i8* %51, i8* %5, i64 48) #17
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %153, label %29

54:                                               ; preds = %29, %46, %20, %4
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %4 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 96) #21, !noalias !107
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast %"class.rx::vk::SamplerDesc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 48, i1 false) #17, !noalias !107
  %59 = getelementptr inbounds i8, i8* %56, i64 64
  %60 = bitcast i8* %59 to i32*
  %61 = getelementptr inbounds %"class.rx::vk::RefCounted.1466", %"class.rx::vk::RefCounted.1466"* %3, i64 0, i32 0
  %62 = load i32, i32* %61, align 8, !noalias !107
  store i32 %62, i32* %60, align 8, !noalias !107
  %63 = getelementptr inbounds i8, i8* %56, i64 80
  %64 = getelementptr inbounds i8, i8* %56, i64 88
  %65 = bitcast i8* %64 to i32*
  %66 = getelementptr inbounds %"class.rx::vk::RefCounted.1466", %"class.rx::vk::RefCounted.1466"* %3, i64 0, i32 2, i32 1
  %67 = bitcast i8* %63 to i64*
  %68 = bitcast %"class.rx::vk::Sampler"* %66 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !107
  store i64 %69, i64* %67, align 8, !noalias !107
  store i64 0, i64* %68, align 8, !noalias !107
  %70 = getelementptr inbounds %"class.rx::vk::RefCounted.1466", %"class.rx::vk::RefCounted.1466"* %3, i64 0, i32 2, i32 2, i32 0
  %71 = load i32, i32* %70, align 4, !noalias !107
  store i32 %71, i32* %65, align 4, !noalias !107
  store i32 0, i32* %70, align 4, !noalias !107
  store i32 0, i32* %61, align 8, !noalias !107
  %72 = getelementptr inbounds i8, i8* %56, i64 8
  %73 = bitcast i8* %72 to i64*
  store i64 %6, i64* %73, align 8, !noalias !107
  %74 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %74, align 8, !noalias !107
  %75 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 1
  %78 = uitofp i64 %77 to float
  %79 = uitofp i64 %8 to float
  %80 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %81 = load float, float* %80, align 4
  %82 = fmul float %81, %79
  %83 = fcmp olt float %82, %78
  %84 = or i1 %9, %83
  br i1 %84, label %85, label %108

85:                                               ; preds = %54
  %86 = shl i64 %8, 1
  %87 = icmp ult i64 %8, 3
  %88 = tail call i64 @llvm.ctpop.i64(i64 %8) #17, !range !41
  %89 = icmp ugt i64 %88, 1
  %90 = or i1 %87, %89
  %91 = zext i1 %90 to i64
  %92 = or i64 %86, %91
  %93 = fdiv float %78, %81
  %94 = tail call float @llvm.ceil.f32(float %93) #17
  %95 = fptoui float %94 to i64
  %96 = icmp ult i64 %92, %95
  %97 = select i1 %96, i64 %95, i64 %92
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %97)
  %98 = load i64, i64* %7, align 8
  %99 = tail call i64 @llvm.ctpop.i64(i64 %98) #17, !range !41
  %100 = icmp ugt i64 %99, 1
  br i1 %100, label %104, label %101

101:                                              ; preds = %85
  %102 = add i64 %98, -1
  %103 = and i64 %102, %6
  br label %108

104:                                              ; preds = %85
  %105 = icmp ult i64 %6, %98
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = urem i64 %6, %98
  br label %108

108:                                              ; preds = %106, %104, %101, %54
  %109 = phi i64 [ %8, %54 ], [ %98, %101 ], [ %98, %104 ], [ %98, %106 ]
  %110 = phi i64 [ %55, %54 ], [ %103, %101 ], [ %6, %104 ], [ %107, %106 ]
  %111 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %110
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %116, label %142

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8* %56 to i64*
  store i64 %119, i64* %120, align 8
  %121 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i8**
  store i8* %56, i8** %121, align 8
  store %"struct.std::__1::__hash_node_base"* %117, %"struct.std::__1::__hash_node_base"** %113, align 8
  %122 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base"* %122, null
  br i1 %123, label %149, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %122, i64 1
  %126 = bitcast %"struct.std::__1::__hash_node_base"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = tail call i64 @llvm.ctpop.i64(i64 %109) #17, !range !41
  %129 = icmp ugt i64 %128, 1
  br i1 %129, label %133, label %130

130:                                              ; preds = %124
  %131 = add i64 %109, -1
  %132 = and i64 %127, %131
  br label %137

133:                                              ; preds = %124
  %134 = icmp ult i64 %127, %109
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = urem i64 %127, %109
  br label %137

137:                                              ; preds = %130, %133, %135
  %138 = phi i64 [ %132, %130 ], [ %136, %135 ], [ %127, %133 ]
  %139 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %111, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %139, i64 %138
  %141 = bitcast %"struct.std::__1::__hash_node_base"** %140 to i8**
  br label %147

142:                                              ; preds = %108
  %143 = bitcast %"struct.std::__1::__hash_node_base"* %114 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast i8* %56 to i64*
  store i64 %144, i64* %145, align 8
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %114 to i8**
  br label %147

147:                                              ; preds = %137, %142
  %148 = phi i8** [ %146, %142 ], [ %141, %137 ]
  store i8* %56, i8** %148, align 8
  br label %149

149:                                              ; preds = %147, %116
  %150 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"*
  %151 = load i64, i64* %75, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %75, align 8
  br label %153

153:                                              ; preds = %49, %149
  %154 = phi i8 [ 1, %149 ], [ 0, %49 ]
  %155 = phi %"struct.std::__1::__hash_node_base"* [ %150, %149 ], [ %32, %49 ]
  %156 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %155, 0
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %156, i8 %154, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !41
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !41
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !41
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %133, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #22
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !110

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %141, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !41
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %141, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %127
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %131, %127 ]
  %81 = phi i64 [ %71, %77 ], [ %129, %127 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %128, %127 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %127, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i8*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %127

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8*
  %112 = tail call i32 @bcmp(i8* %102, i8* %111, i64 48) #17
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %104, label %114

114:                                              ; preds = %104, %109
  %115 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %115, i64* %117, align 8
  %118 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, i64 %93
  %120 = bitcast %"struct.std::__1::__hash_node_base"** %119 to i64**
  %121 = load i64*, i64** %120, align 8
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %116, align 8
  %123 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %123, i64 %93
  %125 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %125, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %126, align 8
  br label %127

127:                                              ; preds = %92, %114, %103
  %128 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %114 ], [ %80, %92 ]
  %129 = phi i64 [ %93, %103 ], [ %81, %114 ], [ %81, %92 ]
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %128, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base"* %131, null
  br i1 %132, label %141, label %79

133:                                              ; preds = %2
  %134 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %134, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base"** %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = bitcast %"struct.std::__1::__hash_node_base"** %135 to i8*
  tail call void @_ZdlPv(i8* %138) #21
  br label %139

139:                                              ; preds = %133, %137
  %140 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %140, align 8
  br label %141

141:                                              ; preds = %127, %70, %35, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.646"*, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %1, i64 0, i32 1
  %5 = bitcast %"struct.std::__1::array.970"* %4 to i8*
  %6 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = mul nuw nsw i64 %8, 12
  %10 = tail call i64 @XXH64(i8* %5, i64 %9, i64 2882400152) #17
  %11 = add i64 %10, %3
  %12 = zext i64 %11 to i128
  %13 = mul nuw i128 %12, 11376068507788127593
  %14 = lshr i128 %13, 64
  %15 = xor i128 %14, %13
  %16 = trunc i128 %15 to i64
  %17 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %16, 7
  %22 = ptrtoint i8* %18 to i64
  %23 = lshr i64 %22, 12
  %24 = xor i64 %21, %23
  %25 = trunc i128 %15 to i8
  %26 = and i8 %25, 127
  %27 = insertelement <16 x i8> undef, i8 %26, i32 0
  %28 = shufflevector <16 x i8> %27, <16 x i8> undef, <16 x i32> zeroinitializer
  %29 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 1
  %30 = load i32, i32* %6, align 4
  %31 = getelementptr inbounds %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::TextureDescriptorDesc"* %1, i64 0, i32 1, i32 0, i64 0
  %32 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %31 to i8*
  %33 = icmp eq i32 %30, 0
  %34 = zext i32 %30 to i64
  %35 = mul nuw nsw i64 %34, 12
  br label %36

36:                                               ; preds = %72, %2
  %37 = phi i64 [ %24, %2 ], [ %74, %72 ]
  %38 = phi i64 [ 0, %2 ], [ %73, %72 ]
  %39 = and i64 %37, %20
  %40 = getelementptr inbounds i8, i8* %18, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %28, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %68, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.647"*, %"union.absl::container_internal::map_slot_type.647"** %29, align 8
  br label %49

49:                                               ; preds = %46, %64
  %50 = phi i32 [ %47, %46 ], [ %66, %64 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #17, !range !3
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %20
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %48, i64 %54, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %30
  br i1 %57, label %58, label %64, !prof !4

58:                                               ; preds = %49
  br i1 %33, label %77, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %48, i64 %54, i32 0, i32 0, i32 1, i32 0, i64 0
  %61 = bitcast %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"* %60 to i8*
  %62 = tail call i32 @bcmp(i8* %61, i8* %32, i64 %35) #17
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %77, label %64, !prof !2

64:                                               ; preds = %49, %59
  %65 = add i32 %50, -1
  %66 = and i32 %65, %50
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %49

68:                                               ; preds = %64, %36
  %69 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %75, !prof !5

72:                                               ; preds = %68
  %73 = add i64 %38, 16
  %74 = add i64 %73, %39
  br label %36

75:                                               ; preds = %68
  %76 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.646"* %0, i64 %16)
  br label %77

77:                                               ; preds = %59, %58, %75
  %78 = phi i64 [ %76, %75 ], [ %54, %58 ], [ %54, %59 ]
  %79 = phi i8 [ 1, %75 ], [ 0, %58 ], [ 0, %59 ]
  %80 = insertvalue { i64, i8 } undef, i64 %78, 0
  %81 = insertvalue { i64, i8 } %80, i8 %79, 1
  ret { i64, i8 } %81
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.646"*, i64) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #17, !range !3
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !2

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.646"* %0, i64 1) #17
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.646"* %0) #17
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.646"* %0, i64 %58) #17
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #17, !range !3
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.646"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.647"*, %"union.absl::container_internal::map_slot_type.647"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 1168
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #21
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.647"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %104, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %100
  br i1 %24, label %104, label %103

28:                                               ; preds = %25, %100
  %29 = phi i64 [ 0, %25 ], [ %101, %100 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %100

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %6, i64 %29, i32 0, i32 0, i32 1
  %36 = bitcast %"struct.std::__1::array.970"* %35 to i8*
  %37 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %34, i64 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = mul nuw nsw i64 %39, 12
  %41 = tail call i64 @XXH64(i8* %36, i64 %40, i64 2882400152) #17
  %42 = add i64 %41, %26
  %43 = zext i64 %42 to i128
  %44 = mul nuw i128 %43, 11376068507788127593
  %45 = lshr i128 %44, 64
  %46 = xor i128 %45, %44
  %47 = trunc i128 %46 to i64
  %48 = load i8*, i8** %3, align 8
  %49 = load i64, i64* %7, align 8
  %50 = lshr i64 %47, 7
  %51 = ptrtoint i8* %48 to i64
  %52 = lshr i64 %51, 12
  %53 = xor i64 %50, %52
  %54 = and i64 %53, %49
  %55 = getelementptr inbounds i8, i8* %48, i64 %54
  %56 = bitcast i8* %55 to <16 x i8>*
  %57 = load <16 x i8>, <16 x i8>* %56, align 1
  %58 = icmp slt <16 x i8> %57, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %33, %61
  %62 = phi i64 [ %66, %61 ], [ %54, %33 ]
  %63 = phi i64 [ %64, %61 ], [ 0, %33 ]
  %64 = add i64 %63, 16
  %65 = add i64 %64, %62
  %66 = and i64 %65, %49
  %67 = getelementptr inbounds i8, i8* %48, i64 %66
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1
  %70 = icmp slt <16 x i8> %69, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %71 = bitcast <16 x i1> %70 to i16
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %61, label %73

73:                                               ; preds = %61, %33
  %74 = phi i64 [ %54, %33 ], [ %66, %61 ]
  %75 = phi i16 [ %59, %33 ], [ %71, %61 ]
  %76 = zext i16 %75 to i32
  %77 = tail call i32 @llvm.cttz.i32(i32 %76, i1 false) #17, !range !3
  %78 = zext i32 %77 to i64
  %79 = add i64 %74, %78
  %80 = and i64 %79, %49
  %81 = trunc i128 %46 to i8
  %82 = and i8 %81, 127
  %83 = getelementptr inbounds i8, i8* %48, i64 %80
  store i8 %82, i8* %83, align 1
  %84 = load i8*, i8** %3, align 8
  %85 = add i64 %80, -15
  %86 = load i64, i64* %7, align 8
  %87 = and i64 %85, %86
  %88 = and i64 %86, 15
  %89 = add i64 %87, %88
  %90 = getelementptr inbounds i8, i8* %84, i64 %89
  store i8 %82, i8* %90, align 1
  %91 = load %"union.absl::container_internal::map_slot_type.647"*, %"union.absl::container_internal::map_slot_type.647"** %5, align 8
  %92 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %91, i64 %80
  %93 = bitcast %"union.absl::container_internal::map_slot_type.647"* %92 to i8*
  %94 = bitcast %"union.absl::container_internal::map_slot_type.647"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 1156, i1 false) #17
  %95 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %91, i64 %80, i32 0, i32 1
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %6, i64 %29, i32 0, i32 1
  %97 = bitcast %struct.VkDescriptorSet_T** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %struct.VkDescriptorSet_T** %95 to i64*
  store i64 %98, i64* %99, align 8
  br label %100

100:                                              ; preds = %28, %73
  %101 = add nuw i64 %29, 1
  %102 = icmp eq i64 %101, %8
  br i1 %102, label %27, label %28

103:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #21
  br label %104

104:                                              ; preds = %2, %27, %103
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.646"*) local_unnamed_addr #18 comdat align 2 {
  %2 = alloca [1160 x i8], align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #17
  %7 = getelementptr inbounds [1160 x i8], [1160 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1160, i8* nonnull %7)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 1160, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 1
  %12 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %21

13:                                               ; preds = %141, %1
  %14 = phi i64 [ 0, %1 ], [ %143, %141 ]
  %15 = lshr i64 %14, 3
  %16 = sub i64 %14, %15
  %17 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.646", %"class.absl::container_internal::raw_hash_set.646"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 1160, i8* nonnull %7)
  ret void

21:                                               ; preds = %10, %141
  %22 = phi i64 [ 0, %10 ], [ %143, %141 ]
  %23 = load i8*, i8** %3, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, -2
  br i1 %26, label %27, label %141

27:                                               ; preds = %21
  %28 = load %"union.absl::container_internal::map_slot_type.647"*, %"union.absl::container_internal::map_slot_type.647"** %11, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %28, i64 %22, i32 0, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::array.970"* %29 to i8*
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %28, i64 %22, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 12
  %35 = tail call i64 @XXH64(i8* %30, i64 %34, i64 2882400152) #17
  %36 = add i64 %35, %12
  %37 = zext i64 %36 to i128
  %38 = mul nuw i128 %37, 11376068507788127593
  %39 = lshr i128 %38, 64
  %40 = xor i128 %39, %38
  %41 = trunc i128 %40 to i64
  %42 = load i8*, i8** %3, align 8
  %43 = load i64, i64* %5, align 8
  %44 = lshr i64 %41, 7
  %45 = ptrtoint i8* %42 to i64
  %46 = lshr i64 %45, 12
  %47 = xor i64 %44, %46
  %48 = and i64 %47, %43
  %49 = getelementptr inbounds i8, i8* %42, i64 %48
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = icmp slt <16 x i8> %51, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %27, %55
  %56 = phi i64 [ %60, %55 ], [ %48, %27 ]
  %57 = phi i64 [ %58, %55 ], [ 0, %27 ]
  %58 = add i64 %57, 16
  %59 = add i64 %58, %56
  %60 = and i64 %59, %43
  %61 = getelementptr inbounds i8, i8* %42, i64 %60
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1
  %64 = icmp slt <16 x i8> %63, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %55, label %67

67:                                               ; preds = %55, %27
  %68 = phi i64 [ %48, %27 ], [ %60, %55 ]
  %69 = phi i16 [ %53, %27 ], [ %65, %55 ]
  %70 = zext i16 %69 to i32
  %71 = tail call i32 @llvm.cttz.i32(i32 %70, i1 false) #17, !range !3
  %72 = zext i32 %71 to i64
  %73 = add i64 %68, %72
  %74 = and i64 %73, %43
  %75 = sub i64 %74, %48
  %76 = sub i64 %22, %48
  %77 = xor i64 %75, %76
  %78 = and i64 %77, %43
  %79 = icmp ult i64 %78, 16
  br i1 %79, label %80, label %91, !prof !2

80:                                               ; preds = %67
  %81 = trunc i128 %40 to i8
  %82 = and i8 %81, 127
  %83 = getelementptr inbounds i8, i8* %42, i64 %22
  store i8 %82, i8* %83, align 1
  %84 = load i8*, i8** %3, align 8
  %85 = add i64 %22, -15
  %86 = load i64, i64* %5, align 8
  %87 = and i64 %86, %85
  %88 = and i64 %86, 15
  %89 = add i64 %87, %88
  %90 = getelementptr inbounds i8, i8* %84, i64 %89
  store i8 %82, i8* %90, align 1
  br label %141

91:                                               ; preds = %67
  %92 = getelementptr inbounds i8, i8* %42, i64 %74
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, -128
  %95 = trunc i128 %40 to i8
  %96 = and i8 %95, 127
  store i8 %96, i8* %92, align 1
  %97 = load i8*, i8** %3, align 8
  %98 = add i64 %74, -15
  %99 = load i64, i64* %5, align 8
  %100 = and i64 %99, %98
  %101 = and i64 %99, 15
  %102 = add i64 %100, %101
  %103 = getelementptr inbounds i8, i8* %97, i64 %102
  store i8 %96, i8* %103, align 1
  %104 = load %"union.absl::container_internal::map_slot_type.647"*, %"union.absl::container_internal::map_slot_type.647"** %11, align 8
  br i1 %94, label %105, label %124

105:                                              ; preds = %91
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %104, i64 %74
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %104, i64 %22
  %108 = bitcast %"union.absl::container_internal::map_slot_type.647"* %106 to i8*
  %109 = bitcast %"union.absl::container_internal::map_slot_type.647"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 1156, i1 false) #17
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %104, i64 %74, i32 0, i32 1
  %111 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %104, i64 %22, i32 0, i32 1
  %112 = bitcast %struct.VkDescriptorSet_T** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %struct.VkDescriptorSet_T** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = load i8*, i8** %3, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %22
  store i8 -128, i8* %116, align 1
  %117 = load i8*, i8** %3, align 8
  %118 = add i64 %22, -15
  %119 = load i64, i64* %5, align 8
  %120 = and i64 %119, %118
  %121 = and i64 %119, 15
  %122 = add i64 %120, %121
  %123 = getelementptr inbounds i8, i8* %117, i64 %122
  store i8 -128, i8* %123, align 1
  br label %141

124:                                              ; preds = %91
  %125 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %104, i64 %22
  %126 = bitcast %"union.absl::container_internal::map_slot_type.647"* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 4 %126, i64 1156, i1 false)
  %127 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %104, i64 %22, i32 0, i32 1
  %128 = bitcast %struct.VkDescriptorSet_T** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %104, i64 %74
  %131 = bitcast %"union.absl::container_internal::map_slot_type.647"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %131, i64 1156, i1 false) #17
  %132 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %104, i64 %74, i32 0, i32 1
  %133 = bitcast %struct.VkDescriptorSet_T** %132 to i64*
  %134 = load i64, i64* %133, align 8
  store i64 %134, i64* %128, align 8
  %135 = load %"union.absl::container_internal::map_slot_type.647"*, %"union.absl::container_internal::map_slot_type.647"** %11, align 8
  %136 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %135, i64 %74
  %137 = bitcast %"union.absl::container_internal::map_slot_type.647"* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* nonnull align 8 %7, i64 1156, i1 false)
  %138 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.647", %"union.absl::container_internal::map_slot_type.647"* %135, i64 %74, i32 0, i32 1
  %139 = bitcast %struct.VkDescriptorSet_T** %138 to i64*
  store i64 %129, i64* %139, align 8
  %140 = add i64 %22, -1
  br label %141

141:                                              ; preds = %80, %124, %105, %21
  %142 = phi i64 [ %22, %21 ], [ %22, %80 ], [ %22, %105 ], [ %140, %124 ]
  %143 = add i64 %142, 1
  %144 = load i64, i64* %5, align 8
  %145 = icmp eq i64 %143, %144
  br i1 %145, label %13, label %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.978"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_m(%"class.absl::container_internal::raw_hash_set.977"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40), i64) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %2, 7
  %9 = ptrtoint i8* %5 to i64
  %10 = lshr i64 %9, 12
  %11 = xor i64 %10, %8
  %12 = trunc i64 %2 to i8
  %13 = and i8 %12, 127
  %14 = insertelement <16 x i8> undef, i8 %13, i32 0
  %15 = shufflevector <16 x i8> %14, <16 x i8> undef, <16 x i32> zeroinitializer
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 1
  %20 = bitcast %"struct.std::__1::array.990"* %19 to i8*
  %21 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 2
  %22 = bitcast %"struct.std::__1::array.991"* %21 to i8*
  %23 = zext i32 %18 to i64
  %24 = shl nuw nsw i64 %23, 2
  %25 = add nsw i64 %24, -4
  br label %26

26:                                               ; preds = %70, %3
  %27 = phi i64 [ %11, %3 ], [ %72, %70 ]
  %28 = phi i64 [ 0, %3 ], [ %71, %70 ]
  %29 = and i64 %27, %7
  %30 = getelementptr inbounds i8, i8* %5, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %15, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %66, label %36

36:                                               ; preds = %26
  %37 = zext i16 %34 to i32
  %38 = load %"union.absl::container_internal::map_slot_type.978"*, %"union.absl::container_internal::map_slot_type.978"** %16, align 8
  br label %39

39:                                               ; preds = %36, %59
  %40 = phi i32 [ %37, %36 ], [ %61, %59 ]
  %41 = tail call i32 @llvm.cttz.i32(i32 %40, i1 false) #17, !range !3
  %42 = zext i32 %41 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %7
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %38, i64 %44
  %46 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %18
  br i1 %48, label %49, label %59, !prof !4

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %38, i64 %44, i32 0, i32 0, i32 1
  %51 = bitcast %"struct.std::__1::array.990"* %50 to i8*
  %52 = tail call i32 @bcmp(i8* %51, i8* %20, i64 %24) #17
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %59, !prof !4

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %38, i64 %44, i32 0, i32 0, i32 2
  %56 = bitcast %"struct.std::__1::array.991"* %55 to i8*
  %57 = tail call i32 @bcmp(i8* %56, i8* %22, i64 %25) #17
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59, !prof !2

59:                                               ; preds = %49, %39, %54
  %60 = add i32 %40, -1
  %61 = and i32 %60, %40
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %39

63:                                               ; preds = %54
  %64 = getelementptr inbounds i8, i8* %5, i64 %44
  %65 = icmp ne i8* %64, null
  tail call void @llvm.assume(i1 %65) #17
  br label %73

66:                                               ; preds = %59, %26
  %67 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %73, !prof !5

70:                                               ; preds = %66
  %71 = add i64 %28, 16
  %72 = add i64 %71, %29
  br label %26

73:                                               ; preds = %66, %63
  %74 = phi %"union.absl::container_internal::map_slot_type.978"* [ %45, %63 ], [ undef, %66 ]
  %75 = phi i8* [ %64, %63 ], [ null, %66 ]
  %76 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.978"* } undef, i8* %75, 0
  %77 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.978"* } %76, %"union.absl::container_internal::map_slot_type.978"* %74, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.978"* } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.977"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 1
  %5 = bitcast %"struct.std::__1::array.990"* %4 to i8*
  %6 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = shl nuw nsw i64 %8, 2
  %10 = tail call i64 @XXH64(i8* %5, i64 %9, i64 2882400152) #17
  %11 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1, i64 0, i32 2
  %12 = bitcast %"struct.std::__1::array.991"* %11 to i8*
  %13 = load i32, i32* %6, align 4
  %14 = zext i32 %13 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nsw i64 %15, -4
  %17 = tail call i64 @XXH64(i8* %12, i64 %16, i64 2882400152) #17
  %18 = xor i64 %17, %10
  %19 = add i64 %18, %3
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 1
  %38 = load i32, i32* %6, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 2
  %41 = add nsw i64 %40, -4
  br label %42

42:                                               ; preds = %82, %2
  %43 = phi i64 [ %32, %2 ], [ %84, %82 ]
  %44 = phi i64 [ 0, %2 ], [ %83, %82 ]
  %45 = and i64 %43, %28
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = bitcast i8* %46 to <16 x i8>*
  %48 = load <16 x i8>, <16 x i8>* %47, align 1
  %49 = icmp eq <16 x i8> %36, %48
  %50 = bitcast <16 x i1> %49 to i16
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %42
  %53 = zext i16 %50 to i32
  %54 = load %"union.absl::container_internal::map_slot_type.978"*, %"union.absl::container_internal::map_slot_type.978"** %37, align 8
  br label %55

55:                                               ; preds = %52, %74
  %56 = phi i32 [ %53, %52 ], [ %76, %74 ]
  %57 = tail call i32 @llvm.cttz.i32(i32 %56, i1 false) #17, !range !3
  %58 = zext i32 %57 to i64
  %59 = add i64 %45, %58
  %60 = and i64 %59, %28
  %61 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %54, i64 %60, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %38
  br i1 %63, label %64, label %74, !prof !4

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %54, i64 %60, i32 0, i32 0, i32 1
  %66 = bitcast %"struct.std::__1::array.990"* %65 to i8*
  %67 = tail call i32 @bcmp(i8* %66, i8* %5, i64 %40) #17
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %74, !prof !4

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %54, i64 %60, i32 0, i32 0, i32 2
  %71 = bitcast %"struct.std::__1::array.991"* %70 to i8*
  %72 = tail call i32 @bcmp(i8* %71, i8* %12, i64 %41) #17
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %87, label %74, !prof !2

74:                                               ; preds = %64, %55, %69
  %75 = add i32 %56, -1
  %76 = and i32 %75, %56
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %55

78:                                               ; preds = %74, %42
  %79 = icmp eq <16 x i8> %48, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %80 = bitcast <16 x i1> %79 to i16
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %82, label %85, !prof !5

82:                                               ; preds = %78
  %83 = add i64 %44, 16
  %84 = add i64 %83, %45
  br label %42

85:                                               ; preds = %78
  %86 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.977"* %0, i64 %24)
  br label %87

87:                                               ; preds = %69, %85
  %88 = phi i64 [ %86, %85 ], [ %60, %69 ]
  %89 = phi i8 [ 1, %85 ], [ 0, %69 ]
  %90 = insertvalue { i64, i8 } undef, i64 %88, 0
  %91 = insertvalue { i64, i8 } %90, i8 %89, 1
  ret { i64, i8 } %91
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.977"*, i64) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #17, !range !3
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !2

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.977"* %0, i64 1) #17
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.977"* %0) #17
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.977"* %0, i64 %58) #17
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #17, !range !3
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.977"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.978"*, %"union.absl::container_internal::map_slot_type.978"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 48
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #21
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.978"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %112, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %108
  br i1 %24, label %112, label %111

28:                                               ; preds = %25, %108
  %29 = phi i64 [ 0, %25 ], [ %109, %108 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %108

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %6, i64 %29, i32 0, i32 0, i32 1
  %36 = bitcast %"struct.std::__1::array.990"* %35 to i8*
  %37 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %34, i64 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 2
  %41 = tail call i64 @XXH64(i8* %36, i64 %40, i64 2882400152) #17
  %42 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %6, i64 %29, i32 0, i32 0, i32 2
  %43 = bitcast %"struct.std::__1::array.991"* %42 to i8*
  %44 = load i32, i32* %37, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  %47 = add nsw i64 %46, -4
  %48 = tail call i64 @XXH64(i8* %43, i64 %47, i64 2882400152) #17
  %49 = xor i64 %48, %41
  %50 = add i64 %49, %26
  %51 = zext i64 %50 to i128
  %52 = mul nuw i128 %51, 11376068507788127593
  %53 = lshr i128 %52, 64
  %54 = xor i128 %53, %52
  %55 = trunc i128 %54 to i64
  %56 = load i8*, i8** %3, align 8
  %57 = load i64, i64* %7, align 8
  %58 = lshr i64 %55, 7
  %59 = ptrtoint i8* %56 to i64
  %60 = lshr i64 %59, 12
  %61 = xor i64 %58, %60
  %62 = and i64 %61, %57
  %63 = getelementptr inbounds i8, i8* %56, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %33, %69
  %70 = phi i64 [ %74, %69 ], [ %62, %33 ]
  %71 = phi i64 [ %72, %69 ], [ 0, %33 ]
  %72 = add i64 %71, 16
  %73 = add i64 %72, %70
  %74 = and i64 %73, %57
  %75 = getelementptr inbounds i8, i8* %56, i64 %74
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1
  %78 = icmp slt <16 x i8> %77, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %79 = bitcast <16 x i1> %78 to i16
  %80 = icmp eq i16 %79, 0
  br i1 %80, label %69, label %81

81:                                               ; preds = %69, %33
  %82 = phi i64 [ %62, %33 ], [ %74, %69 ]
  %83 = phi i16 [ %67, %33 ], [ %79, %69 ]
  %84 = zext i16 %83 to i32
  %85 = tail call i32 @llvm.cttz.i32(i32 %84, i1 false) #17, !range !3
  %86 = zext i32 %85 to i64
  %87 = add i64 %82, %86
  %88 = and i64 %87, %57
  %89 = trunc i128 %54 to i8
  %90 = and i8 %89, 127
  %91 = getelementptr inbounds i8, i8* %56, i64 %88
  store i8 %90, i8* %91, align 1
  %92 = load i8*, i8** %3, align 8
  %93 = add i64 %88, -15
  %94 = load i64, i64* %7, align 8
  %95 = and i64 %93, %94
  %96 = and i64 %94, 15
  %97 = add i64 %95, %96
  %98 = getelementptr inbounds i8, i8* %92, i64 %97
  store i8 %90, i8* %98, align 1
  %99 = load %"union.absl::container_internal::map_slot_type.978"*, %"union.absl::container_internal::map_slot_type.978"** %5, align 8
  %100 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %99, i64 %88
  %101 = bitcast %"union.absl::container_internal::map_slot_type.978"* %100 to i8*
  %102 = bitcast %"union.absl::container_internal::map_slot_type.978"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 40, i1 false) #17
  %103 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %99, i64 %88, i32 0, i32 1
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %6, i64 %29, i32 0, i32 1
  %105 = bitcast %struct.VkDescriptorSet_T** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %struct.VkDescriptorSet_T** %103 to i64*
  store i64 %106, i64* %107, align 8
  br label %108

108:                                              ; preds = %28, %81
  %109 = add nuw i64 %29, 1
  %110 = icmp eq i64 %109, %8
  br i1 %110, label %27, label %28

111:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #21
  br label %112

112:                                              ; preds = %2, %27, %111
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.977"*) local_unnamed_addr #18 comdat align 2 {
  %2 = alloca %"class.rx::vk::UniformsAndXfbDescriptorDesc", align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #17
  %7 = bitcast %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 1
  %12 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %21

13:                                               ; preds = %149, %1
  %14 = phi i64 [ 0, %1 ], [ %151, %149 ]
  %15 = lshr i64 %14, 3
  %16 = sub i64 %14, %15
  %17 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.977", %"class.absl::container_internal::raw_hash_set.977"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7)
  ret void

21:                                               ; preds = %10, %149
  %22 = phi i64 [ 0, %10 ], [ %151, %149 ]
  %23 = load i8*, i8** %3, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, -2
  br i1 %26, label %27, label %149

27:                                               ; preds = %21
  %28 = load %"union.absl::container_internal::map_slot_type.978"*, %"union.absl::container_internal::map_slot_type.978"** %11, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %28, i64 %22, i32 0, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::array.990"* %29 to i8*
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %28, i64 %22, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = tail call i64 @XXH64(i8* %30, i64 %34, i64 2882400152) #17
  %36 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %28, i64 %22, i32 0, i32 0, i32 2
  %37 = bitcast %"struct.std::__1::array.991"* %36 to i8*
  %38 = load i32, i32* %31, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 2
  %41 = add nsw i64 %40, -4
  %42 = tail call i64 @XXH64(i8* %37, i64 %41, i64 2882400152) #17
  %43 = xor i64 %42, %35
  %44 = add i64 %43, %12
  %45 = zext i64 %44 to i128
  %46 = mul nuw i128 %45, 11376068507788127593
  %47 = lshr i128 %46, 64
  %48 = xor i128 %47, %46
  %49 = trunc i128 %48 to i64
  %50 = load i8*, i8** %3, align 8
  %51 = load i64, i64* %5, align 8
  %52 = lshr i64 %49, 7
  %53 = ptrtoint i8* %50 to i64
  %54 = lshr i64 %53, 12
  %55 = xor i64 %52, %54
  %56 = and i64 %55, %51
  %57 = getelementptr inbounds i8, i8* %50, i64 %56
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1
  %60 = icmp slt <16 x i8> %59, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %61 = bitcast <16 x i1> %60 to i16
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %27, %63
  %64 = phi i64 [ %68, %63 ], [ %56, %27 ]
  %65 = phi i64 [ %66, %63 ], [ 0, %27 ]
  %66 = add i64 %65, 16
  %67 = add i64 %66, %64
  %68 = and i64 %67, %51
  %69 = getelementptr inbounds i8, i8* %50, i64 %68
  %70 = bitcast i8* %69 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1
  %72 = icmp slt <16 x i8> %71, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %73 = bitcast <16 x i1> %72 to i16
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %63, label %75

75:                                               ; preds = %63, %27
  %76 = phi i64 [ %56, %27 ], [ %68, %63 ]
  %77 = phi i16 [ %61, %27 ], [ %73, %63 ]
  %78 = zext i16 %77 to i32
  %79 = tail call i32 @llvm.cttz.i32(i32 %78, i1 false) #17, !range !3
  %80 = zext i32 %79 to i64
  %81 = add i64 %76, %80
  %82 = and i64 %81, %51
  %83 = sub i64 %82, %56
  %84 = sub i64 %22, %56
  %85 = xor i64 %83, %84
  %86 = and i64 %85, %51
  %87 = icmp ult i64 %86, 16
  br i1 %87, label %88, label %99, !prof !2

88:                                               ; preds = %75
  %89 = trunc i128 %48 to i8
  %90 = and i8 %89, 127
  %91 = getelementptr inbounds i8, i8* %50, i64 %22
  store i8 %90, i8* %91, align 1
  %92 = load i8*, i8** %3, align 8
  %93 = add i64 %22, -15
  %94 = load i64, i64* %5, align 8
  %95 = and i64 %94, %93
  %96 = and i64 %94, 15
  %97 = add i64 %95, %96
  %98 = getelementptr inbounds i8, i8* %92, i64 %97
  store i8 %90, i8* %98, align 1
  br label %149

99:                                               ; preds = %75
  %100 = getelementptr inbounds i8, i8* %50, i64 %82
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = trunc i128 %48 to i8
  %104 = and i8 %103, 127
  store i8 %104, i8* %100, align 1
  %105 = load i8*, i8** %3, align 8
  %106 = add i64 %82, -15
  %107 = load i64, i64* %5, align 8
  %108 = and i64 %107, %106
  %109 = and i64 %107, 15
  %110 = add i64 %108, %109
  %111 = getelementptr inbounds i8, i8* %105, i64 %110
  store i8 %104, i8* %111, align 1
  %112 = load %"union.absl::container_internal::map_slot_type.978"*, %"union.absl::container_internal::map_slot_type.978"** %11, align 8
  br i1 %102, label %113, label %132

113:                                              ; preds = %99
  %114 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %112, i64 %82
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %112, i64 %22
  %116 = bitcast %"union.absl::container_internal::map_slot_type.978"* %114 to i8*
  %117 = bitcast %"union.absl::container_internal::map_slot_type.978"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 40, i1 false) #17
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %112, i64 %82, i32 0, i32 1
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %112, i64 %22, i32 0, i32 1
  %120 = bitcast %struct.VkDescriptorSet_T** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %struct.VkDescriptorSet_T** %118 to i64*
  store i64 %121, i64* %122, align 8
  %123 = load i8*, i8** %3, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 %22
  store i8 -128, i8* %124, align 1
  %125 = load i8*, i8** %3, align 8
  %126 = add i64 %22, -15
  %127 = load i64, i64* %5, align 8
  %128 = and i64 %127, %126
  %129 = and i64 %127, 15
  %130 = add i64 %128, %129
  %131 = getelementptr inbounds i8, i8* %125, i64 %130
  store i8 -128, i8* %131, align 1
  br label %149

132:                                              ; preds = %99
  %133 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %112, i64 %22
  %134 = bitcast %"union.absl::container_internal::map_slot_type.978"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 4 %134, i64 40, i1 false)
  %135 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %112, i64 %22, i32 0, i32 1
  %136 = bitcast %struct.VkDescriptorSet_T** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %112, i64 %82
  %139 = bitcast %"union.absl::container_internal::map_slot_type.978"* %138 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* align 4 %139, i64 40, i1 false) #17
  %140 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %112, i64 %82, i32 0, i32 1
  %141 = bitcast %struct.VkDescriptorSet_T** %140 to i64*
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* %136, align 8
  %143 = load %"union.absl::container_internal::map_slot_type.978"*, %"union.absl::container_internal::map_slot_type.978"** %11, align 8
  %144 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %143, i64 %82
  %145 = bitcast %"union.absl::container_internal::map_slot_type.978"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* nonnull align 8 %7, i64 40, i1 false)
  %146 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.978", %"union.absl::container_internal::map_slot_type.978"* %143, i64 %82, i32 0, i32 1
  %147 = bitcast %struct.VkDescriptorSet_T** %146 to i64*
  store i64 %137, i64* %147, align 8
  %148 = add i64 %22, -1
  br label %149

149:                                              ; preds = %88, %132, %113, %21
  %150 = phi i64 [ %22, %21 ], [ %22, %88 ], [ %22, %113 ], [ %148, %132 ]
  %151 = add i64 %150, 1
  %152 = load i64, i64* %5, align 8
  %153 = icmp eq i64 %151, %152
  br i1 %153, label %13, label %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.1000"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.rx::vk::ShaderBuffersDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc"* %1, i64 0, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = shl i64 %8, 2
  %10 = tail call i64 @XXH64(i8* %6, i64 %9, i64 2882400152) #17
  %11 = add i64 %10, %3
  %12 = zext i64 %11 to i128
  %13 = mul nuw i128 %12, 11376068507788127593
  %14 = lshr i128 %13, 64
  %15 = xor i128 %14, %13
  %16 = trunc i128 %15 to i64
  %17 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %16, 7
  %22 = ptrtoint i8* %18 to i64
  %23 = lshr i64 %22, 12
  %24 = xor i64 %21, %23
  %25 = trunc i128 %15 to i8
  %26 = and i8 %25, 127
  %27 = insertelement <16 x i8> undef, i8 %26, i32 0
  %28 = shufflevector <16 x i8> %27, <16 x i8> undef, <16 x i32> zeroinitializer
  %29 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 1
  %30 = load i64, i64* %7, align 8
  %31 = load i32*, i32** %4, align 8
  %32 = icmp eq i64 %30, 0
  br label %33

33:                                               ; preds = %77, %2
  %34 = phi i64 [ %24, %2 ], [ %79, %77 ]
  %35 = phi i64 [ 0, %2 ], [ %78, %77 ]
  %36 = and i64 %34, %20
  %37 = getelementptr inbounds i8, i8* %18, i64 %36
  %38 = bitcast i8* %37 to <16 x i8>*
  %39 = load <16 x i8>, <16 x i8>* %38, align 1
  %40 = icmp eq <16 x i8> %28, %39
  %41 = bitcast <16 x i1> %40 to i16
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %73, label %43

43:                                               ; preds = %33
  %44 = zext i16 %41 to i32
  %45 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %29, align 8
  br label %46

46:                                               ; preds = %43, %69
  %47 = phi i32 [ %44, %43 ], [ %71, %69 ]
  %48 = tail call i32 @llvm.cttz.i32(i32 %47, i1 false) #17, !range !3
  %49 = zext i32 %48 to i64
  %50 = add i64 %36, %49
  %51 = and i64 %50, %20
  %52 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %45, i64 %51, i32 0, i32 0, i32 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %69, !prof !4

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %45, i64 %51, i32 0, i32 0, i32 0, i32 1
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 %30
  br i1 %32, label %82, label %59

59:                                               ; preds = %55, %65
  %60 = phi i32* [ %67, %65 ], [ %31, %55 ]
  %61 = phi i32* [ %66, %65 ], [ %57, %55 ]
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %60, align 4
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %65, label %69, !prof !4

65:                                               ; preds = %59
  %66 = getelementptr inbounds i32, i32* %61, i64 1
  %67 = getelementptr inbounds i32, i32* %60, i64 1
  %68 = icmp eq i32* %66, %58
  br i1 %68, label %82, label %59

69:                                               ; preds = %59, %46
  %70 = add i32 %47, -1
  %71 = and i32 %70, %47
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %46

73:                                               ; preds = %69, %33
  %74 = icmp eq <16 x i8> %39, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %75 = bitcast <16 x i1> %74 to i16
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = add i64 %35, 16
  %79 = add i64 %78, %36
  br label %33

80:                                               ; preds = %73
  %81 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.1000"* %0, i64 %16)
  br label %82

82:                                               ; preds = %55, %65, %80
  %83 = phi i64 [ %81, %80 ], [ %51, %65 ], [ %51, %55 ]
  %84 = phi i8 [ 1, %80 ], [ 0, %65 ], [ 0, %55 ]
  %85 = insertvalue { i64, i8 } undef, i64 %83, 0
  %86 = insertvalue { i64, i8 } %85, i8 %84, 1
  ret { i64, i8 } %86
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.1000"*, i64) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #17, !range !3
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !2

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.1000"* %0, i64 1) #17
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.1000"* %0) #17
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.1000"* %0, i64 %58) #17
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #17, !range !3
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.1000"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 160
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #21
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.1001"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %137, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %133
  br i1 %24, label %137, label %136

28:                                               ; preds = %25, %133
  %29 = phi i64 [ 0, %25 ], [ %134, %133 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %133

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %6, i64 %29, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast i32** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %6, i64 %29, i32 0, i32 0, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = shl i64 %38, 2
  %40 = tail call i64 @XXH64(i8* %36, i64 %39, i64 2882400152) #17
  %41 = add i64 %40, %26
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = load i8*, i8** %3, align 8
  %48 = load i64, i64* %7, align 8
  %49 = lshr i64 %46, 7
  %50 = ptrtoint i8* %47 to i64
  %51 = lshr i64 %50, 12
  %52 = xor i64 %49, %51
  %53 = and i64 %52, %48
  %54 = getelementptr inbounds i8, i8* %47, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %33, %60
  %61 = phi i64 [ %65, %60 ], [ %53, %33 ]
  %62 = phi i64 [ %63, %60 ], [ 0, %33 ]
  %63 = add i64 %62, 16
  %64 = add i64 %63, %61
  %65 = and i64 %64, %48
  %66 = getelementptr inbounds i8, i8* %47, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %60, label %72

72:                                               ; preds = %60, %33
  %73 = phi i64 [ %53, %33 ], [ %65, %60 ]
  %74 = phi i16 [ %58, %33 ], [ %70, %60 ]
  %75 = zext i16 %74 to i32
  %76 = tail call i32 @llvm.cttz.i32(i32 %75, i1 false) #17, !range !3
  %77 = zext i32 %76 to i64
  %78 = add i64 %73, %77
  %79 = and i64 %78, %48
  %80 = trunc i128 %45 to i8
  %81 = and i8 %80, 127
  %82 = getelementptr inbounds i8, i8* %47, i64 %79
  store i8 %81, i8* %82, align 1
  %83 = load i8*, i8** %3, align 8
  %84 = add i64 %79, -15
  %85 = load i64, i64* %7, align 8
  %86 = and i64 %84, %85
  %87 = and i64 %85, 15
  %88 = add i64 %86, %87
  %89 = getelementptr inbounds i8, i8* %83, i64 %88
  store i8 %81, i8* %89, align 1
  %90 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %5, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %90, i64 %79
  %92 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %90, i64 %79, i32 0, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  store i32* %93, i32** %92, align 8
  %94 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %90, i64 %79, i32 0, i32 0, i32 0, i32 2
  %95 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %90, i64 %79, i32 0, i32 0, i32 0, i32 3
  %96 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %96, align 8
  %97 = load i64, i64* %37, align 8
  %98 = icmp ugt i64 %97, 32
  %99 = bitcast %"union.absl::container_internal::map_slot_type.1001"* %91 to i8*
  br i1 %98, label %100, label %112

100:                                              ; preds = %72, %100
  %101 = phi i64 [ %103, %100 ], [ 32, %72 ]
  %102 = icmp ult i64 %101, %97
  %103 = shl i64 %101, 1
  br i1 %102, label %100, label %104

104:                                              ; preds = %100
  %105 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %101, i64 4) #17
  %106 = extractvalue { i64, i1 } %105, 1
  %107 = extractvalue { i64, i1 } %105, 0
  %108 = select i1 %106, i64 -1, i64 %107
  %109 = tail call i8* @_Znam(i64 %108) #21
  %110 = bitcast i32** %92 to i8**
  store i8* %109, i8** %110, align 8
  store i64 %101, i64* %95, align 8
  %111 = load i64, i64* %37, align 8
  br label %112

112:                                              ; preds = %104, %72
  %113 = phi i8* [ %99, %72 ], [ %109, %104 ]
  %114 = phi i64 [ %97, %72 ], [ %111, %104 ]
  store i64 %114, i64* %94, align 8
  %115 = load i64, i64* %37, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %112
  %118 = shl nuw i64 %115, 2
  %119 = load i8*, i8** %35, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %119, i64 %118, i1 false) #17
  br label %120

120:                                              ; preds = %117, %112
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %90, i64 %79, i32 0, i32 1
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %6, i64 %29, i32 0, i32 1
  %123 = bitcast %struct.VkDescriptorSet_T** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %struct.VkDescriptorSet_T** %121 to i64*
  store i64 %124, i64* %125, align 8
  store i64 0, i64* %37, align 8
  %126 = load i32*, i32** %34, align 8
  %127 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %6, i64 %29, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %128 = icmp eq i32* %126, %127
  %129 = icmp eq i32* %126, null
  %130 = or i1 %128, %129
  br i1 %130, label %133, label %131

131:                                              ; preds = %120
  %132 = bitcast i32* %126 to i8*
  tail call void @_ZdaPv(i8* %132) #21
  br label %133

133:                                              ; preds = %131, %120, %28
  %134 = add nuw i64 %29, 1
  %135 = icmp eq i64 %134, %8
  br i1 %135, label %27, label %28

136:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #21
  br label %137

137:                                              ; preds = %2, %27, %136
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.1000"*) local_unnamed_addr #18 comdat align 2 {
  %2 = alloca %"union.absl::container_internal::map_slot_type.1001", align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #17
  %7 = bitcast %"union.absl::container_internal::map_slot_type.1001"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 160, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 1
  %12 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %13 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %15 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %2, i64 0, i32 0, i32 0, i32 0, i32 3
  %17 = bitcast i32** %13 to i8**
  %18 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %2, i64 0, i32 0, i32 1
  %19 = bitcast %struct.VkDescriptorSet_T** %18 to i64*
  %20 = bitcast i64* %15 to <2 x i64>*
  br label %29

21:                                               ; preds = %298, %1
  %22 = phi i64 [ 0, %1 ], [ %300, %298 ]
  %23 = lshr i64 %22, 3
  %24 = sub i64 %22, %23
  %25 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.1000", %"class.absl::container_internal::raw_hash_set.1000"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #17
  ret void

29:                                               ; preds = %10, %298
  %30 = phi i64 [ 0, %10 ], [ %300, %298 ]
  %31 = load i8*, i8** %3, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, -2
  br i1 %34, label %35, label %298

35:                                               ; preds = %29
  %36 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %11, align 8
  %37 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %36, i64 %30, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast i32** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %36, i64 %30, i32 0, i32 0, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = shl i64 %41, 2
  %43 = call i64 @XXH64(i8* %39, i64 %42, i64 2882400152) #17
  %44 = add i64 %43, %12
  %45 = zext i64 %44 to i128
  %46 = mul nuw i128 %45, 11376068507788127593
  %47 = lshr i128 %46, 64
  %48 = xor i128 %47, %46
  %49 = trunc i128 %48 to i64
  %50 = load i8*, i8** %3, align 8
  %51 = load i64, i64* %5, align 8
  %52 = lshr i64 %49, 7
  %53 = ptrtoint i8* %50 to i64
  %54 = lshr i64 %53, 12
  %55 = xor i64 %52, %54
  %56 = and i64 %55, %51
  %57 = getelementptr inbounds i8, i8* %50, i64 %56
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1
  %60 = icmp slt <16 x i8> %59, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %61 = bitcast <16 x i1> %60 to i16
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %35, %63
  %64 = phi i64 [ %68, %63 ], [ %56, %35 ]
  %65 = phi i64 [ %66, %63 ], [ 0, %35 ]
  %66 = add i64 %65, 16
  %67 = add i64 %66, %64
  %68 = and i64 %67, %51
  %69 = getelementptr inbounds i8, i8* %50, i64 %68
  %70 = bitcast i8* %69 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1
  %72 = icmp slt <16 x i8> %71, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %73 = bitcast <16 x i1> %72 to i16
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %63, label %75

75:                                               ; preds = %63, %35
  %76 = phi i64 [ %56, %35 ], [ %68, %63 ]
  %77 = phi i16 [ %61, %35 ], [ %73, %63 ]
  %78 = zext i16 %77 to i32
  %79 = call i32 @llvm.cttz.i32(i32 %78, i1 false) #17, !range !3
  %80 = zext i32 %79 to i64
  %81 = add i64 %76, %80
  %82 = and i64 %81, %51
  %83 = sub i64 %82, %56
  %84 = sub i64 %30, %56
  %85 = xor i64 %83, %84
  %86 = and i64 %85, %51
  %87 = icmp ult i64 %86, 16
  br i1 %87, label %88, label %99, !prof !2

88:                                               ; preds = %75
  %89 = trunc i128 %48 to i8
  %90 = and i8 %89, 127
  %91 = getelementptr inbounds i8, i8* %50, i64 %30
  store i8 %90, i8* %91, align 1
  %92 = load i8*, i8** %3, align 8
  %93 = add i64 %30, -15
  %94 = load i64, i64* %5, align 8
  %95 = and i64 %94, %93
  %96 = and i64 %94, 15
  %97 = add i64 %95, %96
  %98 = getelementptr inbounds i8, i8* %92, i64 %97
  store i8 %90, i8* %98, align 1
  br label %298

99:                                               ; preds = %75
  %100 = getelementptr inbounds i8, i8* %50, i64 %82
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = trunc i128 %48 to i8
  %104 = and i8 %103, 127
  store i8 %104, i8* %100, align 1
  %105 = load i8*, i8** %3, align 8
  %106 = add i64 %82, -15
  %107 = load i64, i64* %5, align 8
  %108 = and i64 %107, %106
  %109 = and i64 %107, 15
  %110 = add i64 %108, %109
  %111 = getelementptr inbounds i8, i8* %105, i64 %110
  store i8 %104, i8* %111, align 1
  %112 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %11, align 8
  br i1 %102, label %113, label %170

113:                                              ; preds = %99
  %114 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %82
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %82, i32 0, i32 0, i32 0, i32 1
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  store i32* %116, i32** %115, align 8
  %117 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %82, i32 0, i32 0, i32 0, i32 2
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %82, i32 0, i32 0, i32 0, i32 3
  %119 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %119, align 8
  %120 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 0, i32 0, i32 2
  %121 = load i64, i64* %120, align 8
  %122 = icmp ugt i64 %121, 32
  %123 = bitcast %"union.absl::container_internal::map_slot_type.1001"* %114 to i8*
  br i1 %122, label %124, label %136

124:                                              ; preds = %113, %124
  %125 = phi i64 [ %127, %124 ], [ 32, %113 ]
  %126 = icmp ult i64 %125, %121
  %127 = shl i64 %125, 1
  br i1 %126, label %124, label %128

128:                                              ; preds = %124
  %129 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %125, i64 4) #17
  %130 = extractvalue { i64, i1 } %129, 1
  %131 = extractvalue { i64, i1 } %129, 0
  %132 = select i1 %130, i64 -1, i64 %131
  %133 = call i8* @_Znam(i64 %132) #21
  %134 = bitcast i32** %115 to i8**
  store i8* %133, i8** %134, align 8
  store i64 %125, i64* %118, align 8
  %135 = load i64, i64* %120, align 8
  br label %136

136:                                              ; preds = %128, %113
  %137 = phi i8* [ %123, %113 ], [ %133, %128 ]
  %138 = phi i64 [ %121, %113 ], [ %135, %128 ]
  store i64 %138, i64* %117, align 8
  %139 = load i64, i64* %120, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %146, label %141

141:                                              ; preds = %136
  %142 = shl nuw i64 %139, 2
  %143 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 0, i32 0, i32 1
  %144 = bitcast i32** %143 to i8**
  %145 = load i8*, i8** %144, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %145, i64 %142, i1 false) #17
  br label %146

146:                                              ; preds = %141, %136
  %147 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %82, i32 0, i32 1
  %148 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 1
  %149 = bitcast %struct.VkDescriptorSet_T** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %struct.VkDescriptorSet_T** %147 to i64*
  store i64 %150, i64* %151, align 8
  store i64 0, i64* %120, align 8
  %152 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 0, i32 0, i32 1
  %153 = load i32*, i32** %152, align 8
  %154 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %155 = icmp eq i32* %153, %154
  %156 = icmp eq i32* %153, null
  %157 = or i1 %155, %156
  br i1 %157, label %160, label %158

158:                                              ; preds = %146
  %159 = bitcast i32* %153 to i8*
  call void @_ZdaPv(i8* %159) #21
  br label %160

160:                                              ; preds = %146, %158
  %161 = load i8*, i8** %3, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 %30
  store i8 -128, i8* %162, align 1
  %163 = load i8*, i8** %3, align 8
  %164 = add i64 %30, -15
  %165 = load i64, i64* %5, align 8
  %166 = and i64 %165, %164
  %167 = and i64 %165, 15
  %168 = add i64 %166, %167
  %169 = getelementptr inbounds i8, i8* %163, i64 %168
  store i8 -128, i8* %169, align 1
  br label %298

170:                                              ; preds = %99
  store i32* %14, i32** %13, align 8
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %20, align 8
  %171 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 0, i32 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = icmp ugt i64 %172, 32
  br i1 %173, label %174, label %185

174:                                              ; preds = %170, %174
  %175 = phi i64 [ %177, %174 ], [ 32, %170 ]
  %176 = icmp ult i64 %175, %172
  %177 = shl i64 %175, 1
  br i1 %176, label %174, label %178

178:                                              ; preds = %174
  %179 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %175, i64 4) #17
  %180 = extractvalue { i64, i1 } %179, 1
  %181 = extractvalue { i64, i1 } %179, 0
  %182 = select i1 %180, i64 -1, i64 %181
  %183 = call i8* @_Znam(i64 %182) #21
  store i8* %183, i8** %17, align 8
  store i64 %175, i64* %16, align 8
  %184 = load i64, i64* %171, align 8
  br label %185

185:                                              ; preds = %178, %170
  %186 = phi i8* [ %7, %170 ], [ %183, %178 ]
  %187 = phi i64 [ %172, %170 ], [ %184, %178 ]
  store i64 %187, i64* %15, align 8
  %188 = load i64, i64* %171, align 8
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = shl nuw i64 %188, 2
  %192 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 0, i32 0, i32 1
  %193 = bitcast i32** %192 to i8**
  %194 = load i8*, i8** %193, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %186, i8* align 4 %194, i64 %191, i1 false) #17
  br label %195

195:                                              ; preds = %190, %185
  %196 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 1
  %197 = bitcast %struct.VkDescriptorSet_T** %196 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %19, align 8
  store i64 0, i64* %171, align 8
  %199 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 0, i32 0, i32 1
  %200 = load i32*, i32** %199, align 8
  %201 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %112, i64 %30, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %202 = icmp eq i32* %200, %201
  %203 = icmp eq i32* %200, null
  %204 = or i1 %202, %203
  br i1 %204, label %207, label %205

205:                                              ; preds = %195
  %206 = bitcast i32* %200 to i8*
  call void @_ZdaPv(i8* %206) #21
  br label %207

207:                                              ; preds = %195, %205
  %208 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %11, align 8
  %209 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %30
  %210 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %30, i32 0, i32 0, i32 0, i32 1
  %211 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  store i32* %211, i32** %210, align 8
  %212 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %30, i32 0, i32 0, i32 0, i32 2
  %213 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %30, i32 0, i32 0, i32 0, i32 3
  %214 = bitcast i64* %212 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %214, align 8
  %215 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %82, i32 0, i32 0, i32 0, i32 2
  %216 = load i64, i64* %215, align 8
  %217 = icmp ugt i64 %216, 32
  %218 = bitcast %"union.absl::container_internal::map_slot_type.1001"* %209 to i8*
  br i1 %217, label %219, label %231

219:                                              ; preds = %207, %219
  %220 = phi i64 [ %222, %219 ], [ 32, %207 ]
  %221 = icmp ult i64 %220, %216
  %222 = shl i64 %220, 1
  br i1 %221, label %219, label %223

223:                                              ; preds = %219
  %224 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %220, i64 4) #17
  %225 = extractvalue { i64, i1 } %224, 1
  %226 = extractvalue { i64, i1 } %224, 0
  %227 = select i1 %225, i64 -1, i64 %226
  %228 = call i8* @_Znam(i64 %227) #21
  %229 = bitcast i32** %210 to i8**
  store i8* %228, i8** %229, align 8
  store i64 %220, i64* %213, align 8
  %230 = load i64, i64* %215, align 8
  br label %231

231:                                              ; preds = %223, %207
  %232 = phi i8* [ %218, %207 ], [ %228, %223 ]
  %233 = phi i64 [ %216, %207 ], [ %230, %223 ]
  store i64 %233, i64* %212, align 8
  %234 = load i64, i64* %215, align 8
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %241, label %236

236:                                              ; preds = %231
  %237 = shl nuw i64 %234, 2
  %238 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %82, i32 0, i32 0, i32 0, i32 1
  %239 = bitcast i32** %238 to i8**
  %240 = load i8*, i8** %239, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %240, i64 %237, i1 false) #17
  br label %241

241:                                              ; preds = %236, %231
  %242 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %30, i32 0, i32 1
  %243 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %82, i32 0, i32 1
  %244 = bitcast %struct.VkDescriptorSet_T** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %struct.VkDescriptorSet_T** %242 to i64*
  store i64 %245, i64* %246, align 8
  store i64 0, i64* %215, align 8
  %247 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %82, i32 0, i32 0, i32 0, i32 1
  %248 = load i32*, i32** %247, align 8
  %249 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %208, i64 %82, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %250 = icmp eq i32* %248, %249
  %251 = icmp eq i32* %248, null
  %252 = or i1 %250, %251
  br i1 %252, label %255, label %253

253:                                              ; preds = %241
  %254 = bitcast i32* %248 to i8*
  call void @_ZdaPv(i8* %254) #21
  br label %255

255:                                              ; preds = %241, %253
  %256 = load %"union.absl::container_internal::map_slot_type.1001"*, %"union.absl::container_internal::map_slot_type.1001"** %11, align 8
  %257 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %256, i64 %82
  %258 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %256, i64 %82, i32 0, i32 0, i32 0, i32 1
  %259 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %257, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  store i32* %259, i32** %258, align 8
  %260 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %256, i64 %82, i32 0, i32 0, i32 0, i32 2
  %261 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %256, i64 %82, i32 0, i32 0, i32 0, i32 3
  %262 = bitcast i64* %260 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %262, align 8
  %263 = load i64, i64* %15, align 8
  %264 = icmp ugt i64 %263, 32
  %265 = bitcast %"union.absl::container_internal::map_slot_type.1001"* %257 to i8*
  br i1 %264, label %266, label %278

266:                                              ; preds = %255, %266
  %267 = phi i64 [ %269, %266 ], [ 32, %255 ]
  %268 = icmp ult i64 %267, %263
  %269 = shl i64 %267, 1
  br i1 %268, label %266, label %270

270:                                              ; preds = %266
  %271 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %267, i64 4) #17
  %272 = extractvalue { i64, i1 } %271, 1
  %273 = extractvalue { i64, i1 } %271, 0
  %274 = select i1 %272, i64 -1, i64 %273
  %275 = call i8* @_Znam(i64 %274) #21
  %276 = bitcast i32** %258 to i8**
  store i8* %275, i8** %276, align 8
  store i64 %267, i64* %261, align 8
  %277 = load i64, i64* %15, align 8
  br label %278

278:                                              ; preds = %270, %255
  %279 = phi i8* [ %265, %255 ], [ %275, %270 ]
  %280 = phi i64 [ %263, %255 ], [ %277, %270 ]
  store i64 %280, i64* %260, align 8
  %281 = load i64, i64* %15, align 8
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %286, label %283

283:                                              ; preds = %278
  %284 = shl nuw i64 %281, 2
  %285 = load i8*, i8** %17, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %279, i8* align 4 %285, i64 %284, i1 false) #17
  br label %286

286:                                              ; preds = %283, %278
  %287 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1001", %"union.absl::container_internal::map_slot_type.1001"* %256, i64 %82, i32 0, i32 1
  %288 = load i64, i64* %19, align 8
  %289 = bitcast %struct.VkDescriptorSet_T** %287 to i64*
  store i64 %288, i64* %289, align 8
  store i64 0, i64* %15, align 8
  %290 = load i32*, i32** %13, align 8
  %291 = icmp eq i32* %290, %14
  %292 = icmp eq i32* %290, null
  %293 = or i1 %291, %292
  br i1 %293, label %296, label %294

294:                                              ; preds = %286
  %295 = bitcast i32* %290 to i8*
  call void @_ZdaPv(i8* %295) #21
  br label %296

296:                                              ; preds = %286, %294
  %297 = add i64 %30, -1
  br label %298

298:                                              ; preds = %88, %296, %160, %29
  %299 = phi i64 [ %30, %29 ], [ %30, %88 ], [ %30, %160 ], [ %297, %296 ]
  %300 = add i64 %299, 1
  %301 = load i64, i64* %5, align 8
  %302 = icmp eq i64 %300, %301
  br i1 %302, label %21, label %29
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #20

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

attributes #0 = { argmemonly nounwind }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nofree nounwind readonly }
attributes #21 = { builtin nounwind }
attributes #22 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 0, i32 33}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7, !9, !11, !13, !15, !17}
!7 = distinct !{!7, !8, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_"}
!9 = distinct !{!9, !10, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE: argument 0"}
!10 = distinct !{!10, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE"}
!11 = distinct !{!11, !12, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_: argument 0"}
!12 = distinct !{!12, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_"}
!13 = distinct !{!13, !14, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_: argument 0"}
!14 = distinct !{!14, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_"}
!15 = distinct !{!15, !16, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_: argument 0"}
!16 = distinct !{!16, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_"}
!17 = distinct !{!17, !18, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_"}
!19 = !{!20, !22, !24, !26, !28, !30}
!20 = distinct !{!20, !21, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_"}
!22 = distinct !{!22, !23, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE: argument 0"}
!23 = distinct !{!23, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE"}
!24 = distinct !{!24, !25, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_: argument 0"}
!25 = distinct !{!25, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_"}
!26 = distinct !{!26, !27, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_: argument 0"}
!27 = distinct !{!27, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_"}
!28 = distinct !{!28, !29, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_: argument 0"}
!29 = distinct !{!29, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_"}
!30 = distinct !{!30, !31, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_: argument 0"}
!31 = distinct !{!31, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_: argument 0"}
!34 = distinct !{!34, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_"}
!35 = distinct !{!35, !36}
!36 = !{!"llvm.loop.unroll.disable"}
!37 = !{i8 0, i8 2}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!41 = !{i64 0, i64 65}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv: argument 0"}
!44 = distinct !{!44, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv"}
!45 = !{!46, !48, !50, !52, !54, !56}
!46 = distinct !{!46, !47, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSO_EEENSX_IJOSK_EEEEEENSG_INSR_8iteratorEbEERKT_DpOT0_: argument 0"}
!47 = distinct !{!47, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSO_EEENSX_IJOSK_EEEEEENSG_INSR_8iteratorEbEERKT_DpOT0_"}
!48 = distinct !{!48, !49, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS6_18AttachmentOpsArrayENS6_16RenderPassHelperENS_13hash_internal4HashIS9_EENSt3__18equal_toIS9_EENSE_9allocatorINSE_4pairIKS9_SA_EEEEEEEENSC_IS7_EENSF_IS7_EENSH_INSI_IKS7_SM_EEEEE19EmplaceDecomposableERSQ_NSE_5tupleIJOSM_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSW_IJS10_EEEEEclsr3stdE7declvalIT1_EEEEOSZ_NSI_IS13_S14_EE: argument 0"}
!49 = distinct !{!49, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS6_18AttachmentOpsArrayENS6_16RenderPassHelperENS_13hash_internal4HashIS9_EENSt3__18equal_toIS9_EENSE_9allocatorINSE_4pairIKS9_SA_EEEEEEEENSC_IS7_EENSF_IS7_EENSH_INSI_IKS7_SM_EEEEE19EmplaceDecomposableERSQ_NSE_5tupleIJOSM_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSW_IJS10_EEEEEclsr3stdE7declvalIT1_EEEEOSZ_NSI_IS13_S14_EE"}
!50 = distinct !{!50, !51, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS5_18AttachmentOpsArrayENS5_16RenderPassHelperENS_13hash_internal4HashIS8_EENSt3__18equal_toIS8_EENSD_9allocatorINSD_4pairIKS8_S9_EEEEEEEENSB_IS6_EENSE_IS6_EENSG_INSH_IKS6_SL_EEEEE19EmplaceDecomposableEJRSP_SL_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSV_DpOSW_: argument 0"}
!51 = distinct !{!51, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS5_18AttachmentOpsArrayENS5_16RenderPassHelperENS_13hash_internal4HashIS8_EENSt3__18equal_toIS8_EENSD_9allocatorINSD_4pairIKS8_S9_EEEEEEEENSB_IS6_EENSE_IS6_EENSG_INSH_IKS6_SL_EEEEE19EmplaceDecomposableEJRSP_SL_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSV_DpOSW_"}
!52 = distinct !{!52, !53, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS3_18AttachmentOpsArrayENS3_16RenderPassHelperENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSB_9allocatorINSB_4pairIKS6_S7_EEEEEEE5applyINS0_12raw_hash_setISK_NS9_IS4_EENSC_IS4_EENSE_INSF_IKS4_SJ_EEEEE19EmplaceDecomposableEJRSP_SJ_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSV_DpOSW_: argument 0"}
!53 = distinct !{!53, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS3_18AttachmentOpsArrayENS3_16RenderPassHelperENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSB_9allocatorINSB_4pairIKS6_S7_EEEEEEE5applyINS0_12raw_hash_setISK_NS9_IS4_EENSC_IS4_EENSE_INSF_IKS4_SJ_EEEEE19EmplaceDecomposableEJRSP_SJ_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSV_DpOSW_"}
!54 = distinct !{!54, !55, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEEvE5applyINS0_12raw_hash_setISL_NSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE19EmplaceDecomposableEJRSR_SK_ESL_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSY_DpOSZ_: argument 0"}
!55 = distinct !{!55, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEEvE5applyINS0_12raw_hash_setISL_NSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE19EmplaceDecomposableEJRSR_SK_ESL_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSY_DpOSZ_"}
!56 = distinct !{!56, !57, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE7emplaceIJRSO_SK_ELi0EEENSG_INSR_8iteratorEbEEDpOT_: argument 0"}
!57 = distinct !{!57, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE7emplaceIJRSO_SK_ELi0EEENSG_INSR_8iteratorEbEEDpOT_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv: argument 0"}
!60 = distinct !{!60, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv: argument 0"}
!63 = distinct !{!63, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv: argument 0"}
!66 = distinct !{!66, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv"}
!67 = !{!68, !70, !72, !74, !76, !78}
!68 = distinct !{!68, !69, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE19EmplaceDecomposableclIS5_JRKNSB_21piecewise_construct_tENSB_5tupleIJRSG_EEENSP_IJOS6_EEEEEENSF_INSJ_8iteratorEbEERKT_DpOT0_: argument 0"}
!69 = distinct !{!69, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE19EmplaceDecomposableclIS5_JRKNSB_21piecewise_construct_tENSB_5tupleIJRSG_EEENSP_IJOS6_EEEEEENSF_INSJ_8iteratorEbEERKT_DpOT0_"}
!70 = distinct !{!70, !71, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS6_16RenderPassHelperEEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSD_9allocatorINSD_4pairIKS7_S8_EEEEE19EmplaceDecomposableERSI_NSD_5tupleIJOS8_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSD_L19piecewise_constructEEclsr3stdE7declvalINSO_IJSS_EEEEEclsr3stdE7declvalIT1_EEEEOSR_NSH_ISV_SW_EE: argument 0"}
!71 = distinct !{!71, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS6_16RenderPassHelperEEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSD_9allocatorINSD_4pairIKS7_S8_EEEEE19EmplaceDecomposableERSI_NSD_5tupleIJOS8_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSD_L19piecewise_constructEEclsr3stdE7declvalINSO_IJSS_EEEEEclsr3stdE7declvalIT1_EEEEOSR_NSH_ISV_SW_EE"}
!72 = distinct !{!72, !73, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS5_16RenderPassHelperEEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSC_9allocatorINSC_4pairIKS6_S7_EEEEE19EmplaceDecomposableEJRSH_S7_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSN_DpOSO_: argument 0"}
!73 = distinct !{!73, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS5_16RenderPassHelperEEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSC_9allocatorINSC_4pairIKS6_S7_EEEEE19EmplaceDecomposableEJRSH_S7_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSN_DpOSO_"}
!74 = distinct !{!74, !75, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS3_16RenderPassHelperEE5applyINS0_12raw_hash_setIS6_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSC_9allocatorINSC_4pairIKS4_S5_EEEEE19EmplaceDecomposableEJRSH_S5_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSN_DpOSO_: argument 0"}
!75 = distinct !{!75, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS3_16RenderPassHelperEE5applyINS0_12raw_hash_setIS6_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSC_9allocatorINSC_4pairIKS4_S5_EEEEE19EmplaceDecomposableEJRSH_S5_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSN_DpOSO_"}
!76 = distinct !{!76, !77, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEEvE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSE_9allocatorINSE_4pairIKS5_S6_EEEEE19EmplaceDecomposableEJRSJ_S6_ES7_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSQ_DpOSR_: argument 0"}
!77 = distinct !{!77, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEEvE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSE_9allocatorINSE_4pairIKS5_S6_EEEEE19EmplaceDecomposableEJRSJ_S6_ES7_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSQ_DpOSR_"}
!78 = distinct !{!78, !79, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE7emplaceIJRSG_S6_ELi0EEENSF_INSJ_8iteratorEbEEDpOT_: argument 0"}
!79 = distinct !{!79, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk18AttachmentOpsArrayENS4_16RenderPassHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE7emplaceIJRSG_S6_ELi0EEENSF_INSJ_8iteratorEbEEDpOT_"}
!80 = distinct !{!80, !36}
!81 = distinct !{!81, !36}
!82 = !{!83, !85}
!83 = distinct !{!83, !84, !"_ZN2rx2vk13GarbageObject3GetINS0_8PipelineEP12VkPipeline_TEES1_PNS0_13WrappedObjectIT_T0_EE: argument 0"}
!84 = distinct !{!84, !"_ZN2rx2vk13GarbageObject3GetINS0_8PipelineEP12VkPipeline_TEES1_PNS0_13WrappedObjectIT_T0_EE"}
!85 = distinct !{!85, !86, !"_ZN2rx2vk10GetGarbageINS0_8PipelineEEENS0_13GarbageObjectEPT_: argument 0"}
!86 = distinct !{!86, !"_ZN2rx2vk10GetGarbageINS0_8PipelineEEENS0_13GarbageObjectEPT_"}
!87 = distinct !{!87, !36}
!88 = distinct !{!88, !36}
!89 = distinct !{!89, !36}
!90 = distinct !{!90, !36}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKS4_JNS3_8PipelineEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!93 = distinct !{!93, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk20GraphicsPipelineDescENS3_14PipelineHelperEEENS_22__unordered_map_hasherIS4_S6_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKS4_JNS3_8PipelineEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_"}
!94 = distinct !{!94, !36}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKS4_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk23DescriptorSetLayoutDescENS3_10RefCountedINS3_19DescriptorSetLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKS4_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_"}
!98 = distinct !{!98, !36}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKS4_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!101 = distinct !{!101, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk18PipelineLayoutDescENS3_10RefCountedINS3_14PipelineLayoutEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKS4_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_"}
!102 = distinct !{!102, !36}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRmJS6_EEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISO_EEEEEEmOT_DpOT0_: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImN2rx2vk10RefCountedINS3_22SamplerYcbcrConversionEEEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRmJS6_EEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISO_EEEEEEmOT_DpOT0_"}
!106 = distinct !{!106, !36}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKS4_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2rx2vk11SamplerDescENS3_10RefCountedINS3_13SamplerHelperEEEEENS_22__unordered_map_hasherIS4_S8_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKS4_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEmOT_DpOT0_"}
!110 = distinct !{!110, !36}
