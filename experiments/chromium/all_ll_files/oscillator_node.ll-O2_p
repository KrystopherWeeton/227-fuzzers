; ModuleID = '../../third_party/blink/renderer/modules/webaudio/oscillator_node.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/oscillator_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.54" }
%"class.blink::PersistentBase.54" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.59" }
%"class.WTF::HashTable.59" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.61", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.63", i32, [4 x i8], %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.241", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.179", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.182", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"struct.std::__1::pair.209"*, i32, i32 }
%"struct.std::__1::pair.209" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.404" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::OscillatorHandler" = type { %"class.blink::AudioScheduledSourceHandler.base", i8, %class.scoped_refptr.367, %class.scoped_refptr.367, i8, double, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::CrossThreadWeakPersistent" }
%"class.blink::AudioScheduledSourceHandler.base" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"class.base::SupportsWeakPtr.362", %"class.WTF::Mutex", double, double, %"struct.std::__1::atomic.363", [4 x i8], %class.scoped_refptr.258, i8 }>
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.350", %"class.WTF::Vector.356", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.348" }
%"class.blink::PersistentNodePtr.348" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::BaseAudioContext"* }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.35", %"class.blink::Member.36", %"class.blink::HeapVector.38", i8, %class.scoped_refptr.258, i8, %"class.blink::Member.260", i8, %class.scoped_refptr.262, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.316", %"class.blink::Member.322", %"class.blink::Member.322", %"class.blink::Member.322", %"class.blink::Member.322", %class.scoped_refptr.329, %"class.blink::Member.330", %"class.blink::WorkerThread"* }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.10"* }
%"class.blink::HeapVector.10" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.11"* }
%"class.WTF::Vector.11" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.26" }
%"class.blink::WeakMember.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.28" }
%"class.blink::HeapHashSet.28" = type { %"class.WTF::HashSet.31" }
%"class.WTF::HashSet.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"class.blink::WeakMember.34"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.34" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.13", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.19", %"class.blink::HeapHashSet" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.424", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.426", %"class.blink::Member.430", %"class.blink::Member.432", %"class.blink::Member.434", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::HeapObserverSet.444", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::Member.456", %"class.blink::Member.458", %"class.blink::Member.460", %"class.blink::Member.462", %"class.blink::Member.464", %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.503", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.517", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.411" }
%"class.blink::HeapHashMap.411" = type { %"class.WTF::HashMap.414" }
%"class.WTF::HashMap.414" = type { %"class.WTF::HashTable.415" }
%"class.WTF::HashTable.415" = type <{ %"struct.WTF::KeyValuePair.417"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.417" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.418" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.17", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.444" = type { i32, [4 x i8], %"class.blink::HeapHashSet.445" }
%"class.blink::HeapHashSet.445" = type { %"class.WTF::HashSet.448" }
%"class.WTF::HashSet.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"class.blink::WeakMember.451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.451" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.474" }
%"class.WTF::Deque.474" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.477" }
%"class.WTF::VectorBuffer.477" = type { %"class.WTF::VectorBufferBase.478" }
%"class.WTF::VectorBufferBase.478" = type { %"class.std::__1::unique_ptr.479"*, i32, i32 }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.485", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.485" = type { %"class.std::__1::__bitset.486" }
%"class.std::__1::__bitset.486" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.487", i64, %"class.absl::optional.492", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.487" = type { %"class.absl::optional_internal::optional_data.488" }
%"class.absl::optional_internal::optional_data.488" = type { %"class.absl::optional_internal::optional_data_base.489" }
%"class.absl::optional_internal::optional_data_base.489" = type { %"class.absl::optional_internal::optional_data_dtor_base.490" }
%"class.absl::optional_internal::optional_data_dtor_base.490" = type { i8, %union.anon.491 }
%union.anon.491 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.492" = type { %"class.absl::optional_internal::optional_data.493" }
%"class.absl::optional_internal::optional_data.493" = type { %"class.absl::optional_internal::optional_data_base.494" }
%"class.absl::optional_internal::optional_data_base.494" = type { %"class.absl::optional_internal::optional_data_dtor_base.495" }
%"class.absl::optional_internal::optional_data_dtor_base.495" = type { i8, %union.anon.496 }
%union.anon.496 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.497" }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.503" = type { %"class.WTF::HashSet.506" }
%"class.WTF::HashSet.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"class.blink::WeakMember.509"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.509" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.510 }
%class.scoped_refptr.510 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.266", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.266" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.267" }
%"struct.std::__1::atomic.267" = type { %"struct.std::__1::__atomic_base.268" }
%"struct.std::__1::__atomic_base.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__cxx_atomic_impl.270" }
%"struct.std::__1::__cxx_atomic_impl.270" = type { %"struct.std::__1::__cxx_atomic_base_impl.271" }
%"struct.std::__1::__cxx_atomic_base_impl.271" = type { i8 }
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.35" = type { i8 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.24", %class.scoped_refptr.262, %class.scoped_refptr.276, %"class.blink::HeapVector.332", %"class.blink::HeapVector.340" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.276 = type { %"class.blink::AudioHandler"* }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.350", %"class.WTF::Vector.356", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.332" = type { %"class.WTF::Vector.335" }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337" }
%"class.WTF::VectorBufferBase.337" = type { %"class.blink::Member.338"*, i32, i32 }
%"class.blink::Member.338" = type opaque
%"class.blink::HeapVector.340" = type { %"class.WTF::Vector.343" }
%"class.WTF::Vector.343" = type { %"class.WTF::VectorBuffer.344" }
%"class.WTF::VectorBuffer.344" = type { %"class.WTF::VectorBufferBase.345" }
%"class.WTF::VectorBufferBase.345" = type { %"class.blink::Member.346"*, i32, i32 }
%"class.blink::Member.346" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.48", i32, %"class.blink::Member.49", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.250", %"class.blink::SelfKeepAlive.254" }
%"class.blink::ThreadState::PrefinalizerRegistration.48" = type { i8 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.53, %"class.blink::Member.245", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.53 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.247" }
%"class.blink::Persistent.247" = type { %"class.blink::PersistentBase.248" }
%"class.blink::PersistentBase.248" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.49", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.250", %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.250" = type { %"class.v8::TracedReference.251" }
%"class.v8::TracedReference.251" = type { %"class.v8::BasicTracedReference.252" }
%"class.v8::BasicTracedReference.252" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.254" = type { %"class.blink::Persistent.255" }
%"class.blink::Persistent.255" = type { %"class.blink::PersistentBase.256" }
%"class.blink::PersistentBase.256" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type opaque
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.316" = type { %"class.WTF::HashSet.319" }
%"class.WTF::HashSet.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"class.blink::Member.44"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::PeriodicWave"* }
%class.scoped_refptr.329 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.99", i8, [7 x i8] }>
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type opaque
%"class.blink::WorkerThread" = type opaque
%class.scoped_refptr.262 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted.263", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.272", %"class.WTF::Vector.277", i8, [3 x i8], i32, %"class.WTF::HashSet.282", %"class.WTF::HashSet.282", %"class.WTF::HashSet.286", %"class.WTF::HashSet.290", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", i8, [7 x i8], %"class.WTF::HashSet.272", %"class.WTF::Vector.277", %class.scoped_refptr.258, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.263" = type { %"class.base::RefCountedThreadSafe.264" }
%"class.base::RefCountedThreadSafe.264" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashSet.282" = type { %"class.WTF::HashTable.283" }
%"class.WTF::HashTable.283" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.375", i8, [7 x i8] }>
%"class.WTF::Vector.375" = type { %"class.WTF::VectorBuffer.376" }
%"class.WTF::VectorBuffer.376" = type { %"class.WTF::VectorBufferBase.377" }
%"class.WTF::VectorBufferBase.377" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.blink::AudioNodeOutput" = type { %"class.blink::AudioHandler"*, i32, i32, %class.scoped_refptr.294, %class.scoped_refptr.294, i8, [7 x i8], %"class.WTF::HashSet.308", i8, i8, i32, i32, [4 x i8], %"class.WTF::HashSet.312" }
%class.scoped_refptr.294 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.295", i32, %"class.WTF::Vector.297", i32, float }
%"class.WTF::ThreadSafeRefCounted.295" = type { %"class.base::RefCountedThreadSafe.296" }
%"class.base::RefCountedThreadSafe.296" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.297" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299", [64 x i8] }
%"class.WTF::VectorBufferBase.299" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.300", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::AudioArray"* }
%"class.WTF::HashSet.308" = type { %"class.WTF::HashTable.309" }
%"class.WTF::HashTable.309" = type <{ %"class.blink::AudioNodeInput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeInput" = type opaque
%"class.WTF::HashSet.312" = type { %"class.WTF::HashTable.313" }
%"class.WTF::HashTable.313" = type <{ %"class.blink::AudioParamHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.290" = type { %"class.WTF::HashTable.291" }
%"class.WTF::HashTable.291" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %class.scoped_refptr.276*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { %class.scoped_refptr.276*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::Vector.350" = type { %"class.WTF::VectorBuffer.351" }
%"class.WTF::VectorBuffer.351" = type { %"class.WTF::VectorBufferBase.352" }
%"class.WTF::VectorBufferBase.352" = type { %"class.std::__1::unique_ptr.353"*, i32, i32 }
%"class.std::__1::unique_ptr.353" = type opaque
%"class.WTF::Vector.356" = type { %"class.WTF::VectorBuffer.357" }
%"class.WTF::VectorBuffer.357" = type { %"class.WTF::VectorBufferBase.358" }
%"class.WTF::VectorBufferBase.358" = type { %"class.std::__1::unique_ptr.359"*, i32, i32 }
%"class.std::__1::unique_ptr.359" = type opaque
%"class.base::SupportsWeakPtr.362" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i32 }
%class.scoped_refptr.258 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259" }>
%"class.base::RefCountedThreadSafe.259" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.367 = type { %"class.blink::AudioParamHandler"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.368" }
%"class.blink::PersistentBase.368" = type { %"class.blink::PeriodicWave"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.369" }
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { %"class.blink::PersistentNode"* }
%"class.blink::PeriodicWave" = type { %"class.blink::ScriptWrappable", i64, float, i32, float, float, float, %"class.WTF::Vector.324" }
%"class.WTF::Vector.324" = type { %"class.WTF::VectorBuffer.325" }
%"class.WTF::VectorBuffer.325" = type { %"class.WTF::VectorBufferBase.326" }
%"class.WTF::VectorBufferBase.326" = type { %"class.std::__1::unique_ptr.300"*, i32, i32 }
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.373", i32, %"class.WTF::String", %"struct.std::__1::atomic.380", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.329, %class.scoped_refptr.294 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.375", i8 }>
%"class.WTF::ThreadSafeRefCounted.373" = type { %"class.base::RefCountedThreadSafe.374" }
%"class.base::RefCountedThreadSafe.374" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.380" = type { %"struct.std::__1::__atomic_base.381" }
%"struct.std::__1::__atomic_base.381" = type { %"struct.std::__1::__cxx_atomic_impl.382" }
%"struct.std::__1::__cxx_atomic_impl.382" = type { %"struct.std::__1::__cxx_atomic_base_impl.383" }
%"struct.std::__1::__cxx_atomic_base_impl.383" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.384", %"class.WTF::HashSet.395", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { %"class.std::__1::unique_ptr.387"*, i32, i32 }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.399", double, float, [4 x i8], %"class.std::__1::unique_ptr.387", i8, [7 x i8] }>
%"class.WTF::Vector.399" = type { %"class.WTF::VectorBuffer.400" }
%"class.WTF::VectorBuffer.400" = type { %"class.WTF::VectorBufferBase.401" }
%"class.WTF::VectorBufferBase.401" = type { float*, i32, i32 }
%"class.WTF::HashSet.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%"class.blink::OscillatorNode" = type { %"class.blink::AudioScheduledSourceNode", %"class.blink::Member.542", %"class.blink::Member.542", %"class.blink::Member.322" }
%"class.blink::AudioScheduledSourceNode" = type { %"class.blink::AudioNode", %"class.blink::ActiveScriptWrappable.541" }
%"class.blink::ActiveScriptWrappable.541" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::AudioParam"* }
%"class.blink::AudioParam" = type { %"class.blink::ScriptWrappable", %"class.blink::InspectorHelperMixin", %class.scoped_refptr.367, %"class.blink::Member.24", %class.scoped_refptr.262 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.690 }
%union.anon.690 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::AudioScheduledSourceHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"class.base::SupportsWeakPtr.362", %"class.WTF::Mutex", double, double, %"struct.std::__1::atomic.363", [4 x i8], %class.scoped_refptr.258, i8, [7 x i8] }>
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259", [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.250" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.524" }
%"class.blink::PersistentBase.524" = type { %"class.blink::PeriodicWave"*, %"class.blink::CrossThreadPersistentNodePtr.525" }
%"class.blink::CrossThreadPersistentNodePtr.525" = type { %"struct.std::__1::atomic.369" }
%"class.std::__1::tuple.531" = type { %"struct.std::__1::__tuple_impl.532" }
%"struct.std::__1::__tuple_impl.532" = type { %"class.std::__1::__tuple_leaf.533", %"class.std::__1::__tuple_leaf.534", %"class.std::__1::__tuple_leaf.535" }
%"class.std::__1::__tuple_leaf.533" = type { i64 }
%"class.std::__1::__tuple_leaf.534" = type { i64 }
%"class.std::__1::__tuple_leaf.535" = type { double }
%"class.blink::OscillatorOptions" = type { %"class.blink::AudioNodeOptions", i8, i8, float, float, %"class.blink::Member.322", %"class.WTF::String" }
%"class.blink::AudioNodeOptions" = type { %"class.blink::IDLDictionaryBase", i8, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.v8::Value" = type { i8 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.548", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.583", i32, i8, [3 x i8], %"class.blink::HeapVector.585", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.593", %"class.blink::Member.595", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.604", %"class.blink::Member.610", %"class.blink::Member.612", i8, [7 x i8] }>
%"class.blink::Supplementable.548" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.549" }
%"class.blink::HeapHashMap.549" = type { %"class.WTF::HashMap.552" }
%"class.WTF::HashMap.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"struct.WTF::KeyValuePair.555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.555" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.556" }
%"class.blink::Supplementable.556" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.557" }
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type { i8*, %"class.blink::Member.678" }
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::Supplement.680"* }
%"class.blink::Supplement.680" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.681" }
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.564, %"class.std::__1::unique_ptr.565", %"class.std::__1::unique_ptr.565", %"class.std::__1::unique_ptr.571", %"class.std::__1::unique_ptr.571", %"class.blink::Member.577", i32, [4 x i8], %"class.WTF::HashSet.579", i32, i32 }
%class.scoped_refptr.564 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.585" = type { %"class.WTF::Vector.588" }
%"class.WTF::Vector.588" = type { %"class.WTF::VectorBuffer.589" }
%"class.WTF::VectorBuffer.589" = type { %"class.WTF::VectorBufferBase.590" }
%"class.WTF::VectorBufferBase.590" = type { %"class.blink::Member.591"*, i32, i32 }
%"class.blink::Member.591" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.597", i32, i32 }
%"class.blink::HeapHashMap.597" = type { %"class.WTF::HashMap.600" }
%"class.WTF::HashMap.600" = type { %"class.WTF::HashTable.601" }
%"class.WTF::HashTable.601" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type opaque
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.614", %"class.blink::Member.616", %"class.blink::Member.614", %"class.blink::Member.614", %"class.blink::Member.618" }
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.622", %"class.blink::Member.624", %"class.blink::Member.616", %"class.blink::Member.626", %"class.blink::Member.626", %"class.blink::Member.650", %"class.blink::Member.652", %"class.blink::Member.654", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.659", %"class.blink::HeapVector.661" }
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.630" }
%"class.blink::HeapHashMap.630" = type { %"class.WTF::HashMap.633" }
%"class.WTF::HashMap.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"struct.WTF::KeyValuePair.636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.636" = type { %"class.WTF::AtomicString", %"class.blink::Member.637" }
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.641", i32, %"class.blink::HeapVector.643" }
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.643" = type { %"class.WTF::Vector.646" }
%"class.WTF::Vector.646" = type { %"class.WTF::VectorBuffer.647" }
%"class.WTF::VectorBuffer.647" = type { %"class.WTF::VectorBufferBase.648" }
%"class.WTF::VectorBufferBase.648" = type { %"class.blink::Member.641"*, i32, i32 }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.656" }
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::HeapHashMap.658"* }
%"class.blink::HeapHashMap.658" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.661" = type { %"class.WTF::Vector.664" }
%"class.WTF::Vector.664" = type { %"class.WTF::VectorBuffer.665" }
%"class.WTF::VectorBuffer.665" = type { %"class.WTF::VectorBufferBase.666" }
%"class.WTF::VectorBufferBase.666" = type { %"class.blink::Member.667"*, i32, i32 }
%"class.blink::Member.667" = type opaque
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::Node"* }
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.671" }
%"class.absl::optional.671" = type { %"class.absl::optional_internal::optional_data.672" }
%"class.absl::optional_internal::optional_data.672" = type { %"class.absl::optional_internal::optional_data_base.673" }
%"class.absl::optional_internal::optional_data_base.673" = type { %"class.absl::optional_internal::optional_data_dtor_base.674" }
%"class.absl::optional_internal::optional_data_dtor_base.674" = type { i8, %union.anon.675 }
%union.anon.675 = type { i64 }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.676", i8, [7 x i8] }>
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::EventListener"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj = comdat any

$_ZNK5blink27AudioScheduledSourceHandler22RequiresTailProcessingEv = comdat any

$_ZNK5blink27AudioScheduledSourceHandler8TailTimeEv = comdat any

$_ZNK5blink27AudioScheduledSourceHandler11LatencyTimeEv = comdat any

$_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv = comdat any

$_ZN5blink24AudioScheduledSourceNodeD2Ev = comdat any

$_ZN5blink14OscillatorNodeD0Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink14OscillatorNode18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZThn168_N5blink14OscillatorNodeD1Ev = comdat any

$_ZThn168_N5blink14OscillatorNodeD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE26DispatchHasPendingActivityEv = comdat any

$_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10AudioArrayIfE8AllocateEm = comdat any

$_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_12PeriodicWaveEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink17OscillatorHandlerE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::OscillatorHandler"*)* @_ZN5blink17OscillatorHandlerD2Ev to i8*), i8* bitcast (void (%"class.blink::OscillatorHandler"*)* @_ZN5blink17OscillatorHandlerD0Ev to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler7DisposeEv to i8*), i8* bitcast (%"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler7ContextEv to i8*), i8* bitcast (void (%"class.blink::OscillatorHandler"*, i32)* @_ZN5blink17OscillatorHandler7ProcessEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler10InitializeEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler12UninitializeEv to i8*), i8* bitcast (i32 (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler22NumberOfOutputChannelsEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler18ProcessIfNecessaryEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)* @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE to i8*), i8* bitcast (i1 (%"class.blink::AudioScheduledSourceHandler"*)* @_ZNK5blink27AudioScheduledSourceHandler22RequiresTailProcessingEv to i8*), i8* bitcast (double (%"class.blink::AudioScheduledSourceHandler"*)* @_ZNK5blink27AudioScheduledSourceHandler8TailTimeEv to i8*), i8* bitcast (double (%"class.blink::AudioScheduledSourceHandler"*)* @_ZNK5blink27AudioScheduledSourceHandler11LatencyTimeEv to i8*), i8* bitcast (i1 (%"class.blink::OscillatorHandler"*)* @_ZNK5blink17OscillatorHandler17PropagatesSilenceEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler15SetChannelCountEjRNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler10PullInputsEj to i8*), i8* bitcast (void (%"class.blink::OscillatorHandler"*)* @_ZN5blink17OscillatorHandler25HandleStoppableSourceNodeEv to i8*), i8* bitcast (void (%"class.blink::AudioScheduledSourceHandler"*)* @_ZN5blink27AudioScheduledSourceHandler20FinishWithoutOnEndedEv to i8*), i8* bitcast (void (%"class.blink::AudioScheduledSourceHandler"*)* @_ZN5blink27AudioScheduledSourceHandler6FinishEv to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"sine\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"square\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"sawtooth\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"triangle\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"custom\00", align 1
@.str.5 = private unnamed_addr constant [102 x i8] c"'type' cannot be set directly to 'custom'.  Use setPeriodicWave() to create a custom Oscillator type.\00", align 1
@_ZN5blink27AudioScheduledSourceHandler12kUnknownTimeE = external local_unnamed_addr constant double, align 8
@_ZTVN5blink14OscillatorNodeE = hidden unnamed_addr constant { [31 x i8*], [5 x i8*], [7 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::AudioScheduledSourceNode"*)* @_ZN5blink24AudioScheduledSourceNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::OscillatorNode"*)* @_ZN5blink14OscillatorNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::AudioScheduledSourceNode"*)* @_ZNK5blink24AudioScheduledSourceNode18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::OscillatorNode"*, %"class.blink::Visitor"*)* @_ZNK5blink14OscillatorNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::OscillatorNode"*)* @_ZNK5blink14OscillatorNode18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::OscillatorNode"*)* @_ZN5blink14OscillatorNode15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::OscillatorNode"*)* @_ZN5blink14OscillatorNode21ReportWillBeDestroyedEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::OscillatorNode"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink14OscillatorNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::OscillatorNode"*)* @_ZThn72_N5blink14OscillatorNode15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::OscillatorNode"*)* @_ZThn72_N5blink14OscillatorNode21ReportWillBeDestroyedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::OscillatorNode"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink14OscillatorNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::OscillatorNode"*)* @_ZThn168_N5blink14OscillatorNodeD1Ev to i8*), i8* bitcast (void (%"class.blink::OscillatorNode"*)* @_ZThn168_N5blink14OscillatorNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable.541"*)* @_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable.541"*)* @_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE26DispatchHasPendingActivityEv to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [64 x i8] c"A PeriodicWave must be specified if the type is set to \22custom\22\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink27AudioScheduledSourceHandlerE = external unnamed_addr constant { [25 x i8*] }, align 8
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink14OscillatorNode18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.10 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.11 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.13 = private unnamed_addr constant [54 x i8] c"n <= std::numeric_limits<unsigned>::max() / sizeof(T)\00", align 1
@.str.14 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/audio/audio_array.h\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"allocation_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioArray<float>]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink17OscillatorHandlerC1ERNS_9AudioNodeEfRKN3WTF6StringEPNS_12PeriodicWaveERNS_17AudioParamHandlerESA_ = hidden unnamed_addr alias void (%"class.blink::OscillatorHandler"*, %"class.blink::AudioNode"*, float, %"class.WTF::String"*, %"class.blink::PeriodicWave"*, %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"*), void (%"class.blink::OscillatorHandler"*, %"class.blink::AudioNode"*, float, %"class.WTF::String"*, %"class.blink::PeriodicWave"*, %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"*)* @_ZN5blink17OscillatorHandlerC2ERNS_9AudioNodeEfRKN3WTF6StringEPNS_12PeriodicWaveERNS_17AudioParamHandlerESA_
@_ZN5blink17OscillatorHandlerD1Ev = hidden unnamed_addr alias void (%"class.blink::OscillatorHandler"*), void (%"class.blink::OscillatorHandler"*)* @_ZN5blink17OscillatorHandlerD2Ev
@_ZN5blink14OscillatorNodeC1ERNS_16BaseAudioContextERKN3WTF6StringEPNS_12PeriodicWaveE = hidden unnamed_addr alias void (%"class.blink::OscillatorNode"*, %"class.blink::BaseAudioContext"*, %"class.WTF::String"*, %"class.blink::PeriodicWave"*), void (%"class.blink::OscillatorNode"*, %"class.blink::BaseAudioContext"*, %"class.WTF::String"*, %"class.blink::PeriodicWave"*)* @_ZN5blink14OscillatorNodeC2ERNS_16BaseAudioContextERKN3WTF6StringEPNS_12PeriodicWaveE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OscillatorHandlerC2ERNS_9AudioNodeEfRKN3WTF6StringEPNS_12PeriodicWaveERNS_17AudioParamHandlerESA_(%"class.blink::OscillatorHandler"*, %"class.blink::AudioNode"* dereferenceable(168), float, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::PeriodicWave"*, %"class.blink::AudioParamHandler"* dereferenceable(208), %"class.blink::AudioParamHandler"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.logging::CheckError", align 8
  %17 = alloca %"class.logging::CheckError", align 8
  %18 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioScheduledSourceHandler"*
  tail call void @_ZN5blink27AudioScheduledSourceHandlerC2ENS_12AudioHandler8NodeTypeERNS_9AudioNodeEf(%"class.blink::AudioScheduledSourceHandler"* %18, i32 2, %"class.blink::AudioNode"* dereferenceable(168) %1, float %2) #11
  %19 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink17OscillatorHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 2, i32 0
  store %"class.blink::AudioParamHandler"* %5, %"class.blink::AudioParamHandler"** %20, align 8
  %21 = icmp eq %"class.blink::AudioParamHandler"* %5, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.logging::CheckError"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %17) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %7, %22, %26
  %30 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 3, i32 0
  store %"class.blink::AudioParamHandler"* %6, %"class.blink::AudioParamHandler"** %30, align 8
  %31 = icmp eq %"class.blink::AudioParamHandler"* %6, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.logging::CheckError"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #11
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %16) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  br label %39

39:                                               ; preds = %29, %32, %36
  %40 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 4
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 5
  store double 0.000000e+00, double* %41, align 8
  %42 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 6
  %43 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %44 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 0, i32 10, i32 0
  %45 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %45, i64 0, i32 7
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.blink::AudioArray"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 20, i1 false) #11
  call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %42, i64 %48) #11
  %50 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 7
  %51 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %44, align 8
  %52 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %51, i64 0, i32 7
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = bitcast %"class.blink::AudioArray"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 20, i1 false) #11
  call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %50, i64 %54) #11
  %56 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8
  %57 = bitcast %"class.blink::CrossThreadWeakPersistent"* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #11
  %58 = icmp eq %"class.blink::PeriodicWave"* %4, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %39
  %60 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %60) #11
  %61 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %62 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %63 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %62, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %63) #11
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %61, %"class.blink::PeriodicWave"* nonnull %4) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %63) #11
  %64 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %64, align 1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %60) #11
  br label %198

65:                                               ; preds = %39
  %66 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %70, label %74

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %71, align 8
  %72 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %73 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %72, i64* %73, align 8
  br label %82

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 1
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %80 = bitcast i8** %79 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %80, align 8
  %81 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %82

82:                                               ; preds = %74, %70
  %83 = phi i64 [ %81, %74 ], [ %72, %70 ]
  %84 = phi i32 [ %77, %74 ], [ 0, %70 ]
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %84, i32* %85, align 8
  %86 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %83, i64* %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 4, i32* %89, align 8
  %90 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  br i1 %90, label %91, label %99

91:                                               ; preds = %82
  %92 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %43) #11
  %93 = call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"* %92, i32 0) #11
  %94 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %94) #11
  %95 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %96 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %97 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %96, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %97) #11
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %95, %"class.blink::PeriodicWave"* %93) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %97) #11
  %98 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %98, align 1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %94) #11
  store i8 0, i8* %98, align 1
  br label %198

99:                                               ; preds = %82
  %100 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #11
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %104, align 8
  %105 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %106 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %105, i64* %106, align 8
  br label %115

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %113 = bitcast i8** %112 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %113, align 8
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %115

115:                                              ; preds = %107, %103
  %116 = phi i64 [ %114, %107 ], [ %105, %103 ]
  %117 = phi i32 [ %110, %107 ], [ 0, %103 ]
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %117, i32* %118, align 8
  %119 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #11
  %120 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %116, i64* %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %121, align 8
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 6, i32* %122, align 8
  %123 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #11
  br i1 %123, label %124, label %132

124:                                              ; preds = %115
  %125 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %43) #11
  %126 = call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"* %125, i32 1) #11
  %127 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %127) #11
  %128 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %129 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %130 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %129, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %130) #11
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %128, %"class.blink::PeriodicWave"* %126) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %130) #11
  %131 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %131, align 1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %127) #11
  store i8 1, i8* %131, align 1
  br label %198

132:                                              ; preds = %115
  %133 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #11
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %136, label %140

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %137, align 8
  %138 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %139 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %138, i64* %139, align 8
  br label %148

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 1
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %146 = bitcast i8** %145 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %146, align 8
  %147 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %148

148:                                              ; preds = %140, %136
  %149 = phi i64 [ %147, %140 ], [ %138, %136 ]
  %150 = phi i32 [ %143, %140 ], [ 0, %136 ]
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %150, i32* %151, align 8
  %152 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #11
  %153 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %149, i64* %153, align 8
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8** %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 8, i32* %155, align 8
  %156 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #11
  br i1 %156, label %157, label %165

157:                                              ; preds = %148
  %158 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %43) #11
  %159 = call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"* %158, i32 2) #11
  %160 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %160) #11
  %161 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %162 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %163 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %162, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %163) #11
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %161, %"class.blink::PeriodicWave"* %159) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %163) #11
  %164 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %164, align 1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %160) #11
  store i8 2, i8* %164, align 1
  br label %198

165:                                              ; preds = %148
  %166 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #11
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %169, label %173

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %170, align 8
  %171 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %172 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %171, i64* %172, align 8
  br label %181

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %174, align 8
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 1
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %179 = bitcast i8** %178 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %177, %"class.WTF::StringImpl"** %179, align 8
  %180 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %181

181:                                              ; preds = %173, %169
  %182 = phi i64 [ %180, %173 ], [ %171, %169 ]
  %183 = phi i32 [ %176, %173 ], [ 0, %169 ]
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %183, i32* %184, align 8
  %185 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #11
  %186 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %182, i64* %186, align 8
  %187 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8** %187, align 8
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 8, i32* %188, align 8
  %189 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #11
  br i1 %189, label %190, label %198

190:                                              ; preds = %181
  %191 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %43) #11
  %192 = call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"* %191, i32 3) #11
  %193 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %193) #11
  %194 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %195 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %196 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %195, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %196) #11
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %194, %"class.blink::PeriodicWave"* %192) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %196) #11
  %197 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %197, align 1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %193) #11
  store i8 3, i8* %197, align 1
  br label %198

198:                                              ; preds = %91, %157, %181, %190, %124, %59
  call void @_ZN5blink12AudioHandler9AddOutputEj(%"class.blink::AudioHandler"* %43, i32 1) #11
  call void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"* %43) #11
  ret void
}

declare void @_ZN5blink27AudioScheduledSourceHandlerC2ENS_12AudioHandler8NodeTypeERNS_9AudioNodeEf(%"class.blink::AudioScheduledSourceHandler"*, i32, %"class.blink::AudioNode"* dereferenceable(168), float) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OscillatorHandler15SetPeriodicWaveEPNS_12PeriodicWaveE(%"class.blink::OscillatorHandler"*, %"class.blink::PeriodicWave"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #11
  %4 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %5 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %6 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #11
  tail call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %4, %"class.blink::PeriodicWave"* %1) #11
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #11
  %7 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %7, align 1
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17OscillatorHandler7SetTypeEh(%"class.blink::OscillatorHandler"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = icmp ult i8 %1, 4
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = zext i8 %1 to i32
  %6 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %7 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %6) #11
  %8 = tail call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"* %7, i32 %5) #11
  %9 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #11
  %10 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %11 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #11
  tail call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %10, %"class.blink::PeriodicWave"* %8) #11
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #11
  %13 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %13, align 1
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #11
  store i8 %1, i8* %13, align 1
  br label %14

14:                                               ; preds = %2, %4
  %15 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %15
}

declare void @_ZN5blink12AudioHandler9AddOutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::OscillatorHandler"* @_ZN5blink17OscillatorHandler6CreateERNS_9AudioNodeEfRKN3WTF6StringEPNS_12PeriodicWaveERNS_17AudioParamHandlerESA_(%"class.blink::AudioNode"* dereferenceable(168), float, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::PeriodicWave"*, %"class.blink::AudioParamHandler"* dereferenceable(208), %"class.blink::AudioParamHandler"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %7 = tail call noalias i8* @malloc(i64 320) #11
  %8 = bitcast i8* %7 to %"class.blink::OscillatorHandler"*
  tail call void @_ZN5blink17OscillatorHandlerC2ERNS_9AudioNodeEfRKN3WTF6StringEPNS_12PeriodicWaveERNS_17AudioParamHandlerESA_(%"class.blink::OscillatorHandler"* %8, %"class.blink::AudioNode"* dereferenceable(168) %0, float %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::PeriodicWave"* %3, %"class.blink::AudioParamHandler"* dereferenceable(208) %4, %"class.blink::AudioParamHandler"* dereferenceable(208) %5)
  ret %"class.blink::OscillatorHandler"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OscillatorHandlerD2Ev(%"class.blink::OscillatorHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink17OscillatorHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  tail call void @_ZN5blink12AudioHandler12UninitializeEv(%"class.blink::AudioHandler"* %3) #11
  %4 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0, i32 1
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #11
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #11
  br label %22

22:                                               ; preds = %1, %21
  %23 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 7
  %24 = bitcast %"class.blink::AudioArray"* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %25) #11
  %26 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 6
  %27 = bitcast %"class.blink::AudioArray"* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %28) #11
  %29 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 3, i32 0
  %30 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %29, align 8
  %31 = icmp eq %"class.blink::AudioParamHandler"* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %30, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.374", %"class.base::RefCountedThreadSafe.374"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe.374", %"class.base::RefCountedThreadSafe.374"* %33, i64 -15
  %39 = bitcast %"class.base::RefCountedThreadSafe.374"* %38 to %"class.blink::AudioParamHandler"*
  %40 = bitcast %"class.base::RefCountedThreadSafe.374"* %38 to void (%"class.blink::AudioParamHandler"*)***
  %41 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %41, i64 1
  %43 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %42, align 8
  tail call void %43(%"class.blink::AudioParamHandler"* nonnull %39) #11
  br label %44

44:                                               ; preds = %22, %32, %37
  %45 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 2, i32 0
  %46 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %45, align 8
  %47 = icmp eq %"class.blink::AudioParamHandler"* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %46, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.374", %"class.base::RefCountedThreadSafe.374"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe.374", %"class.base::RefCountedThreadSafe.374"* %49, i64 -15
  %55 = bitcast %"class.base::RefCountedThreadSafe.374"* %54 to %"class.blink::AudioParamHandler"*
  %56 = bitcast %"class.base::RefCountedThreadSafe.374"* %54 to void (%"class.blink::AudioParamHandler"*)***
  %57 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %57, i64 1
  %59 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %58, align 8
  tail call void %59(%"class.blink::AudioParamHandler"* nonnull %55) #11
  br label %60

60:                                               ; preds = %44, %48, %53
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink27AudioScheduledSourceHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %61 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 8, i32 0
  %62 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %61, align 8
  %63 = icmp eq %"class.base::SingleThreadTaskRunner"* %62, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %62, i64 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe.259", %"class.base::RefCountedThreadSafe.259"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw sub i32* %66, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.base::RefCountedThreadSafe.259", %"class.base::RefCountedThreadSafe.259"* %65, i64 -2
  %71 = bitcast %"class.base::RefCountedThreadSafe.259"* %70 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %71) #11
  br label %72

72:                                               ; preds = %60, %64, %69
  %73 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %73) #11
  %74 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %74) #11
  tail call void @_ZN5blink12AudioHandlerD2Ev(%"class.blink::AudioHandler"* %3) #11
  ret void
}

declare void @_ZN5blink12AudioHandler12UninitializeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OscillatorHandlerD0Ev(%"class.blink::OscillatorHandler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17OscillatorHandlerD2Ev(%"class.blink::OscillatorHandler"* %0) #11
  %2 = bitcast %"class.blink::OscillatorHandler"* %0 to i8*
  tail call void @free(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17OscillatorHandler7GetTypeEv(%"class.blink::OscillatorHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %10 [
    i8 0, label %5
    i8 1, label %6
    i8 2, label %7
    i8 3, label %8
    i8 4, label %9
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #11
  br label %11

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 6) #11
  br label %11

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #11
  br label %11

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 8) #11
  br label %11

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #11
  br label %11

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #11
  br label %11

11:                                               ; preds = %10, %9, %8, %7, %6, %5
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OscillatorHandler7SetTypeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::OscillatorHandler"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %19, align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %30

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %30

30:                                               ; preds = %22, %18
  %31 = phi i64 [ %29, %22 ], [ %20, %18 ]
  %32 = phi i32 [ %25, %22 ], [ 0, %18 ]
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %32, i32* %33, align 8
  %34 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %31, i64* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 4, i32* %37, align 8
  %38 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  br i1 %38, label %39, label %48

39:                                               ; preds = %30
  %40 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %41 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %40) #11
  %42 = call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"* %41, i32 0) #11
  %43 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %43) #11
  %44 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %45 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %46 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %45, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %46) #11
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %44, %"class.blink::PeriodicWave"* %42) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %46) #11
  %47 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %47, align 1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %43) #11
  store i8 0, i8* %47, align 1
  br label %176

48:                                               ; preds = %30
  %49 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %53, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %55 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %54, i64* %55, align 8
  br label %64

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %62 = bitcast i8** %61 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %62, align 8
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %64

64:                                               ; preds = %56, %52
  %65 = phi i64 [ %63, %56 ], [ %54, %52 ]
  %66 = phi i32 [ %59, %56 ], [ 0, %52 ]
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %66, i32* %67, align 8
  %68 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #11
  %69 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %65, i64* %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 6, i32* %71, align 8
  %72 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  br i1 %72, label %73, label %82

73:                                               ; preds = %64
  %74 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %75 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %74) #11
  %76 = call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"* %75, i32 1) #11
  %77 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %77) #11
  %78 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %79 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %80 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %79, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %80) #11
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %78, %"class.blink::PeriodicWave"* %76) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %80) #11
  %81 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %81, align 1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %77) #11
  store i8 1, i8* %81, align 1
  br label %176

82:                                               ; preds = %64
  %83 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #11
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %87, align 8
  %88 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %89 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %88, i64* %89, align 8
  br label %98

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 1
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %96 = bitcast i8** %95 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %96, align 8
  %97 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %98

98:                                               ; preds = %90, %86
  %99 = phi i64 [ %97, %90 ], [ %88, %86 ]
  %100 = phi i32 [ %93, %90 ], [ 0, %86 ]
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %100, i32* %101, align 8
  %102 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #11
  %103 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %99, i64* %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8** %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 8, i32* %105, align 8
  %106 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #11
  br i1 %106, label %107, label %116

107:                                              ; preds = %98
  %108 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %109 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %108) #11
  %110 = call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"* %109, i32 2) #11
  %111 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %111) #11
  %112 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %113 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %114 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %113, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %114) #11
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %112, %"class.blink::PeriodicWave"* %110) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %114) #11
  %115 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %115, align 1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %111) #11
  store i8 2, i8* %115, align 1
  br label %176

116:                                              ; preds = %98
  %117 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #11
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %121, align 8
  %122 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %123 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %122, i64* %123, align 8
  br label %132

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %130 = bitcast i8** %129 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %130, align 8
  %131 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %132

132:                                              ; preds = %124, %120
  %133 = phi i64 [ %131, %124 ], [ %122, %120 ]
  %134 = phi i32 [ %127, %124 ], [ 0, %120 ]
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %134, i32* %135, align 8
  %136 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #11
  %137 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %133, i64* %137, align 8
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8** %138, align 8
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 8, i32* %139, align 8
  %140 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #11
  br i1 %140, label %141, label %150

141:                                              ; preds = %132
  %142 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %143 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %142) #11
  %144 = call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"* %143, i32 3) #11
  %145 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %145) #11
  %146 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0
  %147 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %148 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %147, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %148) #11
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %146, %"class.blink::PeriodicWave"* %144) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %148) #11
  %149 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 1
  store i8 4, i8* %149, align 1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %145) #11
  store i8 3, i8* %149, align 1
  br label %176

150:                                              ; preds = %132
  %151 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #11
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %154, label %158

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %155, align 8
  %156 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %157 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %156, i64* %157, align 8
  br label %166

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %152, %"class.WTF::StringImpl"** %159, align 8
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 1
  %163 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %164 = bitcast i8** %163 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %164, align 8
  %165 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %166

166:                                              ; preds = %158, %154
  %167 = phi i64 [ %165, %158 ], [ %156, %154 ]
  %168 = phi i32 [ %161, %158 ], [ 0, %154 ]
  %169 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %168, i32* %169, align 8
  %170 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #11
  %171 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %167, i64* %171, align 8
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8** %172, align 8
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 6, i32* %173, align 8
  %174 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #11
  br i1 %174, label %175, label %176

175:                                              ; preds = %166
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %176

176:                                              ; preds = %73, %141, %175, %166, %107, %39
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"*) unnamed_addr #1

declare %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext15GetPeriodicWaveEi(%"class.blink::BaseAudioContext"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17OscillatorHandler38CalculateSampleAccuratePhaseIncrementsEj(%"class.blink::OscillatorHandler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = alloca %"class.blink::CrossThreadPersistent", align 8
  %5 = alloca float, align 4
  %6 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  %10 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 2, i32 0
  %11 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %11, i64 0, i32 4, i32 0
  %13 = bitcast %"struct.std::__1::__atomic_base.381"* %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %11, i64 0, i32 10, i32 3
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 3, i32 0
  %18 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %18, i64 0, i32 4, i32 0
  %20 = bitcast %"struct.std::__1::__atomic_base.381"* %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %18, i64 0, i32 10, i32 3
  %23 = bitcast float* %22 to i32*
  store i32 %21, i32* %23, align 8
  br label %24

24:                                               ; preds = %2, %9
  %25 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 6, i32 1
  %26 = load float*, float** %25, align 8
  %27 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #11
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %28 = bitcast %"class.blink::CrossThreadPersistent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #11, !alias.scope !3
  %30 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !3
  %31 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %30, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %31) #11, !noalias !3
  %32 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %33 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %32, align 8, !noalias !3
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.524"* nonnull %29, %"class.blink::PeriodicWave"* %33) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %31) #11
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 0, i32 0, i32 0
  %35 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::PeriodicWave", %"class.blink::PeriodicWave"* %35, i64 0, i32 6
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 0, i32 0, i32 1
  %40 = bitcast %"class.blink::CrossThreadPersistentNodePtr.525"* %39 to i64*
  %41 = load atomic i64, i64* %40 acquire, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %24
  %44 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %45 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %44, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %45) #11
  %46 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %47 = load atomic i64, i64* %40 monotonic, align 8
  %48 = inttoptr i64 %47 to %"class.blink::PersistentNode"*
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %46, i64 0, i32 0, i32 0
  %52 = bitcast %"class.blink::CrossThreadPersistentRegion"* %46 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = inttoptr i64 %47 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %48, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %55, align 8
  store %"class.blink::PersistentNode"* %48, %"class.blink::PersistentNode"** %51, align 8
  br label %56

56:                                               ; preds = %50, %43
  store atomic i64 0, i64* %40 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %45) #11
  br label %57

57:                                               ; preds = %24, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  %58 = bitcast float* %3 to i32*
  store i32 %38, i32* %58, align 4
  %59 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 2, i32 0
  %60 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %60, i64 0, i32 10
  %62 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %60, i64 0, i32 11, i32 0
  %63 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i64, i64* %64 acquire, align 8
  %66 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %62, align 8
  %67 = bitcast %"class.blink::AudioDestinationHandler"* %66 to double (%"class.blink::AudioDestinationHandler"*)***
  %68 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %67, align 8
  %69 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %68, i64 25
  %70 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %69, align 8
  %71 = call double %70(%"class.blink::AudioDestinationHandler"* %66) #11
  %72 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %60, i64 0, i32 0, i32 1, i32 0
  %73 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %73, i64 0, i32 7
  %75 = load i32, i32* %74, align 4
  %76 = call zeroext i1 @_ZNK5blink18AudioParamTimeline9HasValuesEmdj(%"class.blink::AudioParamTimeline"* %61, i64 %65, double %71, i32 %75) #11
  br i1 %76, label %83, label %77

77:                                               ; preds = %57
  %78 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %60, i64 0, i32 0, i32 3, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %59, align 8
  br label %89

83:                                               ; preds = %77, %57
  %84 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %59, align 8
  %85 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %84, i64 0, i32 6
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %83
  call void @_ZN5blink17AudioParamHandler29CalculateSampleAccurateValuesEPfj(%"class.blink::AudioParamHandler"* %84, float* %26, i32 %1) #11
  br label %94

89:                                               ; preds = %81, %83
  %90 = phi %"class.blink::AudioParamHandler"* [ %82, %81 ], [ %84, %83 ]
  %91 = call float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"* %90) #11
  %92 = load float, float* %3, align 4
  %93 = fmul float %91, %92
  store float %93, float* %3, align 4
  br label %94

94:                                               ; preds = %89, %88
  %95 = phi i1 [ true, %88 ], [ false, %89 ]
  %96 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 3, i32 0
  %97 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %97, i64 0, i32 10
  %99 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %97, i64 0, i32 11, i32 0
  %100 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i64, i64* %101 acquire, align 8
  %103 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %99, align 8
  %104 = bitcast %"class.blink::AudioDestinationHandler"* %103 to double (%"class.blink::AudioDestinationHandler"*)***
  %105 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %104, align 8
  %106 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %105, i64 25
  %107 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %106, align 8
  %108 = call double %107(%"class.blink::AudioDestinationHandler"* %103) #11
  %109 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %97, i64 0, i32 0, i32 1, i32 0
  %110 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %110, i64 0, i32 7
  %112 = load i32, i32* %111, align 4
  %113 = call zeroext i1 @_ZNK5blink18AudioParamTimeline9HasValuesEmdj(%"class.blink::AudioParamTimeline"* %98, i64 %102, double %108, i32 %112) #11
  br i1 %113, label %120, label %114

114:                                              ; preds = %94
  %115 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %97, i64 0, i32 0, i32 3, i32 0, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %96, align 8
  br label %176

120:                                              ; preds = %114, %94
  %121 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %96, align 8
  %122 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %121, i64 0, i32 6
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %176

125:                                              ; preds = %120
  br i1 %95, label %126, label %129

126:                                              ; preds = %125
  %127 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 7, i32 1
  %128 = load float*, float** %127, align 8
  br label %129

129:                                              ; preds = %125, %126
  %130 = phi float* [ %128, %126 ], [ %26, %125 ]
  call void @_ZN5blink17AudioParamHandler29CalculateSampleAccurateValuesEPfj(%"class.blink::AudioParamHandler"* %121, float* %130, i32 %1) #11
  %131 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #11
  store float 0x3F4B4E81C0000000, float* %5, align 4
  call void @_ZN5blink11vector_math5VsmulEPKfiS2_Pfij(float* %130, i32 1, float* nonnull %5, float* %130, i32 1, i32 %1) #11
  %132 = icmp eq i32 %1, 0
  br i1 %132, label %152, label %133

133:                                              ; preds = %129
  %134 = zext i32 %1 to i64
  %135 = add nsw i64 %134, -1
  %136 = and i64 %134, 3
  %137 = icmp ult i64 %135, 3
  br i1 %137, label %140, label %138

138:                                              ; preds = %133
  %139 = sub nsw i64 %134, %136
  br label %153

140:                                              ; preds = %153, %133
  %141 = phi i64 [ 0, %133 ], [ %171, %153 ]
  %142 = icmp eq i64 %136, 0
  br i1 %142, label %152, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %149, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %150, %143 ], [ %136, %140 ]
  %146 = getelementptr inbounds float, float* %130, i64 %144
  %147 = load float, float* %146, align 4
  %148 = call float @exp2f(float %147) #11
  store float %148, float* %146, align 4
  %149 = add nuw nsw i64 %144, 1
  %150 = add i64 %145, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %143, !llvm.loop !6

152:                                              ; preds = %140, %143, %129
  br i1 %95, label %174, label %175

153:                                              ; preds = %153, %138
  %154 = phi i64 [ 0, %138 ], [ %171, %153 ]
  %155 = phi i64 [ %139, %138 ], [ %172, %153 ]
  %156 = getelementptr inbounds float, float* %130, i64 %154
  %157 = load float, float* %156, align 4
  %158 = call float @exp2f(float %157) #11
  store float %158, float* %156, align 4
  %159 = or i64 %154, 1
  %160 = getelementptr inbounds float, float* %130, i64 %159
  %161 = load float, float* %160, align 4
  %162 = call float @exp2f(float %161) #11
  store float %162, float* %160, align 4
  %163 = or i64 %154, 2
  %164 = getelementptr inbounds float, float* %130, i64 %163
  %165 = load float, float* %164, align 4
  %166 = call float @exp2f(float %165) #11
  store float %166, float* %164, align 4
  %167 = or i64 %154, 3
  %168 = getelementptr inbounds float, float* %130, i64 %167
  %169 = load float, float* %168, align 4
  %170 = call float @exp2f(float %169) #11
  store float %170, float* %168, align 4
  %171 = add nuw nsw i64 %154, 4
  %172 = add i64 %155, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %140, label %153

174:                                              ; preds = %152
  call void @_ZN5blink11vector_math4VmulEPKfiS2_iPfij(float* %130, i32 1, float* %26, i32 1, float* %26, i32 1, i32 %1) #11
  br label %175

175:                                              ; preds = %152, %174
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #11
  br label %183

176:                                              ; preds = %118, %120
  %177 = phi %"class.blink::AudioParamHandler"* [ %119, %118 ], [ %121, %120 ]
  %178 = call float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"* %177) #11
  %179 = fdiv float %178, 1.200000e+03
  %180 = call float @exp2f(float %179) #11
  %181 = load float, float* %3, align 4
  %182 = fmul float %180, %181
  store float %182, float* %3, align 4
  br i1 %95, label %183, label %253

183:                                              ; preds = %175, %176
  %184 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %185 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %184) #11
  %186 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %185, i64 0, i32 21, i32 0
  %187 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %186, align 8
  %188 = bitcast %"class.blink::AudioDestinationHandler"* %187 to double (%"class.blink::AudioDestinationHandler"*)***
  %189 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %188, align 8
  %190 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %189, i64 25
  %191 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %190, align 8
  %192 = call double %191(%"class.blink::AudioDestinationHandler"* %187) #11
  %193 = fptrunc double %192 to float
  %194 = fmul float %193, 5.000000e-01
  %195 = icmp sgt i32 %1, 0
  br i1 %195, label %196, label %252

196:                                              ; preds = %183
  %197 = fsub float -0.000000e+00, %194
  %198 = zext i32 %1 to i64
  %199 = icmp ult i32 %1, 8
  br i1 %199, label %236, label %200

200:                                              ; preds = %196
  %201 = and i64 %198, 4294967288
  %202 = insertelement <4 x float> undef, float %194, i32 0
  %203 = shufflevector <4 x float> %202, <4 x float> undef, <4 x i32> zeroinitializer
  %204 = insertelement <4 x float> undef, float %194, i32 0
  %205 = shufflevector <4 x float> %204, <4 x float> undef, <4 x i32> zeroinitializer
  %206 = insertelement <4 x float> undef, float %197, i32 0
  %207 = shufflevector <4 x float> %206, <4 x float> undef, <4 x i32> zeroinitializer
  %208 = insertelement <4 x float> undef, float %197, i32 0
  %209 = shufflevector <4 x float> %208, <4 x float> undef, <4 x i32> zeroinitializer
  br label %210

210:                                              ; preds = %210, %200
  %211 = phi i64 [ 0, %200 ], [ %232, %210 ]
  %212 = getelementptr inbounds float, float* %26, i64 %211
  %213 = bitcast float* %212 to <4 x float>*
  %214 = load <4 x float>, <4 x float>* %213, align 4
  %215 = getelementptr inbounds float, float* %212, i64 4
  %216 = bitcast float* %215 to <4 x float>*
  %217 = load <4 x float>, <4 x float>* %216, align 4
  %218 = fcmp uno <4 x float> %214, zeroinitializer
  %219 = fcmp uno <4 x float> %217, zeroinitializer
  %220 = fcmp ult <4 x float> %214, %203
  %221 = fcmp ult <4 x float> %217, %205
  %222 = fcmp ole <4 x float> %214, %207
  %223 = fcmp ole <4 x float> %217, %209
  %224 = select <4 x i1> %222, <4 x float> %207, <4 x float> %214
  %225 = select <4 x i1> %223, <4 x float> %209, <4 x float> %217
  %226 = select <4 x i1> %220, <4 x float> %224, <4 x float> %203
  %227 = select <4 x i1> %221, <4 x float> %225, <4 x float> %205
  %228 = select <4 x i1> %218, <4 x float> %203, <4 x float> %226
  %229 = select <4 x i1> %219, <4 x float> %205, <4 x float> %227
  %230 = bitcast float* %212 to <4 x float>*
  store <4 x float> %228, <4 x float>* %230, align 4
  %231 = bitcast float* %215 to <4 x float>*
  store <4 x float> %229, <4 x float>* %231, align 4
  %232 = add i64 %211, 8
  %233 = icmp eq i64 %232, %201
  br i1 %233, label %234, label %210, !llvm.loop !8

234:                                              ; preds = %210
  %235 = icmp eq i64 %201, %198
  br i1 %235, label %252, label %236

236:                                              ; preds = %234, %196
  %237 = phi i64 [ 0, %196 ], [ %201, %234 ]
  br label %238

238:                                              ; preds = %236, %248
  %239 = phi i64 [ %250, %248 ], [ %237, %236 ]
  %240 = getelementptr inbounds float, float* %26, i64 %239
  %241 = load float, float* %240, align 4
  %242 = fcmp uno float %241, 0.000000e+00
  br i1 %242, label %248, label %243

243:                                              ; preds = %238
  %244 = fcmp ult float %241, %194
  %245 = fcmp ole float %241, %197
  %246 = select i1 %245, float %197, float %241
  %247 = select i1 %244, float %246, float %194
  br label %248

248:                                              ; preds = %243, %238
  %249 = phi float [ %247, %243 ], [ %194, %238 ]
  store float %249, float* %240, align 4
  %250 = add nuw nsw i64 %239, 1
  %251 = icmp eq i64 %250, %198
  br i1 %251, label %252, label %238, !llvm.loop !10

252:                                              ; preds = %248, %234, %183
  call void @_ZN5blink11vector_math5VsmulEPKfiS2_Pfij(float* %26, i32 1, float* nonnull %3, float* %26, i32 1, i32 %1) #11
  br label %253

253:                                              ; preds = %252, %176
  %254 = phi i1 [ true, %252 ], [ false, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #11
  ret i1 %254
}

declare void @_ZN5blink17AudioParamHandler29CalculateSampleAccurateValuesEPfj(%"class.blink::AudioParamHandler"*, float*, i32) local_unnamed_addr #1

declare float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"*) local_unnamed_addr #1

declare void @_ZN5blink11vector_math5VsmulEPKfiS2_Pfij(float*, i32, float*, float*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink11vector_math4VmulEPKfiS2_iPfij(float*, i32, float*, i32, float*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17OscillatorHandler18ProcessKRateScalarEiiPfdff(%"class.blink::OscillatorHandler"* nocapture readonly, i32, i32, float* nocapture, double, float, float) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::CrossThreadPersistent", align 8
  %9 = alloca float*, align 8
  %10 = alloca float*, align 8
  %11 = alloca float, align 4
  %12 = bitcast %"class.blink::CrossThreadPersistent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #11, !alias.scope !12
  %15 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !12
  %16 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %15, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %16) #11, !noalias !12
  %17 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %18 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %17, align 8, !noalias !12
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.524"* nonnull %14, %"class.blink::PeriodicWave"* %18) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %16) #11
  %19 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %13, align 8
  %20 = call i32 @_ZNK5blink12PeriodicWave16PeriodicWaveSizeEv(%"class.blink::PeriodicWave"* %19) #11
  %21 = uitofp i32 %20 to double
  %22 = fdiv double 1.000000e+00, %21
  %23 = add i32 %20, -1
  %24 = bitcast float** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store float* null, float** %9, align 8
  %25 = bitcast float** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  store float* null, float** %10, align 8
  %26 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #11
  store float 0.000000e+00, float* %11, align 4
  %27 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %13, align 8
  call void @_ZN5blink12PeriodicWave31WaveDataForFundamentalFrequencyEfRPfS2_Rf(%"class.blink::PeriodicWave"* %27, float %5, float** nonnull dereferenceable(8) %10, float** nonnull dereferenceable(8) %9, float* nonnull dereferenceable(4) %11) #11
  %28 = icmp slt i32 %1, %2
  br i1 %28, label %29, label %37

29:                                               ; preds = %7
  %30 = fmul float %5, %6
  %31 = fpext float %30 to double
  %32 = sext i32 %1 to i64
  %33 = sext i32 %2 to i64
  %34 = load float*, float** %10, align 8
  %35 = load float*, float** %9, align 8
  %36 = load float, float* %11, align 4
  br label %58

37:                                               ; preds = %58, %7
  %38 = phi double [ %4, %7 ], [ %92, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 0, i32 0, i32 1
  %40 = bitcast %"class.blink::CrossThreadPersistentNodePtr.525"* %39 to i64*
  %41 = load atomic i64, i64* %40 acquire, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %37
  %44 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %45 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %44, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %45) #11
  %46 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %47 = load atomic i64, i64* %40 monotonic, align 8
  %48 = inttoptr i64 %47 to %"class.blink::PersistentNode"*
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %46, i64 0, i32 0, i32 0
  %52 = bitcast %"class.blink::CrossThreadPersistentRegion"* %46 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = inttoptr i64 %47 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %48, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %55, align 8
  store %"class.blink::PersistentNode"* %48, %"class.blink::PersistentNode"** %51, align 8
  br label %56

56:                                               ; preds = %50, %43
  store atomic i64 0, i64* %40 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %45) #11
  br label %57

57:                                               ; preds = %37, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  ret double %38

58:                                               ; preds = %58, %29
  %59 = phi i64 [ %32, %29 ], [ %93, %58 ]
  %60 = phi double [ %4, %29 ], [ %92, %58 ]
  %61 = fptoui double %60 to i32
  %62 = and i32 %23, %61
  %63 = add i32 %62, 1
  %64 = and i32 %63, %23
  %65 = zext i32 %62 to i64
  %66 = getelementptr inbounds float, float* %34, i64 %65
  %67 = load float, float* %66, align 4
  %68 = zext i32 %64 to i64
  %69 = getelementptr inbounds float, float* %34, i64 %68
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds float, float* %35, i64 %65
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds float, float* %35, i64 %68
  %74 = load float, float* %73, align 4
  %75 = fptrunc double %60 to float
  %76 = uitofp i32 %62 to float
  %77 = fsub float %75, %76
  %78 = fsub float %74, %72
  %79 = fmul float %77, %78
  %80 = fadd float %72, %79
  %81 = fsub float %70, %67
  %82 = fmul float %77, %81
  %83 = fadd float %67, %82
  %84 = fsub float %83, %80
  %85 = fmul float %36, %84
  %86 = fadd float %80, %85
  %87 = getelementptr inbounds float, float* %3, i64 %59
  store float %86, float* %87, align 4
  %88 = fadd double %60, %31
  %89 = fmul double %22, %88
  %90 = call double @llvm.floor.f64(double %89)
  %91 = fmul double %90, %21
  %92 = fsub double %88, %91
  %93 = add nsw i64 %59, 1
  %94 = icmp eq i64 %93, %33
  br i1 %94, label %37, label %58
}

declare i32 @_ZNK5blink12PeriodicWave16PeriodicWaveSizeEv(%"class.blink::PeriodicWave"*) local_unnamed_addr #1

declare void @_ZN5blink12PeriodicWave31WaveDataForFundamentalFrequencyEfRPfS2_Rf(%"class.blink::PeriodicWave"*, float, float** dereferenceable(8), float** dereferenceable(8), float* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #3

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17OscillatorHandler12ProcessKRateEiPfd(%"class.blink::OscillatorHandler"*, i32, float*, double) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CrossThreadPersistent", align 8
  %6 = alloca float*, align 8
  %7 = alloca float*, align 8
  %8 = alloca float, align 4
  %9 = bitcast %"class.blink::CrossThreadPersistent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #11, !alias.scope !15
  %12 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !15
  %13 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %12, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %13) #11, !noalias !15
  %14 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %15 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %14, align 8, !noalias !15
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.524"* nonnull %11, %"class.blink::PeriodicWave"* %15) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %13) #11
  %16 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %10, align 8
  %17 = call i32 @_ZNK5blink12PeriodicWave16PeriodicWaveSizeEv(%"class.blink::PeriodicWave"* %16) #11
  %18 = uitofp i32 %17 to double
  %19 = fdiv double 1.000000e+00, %18
  %20 = bitcast float** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  store float* null, float** %6, align 8
  %21 = bitcast float** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  store float* null, float** %7, align 8
  %22 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #11
  store float 0.000000e+00, float* %8, align 4
  %23 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 2, i32 0
  %24 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %23, align 8
  %25 = call float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"* %24) #11
  %26 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 3, i32 0
  %27 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %26, align 8
  %28 = call float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"* %27) #11
  %29 = fdiv float %28, 1.200000e+03
  %30 = call float @exp2f(float %29) #11
  %31 = fmul float %25, %30
  %32 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %33 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %32) #11
  %34 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %33, i64 0, i32 21, i32 0
  %35 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %34, align 8
  %36 = bitcast %"class.blink::AudioDestinationHandler"* %35 to double (%"class.blink::AudioDestinationHandler"*)***
  %37 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %36, align 8
  %38 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %37, i64 25
  %39 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %38, align 8
  %40 = call double %39(%"class.blink::AudioDestinationHandler"* %35) #11
  %41 = fptrunc double %40 to float
  %42 = fmul float %41, 5.000000e-01
  %43 = fsub float -0.000000e+00, %42
  %44 = fcmp uno float %31, 0.000000e+00
  br i1 %44, label %50, label %45

45:                                               ; preds = %4
  %46 = fcmp ult float %31, %42
  %47 = fcmp ole float %31, %43
  %48 = select i1 %47, float %43, float %31
  %49 = select i1 %46, float %48, float %42
  br label %50

50:                                               ; preds = %45, %4
  %51 = phi float [ %49, %45 ], [ %42, %4 ]
  %52 = add i32 %17, -1
  %53 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %10, align 8
  call void @_ZN5blink12PeriodicWave31WaveDataForFundamentalFrequencyEfRPfS2_Rf(%"class.blink::PeriodicWave"* %53, float %51, float** nonnull dereferenceable(8) %7, float** nonnull dereferenceable(8) %6, float* nonnull dereferenceable(4) %8) #11
  %54 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::PeriodicWave", %"class.blink::PeriodicWave"* %54, i64 0, i32 6
  %56 = load float, float* %55, align 8
  %57 = fmul float %51, %56
  %58 = fcmp ult float %57, 0x3FD3333340000000
  br i1 %58, label %59, label %65

59:                                               ; preds = %50
  %60 = icmp sgt i32 %1, 0
  br i1 %60, label %61, label %96

61:                                               ; preds = %59
  %62 = call float @llvm.fabs.f32(float %57) #11
  %63 = fpext float %57 to double
  %64 = load float, float* %8, align 4
  br label %81

65:                                               ; preds = %50
  %66 = call { i32, double } @_ZNK5blink17OscillatorHandler18ProcessKRateVectorEiPfdff(%"class.blink::OscillatorHandler"* %0, i32 %1, float* %2, double %3, float %51, float %56) #11
  %67 = extractvalue { i32, double } %66, 0
  %68 = icmp slt i32 %67, %1
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = extractvalue { i32, double } %66, 1
  %71 = call double @_ZNK5blink17OscillatorHandler18ProcessKRateScalarEiiPfdff(%"class.blink::OscillatorHandler"* %0, i32 %67, i32 %1, float* %2, double %70, float %51, float %56)
  br label %72

72:                                               ; preds = %69, %65
  %73 = sitofp i32 %1 to float
  %74 = fmul float %57, %73
  %75 = fpext float %74 to double
  %76 = fadd double %75, %3
  %77 = fmul double %19, %76
  %78 = call double @llvm.floor.f64(double %77)
  %79 = fmul double %78, %18
  %80 = fsub double %76, %79
  br label %96

81:                                               ; preds = %81, %61
  %82 = phi float* [ %2, %61 ], [ %88, %81 ]
  %83 = phi i32 [ 0, %61 ], [ %94, %81 ]
  %84 = phi double [ %3, %61 ], [ %93, %81 ]
  %85 = load float*, float** %7, align 8
  %86 = load float*, float** %6, align 8
  %87 = call fastcc float @_ZN5blinkL15DoInterpolationEdfjfPKfS1_(double %84, float %62, i32 %52, float %64, float* %85, float* %86)
  %88 = getelementptr inbounds float, float* %82, i64 1
  store float %87, float* %82, align 4
  %89 = fadd double %84, %63
  %90 = fmul double %19, %89
  %91 = call double @llvm.floor.f64(double %90)
  %92 = fmul double %91, %18
  %93 = fsub double %89, %92
  %94 = add nuw nsw i32 %83, 1
  %95 = icmp eq i32 %94, %1
  br i1 %95, label %96, label %81

96:                                               ; preds = %81, %59, %72
  %97 = phi double [ %80, %72 ], [ %3, %59 ], [ %93, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %98 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 1
  %99 = bitcast %"class.blink::CrossThreadPersistentNodePtr.525"* %98 to i64*
  %100 = load atomic i64, i64* %99 acquire, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %116, label %102

102:                                              ; preds = %96
  %103 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %104 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %103, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %104) #11
  %105 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %106 = load atomic i64, i64* %99 monotonic, align 8
  %107 = inttoptr i64 %106 to %"class.blink::PersistentNode"*
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %115, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %105, i64 0, i32 0, i32 0
  %111 = bitcast %"class.blink::CrossThreadPersistentRegion"* %105 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = inttoptr i64 %106 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %107, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %114, align 8
  store %"class.blink::PersistentNode"* %107, %"class.blink::PersistentNode"** %110, align 8
  br label %115

115:                                              ; preds = %109, %102
  store atomic i64 0, i64* %99 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %104) #11
  br label %116

116:                                              ; preds = %96, %115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret double %97
}

declare { i32, double } @_ZNK5blink17OscillatorHandler18ProcessKRateVectorEiPfdff(%"class.blink::OscillatorHandler"*, i32, float*, double, float, float) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc float @_ZN5blinkL15DoInterpolationEdfjfPKfS1_(double, float, i32, float, float* nocapture readonly, float* nocapture readonly) unnamed_addr #4 {
  %7 = fptoui double %0 to i32
  %8 = fcmp ult float %1, 0x3FD3333340000000
  br i1 %8, label %41, label %9

9:                                                ; preds = %6
  %10 = add i32 %7, 1
  %11 = and i32 %7, %2
  %12 = and i32 %10, %2
  %13 = zext i32 %11 to i64
  %14 = getelementptr inbounds float, float* %4, i64 %13
  %15 = load float, float* %14, align 4
  %16 = zext i32 %12 to i64
  %17 = getelementptr inbounds float, float* %4, i64 %16
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds float, float* %5, i64 %13
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds float, float* %5, i64 %16
  %22 = load float, float* %21, align 4
  %23 = fptrunc double %0 to float
  %24 = uitofp i32 %11 to float
  %25 = fsub float %23, %24
  %26 = fpext float %25 to double
  %27 = fsub double 1.000000e+00, %26
  %28 = insertelement <2 x float> undef, float %20, i32 0
  %29 = insertelement <2 x float> %28, float %15, i32 1
  %30 = fpext <2 x float> %29 to <2 x double>
  %31 = insertelement <2 x double> undef, double %27, i32 0
  %32 = shufflevector <2 x double> %31, <2 x double> undef, <2 x i32> zeroinitializer
  %33 = fmul <2 x double> %32, %30
  %34 = insertelement <2 x float> undef, float %22, i32 0
  %35 = insertelement <2 x float> %34, float %18, i32 1
  %36 = fpext <2 x float> %35 to <2 x double>
  %37 = insertelement <2 x double> undef, double %26, i32 0
  %38 = shufflevector <2 x double> %37, <2 x double> undef, <2 x i32> zeroinitializer
  %39 = fmul <2 x double> %38, %36
  %40 = fadd <2 x double> %33, %39
  br label %187

41:                                               ; preds = %6
  %42 = fcmp ult float %1, 0x3FC47AE140000000
  br i1 %42, label %94, label %43

43:                                               ; preds = %41
  %44 = add i32 %7, -1
  %45 = and i32 %44, %2
  %46 = and i32 %7, %2
  %47 = add i32 %7, 1
  %48 = and i32 %47, %2
  %49 = uitofp i32 %7 to double
  %50 = fsub double %0, %49
  %51 = fmul double %50, 5.000000e-01
  %52 = fadd double %50, -1.000000e+00
  %53 = fmul double %51, %52
  %54 = fmul double %50, %50
  %55 = fsub double 1.000000e+00, %54
  %56 = fadd double %50, 1.000000e+00
  %57 = fmul double %51, %56
  %58 = zext i32 %45 to i64
  %59 = getelementptr inbounds float, float* %4, i64 %58
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds float, float* %5, i64 %58
  %62 = load float, float* %61, align 4
  %63 = insertelement <2 x float> undef, float %62, i32 0
  %64 = insertelement <2 x float> %63, float %60, i32 1
  %65 = fpext <2 x float> %64 to <2 x double>
  %66 = insertelement <2 x double> undef, double %53, i32 0
  %67 = shufflevector <2 x double> %66, <2 x double> undef, <2 x i32> zeroinitializer
  %68 = fmul <2 x double> %67, %65
  %69 = fadd <2 x double> %68, zeroinitializer
  %70 = zext i32 %46 to i64
  %71 = getelementptr inbounds float, float* %4, i64 %70
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds float, float* %5, i64 %70
  %74 = load float, float* %73, align 4
  %75 = insertelement <2 x float> undef, float %74, i32 0
  %76 = insertelement <2 x float> %75, float %72, i32 1
  %77 = fpext <2 x float> %76 to <2 x double>
  %78 = insertelement <2 x double> undef, double %55, i32 0
  %79 = shufflevector <2 x double> %78, <2 x double> undef, <2 x i32> zeroinitializer
  %80 = fmul <2 x double> %79, %77
  %81 = fadd <2 x double> %69, %80
  %82 = zext i32 %48 to i64
  %83 = getelementptr inbounds float, float* %4, i64 %82
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds float, float* %5, i64 %82
  %86 = load float, float* %85, align 4
  %87 = insertelement <2 x float> undef, float %86, i32 0
  %88 = insertelement <2 x float> %87, float %84, i32 1
  %89 = fpext <2 x float> %88 to <2 x double>
  %90 = insertelement <2 x double> undef, double %57, i32 0
  %91 = shufflevector <2 x double> %90, <2 x double> undef, <2 x i32> zeroinitializer
  %92 = fmul <2 x double> %91, %89
  %93 = fadd <2 x double> %81, %92
  br label %187

94:                                               ; preds = %41
  %95 = add i32 %7, -2
  %96 = and i32 %95, %2
  %97 = add i32 %7, -1
  %98 = and i32 %97, %2
  %99 = and i32 %7, %2
  %100 = add i32 %7, 1
  %101 = and i32 %100, %2
  %102 = add i32 %7, 2
  %103 = and i32 %102, %2
  %104 = uitofp i32 %7 to double
  %105 = fsub double %0, %104
  %106 = fmul double %105, %105
  %107 = fadd double %106, -1.000000e+00
  %108 = fmul double %105, %107
  %109 = fadd double %105, -2.000000e+00
  %110 = fmul double %109, %108
  %111 = fdiv double %110, 2.400000e+01
  %112 = fsub double -0.000000e+00, %105
  %113 = fadd double %105, -1.000000e+00
  %114 = fmul double %113, %112
  %115 = fadd double %106, -4.000000e+00
  %116 = fmul double %114, %115
  %117 = fdiv double %116, 6.000000e+00
  %118 = fmul double %107, %115
  %119 = fmul double %118, 2.500000e-01
  %120 = fadd double %105, 1.000000e+00
  %121 = fmul double %120, %112
  %122 = fmul double %121, %115
  %123 = fdiv double %122, 6.000000e+00
  %124 = fadd double %105, 2.000000e+00
  %125 = fmul double %124, %108
  %126 = fdiv double %125, 2.400000e+01
  %127 = zext i32 %96 to i64
  %128 = getelementptr inbounds float, float* %4, i64 %127
  %129 = load float, float* %128, align 4
  %130 = getelementptr inbounds float, float* %5, i64 %127
  %131 = load float, float* %130, align 4
  %132 = insertelement <2 x float> undef, float %131, i32 0
  %133 = insertelement <2 x float> %132, float %129, i32 1
  %134 = fpext <2 x float> %133 to <2 x double>
  %135 = insertelement <2 x double> undef, double %111, i32 0
  %136 = shufflevector <2 x double> %135, <2 x double> undef, <2 x i32> zeroinitializer
  %137 = fmul <2 x double> %136, %134
  %138 = fadd <2 x double> %137, zeroinitializer
  %139 = zext i32 %98 to i64
  %140 = getelementptr inbounds float, float* %4, i64 %139
  %141 = load float, float* %140, align 4
  %142 = getelementptr inbounds float, float* %5, i64 %139
  %143 = load float, float* %142, align 4
  %144 = insertelement <2 x float> undef, float %143, i32 0
  %145 = insertelement <2 x float> %144, float %141, i32 1
  %146 = fpext <2 x float> %145 to <2 x double>
  %147 = insertelement <2 x double> undef, double %117, i32 0
  %148 = shufflevector <2 x double> %147, <2 x double> undef, <2 x i32> zeroinitializer
  %149 = fmul <2 x double> %148, %146
  %150 = fadd <2 x double> %138, %149
  %151 = zext i32 %99 to i64
  %152 = getelementptr inbounds float, float* %4, i64 %151
  %153 = load float, float* %152, align 4
  %154 = getelementptr inbounds float, float* %5, i64 %151
  %155 = load float, float* %154, align 4
  %156 = insertelement <2 x float> undef, float %155, i32 0
  %157 = insertelement <2 x float> %156, float %153, i32 1
  %158 = fpext <2 x float> %157 to <2 x double>
  %159 = insertelement <2 x double> undef, double %119, i32 0
  %160 = shufflevector <2 x double> %159, <2 x double> undef, <2 x i32> zeroinitializer
  %161 = fmul <2 x double> %160, %158
  %162 = fadd <2 x double> %150, %161
  %163 = zext i32 %101 to i64
  %164 = getelementptr inbounds float, float* %4, i64 %163
  %165 = load float, float* %164, align 4
  %166 = getelementptr inbounds float, float* %5, i64 %163
  %167 = load float, float* %166, align 4
  %168 = insertelement <2 x float> undef, float %167, i32 0
  %169 = insertelement <2 x float> %168, float %165, i32 1
  %170 = fpext <2 x float> %169 to <2 x double>
  %171 = insertelement <2 x double> undef, double %123, i32 0
  %172 = shufflevector <2 x double> %171, <2 x double> undef, <2 x i32> zeroinitializer
  %173 = fmul <2 x double> %172, %170
  %174 = fadd <2 x double> %162, %173
  %175 = zext i32 %103 to i64
  %176 = getelementptr inbounds float, float* %4, i64 %175
  %177 = load float, float* %176, align 4
  %178 = getelementptr inbounds float, float* %5, i64 %175
  %179 = load float, float* %178, align 4
  %180 = insertelement <2 x float> undef, float %179, i32 0
  %181 = insertelement <2 x float> %180, float %177, i32 1
  %182 = fpext <2 x float> %181 to <2 x double>
  %183 = insertelement <2 x double> undef, double %126, i32 0
  %184 = shufflevector <2 x double> %183, <2 x double> undef, <2 x i32> zeroinitializer
  %185 = fmul <2 x double> %184, %182
  %186 = fadd <2 x double> %174, %185
  br label %187

187:                                              ; preds = %43, %94, %9
  %188 = phi <2 x double> [ %40, %9 ], [ %93, %43 ], [ %186, %94 ]
  %189 = fsub float 1.000000e+00, %3
  %190 = fpext float %189 to double
  %191 = extractelement <2 x double> %188, i32 0
  %192 = fmul double %191, %190
  %193 = fpext float %3 to double
  %194 = extractelement <2 x double> %188, i32 1
  %195 = fmul double %194, %193
  %196 = fadd double %192, %195
  %197 = fptrunc double %196 to float
  ret float %197
}

; Function Attrs: nounwind ssp uwtable
define hidden { i32, double } @_ZNK5blink17OscillatorHandler18ProcessARateVectorEiPfdPKf(%"class.blink::OscillatorHandler"*, i32, float*, double, float*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CrossThreadPersistent", align 8
  %7 = alloca [4 x float*], align 16
  %8 = alloca [4 x float*], align 16
  %9 = alloca [4 x float], align 16
  %10 = alloca <4 x float>, align 16
  %11 = bitcast %"class.blink::CrossThreadPersistent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #11, !alias.scope !18
  %14 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !18
  %15 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %14, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #11, !noalias !18
  %16 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %17 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %16, align 8, !noalias !18
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.524"* nonnull %13, %"class.blink::PeriodicWave"* %17) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #11
  %18 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %12, align 8
  %19 = getelementptr inbounds %"class.blink::PeriodicWave", %"class.blink::PeriodicWave"* %18, i64 0, i32 6
  %20 = load float, float* %19, align 8
  %21 = call i32 @_ZNK5blink12PeriodicWave16PeriodicWaveSizeEv(%"class.blink::PeriodicWave"* %18) #11
  %22 = uitofp i32 %21 to double
  %23 = fdiv double 1.000000e+00, %22
  %24 = add i32 %21, -1
  %25 = bitcast [4 x float*]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  %26 = getelementptr inbounds [4 x float*], [4 x float*]* %7, i64 0, i64 0
  %27 = getelementptr inbounds [4 x float*], [4 x float*]* %7, i64 0, i64 1
  %28 = getelementptr inbounds [4 x float*], [4 x float*]* %7, i64 0, i64 2
  %29 = getelementptr inbounds [4 x float*], [4 x float*]* %7, i64 0, i64 3
  %30 = bitcast [4 x float*]* %8 to i8*
  %31 = bitcast [4 x float*]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %32 = getelementptr inbounds [4 x float*], [4 x float*]* %8, i64 0, i64 0
  %33 = getelementptr inbounds [4 x float*], [4 x float*]* %8, i64 0, i64 1
  %34 = getelementptr inbounds [4 x float*], [4 x float*]* %8, i64 0, i64 2
  %35 = getelementptr inbounds [4 x float*], [4 x float*]* %8, i64 0, i64 3
  %36 = bitcast [4 x float]* %9 to i8*
  %37 = bitcast [4 x float*]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  %38 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 0
  %39 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 1
  %40 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 2
  %41 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 3
  %42 = sdiv i32 %1, 4
  %43 = icmp sgt i32 %1, 3
  %44 = bitcast [4 x float]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 -1, i64 16, i1 false)
  br i1 %43, label %45, label %53

45:                                               ; preds = %5
  %46 = fdiv float 1.000000e+00, %20
  %47 = bitcast <4 x float>* %10 to i8*
  %48 = getelementptr inbounds <4 x float>, <4 x float>* %10, i64 0, i64 0
  %49 = insertelement <4 x float> undef, float %46, i32 0
  %50 = shufflevector <4 x float> %49, <4 x float> undef, <4 x i32> zeroinitializer
  br label %77

51:                                               ; preds = %159
  %52 = trunc i64 %162 to i32
  br label %53

53:                                               ; preds = %51, %5
  %54 = phi double [ %3, %5 ], [ %160, %51 ]
  %55 = phi i32 [ 0, %5 ], [ %52, %51 ]
  %56 = insertvalue { i32, double } undef, i32 %55, 0
  %57 = insertvalue { i32, double } %56, double %54, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  %58 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 1
  %59 = bitcast %"class.blink::CrossThreadPersistentNodePtr.525"* %58 to i64*
  %60 = load atomic i64, i64* %59 acquire, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %53
  %63 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %64 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %63, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %64) #11
  %65 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %66 = load atomic i64, i64* %59 monotonic, align 8
  %67 = inttoptr i64 %66 to %"class.blink::PersistentNode"*
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %65, i64 0, i32 0, i32 0
  %71 = bitcast %"class.blink::CrossThreadPersistentRegion"* %65 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = inttoptr i64 %66 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %67, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %74, align 8
  store %"class.blink::PersistentNode"* %67, %"class.blink::PersistentNode"** %70, align 8
  br label %75

75:                                               ; preds = %69, %62
  store atomic i64 0, i64* %59 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %64) #11
  br label %76

76:                                               ; preds = %53, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  ret { i32, double } %57

77:                                               ; preds = %159, %45
  %78 = phi i64 [ 0, %45 ], [ %162, %159 ]
  %79 = phi i32 [ 0, %45 ], [ %161, %159 ]
  %80 = phi double [ %3, %45 ], [ %160, %159 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #11
  %81 = getelementptr inbounds float, float* %4, i64 %78
  %82 = or i64 %78, 1
  %83 = getelementptr inbounds float, float* %4, i64 %82
  %84 = or i64 %78, 2
  %85 = getelementptr inbounds float, float* %4, i64 %84
  %86 = or i64 %78, 3
  %87 = getelementptr inbounds float, float* %4, i64 %86
  %88 = bitcast float* %81 to <4 x float>*
  %89 = load <4 x float>, <4 x float>* %88, align 4
  %90 = call <4 x float> @llvm.fabs.v4f32(<4 x float> %89)
  %91 = fcmp oge <4 x float> %90, <float 0x3FD3333340000000, float 0x3FD3333340000000, float 0x3FD3333340000000, float 0x3FD3333340000000>
  %92 = shufflevector <4 x i1> %91, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %93 = and <4 x i1> %91, %92
  %94 = shufflevector <4 x i1> %93, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %95 = and <4 x i1> %93, %94
  %96 = extractelement <4 x i1> %95, i32 0
  %97 = fmul <4 x float> %50, %89
  store <4 x float> %97, <4 x float>* %10, align 16
  %98 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %12, align 8
  call void @_ZN5blink12PeriodicWave31WaveDataForFundamentalFrequencyEPKfPPfS4_S3_(%"class.blink::PeriodicWave"* %98, float* nonnull %48, float** nonnull %32, float** nonnull %26, float* nonnull %38) #11
  br i1 %96, label %156, label %99

99:                                               ; preds = %77
  %100 = load float, float* %81, align 4
  %101 = call float @llvm.fabs.f32(float %100) #11
  %102 = load float, float* %38, align 16
  %103 = load float*, float** %32, align 16
  %104 = load float*, float** %26, align 16
  %105 = call fastcc float @_ZN5blinkL15DoInterpolationEdfjfPKfS1_(double %80, float %101, i32 %24, float %102, float* %103, float* %104)
  %106 = getelementptr inbounds float, float* %2, i64 %78
  store float %105, float* %106, align 4
  %107 = load float, float* %81, align 4
  %108 = fpext float %107 to double
  %109 = fadd double %80, %108
  %110 = fmul double %23, %109
  %111 = call double @llvm.floor.f64(double %110)
  %112 = fmul double %111, %22
  %113 = fsub double %109, %112
  %114 = load float, float* %83, align 4
  %115 = call float @llvm.fabs.f32(float %114) #11
  %116 = load float, float* %39, align 4
  %117 = load float*, float** %33, align 8
  %118 = load float*, float** %27, align 8
  %119 = call fastcc float @_ZN5blinkL15DoInterpolationEdfjfPKfS1_(double %113, float %115, i32 %24, float %116, float* %117, float* %118)
  %120 = getelementptr inbounds float, float* %2, i64 %82
  store float %119, float* %120, align 4
  %121 = load float, float* %83, align 4
  %122 = fpext float %121 to double
  %123 = fadd double %113, %122
  %124 = fmul double %23, %123
  %125 = call double @llvm.floor.f64(double %124)
  %126 = fmul double %125, %22
  %127 = fsub double %123, %126
  %128 = load float, float* %85, align 4
  %129 = call float @llvm.fabs.f32(float %128) #11
  %130 = load float, float* %40, align 8
  %131 = load float*, float** %34, align 16
  %132 = load float*, float** %28, align 16
  %133 = call fastcc float @_ZN5blinkL15DoInterpolationEdfjfPKfS1_(double %127, float %129, i32 %24, float %130, float* %131, float* %132)
  %134 = getelementptr inbounds float, float* %2, i64 %84
  store float %133, float* %134, align 4
  %135 = load float, float* %85, align 4
  %136 = fpext float %135 to double
  %137 = fadd double %127, %136
  %138 = fmul double %23, %137
  %139 = call double @llvm.floor.f64(double %138)
  %140 = fmul double %139, %22
  %141 = fsub double %137, %140
  %142 = load float, float* %87, align 4
  %143 = call float @llvm.fabs.f32(float %142) #11
  %144 = load float, float* %41, align 4
  %145 = load float*, float** %35, align 8
  %146 = load float*, float** %29, align 8
  %147 = call fastcc float @_ZN5blinkL15DoInterpolationEdfjfPKfS1_(double %141, float %143, i32 %24, float %144, float* %145, float* %146)
  %148 = getelementptr inbounds float, float* %2, i64 %86
  store float %147, float* %148, align 4
  %149 = load float, float* %87, align 4
  %150 = fpext float %149 to double
  %151 = fadd double %141, %150
  %152 = fmul double %23, %151
  %153 = call double @llvm.floor.f64(double %152)
  %154 = fmul double %153, %22
  %155 = fsub double %151, %154
  br label %159

156:                                              ; preds = %77
  %157 = getelementptr inbounds float, float* %2, i64 %78
  %158 = call double @_ZNK5blink17OscillatorHandler24ProcessARateVectorKernelEPfdPKfjPKS3_S5_S3_(%"class.blink::OscillatorHandler"* %0, float* %157, double %80, float* %81, i32 %21, float** nonnull %32, float** nonnull %26, float* nonnull %38) #11
  br label %159

159:                                              ; preds = %99, %156
  %160 = phi double [ %158, %156 ], [ %155, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #11
  %161 = add nuw nsw i32 %79, 1
  %162 = add nuw nsw i64 %78, 4
  %163 = icmp eq i32 %161, %42
  br i1 %163, label %51, label %77
}

declare void @_ZN5blink12PeriodicWave31WaveDataForFundamentalFrequencyEPKfPPfS4_S3_(%"class.blink::PeriodicWave"*, float*, float**, float**, float*) local_unnamed_addr #1

declare double @_ZNK5blink17OscillatorHandler24ProcessARateVectorKernelEPfdPKfjPKS3_S5_S3_(%"class.blink::OscillatorHandler"*, float*, double, float*, i32, float**, float**, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17OscillatorHandler18ProcessARateScalarEiiPfdPKf(%"class.blink::OscillatorHandler"* nocapture readonly, i32, i32, float* nocapture, double, float* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::CrossThreadPersistent", align 8
  %8 = alloca float*, align 8
  %9 = alloca float*, align 8
  %10 = alloca float, align 4
  %11 = bitcast %"class.blink::CrossThreadPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #11, !alias.scope !21
  %14 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !21
  %15 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %14, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #11, !noalias !21
  %16 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %17 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %16, align 8, !noalias !21
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.524"* nonnull %13, %"class.blink::PeriodicWave"* %17) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #11
  %18 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %12, align 8
  %19 = getelementptr inbounds %"class.blink::PeriodicWave", %"class.blink::PeriodicWave"* %18, i64 0, i32 6
  %20 = load float, float* %19, align 8
  %21 = fdiv float 1.000000e+00, %20
  %22 = call i32 @_ZNK5blink12PeriodicWave16PeriodicWaveSizeEv(%"class.blink::PeriodicWave"* %18) #11
  %23 = uitofp i32 %22 to double
  %24 = fdiv double 1.000000e+00, %23
  %25 = add i32 %22, -1
  %26 = bitcast float** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  store float* null, float** %8, align 8
  %27 = bitcast float** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store float* null, float** %9, align 8
  %28 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #11
  store float 0.000000e+00, float* %10, align 4
  %29 = icmp slt i32 %1, %2
  br i1 %29, label %30, label %32

30:                                               ; preds = %6
  %31 = sext i32 %1 to i64
  br label %53

32:                                               ; preds = %53, %6
  %33 = phi double [ %4, %6 ], [ %71, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 1
  %35 = bitcast %"class.blink::CrossThreadPersistentNodePtr.525"* %34 to i64*
  %36 = load atomic i64, i64* %35 acquire, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %52, label %38

38:                                               ; preds = %32
  %39 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %40 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %39, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %40) #11
  %41 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %42 = load atomic i64, i64* %35 monotonic, align 8
  %43 = inttoptr i64 %42 to %"class.blink::PersistentNode"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %41, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::CrossThreadPersistentRegion"* %41 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %42 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %50, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %46, align 8
  br label %51

51:                                               ; preds = %45, %38
  store atomic i64 0, i64* %35 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %40) #11
  br label %52

52:                                               ; preds = %32, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  ret double %33

53:                                               ; preds = %53, %30
  %54 = phi i64 [ %31, %30 ], [ %72, %53 ]
  %55 = phi double [ %4, %30 ], [ %71, %53 ]
  %56 = getelementptr inbounds float, float* %5, i64 %54
  %57 = load float, float* %56, align 4
  %58 = fmul float %21, %57
  %59 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %12, align 8
  call void @_ZN5blink12PeriodicWave31WaveDataForFundamentalFrequencyEfRPfS2_Rf(%"class.blink::PeriodicWave"* %59, float %58, float** nonnull dereferenceable(8) %9, float** nonnull dereferenceable(8) %8, float* nonnull dereferenceable(4) %10) #11
  %60 = call float @llvm.fabs.f32(float %57) #11
  %61 = load float, float* %10, align 4
  %62 = load float*, float** %9, align 8
  %63 = load float*, float** %8, align 8
  %64 = call fastcc float @_ZN5blinkL15DoInterpolationEdfjfPKfS1_(double %55, float %60, i32 %25, float %61, float* %62, float* %63)
  %65 = getelementptr inbounds float, float* %3, i64 %54
  store float %64, float* %65, align 4
  %66 = fpext float %57 to double
  %67 = fadd double %55, %66
  %68 = fmul double %24, %67
  %69 = call double @llvm.floor.f64(double %68)
  %70 = fmul double %69, %23
  %71 = fsub double %67, %70
  %72 = add nsw i64 %54, 1
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %73, %2
  br i1 %74, label %32, label %53
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17OscillatorHandler12ProcessARateEiPfdS1_(%"class.blink::OscillatorHandler"*, i32, float*, double, float*) local_unnamed_addr #0 align 2 {
  %6 = tail call { i32, double } @_ZNK5blink17OscillatorHandler18ProcessARateVectorEiPfdPKf(%"class.blink::OscillatorHandler"* %0, i32 %1, float* %2, double %3, float* %4)
  %7 = extractvalue { i32, double } %6, 0
  %8 = extractvalue { i32, double } %6, 1
  %9 = tail call double @_ZNK5blink17OscillatorHandler18ProcessARateScalarEiiPfdPKf(%"class.blink::OscillatorHandler"* %0, i32 %7, i32 %1, float* %2, double %8, float* %4)
  ret double %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OscillatorHandler7ProcessEj(%"class.blink::OscillatorHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CrossThreadPersistent", align 8
  %4 = alloca %"class.std::__1::tuple.531", align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  %7 = alloca float, align 4
  %8 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %9 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %8, i32 0) #11
  %10 = tail call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %9) #11
  %11 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 0, i32 5
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %10, i64 0, i32 2, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %2, %14
  tail call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %10) #11
  br label %159

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioScheduledSourceHandler"*
  %21 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3
  %22 = tail call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %21) #11
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %10) #11
  br label %159

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::CrossThreadPersistent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %3, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %3, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #11, !alias.scope !24
  %28 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !24
  %29 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %28, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %29) #11, !noalias !24
  %30 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %31 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %30, align 8, !noalias !24
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.524"* nonnull %27, %"class.blink::PeriodicWave"* %31) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %29) #11
  %32 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %26, align 8
  %33 = icmp eq %"class.blink::PeriodicWave"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %24
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %10) #11
  br label %138

35:                                               ; preds = %24
  %36 = bitcast %"class.std::__1::tuple.531"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = zext i32 %1 to i64
  call void @_ZN5blink27AudioScheduledSourceHandler20UpdateSchedulingInfoEmPNS_8AudioBusE(%"class.std::__1::tuple.531"* nonnull sret %4, %"class.blink::AudioScheduledSourceHandler"* %20, i64 %37, %"class.blink::AudioBus"* %10) #11
  %38 = getelementptr inbounds %"class.std::__1::tuple.531", %"class.std::__1::tuple.531"* %4, i64 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::tuple.531", %"class.std::__1::tuple.531"* %4, i64 0, i32 0, i32 1, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %"class.std::__1::tuple.531", %"class.std::__1::tuple.531"* %4, i64 0, i32 0, i32 2, i32 0
  %44 = load double, double* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %35
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %10) #11
  br label %138

47:                                               ; preds = %35
  %48 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %26, align 8
  %49 = call i32 @_ZNK5blink12PeriodicWave16PeriodicWaveSizeEv(%"class.blink::PeriodicWave"* %48) #11
  %50 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %10, i64 0, i32 2
  %51 = call dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.297"* %50, i32 0) #11
  %52 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %51, i64 0, i32 3
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %51, i64 0, i32 1
  %54 = load float*, float** %53, align 8
  %55 = icmp eq float* %54, null
  br i1 %55, label %56, label %61

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %51, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %58, i64 0, i32 1
  %60 = load float*, float** %59, align 8
  br label %61

61:                                               ; preds = %47, %56
  %62 = phi float* [ %60, %56 ], [ %54, %47 ]
  %63 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 5
  %64 = load double, double* %63, align 8
  %65 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %26, align 8
  %66 = getelementptr inbounds %"class.blink::PeriodicWave", %"class.blink::PeriodicWave"* %65, i64 0, i32 6
  %67 = load float, float* %66, align 8
  %68 = call zeroext i1 @_ZN5blink17OscillatorHandler38CalculateSampleAccuratePhaseIncrementsEj(%"class.blink::OscillatorHandler"* %0, i32 %1)
  %69 = bitcast float** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  store float* null, float** %5, align 8
  %70 = bitcast float** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11
  store float* null, float** %6, align 8
  %71 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #11
  store float 0.000000e+00, float* %7, align 4
  br i1 %68, label %102, label %72

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 2, i32 0
  %74 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %73, align 8
  %75 = call float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"* %74) #11
  %76 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 3, i32 0
  %77 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %76, align 8
  %78 = call float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"* %77) #11
  %79 = fdiv float %78, 1.200000e+03
  %80 = call float @exp2f(float %79) #11
  %81 = fmul float %75, %80
  %82 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %8) #11
  %83 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %82, i64 0, i32 21, i32 0
  %84 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %83, align 8
  %85 = bitcast %"class.blink::AudioDestinationHandler"* %84 to double (%"class.blink::AudioDestinationHandler"*)***
  %86 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %85, align 8
  %87 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %86, i64 25
  %88 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %87, align 8
  %89 = call double %88(%"class.blink::AudioDestinationHandler"* %84) #11
  %90 = fptrunc double %89 to float
  %91 = fmul float %90, 5.000000e-01
  %92 = fsub float -0.000000e+00, %91
  %93 = fcmp uno float %81, 0.000000e+00
  br i1 %93, label %99, label %94

94:                                               ; preds = %72
  %95 = fcmp ult float %81, %91
  %96 = fcmp ole float %81, %92
  %97 = select i1 %96, float %92, float %81
  %98 = select i1 %95, float %97, float %91
  br label %99

99:                                               ; preds = %94, %72
  %100 = phi float [ %98, %94 ], [ %91, %72 ]
  %101 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %26, align 8
  call void @_ZN5blink12PeriodicWave31WaveDataForFundamentalFrequencyEfRPfS2_Rf(%"class.blink::PeriodicWave"* %101, float %100, float** nonnull dereferenceable(8) %6, float** nonnull dereferenceable(8) %5, float* nonnull dereferenceable(4) %7) #11
  br label %102

102:                                              ; preds = %99, %61
  %103 = phi float [ %100, %99 ], [ 0.000000e+00, %61 ]
  %104 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 6, i32 1
  %105 = load float*, float** %104, align 8
  %106 = getelementptr inbounds float, float* %62, i64 %39
  %107 = fcmp ogt double %44, 0.000000e+00
  br i1 %107, label %108, label %117

108:                                              ; preds = %102
  %109 = getelementptr inbounds float, float* %106, i64 1
  %110 = add nsw i32 %42, -1
  %111 = fsub double 1.000000e+00, %44
  %112 = fpext float %103 to double
  %113 = fmul double %111, %112
  %114 = fpext float %67 to double
  %115 = fmul double %113, %114
  %116 = fadd double %64, %115
  br label %125

117:                                              ; preds = %102
  %118 = fcmp olt double %44, 0.000000e+00
  br i1 %118, label %119, label %125

119:                                              ; preds = %117
  %120 = fpext float %103 to double
  %121 = fmul double %44, %120
  %122 = fpext float %67 to double
  %123 = fmul double %121, %122
  %124 = fsub double -0.000000e+00, %123
  br label %125

125:                                              ; preds = %117, %119, %108
  %126 = phi float* [ %109, %108 ], [ %106, %119 ], [ %106, %117 ]
  %127 = phi double [ %116, %108 ], [ %124, %119 ], [ %64, %117 ]
  %128 = phi i32 [ %110, %108 ], [ %42, %119 ], [ %42, %117 ]
  br i1 %68, label %129, label %134

129:                                              ; preds = %125
  %130 = call { i32, double } @_ZNK5blink17OscillatorHandler18ProcessARateVectorEiPfdPKf(%"class.blink::OscillatorHandler"* %0, i32 %128, float* %126, double %127, float* %105) #11
  %131 = extractvalue { i32, double } %130, 0
  %132 = extractvalue { i32, double } %130, 1
  %133 = call double @_ZNK5blink17OscillatorHandler18ProcessARateScalarEiiPfdPKf(%"class.blink::OscillatorHandler"* %0, i32 %131, i32 %128, float* %126, double %132, float* %105) #11
  br label %136

134:                                              ; preds = %125
  %135 = call double @_ZNK5blink17OscillatorHandler12ProcessKRateEiPfd(%"class.blink::OscillatorHandler"* %0, i32 %128, float* %126, double %127)
  br label %136

136:                                              ; preds = %134, %129
  %137 = phi double [ %133, %129 ], [ %135, %134 ]
  store double %137, double* %63, align 8
  call void @_ZN5blink8AudioBus15ClearSilentFlagEv(%"class.blink::AudioBus"* %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  br label %138

138:                                              ; preds = %46, %136, %34
  %139 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %3, i64 0, i32 0, i32 1
  %140 = bitcast %"class.blink::CrossThreadPersistentNodePtr.525"* %139 to i64*
  %141 = load atomic i64, i64* %140 acquire, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %157, label %143

143:                                              ; preds = %138
  %144 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %145 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %144, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %145) #11
  %146 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %147 = load atomic i64, i64* %140 monotonic, align 8
  %148 = inttoptr i64 %147 to %"class.blink::PersistentNode"*
  %149 = icmp eq i64 %147, 0
  br i1 %149, label %156, label %150

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %146, i64 0, i32 0, i32 0
  %152 = bitcast %"class.blink::CrossThreadPersistentRegion"* %146 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = inttoptr i64 %147 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %148, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %155, align 8
  store %"class.blink::PersistentNode"* %148, %"class.blink::PersistentNode"** %151, align 8
  br label %156

156:                                              ; preds = %150, %143
  store atomic i64 0, i64* %140 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %145) #11
  br label %157

157:                                              ; preds = %138, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  %158 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %158) #11
  br label %159

159:                                              ; preds = %157, %23, %18
  ret void
}

declare dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #1

declare void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"*) local_unnamed_addr #1

declare void @_ZN5blink27AudioScheduledSourceHandler20UpdateSchedulingInfoEmPNS_8AudioBusE(%"class.std::__1::tuple.531"* sret, %"class.blink::AudioScheduledSourceHandler"*, i64, %"class.blink::AudioBus"*) local_unnamed_addr #1

declare void @_ZN5blink8AudioBus15ClearSilentFlagEv(%"class.blink::AudioBus"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17OscillatorHandler17PropagatesSilenceEv(%"class.blink::OscillatorHandler"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = load atomic i32, i32* %2 acquire, align 4
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %11 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %10, align 8
  %12 = icmp eq %"class.blink::PeriodicWave"* %11, null
  br label %13

13:                                               ; preds = %9, %6, %1
  %14 = phi i1 [ true, %6 ], [ true, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OscillatorHandler25HandleStoppableSourceNodeEv(%"class.blink::OscillatorHandler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioHandler"*
  %3 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %2) #11
  %4 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %3, i64 0, i32 21, i32 0
  %5 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = uitofp i64 %7 to double
  %9 = bitcast %"class.blink::AudioDestinationHandler"* %5 to double (%"class.blink::AudioDestinationHandler"*)***
  %10 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %9, align 8
  %11 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %10, i64 25
  %12 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %11, align 8
  %13 = tail call double %12(%"class.blink::AudioDestinationHandler"* %5) #11
  %14 = fdiv double %8, %13
  %15 = bitcast %"class.blink::OscillatorHandler"* %0 to %"class.blink::AudioScheduledSourceHandler"*
  %16 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 3
  %17 = tail call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %16) #11
  br i1 %17, label %18, label %46

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 5
  %20 = load double, double* %19, align 8
  %21 = load double, double* @_ZN5blink27AudioScheduledSourceHandler12kUnknownTimeE, align 8
  %22 = fcmp une double %20, %21
  br i1 %22, label %23, label %44

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = add i32 %25, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %44

28:                                               ; preds = %23
  %29 = load double, double* %19, align 8
  %30 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %2) #11
  %31 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %30, i64 0, i32 21, i32 0
  %32 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %31, align 8
  %33 = bitcast %"class.blink::AudioDestinationHandler"* %32 to double (%"class.blink::AudioDestinationHandler"*)***
  %34 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %33, align 8
  %35 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %34, i64 25
  %36 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %35, align 8
  %37 = tail call double %36(%"class.blink::AudioDestinationHandler"* %32) #11
  %38 = fptrunc double %37 to float
  %39 = fdiv float 2.560000e+02, %38
  %40 = fpext float %39 to double
  %41 = fadd double %29, %40
  %42 = fcmp ult double %14, %41
  br i1 %42, label %44, label %43

43:                                               ; preds = %28
  tail call void @_ZN5blink27AudioScheduledSourceHandler6FinishEv(%"class.blink::AudioScheduledSourceHandler"* %15) #11
  br label %44

44:                                               ; preds = %18, %23, %43, %28
  %45 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %16, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %45) #11
  br label %46

46:                                               ; preds = %1, %44
  ret void
}

declare void @_ZN5blink27AudioScheduledSourceHandler6FinishEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14OscillatorNodeC2ERNS_16BaseAudioContextERKN3WTF6StringEPNS_12PeriodicWaveE(%"class.blink::OscillatorNode"*, %"class.blink::BaseAudioContext"* dereferenceable(304), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::PeriodicWave"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink24AudioScheduledSourceNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioScheduledSourceNode"* %5, %"class.blink::BaseAudioContext"* dereferenceable(304) %1) #11
  %6 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink14OscillatorNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink14OscillatorNodeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink14OscillatorNodeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %10 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %1, i64 0, i32 21, i32 0
  %11 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %10, align 8
  %12 = bitcast %"class.blink::AudioDestinationHandler"* %11 to double (%"class.blink::AudioDestinationHandler"*)***
  %13 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %12, align 8
  %14 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %13, i64 25
  %15 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %14, align 8
  %16 = tail call double %15(%"class.blink::AudioDestinationHandler"* %11) #11
  %17 = fptrunc double %16 to float
  %18 = fmul float %17, -5.000000e-01
  %19 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %10, align 8
  %20 = bitcast %"class.blink::AudioDestinationHandler"* %19 to double (%"class.blink::AudioDestinationHandler"*)***
  %21 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %20, align 8
  %22 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %21, i64 25
  %23 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %22, align 8
  %24 = tail call double %23(%"class.blink::AudioDestinationHandler"* %19) #11
  %25 = fptrunc double %24 to float
  %26 = fmul float %25, 5.000000e-01
  %27 = tail call %"class.blink::AudioParam"* @_ZN5blink10AudioParam6CreateERNS_16BaseAudioContextERKN3WTF6StringENS_17AudioParamHandler14AudioParamTypeEdNS7_14AutomationRateENS7_18AutomationRateModeEff(%"class.blink::BaseAudioContext"* dereferenceable(304) %1, %"class.WTF::String"* dereferenceable(8) %9, i32 13, double 4.400000e+02, i32 0, i32 1, float %18, float %26) #11
  %28 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AudioParam"* %27, %"class.blink::AudioParam"** %28, align 8
  %29 = tail call float @log2f(float 0x47EFFFFFE0000000) #11
  %30 = fmul float %29, -1.200000e+03
  %31 = tail call float @log2f(float 0x47EFFFFFE0000000) #11
  %32 = fmul float %31, 1.200000e+03
  %33 = tail call %"class.blink::AudioParam"* @_ZN5blink10AudioParam6CreateERNS_16BaseAudioContextERKN3WTF6StringENS_17AudioParamHandler14AudioParamTypeEdNS7_14AutomationRateENS7_18AutomationRateModeEff(%"class.blink::BaseAudioContext"* dereferenceable(304) %1, %"class.WTF::String"* dereferenceable(8) %9, i32 14, double 0.000000e+00, i32 0, i32 1, float %30, float %32) #11
  %34 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::AudioParam"* %33, %"class.blink::AudioParam"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::PeriodicWave"* %3, %"class.blink::PeriodicWave"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0
  %37 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %10, align 8
  %38 = bitcast %"class.blink::AudioDestinationHandler"* %37 to double (%"class.blink::AudioDestinationHandler"*)***
  %39 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %38, align 8
  %40 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %39, i64 25
  %41 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %40, align 8
  %42 = tail call double %41(%"class.blink::AudioDestinationHandler"* %37) #11
  %43 = fptrunc double %42 to float
  %44 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::AudioParam", %"class.blink::AudioParam"* %44, i64 0, i32 2, i32 0
  %46 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %45, align 8
  %47 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %34, align 8
  %48 = getelementptr inbounds %"class.blink::AudioParam", %"class.blink::AudioParam"* %47, i64 0, i32 2, i32 0
  %49 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %48, align 8
  %50 = tail call noalias i8* @malloc(i64 320) #11
  %51 = bitcast i8* %50 to %"class.blink::OscillatorHandler"*
  tail call void @_ZN5blink17OscillatorHandlerC2ERNS_9AudioNodeEfRKN3WTF6StringEPNS_12PeriodicWaveERNS_17AudioParamHandlerESA_(%"class.blink::OscillatorHandler"* %51, %"class.blink::AudioNode"* dereferenceable(168) %36, float %43, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::PeriodicWave"* %3, %"class.blink::AudioParamHandler"* dereferenceable(208) %46, %"class.blink::AudioParamHandler"* dereferenceable(208) %49) #11
  %52 = bitcast i8* %50 to %"class.blink::AudioHandler"*
  tail call void @_ZN5blink9AudioNode10SetHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::AudioNode"* %36, %"class.blink::AudioHandler"* %52) #11
  ret void
}

declare void @_ZN5blink24AudioScheduledSourceNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioScheduledSourceNode"*, %"class.blink::BaseAudioContext"* dereferenceable(304)) unnamed_addr #1

declare %"class.blink::AudioParam"* @_ZN5blink10AudioParam6CreateERNS_16BaseAudioContextERKN3WTF6StringENS_17AudioParamHandler14AudioParamTypeEdNS7_14AutomationRateENS7_18AutomationRateModeEff(%"class.blink::BaseAudioContext"* dereferenceable(304), %"class.WTF::String"* dereferenceable(8), i32, double, i32, i32, float, float) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @log2f(float) local_unnamed_addr #6

declare void @_ZN5blink9AudioNode10SetHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::AudioNode"*, %"class.blink::AudioHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::OscillatorNode"* @_ZN5blink14OscillatorNode6CreateERNS_16BaseAudioContextERKN3WTF6StringEPNS_12PeriodicWaveERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* dereferenceable(304), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::PeriodicWave"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #11
  %6 = bitcast i8* %5 to %"class.blink::OscillatorNode"*
  tail call void @_ZN5blink14OscillatorNodeC2ERNS_16BaseAudioContextERKN3WTF6StringEPNS_12PeriodicWaveE(%"class.blink::OscillatorNode"* %6, %"class.blink::BaseAudioContext"* dereferenceable(304) %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::PeriodicWave"* %2) #11
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = getelementptr inbounds i8, i8* %5, i64 168
  %12 = bitcast i8* %11 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %12) #11
  ret %"class.blink::OscillatorNode"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::OscillatorNode"* @_ZN5blink14OscillatorNode6CreateEPNS_16BaseAudioContextEPKNS_17OscillatorOptionsERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::OscillatorOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::OscillatorOptions", %"class.blink::OscillatorOptions"* %1, i64 0, i32 6
  %7 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %13, i64* %14, align 8
  br label %23

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %23

23:                                               ; preds = %15, %11
  %24 = phi i64 [ %22, %15 ], [ %13, %11 ]
  %25 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  %27 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 6, i32* %30, align 8
  %31 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  %32 = getelementptr inbounds %"class.blink::OscillatorOptions", %"class.blink::OscillatorOptions"* %1, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %32, align 8
  %34 = icmp eq %"class.blink::PeriodicWave"* %33, null
  %35 = and i1 %31, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %23
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0)) #11
  br label %60

37:                                               ; preds = %23
  %38 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #11
  %39 = bitcast i8* %38 to %"class.blink::OscillatorNode"*
  call void @_ZN5blink14OscillatorNodeC2ERNS_16BaseAudioContextERKN3WTF6StringEPNS_12PeriodicWaveE(%"class.blink::OscillatorNode"* %39, %"class.blink::BaseAudioContext"* dereferenceable(304) %0, %"class.WTF::String"* dereferenceable(8) %6, %"class.blink::PeriodicWave"* %33) #11
  %40 = getelementptr inbounds i8, i8* %38, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = or i16 %42, 1
  store atomic i16 %43, i16* %41 release, align 2
  %44 = getelementptr inbounds i8, i8* %38, i64 168
  %45 = bitcast i8* %44 to %"class.blink::ActiveScriptWrappableBase"*
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %45) #11
  %46 = icmp eq i8* %38, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %37
  %48 = bitcast i8* %38 to %"class.blink::AudioNode"*
  %49 = getelementptr inbounds %"class.blink::OscillatorOptions", %"class.blink::OscillatorOptions"* %1, i64 0, i32 0
  call void @_ZN5blink9AudioNode20HandleChannelOptionsEPKNS_16AudioNodeOptionsERNS_14ExceptionStateE(%"class.blink::AudioNode"* nonnull %48, %"class.blink::AudioNodeOptions"* %49, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  %50 = getelementptr inbounds i8, i8* %38, i64 184
  %51 = bitcast i8* %50 to %"class.blink::AudioParam"**
  %52 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::OscillatorOptions", %"class.blink::OscillatorOptions"* %1, i64 0, i32 3
  %54 = load float, float* %53, align 4
  call void @_ZN5blink10AudioParam8setValueEf(%"class.blink::AudioParam"* %52, float %54) #11
  %55 = getelementptr inbounds i8, i8* %38, i64 176
  %56 = bitcast i8* %55 to %"class.blink::AudioParam"**
  %57 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::OscillatorOptions", %"class.blink::OscillatorOptions"* %1, i64 0, i32 4
  %59 = load float, float* %58, align 8
  call void @_ZN5blink10AudioParam8setValueEf(%"class.blink::AudioParam"* %57, float %59) #11
  br label %60

60:                                               ; preds = %47, %37, %36
  %61 = phi %"class.blink::OscillatorNode"* [ null, %36 ], [ %39, %47 ], [ null, %37 ]
  ret %"class.blink::OscillatorNode"* %61
}

declare void @_ZN5blink9AudioNode20HandleChannelOptionsEPKNS_16AudioNodeOptionsERNS_14ExceptionStateE(%"class.blink::AudioNode"*, %"class.blink::AudioNodeOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::AudioParam"* @_ZN5blink14OscillatorNode6detuneEv(%"class.blink::OscillatorNode"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %2, align 8
  ret %"class.blink::AudioParam"* %3
}

declare void @_ZN5blink10AudioParam8setValueEf(%"class.blink::AudioParam"*, float) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::AudioParam"* @_ZN5blink14OscillatorNode9frequencyEv(%"class.blink::OscillatorNode"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %2, align 8
  ret %"class.blink::AudioParam"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14OscillatorNode5TraceEPNS_7VisitorE(%"class.blink::OscillatorNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.542"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.542"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.322"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12PeriodicWaveEE5TraceEPNS_7VisitorEPKv) #11
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %36, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink14OscillatorNode5TraceEPNS_7VisitorE(%"class.blink::OscillatorNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 -1, i32 0, i32 0, i32 5
  %4 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %3, i64 22
  %5 = bitcast %class.scoped_refptr.276* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #11
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %3, i64 23
  %16 = bitcast %class.scoped_refptr.276* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #11
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %3, i64 24
  %27 = bitcast %class.scoped_refptr.276* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12PeriodicWaveEE5TraceEPNS_7VisitorEPKv) #11
  br label %36

36:                                               ; preds = %25, %30
  %37 = bitcast %class.scoped_refptr.276* %3 to %"class.blink::AudioNode"*
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %37, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn168_NK5blink14OscillatorNode5TraceEPNS_7VisitorE(%"class.blink::OscillatorNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %4 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 176
  %5 = bitcast i8* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #11
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 184
  %16 = bitcast i8* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #11
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 192
  %27 = bitcast i8* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12PeriodicWaveEE5TraceEPNS_7VisitorEPKv) #11
  br label %36

36:                                               ; preds = %25, %30
  %37 = bitcast i8* %3 to %"class.blink::AudioNode"*
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %37, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(320) %"class.blink::OscillatorHandler"* @_ZNK5blink14OscillatorNode20GetOscillatorHandlerEv(%"class.blink::OscillatorNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %2) #11
  %4 = bitcast %"class.blink::AudioHandler"* %3 to %"class.blink::OscillatorHandler"*
  ret %"class.blink::OscillatorHandler"* %4
}

declare dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14OscillatorNode4typeEv(%"class.blink::OscillatorNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %2) #11
  %4 = bitcast %"class.blink::AudioHandler"* %3 to %"class.blink::OscillatorHandler"*
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17OscillatorHandler7GetTypeEv(%"class.blink::OscillatorHandler"* %4)
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14OscillatorNode7setTypeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::OscillatorNode"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %4) #11
  %6 = bitcast %"class.blink::AudioHandler"* %5 to %"class.blink::OscillatorHandler"*
  tail call void @_ZN5blink17OscillatorHandler7SetTypeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::OscillatorHandler"* %6, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14OscillatorNode15setPeriodicWaveEPNS_12PeriodicWaveE(%"class.blink::OscillatorNode"*, %"class.blink::PeriodicWave"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 3
  %4 = ptrtoint %"class.blink::PeriodicWave"* %1 to i64
  %5 = bitcast %"class.blink::Member.322"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::PeriodicWave"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0
  %13 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %12) #11
  %14 = bitcast %"class.blink::AudioHandler"* %13 to %"class.blink::OscillatorHandler"*
  %15 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %13, i64 1, i32 1
  %16 = bitcast %"class.WTF::ThreadSafeRefCounted"* %15 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %16) #11
  %17 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %13, i64 2, i32 5
  %18 = bitcast i8* %17 to %"class.blink::PersistentBase.368"*
  %19 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %20 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %19, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %20) #11
  tail call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"* %18, %"class.blink::PeriodicWave"* %1) #11
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %20) #11
  %21 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %14, i64 0, i32 1
  store i8 4, i8* %21, align 1
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14OscillatorNode15ReportDidCreateEv(%"class.blink::OscillatorNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %3, %"class.blink::AudioNode"* %4) #11
  %5 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %6 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %6, align 8
  tail call void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %5, %"class.blink::AudioParam"* %7) #11
  %8 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %9 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %9, align 8
  tail call void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %8, %"class.blink::AudioParam"* %10) #11
  ret void
}

declare void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

declare void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioParam"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14OscillatorNode15ReportDidCreateEv(%"class.blink::OscillatorNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 -1, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %2, i64 10
  %4 = bitcast %class.scoped_refptr.276* %3 to %"class.blink::AudioGraphTracer"**
  %5 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %6 = bitcast %class.scoped_refptr.276* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %5, %"class.blink::AudioNode"* %6) #11
  %7 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %8 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %2, i64 23
  %9 = bitcast %class.scoped_refptr.276* %8 to %"class.blink::AudioParam"**
  %10 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %9, align 8
  tail call void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %7, %"class.blink::AudioParam"* %10) #11
  %11 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %12 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %2, i64 22
  %13 = bitcast %class.scoped_refptr.276* %12 to %"class.blink::AudioParam"**
  %14 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %13, align 8
  tail call void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %11, %"class.blink::AudioParam"* %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14OscillatorNode21ReportWillBeDestroyedEv(%"class.blink::OscillatorNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %4, align 8
  tail call void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %3, %"class.blink::AudioParam"* %5) #11
  %6 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %7 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %7, align 8
  tail call void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %6, %"class.blink::AudioParam"* %8) #11
  %9 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %10 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %9, %"class.blink::AudioNode"* %10) #11
  ret void
}

declare void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioParam"*) local_unnamed_addr #1

declare void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14OscillatorNode21ReportWillBeDestroyedEv(%"class.blink::OscillatorNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 -1, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %2, i64 10
  %4 = bitcast %class.scoped_refptr.276* %3 to %"class.blink::AudioGraphTracer"**
  %5 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %6 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %2, i64 23
  %7 = bitcast %class.scoped_refptr.276* %6 to %"class.blink::AudioParam"**
  %8 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %7, align 8
  tail call void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %5, %"class.blink::AudioParam"* %8) #11
  %9 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %10 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %2, i64 22
  %11 = bitcast %class.scoped_refptr.276* %10 to %"class.blink::AudioParam"**
  %12 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %11, align 8
  tail call void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %9, %"class.blink::AudioParam"* %12) #11
  %13 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %14 = bitcast %class.scoped_refptr.276* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %13, %"class.blink::AudioNode"* %14) #11
  ret void
}

declare void @_ZN5blink12AudioHandler7DisposeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK5blink12AudioHandler22NumberOfOutputChannelsEv(%"class.blink::AudioHandler"*) unnamed_addr #1

declare void @_ZN5blink12AudioHandler18ProcessIfNecessaryEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #1

declare void @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE(%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27AudioScheduledSourceHandler22RequiresTailProcessingEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink27AudioScheduledSourceHandler8TailTimeEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #0 comdat align 2 {
  ret double 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink27AudioScheduledSourceHandler11LatencyTimeEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #0 comdat align 2 {
  ret double 0.000000e+00
}

declare void @_ZN5blink12AudioHandler15SetChannelCountEjRNS_14ExceptionStateE(%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink12AudioHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioHandler"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioHandler"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv(%"class.blink::AudioHandler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12AudioHandler10PullInputsEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #1

declare void @_ZN5blink27AudioScheduledSourceHandler20FinishWithoutOnEndedEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24AudioScheduledSourceNodeD2Ev(%"class.blink::AudioScheduledSourceNode"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioScheduledSourceNode", %"class.blink::AudioScheduledSourceNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %2) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14OscillatorNodeD0Ev(%"class.blink::OscillatorNode"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %2) #11
  ret void
}

declare zeroext i1 @_ZNK5blink24AudioScheduledSourceNode18HasPendingActivityEv(%"class.blink::AudioScheduledSourceNode"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #11
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink14OscillatorNode18GetWrapperTypeInfoEv(%"class.blink::OscillatorNode"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14OscillatorNode18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink9AudioNode13InterfaceNameEv(%"class.blink::AudioNode"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink14OscillatorNodeD1Ev(%"class.blink::OscillatorNode"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %3 = bitcast i8* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink14OscillatorNodeD0Ev(%"class.blink::OscillatorNode"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %3 = bitcast i8* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable.541"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable.541", %"class.blink::ActiveScriptWrappable.541"* %0, i64 -21
  %3 = bitcast %"class.blink::ActiveScriptWrappable.541"* %2 to %"class.blink::AudioNode"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"* %3) #11
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #11
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable.541"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable.541", %"class.blink::ActiveScriptWrappable.541"* %0, i64 -21
  %3 = bitcast %"class.blink::ActiveScriptWrappable.541"* %2 to %"class.blink::AudioScheduledSourceNode"*
  %4 = tail call zeroext i1 @_ZNK5blink24AudioScheduledSourceNode18HasPendingActivityEv(%"class.blink::AudioScheduledSourceNode"* %3) #11
  ret i1 %4
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN5blink12AudioHandlerD2Ev(%"class.blink::AudioHandler"*) unnamed_addr #10

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18AudioParamTimeline9HasValuesEmdj(%"class.blink::AudioParamTimeline"*, i64, double, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @exp2f(float) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

declare zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.297"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.297", %"class.WTF::Vector.297"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.297", %"class.WTF::Vector.297"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %24, i64 %25
  ret %"class.blink::AudioChannel"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"*) unnamed_addr #10

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #11

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp ugt i64 %1, 1073741823
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1073741823) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.13, i64 0, i64 0), i8* %13, i8* %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.14, i64 0, i64 0), i32 63, %"class.logging::CheckOpResult"* nonnull %4) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %22 = trunc i64 %1 to i32
  %23 = shl i32 %22, 2
  %24 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast float* %25 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %28) #11
  br label %29

29:                                               ; preds = %21, %27
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %23, i32 32) #11
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %32, label %33, !prof !27

32:                                               ; preds = %29
  call void @llvm.trap() #11
  unreachable

33:                                               ; preds = %29
  %34 = extractvalue { i32, i1 } %30, 0
  %35 = zext i32 %34 to i64
  %36 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 %35, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv, i64 0, i64 0)) #11
  %37 = bitcast %"class.blink::AudioArray"* %0 to i8**
  store i8* %36, i8** %37, align 8
  %38 = icmp eq i8* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = ptrtoint i8* %36 to i64
  br label %46

41:                                               ; preds = %33
  %42 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.14, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0)) #11
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  %44 = bitcast %"class.blink::AudioArray"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi i64 [ %40, %39 ], [ %45, %41 ]
  %48 = add i64 %47, 31
  %49 = and i64 %48, -32
  %50 = inttoptr i64 %49 to float*
  %51 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 1
  store float* %50, float** %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 2
  store i32 %22, i32* %52, align 8
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.524"*, %"class.blink::PeriodicWave"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.524", %"class.blink::PersistentBase.524"* %0, i64 0, i32 0
  store %"class.blink::PeriodicWave"* %1, %"class.blink::PeriodicWave"** %3, align 8
  %4 = ptrtoint %"class.blink::PeriodicWave"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.524", %"class.blink::PersistentBase.524"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr.525"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.524"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !27

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #11
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.524"**
  store %"class.blink::PersistentBase.524"* %0, %"class.blink::PersistentBase.524"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.524", %"class.blink::PersistentBase.524"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr.525"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::PeriodicWave"**
  %5 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::PeriodicWave"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::PeriodicWave"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12PeriodicWaveEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12PeriodicWaveEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.368"*, %"class.blink::PeriodicWave"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.368", %"class.blink::PersistentBase.368"* %0, i64 0, i32 0
  store %"class.blink::PeriodicWave"* %1, %"class.blink::PeriodicWave"** %3, align 8
  %4 = ptrtoint %"class.blink::PeriodicWave"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.368", %"class.blink::PersistentBase.368"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.368"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !27

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #11
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.368"**
  store %"class.blink::PersistentBase.368"* %0, %"class.blink::PersistentBase.368"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.368", %"class.blink::PersistentBase.368"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PeriodicWave"**
  %4 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %3, align 8
  %5 = icmp eq %"class.blink::PeriodicWave"* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !27

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::PeriodicWave", %"class.blink::PeriodicWave"* %4, i64 -1, i32 7, i32 0, i32 0, i32 1
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %18
  store %"class.blink::PeriodicWave"* null, %"class.blink::PeriodicWave"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %28 = bitcast i8* %26 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = inttoptr i64 %29 to %"class.blink::PersistentNode"*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %27, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::CrossThreadPersistentRegion"* %27 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = inttoptr i64 %29 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %33, align 8
  br label %38

38:                                               ; preds = %25, %32
  store atomic i64 0, i64* %28 release, align 8
  br label %39

39:                                               ; preds = %18, %13, %2, %38
  ret void
}

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !27

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !27

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.5"*) local_unnamed_addr #1

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioParam"*
  tail call void @_ZNK5blink10AudioParam5TraceEPNS_7VisitorE(%"class.blink::AudioParam"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink10AudioParam5TraceEPNS_7VisitorE(%"class.blink::AudioParam"*, %"class.blink::Visitor"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11, !9}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv: argument 0"}
!26 = distinct !{!26, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv"}
!27 = !{!"branch_weights", i32 1, i32 2000}
