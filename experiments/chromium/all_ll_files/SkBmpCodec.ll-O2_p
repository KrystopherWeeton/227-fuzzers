; ModuleID = '../../third_party/skia/src/codec/SkBmpCodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkBmpCodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.6", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkStream* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.12, i32, i32 }
%class.sk_sp.12 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.13, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.3, [8 x i8] }
%struct.anon.3 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%class.SkStream = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkCodec* }
%class.SkBmpStandardCodec = type { %class.SkBmpBaseCodec, %class.sk_sp.41, i32, i32, i32, %"class.std::__1::unique_ptr.42", i8, i8, i64 }
%class.SkBmpBaseCodec = type { %class.SkBmpCodec, %"class.std::__1::unique_ptr.37" }
%class.SkBmpCodec = type { %class.SkCodec.base, i16, i32, i64, %"class.std::__1::unique_ptr.31" }
%class.SkCodec.base = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.6", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8 }>
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i8* }
%class.sk_sp.41 = type { %class.SkColorTable* }
%class.SkColorTable = type <{ %class.SkRefCnt.base, [4 x i8], i32*, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.SkSwizzler* }
%class.SkSwizzler = type <{ %class.SkSampler.base, [4 x i8], void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSampler.base = type <{ i32 (...)**, i32 }>
%class.SkMasks = type { %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo" }
%"struct.SkMasks::MaskInfo" = type { i32, i32, i32 }
%class.SkBmpMaskCodec = type { %class.SkBmpBaseCodec, %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.60" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.SkMasks* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.SkMaskSwizzler* }
%class.SkMaskSwizzler = type <{ %class.SkSampler.base, [4 x i8], %class.SkMasks*, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)*, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkBmpRLECodec = type <{ %class.SkBmpCodec, %class.sk_sp.41, i32, i32, i32, [4096 x i8], [4 x i8], i64, i32, i32, %"class.std::__1::unique_ptr.72", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.SkSampler* }
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.81", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.81" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.82", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.82" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%class.SkFrameHolder = type opaque

$_ZN10SkBmpCodecD2Ev = comdat any

$_ZN10SkBmpCodecD0Ev = comdat any

$_ZNK7SkCodec21onGetScaledDimensionsEf = comdat any

$_ZN7SkCodec21onDimensionsSupportedERK7SkISize = comdat any

$_ZNK10SkBmpCodec18onGetEncodedFormatEv = comdat any

$_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZNK7SkCodec16onGetValidSubsetEP7SkIRect = comdat any

$_ZNK10SkBmpCodec18onGetScanlineOrderEv = comdat any

$_ZNK7SkCodec14usesColorXformEv = comdat any

$_ZN7SkCodec15onGetFrameCountEv = comdat any

$_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE = comdat any

$_ZN7SkCodec20onGetRepetitionCountEv = comdat any

$_ZNK7SkCodec14getFrameHolderEv = comdat any

$_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZN7SkCodec19onIncrementalDecodeEPi = comdat any

$_ZN7SkCodec10getSamplerEb = comdat any

$_ZNK10SkBmpCodec7onInIcoEv = comdat any

@_ZZN10SkBmpCodec5IsBmpEPKvmE6bmpSig = internal constant [2 x i8] c"BM", align 1
@_ZTV10SkBmpCodec = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBmpCodec*)* @_ZN10SkBmpCodecD2Ev to i8*), i8* bitcast (void (%class.SkBmpCodec*)* @_ZN10SkBmpCodecD0Ev to i8*), i8* bitcast (i64 (%class.SkCodec*, float)* @_ZNK7SkCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkISize*)* @_ZN7SkCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec18onGetEncodedFormatEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkBmpCodec*)* @_ZN10SkBmpCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN10SkBmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, i32*)* @_ZN7SkCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkBmpCodec*, i32)* @_ZN10SkBmpCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkBmpCodec*, i8*, i32, i64)* @_ZN10SkBmpCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkCodec*, i1)* @_ZN7SkCodec10getSamplerEb to i8*), i8* bitcast (i1 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec7onInIcoEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkBmpCodec*, i32)* @_ZN10SkBmpCodec8skipRowsEi to i8*)] }, align 8

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10SkBmpCodec5IsBmpEPKvm(i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i64 %1, 1
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZZN10SkBmpCodec5IsBmpEPKvmE6bmpSig, i64 0, i64 0), i64 2)
  %6 = icmp eq i32 %5, 0
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i1 [ false, %2 ], [ %6, %4 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN10SkBmpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 0, i64* %6, align 8
  %7 = call i32 @_ZN10SkBmpCodec10ReadHeaderEP8SkStreambPNSt3__110unique_ptrI7SkCodecNS2_14default_deleteIS4_EEEE(%class.SkStream* %0, i1 zeroext false, %"class.std::__1::unique_ptr"* nonnull %3) #11
  store i32 %7, i32* %1, align 4
  %8 = load %class.SkCodec*, %class.SkCodec** %5, align 8
  %9 = icmp eq %class.SkCodec* %8, null
  %10 = select i1 %9, %class.SkStream* %0, %class.SkStream* null
  %11 = icmp eq i32 %7, 0
  store %class.SkCodec* null, %class.SkCodec** %5, align 8
  %12 = or i1 %11, %9
  %13 = select i1 %11, %class.SkCodec* %8, %class.SkCodec* null
  br i1 %12, label %19, label %14

14:                                               ; preds = %2
  %15 = bitcast %class.SkCodec* %8 to void (%class.SkCodec*)***
  %16 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %16, i64 1
  %18 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %17, align 8
  call void %18(%class.SkCodec* nonnull %8) #11
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi %class.SkCodec* [ null, %14 ], [ %13, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %21 = icmp eq %class.SkStream* %10, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = bitcast %class.SkStream* %10 to void (%class.SkStream*)***
  %24 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %24, i64 1
  %26 = load void (%class.SkStream*)*, void (%class.SkStream*)** %25, align 8
  call void %26(%class.SkStream* nonnull %10) #11
  br label %27

27:                                               ; preds = %22, %19
  ret %class.SkCodec* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN10SkBmpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultEb(%class.SkStream*, i32* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 0, i64* %7, align 8
  %8 = call i32 @_ZN10SkBmpCodec10ReadHeaderEP8SkStreambPNSt3__110unique_ptrI7SkCodecNS2_14default_deleteIS4_EEEE(%class.SkStream* %0, i1 zeroext %2, %"class.std::__1::unique_ptr"* nonnull %4)
  store i32 %8, i32* %1, align 4
  %9 = load %class.SkCodec*, %class.SkCodec** %6, align 8
  %10 = icmp eq %class.SkCodec* %9, null
  %11 = select i1 %10, %class.SkStream* %0, %class.SkStream* null
  %12 = icmp eq i32 %8, 0
  store %class.SkCodec* null, %class.SkCodec** %6, align 8
  %13 = or i1 %12, %10
  %14 = select i1 %12, %class.SkCodec* %9, %class.SkCodec* null
  br i1 %13, label %20, label %15

15:                                               ; preds = %3
  %16 = bitcast %class.SkCodec* %9 to void (%class.SkCodec*)***
  %17 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %17, i64 1
  %19 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %18, align 8
  call void %19(%class.SkCodec* nonnull %9) #11
  br label %20

20:                                               ; preds = %3, %15
  %21 = phi %class.SkCodec* [ null, %15 ], [ %14, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %22 = icmp eq %class.SkStream* %11, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %20
  %24 = bitcast %class.SkStream* %11 to void (%class.SkStream*)***
  %25 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %25, i64 1
  %27 = load void (%class.SkStream*)*, void (%class.SkStream*)** %26, align 8
  call void %27(%class.SkStream* nonnull %11) #11
  br label %28

28:                                               ; preds = %20, %23
  ret %class.SkCodec* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN10SkBmpCodec11MakeFromIcoENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 0, i64* %6, align 8
  %7 = call i32 @_ZN10SkBmpCodec10ReadHeaderEP8SkStreambPNSt3__110unique_ptrI7SkCodecNS2_14default_deleteIS4_EEEE(%class.SkStream* %0, i1 zeroext true, %"class.std::__1::unique_ptr"* nonnull %3) #11
  store i32 %7, i32* %1, align 4
  %8 = load %class.SkCodec*, %class.SkCodec** %5, align 8
  %9 = icmp eq %class.SkCodec* %8, null
  %10 = select i1 %9, %class.SkStream* %0, %class.SkStream* null
  %11 = icmp eq i32 %7, 0
  store %class.SkCodec* null, %class.SkCodec** %5, align 8
  %12 = or i1 %11, %9
  %13 = select i1 %11, %class.SkCodec* %8, %class.SkCodec* null
  br i1 %12, label %19, label %14

14:                                               ; preds = %2
  %15 = bitcast %class.SkCodec* %8 to void (%class.SkCodec*)***
  %16 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %16, i64 1
  %18 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %17, align 8
  call void %18(%class.SkCodec* nonnull %8) #11
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi %class.SkCodec* [ null, %14 ], [ %13, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %21 = icmp eq %class.SkStream* %10, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = bitcast %class.SkStream* %10 to void (%class.SkStream*)***
  %24 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %24, i64 1
  %26 = load void (%class.SkStream*)*, void (%class.SkStream*)** %25, align 8
  call void %26(%class.SkStream* nonnull %10) #11
  br label %27

27:                                               ; preds = %22, %19
  ret %class.SkCodec* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkBmpCodec10ReadHeaderEP8SkStreambPNSt3__110unique_ptrI7SkCodecNS2_14default_deleteIS4_EEEE(%class.SkStream*, i1 zeroext, %"class.std::__1::unique_ptr"*) local_unnamed_addr #1 align 2 {
  %4 = alloca [18 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca [12 x i8], align 4
  %7 = alloca %struct.SkEncodedInfo, align 8
  %8 = alloca %struct.SkEncodedInfo, align 8
  %9 = alloca %struct.SkEncodedInfo, align 8
  br i1 %1, label %33, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds [18 x i8], [18 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %11) #11
  %12 = getelementptr inbounds [18 x i8], [18 x i8]* %4, i64 0, i64 2
  %13 = getelementptr inbounds [18 x i8], [18 x i8]* %4, i64 0, i64 14
  %14 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*, i8*, i64)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 18, i1 false)
  %15 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %14, align 8
  %16 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %15, i64 2
  %17 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %16, align 8
  %18 = call i64 %17(%class.SkStream* %0, i8* nonnull %11, i64 18) #11
  %19 = icmp eq i64 %18, 18
  br i1 %19, label %20, label %25

20:                                               ; preds = %10
  %21 = getelementptr inbounds [18 x i8], [18 x i8]* %4, i64 0, i64 10
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 2
  %24 = icmp ult i32 %23, 26
  br i1 %24, label %25, label %27

25:                                               ; preds = %10, %20
  %26 = phi i32 [ 6, %20 ], [ 1, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %11) #11
  br label %376

27:                                               ; preds = %20
  %28 = bitcast i8* %12 to i32*
  %29 = load i32, i32* %28, align 2
  %30 = bitcast i8* %13 to i32*
  %31 = load i32, i32* %30, align 2
  %32 = icmp ugt i32 %31, 11
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %11) #11
  br i1 %32, label %45, label %376

33:                                               ; preds = %3
  %34 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #11
  %35 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*, i8*, i64)***
  store i32 -1431655766, i32* %5, align 4
  %36 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %35, align 8
  %37 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %36, i64 2
  %38 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %37, align 8
  %39 = call i64 %38(%class.SkStream* %0, i8* nonnull %34, i64 4) #11
  %40 = icmp eq i64 %39, 4
  br i1 %40, label %42, label %41

41:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #11
  br label %376

42:                                               ; preds = %33
  %43 = load i32, i32* %5, align 4
  %44 = icmp ugt i32 %43, 11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #11
  br i1 %44, label %45, label %376

45:                                               ; preds = %42, %27
  %46 = phi i32 [ %43, %42 ], [ %31, %27 ]
  %47 = phi i32 [ 0, %42 ], [ %23, %27 ]
  %48 = phi i32 [ 0, %42 ], [ %29, %27 ]
  %49 = icmp ugt i32 %46, 15
  br i1 %49, label %50, label %56

50:                                               ; preds = %45
  switch i32 %46, label %376 [
    i32 40, label %56
    i32 52, label %51
    i32 56, label %52
    i32 108, label %53
    i32 124, label %54
    i32 16, label %55
    i32 20, label %55
    i32 24, label %55
    i32 28, label %55
    i32 32, label %55
    i32 36, label %55
    i32 42, label %55
    i32 46, label %55
    i32 48, label %55
    i32 60, label %55
    i32 64, label %55
  ]

51:                                               ; preds = %50
  br label %56

52:                                               ; preds = %50
  br label %56

53:                                               ; preds = %50
  br label %56

54:                                               ; preds = %50
  br label %56

55:                                               ; preds = %50, %50, %50, %50, %50, %50, %50, %50, %50, %50, %50
  br label %56

56:                                               ; preds = %45, %55, %54, %53, %52, %51, %50
  %57 = phi i32 [ 0, %50 ], [ 1, %51 ], [ 2, %52 ], [ 3, %53 ], [ 4, %54 ], [ 6, %55 ], [ 5, %45 ]
  %58 = add nsw i32 %46, -4
  %59 = zext i32 %58 to i64
  %60 = call i8* @_Znam(i64 %59) #12
  %61 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*, i8*, i64)***
  %62 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %61, align 8
  %63 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %62, i64 2
  %64 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %63, align 8
  %65 = call i64 %64(%class.SkStream* %0, i8* nonnull %60, i64 %59) #11
  %66 = icmp eq i64 %65, %59
  br i1 %66, label %67, label %374

67:                                               ; preds = %56
  switch i32 %57, label %104 [
    i32 0, label %68
    i32 1, label %68
    i32 2, label %68
    i32 3, label %68
    i32 4, label %68
    i32 6, label %68
    i32 5, label %87
  ]

68:                                               ; preds = %67, %67, %67, %67, %67, %67
  %69 = bitcast i8* %60 to i32*
  %70 = load i32, i32* %69, align 1
  %71 = getelementptr inbounds i8, i8* %60, i64 4
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 1
  %74 = getelementptr inbounds i8, i8* %60, i64 10
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 1
  %77 = icmp ugt i32 %58, 15
  br i1 %77, label %78, label %98

78:                                               ; preds = %68
  %79 = getelementptr inbounds i8, i8* %60, i64 12
  %80 = bitcast i8* %79 to i32*
  %81 = load i32, i32* %80, align 1
  %82 = icmp ugt i32 %58, 31
  br i1 %82, label %83, label %98

83:                                               ; preds = %78
  %84 = getelementptr inbounds i8, i8* %60, i64 28
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 1
  br label %98

87:                                               ; preds = %67
  %88 = bitcast i8* %60 to i16*
  %89 = load i16, i16* %88, align 1
  %90 = zext i16 %89 to i32
  %91 = getelementptr inbounds i8, i8* %60, i64 2
  %92 = bitcast i8* %91 to i16*
  %93 = load i16, i16* %92, align 1
  %94 = zext i16 %93 to i32
  %95 = getelementptr inbounds i8, i8* %60, i64 6
  %96 = bitcast i8* %95 to i16*
  %97 = load i16, i16* %96, align 1
  br label %112

98:                                               ; preds = %68, %83, %78
  %99 = phi i32 [ %86, %83 ], [ 0, %78 ], [ 0, %68 ]
  %100 = phi i32 [ %81, %83 ], [ %81, %78 ], [ 0, %68 ]
  %101 = icmp slt i32 %73, 0
  br i1 %101, label %102, label %112

102:                                              ; preds = %98
  %103 = icmp eq i32 %73, -2147483648
  br i1 %103, label %374, label %104

104:                                              ; preds = %67, %102
  %105 = phi i32 [ 4, %102 ], [ -1431655766, %67 ]
  %106 = phi i32 [ %99, %102 ], [ 0, %67 ]
  %107 = phi i16 [ %76, %102 ], [ -21846, %67 ]
  %108 = phi i32 [ %100, %102 ], [ 0, %67 ]
  %109 = phi i32 [ %70, %102 ], [ -1431655766, %67 ]
  %110 = phi i32 [ %73, %102 ], [ -1431655766, %67 ]
  %111 = sub nsw i32 0, %110
  br label %112

112:                                              ; preds = %87, %104, %98
  %113 = phi i32 [ %109, %104 ], [ %70, %98 ], [ %90, %87 ]
  %114 = phi i32 [ %108, %104 ], [ %100, %98 ], [ 0, %87 ]
  %115 = phi i16 [ %107, %104 ], [ %76, %98 ], [ %97, %87 ]
  %116 = phi i32 [ %106, %104 ], [ %99, %98 ], [ 0, %87 ]
  %117 = phi i32 [ %105, %104 ], [ 4, %98 ], [ 3, %87 ]
  %118 = phi i32 [ 0, %104 ], [ 1, %98 ], [ 1, %87 ]
  %119 = phi i32 [ %111, %104 ], [ %73, %98 ], [ %94, %87 ]
  %120 = xor i1 %1, true
  %121 = zext i1 %1 to i32
  %122 = lshr i32 %119, %121
  %123 = add i32 %113, -1
  %124 = icmp ugt i32 %123, 65534
  %125 = add nsw i32 %122, -1
  %126 = icmp ugt i32 %125, 65534
  %127 = or i1 %124, %126
  br i1 %127, label %374, label %128

128:                                              ; preds = %112
  switch i32 %114, label %177 [
    i32 0, label %129
    i32 1, label %178
    i32 2, label %135
    i32 6, label %136
    i32 3, label %136
    i32 4, label %175
    i32 5, label %374
    i32 11, label %374
    i32 12, label %374
    i32 13, label %374
  ]

129:                                              ; preds = %128
  %130 = icmp eq i16 %115, 16
  %131 = select i1 %130, i32 31744, i32 0
  %132 = select i1 %130, i32 992, i32 0
  %133 = select i1 %130, i64 31, i64 0
  %134 = select i1 %130, i32 2, i32 0
  br label %178

135:                                              ; preds = %128
  br label %178

136:                                              ; preds = %128, %128
  switch i32 %57, label %174 [
    i32 0, label %137
    i32 1, label %155
    i32 2, label %155
    i32 3, label %155
    i32 4, label %155
    i32 6, label %374
  ]

137:                                              ; preds = %136
  %138 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %138) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %138, i8 -86, i64 12, i1 false)
  %139 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %61, align 8
  %140 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %139, i64 2
  %141 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %140, align 8
  %142 = call i64 %141(%class.SkStream* %0, i8* nonnull %138, i64 12) #11
  %143 = icmp eq i64 %142, 12
  br i1 %143, label %144, label %154

144:                                              ; preds = %137
  %145 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 8
  %146 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 4
  %147 = bitcast [12 x i8]* %6 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = bitcast i8* %146 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = bitcast i8* %145 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %138) #11
  br label %178

154:                                              ; preds = %137
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %138) #11
  br label %374

155:                                              ; preds = %136, %136, %136, %136
  %156 = getelementptr inbounds i8, i8* %60, i64 36
  %157 = bitcast i8* %156 to i32*
  %158 = load i32, i32* %157, align 1
  %159 = getelementptr inbounds i8, i8* %60, i64 40
  %160 = bitcast i8* %159 to i32*
  %161 = load i32, i32* %160, align 1
  %162 = getelementptr inbounds i8, i8* %60, i64 44
  %163 = bitcast i8* %162 to i32*
  %164 = load i32, i32* %163, align 1
  %165 = zext i32 %164 to i64
  switch i32 %57, label %167 [
    i32 1, label %178
    i32 2, label %166
  ]

166:                                              ; preds = %155
  br i1 %1, label %167, label %178

167:                                              ; preds = %166, %155
  %168 = getelementptr inbounds i8, i8* %60, i64 48
  %169 = bitcast i8* %168 to i32*
  %170 = load i32, i32* %169, align 1
  %171 = zext i32 %170 to i64
  %172 = shl nuw i64 %171, 32
  %173 = or i64 %172, %165
  br label %178

174:                                              ; preds = %136
  br label %374

175:                                              ; preds = %128
  %176 = icmp eq i16 %115, 24
  br i1 %176, label %178, label %374

177:                                              ; preds = %128
  br label %374

178:                                              ; preds = %166, %135, %128, %144, %129, %175, %155, %167
  %179 = phi i16 [ 24, %175 ], [ %115, %167 ], [ %115, %166 ], [ %115, %155 ], [ %115, %129 ], [ %115, %144 ], [ 4, %135 ], [ 8, %128 ]
  %180 = phi i32 [ 0, %175 ], [ %158, %167 ], [ %158, %166 ], [ %158, %155 ], [ %131, %129 ], [ %148, %144 ], [ 0, %135 ], [ 0, %128 ]
  %181 = phi i32 [ 0, %175 ], [ %161, %167 ], [ %161, %166 ], [ %161, %155 ], [ %132, %129 ], [ %150, %144 ], [ 0, %135 ], [ 0, %128 ]
  %182 = phi i64 [ 0, %175 ], [ %173, %167 ], [ %165, %166 ], [ %165, %155 ], [ %133, %129 ], [ %153, %144 ], [ 0, %135 ], [ 0, %128 ]
  %183 = phi i32 [ 0, %175 ], [ 0, %167 ], [ 0, %166 ], [ 0, %155 ], [ 0, %129 ], [ 12, %144 ], [ 0, %135 ], [ 0, %128 ]
  %184 = phi i32 [ 1, %175 ], [ 2, %167 ], [ 2, %166 ], [ 2, %155 ], [ %134, %129 ], [ 2, %144 ], [ 1, %135 ], [ %114, %128 ]
  call void @_ZdaPv(i8* nonnull %60) #12
  %185 = add nuw nsw i32 %46, 14
  %186 = add nuw nsw i32 %185, %183
  %187 = icmp ult i32 %47, %186
  %188 = and i1 %187, %120
  br i1 %188, label %376, label %189

189:                                              ; preds = %178
  switch i32 %184, label %376 [
    i32 0, label %190
    i32 2, label %257
    i32 1, label %331
  ]

190:                                              ; preds = %189
  switch i16 %179, label %376 [
    i16 1, label %191
    i16 2, label %191
    i16 4, label %191
    i16 8, label %191
    i16 24, label %196
    i16 32, label %199
  ]

191:                                              ; preds = %190, %190, %190, %190
  %192 = trunc i16 %179 to i8
  %193 = select i1 %1, i32 2, i32 0
  %194 = select i1 %1, i32 9, i32 4
  %195 = select i1 %1, i8 8, i8 %192
  br label %202

196:                                              ; preds = %190
  %197 = select i1 %1, i32 2, i32 0
  %198 = select i1 %1, i32 9, i32 7
  br label %202

199:                                              ; preds = %190
  %200 = zext i1 %120 to i8
  %201 = select i1 %1, i32 9, i32 8
  br label %202

202:                                              ; preds = %191, %199, %196
  %203 = phi i8 [ 1, %196 ], [ %200, %199 ], [ 1, %191 ]
  %204 = phi i32 [ %197, %196 ], [ %121, %199 ], [ %193, %191 ]
  %205 = phi i32 [ %198, %196 ], [ %201, %199 ], [ %194, %191 ]
  %206 = phi i8 [ 8, %196 ], [ 8, %199 ], [ %195, %191 ]
  %207 = icmp eq %"class.std::__1::unique_ptr"* %2, null
  br i1 %207, label %376, label %208

208:                                              ; preds = %202
  %209 = bitcast %struct.SkEncodedInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %209) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 -86, i64 24, i1 false)
  %210 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 0
  store i32 %113, i32* %210, align 8, !alias.scope !2
  %211 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 1
  store i32 %122, i32* %211, align 4, !alias.scope !2
  %212 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 2
  store i32 %205, i32* %212, align 8, !alias.scope !2
  %213 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 3
  store i32 %204, i32* %213, align 4, !alias.scope !2
  %214 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 4
  store i8 %206, i8* %214, align 8, !alias.scope !2
  %215 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 5
  %216 = bitcast %"class.std::__1::unique_ptr.0"* %215 to i64*
  store i64 0, i64* %216, align 8, !alias.scope !2
  %217 = sub i32 %47, %186
  %218 = call i8* @_Znwm(i64 1216) #12
  %219 = bitcast i8* %218 to %class.SkBmpStandardCodec*
  %220 = icmp ne i8 %203, 0
  call void @_ZN18SkBmpStandardCodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtjjjN7SkCodec15SkScanlineOrderEbb(%class.SkBmpStandardCodec* nonnull %219, %struct.SkEncodedInfo* nonnull dereferenceable(32) %7, %class.SkStream* %0, i16 zeroext %179, i32 %116, i32 %117, i32 %217, i32 %118, i1 zeroext %220, i1 zeroext %1) #11
  %221 = ptrtoint i8* %218 to i64
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %223 = load %class.SkCodec*, %class.SkCodec** %222, align 8
  %224 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %221, i64* %224, align 8
  %225 = icmp eq %class.SkCodec* %223, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %208
  %227 = bitcast i8* %218 to %class.SkBmpBaseCodec*
  br label %235

228:                                              ; preds = %208
  %229 = bitcast %class.SkCodec* %223 to void (%class.SkCodec*)***
  %230 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %229, align 8
  %231 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %230, i64 1
  %232 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %231, align 8
  call void %232(%class.SkCodec* nonnull %223) #11
  %233 = bitcast %"class.std::__1::unique_ptr"* %2 to %class.SkBmpBaseCodec**
  %234 = load %class.SkBmpBaseCodec*, %class.SkBmpBaseCodec** %233, align 8
  br label %235

235:                                              ; preds = %226, %228
  %236 = phi %class.SkBmpBaseCodec* [ %227, %226 ], [ %234, %228 ]
  %237 = getelementptr inbounds %class.SkBmpBaseCodec, %class.SkBmpBaseCodec* %236, i64 0, i32 1, i32 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  %239 = icmp eq i8* %238, null
  %240 = select i1 %239, i32 6, i32 0
  %241 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %242 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %241, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %241, align 8
  %243 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %242, null
  br i1 %243, label %256, label %244

244:                                              ; preds = %235
  %245 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %242, i64 0, i32 1, i32 0
  %246 = load %class.SkData*, %class.SkData** %245, align 8
  %247 = icmp eq %class.SkData* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %class.SkData, %class.SkData* %246, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = atomicrmw add i32* %249, i32 -1 acq_rel
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %254

252:                                              ; preds = %248
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %246) #11
  %253 = bitcast %class.SkData* %246 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %253) #11
  br label %254

254:                                              ; preds = %252, %248, %244
  %255 = bitcast %"class.SkEncodedInfo::ICCProfile"* %242 to i8*
  call void @_ZdlPv(i8* %255) #12
  br label %256

256:                                              ; preds = %235, %254
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %209) #11
  br label %376

257:                                              ; preds = %189
  br i1 %1, label %376, label %258

258:                                              ; preds = %257
  switch i16 %179, label %376 [
    i16 16, label %259
    i16 24, label %259
    i16 32, label %259
  ]

259:                                              ; preds = %258, %258, %258
  %260 = sub i32 %47, %186
  %261 = zext i32 %260 to i64
  %262 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %61, align 8
  %263 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %262, i64 2
  %264 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %263, align 8
  %265 = call i64 %264(%class.SkStream* %0, i8* null, i64 %261) #11
  %266 = icmp eq i64 %265, %261
  br i1 %266, label %267, label %376

267:                                              ; preds = %259
  %268 = icmp eq %"class.std::__1::unique_ptr"* %2, null
  br i1 %268, label %376, label %269

269:                                              ; preds = %267
  %270 = zext i32 %181 to i64
  %271 = shl nuw i64 %270, 32
  %272 = zext i32 %180 to i64
  %273 = or i64 %271, %272
  %274 = lshr i16 %179, 3
  %275 = zext i16 %274 to i32
  %276 = call %class.SkMasks* @_ZN7SkMasks11CreateMasksENS_10InputMasksEi(i64 %273, i64 %182, i32 %275) #11
  %277 = icmp eq %class.SkMasks* %276, null
  br i1 %277, label %376, label %278

278:                                              ; preds = %269
  %279 = getelementptr inbounds %class.SkMasks, %class.SkMasks* %276, i64 0, i32 3, i32 0
  %280 = load i32, i32* %279, align 4
  %281 = icmp eq i32 %280, 0
  %282 = select i1 %281, i32 7, i32 9
  %283 = xor i1 %281, true
  %284 = zext i1 %283 to i32
  %285 = bitcast %struct.SkEncodedInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %285) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %285, i8 -86, i64 24, i1 false)
  %286 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %8, i64 0, i32 0
  store i32 %113, i32* %286, align 8, !alias.scope !7
  %287 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %8, i64 0, i32 1
  store i32 %122, i32* %287, align 4, !alias.scope !7
  %288 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %8, i64 0, i32 2
  store i32 %282, i32* %288, align 8, !alias.scope !7
  %289 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %8, i64 0, i32 3
  store i32 %284, i32* %289, align 4, !alias.scope !7
  %290 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %8, i64 0, i32 4
  store i8 8, i8* %290, align 8, !alias.scope !7
  %291 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %8, i64 0, i32 5
  %292 = bitcast %"class.std::__1::unique_ptr.0"* %291 to i64*
  store i64 0, i64* %292, align 8, !alias.scope !7
  %293 = call i8* @_Znwm(i64 1184) #12
  %294 = bitcast i8* %293 to %class.SkBmpMaskCodec*
  call void @_ZN14SkBmpMaskCodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtP7SkMasksN7SkCodec15SkScanlineOrderE(%class.SkBmpMaskCodec* nonnull %294, %struct.SkEncodedInfo* nonnull dereferenceable(32) %8, %class.SkStream* %0, i16 zeroext %179, %class.SkMasks* nonnull %276, i32 %118) #11
  %295 = ptrtoint i8* %293 to i64
  %296 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %297 = load %class.SkCodec*, %class.SkCodec** %296, align 8
  %298 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %295, i64* %298, align 8
  %299 = icmp eq %class.SkCodec* %297, null
  br i1 %299, label %300, label %302

300:                                              ; preds = %278
  %301 = bitcast i8* %293 to %class.SkBmpBaseCodec*
  br label %309

302:                                              ; preds = %278
  %303 = bitcast %class.SkCodec* %297 to void (%class.SkCodec*)***
  %304 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %303, align 8
  %305 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %304, i64 1
  %306 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %305, align 8
  call void %306(%class.SkCodec* nonnull %297) #11
  %307 = bitcast %"class.std::__1::unique_ptr"* %2 to %class.SkBmpBaseCodec**
  %308 = load %class.SkBmpBaseCodec*, %class.SkBmpBaseCodec** %307, align 8
  br label %309

309:                                              ; preds = %300, %302
  %310 = phi %class.SkBmpBaseCodec* [ %301, %300 ], [ %308, %302 ]
  %311 = getelementptr inbounds %class.SkBmpBaseCodec, %class.SkBmpBaseCodec* %310, i64 0, i32 1, i32 0, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, null
  %314 = select i1 %313, i32 6, i32 0
  %315 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %8, i64 0, i32 5, i32 0, i32 0, i32 0
  %316 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %315, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %315, align 8
  %317 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %316, null
  br i1 %317, label %330, label %318

318:                                              ; preds = %309
  %319 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %316, i64 0, i32 1, i32 0
  %320 = load %class.SkData*, %class.SkData** %319, align 8
  %321 = icmp eq %class.SkData* %320, null
  br i1 %321, label %328, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %class.SkData, %class.SkData* %320, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = atomicrmw add i32* %323, i32 -1 acq_rel
  %325 = icmp eq i32 %324, 1
  br i1 %325, label %326, label %328

326:                                              ; preds = %322
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %320) #11
  %327 = bitcast %class.SkData* %320 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %327) #11
  br label %328

328:                                              ; preds = %326, %322, %318
  %329 = bitcast %"class.SkEncodedInfo::ICCProfile"* %316 to i8*
  call void @_ZdlPv(i8* %329) #12
  br label %330

330:                                              ; preds = %328, %309
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %285) #11
  br label %376

331:                                              ; preds = %189
  %332 = icmp ugt i32 %48, %47
  br i1 %332, label %333, label %376

333:                                              ; preds = %331
  %334 = icmp eq %"class.std::__1::unique_ptr"* %2, null
  br i1 %334, label %376, label %335

335:                                              ; preds = %333
  %336 = bitcast %struct.SkEncodedInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %336) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %336, i8 -86, i64 24, i1 false)
  %337 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 0
  store i32 %113, i32* %337, align 8, !alias.scope !12
  %338 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 1
  store i32 %122, i32* %338, align 4, !alias.scope !12
  %339 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 2
  store i32 9, i32* %339, align 8, !alias.scope !12
  %340 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 3
  store i32 2, i32* %340, align 4, !alias.scope !12
  %341 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 4
  store i8 8, i8* %341, align 8, !alias.scope !12
  %342 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 5
  %343 = bitcast %"class.std::__1::unique_ptr.0"* %342 to i64*
  store i64 0, i64* %343, align 8, !alias.scope !12
  %344 = sub i32 %47, %186
  %345 = call i8* @_Znwm(i64 5312) #12
  %346 = bitcast i8* %345 to %class.SkBmpRLECodec*
  call void @_ZN13SkBmpRLECodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtjjjN7SkCodec15SkScanlineOrderE(%class.SkBmpRLECodec* nonnull %346, %struct.SkEncodedInfo* nonnull dereferenceable(32) %9, %class.SkStream* %0, i16 zeroext %179, i32 %116, i32 %117, i32 %344, i32 %118) #11
  %347 = ptrtoint i8* %345 to i64
  %348 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %349 = load %class.SkCodec*, %class.SkCodec** %348, align 8
  %350 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %347, i64* %350, align 8
  %351 = icmp eq %class.SkCodec* %349, null
  br i1 %351, label %357, label %352

352:                                              ; preds = %335
  %353 = bitcast %class.SkCodec* %349 to void (%class.SkCodec*)***
  %354 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %353, align 8
  %355 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %354, i64 1
  %356 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %355, align 8
  call void %356(%class.SkCodec* nonnull %349) #11
  br label %357

357:                                              ; preds = %335, %352
  %358 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %359 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %358, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %358, align 8
  %360 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %359, null
  br i1 %360, label %373, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %359, i64 0, i32 1, i32 0
  %363 = load %class.SkData*, %class.SkData** %362, align 8
  %364 = icmp eq %class.SkData* %363, null
  br i1 %364, label %371, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %class.SkData, %class.SkData* %363, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = atomicrmw add i32* %366, i32 -1 acq_rel
  %368 = icmp eq i32 %367, 1
  br i1 %368, label %369, label %371

369:                                              ; preds = %365
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %363) #11
  %370 = bitcast %class.SkData* %363 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %370) #11
  br label %371

371:                                              ; preds = %369, %365, %361
  %372 = bitcast %"class.SkEncodedInfo::ICCProfile"* %359 to i8*
  call void @_ZdlPv(i8* %372) #12
  br label %373

373:                                              ; preds = %357, %371
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %336) #11
  br label %376

374:                                              ; preds = %56, %102, %174, %177, %136, %175, %128, %128, %128, %128, %112, %154
  %375 = phi i32 [ 1, %56 ], [ 6, %102 ], [ 6, %112 ], [ 6, %177 ], [ 6, %174 ], [ 1, %154 ], [ 9, %136 ], [ 9, %175 ], [ 9, %128 ], [ 9, %128 ], [ 9, %128 ], [ 9, %128 ]
  call void @_ZdaPv(i8* nonnull %60) #12
  br label %376

376:                                              ; preds = %269, %257, %330, %256, %190, %202, %259, %267, %258, %331, %373, %333, %189, %178, %50, %374, %41, %25, %42, %27
  %377 = phi i32 [ 6, %42 ], [ 6, %27 ], [ %26, %25 ], [ 1, %41 ], [ %375, %374 ], [ 6, %50 ], [ %314, %330 ], [ 0, %202 ], [ 6, %190 ], [ %240, %256 ], [ 6, %189 ], [ 0, %373 ], [ 0, %333 ], [ 6, %331 ], [ 0, %267 ], [ 1, %259 ], [ 6, %258 ], [ 6, %257 ], [ 6, %178 ], [ 6, %269 ]
  ret i32 %377
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

declare %class.SkMasks* @_ZN7SkMasks11CreateMasksENS_10InputMasksEi(i64, i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkBmpCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtN7SkCodec15SkScanlineOrderE(%class.SkBmpCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, i32) unnamed_addr #1 align 2 {
  %6 = bitcast %class.SkBmpCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* %6, %struct.SkEncodedInfo* dereferenceable(32) %1, i32 13, %class.SkStream* %2, i32 1) #11
  %7 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV10SkBmpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 1
  store i16 %3, i16* %8, align 2
  %9 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 2
  store i32 %4, i32* %9, align 4
  %10 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 3
  %11 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i16 %3, 16
  br i1 %13, label %14, label %21

14:                                               ; preds = %5
  %15 = trunc i16 %3 to i8
  %16 = udiv i8 8, %15
  %17 = zext i8 %16 to i32
  %18 = add i32 %12, -1
  %19 = add i32 %18, %17
  %20 = udiv i32 %19, %17
  br label %25

21:                                               ; preds = %5
  %22 = lshr i16 %3, 3
  %23 = zext i16 %22 to i32
  %24 = mul i32 %12, %23
  br label %25

25:                                               ; preds = %21, %14
  %26 = phi i32 [ %20, %14 ], [ %24, %21 ]
  %27 = zext i32 %26 to i64
  %28 = add nuw nsw i64 %27, 3
  %29 = and i64 %28, 8589934588
  store i64 %29, i64* %10, align 8
  %30 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.31"* %30 to i64*
  store i64 0, i64* %31, align 8
  ret void
}

declare void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec*, %struct.SkEncodedInfo* dereferenceable(32), i32, %class.SkStream*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkBmpCodec8onRewindEv(%class.SkBmpCodec*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %class.SkStream*, %class.SkStream** %2, align 8
  %4 = bitcast %class.SkBmpCodec* %0 to i1 (%class.SkBmpCodec*)***
  %5 = load i1 (%class.SkBmpCodec*)**, i1 (%class.SkBmpCodec*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkBmpCodec*)*, i1 (%class.SkBmpCodec*)** %5, i64 24
  %7 = load i1 (%class.SkBmpCodec*)*, i1 (%class.SkBmpCodec*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkBmpCodec* %0) #11
  %9 = tail call i32 @_ZN10SkBmpCodec10ReadHeaderEP8SkStreambPNSt3__110unique_ptrI7SkCodecNS2_14default_deleteIS4_EEEE(%class.SkStream* %3, i1 zeroext %8, %"class.std::__1::unique_ptr"* null)
  %10 = icmp eq i32 %9, 0
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec* nocapture readonly, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = xor i32 %1, -1
  %8 = add i32 %7, %2
  %9 = select i1 %6, i32 %1, i32 %8
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkBmpCodec15prepareToDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = bitcast %class.SkBmpCodec* %0 to i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)***
  %5 = load i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)**, i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)** %5, i64 25
  %7 = load i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)** %6, align 8
  %8 = tail call i32 %7(%class.SkBmpCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %2) #11
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkBmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = bitcast %class.SkBmpCodec* %0 to i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)***
  %5 = load i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)**, i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)** %5, i64 25
  %7 = load i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)** %6, align 8
  %8 = tail call i32 %7(%class.SkBmpCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %2) #11
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkBmpCodec14onGetScanlinesEPvim(%class.SkBmpCodec*, i8*, i32, i64) unnamed_addr #1 align 2 {
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 0, i32 8, i32 1, i32 0
  %10 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load i32, i32* %9, align 4
  %12 = zext i32 %2 to i64
  %13 = shl nuw i64 %12, 32
  %14 = zext i32 %11 to i64
  %15 = or i64 %13, %14
  %16 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %17 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 8, !noalias !17
  %18 = icmp eq %class.SkColorSpace* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !17
  br label %22

22:                                               ; preds = %4, %19
  store %class.SkColorSpace* %17, %class.SkColorSpace** %7, align 8, !alias.scope !17
  %23 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 0, i32 8, i32 0, i32 1
  %24 = bitcast i32* %23 to i64*
  %25 = bitcast i32* %8 to i64*
  %26 = load i64, i64* %24, align 8, !noalias !17
  store i64 %26, i64* %25, align 8, !alias.scope !17
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %28 = bitcast %struct.SkISize* %27 to i64*
  store i64 %15, i64* %28, align 8, !alias.scope !17
  %29 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 0, i32 9
  %30 = bitcast %class.SkBmpCodec* %0 to i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)***
  %31 = load i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)**, i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %31, i64 26
  %33 = load i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %32, align 8
  %34 = call i32 %33(%class.SkBmpCodec* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i8* %1, i64 %3, %"struct.SkCodec::Options"* dereferenceable(24) %29) #11
  %35 = load %class.SkColorSpace*, %class.SkColorSpace** %7, align 8
  %36 = icmp eq %class.SkColorSpace* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorSpace* %35 to i8*
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %22, %37, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkBmpCodec8skipRowsEi(%class.SkBmpCodec* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %5, %3
  %7 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %class.SkStream*, %class.SkStream** %7, align 8
  %9 = bitcast %class.SkStream* %8 to i64 (%class.SkStream*, i8*, i64)***
  %10 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %10, i64 2
  %12 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %11, align 8
  %13 = tail call i64 %12(%class.SkStream* %8, i8* null, i64 %6) #11
  %14 = icmp eq i64 %13, %6
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkBmpCodec15onSkipScanlinesEi(%class.SkBmpCodec*, i32) unnamed_addr #1 align 2 {
  %3 = bitcast %class.SkBmpCodec* %0 to i1 (%class.SkBmpCodec*, i32)***
  %4 = load i1 (%class.SkBmpCodec*, i32)**, i1 (%class.SkBmpCodec*, i32)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkBmpCodec*, i32)*, i1 (%class.SkBmpCodec*, i32)** %4, i64 27
  %6 = load i1 (%class.SkBmpCodec*, i32)*, i1 (%class.SkBmpCodec*, i32)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkBmpCodec* %0, i32 %1) #11
  ret i1 %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkBmpCodecD2Ev(%class.SkBmpCodec*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV10SkBmpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  store i32* null, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i32* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %class.SkBmpCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %9) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkBmpCodecD0Ev(%class.SkBmpCodec*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK7SkCodec21onGetScaledDimensionsEf(%class.SkCodec*, float) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec21onDimensionsSupportedERK7SkISize(%class.SkCodec*, %struct.SkISize* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkBmpCodec18onGetEncodedFormatEv(%class.SkBmpCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #1 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect(%class.SkCodec*, %struct.SkIRect*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkBmpCodec18onGetScanlineOrderEv(%class.SkBmpCodec*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #4

declare zeroext i1 @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14usesColorXformEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetFrameCountEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE(%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec20onGetRepetitionCountEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK7SkCodec14getFrameHolderEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret %class.SkFrameHolder* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec19onIncrementalDecodeEPi(%class.SkCodec*, i32*) unnamed_addr #1 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkSampler* @_ZN7SkCodec10getSamplerEb(%class.SkCodec*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  ret %class.SkSampler* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10SkBmpCodec7onInIcoEv(%class.SkBmpCodec*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN7SkCodecD2Ev(%class.SkCodec*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN18SkBmpStandardCodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtjjjN7SkCodec15SkScanlineOrderEbb(%class.SkBmpStandardCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, i32, i32, i32, i32, i1 zeroext, i1 zeroext) unnamed_addr #4

declare void @_ZN14SkBmpMaskCodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtP7SkMasksN7SkCodec15SkScanlineOrderE(%class.SkBmpMaskCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, %class.SkMasks*, i32) unnamed_addr #4

declare void @_ZN13SkBmpRLECodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtjjjN7SkCodec15SkScanlineOrderE(%class.SkBmpRLECodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, i32, i32, i32, i32) unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE"}
!5 = distinct !{!5, !6, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi: argument 0"}
!6 = distinct !{!6, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE: argument 0"}
!9 = distinct !{!9, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE"}
!10 = distinct !{!10, !11, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi: argument 0"}
!11 = distinct !{!11, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE: argument 0"}
!14 = distinct !{!14, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE"}
!15 = distinct !{!15, !16, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi: argument 0"}
!16 = distinct !{!16, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!19 = distinct !{!19, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!20 = distinct !{!20, !21, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!21 = distinct !{!21, !"_ZNK11SkImageInfo6makeWHEii"}
