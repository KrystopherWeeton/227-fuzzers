; ModuleID = '../../chrome/browser/custom_handlers/register_protocol_handler_permission_request.cc'
source_filename = "../../chrome/browser/custom_handlers/register_protocol_handler_permission_request.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.RegisterProtocolHandlerPermissionRequest = type { %"class.permissions::PermissionRequest", %class.ProtocolHandlerRegistry*, %class.ProtocolHandler, %class.GURL, %"class.base::ScopedClosureRunner" }
%"class.permissions::PermissionRequest" = type { i32 (...)** }
%class.ProtocolHandler = type <{ %"class.std::__1::basic_string", %class.GURL, %"class.absl::optional", %"class.base::Time", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GURL* }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.64 }
%class.scoped_refptr.64 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.65", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.65" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.ProtocolHandlerRegistry = type { %class.KeyedService, %"class.std::__1::map", %"class.std::__1::vector", %"class.std::__1::map", %"class.std::__1::map", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::map.18", %"class.content::BrowserContext"*, %"class.std::__1::unique_ptr.44", i8, i8, i8, [5 x i8], %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.ProtocolHandler*, %class.ProtocolHandler*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.ProtocolHandler* }
%"class.std::__1::map.18" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.38" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.27", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.27" = type { %"class.std::__1::__tree.28" }
%"class.std::__1::__tree.28" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.ProtocolHandlerRegistry::Delegate"* }
%"class.ProtocolHandlerRegistry::Delegate" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.50", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.58" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.53" }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i8 }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_string.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.69 }
%union.anon.69 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.70 }
%struct.anon.70 = type { %"struct.std::__1::__padding.71", i8 }
%"struct.std::__1::__padding.71" = type { [1 x i8] }
%"struct.base::UserMetricsAction" = type { i8* }

@_ZTV40RegisterProtocolHandlerPermissionRequest = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.RegisterProtocolHandlerPermissionRequest*)* @_ZN40RegisterProtocolHandlerPermissionRequestD2Ev to i8*), i8* bitcast (void (%class.RegisterProtocolHandlerPermissionRequest*)* @_ZN40RegisterProtocolHandlerPermissionRequestD0Ev to i8*), i8* bitcast (i32 (%class.RegisterProtocolHandlerPermissionRequest*)* @_ZNK40RegisterProtocolHandlerPermissionRequest14GetRequestTypeEv to i8*), i8* bitcast (i1 (%class.RegisterProtocolHandlerPermissionRequest*, %"class.permissions::PermissionRequest"*)* @_ZNK40RegisterProtocolHandlerPermissionRequest13IsDuplicateOfEPN11permissions17PermissionRequestE to i8*), i8* bitcast (void ()* @_ZNK11permissions17PermissionRequest11GetChipTextEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %class.RegisterProtocolHandlerPermissionRequest*)* @_ZNK40RegisterProtocolHandlerPermissionRequest22GetMessageTextFragmentEv to i8*), i8* bitcast (void (%class.GURL*, %class.RegisterProtocolHandlerPermissionRequest*)* @_ZNK40RegisterProtocolHandlerPermissionRequest9GetOriginEv to i8*), i8* bitcast (void (%class.RegisterProtocolHandlerPermissionRequest*, i1)* @_ZN40RegisterProtocolHandlerPermissionRequest17PermissionGrantedEb to i8*), i8* bitcast (void (%class.RegisterProtocolHandlerPermissionRequest*)* @_ZN40RegisterProtocolHandlerPermissionRequest16PermissionDeniedEv to i8*), i8* bitcast (void (%class.RegisterProtocolHandlerPermissionRequest*)* @_ZN40RegisterProtocolHandlerPermissionRequest9CancelledEv to i8*), i8* bitcast (void (%class.RegisterProtocolHandlerPermissionRequest*)* @_ZN40RegisterProtocolHandlerPermissionRequest15RequestFinishedEv to i8*), i8* bitcast (i32 (%"class.permissions::PermissionRequest"*)* @_ZNK11permissions17PermissionRequest14GetGestureTypeEv to i8*), i8* bitcast (i32 (%"class.permissions::PermissionRequest"*)* @_ZNK11permissions17PermissionRequest22GetContentSettingsTypeEv to i8*)] }, align 8
@.str = private unnamed_addr constant [39 x i8] c"RegisterProtocolHandler.Infobar_Accept\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"RegisterProtocolHandler.InfoBar_Deny\00", align 1

@_ZN40RegisterProtocolHandlerPermissionRequestC1EP23ProtocolHandlerRegistryRK15ProtocolHandler4GURLN4base19ScopedClosureRunnerE = hidden unnamed_addr alias void (%class.RegisterProtocolHandlerPermissionRequest*, %class.ProtocolHandlerRegistry*, %class.ProtocolHandler*, %class.GURL*, %"class.base::ScopedClosureRunner"*), void (%class.RegisterProtocolHandlerPermissionRequest*, %class.ProtocolHandlerRegistry*, %class.ProtocolHandler*, %class.GURL*, %"class.base::ScopedClosureRunner"*)* @_ZN40RegisterProtocolHandlerPermissionRequestC2EP23ProtocolHandlerRegistryRK15ProtocolHandler4GURLN4base19ScopedClosureRunnerE
@_ZN40RegisterProtocolHandlerPermissionRequestD1Ev = hidden unnamed_addr alias void (%class.RegisterProtocolHandlerPermissionRequest*), void (%class.RegisterProtocolHandlerPermissionRequest*)* @_ZN40RegisterProtocolHandlerPermissionRequestD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN40RegisterProtocolHandlerPermissionRequestC2EP23ProtocolHandlerRegistryRK15ProtocolHandler4GURLN4base19ScopedClosureRunnerE(%class.RegisterProtocolHandlerPermissionRequest*, %class.ProtocolHandlerRegistry*, %class.ProtocolHandler* dereferenceable(192), %class.GURL*, %"class.base::ScopedClosureRunner"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 0
  tail call void @_ZN11permissions17PermissionRequestC2Ev(%"class.permissions::PermissionRequest"* %6) #7
  %7 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV40RegisterProtocolHandlerPermissionRequest, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 1
  store %class.ProtocolHandlerRegistry* %1, %class.ProtocolHandlerRegistry** %8, align 8
  %9 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 2
  tail call void @_ZN15ProtocolHandlerC1ERKS_(%class.ProtocolHandler* %9, %class.ProtocolHandler* dereferenceable(192) %2) #7
  %10 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 3
  tail call void @_ZNK4GURL9GetOriginEv(%class.GURL* sret %10, %class.GURL* %3) #7
  %11 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 4
  tail call void @_ZN4base19ScopedClosureRunnerC1EOS0_(%"class.base::ScopedClosureRunner"* %11, %"class.base::ScopedClosureRunner"* dereferenceable(8) %4) #7
  ret void
}

declare void @_ZN11permissions17PermissionRequestC2Ev(%"class.permissions::PermissionRequest"*) unnamed_addr #1

declare void @_ZN15ProtocolHandlerC1ERKS_(%class.ProtocolHandler*, %class.ProtocolHandler* dereferenceable(192)) unnamed_addr #1

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #1

declare void @_ZN4base19ScopedClosureRunnerC1EOS0_(%"class.base::ScopedClosureRunner"*, %"class.base::ScopedClosureRunner"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN40RegisterProtocolHandlerPermissionRequestD2Ev(%class.RegisterProtocolHandlerPermissionRequest*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV40RegisterProtocolHandlerPermissionRequest, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 4
  tail call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* %3) #7
  %4 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 3
  tail call void @_ZN4GURLD1Ev(%class.GURL* %4) #7
  %5 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 2
  tail call void @_ZN15ProtocolHandlerD1Ev(%class.ProtocolHandler* %5) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15ProtocolHandlerD1Ev(%class.ProtocolHandler*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN40RegisterProtocolHandlerPermissionRequestD0Ev(%class.RegisterProtocolHandlerPermissionRequest*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV40RegisterProtocolHandlerPermissionRequest, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 4
  tail call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* %3) #7
  %4 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 3
  tail call void @_ZN4GURLD1Ev(%class.GURL* %4) #7
  %5 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 2
  tail call void @_ZN15ProtocolHandlerD1Ev(%class.ProtocolHandler* %5) #7
  %6 = bitcast %class.RegisterProtocolHandlerPermissionRequest* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK40RegisterProtocolHandlerPermissionRequest14GetRequestTypeEv(%class.RegisterProtocolHandlerPermissionRequest* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK40RegisterProtocolHandlerPermissionRequest13IsDuplicateOfEPN11permissions17PermissionRequestE(%class.RegisterProtocolHandlerPermissionRequest*, %"class.permissions::PermissionRequest"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK11permissions17PermissionRequest13IsDuplicateOfEPS0_(%"class.permissions::PermissionRequest"* %3, %"class.permissions::PermissionRequest"* %1) #7
  br i1 %4, label %5, label %58

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.permissions::PermissionRequest", %"class.permissions::PermissionRequest"* %1, i64 2
  %8 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.permissions::PermissionRequest"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.permissions::PermissionRequest", %"class.permissions::PermissionRequest"* %1, i64 3
  %21 = bitcast %"class.permissions::PermissionRequest"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i64 %22, i64 %23
  %25 = icmp eq i64 %15, %24
  br i1 %25, label %26, label %58

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %30 = select i1 %11, i8* %28, i8* %29
  %31 = bitcast %"class.permissions::PermissionRequest"* %7 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.permissions::PermissionRequest"* %7 to i8*
  %34 = select i1 %19, i8* %32, i8* %33
  %35 = icmp eq i64 %15, 0
  br i1 %11, label %42, label %36

36:                                               ; preds = %26
  br i1 %35, label %58, label %37

37:                                               ; preds = %36
  %38 = ptrtoint i8* %28 to i64
  %39 = trunc i64 %38 to i8
  %40 = load i8, i8* %34, align 1
  %41 = icmp eq i8 %40, %39
  br i1 %41, label %46, label %58

42:                                               ; preds = %26
  br i1 %35, label %58, label %43

43:                                               ; preds = %42
  %44 = tail call i32 @bcmp(i8* %30, i8* %34, i64 %15) #7
  %45 = icmp eq i32 %44, 0
  br label %58

46:                                               ; preds = %37, %53
  %47 = phi i64 [ %50, %53 ], [ %14, %37 ]
  %48 = phi i8* [ %51, %53 ], [ %29, %37 ]
  %49 = phi i8* [ %54, %53 ], [ %34, %37 ]
  %50 = add i64 %47, -1
  %51 = getelementptr inbounds i8, i8* %48, i64 1
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds i8, i8* %49, i64 1
  %55 = load i8, i8* %51, align 1
  %56 = load i8, i8* %54, align 1
  %57 = icmp eq i8 %55, %56
  br i1 %57, label %46, label %58

58:                                               ; preds = %53, %46, %37, %43, %42, %36, %5, %2
  %59 = phi i1 [ false, %2 ], [ false, %5 ], [ %45, %43 ], [ true, %42 ], [ true, %36 ], [ false, %37 ], [ true, %46 ], [ false, %53 ]
  ret i1 %59
}

declare zeroext i1 @_ZNK11permissions17PermissionRequest13IsDuplicateOfEPS0_(%"class.permissions::PermissionRequest"*, %"class.permissions::PermissionRequest"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK40RegisterProtocolHandlerPermissionRequest22GetMessageTextFragmentEv(%"class.std::__1::basic_string.66"* noalias sret, %class.RegisterProtocolHandlerPermissionRequest*) unnamed_addr #0 align 2 {
  %3 = alloca %class.ProtocolHandler, align 8
  %4 = alloca %"class.std::__1::basic_string.66", align 8
  %5 = alloca %"class.std::__1::basic_string.66", align 8
  %6 = alloca %"class.std::__1::basic_string.66", align 8
  %7 = bitcast %class.ProtocolHandler* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 192, i1 false)
  %8 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %1, i64 0, i32 1
  %9 = load %class.ProtocolHandlerRegistry*, %class.ProtocolHandlerRegistry** %8, align 8
  %10 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %1, i64 0, i32 2
  %11 = getelementptr inbounds %class.ProtocolHandler, %class.ProtocolHandler* %10, i64 0, i32 0
  %12 = tail call dereferenceable(192) %class.ProtocolHandler* @_ZNK23ProtocolHandlerRegistry13GetHandlerForERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.ProtocolHandlerRegistry* %9, %"class.std::__1::basic_string"* dereferenceable(24) %11) #7
  call void @_ZN15ProtocolHandlerC1ERKS_(%class.ProtocolHandler* nonnull %3, %class.ProtocolHandler* dereferenceable(192) %12) #7
  %13 = bitcast %class.ProtocolHandler* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %class.ProtocolHandler, %class.ProtocolHandler* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %61, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::basic_string.66"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #7
  call void @_ZNK15ProtocolHandler22GetProtocolDisplayNameEv(%"class.std::__1::basic_string.66"* nonnull sret %5, %class.ProtocolHandler* %10) #7
  %24 = bitcast %"class.std::__1::basic_string.66"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #7
  %25 = getelementptr inbounds %class.ProtocolHandler, %class.ProtocolHandler* %3, i64 0, i32 1
  %26 = getelementptr inbounds %class.ProtocolHandler, %class.ProtocolHandler* %3, i64 0, i32 1, i32 2, i32 3, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %43, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %class.ProtocolHandler, %class.ProtocolHandler* %3, i64 0, i32 1, i32 2, i32 3, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %31 to i64
  %33 = bitcast %class.GURL* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %class.GURL* %25 to i8*
  %40 = select i1 %36, i8* %38, i8* %39
  %41 = getelementptr inbounds i8, i8* %40, i64 %32
  %42 = sext i32 %27 to i64
  br label %43

43:                                               ; preds = %29, %22
  %44 = phi i8* [ %41, %29 ], [ null, %22 ]
  %45 = phi i64 [ %42, %29 ], [ 0, %22 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.66"* nonnull sret %6, i8* %44, i64 %45) #7
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.66"* sret %0, i32 8848, %"class.std::__1::basic_string.66"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string.66"* nonnull dereferenceable(24) %6) #7
  %46 = bitcast %"class.std::__1::basic_string.66"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = bitcast %"class.std::__1::basic_string.66"* %6 to i8**
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #8
  br label %53

53:                                               ; preds = %43, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #7
  %54 = bitcast %"class.std::__1::basic_string.66"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = bitcast %"class.std::__1::basic_string.66"* %5 to i8**
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #8
  br label %70

61:                                               ; preds = %2
  %62 = bitcast %"class.std::__1::basic_string.66"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #7
  call void @_ZNK15ProtocolHandler22GetProtocolDisplayNameEv(%"class.std::__1::basic_string.66"* nonnull sret %4, %class.ProtocolHandler* %10) #7
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.66"* sret %0, i32 8847, %"class.std::__1::basic_string.66"* nonnull dereferenceable(24) %4) #7
  %63 = bitcast %"class.std::__1::basic_string.66"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = bitcast %"class.std::__1::basic_string.66"* %4 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #8
  br label %70

70:                                               ; preds = %67, %61, %53, %58
  %71 = phi i8* [ %23, %58 ], [ %23, %53 ], [ %62, %61 ], [ %62, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #7
  call void @_ZN15ProtocolHandlerD1Ev(%class.ProtocolHandler* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %7) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare dereferenceable(192) %class.ProtocolHandler* @_ZNK23ProtocolHandlerRegistry13GetHandlerForERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.ProtocolHandlerRegistry*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.66"* sret, i32, %"class.std::__1::basic_string.66"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK15ProtocolHandler22GetProtocolDisplayNameEv(%"class.std::__1::basic_string.66"* sret, %class.ProtocolHandler*) local_unnamed_addr #1

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.66"* sret, i32, %"class.std::__1::basic_string.66"* dereferenceable(24), %"class.std::__1::basic_string.66"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.66"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK40RegisterProtocolHandlerPermissionRequest9GetOriginEv(%class.GURL* noalias sret, %class.RegisterProtocolHandlerPermissionRequest*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %1, i64 0, i32 3
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %3) #7
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN40RegisterProtocolHandlerPermissionRequest17PermissionGrantedEb(%class.RegisterProtocolHandlerPermissionRequest*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::UserMetricsAction", align 8
  %4 = bitcast %"struct.base::UserMetricsAction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8** %5, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  %6 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 1
  %7 = load %class.ProtocolHandlerRegistry*, %class.ProtocolHandlerRegistry** %6, align 8
  %8 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 2
  call void @_ZN23ProtocolHandlerRegistry31OnAcceptRegisterProtocolHandlerERK15ProtocolHandler(%class.ProtocolHandlerRegistry* %7, %class.ProtocolHandler* dereferenceable(192) %8) #7
  ret void
}

declare void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN23ProtocolHandlerRegistry31OnAcceptRegisterProtocolHandlerERK15ProtocolHandler(%class.ProtocolHandlerRegistry*, %class.ProtocolHandler* dereferenceable(192)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN40RegisterProtocolHandlerPermissionRequest16PermissionDeniedEv(%class.RegisterProtocolHandlerPermissionRequest*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::UserMetricsAction", align 8
  %3 = bitcast %"struct.base::UserMetricsAction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %4, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  %5 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 1
  %6 = load %class.ProtocolHandlerRegistry*, %class.ProtocolHandlerRegistry** %5, align 8
  %7 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 2
  call void @_ZN23ProtocolHandlerRegistry31OnIgnoreRegisterProtocolHandlerERK15ProtocolHandler(%class.ProtocolHandlerRegistry* %6, %class.ProtocolHandler* dereferenceable(192) %7) #7
  ret void
}

declare void @_ZN23ProtocolHandlerRegistry31OnIgnoreRegisterProtocolHandlerERK15ProtocolHandler(%class.ProtocolHandlerRegistry*, %class.ProtocolHandler* dereferenceable(192)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN40RegisterProtocolHandlerPermissionRequest9CancelledEv(%class.RegisterProtocolHandlerPermissionRequest*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::UserMetricsAction", align 8
  %3 = bitcast %"struct.base::UserMetricsAction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %4, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  %5 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 1
  %6 = load %class.ProtocolHandlerRegistry*, %class.ProtocolHandlerRegistry** %5, align 8
  %7 = getelementptr inbounds %class.RegisterProtocolHandlerPermissionRequest, %class.RegisterProtocolHandlerPermissionRequest* %0, i64 0, i32 2
  call void @_ZN23ProtocolHandlerRegistry31OnIgnoreRegisterProtocolHandlerERK15ProtocolHandler(%class.ProtocolHandlerRegistry* %6, %class.ProtocolHandler* dereferenceable(192) %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN40RegisterProtocolHandlerPermissionRequest15RequestFinishedEv(%class.RegisterProtocolHandlerPermissionRequest*) unnamed_addr #0 align 2 {
  %2 = icmp eq %class.RegisterProtocolHandlerPermissionRequest* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.RegisterProtocolHandlerPermissionRequest* %0 to void (%class.RegisterProtocolHandlerPermissionRequest*)***
  %5 = load void (%class.RegisterProtocolHandlerPermissionRequest*)**, void (%class.RegisterProtocolHandlerPermissionRequest*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.RegisterProtocolHandlerPermissionRequest*)*, void (%class.RegisterProtocolHandlerPermissionRequest*)** %5, i64 1
  %7 = load void (%class.RegisterProtocolHandlerPermissionRequest*)*, void (%class.RegisterProtocolHandlerPermissionRequest*)** %6, align 8
  tail call void %7(%class.RegisterProtocolHandlerPermissionRequest* nonnull %0) #7
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @_ZNK11permissions17PermissionRequest11GetChipTextEv() unnamed_addr

declare i32 @_ZNK11permissions17PermissionRequest14GetGestureTypeEv(%"class.permissions::PermissionRequest"*) unnamed_addr #1

declare i32 @_ZNK11permissions17PermissionRequest22GetContentSettingsTypeEv(%"class.permissions::PermissionRequest"*) unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
