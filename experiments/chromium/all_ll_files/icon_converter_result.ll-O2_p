; ModuleID = '../../chrome/browser/notifications/scheduler/internal/icon_converter_result.cc'
source_filename = "../../chrome/browser/notifications/scheduler/internal/icon_converter_result.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.notifications::EncodeResult" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"struct.notifications::DecodeResult" = type { i8, %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %class.SkBitmap*, %class.SkBitmap*, %"class.std::__1::__compressed_pair.16" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.15 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.8, i32, i32 }
%class.sk_sp.8 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.15 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.SkBitmap* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN13notifications12EncodeResultC1EbNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE = hidden unnamed_addr alias void (%"struct.notifications::EncodeResult"*, i1, %"class.std::__1::vector"*), void (%"struct.notifications::EncodeResult"*, i1, %"class.std::__1::vector"*)* @_ZN13notifications12EncodeResultC2EbNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE
@_ZN13notifications12EncodeResultD1Ev = hidden unnamed_addr alias void (%"struct.notifications::EncodeResult"*), void (%"struct.notifications::EncodeResult"*)* @_ZN13notifications12EncodeResultD2Ev
@_ZN13notifications12DecodeResultC1EbNSt3__16vectorI8SkBitmapNS1_9allocatorIS3_EEEE = hidden unnamed_addr alias void (%"struct.notifications::DecodeResult"*, i1, %"class.std::__1::vector.6"*), void (%"struct.notifications::DecodeResult"*, i1, %"class.std::__1::vector.6"*)* @_ZN13notifications12DecodeResultC2EbNSt3__16vectorI8SkBitmapNS1_9allocatorIS3_EEEE
@_ZN13notifications12DecodeResultD1Ev = hidden unnamed_addr alias void (%"struct.notifications::DecodeResult"*), void (%"struct.notifications::DecodeResult"*)* @_ZN13notifications12DecodeResultD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13notifications12EncodeResultC2EbNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"struct.notifications::EncodeResult"* nocapture, i1 zeroext, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %8 = bitcast %"class.std::__1::vector"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13notifications12EncodeResulteqERKS0_(%"struct.notifications::EncodeResult"* nocapture readonly, %"struct.notifications::EncodeResult"* nocapture readonly dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %1, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %15, %22
  br label %24

24:                                               ; preds = %8, %2
  %25 = phi i1 [ false, %2 ], [ %23, %8 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13notifications12EncodeResultD2Ev(%"struct.notifications::EncodeResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.notifications::EncodeResult", %"struct.notifications::EncodeResult"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #6
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #6
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13notifications12DecodeResultC2EbNSt3__16vectorI8SkBitmapNS1_9allocatorIS3_EEEE(%"struct.notifications::DecodeResult"* nocapture, i1 zeroext, %"class.std::__1::vector.6"* nocapture) unnamed_addr #0 align 2 {
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.6"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %8 = bitcast %"class.std::__1::vector.6"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.6"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 1
  %12 = bitcast %class.SkBitmap** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %class.SkBitmap** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %class.SkBitmap** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %class.SkBitmap** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector.6"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13notifications12DecodeResulteqERKS0_(%"struct.notifications::DecodeResult"* nocapture readonly, %"struct.notifications::DecodeResult"* nocapture readonly dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %class.SkBitmap** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.6"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %1, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %class.SkBitmap** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.6"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %15, %22
  br label %24

24:                                               ; preds = %8, %2
  %25 = phi i1 [ false, %2 ], [ %23, %8 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13notifications12DecodeResultD2Ev(%"struct.notifications::DecodeResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %4 = load %class.SkBitmap*, %class.SkBitmap** %3, align 8
  %5 = icmp eq %class.SkBitmap* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkBitmap* %4 to i8*
  %8 = getelementptr inbounds %"struct.notifications::DecodeResult", %"struct.notifications::DecodeResult"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %class.SkBitmap*, %class.SkBitmap** %8, align 8
  %10 = icmp eq %class.SkBitmap* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %class.SkBitmap* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 -1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %13) #5
  %14 = icmp eq %class.SkBitmap* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.6"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %class.SkBitmap* %4, %class.SkBitmap** %8, align 8
  tail call void @_ZdlPv(i8* %19) #6
  br label %20

20:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
