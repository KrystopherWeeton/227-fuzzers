; ModuleID = '../../components/policy/core/common/policy_migrator.cc'
source_filename = "../../components/policy/core/common/policy_migrator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.policy::PolicyMigrator" = type { i32 (...)** }
%"struct.policy::PolicyMigrator::Migration" = type { i8*, i8*, %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.policy::PolicyMap" = type { %"class.std::__1::map", i8, %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.policy::PolicyMap::Entry" = type { i32, i32, i32, %"class.std::__1::unique_ptr", %"class.std::__1::vector.25", %"class.absl::optional", i8, i8, %"class.std::__1::map.63" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.policy::ExternalDataFetcher"* }
%"class.policy::ExternalDataFetcher" = type { %"class.base::WeakPtr", %"class.std::__1::basic_string" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.18", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.policy::PolicyMap::EntryConflict"*, %"class.policy::PolicyMap::EntryConflict"*, %"class.std::__1::__compressed_pair.27" }
%"class.policy::PolicyMap::EntryConflict" = type { i32, %"class.policy::PolicyMap::Entry" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.policy::PolicyMap::EntryConflict"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.32 }
%union.anon.32 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.33" }
%"union.absl::variant_internal::DestructibleUnionImpl.33" = type { %"union.absl::variant_internal::DestructibleUnionImpl.34" }
%"union.absl::variant_internal::DestructibleUnionImpl.34" = type { %"union.absl::variant_internal::DestructibleUnionImpl.35" }
%"union.absl::variant_internal::DestructibleUnionImpl.35" = type { %"union.absl::variant_internal::DestructibleUnionImpl.36" }
%"union.absl::variant_internal::DestructibleUnionImpl.36" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.63" = type { %"class.std::__1::__tree.64" }
%"class.std::__1::__tree.64" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.std::__1::basic_string.76"*, %"class.std::__1::basic_string.76"*, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::basic_string.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.79 }
%union.anon.79 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::basic_string.76"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.80 }
%struct.anon.80 = type { %"struct.std::__1::__padding.81", i8 }
%"struct.std::__1::__padding.81" = type { [1 x i8] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPNS_5ValueEEJEEES5_E3RunEPNS0_13BindStateBaseES4_ = comdat any

$_ZN4base8internal9BindStateIPFvPNS_5ValueEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [55 x i8] c"../../components/policy/core/common/policy_migrator.cc\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Legacy policy '\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"' has been copied to '\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"'.\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"' is ignored because '\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"' is also set. \00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"' is not set.\00", align 1
@_ZTVN6policy14PolicyMigratorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::PolicyMigrator"*)* @_ZN6policy14PolicyMigratorD2Ev to i8*), i8* bitcast (void (%"class.policy::PolicyMigrator"*)* @_ZN6policy14PolicyMigratorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.7 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6policy14PolicyMigratorD1Ev = hidden unnamed_addr alias void (%"class.policy::PolicyMigrator"*), void (%"class.policy::PolicyMigrator"*)* @_ZN6policy14PolicyMigratorD2Ev
@_ZN6policy14PolicyMigrator9MigrationC1EOS1_ = hidden unnamed_addr alias void (%"struct.policy::PolicyMigrator::Migration"*, %"struct.policy::PolicyMigrator::Migration"*), void (%"struct.policy::PolicyMigrator::Migration"*, %"struct.policy::PolicyMigrator::Migration"*)* @_ZN6policy14PolicyMigrator9MigrationC2EOS1_
@_ZN6policy14PolicyMigrator9MigrationC1EPKcS3_ = hidden unnamed_addr alias void (%"struct.policy::PolicyMigrator::Migration"*, i8*, i8*), void (%"struct.policy::PolicyMigrator::Migration"*, i8*, i8*)* @_ZN6policy14PolicyMigrator9MigrationC2EPKcS3_
@_ZN6policy14PolicyMigrator9MigrationC1EPKcS3_N4base17RepeatingCallbackIFvPNS4_5ValueEEEE = hidden unnamed_addr alias void (%"struct.policy::PolicyMigrator::Migration"*, i8*, i8*, %"class.base::RepeatingCallback"*), void (%"struct.policy::PolicyMigrator::Migration"*, i8*, i8*, %"class.base::RepeatingCallback"*)* @_ZN6policy14PolicyMigrator9MigrationC2EPKcS3_N4base17RepeatingCallbackIFvPNS4_5ValueEEEE
@_ZN6policy14PolicyMigrator9MigrationD1Ev = hidden unnamed_addr alias void (%"struct.policy::PolicyMigrator::Migration"*), void (%"struct.policy::PolicyMigrator::Migration"*)* @_ZN6policy14PolicyMigrator9MigrationD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6policy14PolicyMigratorD2Ev(%"class.policy::PolicyMigrator"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6policy14PolicyMigratorD0Ev(%"class.policy::PolicyMigrator"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14PolicyMigrator17CopyPolicyIfUnsetERNS_9PolicyMapEPS1_RKNS0_9MigrationE(%"class.policy::PolicyMap"* dereferenceable(80), %"class.policy::PolicyMap"*, %"struct.policy::PolicyMigrator::Migration"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca %"class.policy::PolicyMap::Entry", align 8
  %10 = alloca %"class.std::__1::vector.74", align 8
  %11 = alloca [1 x %"class.std::__1::basic_string.76"], align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.policy::PolicyMap::Entry", align 8
  %14 = alloca %"class.logging::LogMessage", align 8
  %15 = alloca %"class.std::__1::vector.74", align 8
  %16 = alloca [1 x %"class.std::__1::basic_string.76"], align 8
  %17 = alloca %"class.logging::LogMessage", align 8
  %18 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i64 @strlen(i8* %20) #14
  %22 = icmp ugt i64 %21, -17
  br i1 %22, label %23, label %25

23:                                               ; preds = %3
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %24) #13
  unreachable

25:                                               ; preds = %3
  %26 = icmp ult i64 %21, 23
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = add nuw i64 %21, 16
  %29 = and i64 %28, -16
  %30 = tail call i8* @_Znwm(i64 %29) #15
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = or i64 %29, -9223372036854775808
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %34, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %41

36:                                               ; preds = %25
  %37 = trunc i64 %21 to i8
  %38 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 %37, i8* %39, align 1
  %40 = icmp eq i64 %21, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %36, %27
  %42 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %38, %36 ], [ %35, %27 ]
  %43 = phi i8* [ %18, %36 ], [ %30, %27 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 %20, i64 %21, i1 false) #14
  br label %44

44:                                               ; preds = %36, %41
  %45 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %38, %36 ], [ %42, %41 ]
  %46 = phi i8* [ %18, %36 ], [ %43, %41 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %21
  store i8 0, i8* %47, align 1
  %48 = call %"class.policy::PolicyMap::Entry"* @_ZN6policy9PolicyMap10GetMutableERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #14
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %44, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  %56 = icmp eq %"class.policy::PolicyMap::Entry"* %48, null
  br i1 %56, label %656, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #14
  %59 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %2, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = call i64 @strlen(i8* %60) #14
  %62 = icmp ugt i64 %61, -17
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %64) #13
  unreachable

65:                                               ; preds = %57
  %66 = icmp ult i64 %61, 23
  br i1 %66, label %76, label %67

67:                                               ; preds = %65
  %68 = add nuw i64 %61, 16
  %69 = and i64 %68, -16
  %70 = call i8* @_Znwm(i64 %69) #15
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %70, i8** %71, align 8
  %72 = or i64 %69, -9223372036854775808
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %61, i64* %74, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %81

76:                                               ; preds = %65
  %77 = trunc i64 %61 to i8
  %78 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  store i8 %77, i8* %79, align 1
  %80 = icmp eq i64 %61, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %76, %67
  %82 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %78, %76 ], [ %75, %67 ]
  %83 = phi i8* [ %58, %76 ], [ %70, %67 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %83, i8* align 1 %60, i64 %61, i1 false) #14
  br label %84

84:                                               ; preds = %76, %81
  %85 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %78, %76 ], [ %82, %81 ]
  %86 = phi i8* [ %58, %76 ], [ %83, %81 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 %61
  store i8 0, i8* %87, align 1
  %88 = call %"class.policy::PolicyMap::Entry"* @_ZNK6policy9PolicyMap3GetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #14
  %89 = icmp eq %"class.policy::PolicyMap::Entry"* %88, null
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #15
  br label %96

96:                                               ; preds = %84, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #14
  %97 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 55) #14
  %98 = icmp sgt i32 %97, 2
  br i1 %89, label %99, label %401

99:                                               ; preds = %96
  br i1 %98, label %100, label %113

100:                                              ; preds = %99
  %101 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %101) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 32, i32 -3) #14
  %102 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %103 = bitcast %"class.std::__1::basic_ostringstream"* %102 to %"class.std::__1::basic_ostream"*
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %103, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15) #14
  %105 = load i8*, i8** %19, align 8
  %106 = call i64 @strlen(i8* %105) #14
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %104, i8* %105, i64 %106) #14
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %107, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 22) #14
  %109 = load i8*, i8** %59, align 8
  %110 = call i64 @strlen(i8* %109) #14
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %108, i8* %109, i64 %110) #14
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %101) #14
  br label %113

113:                                              ; preds = %99, %100
  %114 = bitcast %"class.policy::PolicyMap::Entry"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %114) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 120, i1 false)
  call void @_ZNK6policy9PolicyMap5Entry8DeepCopyEv(%"class.policy::PolicyMap::Entry"* nonnull sret %9, %"class.policy::PolicyMap::Entry"* nonnull %48) #14
  %115 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %9, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp eq i8 %116, 0
  %118 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %9, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %119 = select i1 %117, %"class.base::Value"* null, %"class.base::Value"* %118
  %120 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %120, align 8
  %122 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %121, i64 0, i32 1
  %123 = bitcast void ()** %122 to void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)**
  %124 = load void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)** %123, align 8
  call void %124(%"class.base::internal::BindStateBase"* %121, %"class.base::Value"* %119) #14
  %125 = bitcast %"class.std::__1::vector.74"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #14
  %126 = bitcast [1 x %"class.std::__1::basic_string.76"]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #14
  %127 = getelementptr inbounds [1 x %"class.std::__1::basic_string.76"], [1 x %"class.std::__1::basic_string.76"]* %11, i64 0, i64 0
  %128 = load i8*, i8** %19, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %113
  %131 = call i64 @strlen(i8* nonnull %128) #14
  br label %135

132:                                              ; preds = %113
  %133 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #14
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #14
  br label %135

135:                                              ; preds = %130, %132
  %136 = phi i64 [ 0, %132 ], [ %131, %130 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.76"* nonnull sret %127, i8* %128, i64 %136) #14
  %137 = call i8* @_Znwm(i64 24) #15
  %138 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %10, i64 0, i32 0, i32 1
  %139 = bitcast %"class.std::__1::basic_string.76"** %138 to i8**
  store i8* %137, i8** %139, align 8
  %140 = bitcast %"class.std::__1::vector.74"* %10 to i8**
  store i8* %137, i8** %140, align 8
  %141 = getelementptr inbounds i8, i8* %137, i64 24
  %142 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %143 = bitcast %"class.std::__1::basic_string.76"** %142 to i8**
  store i8* %141, i8** %143, align 8
  %144 = bitcast %"class.std::__1::basic_string.76"** %138 to i64*
  %145 = bitcast [1 x %"class.std::__1::basic_string.76"]* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %145, i64 0, i32 1, i32 1
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %135
  %150 = bitcast [1 x %"class.std::__1::basic_string.76"]* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %137, i8* nonnull align 8 %150, i64 24, i1 false) #14
  br label %330

151:                                              ; preds = %135
  %152 = getelementptr inbounds [1 x %"class.std::__1::basic_string.76"], [1 x %"class.std::__1::basic_string.76"]* %11, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i16*, i16** %152, align 8
  %154 = bitcast i16* %153 to i8*
  %155 = getelementptr inbounds [1 x %"class.std::__1::basic_string.76"], [1 x %"class.std::__1::basic_string.76"]* %11, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = icmp ult i64 %156, 11
  br i1 %157, label %158, label %161

158:                                              ; preds = %151
  %159 = trunc i64 %156 to i8
  %160 = getelementptr inbounds i8, i8* %137, i64 23
  store i8 %159, i8* %160, align 1
  br label %179

161:                                              ; preds = %151
  %162 = icmp ugt i64 %156, 9223372036854775791
  br i1 %162, label %163, label %165

163:                                              ; preds = %161
  %164 = bitcast i8* %137 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %164) #13
  unreachable

165:                                              ; preds = %161
  %166 = add nuw nsw i64 %156, 8
  %167 = and i64 %166, -8
  %168 = icmp slt i64 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %165
  call void @abort() #13
  unreachable

170:                                              ; preds = %165
  %171 = shl i64 %167, 1
  %172 = call i8* @_Znwm(i64 %171) #15
  %173 = bitcast i8* %137 to i8**
  store i8* %172, i8** %173, align 8
  %174 = or i64 %167, -9223372036854775808
  %175 = getelementptr inbounds i8, i8* %137, i64 16
  %176 = bitcast i8* %175 to i64*
  store i64 %174, i64* %176, align 8
  %177 = getelementptr inbounds i8, i8* %137, i64 8
  %178 = bitcast i8* %177 to i64*
  store i64 %156, i64* %178, align 8
  br label %179

179:                                              ; preds = %170, %158
  %180 = phi i8* [ %137, %158 ], [ %172, %170 ]
  %181 = bitcast i8* %180 to i16*
  %182 = add nuw nsw i64 %156, 1
  %183 = add i64 %156, 1
  %184 = icmp ult i64 %183, 16
  br i1 %184, label %277, label %185

185:                                              ; preds = %179
  %186 = shl i64 %156, 1
  %187 = add i64 %186, 2
  %188 = getelementptr i8, i8* %180, i64 %187
  %189 = add i64 %156, 1
  %190 = getelementptr i16, i16* %153, i64 %189
  %191 = bitcast i16* %190 to i8*
  %192 = icmp ult i8* %180, %191
  %193 = icmp ugt i8* %188, %154
  %194 = and i1 %192, %193
  br i1 %194, label %277, label %195

195:                                              ; preds = %185
  %196 = and i64 %183, -16
  %197 = sub i64 %182, %196
  %198 = getelementptr i16, i16* %153, i64 %196
  %199 = getelementptr i16, i16* %181, i64 %196
  %200 = add i64 %196, -16
  %201 = lshr exact i64 %200, 4
  %202 = add nuw nsw i64 %201, 1
  %203 = and i64 %202, 3
  %204 = icmp ult i64 %200, 48
  br i1 %204, label %256, label %205

205:                                              ; preds = %195
  %206 = sub nsw i64 %202, %203
  br label %207

207:                                              ; preds = %207, %205
  %208 = phi i64 [ 0, %205 ], [ %253, %207 ]
  %209 = phi i64 [ %206, %205 ], [ %254, %207 ]
  %210 = getelementptr i16, i16* %153, i64 %208
  %211 = getelementptr i16, i16* %181, i64 %208
  %212 = bitcast i16* %210 to <8 x i16>*
  %213 = load <8 x i16>, <8 x i16>* %212, align 2, !alias.scope !3
  %214 = getelementptr i16, i16* %210, i64 8
  %215 = bitcast i16* %214 to <8 x i16>*
  %216 = load <8 x i16>, <8 x i16>* %215, align 2, !alias.scope !3
  %217 = bitcast i16* %211 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %217, align 2, !alias.scope !6, !noalias !3
  %218 = getelementptr i16, i16* %211, i64 8
  %219 = bitcast i16* %218 to <8 x i16>*
  store <8 x i16> %216, <8 x i16>* %219, align 2, !alias.scope !6, !noalias !3
  %220 = or i64 %208, 16
  %221 = getelementptr i16, i16* %153, i64 %220
  %222 = getelementptr i16, i16* %181, i64 %220
  %223 = bitcast i16* %221 to <8 x i16>*
  %224 = load <8 x i16>, <8 x i16>* %223, align 2, !alias.scope !3
  %225 = getelementptr i16, i16* %221, i64 8
  %226 = bitcast i16* %225 to <8 x i16>*
  %227 = load <8 x i16>, <8 x i16>* %226, align 2, !alias.scope !3
  %228 = bitcast i16* %222 to <8 x i16>*
  store <8 x i16> %224, <8 x i16>* %228, align 2, !alias.scope !6, !noalias !3
  %229 = getelementptr i16, i16* %222, i64 8
  %230 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %230, align 2, !alias.scope !6, !noalias !3
  %231 = or i64 %208, 32
  %232 = getelementptr i16, i16* %153, i64 %231
  %233 = getelementptr i16, i16* %181, i64 %231
  %234 = bitcast i16* %232 to <8 x i16>*
  %235 = load <8 x i16>, <8 x i16>* %234, align 2, !alias.scope !3
  %236 = getelementptr i16, i16* %232, i64 8
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !3
  %239 = bitcast i16* %233 to <8 x i16>*
  store <8 x i16> %235, <8 x i16>* %239, align 2, !alias.scope !6, !noalias !3
  %240 = getelementptr i16, i16* %233, i64 8
  %241 = bitcast i16* %240 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %241, align 2, !alias.scope !6, !noalias !3
  %242 = or i64 %208, 48
  %243 = getelementptr i16, i16* %153, i64 %242
  %244 = getelementptr i16, i16* %181, i64 %242
  %245 = bitcast i16* %243 to <8 x i16>*
  %246 = load <8 x i16>, <8 x i16>* %245, align 2, !alias.scope !3
  %247 = getelementptr i16, i16* %243, i64 8
  %248 = bitcast i16* %247 to <8 x i16>*
  %249 = load <8 x i16>, <8 x i16>* %248, align 2, !alias.scope !3
  %250 = bitcast i16* %244 to <8 x i16>*
  store <8 x i16> %246, <8 x i16>* %250, align 2, !alias.scope !6, !noalias !3
  %251 = getelementptr i16, i16* %244, i64 8
  %252 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %249, <8 x i16>* %252, align 2, !alias.scope !6, !noalias !3
  %253 = add i64 %208, 64
  %254 = add i64 %209, -4
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %207, !llvm.loop !8

256:                                              ; preds = %207, %195
  %257 = phi i64 [ 0, %195 ], [ %253, %207 ]
  %258 = icmp eq i64 %203, 0
  br i1 %258, label %275, label %259

259:                                              ; preds = %256, %259
  %260 = phi i64 [ %272, %259 ], [ %257, %256 ]
  %261 = phi i64 [ %273, %259 ], [ %203, %256 ]
  %262 = getelementptr i16, i16* %153, i64 %260
  %263 = getelementptr i16, i16* %181, i64 %260
  %264 = bitcast i16* %262 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !3
  %266 = getelementptr i16, i16* %262, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !3
  %269 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !6, !noalias !3
  %270 = getelementptr i16, i16* %263, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !6, !noalias !3
  %272 = add i64 %260, 16
  %273 = add i64 %261, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %259, !llvm.loop !10

275:                                              ; preds = %259, %256
  %276 = icmp eq i64 %183, %196
  br i1 %276, label %330, label %277

277:                                              ; preds = %275, %185, %179
  %278 = phi i64 [ %182, %185 ], [ %182, %179 ], [ %197, %275 ]
  %279 = phi i16* [ %153, %185 ], [ %153, %179 ], [ %198, %275 ]
  %280 = phi i16* [ %181, %185 ], [ %181, %179 ], [ %199, %275 ]
  %281 = add i64 %278, -1
  %282 = and i64 %278, 7
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %295, label %284

284:                                              ; preds = %277, %284
  %285 = phi i64 [ %290, %284 ], [ %278, %277 ]
  %286 = phi i16* [ %292, %284 ], [ %279, %277 ]
  %287 = phi i16* [ %291, %284 ], [ %280, %277 ]
  %288 = phi i64 [ %293, %284 ], [ %282, %277 ]
  %289 = load i16, i16* %286, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %285, -1
  %291 = getelementptr inbounds i16, i16* %287, i64 1
  %292 = getelementptr inbounds i16, i16* %286, i64 1
  %293 = add i64 %288, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %284, !llvm.loop !12

295:                                              ; preds = %284, %277
  %296 = phi i64 [ %278, %277 ], [ %290, %284 ]
  %297 = phi i16* [ %279, %277 ], [ %292, %284 ]
  %298 = phi i16* [ %280, %277 ], [ %291, %284 ]
  %299 = icmp ult i64 %281, 7
  br i1 %299, label %330, label %300

300:                                              ; preds = %295, %300
  %301 = phi i64 [ %326, %300 ], [ %296, %295 ]
  %302 = phi i16* [ %328, %300 ], [ %297, %295 ]
  %303 = phi i16* [ %327, %300 ], [ %298, %295 ]
  %304 = load i16, i16* %302, align 2
  store i16 %304, i16* %303, align 2
  %305 = getelementptr inbounds i16, i16* %303, i64 1
  %306 = getelementptr inbounds i16, i16* %302, i64 1
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %303, i64 2
  %309 = getelementptr inbounds i16, i16* %302, i64 2
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %303, i64 3
  %312 = getelementptr inbounds i16, i16* %302, i64 3
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %303, i64 4
  %315 = getelementptr inbounds i16, i16* %302, i64 4
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %303, i64 5
  %318 = getelementptr inbounds i16, i16* %302, i64 5
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %303, i64 6
  %321 = getelementptr inbounds i16, i16* %302, i64 6
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %303, i64 7
  %324 = getelementptr inbounds i16, i16* %302, i64 7
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %301, -8
  %327 = getelementptr inbounds i16, i16* %303, i64 8
  %328 = getelementptr inbounds i16, i16* %302, i64 8
  %329 = icmp eq i64 %326, 0
  br i1 %329, label %330, label %300, !llvm.loop !13

330:                                              ; preds = %295, %300, %275, %149
  %331 = getelementptr inbounds i8, i8* %137, i64 24
  %332 = ptrtoint i8* %331 to i64
  store i64 %332, i64* %144, align 8
  call void @_ZN6policy9PolicyMap5Entry10AddMessageENS0_11MessageTypeEiONSt3__16vectorINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEE(%"class.policy::PolicyMap::Entry"* nonnull %9, i32 1, i32 20432, %"class.std::__1::vector.74"* nonnull dereferenceable(24) %10) #14
  %333 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %10, i64 0, i32 0, i32 0
  %334 = load %"class.std::__1::basic_string.76"*, %"class.std::__1::basic_string.76"** %333, align 8
  %335 = icmp eq %"class.std::__1::basic_string.76"* %334, null
  br i1 %335, label %356, label %336

336:                                              ; preds = %330
  %337 = bitcast %"class.std::__1::basic_string.76"* %334 to i8*
  %338 = load %"class.std::__1::basic_string.76"*, %"class.std::__1::basic_string.76"** %138, align 8
  %339 = icmp eq %"class.std::__1::basic_string.76"* %338, %334
  br i1 %339, label %354, label %340

340:                                              ; preds = %336, %350
  %341 = phi %"class.std::__1::basic_string.76"* [ %342, %350 ], [ %338, %336 ]
  %342 = getelementptr inbounds %"class.std::__1::basic_string.76", %"class.std::__1::basic_string.76"* %341, i64 -1
  %343 = bitcast %"class.std::__1::basic_string.76"* %342 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %344 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %343, i64 0, i32 1, i32 1
  %345 = load i8, i8* %344, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %340
  %348 = bitcast %"class.std::__1::basic_string.76"* %342 to i8**
  %349 = load i8*, i8** %348, align 8
  call void @_ZdlPv(i8* %349) #15
  br label %350

350:                                              ; preds = %347, %340
  %351 = icmp eq %"class.std::__1::basic_string.76"* %342, %334
  br i1 %351, label %352, label %340

352:                                              ; preds = %350
  %353 = load i8*, i8** %140, align 8
  br label %354

354:                                              ; preds = %352, %336
  %355 = phi i8* [ %353, %352 ], [ %337, %336 ]
  store %"class.std::__1::basic_string.76"* %334, %"class.std::__1::basic_string.76"** %138, align 8
  call void @_ZdlPv(i8* %355) #15
  br label %356

356:                                              ; preds = %330, %354
  %357 = bitcast [1 x %"class.std::__1::basic_string.76"]* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %358 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %357, i64 0, i32 1, i32 1
  %359 = load i8, i8* %358, align 1
  %360 = icmp slt i8 %359, 0
  br i1 %360, label %361, label %364

361:                                              ; preds = %356
  %362 = bitcast [1 x %"class.std::__1::basic_string.76"]* %11 to i8**
  %363 = load i8*, i8** %362, align 8
  call void @_ZdlPv(i8* %363) #15
  br label %364

364:                                              ; preds = %356, %361
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #14
  %365 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %365) #14
  %366 = load i8*, i8** %59, align 8
  %367 = call i64 @strlen(i8* %366) #14
  %368 = icmp ugt i64 %367, -17
  br i1 %368, label %369, label %371

369:                                              ; preds = %364
  %370 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %370) #13
  unreachable

371:                                              ; preds = %364
  %372 = icmp ult i64 %367, 23
  br i1 %372, label %382, label %373

373:                                              ; preds = %371
  %374 = add nuw i64 %367, 16
  %375 = and i64 %374, -16
  %376 = call i8* @_Znwm(i64 %375) #15
  %377 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %376, i8** %377, align 8
  %378 = or i64 %375, -9223372036854775808
  %379 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %367, i64* %380, align 8
  %381 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %387

382:                                              ; preds = %371
  %383 = trunc i64 %367 to i8
  %384 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %385 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %384, i64 0, i32 1, i32 0
  store i8 %383, i8* %385, align 1
  %386 = icmp eq i64 %367, 0
  br i1 %386, label %390, label %387

387:                                              ; preds = %382, %373
  %388 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %384, %382 ], [ %381, %373 ]
  %389 = phi i8* [ %365, %382 ], [ %376, %373 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %389, i8* align 1 %366, i64 %367, i1 false) #14
  br label %390

390:                                              ; preds = %382, %387
  %391 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %384, %382 ], [ %388, %387 ]
  %392 = phi i8* [ %365, %382 ], [ %389, %387 ]
  %393 = getelementptr inbounds i8, i8* %392, i64 %367
  store i8 0, i8* %393, align 1
  call void @_ZN6policy9PolicyMap5EntryC1EOS1_(%"class.policy::PolicyMap::Entry"* nonnull %13, %"class.policy::PolicyMap::Entry"* nonnull dereferenceable(120) %9) #14
  call void @_ZN6policy9PolicyMap3SetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_5EntryE(%"class.policy::PolicyMap"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.policy::PolicyMap::Entry"* nonnull %13) #14
  call void @_ZN6policy9PolicyMap5EntryD1Ev(%"class.policy::PolicyMap::Entry"* nonnull %13) #14
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %391, i64 0, i32 1, i32 0
  %395 = load i8, i8* %394, align 1
  %396 = icmp slt i8 %395, 0
  br i1 %396, label %397, label %400

397:                                              ; preds = %390
  %398 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load i8*, i8** %398, align 8
  call void @_ZdlPv(i8* %399) #15
  br label %400

400:                                              ; preds = %390, %397
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %365) #14
  call void @_ZN6policy9PolicyMap5EntryD1Ev(%"class.policy::PolicyMap::Entry"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %114) #14
  br label %415

401:                                              ; preds = %96
  br i1 %98, label %402, label %415

402:                                              ; preds = %401
  %403 = bitcast %"class.logging::LogMessage"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %403) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %14, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 41, i32 -3) #14
  %404 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %14, i64 0, i32 2
  %405 = bitcast %"class.std::__1::basic_ostringstream"* %404 to %"class.std::__1::basic_ostream"*
  %406 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %405, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15) #14
  %407 = load i8*, i8** %19, align 8
  %408 = call i64 @strlen(i8* %407) #14
  %409 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %406, i8* %407, i64 %408) #14
  %410 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %409, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i64 22) #14
  %411 = load i8*, i8** %59, align 8
  %412 = call i64 @strlen(i8* %411) #14
  %413 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %410, i8* %411, i64 %412) #14
  %414 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %413, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %403) #14
  br label %415

415:                                              ; preds = %402, %401, %400
  %416 = bitcast %"class.std::__1::vector.74"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %416) #14
  %417 = bitcast [1 x %"class.std::__1::basic_string.76"]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %417) #14
  %418 = getelementptr inbounds [1 x %"class.std::__1::basic_string.76"], [1 x %"class.std::__1::basic_string.76"]* %16, i64 0, i64 0
  %419 = load i8*, i8** %59, align 8
  %420 = icmp eq i8* %419, null
  br i1 %420, label %423, label %421

421:                                              ; preds = %415
  %422 = call i64 @strlen(i8* nonnull %419) #14
  br label %426

423:                                              ; preds = %415
  %424 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %424) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #14
  %425 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %424) #14
  br label %426

426:                                              ; preds = %421, %423
  %427 = phi i64 [ 0, %423 ], [ %422, %421 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.76"* nonnull sret %418, i8* %419, i64 %427) #14
  %428 = call i8* @_Znwm(i64 24) #15
  %429 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %15, i64 0, i32 0, i32 1
  %430 = bitcast %"class.std::__1::basic_string.76"** %429 to i8**
  store i8* %428, i8** %430, align 8
  %431 = bitcast %"class.std::__1::vector.74"* %15 to i8**
  store i8* %428, i8** %431, align 8
  %432 = getelementptr inbounds i8, i8* %428, i64 24
  %433 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %434 = bitcast %"class.std::__1::basic_string.76"** %433 to i8**
  store i8* %432, i8** %434, align 8
  %435 = bitcast %"class.std::__1::basic_string.76"** %429 to i64*
  %436 = bitcast [1 x %"class.std::__1::basic_string.76"]* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %437 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %436, i64 0, i32 1, i32 1
  %438 = load i8, i8* %437, align 1
  %439 = icmp slt i8 %438, 0
  br i1 %439, label %442, label %440

440:                                              ; preds = %426
  %441 = bitcast [1 x %"class.std::__1::basic_string.76"]* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %428, i8* nonnull align 8 %441, i64 24, i1 false) #14
  br label %621

442:                                              ; preds = %426
  %443 = getelementptr inbounds [1 x %"class.std::__1::basic_string.76"], [1 x %"class.std::__1::basic_string.76"]* %16, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load i16*, i16** %443, align 8
  %445 = bitcast i16* %444 to i8*
  %446 = getelementptr inbounds [1 x %"class.std::__1::basic_string.76"], [1 x %"class.std::__1::basic_string.76"]* %16, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %447 = load i64, i64* %446, align 8
  %448 = icmp ult i64 %447, 11
  br i1 %448, label %449, label %452

449:                                              ; preds = %442
  %450 = trunc i64 %447 to i8
  %451 = getelementptr inbounds i8, i8* %428, i64 23
  store i8 %450, i8* %451, align 1
  br label %470

452:                                              ; preds = %442
  %453 = icmp ugt i64 %447, 9223372036854775791
  br i1 %453, label %454, label %456

454:                                              ; preds = %452
  %455 = bitcast i8* %428 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %455) #13
  unreachable

456:                                              ; preds = %452
  %457 = add nuw nsw i64 %447, 8
  %458 = and i64 %457, -8
  %459 = icmp slt i64 %458, 0
  br i1 %459, label %460, label %461

460:                                              ; preds = %456
  call void @abort() #13
  unreachable

461:                                              ; preds = %456
  %462 = shl i64 %458, 1
  %463 = call i8* @_Znwm(i64 %462) #15
  %464 = bitcast i8* %428 to i8**
  store i8* %463, i8** %464, align 8
  %465 = or i64 %458, -9223372036854775808
  %466 = getelementptr inbounds i8, i8* %428, i64 16
  %467 = bitcast i8* %466 to i64*
  store i64 %465, i64* %467, align 8
  %468 = getelementptr inbounds i8, i8* %428, i64 8
  %469 = bitcast i8* %468 to i64*
  store i64 %447, i64* %469, align 8
  br label %470

470:                                              ; preds = %461, %449
  %471 = phi i8* [ %428, %449 ], [ %463, %461 ]
  %472 = bitcast i8* %471 to i16*
  %473 = add nuw nsw i64 %447, 1
  %474 = add i64 %447, 1
  %475 = icmp ult i64 %474, 16
  br i1 %475, label %568, label %476

476:                                              ; preds = %470
  %477 = shl i64 %447, 1
  %478 = add i64 %477, 2
  %479 = getelementptr i8, i8* %471, i64 %478
  %480 = add i64 %447, 1
  %481 = getelementptr i16, i16* %444, i64 %480
  %482 = bitcast i16* %481 to i8*
  %483 = icmp ult i8* %471, %482
  %484 = icmp ugt i8* %479, %445
  %485 = and i1 %483, %484
  br i1 %485, label %568, label %486

486:                                              ; preds = %476
  %487 = and i64 %474, -16
  %488 = sub i64 %473, %487
  %489 = getelementptr i16, i16* %444, i64 %487
  %490 = getelementptr i16, i16* %472, i64 %487
  %491 = add i64 %487, -16
  %492 = lshr exact i64 %491, 4
  %493 = add nuw nsw i64 %492, 1
  %494 = and i64 %493, 3
  %495 = icmp ult i64 %491, 48
  br i1 %495, label %547, label %496

496:                                              ; preds = %486
  %497 = sub nsw i64 %493, %494
  br label %498

498:                                              ; preds = %498, %496
  %499 = phi i64 [ 0, %496 ], [ %544, %498 ]
  %500 = phi i64 [ %497, %496 ], [ %545, %498 ]
  %501 = getelementptr i16, i16* %444, i64 %499
  %502 = getelementptr i16, i16* %472, i64 %499
  %503 = bitcast i16* %501 to <8 x i16>*
  %504 = load <8 x i16>, <8 x i16>* %503, align 2, !alias.scope !14
  %505 = getelementptr i16, i16* %501, i64 8
  %506 = bitcast i16* %505 to <8 x i16>*
  %507 = load <8 x i16>, <8 x i16>* %506, align 2, !alias.scope !14
  %508 = bitcast i16* %502 to <8 x i16>*
  store <8 x i16> %504, <8 x i16>* %508, align 2, !alias.scope !17, !noalias !14
  %509 = getelementptr i16, i16* %502, i64 8
  %510 = bitcast i16* %509 to <8 x i16>*
  store <8 x i16> %507, <8 x i16>* %510, align 2, !alias.scope !17, !noalias !14
  %511 = or i64 %499, 16
  %512 = getelementptr i16, i16* %444, i64 %511
  %513 = getelementptr i16, i16* %472, i64 %511
  %514 = bitcast i16* %512 to <8 x i16>*
  %515 = load <8 x i16>, <8 x i16>* %514, align 2, !alias.scope !14
  %516 = getelementptr i16, i16* %512, i64 8
  %517 = bitcast i16* %516 to <8 x i16>*
  %518 = load <8 x i16>, <8 x i16>* %517, align 2, !alias.scope !14
  %519 = bitcast i16* %513 to <8 x i16>*
  store <8 x i16> %515, <8 x i16>* %519, align 2, !alias.scope !17, !noalias !14
  %520 = getelementptr i16, i16* %513, i64 8
  %521 = bitcast i16* %520 to <8 x i16>*
  store <8 x i16> %518, <8 x i16>* %521, align 2, !alias.scope !17, !noalias !14
  %522 = or i64 %499, 32
  %523 = getelementptr i16, i16* %444, i64 %522
  %524 = getelementptr i16, i16* %472, i64 %522
  %525 = bitcast i16* %523 to <8 x i16>*
  %526 = load <8 x i16>, <8 x i16>* %525, align 2, !alias.scope !14
  %527 = getelementptr i16, i16* %523, i64 8
  %528 = bitcast i16* %527 to <8 x i16>*
  %529 = load <8 x i16>, <8 x i16>* %528, align 2, !alias.scope !14
  %530 = bitcast i16* %524 to <8 x i16>*
  store <8 x i16> %526, <8 x i16>* %530, align 2, !alias.scope !17, !noalias !14
  %531 = getelementptr i16, i16* %524, i64 8
  %532 = bitcast i16* %531 to <8 x i16>*
  store <8 x i16> %529, <8 x i16>* %532, align 2, !alias.scope !17, !noalias !14
  %533 = or i64 %499, 48
  %534 = getelementptr i16, i16* %444, i64 %533
  %535 = getelementptr i16, i16* %472, i64 %533
  %536 = bitcast i16* %534 to <8 x i16>*
  %537 = load <8 x i16>, <8 x i16>* %536, align 2, !alias.scope !14
  %538 = getelementptr i16, i16* %534, i64 8
  %539 = bitcast i16* %538 to <8 x i16>*
  %540 = load <8 x i16>, <8 x i16>* %539, align 2, !alias.scope !14
  %541 = bitcast i16* %535 to <8 x i16>*
  store <8 x i16> %537, <8 x i16>* %541, align 2, !alias.scope !17, !noalias !14
  %542 = getelementptr i16, i16* %535, i64 8
  %543 = bitcast i16* %542 to <8 x i16>*
  store <8 x i16> %540, <8 x i16>* %543, align 2, !alias.scope !17, !noalias !14
  %544 = add i64 %499, 64
  %545 = add i64 %500, -4
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %547, label %498, !llvm.loop !19

547:                                              ; preds = %498, %486
  %548 = phi i64 [ 0, %486 ], [ %544, %498 ]
  %549 = icmp eq i64 %494, 0
  br i1 %549, label %566, label %550

550:                                              ; preds = %547, %550
  %551 = phi i64 [ %563, %550 ], [ %548, %547 ]
  %552 = phi i64 [ %564, %550 ], [ %494, %547 ]
  %553 = getelementptr i16, i16* %444, i64 %551
  %554 = getelementptr i16, i16* %472, i64 %551
  %555 = bitcast i16* %553 to <8 x i16>*
  %556 = load <8 x i16>, <8 x i16>* %555, align 2, !alias.scope !14
  %557 = getelementptr i16, i16* %553, i64 8
  %558 = bitcast i16* %557 to <8 x i16>*
  %559 = load <8 x i16>, <8 x i16>* %558, align 2, !alias.scope !14
  %560 = bitcast i16* %554 to <8 x i16>*
  store <8 x i16> %556, <8 x i16>* %560, align 2, !alias.scope !17, !noalias !14
  %561 = getelementptr i16, i16* %554, i64 8
  %562 = bitcast i16* %561 to <8 x i16>*
  store <8 x i16> %559, <8 x i16>* %562, align 2, !alias.scope !17, !noalias !14
  %563 = add i64 %551, 16
  %564 = add i64 %552, -1
  %565 = icmp eq i64 %564, 0
  br i1 %565, label %566, label %550, !llvm.loop !20

566:                                              ; preds = %550, %547
  %567 = icmp eq i64 %474, %487
  br i1 %567, label %621, label %568

568:                                              ; preds = %566, %476, %470
  %569 = phi i64 [ %473, %476 ], [ %473, %470 ], [ %488, %566 ]
  %570 = phi i16* [ %444, %476 ], [ %444, %470 ], [ %489, %566 ]
  %571 = phi i16* [ %472, %476 ], [ %472, %470 ], [ %490, %566 ]
  %572 = add i64 %569, -1
  %573 = and i64 %569, 7
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %586, label %575

575:                                              ; preds = %568, %575
  %576 = phi i64 [ %581, %575 ], [ %569, %568 ]
  %577 = phi i16* [ %583, %575 ], [ %570, %568 ]
  %578 = phi i16* [ %582, %575 ], [ %571, %568 ]
  %579 = phi i64 [ %584, %575 ], [ %573, %568 ]
  %580 = load i16, i16* %577, align 2
  store i16 %580, i16* %578, align 2
  %581 = add i64 %576, -1
  %582 = getelementptr inbounds i16, i16* %578, i64 1
  %583 = getelementptr inbounds i16, i16* %577, i64 1
  %584 = add i64 %579, -1
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %575, !llvm.loop !21

586:                                              ; preds = %575, %568
  %587 = phi i64 [ %569, %568 ], [ %581, %575 ]
  %588 = phi i16* [ %570, %568 ], [ %583, %575 ]
  %589 = phi i16* [ %571, %568 ], [ %582, %575 ]
  %590 = icmp ult i64 %572, 7
  br i1 %590, label %621, label %591

591:                                              ; preds = %586, %591
  %592 = phi i64 [ %617, %591 ], [ %587, %586 ]
  %593 = phi i16* [ %619, %591 ], [ %588, %586 ]
  %594 = phi i16* [ %618, %591 ], [ %589, %586 ]
  %595 = load i16, i16* %593, align 2
  store i16 %595, i16* %594, align 2
  %596 = getelementptr inbounds i16, i16* %594, i64 1
  %597 = getelementptr inbounds i16, i16* %593, i64 1
  %598 = load i16, i16* %597, align 2
  store i16 %598, i16* %596, align 2
  %599 = getelementptr inbounds i16, i16* %594, i64 2
  %600 = getelementptr inbounds i16, i16* %593, i64 2
  %601 = load i16, i16* %600, align 2
  store i16 %601, i16* %599, align 2
  %602 = getelementptr inbounds i16, i16* %594, i64 3
  %603 = getelementptr inbounds i16, i16* %593, i64 3
  %604 = load i16, i16* %603, align 2
  store i16 %604, i16* %602, align 2
  %605 = getelementptr inbounds i16, i16* %594, i64 4
  %606 = getelementptr inbounds i16, i16* %593, i64 4
  %607 = load i16, i16* %606, align 2
  store i16 %607, i16* %605, align 2
  %608 = getelementptr inbounds i16, i16* %594, i64 5
  %609 = getelementptr inbounds i16, i16* %593, i64 5
  %610 = load i16, i16* %609, align 2
  store i16 %610, i16* %608, align 2
  %611 = getelementptr inbounds i16, i16* %594, i64 6
  %612 = getelementptr inbounds i16, i16* %593, i64 6
  %613 = load i16, i16* %612, align 2
  store i16 %613, i16* %611, align 2
  %614 = getelementptr inbounds i16, i16* %594, i64 7
  %615 = getelementptr inbounds i16, i16* %593, i64 7
  %616 = load i16, i16* %615, align 2
  store i16 %616, i16* %614, align 2
  %617 = add i64 %592, -8
  %618 = getelementptr inbounds i16, i16* %594, i64 8
  %619 = getelementptr inbounds i16, i16* %593, i64 8
  %620 = icmp eq i64 %617, 0
  br i1 %620, label %621, label %591, !llvm.loop !22

621:                                              ; preds = %586, %591, %566, %440
  %622 = getelementptr inbounds i8, i8* %428, i64 24
  %623 = ptrtoint i8* %622 to i64
  store i64 %623, i64* %435, align 8
  call void @_ZN6policy9PolicyMap5Entry10AddMessageENS0_11MessageTypeEiONSt3__16vectorINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEE(%"class.policy::PolicyMap::Entry"* nonnull %48, i32 2, i32 20431, %"class.std::__1::vector.74"* nonnull dereferenceable(24) %15) #14
  %624 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %15, i64 0, i32 0, i32 0
  %625 = load %"class.std::__1::basic_string.76"*, %"class.std::__1::basic_string.76"** %624, align 8
  %626 = icmp eq %"class.std::__1::basic_string.76"* %625, null
  br i1 %626, label %647, label %627

627:                                              ; preds = %621
  %628 = bitcast %"class.std::__1::basic_string.76"* %625 to i8*
  %629 = load %"class.std::__1::basic_string.76"*, %"class.std::__1::basic_string.76"** %429, align 8
  %630 = icmp eq %"class.std::__1::basic_string.76"* %629, %625
  br i1 %630, label %645, label %631

631:                                              ; preds = %627, %641
  %632 = phi %"class.std::__1::basic_string.76"* [ %633, %641 ], [ %629, %627 ]
  %633 = getelementptr inbounds %"class.std::__1::basic_string.76", %"class.std::__1::basic_string.76"* %632, i64 -1
  %634 = bitcast %"class.std::__1::basic_string.76"* %633 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %635 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %634, i64 0, i32 1, i32 1
  %636 = load i8, i8* %635, align 1
  %637 = icmp slt i8 %636, 0
  br i1 %637, label %638, label %641

638:                                              ; preds = %631
  %639 = bitcast %"class.std::__1::basic_string.76"* %633 to i8**
  %640 = load i8*, i8** %639, align 8
  call void @_ZdlPv(i8* %640) #15
  br label %641

641:                                              ; preds = %638, %631
  %642 = icmp eq %"class.std::__1::basic_string.76"* %633, %625
  br i1 %642, label %643, label %631

643:                                              ; preds = %641
  %644 = load i8*, i8** %431, align 8
  br label %645

645:                                              ; preds = %643, %627
  %646 = phi i8* [ %644, %643 ], [ %628, %627 ]
  store %"class.std::__1::basic_string.76"* %625, %"class.std::__1::basic_string.76"** %429, align 8
  call void @_ZdlPv(i8* %646) #15
  br label %647

647:                                              ; preds = %621, %645
  %648 = bitcast [1 x %"class.std::__1::basic_string.76"]* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %649 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %648, i64 0, i32 1, i32 1
  %650 = load i8, i8* %649, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %655

652:                                              ; preds = %647
  %653 = bitcast [1 x %"class.std::__1::basic_string.76"]* %16 to i8**
  %654 = load i8*, i8** %653, align 8
  call void @_ZdlPv(i8* %654) #15
  br label %655

655:                                              ; preds = %647, %652
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %417) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %416) #14
  br label %668

656:                                              ; preds = %55
  %657 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 55) #14
  %658 = icmp sgt i32 %657, 2
  br i1 %658, label %659, label %668

659:                                              ; preds = %656
  %660 = bitcast %"class.logging::LogMessage"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %660) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %17, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 49, i32 -3) #14
  %661 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %17, i64 0, i32 2
  %662 = bitcast %"class.std::__1::basic_ostringstream"* %661 to %"class.std::__1::basic_ostream"*
  %663 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %662, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15) #14
  %664 = load i8*, i8** %19, align 8
  %665 = call i64 @strlen(i8* %664) #14
  %666 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %663, i8* %664, i64 %665) #14
  %667 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %666, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i64 13) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %660) #14
  br label %668

668:                                              ; preds = %659, %656, %655
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.policy::PolicyMap::Entry"* @_ZN6policy9PolicyMap10GetMutableERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.policy::PolicyMap::Entry"* @_ZNK6policy9PolicyMap3GetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZNK6policy9PolicyMap5Entry8DeepCopyEv(%"class.policy::PolicyMap::Entry"* sret, %"class.policy::PolicyMap::Entry"*) local_unnamed_addr #5

declare void @_ZN6policy9PolicyMap5Entry10AddMessageENS0_11MessageTypeEiONSt3__16vectorINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEE(%"class.policy::PolicyMap::Entry"*, i32, i32, %"class.std::__1::vector.74"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.76"* sret, i8*, i64) local_unnamed_addr #5

declare void @_ZN6policy9PolicyMap3SetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_5EntryE(%"class.policy::PolicyMap"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.policy::PolicyMap::Entry"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6policy9PolicyMap5EntryC1EOS1_(%"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"* dereferenceable(120)) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6policy9PolicyMap5EntryD1Ev(%"class.policy::PolicyMap::Entry"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14PolicyMigrator9MigrationC2EOS1_(%"struct.policy::PolicyMigrator::Migration"* nocapture, %"struct.policy::PolicyMigrator::Migration"* nocapture dereferenceable(24)) unnamed_addr #3 align 2 {
  %3 = bitcast %"struct.policy::PolicyMigrator::Migration"* %0 to i8*
  %4 = bitcast %"struct.policy::PolicyMigrator::Migration"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::RepeatingCallback"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::RepeatingCallback"* %5 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14PolicyMigrator9MigrationC2EPKcS3_(%"struct.policy::PolicyMigrator::Migration"* nocapture, i8*, i8*) unnamed_addr #3 align 2 {
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = tail call i8* @_Znwm(i64 48) #15, !noalias !23
  %6 = bitcast i8* %5 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %6, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPNS_5ValueEEJEEES5_E3RunEPNS0_13BindStateBaseES4_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPNS_5ValueEEJEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !23
  %7 = getelementptr inbounds i8, i8* %5, i64 32
  %8 = bitcast i8* %7 to i64*
  store i64 ptrtoint (void (%"class.base::Value"*)* @_ZN6policy12_GLOBAL__N_19DoNothingEPN4base5ValueE to i64), i64* %8, align 8, !noalias !23
  %9 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %0, i64 0, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %0, i64 0, i32 1
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = ptrtoint i8* %5 to i64
  %14 = bitcast %"class.base::RepeatingCallback"* %11 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN6policy12_GLOBAL__N_19DoNothingEPN4base5ValueE(%"class.base::Value"* nocapture) #0 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6policy14PolicyMigrator9MigrationC2EPKcS3_N4base17RepeatingCallbackIFvPNS4_5ValueEEEE(%"struct.policy::PolicyMigrator::Migration"* nocapture, i8*, i8*, %"class.base::RepeatingCallback"* nocapture) unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %0, i64 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %0, i64 0, i32 1
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::RepeatingCallback"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::RepeatingCallback"* %7 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14PolicyMigrator9MigrationD2Ev(%"struct.policy::PolicyMigrator::Migration"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.policy::PolicyMigrator::Migration", %"struct.policy::PolicyMigrator::Migration"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #14
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #3 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #3 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPNS_5ValueEEJEEES5_E3RunEPNS0_13BindStateBaseES4_(%"class.base::internal::BindStateBase"*, %"class.base::Value"*) #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::Value"*)**
  %5 = load void (%"class.base::Value"*)*, void (%"class.base::Value"*)** %4, align 8
  tail call void %5(%"class.base::Value"* %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPNS_5ValueEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #3 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvPNS_5ValueEEJEEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvPNS_5ValueEEJEEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base13BindRepeatingIPFvPNS_5ValueEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_: argument 0"}
!27 = distinct !{!27, !"_ZN4base13BindRepeatingIPFvPNS_5ValueEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_"}
