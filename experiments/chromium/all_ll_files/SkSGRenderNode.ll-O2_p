; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGRenderNode.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGRenderNode.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.11, %class.sk_sp.10, %class.sk_sp.12, %class.sk_sp.9, %class.sk_sp.13, %struct.SkRGBA4f, float, float, %union.anon.14, [4 x i8] }>
%class.sk_sp.11 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.10 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.12 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.9 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.13 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.14 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.sksg::RenderNode::ScopedRenderContext" = type <{ %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext", %class.sk_sp.10, i32, [4 x i8] }>
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.9, %class.sk_sp.10, %class.sk_sp.10, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.1, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.sksg::CustomRenderNode" = type { %"class.sksg::RenderNode.base", %"class.std::__1::vector.15" }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.16*, %class.sk_sp.16*, %"class.std::__1::__compressed_pair.17" }
%class.sk_sp.16 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.sk_sp.16* }
%struct.SkPoint = type { float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.20 = type { %"class.sksg::Node"* }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN4sksg10RenderNodeD0Ev = comdat any

$_ZTVN4sksg10RenderNodeE = comdat any

@_ZTVN4sksg10RenderNodeE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::Node"*)* @_ZN4sksg4NodeD2Ev to i8*), i8* bitcast (void (%"class.sksg::RenderNode"*)* @_ZN4sksg10RenderNodeD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@__const._ZN4sksg10RenderNode19ScopedRenderContext18setFilterIsolationERK6SkRectRK8SkMatrix5sk_spI13SkImageFilterE.layer_paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.11 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.10 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.12 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.9 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.13 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.14 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN4sksg16CustomRenderNodeE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::CustomRenderNode"*)* @_ZN4sksg16CustomRenderNodeD2Ev to i8*), i8* bitcast (void (%"class.sksg::CustomRenderNode"*)* @_ZN4sksg16CustomRenderNodeD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE = hidden unnamed_addr alias void (%"class.sksg::RenderNode::ScopedRenderContext"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*), void (%"class.sksg::RenderNode::ScopedRenderContext"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZN4sksg10RenderNode19ScopedRenderContextC2EP8SkCanvasPKNS0_13RenderContextE
@_ZN4sksg10RenderNode19ScopedRenderContextD1Ev = hidden unnamed_addr alias void (%"class.sksg::RenderNode::ScopedRenderContext"*), void (%"class.sksg::RenderNode::ScopedRenderContext"*)* @_ZN4sksg10RenderNode19ScopedRenderContextD2Ev
@_ZN4sksg16CustomRenderNodeD1Ev = hidden unnamed_addr alias void (%"class.sksg::CustomRenderNode"*), void (%"class.sksg::CustomRenderNode"*)* @_ZN4sksg16CustomRenderNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10RenderNodeC2Ej(%"class.sksg::RenderNode"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sksg::RenderNode"* %0 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4NodeC2Ej(%"class.sksg::Node"* %3, i32 %1) #13
  %4 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10RenderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN4sksg4NodeC2Ej(%"class.sksg::Node"*, i32) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4sksg10RenderNode9isVisibleEv(%"class.sksg::RenderNode"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 4
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 64
  %5 = icmp eq i16 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10RenderNode10setVisibleEb(%"class.sksg::RenderNode"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 4
  %4 = load i16, i16* %3, align 8
  %5 = and i16 %4, 64
  %6 = icmp eq i16 %5, 0
  %7 = xor i1 %6, %1
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = bitcast %"class.sksg::RenderNode"* %0 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %9, i1 zeroext true) #13
  %10 = load i16, i16* %3, align 8
  %11 = xor i1 %1, true
  %12 = zext i1 %11 to i16
  %13 = shl nuw nsw i16 %12, 6
  %14 = and i16 %10, 16256
  %15 = or i16 %14, %13
  %16 = and i16 %10, -16321
  %17 = or i16 %15, %16
  store i16 %17, i16* %3, align 8
  br label %18

18:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 4
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 64
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 3, i32 0
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 3, i32 2
  %12 = load float, float* %11, align 4
  %13 = fcmp olt float %10, %12
  br i1 %13, label %14, label %25

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 3, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 3, i32 3
  %18 = load float, float* %17, align 4
  %19 = fcmp uge float %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.sksg::RenderNode"* %0 to void (%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)***
  %22 = load void (%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)**, void (%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)*, void (%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)** %22, i64 4
  %24 = load void (%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)*, void (%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)** %23, align 8
  tail call void %24(%"class.sksg::RenderNode"* %0, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #13
  br label %25

25:                                               ; preds = %8, %20, %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sksg::RenderNode"* @_ZNK4sksg10RenderNode6nodeAtERK7SkPoint(%"class.sksg::RenderNode"*, %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 3, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp ugt float %8, %4
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 3, i32 2
  %12 = load float, float* %11, align 4
  %13 = fcmp ogt float %12, %4
  br i1 %13, label %14, label %28

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 3, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp ugt float %16, %6
  br i1 %17, label %28, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %0, i64 0, i32 0, i32 3, i32 3
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, %6
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %"class.sksg::RenderNode"* %0 to %"class.sksg::RenderNode"* (%"class.sksg::RenderNode"*, %struct.SkPoint*)***
  %24 = load %"class.sksg::RenderNode"* (%"class.sksg::RenderNode"*, %struct.SkPoint*)**, %"class.sksg::RenderNode"* (%"class.sksg::RenderNode"*, %struct.SkPoint*)*** %23, align 8
  %25 = getelementptr inbounds %"class.sksg::RenderNode"* (%"class.sksg::RenderNode"*, %struct.SkPoint*)*, %"class.sksg::RenderNode"* (%"class.sksg::RenderNode"*, %struct.SkPoint*)** %24, i64 5
  %26 = load %"class.sksg::RenderNode"* (%"class.sksg::RenderNode"*, %struct.SkPoint*)*, %"class.sksg::RenderNode"* (%"class.sksg::RenderNode"*, %struct.SkPoint*)** %25, align 8
  %27 = tail call %"class.sksg::RenderNode"* %26(%"class.sksg::RenderNode"* %0, %struct.SkPoint* dereferenceable(8) %1) #13
  br label %28

28:                                               ; preds = %2, %10, %14, %18, %22
  %29 = phi %"class.sksg::RenderNode"* [ %27, %22 ], [ null, %18 ], [ null, %14 ], [ null, %10 ], [ null, %2 ]
  ret %"class.sksg::RenderNode"* %29
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4sksg10RenderNode13RenderContext17requiresIsolationEv(%"struct.sksg::RenderNode::RenderContext"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 5
  %3 = load float, float* %2, align 8
  %4 = fmul float %3, 2.550000e+02
  %5 = fadd float %4, 5.000000e-01
  %6 = tail call float @llvm.floor.f32(float %5) #13
  %7 = fcmp olt float %6, 0x41DFFFFFE0000000
  %8 = select i1 %7, float %6, float 0x41DFFFFFE0000000
  %9 = fcmp ogt float %8, 0xC1DFFFFFE0000000
  %10 = select i1 %9, float %8, float 0xC1DFFFFFE0000000
  %11 = fptosi float %10 to i32
  %12 = trunc i32 %11 to i8
  %13 = icmp eq i8 %12, -1
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 0, i32 0
  %16 = load %class.SkColorFilter*, %class.SkColorFilter** %15, align 8
  %17 = icmp eq %class.SkColorFilter* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 2, i32 0
  %20 = load %class.SkShader*, %class.SkShader** %19, align 8
  %21 = icmp eq %class.SkShader* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = icmp ne i32 %24, 3
  br label %26

26:                                               ; preds = %18, %14, %1, %22
  %27 = phi i1 [ true, %18 ], [ true, %14 ], [ true, %1 ], [ %25, %22 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg10RenderNode13RenderContext13modulatePaintERK8SkMatrixP7SkPaintb(%"struct.sksg::RenderNode::RenderContext"*, %class.SkMatrix* dereferenceable(40), %class.SkPaint*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.9, align 8
  %6 = alloca %class.sk_sp.9, align 8
  %7 = alloca %class.sk_sp.9, align 8
  %8 = alloca %class.sk_sp.10, align 8
  %9 = alloca %class.sk_sp.10, align 8
  %10 = alloca %class.sk_sp.10, align 8
  %11 = alloca %class.sk_sp.10, align 8
  %12 = alloca %class.sk_sp.10, align 8
  %13 = alloca %class.sk_sp.10, align 8
  %14 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 5, i32 3
  %15 = load float, float* %14, align 4
  %16 = fmul float %15, 2.550000e+02
  %17 = fadd float %16, 5.000000e-01
  %18 = tail call float @llvm.floor.f32(float %17) #13
  %19 = fcmp olt float %18, 0x41DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0x41DFFFFFE0000000
  %21 = fcmp ogt float %20, 0xC1DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0xC1DFFFFFE0000000
  %23 = fptosi float %22 to i32
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 5
  %26 = load float, float* %25, align 8
  %27 = uitofp i8 %24 to float
  %28 = fmul float %26, %27
  %29 = fadd float %28, 5.000000e-01
  %30 = tail call float @llvm.floor.f32(float %29) #13
  %31 = fcmp olt float %30, 0x41DFFFFFE0000000
  %32 = select i1 %31, float %30, float 0x41DFFFFFE0000000
  %33 = fcmp ogt float %32, 0xC1DFFFFFE0000000
  %34 = select i1 %33, float %32, float 0xC1DFFFFFE0000000
  %35 = fptosi float %34 to i32
  %36 = and i32 %35, 255
  %37 = uitofp i32 %36 to float
  %38 = fmul float %37, 0x3F70101020000000
  tail call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %2, float %38) #13
  %39 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 0, i32 0
  %40 = load %class.SkColorFilter*, %class.SkColorFilter** %39, align 8
  %41 = icmp eq %class.SkColorFilter* %40, null
  br i1 %41, label %66, label %42

42:                                               ; preds = %4
  %43 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 monotonic
  call void @_ZNK7SkPaint14refColorFilterEv(%class.sk_sp.9* nonnull sret %7, %class.SkPaint* %2) #13
  %45 = bitcast %class.sk_sp.9* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %5, i64 0, i32 0
  %47 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %7, i64 0, i32 0
  %48 = load %class.SkColorFilter*, %class.SkColorFilter** %47, align 8, !noalias !2
  %49 = icmp eq %class.SkColorFilter* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic
  br label %53

53:                                               ; preds = %50, %42
  store %class.SkColorFilter* %48, %class.SkColorFilter** %46, align 8, !noalias !2
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.9* nonnull sret %6, %class.SkColorFilter* nonnull %40, %class.sk_sp.9* nonnull %5) #13
  %54 = load %class.SkColorFilter*, %class.SkColorFilter** %46, align 8, !noalias !2
  %55 = icmp eq %class.SkColorFilter* %54, null
  br i1 %55, label %76, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %76

60:                                               ; preds = %56
  %61 = bitcast %class.SkColorFilter* %54 to %class.SkRefCntBase*
  %62 = bitcast %class.SkColorFilter* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8
  call void %65(%class.SkRefCntBase* nonnull %61) #13
  br label %76

66:                                               ; preds = %4
  call void @_ZNK7SkPaint14refColorFilterEv(%class.sk_sp.9* nonnull sret %7, %class.SkPaint* %2) #13
  %67 = bitcast %class.sk_sp.9* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  %68 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %6, i64 0, i32 0
  %69 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %7, i64 0, i32 0
  %70 = load %class.SkColorFilter*, %class.SkColorFilter** %69, align 8, !noalias !2
  %71 = icmp eq %class.SkColorFilter* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %70, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 1 monotonic
  br label %75

75:                                               ; preds = %72, %66
  store %class.SkColorFilter* %70, %class.SkColorFilter** %68, align 8, !alias.scope !2
  br label %76

76:                                               ; preds = %53, %56, %60, %75
  %77 = phi i8* [ %45, %53 ], [ %45, %56 ], [ %45, %60 ], [ %67, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* %2, %class.sk_sp.9* nonnull %6) #13
  %78 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %6, i64 0, i32 0
  %79 = load %class.SkColorFilter*, %class.SkColorFilter** %78, align 8
  %80 = icmp eq %class.SkColorFilter* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = bitcast %class.SkColorFilter* %79 to %class.SkRefCntBase*
  %87 = bitcast %class.SkColorFilter* %79 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8
  call void %90(%class.SkRefCntBase* nonnull %86) #13
  br label %91

91:                                               ; preds = %76, %81, %85
  %92 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %7, i64 0, i32 0
  %93 = load %class.SkColorFilter*, %class.SkColorFilter** %92, align 8
  %94 = icmp eq %class.SkColorFilter* %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = bitcast %class.SkColorFilter* %93 to %class.SkRefCntBase*
  %101 = bitcast %class.SkColorFilter* %93 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8
  call void %104(%class.SkRefCntBase* nonnull %100) #13
  br label %105

105:                                              ; preds = %91, %95, %99
  br i1 %41, label %116, label %106

106:                                              ; preds = %105
  %107 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = bitcast %class.SkColorFilter* %40 to %class.SkRefCntBase*
  %112 = bitcast %class.SkColorFilter* %40 to void (%class.SkRefCntBase*)***
  %113 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, i64 2
  %115 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, align 8
  call void %115(%class.SkRefCntBase* nonnull %111) #13
  br label %116

116:                                              ; preds = %105, %106, %110
  %117 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 1, i32 0
  %118 = load %class.SkShader*, %class.SkShader** %117, align 8
  %119 = icmp eq %class.SkShader* %118, null
  br i1 %119, label %151, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %9, i64 0, i32 0
  %122 = getelementptr inbounds %class.SkShader, %class.SkShader* %118, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 1 monotonic
  store %class.SkShader* %118, %class.SkShader** %121, align 8
  %124 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 3
  call fastcc void @_ZN4sksgL11LocalShaderE5sk_spI8SkShaderERK8SkMatrixS5_(%class.sk_sp.10* nonnull sret %8, %class.sk_sp.10* nonnull %9, %class.SkMatrix* dereferenceable(40) %124, %class.SkMatrix* dereferenceable(40) %1)
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* %2, %class.sk_sp.10* nonnull %8) #13
  %125 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %8, i64 0, i32 0
  %126 = load %class.SkShader*, %class.SkShader** %125, align 8
  %127 = icmp eq %class.SkShader* %126, null
  br i1 %127, label %138, label %128

128:                                              ; preds = %120
  %129 = getelementptr inbounds %class.SkShader, %class.SkShader* %126, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 -1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %138

132:                                              ; preds = %128
  %133 = bitcast %class.SkShader* %126 to %class.SkRefCntBase*
  %134 = bitcast %class.SkShader* %126 to void (%class.SkRefCntBase*)***
  %135 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %134, align 8
  %136 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %135, i64 2
  %137 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, align 8
  call void %137(%class.SkRefCntBase* nonnull %133) #13
  br label %138

138:                                              ; preds = %120, %128, %132
  %139 = load %class.SkShader*, %class.SkShader** %121, align 8
  %140 = icmp eq %class.SkShader* %139, null
  br i1 %140, label %151, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %class.SkShader, %class.SkShader* %139, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw add i32* %142, i32 -1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %151

145:                                              ; preds = %141
  %146 = bitcast %class.SkShader* %139 to %class.SkRefCntBase*
  %147 = bitcast %class.SkShader* %139 to void (%class.SkRefCntBase*)***
  %148 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %147, align 8
  %149 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %148, i64 2
  %150 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, align 8
  call void %150(%class.SkRefCntBase* nonnull %146) #13
  br label %151

151:                                              ; preds = %116, %145, %141, %138
  %152 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 6
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 3
  br i1 %154, label %162, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = shl i32 %153, 10
  %159 = and i32 %158, 261120
  %160 = and i32 %157, -261121
  %161 = or i32 %160, %159
  store i32 %161, i32* %156, align 8
  br label %162

162:                                              ; preds = %151, %155
  br i1 %3, label %226, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 2, i32 0
  %165 = load %class.SkShader*, %class.SkShader** %164, align 8
  %166 = icmp eq %class.SkShader* %165, null
  br i1 %166, label %226, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %12, i64 0, i32 0
  %169 = getelementptr inbounds %class.SkShader, %class.SkShader* %165, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 1 monotonic
  store %class.SkShader* %165, %class.SkShader** %168, align 8
  %171 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %0, i64 0, i32 4
  call fastcc void @_ZN4sksgL11LocalShaderE5sk_spI8SkShaderERK8SkMatrixS5_(%class.sk_sp.10* nonnull sret %11, %class.sk_sp.10* nonnull %12, %class.SkMatrix* dereferenceable(40) %171, %class.SkMatrix* dereferenceable(40) %1)
  call void @_ZNK7SkPaint9refShaderEv(%class.sk_sp.10* nonnull sret %13, %class.SkPaint* %2) #13
  call void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.10* nonnull sret %10, i32 5, %class.sk_sp.10* nonnull %11, %class.sk_sp.10* nonnull %13) #13
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* %2, %class.sk_sp.10* nonnull %10) #13
  %172 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %10, i64 0, i32 0
  %173 = load %class.SkShader*, %class.SkShader** %172, align 8
  %174 = icmp eq %class.SkShader* %173, null
  br i1 %174, label %185, label %175

175:                                              ; preds = %167
  %176 = getelementptr inbounds %class.SkShader, %class.SkShader* %173, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw add i32* %176, i32 -1 acq_rel
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %185

179:                                              ; preds = %175
  %180 = bitcast %class.SkShader* %173 to %class.SkRefCntBase*
  %181 = bitcast %class.SkShader* %173 to void (%class.SkRefCntBase*)***
  %182 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %181, align 8
  %183 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %182, i64 2
  %184 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %183, align 8
  call void %184(%class.SkRefCntBase* nonnull %180) #13
  br label %185

185:                                              ; preds = %167, %175, %179
  %186 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %13, i64 0, i32 0
  %187 = load %class.SkShader*, %class.SkShader** %186, align 8
  %188 = icmp eq %class.SkShader* %187, null
  br i1 %188, label %199, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %class.SkShader, %class.SkShader* %187, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 -1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %199

193:                                              ; preds = %189
  %194 = bitcast %class.SkShader* %187 to %class.SkRefCntBase*
  %195 = bitcast %class.SkShader* %187 to void (%class.SkRefCntBase*)***
  %196 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %195, align 8
  %197 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %196, i64 2
  %198 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, align 8
  call void %198(%class.SkRefCntBase* nonnull %194) #13
  br label %199

199:                                              ; preds = %185, %189, %193
  %200 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %11, i64 0, i32 0
  %201 = load %class.SkShader*, %class.SkShader** %200, align 8
  %202 = icmp eq %class.SkShader* %201, null
  br i1 %202, label %213, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %class.SkShader, %class.SkShader* %201, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = atomicrmw add i32* %204, i32 -1 acq_rel
  %206 = icmp eq i32 %205, 1
  br i1 %206, label %207, label %213

207:                                              ; preds = %203
  %208 = bitcast %class.SkShader* %201 to %class.SkRefCntBase*
  %209 = bitcast %class.SkShader* %201 to void (%class.SkRefCntBase*)***
  %210 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %209, align 8
  %211 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %210, i64 2
  %212 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %211, align 8
  call void %212(%class.SkRefCntBase* nonnull %208) #13
  br label %213

213:                                              ; preds = %199, %203, %207
  %214 = load %class.SkShader*, %class.SkShader** %168, align 8
  %215 = icmp eq %class.SkShader* %214, null
  br i1 %215, label %226, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %class.SkShader, %class.SkShader* %214, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 -1 acq_rel
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %226

220:                                              ; preds = %216
  %221 = bitcast %class.SkShader* %214 to %class.SkRefCntBase*
  %222 = bitcast %class.SkShader* %214 to void (%class.SkRefCntBase*)***
  %223 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %222, align 8
  %224 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %223, i64 2
  %225 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %224, align 8
  call void %225(%class.SkRefCntBase* nonnull %221) #13
  br label %226

226:                                              ; preds = %163, %220, %216, %213, %162
  ret void
}

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.9*) local_unnamed_addr #1

declare void @_ZNK7SkPaint14refColorFilterEv(%class.sk_sp.9* sret, %class.SkPaint*) local_unnamed_addr #1

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.10*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4sksgL11LocalShaderE5sk_spI8SkShaderERK8SkMatrixS5_(%class.sk_sp.10* noalias sret, %class.sk_sp.10* nocapture readonly, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 {
  %5 = alloca %class.SkMatrix, align 16
  %6 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #13
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %8 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %8, align 16
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %10, align 16
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %11, align 16
  store i32 16, i32* %7, align 4
  %12 = tail call zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40) %2, %class.SkMatrix* dereferenceable(40) %3) #13
  br i1 %12, label %31, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = trunc i32 %15 to i8
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %3) #13
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %14, align 4
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi i32 [ %20, %18 ], [ %15, %13 ]
  %23 = and i32 %22, 15
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %5) #13
  br label %29

27:                                               ; preds = %21
  %28 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %3, %class.SkMatrix* nonnull %5) #13
  br i1 %28, label %29, label %31

29:                                               ; preds = %25, %27
  %30 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* nonnull %5, %class.SkMatrix* dereferenceable(40) %2) #13
  br label %34

31:                                               ; preds = %4, %27
  %32 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  %33 = bitcast %class.SkMatrix* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 4 %33, i64 40, i1 false)
  br label %34

34:                                               ; preds = %31, %29
  %35 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %1, i64 0, i32 0
  %36 = load %class.SkShader*, %class.SkShader** %35, align 8
  call void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.10* sret %0, %class.SkShader* %36, %class.SkMatrix* nonnull dereferenceable(40) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #13
  ret void
}

declare void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.10* sret, i32, %class.sk_sp.10*, %class.sk_sp.10*) local_unnamed_addr #1

declare void @_ZNK7SkPaint9refShaderEv(%class.sk_sp.10* sret, %class.SkPaint*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10RenderNode19ScopedRenderContextC2EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"* nocapture, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"* readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 0
  store %class.SkCanvas* %1, %class.SkCanvas** %4, align 8
  %5 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1
  %6 = icmp eq %"struct.sksg::RenderNode::RenderContext"* %2, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %2, i64 0, i32 0, i32 0
  %10 = load %class.SkColorFilter*, %class.SkColorFilter** %9, align 8
  %11 = icmp eq %class.SkColorFilter* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  br label %15

15:                                               ; preds = %12, %7
  store %class.SkColorFilter* %10, %class.SkColorFilter** %8, align 8
  %16 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 1, i32 0
  %17 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %2, i64 0, i32 1, i32 0
  %18 = load %class.SkShader*, %class.SkShader** %17, align 8
  %19 = icmp eq %class.SkShader* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkShader, %class.SkShader* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %20, %15
  store %class.SkShader* %18, %class.SkShader** %16, align 8
  %24 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2, i32 0
  %25 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %2, i64 0, i32 2, i32 0
  %26 = load %class.SkShader*, %class.SkShader** %25, align 8
  %27 = icmp eq %class.SkShader* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.SkShader, %class.SkShader* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %23, %28
  store %class.SkShader* %26, %class.SkShader** %24, align 8
  %32 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 3
  %33 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %2, i64 0, i32 3
  %34 = bitcast %class.SkMatrix* %32 to i8*
  %35 = bitcast %class.SkMatrix* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 88, i1 false) #13
  br label %48

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 3
  %38 = bitcast %"struct.sksg::RenderNode::RenderContext"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 112, i1 false)
  %39 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  %40 = bitcast %class.SkMatrix* %37 to i8*
  %41 = bitcast %class.SkMatrix* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 4 %41, i64 40, i1 false) #13
  %42 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 4
  %43 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  %44 = bitcast %class.SkMatrix* %42 to i8*
  %45 = bitcast %class.SkMatrix* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 4 %45, i64 40, i1 false) #13
  %46 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 5
  store float 1.000000e+00, float* %46, align 8
  %47 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 6
  store i32 3, i32* %47, align 4
  br label %48

48:                                               ; preds = %36, %31
  %49 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 2, i32 0
  store %class.SkShader* null, %class.SkShader** %49, align 8
  %50 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 3
  %51 = tail call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* %1) #13
  store i32 %51, i32* %50, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10RenderNode19ScopedRenderContextD2Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %class.SkPaint, align 8
  %3 = alloca %class.sk_sp.10, align 8
  %4 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %8, i64 0, i32 0
  %10 = load %class.SkShader*, %class.SkShader** %9, align 8
  %11 = icmp eq %class.SkShader* %10, null
  br i1 %11, label %38, label %12

12:                                               ; preds = %7
  %13 = bitcast %class.SkPaint* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (%class.SkPaint* @__const._ZN4sksg10RenderNode19ScopedRenderContext18setFilterIsolationERK6SkRectRK8SkMatrix5sk_spI13SkImageFilterE.layer_paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %2) #13
  %14 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, -261121
  %17 = or i32 %16, 6144
  store i32 %17, i32* %14, align 8
  %18 = bitcast %class.sk_sp.10* %8 to i64*
  %19 = load i64, i64* %18, align 8
  store %class.SkShader* null, %class.SkShader** %9, align 8
  %20 = bitcast %class.sk_sp.10* %3 to i64*
  store i64 %19, i64* %20, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %2, %class.sk_sp.10* nonnull %3) #13
  %21 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %3, i64 0, i32 0
  %22 = load %class.SkShader*, %class.SkShader** %21, align 8
  %23 = icmp eq %class.SkShader* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %class.SkShader, %class.SkShader* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.SkShader* %22 to %class.SkRefCntBase*
  %30 = bitcast %class.SkShader* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  call void %33(%class.SkRefCntBase* nonnull %29) #13
  br label %34

34:                                               ; preds = %12, %24, %28
  %35 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 0
  %36 = load %class.SkCanvas*, %class.SkCanvas** %35, align 8
  call void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas* %36, %class.SkPaint* nonnull dereferenceable(72) %2) #13
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #13
  %37 = load i32, i32* %4, align 8
  br label %38

38:                                               ; preds = %7, %34
  %39 = phi i32 [ %5, %7 ], [ %37, %34 ]
  %40 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 0
  %41 = load %class.SkCanvas*, %class.SkCanvas** %40, align 8
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* %41, i32 %39) #13
  br label %42

42:                                               ; preds = %38, %1
  %43 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 2, i32 0
  %44 = load %class.SkShader*, %class.SkShader** %43, align 8
  %45 = icmp eq %class.SkShader* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkShader, %class.SkShader* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkShader* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkShader* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #13
  br label %56

56:                                               ; preds = %42, %46, %50
  %57 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2, i32 0
  %58 = load %class.SkShader*, %class.SkShader** %57, align 8
  %59 = icmp eq %class.SkShader* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkShader, %class.SkShader* %58, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.SkShader* %58 to %class.SkRefCntBase*
  %66 = bitcast %class.SkShader* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #13
  br label %70

70:                                               ; preds = %64, %60, %56
  %71 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 1, i32 0
  %72 = load %class.SkShader*, %class.SkShader** %71, align 8
  %73 = icmp eq %class.SkShader* %72, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkShader, %class.SkShader* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = bitcast %class.SkShader* %72 to %class.SkRefCntBase*
  %80 = bitcast %class.SkShader* %72 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8
  call void %83(%class.SkRefCntBase* nonnull %79) #13
  br label %84

84:                                               ; preds = %78, %74, %70
  %85 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 0, i32 0
  %86 = load %class.SkColorFilter*, %class.SkColorFilter** %85, align 8
  %87 = icmp eq %class.SkColorFilter* %86, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %86, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %class.SkColorFilter* %86 to %class.SkRefCntBase*
  %94 = bitcast %class.SkColorFilter* %86 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  call void %97(%class.SkRefCntBase* nonnull %93) #13
  br label %98

98:                                               ; preds = %84, %88, %92
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

declare void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext15modulateOpacityEf(%"class.sksg::RenderNode::ScopedRenderContext"* returned, float) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 5
  %4 = load float, float* %3, align 8
  %5 = fmul float %4, %1
  store float %5, float* %3, align 8
  ret %"class.sksg::RenderNode::ScopedRenderContext"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext19modulateColorFilterE5sk_spI13SkColorFilterE(%"class.sksg::RenderNode::ScopedRenderContext"* returned, %class.sk_sp.9* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.9, align 8
  %4 = alloca %class.sk_sp.9, align 8
  %5 = bitcast %class.sk_sp.9* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %6, i64 0, i32 0
  %8 = bitcast %class.sk_sp.9* %6 to i64*
  %9 = load %class.SkColorFilter*, %class.SkColorFilter** %7, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %7, align 8
  %10 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %1, i64 0, i32 0
  %11 = bitcast %class.sk_sp.9* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %10, align 8
  %13 = bitcast %class.sk_sp.9* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = icmp eq %class.SkColorFilter* %9, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %3, i64 0, i32 0
  %17 = inttoptr i64 %12 to %class.SkColorFilter*
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %19, %15
  store %class.SkColorFilter* %17, %class.SkColorFilter** %16, align 8, !noalias !5
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.9* nonnull sret %4, %class.SkColorFilter* nonnull %9, %class.sk_sp.9* nonnull %3) #13
  %23 = load %class.SkColorFilter*, %class.SkColorFilter** %16, align 8, !noalias !5
  %24 = icmp eq %class.SkColorFilter* %23, null
  br i1 %24, label %43, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = bitcast %class.SkColorFilter* %23 to %class.SkRefCntBase*
  %31 = bitcast %class.SkColorFilter* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #13
  br label %43

35:                                               ; preds = %2
  %36 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %4, i64 0, i32 0
  %37 = inttoptr i64 %12 to %class.SkColorFilter*
  %38 = icmp eq i64 %12, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %39, %35
  store %class.SkColorFilter* %37, %class.SkColorFilter** %36, align 8, !alias.scope !5
  br label %43

43:                                               ; preds = %22, %25, %29, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %44 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %4, i64 0, i32 0
  %45 = bitcast %class.sk_sp.9* %4 to i64*
  %46 = load i64, i64* %45, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %44, align 8
  %47 = load %class.SkColorFilter*, %class.SkColorFilter** %7, align 8
  store i64 %46, i64* %8, align 8
  %48 = icmp eq %class.SkColorFilter* %47, null
  br i1 %48, label %72, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkColorFilter* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkColorFilter* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  call void %58(%class.SkRefCntBase* nonnull %54) #13
  br label %59

59:                                               ; preds = %49, %53
  %60 = load %class.SkColorFilter*, %class.SkColorFilter** %44, align 8
  %61 = icmp eq %class.SkColorFilter* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkColorFilter* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkColorFilter* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #13
  br label %72

72:                                               ; preds = %43, %59, %62, %66
  %73 = icmp eq i64 %12, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %72
  %75 = inttoptr i64 %12 to %class.SkColorFilter*
  %76 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %74
  %80 = inttoptr i64 %12 to %class.SkRefCntBase*
  %81 = inttoptr i64 %12 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  call void %84(%class.SkRefCntBase* nonnull %80) #13
  br label %85

85:                                               ; preds = %72, %74, %79
  br i1 %14, label %96, label %86

86:                                               ; preds = %85
  %87 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %class.SkColorFilter* %9 to %class.SkRefCntBase*
  %92 = bitcast %class.SkColorFilter* %9 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8
  call void %95(%class.SkRefCntBase* nonnull %91) #13
  br label %96

96:                                               ; preds = %85, %86, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret %"class.sksg::RenderNode::ScopedRenderContext"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext14modulateShaderE5sk_spI8SkShaderERK8SkMatrix(%"class.sksg::RenderNode::ScopedRenderContext"* returned, %class.sk_sp.10* nocapture, %class.SkMatrix* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 1
  %5 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %4, i64 0, i32 0
  %6 = load %class.SkShader*, %class.SkShader** %5, align 8
  %7 = icmp eq %class.SkShader* %6, null
  br i1 %7, label %8, label %29

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %1, i64 0, i32 0
  %10 = bitcast %class.sk_sp.10* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkShader* null, %class.SkShader** %9, align 8
  %12 = load %class.SkShader*, %class.SkShader** %5, align 8
  %13 = bitcast %class.sk_sp.10* %4 to i64*
  store i64 %11, i64* %13, align 8
  %14 = icmp eq %class.SkShader* %12, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.SkShader, %class.SkShader* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkShader* %12 to %class.SkRefCntBase*
  %21 = bitcast %class.SkShader* %12 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #13
  br label %25

25:                                               ; preds = %8, %15, %19
  %26 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 3
  %27 = bitcast %class.SkMatrix* %26 to i8*
  %28 = bitcast %class.SkMatrix* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 4 %28, i64 40, i1 false)
  br label %29

29:                                               ; preds = %3, %25
  ret %"class.sksg::RenderNode::ScopedRenderContext"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext18modulateMaskShaderE5sk_spI8SkShaderERK8SkMatrix(%"class.sksg::RenderNode::ScopedRenderContext"* returned, %class.sk_sp.10* nocapture, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %class.sk_sp.10, align 8
  %7 = alloca %class.sk_sp.10, align 8
  %8 = alloca %class.sk_sp.10, align 8
  %9 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2
  %10 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %9, i64 0, i32 0
  %11 = load %class.SkShader*, %class.SkShader** %10, align 8
  %12 = icmp eq %class.SkShader* %11, null
  br i1 %12, label %111, label %13

13:                                               ; preds = %3
  %14 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #13
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %16 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %16, align 16
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %18, align 16
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %19, align 16
  store i32 16, i32* %15, align 4
  %20 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %1, i64 0, i32 0
  %21 = load %class.SkShader*, %class.SkShader** %20, align 8
  %22 = icmp eq %class.SkShader* %21, null
  br i1 %22, label %110, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 4
  %25 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 4, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = trunc i32 %26 to i8
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %24) #13
  %31 = zext i8 %30 to i32
  store i32 %31, i32* %25, align 4
  br label %32

32:                                               ; preds = %29, %23
  %33 = phi i32 [ %31, %29 ], [ %26, %23 ]
  %34 = and i32 %33, 15
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %4) #13
  br label %40

38:                                               ; preds = %32
  %39 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %24, %class.SkMatrix* nonnull %4) #13
  br i1 %39, label %40, label %110

40:                                               ; preds = %36, %38
  %41 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #13
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %43 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %43, align 16, !alias.scope !8
  %44 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %45, align 16, !alias.scope !8
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %46, align 16, !alias.scope !8
  store i32 16, i32* %42, align 4, !alias.scope !8
  %47 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %5, %class.SkMatrix* nonnull dereferenceable(40) %4, %class.SkMatrix* dereferenceable(40) %2) #13
  %48 = bitcast %class.sk_sp.10* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  %49 = bitcast %class.sk_sp.10* %9 to i64*
  %50 = load i64, i64* %49, align 8
  store %class.SkShader* null, %class.SkShader** %10, align 8
  %51 = bitcast %class.sk_sp.10* %7 to i64*
  store i64 %50, i64* %51, align 8
  %52 = load %class.SkShader*, %class.SkShader** %20, align 8
  call void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.10* nonnull sret %8, %class.SkShader* %52, %class.SkMatrix* nonnull dereferenceable(40) %5) #13
  call void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.10* nonnull sret %6, i32 5, %class.sk_sp.10* nonnull %7, %class.sk_sp.10* nonnull %8) #13
  %53 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %6, i64 0, i32 0
  %54 = bitcast %class.sk_sp.10* %6 to i64*
  %55 = load i64, i64* %54, align 8
  store %class.SkShader* null, %class.SkShader** %53, align 8
  %56 = load %class.SkShader*, %class.SkShader** %10, align 8
  store i64 %55, i64* %49, align 8
  %57 = icmp eq %class.SkShader* %56, null
  br i1 %57, label %81, label %58

58:                                               ; preds = %40
  %59 = getelementptr inbounds %class.SkShader, %class.SkShader* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %class.SkShader* %56 to %class.SkRefCntBase*
  %64 = bitcast %class.SkShader* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  call void %67(%class.SkRefCntBase* nonnull %63) #13
  br label %68

68:                                               ; preds = %58, %62
  %69 = load %class.SkShader*, %class.SkShader** %53, align 8
  %70 = icmp eq %class.SkShader* %69, null
  br i1 %70, label %81, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %class.SkShader, %class.SkShader* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = bitcast %class.SkShader* %69 to %class.SkRefCntBase*
  %77 = bitcast %class.SkShader* %69 to void (%class.SkRefCntBase*)***
  %78 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, i64 2
  %80 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, align 8
  call void %80(%class.SkRefCntBase* nonnull %76) #13
  br label %81

81:                                               ; preds = %40, %68, %71, %75
  %82 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %8, i64 0, i32 0
  %83 = load %class.SkShader*, %class.SkShader** %82, align 8
  %84 = icmp eq %class.SkShader* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.SkShader, %class.SkShader* %83, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %class.SkShader* %83 to %class.SkRefCntBase*
  %91 = bitcast %class.SkShader* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8
  call void %94(%class.SkRefCntBase* nonnull %90) #13
  br label %95

95:                                               ; preds = %81, %85, %89
  %96 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %7, i64 0, i32 0
  %97 = load %class.SkShader*, %class.SkShader** %96, align 8
  %98 = icmp eq %class.SkShader* %97, null
  br i1 %98, label %109, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.SkShader, %class.SkShader* %97, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = bitcast %class.SkShader* %97 to %class.SkRefCntBase*
  %105 = bitcast %class.SkShader* %97 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  call void %108(%class.SkRefCntBase* nonnull %104) #13
  br label %109

109:                                              ; preds = %95, %99, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #13
  br label %110

110:                                              ; preds = %13, %109, %38
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #13
  br label %132

111:                                              ; preds = %3
  %112 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %1, i64 0, i32 0
  %113 = bitcast %class.sk_sp.10* %1 to i64*
  %114 = load i64, i64* %113, align 8
  store %class.SkShader* null, %class.SkShader** %112, align 8
  %115 = load %class.SkShader*, %class.SkShader** %10, align 8
  %116 = bitcast %class.sk_sp.10* %9 to i64*
  store i64 %114, i64* %116, align 8
  %117 = icmp eq %class.SkShader* %115, null
  br i1 %117, label %128, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %class.SkShader, %class.SkShader* %115, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = bitcast %class.SkShader* %115 to %class.SkRefCntBase*
  %124 = bitcast %class.SkShader* %115 to void (%class.SkRefCntBase*)***
  %125 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, i64 2
  %127 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, align 8
  tail call void %127(%class.SkRefCntBase* nonnull %123) #13
  br label %128

128:                                              ; preds = %111, %118, %122
  %129 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 4
  %130 = bitcast %class.SkMatrix* %129 to i8*
  %131 = bitcast %class.SkMatrix* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 4 %131, i64 40, i1 false)
  br label %132

132:                                              ; preds = %128, %110
  ret %"class.sksg::RenderNode::ScopedRenderContext"* %0
}

declare void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.10* sret, %class.SkShader*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext17modulateBlendModeE11SkBlendMode(%"class.sksg::RenderNode::ScopedRenderContext"* returned, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 6
  store i32 %1, i32* %3, align 4
  ret %"class.sksg::RenderNode::ScopedRenderContext"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext12setIsolationERK6SkRectRK8SkMatrixb(%"class.sksg::RenderNode::ScopedRenderContext"* returned, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPaint, align 8
  %6 = alloca %class.sk_sp.10, align 8
  %7 = alloca %class.sk_sp.10, align 8
  br i1 %3, label %8, label %122

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 5
  %11 = load float, float* %10, align 8
  %12 = fmul float %11, 2.550000e+02
  %13 = fadd float %12, 5.000000e-01
  %14 = tail call float @llvm.floor.f32(float %13) #13
  %15 = fcmp olt float %14, 0x41DFFFFFE0000000
  %16 = select i1 %15, float %14, float 0x41DFFFFFE0000000
  %17 = fcmp ogt float %16, 0xC1DFFFFFE0000000
  %18 = select i1 %17, float %16, float 0xC1DFFFFFE0000000
  %19 = fptosi float %18 to i32
  %20 = trunc i32 %19 to i8
  %21 = icmp eq i8 %20, -1
  br i1 %21, label %22, label %34

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %9, i64 0, i32 0, i32 0
  %24 = load %class.SkColorFilter*, %class.SkColorFilter** %23, align 8
  %25 = icmp eq %class.SkColorFilter* %24, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2, i32 0
  %28 = load %class.SkShader*, %class.SkShader** %27, align 8
  %29 = icmp eq %class.SkShader* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 6
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 3
  br i1 %33, label %122, label %34

34:                                               ; preds = %30, %8, %22, %26
  %35 = bitcast %class.SkPaint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 bitcast (%class.SkPaint* @__const._ZN4sksg10RenderNode19ScopedRenderContext18setFilterIsolationERK6SkRectRK8SkMatrix5sk_spI13SkImageFilterE.layer_paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %5) #13
  call void @_ZNK4sksg10RenderNode13RenderContext13modulatePaintERK8SkMatrixP7SkPaintb(%"struct.sksg::RenderNode::RenderContext"* %9, %class.SkMatrix* dereferenceable(40) %2, %class.SkPaint* nonnull %5, i1 zeroext true)
  %36 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 0
  %37 = load %class.SkCanvas*, %class.SkCanvas** %36, align 8
  %38 = call i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas* %37, %struct.SkRect* %1, %class.SkPaint* nonnull %5) #13
  %39 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2, i32 0
  %40 = load %class.SkShader*, %class.SkShader** %39, align 8
  %41 = icmp eq %class.SkShader* %40, null
  br i1 %41, label %93, label %42

42:                                               ; preds = %34
  %43 = bitcast %class.sk_sp.10* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %7, i64 0, i32 0
  %45 = getelementptr inbounds %class.SkShader, %class.SkShader* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  store %class.SkShader* %40, %class.SkShader** %44, align 8
  %47 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 4
  call fastcc void @_ZN4sksgL11LocalShaderE5sk_spI8SkShaderERK8SkMatrixS5_(%class.sk_sp.10* nonnull sret %6, %class.sk_sp.10* nonnull %7, %class.SkMatrix* dereferenceable(40) %47, %class.SkMatrix* dereferenceable(40) %2)
  %48 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 2
  %49 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %6, i64 0, i32 0
  %50 = bitcast %class.sk_sp.10* %6 to i64*
  %51 = load i64, i64* %50, align 8
  store %class.SkShader* null, %class.SkShader** %49, align 8
  %52 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %48, i64 0, i32 0
  %53 = load %class.SkShader*, %class.SkShader** %52, align 8
  %54 = bitcast %class.sk_sp.10* %48 to i64*
  store i64 %51, i64* %54, align 8
  %55 = icmp eq %class.SkShader* %53, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %42
  %57 = getelementptr inbounds %class.SkShader, %class.SkShader* %53, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %class.SkShader* %53 to %class.SkRefCntBase*
  %62 = bitcast %class.SkShader* %53 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8
  call void %65(%class.SkRefCntBase* nonnull %61) #13
  br label %66

66:                                               ; preds = %42, %56, %60
  %67 = load %class.SkShader*, %class.SkShader** %49, align 8
  %68 = icmp eq %class.SkShader* %67, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %class.SkShader, %class.SkShader* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = bitcast %class.SkShader* %67 to %class.SkRefCntBase*
  %75 = bitcast %class.SkShader* %67 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8
  call void %78(%class.SkRefCntBase* nonnull %74) #13
  br label %79

79:                                               ; preds = %66, %69, %73
  %80 = load %class.SkShader*, %class.SkShader** %44, align 8
  %81 = icmp eq %class.SkShader* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %class.SkShader, %class.SkShader* %80, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %class.SkShader* %80 to %class.SkRefCntBase*
  %88 = bitcast %class.SkShader* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #13
  br label %92

92:                                               ; preds = %79, %82, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  br label %93

93:                                               ; preds = %34, %92
  %94 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %9, i64 0, i32 0, i32 0
  %95 = load %class.SkColorFilter*, %class.SkColorFilter** %94, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %94, align 8
  %96 = icmp eq %class.SkColorFilter* %95, null
  br i1 %96, label %107, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %95, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %107

101:                                              ; preds = %97
  %102 = bitcast %class.SkColorFilter* %95 to %class.SkRefCntBase*
  %103 = bitcast %class.SkColorFilter* %95 to void (%class.SkRefCntBase*)***
  %104 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, i64 2
  %106 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, align 8
  call void %106(%class.SkRefCntBase* nonnull %102) #13
  br label %107

107:                                              ; preds = %93, %97, %101
  %108 = load %class.SkShader*, %class.SkShader** %39, align 8
  store %class.SkShader* null, %class.SkShader** %39, align 8
  %109 = icmp eq %class.SkShader* %108, null
  br i1 %109, label %120, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %class.SkShader, %class.SkShader* %108, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = bitcast %class.SkShader* %108 to %class.SkRefCntBase*
  %116 = bitcast %class.SkShader* %108 to void (%class.SkRefCntBase*)***
  %117 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %116, align 8
  %118 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, i64 2
  %119 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, align 8
  call void %119(%class.SkRefCntBase* nonnull %115) #13
  br label %120

120:                                              ; preds = %107, %110, %114
  store float 1.000000e+00, float* %10, align 8
  %121 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 6
  store i32 3, i32* %121, align 4
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #13
  br label %122

122:                                              ; preds = %30, %120, %4
  ret %"class.sksg::RenderNode::ScopedRenderContext"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext18setFilterIsolationERK6SkRectRK8SkMatrix5sk_spI13SkImageFilterE(%"class.sksg::RenderNode::ScopedRenderContext"* returned, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %class.sk_sp.13* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPaint, align 8
  %6 = alloca %class.sk_sp.13, align 8
  %7 = alloca { %class.SkMatrix, %class.SkMatrix }, align 8
  %8 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %3, i64 0, i32 0
  %9 = load %class.SkImageFilter*, %class.SkImageFilter** %8, align 8
  %10 = icmp eq %class.SkImageFilter* %9, null
  br i1 %10, label %92, label %11

11:                                               ; preds = %4
  %12 = bitcast %class.SkPaint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%class.SkPaint* @__const._ZN4sksg10RenderNode19ScopedRenderContext18setFilterIsolationERK6SkRectRK8SkMatrix5sk_spI13SkImageFilterE.layer_paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %5) #13
  %13 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1
  call void @_ZNK4sksg10RenderNode13RenderContext13modulatePaintERK8SkMatrixP7SkPaintb(%"struct.sksg::RenderNode::RenderContext"* %13, %class.SkMatrix* dereferenceable(40) %2, %class.SkPaint* nonnull %5, i1 zeroext false)
  %14 = bitcast %class.sk_sp.13* %3 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %8, align 8
  %16 = bitcast %class.sk_sp.13* %6 to i64*
  store i64 %15, i64* %16, align 8
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* nonnull %5, %class.sk_sp.13* nonnull %6) #13
  %17 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %6, i64 0, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #13
  br label %30

30:                                               ; preds = %11, %20, %24
  %31 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 0
  %32 = load %class.SkCanvas*, %class.SkCanvas** %31, align 8
  %33 = call i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas* %32, %struct.SkRect* %1, %class.SkPaint* nonnull %5) #13
  %34 = bitcast { %class.SkMatrix, %class.SkMatrix }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %34)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 80, i1 false)
  %35 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  %36 = bitcast %class.SkMatrix* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 4 %36, i64 40, i1 false)
  %37 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  %38 = bitcast %class.SkMatrix* %37 to i8*
  %39 = getelementptr inbounds { %class.SkMatrix, %class.SkMatrix }, { %class.SkMatrix, %class.SkMatrix }* %7, i64 0, i32 1
  %40 = bitcast %class.SkMatrix* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 4 %38, i64 40, i1 false)
  %41 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %13, i64 0, i32 0, i32 0
  %42 = load %class.SkColorFilter*, %class.SkColorFilter** %41, align 8
  %43 = bitcast %"struct.sksg::RenderNode::RenderContext"* %13 to i64*
  store i64 0, i64* %43, align 8
  %44 = icmp eq %class.SkColorFilter* %42, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %30
  %46 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkColorFilter* %42 to %class.SkRefCntBase*
  %51 = bitcast %class.SkColorFilter* %42 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #13
  br label %55

55:                                               ; preds = %49, %45, %30
  %56 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 1
  %57 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %56, i64 0, i32 0
  %58 = load %class.SkShader*, %class.SkShader** %57, align 8
  %59 = bitcast %class.sk_sp.10* %56 to i64*
  store i64 0, i64* %59, align 8
  %60 = icmp eq %class.SkShader* %58, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %class.SkShader, %class.SkShader* %58, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkShader* %58 to %class.SkRefCntBase*
  %67 = bitcast %class.SkShader* %58 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  call void %70(%class.SkRefCntBase* nonnull %66) #13
  br label %71

71:                                               ; preds = %65, %61, %55
  %72 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2
  %73 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %72, i64 0, i32 0
  %74 = load %class.SkShader*, %class.SkShader** %73, align 8
  %75 = bitcast %class.sk_sp.10* %72 to i64*
  store i64 0, i64* %75, align 8
  %76 = icmp eq %class.SkShader* %74, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %class.SkShader, %class.SkShader* %74, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = bitcast %class.SkShader* %74 to %class.SkRefCntBase*
  %83 = bitcast %class.SkShader* %74 to void (%class.SkRefCntBase*)***
  %84 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, i64 2
  %86 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, align 8
  call void %86(%class.SkRefCntBase* nonnull %82) #13
  br label %87

87:                                               ; preds = %81, %77, %71
  %88 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 3
  %89 = bitcast %class.SkMatrix* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %34, i64 80, i1 false)
  %90 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 5
  store float 1.000000e+00, float* %90, align 8
  %91 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 6
  store i32 3, i32* %91, align 4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %34)
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #13
  br label %92

92:                                               ; preds = %4, %87
  ret %"class.sksg::RenderNode::ScopedRenderContext"* %0
}

declare void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint*, %class.sk_sp.13*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg16CustomRenderNodeC2EONSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::CustomRenderNode"*, %"class.std::__1::vector.15"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.20, align 8
  %4 = bitcast %"class.sksg::CustomRenderNode"* %0 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4NodeC2Ej(%"class.sksg::Node"* %4, i32 2) #13
  %5 = getelementptr inbounds %"class.sksg::CustomRenderNode", %"class.sksg::CustomRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg16CustomRenderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.sksg::CustomRenderNode", %"class.sksg::CustomRenderNode"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.15"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  %8 = bitcast %"class.std::__1::vector.15"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.15"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %class.sk_sp.16** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.sksg::CustomRenderNode", %"class.sksg::CustomRenderNode"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %class.sk_sp.16** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %class.sk_sp.16** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.sksg::CustomRenderNode", %"class.sksg::CustomRenderNode"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %class.sk_sp.16** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector.15"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13
  %22 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %6, i64 0, i32 0, i32 0
  %23 = load %class.sk_sp.16*, %class.sk_sp.16** %22, align 8
  %24 = load %class.sk_sp.16*, %class.sk_sp.16** %14, align 8
  %25 = icmp eq %class.sk_sp.16* %23, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %2
  %27 = bitcast %class.sk_sp.20* %3 to i8*
  %28 = bitcast %class.sk_sp.20* %3 to %"class.sksg::RenderNode"**
  %29 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %3, i64 0, i32 0
  br label %31

30:                                               ; preds = %52, %2
  ret void

31:                                               ; preds = %26, %52
  %32 = phi %class.sk_sp.16* [ %23, %26 ], [ %53, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %33 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %32, i64 0, i32 0
  %34 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %33, align 8
  %35 = icmp eq %"class.sksg::RenderNode"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %31, %36
  store %"class.sksg::RenderNode"* %34, %"class.sksg::RenderNode"** %28, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.20* nonnull dereferenceable(8) %3) #13
  %40 = load %"class.sksg::Node"*, %"class.sksg::Node"** %29, align 8
  %41 = icmp eq %"class.sksg::Node"* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %"class.sksg::Node"* %40 to %class.SkRefCntBase*
  %48 = bitcast %"class.sksg::Node"* %40 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  call void %51(%class.SkRefCntBase* nonnull %47) #13
  br label %52

52:                                               ; preds = %39, %42, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %53 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %32, i64 1
  %54 = icmp eq %class.sk_sp.16* %53, %24
  br i1 %54, label %30, label %31
}

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.20* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.20, align 8
  %3 = getelementptr inbounds %"class.sksg::CustomRenderNode", %"class.sksg::CustomRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg16CustomRenderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.sksg::CustomRenderNode", %"class.sksg::CustomRenderNode"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %4, i64 0, i32 0, i32 0
  %6 = load %class.sk_sp.16*, %class.sk_sp.16** %5, align 8
  %7 = getelementptr inbounds %"class.sksg::CustomRenderNode", %"class.sksg::CustomRenderNode"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %class.sk_sp.16*, %class.sk_sp.16** %7, align 8
  %9 = icmp eq %class.sk_sp.16* %6, %8
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.sksg::CustomRenderNode"* %0 to %"class.sksg::Node"*
  %12 = bitcast %class.sk_sp.20* %2 to i8*
  %13 = bitcast %class.sk_sp.20* %2 to %"class.sksg::RenderNode"**
  %14 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %2, i64 0, i32 0
  br label %49

15:                                               ; preds = %70
  %16 = load %class.sk_sp.16*, %class.sk_sp.16** %5, align 8
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi %class.sk_sp.16* [ %16, %15 ], [ %6, %1 ]
  %19 = icmp eq %class.sk_sp.16* %18, null
  br i1 %19, label %47, label %20

20:                                               ; preds = %17
  %21 = bitcast %class.sk_sp.16* %18 to i8*
  %22 = load %class.sk_sp.16*, %class.sk_sp.16** %7, align 8
  %23 = icmp eq %class.sk_sp.16* %22, %18
  br i1 %23, label %45, label %24

24:                                               ; preds = %20, %40
  %25 = phi %class.sk_sp.16* [ %26, %40 ], [ %22, %20 ]
  %26 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %25, i64 -1
  %27 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %26, i64 0, i32 0
  %28 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %27, align 8
  %29 = icmp eq %"class.sksg::RenderNode"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::RenderNode"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::RenderNode"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #13
  br label %40

40:                                               ; preds = %34, %30, %24
  %41 = icmp eq %class.sk_sp.16* %26, %18
  br i1 %41, label %42, label %24

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.15"* %4 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %20
  %46 = phi i8* [ %44, %42 ], [ %21, %20 ]
  store %class.sk_sp.16* %18, %class.sk_sp.16** %7, align 8
  call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %17, %45
  %48 = bitcast %"class.sksg::CustomRenderNode"* %0 to %"class.sksg::Node"*
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %48) #13
  ret void

49:                                               ; preds = %10, %70
  %50 = phi %class.sk_sp.16* [ %6, %10 ], [ %71, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %51 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %50, i64 0, i32 0
  %52 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %51, align 8
  %53 = icmp eq %"class.sksg::RenderNode"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic
  br label %57

57:                                               ; preds = %49, %54
  store %"class.sksg::RenderNode"* %52, %"class.sksg::RenderNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %11, %class.sk_sp.20* nonnull dereferenceable(8) %2) #13
  %58 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %59 = icmp eq %"class.sksg::Node"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %"class.sksg::Node"* %58 to %class.SkRefCntBase*
  %66 = bitcast %"class.sksg::Node"* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #13
  br label %70

70:                                               ; preds = %57, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  %71 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %50, i64 1
  %72 = icmp eq %class.sk_sp.16* %71, %8
  br i1 %72, label %15, label %49
}

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.20* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4sksg16CustomRenderNodeD0Ev(%"class.sksg::CustomRenderNode"* nocapture readnone) unnamed_addr #8 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4sksg16CustomRenderNode16hasChildrenInvalEv(%"class.sksg::CustomRenderNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sksg::CustomRenderNode", %"class.sksg::CustomRenderNode"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %class.sk_sp.16*, %class.sk_sp.16** %2, align 8
  %4 = getelementptr inbounds %"class.sksg::CustomRenderNode", %"class.sksg::CustomRenderNode"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %class.sk_sp.16*, %class.sk_sp.16** %4, align 8
  %6 = icmp eq %class.sk_sp.16* %3, %5
  br i1 %6, label %36, label %9

7:                                                ; preds = %31
  %8 = icmp eq %class.sk_sp.16* %35, %5
  br i1 %8, label %36, label %9

9:                                                ; preds = %1, %7
  %10 = phi %class.sk_sp.16* [ %35, %7 ], [ %3, %1 ]
  %11 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %10, i64 0, i32 0
  %12 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %11, align 8
  %13 = icmp eq %"class.sksg::RenderNode"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %12, i64 0, i32 0, i32 4
  %16 = load i16, i16* %15, align 8
  br label %31

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  %20 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %12, i64 0, i32 0, i32 4
  %21 = load i16, i16* %20, align 8
  %22 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %17
  %26 = bitcast %"class.sksg::RenderNode"* %12 to %class.SkRefCntBase*
  %27 = bitcast %"class.sksg::RenderNode"* %12 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #13
  br label %31

31:                                               ; preds = %14, %17, %25
  %32 = phi i16 [ %16, %14 ], [ %21, %17 ], [ %21, %25 ]
  %33 = and i16 %32, 4
  %34 = icmp eq i16 %33, 0
  %35 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %10, i64 1
  br i1 %34, label %7, label %36

36:                                               ; preds = %31, %7, %1
  %37 = phi i1 [ false, %1 ], [ false, %7 ], [ true, %31 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg10RenderNodeD0Ev(%"class.sksg::RenderNode"*) unnamed_addr #10 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #11

declare void @_ZN7SkPaint9setAlphafEf(%class.SkPaint*, float) local_unnamed_addr #1

declare void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.9* sret, %class.SkColorFilter*, %class.sk_sp.9*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

declare zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #1

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN14SkColorFilters7ComposeE5sk_spI13SkColorFilterES2_: argument 0"}
!4 = distinct !{!4, !"_ZN14SkColorFilters7ComposeE5sk_spI13SkColorFilterES2_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN14SkColorFilters7ComposeE5sk_spI13SkColorFilterES2_: argument 0"}
!7 = distinct !{!7, !"_ZN14SkColorFilters7ComposeE5sk_spI13SkColorFilterES2_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!10 = distinct !{!10, !"_ZN8SkMatrix6ConcatERKS_S1_"}
