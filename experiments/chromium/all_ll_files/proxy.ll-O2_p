; ModuleID = '../../third_party/webrtc/pc/proxy.cc'
source_filename = "../../third_party/webrtc/pc/proxy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::trace_event_internal::TraceEndOnScopeClose" = type { %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"*, %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data" }
%"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data" = type { i8*, i8* }

@_ZZN6webrtc14proxy_internal12TraceApiCallEPKcS2_E30trace_event_unique_catstatic18 = internal unnamed_addr global i8* null, align 8
@_ZGVZN6webrtc14proxy_internal12TraceApiCallEPKcS2_E30trace_event_unique_catstatic18 = internal global i64 0, align 8
@.str = private unnamed_addr constant [7 x i8] c"webrtc\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"method\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14proxy_internal12TraceApiCallEPKcS2_(i8*, i8*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca [1 x i8], align 1
  %5 = alloca [1 x i64], align 8
  %6 = alloca %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", align 8
  %7 = ptrtoint i8* %1 to i64
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN6webrtc14proxy_internal12TraceApiCallEPKcS2_E30trace_event_unique_catstatic18 to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %15, !prof !2

10:                                               ; preds = %2
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6webrtc14proxy_internal12TraceApiCallEPKcS2_E30trace_event_unique_catstatic18) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = tail call i8* @_ZN6webrtc11EventTracer18GetCategoryEnabledEPKc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #4
  store i8* %14, i8** @_ZZN6webrtc14proxy_internal12TraceApiCallEPKcS2_E30trace_event_unique_catstatic18, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN6webrtc14proxy_internal12TraceApiCallEPKcS2_E30trace_event_unique_catstatic18) #4
  br label %15

15:                                               ; preds = %10, %13, %2
  %16 = bitcast %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #4
  %17 = getelementptr inbounds %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %6, i64 0, i32 1
  %19 = bitcast %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  store %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* null, %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"** %17, align 8
  %20 = load i8*, i8** @_ZZN6webrtc14proxy_internal12TraceApiCallEPKcS2_E30trace_event_unique_catstatic18, align 8
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %6, i64 0, i32 1, i32 1
  %25 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %3, align 8
  %26 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #4
  %27 = bitcast [1 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #4
  %28 = getelementptr inbounds [1 x i64], [1 x i64]* %5, i64 0, i64 0
  store i8 6, i8* %26, align 1
  store i64 %7, i64* %28, align 8
  call void @_ZN6webrtc11EventTracer13AddTraceEventEcPKhPKcyiPS4_S2_PKyh(i8 signext 66, i8* %20, i8* %0, i64 0, i32 1, i8** nonnull %3, i8* nonnull %26, i64* nonnull %28, i8 zeroext 0) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  %29 = load i64, i64* bitcast (i8** @_ZZN6webrtc14proxy_internal12TraceApiCallEPKcS2_E30trace_event_unique_catstatic18 to i64*), align 8
  %30 = getelementptr inbounds %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %6, i64 0, i32 1
  %31 = bitcast %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %30 to i64*
  store i64 %29, i64* %31, align 8
  store i8* %0, i8** %24, align 8
  store %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %30, %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"** %17, align 8
  %32 = icmp eq %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %30, null
  %33 = inttoptr i64 %29 to i8*
  br i1 %32, label %38, label %34

34:                                               ; preds = %23
  %35 = load i8, i8* %33, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  call void @_ZN6webrtc11EventTracer13AddTraceEventEcPKhPKcyiPS4_S2_PKyh(i8 signext 69, i8* %33, i8* %0, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #4
  br label %38

38:                                               ; preds = %15, %23, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #4
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

declare i8* @_ZN6webrtc11EventTracer18GetCategoryEnabledEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6webrtc11EventTracer13AddTraceEventEcPKhPKcyiPS4_S2_PKyh(i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
