; ModuleID = '../../third_party/pdfium/core/fpdfapi/font/cpdf_type3font.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/font/cpdf_type3font.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_Type3Font = type { %class.CPDF_SimpleFont, i32, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.112", %"class.fxcrt::RetainPtr.89", %"class.fxcrt::RetainPtr.89", %"class.fxcrt::RetainPtr.89", %"class.std::__1::map.113", [256 x i32] }
%class.CPDF_SimpleFont = type { %class.CPDF_Font, %class.CPDF_FontEncoding, i32, i8, %"class.std::__1::vector.105", [256 x i16], [256 x i16], [256 x %struct.FX_RECT] }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.46", %"class.fxcrt::RetainPtr.54", %"class.fxcrt::RetainPtr.89", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.99", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.7", %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.15", %"class.fxcrt::RetainPtr.19" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.45", i64 }
%"class.fxcrt::UnownedPtr.45" = type { i8* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::unique_ptr.48" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr.48"* }
%"class.fxcrt::RetainPtr.54" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.64", %"class.fxcrt::RetainPtr.85" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.39", %"class.fxcrt::UnownedPtr.45" }
%"class.fxcrt::RetainPtr.64" = type { %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.85" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.89", %"class.std::__1::unique_ptr.39", %"class.fxcrt::RetainPtr" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.58" }
%"class.fxcrt::RetainPtr.58" = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CPDF_FontEncoding = type { [256 x i32] }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.fxcrt::ByteString"* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::UnownedPtr.112" = type { %"class.CPDF_Font::FormFactoryIface"* }
%"class.fxcrt::RetainPtr.89" = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %class.CPDF_Dictionary* }
%"class.std::__1::map.113" = type { %"class.std::__1::__tree.114" }
%"class.std::__1::__tree.114" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CPDF_Document = type opaque
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.174", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.189", [4 x i8] }>
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176", %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.74" }
%"class.std::__1::__tree.74" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.CPDF_Font::FormFactoryIface" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::unique_ptr.130" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %class.CPDF_Type3Char* }
%class.CPDF_Type3Char = type { %"class.std::__1::unique_ptr.133", %"class.fxcrt::RetainPtr.139", i8, i32, %class.CFX_Matrix, %struct.FX_RECT }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.CPDF_Font::FormIface"* }
%"class.CPDF_Font::FormIface" = type { i32 (...)** }
%"class.fxcrt::RetainPtr.139" = type { %"class.std::__1::unique_ptr.140" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.148", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.fxcrt::RetainPtr.150"*, %"class.fxcrt::RetainPtr.150"*, %"class.std::__1::__compressed_pair.156" }
%"class.fxcrt::RetainPtr.150" = type { %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.fxcrt::RetainPtr.150"* }
%class.CPDF_Type1Font = type opaque
%class.CPDF_TrueTypeFont = type opaque
%class.CPDF_CIDFont = type opaque
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.161" }
%"class.pdfium::span.161" = type { %"class.fxcrt::UnownedPtr.162", i64 }
%"class.fxcrt::UnownedPtr.162" = type { i8* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.163" }
%"class.fxcrt::RetainPtr.163" = type { %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.fxcrt::StringDataTemplate.167"* }
%"class.fxcrt::StringDataTemplate.167" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>

$_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI14CPDF_Type3CharNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTV14CPDF_Type3Font = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_Type3Font*)* @_ZN14CPDF_Type3FontD2Ev to i8*), i8* bitcast (void (%class.CPDF_Type3Font*)* @_ZN14CPDF_Type3FontD0Ev to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font11IsType1FontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font14IsTrueTypeFontEv to i8*), i8* bitcast (i1 (%class.CPDF_Type3Font*)* @_ZNK14CPDF_Type3Font11IsType3FontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font9IsCIDFontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZNK9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZN9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_Font*)* @_ZNK9CPDF_Font14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_Font*)* @_ZN9CPDF_Font14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Type3Font*)* @_ZNK14CPDF_Type3Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Type3Font*)* @_ZN14CPDF_Type3Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_Font*)* @_ZNK9CPDF_Font9AsCIDFontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_Font*)* @_ZN9CPDF_Font9AsCIDFontEv to i8*), i8* bitcast (void (%class.CPDF_Type3Font*)* @_ZN14CPDF_Type3Font15WillBeDestroyedEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font13IsVertWritingEv to i8*), i8* bitcast (i1 (%class.CPDF_SimpleFont*)* @_ZNK15CPDF_SimpleFont19IsUnicodeCompatibleEv to i8*), i8* bitcast (i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)* @_ZNK9CPDF_Font11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm to i8*), i8* bitcast (i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)* @_ZNK9CPDF_Font9CountCharEN5fxcrt18StringViewTemplateIcEE to i8*), i8* bitcast (i32 (%class.CPDF_Font*, i8*, i32)* @_ZNK9CPDF_Font10AppendCharEPcj to i8*), i8* bitcast (i32 (%class.CPDF_SimpleFont*, i32, i8*)* @_ZN15CPDF_SimpleFont17GlyphFromCharCodeEjPb to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPDF_SimpleFont*, i32)* @_ZNK15CPDF_SimpleFont19UnicodeFromCharCodeEj to i8*), i8* bitcast (i32 (%class.CPDF_SimpleFont*, i32)* @_ZNK15CPDF_SimpleFont19CharCodeFromUnicodeEw to i8*), i8* bitcast (i1 (%class.CPDF_SimpleFont*)* @_ZNK15CPDF_SimpleFont13HasFontWidthsEv to i8*), i8* bitcast (i32 (%class.CPDF_Type3Font*, i32)* @_ZN14CPDF_Type3Font13GetCharWidthFEj to i8*), i8* bitcast ({ i64, i64 } (%class.CPDF_Type3Font*, i32)* @_ZN14CPDF_Type3Font11GetCharBBoxEj to i8*), i8* bitcast (i1 (%class.CPDF_Type3Font*)* @_ZN14CPDF_Type3Font4LoadEv to i8*), i8* bitcast (void (%class.CPDF_Type3Font*)* @_ZN14CPDF_Type3Font12LoadGlyphMapEv to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"Resources\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"FontMatrix\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"FontBBox\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"FirstChar\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"Widths\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"CharProcs\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"Encoding\00", align 1

@_ZN14CPDF_Type3FontC1EP13CPDF_DocumentP15CPDF_DictionaryPN9CPDF_Font16FormFactoryIfaceE = hidden unnamed_addr alias void (%class.CPDF_Type3Font*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %"class.CPDF_Font::FormFactoryIface"*), void (%class.CPDF_Type3Font*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %"class.CPDF_Font::FormFactoryIface"*)* @_ZN14CPDF_Type3FontC2EP13CPDF_DocumentP15CPDF_DictionaryPN9CPDF_Font16FormFactoryIfaceE
@_ZN14CPDF_Type3FontD1Ev = hidden unnamed_addr alias void (%class.CPDF_Type3Font*), void (%class.CPDF_Type3Font*)* @_ZN14CPDF_Type3FontD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3FontC2EP13CPDF_DocumentP15CPDF_DictionaryPN9CPDF_Font16FormFactoryIfaceE(%class.CPDF_Type3Font*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %"class.CPDF_Font::FormFactoryIface"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_SimpleFontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_SimpleFont* %5, %class.CPDF_Document* %1, %class.CPDF_Dictionary* %2) #7
  %6 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV14CPDF_Type3Font, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 2, i32 0
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %9, align 4
  %10 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 2, i32 4
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 2, i32 5
  store float 0.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 3, i32 0
  store %"class.CPDF_Font::FormFactoryIface"* %3, %"class.CPDF_Font::FormFactoryIface"** %12, align 8
  %13 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 4
  %14 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #7
  %18 = bitcast %"class.fxcrt::RetainPtr.89"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %16, align 8
  %19 = getelementptr %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 8, i64 0
  %20 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 1024, i1 false)
  ret void
}

declare void @_ZN15CPDF_SimpleFontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_SimpleFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3FontD2Ev(%class.CPDF_Type3Font*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV14CPDF_Type3Font, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI14CPDF_Type3CharNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.114"* %3, %"class.std::__1::__tree_node"* %6) #7
  %7 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %7, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %7, align 8
  %9 = icmp eq %class.CPDF_Dictionary* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %8, i64 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, -1
  store i64 %13, i64* %11, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %8, i64 0, i32 0, i32 0
  %17 = bitcast %class.CPDF_Dictionary* %8 to void (%"class.fxcrt::Retainable"*)***
  %18 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %18, i64 1
  %20 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, align 8
  tail call void %20(%"class.fxcrt::Retainable"* nonnull %16) #7
  br label %21

21:                                               ; preds = %1, %10, %15
  %22 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %22, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %22, align 8
  %24 = icmp eq %class.CPDF_Dictionary* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %23, i64 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %23, i64 0, i32 0, i32 0
  %32 = bitcast %class.CPDF_Dictionary* %23 to void (%"class.fxcrt::Retainable"*)***
  %33 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, i64 1
  %35 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, align 8
  tail call void %35(%"class.fxcrt::Retainable"* nonnull %31) #7
  br label %36

36:                                               ; preds = %21, %25, %30
  %37 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %37, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %37, align 8
  %39 = icmp eq %class.CPDF_Dictionary* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %38, i64 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %38, i64 0, i32 0, i32 0
  %47 = bitcast %class.CPDF_Dictionary* %38 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  tail call void %50(%"class.fxcrt::Retainable"* nonnull %46) #7
  br label %51

51:                                               ; preds = %36, %40, %45
  %52 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_SimpleFontD2Ev(%class.CPDF_SimpleFont* %52) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN15CPDF_SimpleFontD2Ev(%class.CPDF_SimpleFont*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3FontD0Ev(%class.CPDF_Type3Font*) unnamed_addr #0 align 2 {
  tail call void @_ZN14CPDF_Type3FontD2Ev(%class.CPDF_Type3Font* %0) #7
  %2 = bitcast %class.CPDF_Type3Font* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK14CPDF_Type3Font11IsType3FontEv(%class.CPDF_Type3Font* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_Type3Font* @_ZNK14CPDF_Type3Font11AsType3FontEv(%class.CPDF_Type3Font* readnone returned) unnamed_addr #4 align 2 {
  ret %class.CPDF_Type3Font* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_Type3Font* @_ZN14CPDF_Type3Font11AsType3FontEv(%class.CPDF_Type3Font* readnone returned) unnamed_addr #4 align 2 {
  ret %class.CPDF_Type3Font* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3Font15WillBeDestroyedEv(%class.CPDF_Type3Font*) unnamed_addr #0 align 2 {
  %2 = icmp eq %class.CPDF_Type3Font* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add nsw i64 %5, 1
  store i64 %6, i64* %4, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 0
  %9 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %11 = icmp eq %"class.std::__1::__tree_end_node"* %9, %10
  br i1 %11, label %12, label %25

12:                                               ; preds = %60, %7
  br i1 %2, label %24, label %13

13:                                               ; preds = %12
  %14 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %class.CPDF_Type3Font* %0 to void (%"class.fxcrt::Retainable"*)***
  %21 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, i64 1
  %23 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, align 8
  tail call void %23(%"class.fxcrt::Retainable"* nonnull %19) #7
  br label %24

24:                                               ; preds = %12, %13, %18
  ret void

25:                                               ; preds = %7, %60
  %26 = phi %"class.std::__1::__tree_end_node"* [ %61, %60 ], [ %9, %7 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 5
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %class.CPDF_Type3Char**
  %29 = load %class.CPDF_Type3Char*, %class.CPDF_Type3Char** %28, align 8
  %30 = icmp eq %class.CPDF_Type3Char* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %25
  tail call void @_ZN14CPDF_Type3Char15WillBeDestroyedEv(%class.CPDF_Type3Char* nonnull %29) #7
  br label %32

32:                                               ; preds = %25, %31
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 1, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 2
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_end_node"**
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %37
  br i1 %43, label %60, label %51

44:                                               ; preds = %32, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %34, %32 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0
  br label %60

51:                                               ; preds = %36, %51
  %52 = phi %"class.std::__1::__tree_end_node"** [ %55, %51 ], [ %39, %36 ]
  %53 = bitcast %"class.std::__1::__tree_end_node"** %52 to %"class.std::__1::__tree_node_base"**
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %54
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %36, %49
  %61 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %40, %36 ], [ %56, %51 ]
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %10
  br i1 %62, label %12, label %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN14CPDF_Type3Char15WillBeDestroyedEv(%class.CPDF_Type3Char*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CPDF_Type3Font4LoadEv(%class.CPDF_Type3Font*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %class.CFX_Matrix, align 4
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca <4 x float>, align 16
  %7 = bitcast <4 x float>* %6 to %class.CFX_FloatRect*
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %14 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #7
  %15 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %13, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #7
  %16 = icmp eq %class.CPDF_Dictionary* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %15, i64 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, 1
  store i64 %20, i64* %18, align 8
  br label %21

21:                                               ; preds = %17, %1
  %22 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %22, align 8
  store %class.CPDF_Dictionary* %15, %class.CPDF_Dictionary** %22, align 8
  %24 = icmp eq %class.CPDF_Dictionary* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %23, i64 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %23, i64 0, i32 0, i32 0
  %32 = bitcast %class.CPDF_Dictionary* %23 to void (%"class.fxcrt::Retainable"*)***
  %33 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, i64 1
  %35 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, align 8
  call void %35(%"class.fxcrt::Retainable"* nonnull %31) #7
  br label %36

36:                                               ; preds = %21, %25, %30
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %37 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %38 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #7
  %39 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %37, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #7
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  %40 = icmp eq %class.CPDF_Array* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  %42 = bitcast %class.CFX_Matrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #7
  call void @_ZNK10CPDF_Array9GetMatrixEv(%class.CFX_Matrix* nonnull sret %4, %class.CPDF_Array* nonnull %39) #7
  %43 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 2
  %44 = bitcast %class.CFX_Matrix* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* nonnull align 4 %42, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #7
  %45 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %43, i64 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 2, i32 3
  %48 = load float, float* %47, align 4
  %49 = insertelement <2 x float> undef, float %46, i32 0
  %50 = insertelement <2 x float> %49, float %48, i32 1
  br label %51

51:                                               ; preds = %36, %41
  %52 = phi <2 x float> [ %50, %41 ], [ <float 1.000000e+00, float 1.000000e+00>, %36 ]
  %53 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %54 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #7
  %55 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %53, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #7
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #7
  %56 = icmp eq %class.CPDF_Array* %55, null
  br i1 %56, label %76, label %57

57:                                               ; preds = %51
  %58 = shufflevector <2 x float> %52, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %59 = bitcast <4 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #7
  %60 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %55, i64 0) #7
  %61 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %55, i64 1) #7
  %62 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %55, i64 2) #7
  %63 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %55, i64 3) #7
  %64 = insertelement <4 x float> undef, float %60, i32 0
  %65 = insertelement <4 x float> %64, float %61, i32 1
  %66 = insertelement <4 x float> %65, float %62, i32 2
  %67 = insertelement <4 x float> %66, float %63, i32 3
  %68 = fmul <4 x float> %58, %67
  store <4 x float> %68, <4 x float>* %6, align 16
  call void @_ZN14CPDF_Type3Char27TextUnitRectToGlyphUnitRectEP13CFX_FloatRect(%class.CFX_FloatRect* nonnull %7) #7
  %69 = call { i64, i64 } @_ZNK13CFX_FloatRect8ToFxRectEv(%class.CFX_FloatRect* nonnull %7) #7
  %70 = extractvalue { i64, i64 } %69, 0
  %71 = extractvalue { i64, i64 } %69, 1
  %72 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0, i32 15
  %73 = bitcast %struct.FX_RECT* %72 to i64*
  store i64 %70, i64* %73, align 8
  %74 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0, i32 15, i32 2
  %75 = bitcast i32* %74 to i64*
  store i64 %71, i64* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #7
  br label %76

76:                                               ; preds = %51, %57
  %77 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %78 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #7
  %79 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %77, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #7
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #7
  %80 = icmp sgt i32 %79, -1
  br i1 %80, label %81, label %116

81:                                               ; preds = %76
  %82 = sext i32 %79 to i64
  %83 = icmp ult i32 %79, 256
  br i1 %83, label %84, label %116

84:                                               ; preds = %81
  %85 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %86 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)) #7
  %87 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %85, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #7
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #7
  %88 = icmp eq %class.CPDF_Array* %87, null
  br i1 %88, label %116, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %87, i64 0, i32 1
  %91 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %87, i64 0, i32 1, i32 0, i32 1
  %92 = bitcast %"class.fxcrt::RetainPtr.150"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector.148"* %90 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = icmp ult i64 %97, 256
  %99 = select i1 %98, i64 %97, i64 256
  %100 = sub nsw i64 256, %82
  %101 = icmp ult i64 %100, %99
  %102 = select i1 %101, i64 %100, i64 %99
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %89
  %105 = extractelement <2 x float> %52, i32 0
  br label %106

106:                                              ; preds = %104, %106
  %107 = phi i64 [ %114, %106 ], [ 0, %104 ]
  %108 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %87, i64 %107) #7
  %109 = fmul float %105, %108
  %110 = call float @_ZN14CPDF_Type3Char19TextUnitToGlyphUnitEf(float %109) #7
  %111 = call i32 @FXSYS_roundf(float %110) #7
  %112 = add i64 %107, %82
  %113 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 8, i64 %112
  store i32 %111, i32* %113, align 4
  %114 = add nuw i64 %107, 1
  %115 = icmp ult i64 %114, %102
  br i1 %115, label %106, label %116

116:                                              ; preds = %106, %89, %84, %81, %76
  %117 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %118 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #7
  %119 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %117, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #7
  %120 = icmp eq %class.CPDF_Dictionary* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %119, i64 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = add nsw i64 %123, 1
  store i64 %124, i64* %122, align 8
  br label %125

125:                                              ; preds = %121, %116
  %126 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %127 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %126, align 8
  store %class.CPDF_Dictionary* %119, %class.CPDF_Dictionary** %126, align 8
  %128 = icmp eq %class.CPDF_Dictionary* %127, null
  br i1 %128, label %140, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %127, i64 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = add nsw i64 %131, -1
  store i64 %132, i64* %130, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %127, i64 0, i32 0, i32 0
  %136 = bitcast %class.CPDF_Dictionary* %127 to void (%"class.fxcrt::Retainable"*)***
  %137 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %137, i64 1
  %139 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %138, align 8
  call void %139(%"class.fxcrt::Retainable"* nonnull %135) #7
  br label %140

140:                                              ; preds = %125, %129, %134
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #7
  %141 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %142 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #7
  %143 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %141, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #7
  %144 = icmp eq %class.CPDF_Object* %143, null
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #7
  br i1 %144, label %147, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0
  call void @_ZN15CPDF_SimpleFont15LoadPDFEncodingEbb(%class.CPDF_SimpleFont* %146, i1 zeroext false, i1 zeroext false) #7
  br label %147

147:                                              ; preds = %140, %145
  ret i1 true
}

declare %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

declare %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK10CPDF_Array9GetMatrixEv(%class.CFX_Matrix* sret, %class.CPDF_Array*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare void @_ZN14CPDF_Type3Char27TextUnitRectToGlyphUnitRectEP13CFX_FloatRect(%class.CFX_FloatRect*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK13CFX_FloatRect8ToFxRectEv(%class.CFX_FloatRect*) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @FXSYS_roundf(float) local_unnamed_addr #1

declare float @_ZN14CPDF_Type3Char19TextUnitToGlyphUnitEf(float) local_unnamed_addr #1

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN15CPDF_SimpleFont15LoadPDFEncodingEbb(%class.CPDF_SimpleFont*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CPDF_Type3Font12LoadGlyphMapEv(%class.CPDF_Type3Font* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3Font21CheckType3FontMetricsEv(%class.CPDF_Type3Font*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9CPDF_Font16CheckFontMetricsEv(%class.CPDF_Font* %2) #7
  ret void
}

declare void @_ZN9CPDF_Font16CheckFontMetricsEv(%class.CPDF_Font*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_Type3Char* @_ZN14CPDF_Type3Font8LoadCharEj(%class.CPDF_Type3Font*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 3
  br i1 %6, label %213, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7
  %9 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %38, label %13

13:                                               ; preds = %7, %13
  %14 = phi %"class.std::__1::__tree_end_node"* [ %24, %13 ], [ %9, %7 ]
  %15 = phi %"class.std::__1::__tree_node"* [ %25, %13 ], [ %11, %7 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %17, %1
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::__tree_node_base"** %19 to %"class.std::__1::__tree_node"**
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_node"* %15 to %"class.std::__1::__tree_node"**
  %23 = select i1 %18, %"class.std::__1::__tree_node"** %20, %"class.std::__1::__tree_node"** %22
  %24 = select i1 %18, %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"* %21
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  %26 = icmp eq %"class.std::__1::__tree_node"* %25, null
  br i1 %26, label %27, label %13

27:                                               ; preds = %13
  %28 = icmp eq %"class.std::__1::__tree_end_node"* %24, %9
  br i1 %28, label %38, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 4
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = icmp ugt i32 %32, %1
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 5
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %class.CPDF_Type3Char**
  %37 = load %class.CPDF_Type3Char*, %class.CPDF_Type3Char** %36, align 8
  br label %213

38:                                               ; preds = %29, %27, %7
  %39 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 4
  %42 = tail call i8* @_ZN9CPDF_Font16GetAdobeCharNameEiRKNSt3__16vectorIN5fxcrt10ByteStringENS0_9allocatorIS3_EEEEj(i32 %40, %"class.std::__1::vector.105"* dereferenceable(24) %41, i32 %1) #7
  %43 = icmp eq i8* %42, null
  br i1 %43, label %213, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %46 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %45, align 8
  %47 = icmp eq %class.CPDF_Dictionary* %46, null
  br i1 %47, label %213, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* nonnull %42) #7
  %50 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %46, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #7
  %51 = icmp eq %class.CPDF_Object* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %class.CPDF_Object* %50 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %54 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %53, align 8
  %55 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %54, i64 35
  %56 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %55, align 8
  %57 = call %class.CPDF_Stream* %56(%class.CPDF_Object* nonnull %50) #7
  br label %58

58:                                               ; preds = %48, %52
  %59 = phi %class.CPDF_Stream* [ %57, %52 ], [ null, %48 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #7
  %60 = icmp eq %class.CPDF_Stream* %59, null
  br i1 %60, label %213, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 3, i32 0
  %63 = load %"class.CPDF_Font::FormFactoryIface"*, %"class.CPDF_Font::FormFactoryIface"** %62, align 8
  %64 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %65 = load %class.CPDF_Document*, %class.CPDF_Document** %64, align 8
  %66 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %67 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %66, align 8
  %68 = icmp eq %class.CPDF_Dictionary* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %61
  %70 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %71 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %70, align 8
  br label %72

72:                                               ; preds = %61, %69
  %73 = phi %class.CPDF_Dictionary* [ %71, %69 ], [ %67, %61 ]
  %74 = bitcast %"class.CPDF_Font::FormFactoryIface"* %63 to %"class.CPDF_Font::FormIface"* (%"class.CPDF_Font::FormFactoryIface"*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Stream*)***
  %75 = load %"class.CPDF_Font::FormIface"* (%"class.CPDF_Font::FormFactoryIface"*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Stream*)**, %"class.CPDF_Font::FormIface"* (%"class.CPDF_Font::FormFactoryIface"*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Stream*)*** %74, align 8
  %76 = getelementptr inbounds %"class.CPDF_Font::FormIface"* (%"class.CPDF_Font::FormFactoryIface"*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Stream*)*, %"class.CPDF_Font::FormIface"* (%"class.CPDF_Font::FormFactoryIface"*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Stream*)** %75, i64 2
  %77 = load %"class.CPDF_Font::FormIface"* (%"class.CPDF_Font::FormFactoryIface"*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Stream*)*, %"class.CPDF_Font::FormIface"* (%"class.CPDF_Font::FormFactoryIface"*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Stream*)** %76, align 8
  %78 = call %"class.CPDF_Font::FormIface"* %77(%"class.CPDF_Font::FormFactoryIface"* %63, %class.CPDF_Document* %65, %class.CPDF_Dictionary* %73, %class.CPDF_Stream* nonnull %59) #7
  %79 = ptrtoint %"class.CPDF_Font::FormIface"* %78 to i64
  %80 = call i8* @_Znwm(i64 64) #8
  %81 = bitcast i8* %80 to %class.CPDF_Type3Char*
  call void @_ZN14CPDF_Type3CharC1Ev(%class.CPDF_Type3Char* nonnull %81) #7
  %82 = ptrtoint i8* %80 to i64
  %83 = load i32, i32* %4, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %4, align 8
  %85 = bitcast %"class.CPDF_Font::FormIface"* %78 to void (%"class.CPDF_Font::FormIface"*, %class.CPDF_Type3Char*)***
  %86 = load void (%"class.CPDF_Font::FormIface"*, %class.CPDF_Type3Char*)**, void (%"class.CPDF_Font::FormIface"*, %class.CPDF_Type3Char*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.CPDF_Font::FormIface"*, %class.CPDF_Type3Char*)*, void (%"class.CPDF_Font::FormIface"*, %class.CPDF_Type3Char*)** %86, i64 2
  %88 = load void (%"class.CPDF_Font::FormIface"*, %class.CPDF_Type3Char*)*, void (%"class.CPDF_Font::FormIface"*, %class.CPDF_Type3Char*)** %87, align 8
  call void %88(%"class.CPDF_Font::FormIface"* %78, %class.CPDF_Type3Char* nonnull %81) #7
  %89 = icmp eq i32* %4, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %72
  store i32 %83, i32* %4, align 4
  br label %91

91:                                               ; preds = %72, %90
  %92 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %93 = icmp eq %"class.std::__1::__tree_node"* %92, null
  br i1 %93, label %115, label %94

94:                                               ; preds = %91, %94
  %95 = phi %"class.std::__1::__tree_end_node"* [ %105, %94 ], [ %9, %91 ]
  %96 = phi %"class.std::__1::__tree_node"* [ %106, %94 ], [ %92, %91 ]
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 1, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp ult i32 %98, %1
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 0, i32 1
  %101 = bitcast %"class.std::__1::__tree_node_base"** %100 to %"class.std::__1::__tree_node"**
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::__tree_node"* %96 to %"class.std::__1::__tree_node"**
  %104 = select i1 %99, %"class.std::__1::__tree_node"** %101, %"class.std::__1::__tree_node"** %103
  %105 = select i1 %99, %"class.std::__1::__tree_end_node"* %95, %"class.std::__1::__tree_end_node"* %102
  %106 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %104, align 8
  %107 = icmp eq %"class.std::__1::__tree_node"* %106, null
  br i1 %107, label %108, label %94

108:                                              ; preds = %94
  %109 = icmp eq %"class.std::__1::__tree_end_node"* %105, %9
  br i1 %109, label %115, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 4
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp ugt i32 %113, %1
  br i1 %114, label %115, label %199

115:                                              ; preds = %110, %108, %91
  %116 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 2
  call void @_ZN14CPDF_Type3Char9TransformEPN9CPDF_Font9FormIfaceERK10CFX_Matrix(%class.CPDF_Type3Char* nonnull %81, %"class.CPDF_Font::FormIface"* %78, %class.CFX_Matrix* dereferenceable(24) %116) #7
  %117 = bitcast %"class.CPDF_Font::FormIface"* %78 to i1 (%"class.CPDF_Font::FormIface"*)***
  %118 = load i1 (%"class.CPDF_Font::FormIface"*)**, i1 (%"class.CPDF_Font::FormIface"*)*** %117, align 8
  %119 = getelementptr inbounds i1 (%"class.CPDF_Font::FormIface"*)*, i1 (%"class.CPDF_Font::FormIface"*)** %118, i64 3
  %120 = load i1 (%"class.CPDF_Font::FormIface"*)*, i1 (%"class.CPDF_Font::FormIface"*)** %119, align 8
  %121 = call zeroext i1 %120(%"class.CPDF_Font::FormIface"* %78) #7
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  call void @_ZN14CPDF_Type3Char7SetFormENSt3__110unique_ptrIN9CPDF_Font9FormIfaceENS0_14default_deleteIS3_EEEE(%class.CPDF_Type3Char* nonnull %81, %"class.CPDF_Font::FormIface"* %78) #7
  br label %123

123:                                              ; preds = %122, %115
  %124 = phi i64 [ 0, %122 ], [ %79, %115 ]
  %125 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %126 = icmp eq %"class.std::__1::__tree_node"* %125, null
  br i1 %126, label %155, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %129

129:                                              ; preds = %151, %127
  %130 = phi %"class.std::__1::__tree_node"* [ %154, %151 ], [ %125, %127 ]
  %131 = phi %"class.std::__1::__tree_node_base"** [ %153, %151 ], [ %128, %127 ]
  %132 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 1, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp ugt i32 %133, %1
  br i1 %134, label %135, label %141

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %139, label %151

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 0, i32 0
  br label %157

141:                                              ; preds = %129
  %142 = icmp ult i32 %133, %1
  br i1 %142, label %143, label %149

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 0, i32 1
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 0, i32 0
  br label %157

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 0, i32 0
  br label %157

151:                                              ; preds = %143, %135
  %152 = phi %"class.std::__1::__tree_node_base"* [ %137, %135 ], [ %145, %143 ]
  %153 = phi %"class.std::__1::__tree_node_base"** [ %136, %135 ], [ %144, %143 ]
  %154 = bitcast %"class.std::__1::__tree_node_base"* %152 to %"class.std::__1::__tree_node"*
  br label %129

155:                                              ; preds = %123
  %156 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  br label %157

157:                                              ; preds = %155, %149, %147, %139
  %158 = phi %"class.std::__1::__tree_end_node"* [ %9, %155 ], [ %140, %139 ], [ %148, %147 ], [ %150, %149 ]
  %159 = phi %"class.std::__1::__tree_node_base"** [ %156, %155 ], [ %136, %139 ], [ %144, %147 ], [ %131, %149 ]
  %160 = bitcast %"class.std::__1::__tree_node_base"** %159 to %"class.std::__1::__tree_node"**
  %161 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node"* %161, null
  br i1 %162, label %163, label %190

163:                                              ; preds = %157
  %164 = call i8* @_Znwm(i64 48) #8, !noalias !2
  %165 = getelementptr inbounds i8, i8* %164, i64 32
  %166 = bitcast i8* %165 to i32*
  store i32 %1, i32* %166, align 8, !noalias !2
  %167 = getelementptr inbounds i8, i8* %164, i64 40
  %168 = bitcast i8* %167 to i64*
  store i64 0, i64* %168, align 8, !noalias !2
  %169 = bitcast i8* %164 to %"class.std::__1::__tree_node"*
  %170 = bitcast i8* %164 to %"class.std::__1::__tree_node_base"*
  %171 = getelementptr inbounds i8, i8* %164, i64 16
  %172 = bitcast i8* %171 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"** %172, align 8
  %173 = bitcast %"class.std::__1::__tree_node_base"** %159 to i8**
  store i8* %164, i8** %173, align 8
  %174 = getelementptr inbounds %"class.std::__1::map.113", %"class.std::__1::map.113"* %8, i64 0, i32 0, i32 0
  %175 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 0, i32 0
  %177 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %176, align 8
  %178 = icmp eq %"class.std::__1::__tree_node_base"* %177, null
  br i1 %178, label %183, label %179

179:                                              ; preds = %163
  %180 = ptrtoint %"class.std::__1::__tree_node_base"* %177 to i64
  %181 = bitcast %"class.std::__1::map.113"* %8 to i64*
  store i64 %180, i64* %181, align 8
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  br label %183

183:                                              ; preds = %179, %163
  %184 = phi %"class.std::__1::__tree_node_base"* [ %170, %163 ], [ %182, %179 ]
  %185 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %186, %"class.std::__1::__tree_node_base"* %184) #7
  %187 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 1
  store i64 %189, i64* %187, align 8
  br label %190

190:                                              ; preds = %157, %183
  %191 = phi %"class.std::__1::__tree_node"* [ %169, %183 ], [ %161, %157 ]
  %192 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %191, i64 0, i32 1, i32 0, i32 1
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130"* %192, i64 0, i32 0, i32 0, i32 0
  %194 = load %class.CPDF_Type3Char*, %class.CPDF_Type3Char** %193, align 8
  %195 = bitcast %"class.std::__1::unique_ptr.130"* %192 to i64*
  store i64 %82, i64* %195, align 8
  %196 = icmp eq %class.CPDF_Type3Char* %194, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %190
  call void @_ZN14CPDF_Type3CharD1Ev(%class.CPDF_Type3Char* nonnull %194) #7
  %198 = bitcast %class.CPDF_Type3Char* %194 to i8*
  call void @_ZdlPv(i8* %198) #8
  br label %203

199:                                              ; preds = %110
  %200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 5
  %201 = bitcast %"class.std::__1::__tree_end_node"* %200 to %class.CPDF_Type3Char**
  %202 = load %class.CPDF_Type3Char*, %class.CPDF_Type3Char** %201, align 8
  call void @_ZN14CPDF_Type3CharD1Ev(%class.CPDF_Type3Char* nonnull %81) #7
  call void @_ZdlPv(i8* nonnull %80) #8
  br label %203

203:                                              ; preds = %197, %190, %199
  %204 = phi %class.CPDF_Type3Char* [ %202, %199 ], [ %81, %190 ], [ %81, %197 ]
  %205 = phi i64 [ %79, %199 ], [ %124, %190 ], [ %124, %197 ]
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %213, label %207

207:                                              ; preds = %203
  %208 = inttoptr i64 %205 to %"class.CPDF_Font::FormIface"*
  %209 = inttoptr i64 %205 to void (%"class.CPDF_Font::FormIface"*)***
  %210 = load void (%"class.CPDF_Font::FormIface"*)**, void (%"class.CPDF_Font::FormIface"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %210, i64 1
  %212 = load void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %211, align 8
  call void %212(%"class.CPDF_Font::FormIface"* nonnull %208) #7
  br label %213

213:                                              ; preds = %44, %34, %58, %38, %203, %207, %2
  %214 = phi %class.CPDF_Type3Char* [ null, %2 ], [ %37, %34 ], [ null, %38 ], [ null, %44 ], [ null, %58 ], [ %204, %203 ], [ %204, %207 ]
  ret %class.CPDF_Type3Char* %214
}

declare i8* @_ZN9CPDF_Font16GetAdobeCharNameEiRKNSt3__16vectorIN5fxcrt10ByteStringENS0_9allocatorIS3_EEEEj(i32, %"class.std::__1::vector.105"* dereferenceable(24), i32) local_unnamed_addr #1

declare void @_ZN14CPDF_Type3Char9TransformEPN9CPDF_Font9FormIfaceERK10CFX_Matrix(%class.CPDF_Type3Char*, %"class.CPDF_Font::FormIface"*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN14CPDF_Type3Char7SetFormENSt3__110unique_ptrIN9CPDF_Font9FormIfaceENS0_14default_deleteIS3_EEEE(%class.CPDF_Type3Char*, %"class.CPDF_Font::FormIface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CPDF_Type3Font13GetCharWidthFEj(%class.CPDF_Type3Font*, i32) unnamed_addr #0 align 2 {
  %3 = icmp ult i32 %1, 256
  %4 = select i1 %3, i32 %1, i32 0
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.CPDF_Type3Font, %class.CPDF_Type3Font* %0, i64 0, i32 8, i64 %5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = tail call %class.CPDF_Type3Char* @_ZN14CPDF_Type3Font8LoadCharEj(%class.CPDF_Type3Font* %0, i32 %4)
  %11 = icmp eq %class.CPDF_Type3Char* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %10, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %12, %9, %2
  %16 = phi i32 [ %7, %2 ], [ %14, %12 ], [ 0, %9 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN14CPDF_Type3Font11GetCharBBoxEj(%class.CPDF_Type3Font*, i32) unnamed_addr #0 align 2 {
  %3 = tail call %class.CPDF_Type3Char* @_ZN14CPDF_Type3Font8LoadCharEj(%class.CPDF_Type3Font* %0, i32 %1)
  %4 = icmp eq %class.CPDF_Type3Char* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %3, i64 0, i32 5
  %7 = bitcast %struct.FX_RECT* %6 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = and i64 %8, -4294967296
  %10 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %3, i64 0, i32 5, i32 2
  %11 = bitcast i32* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = and i64 %8, 4294967295
  br label %14

14:                                               ; preds = %2, %5
  %15 = phi i64 [ 0, %2 ], [ %13, %5 ]
  %16 = phi i64 [ 0, %2 ], [ %9, %5 ]
  %17 = phi i64 [ 0, %2 ], [ %12, %5 ]
  %18 = or i64 %16, %15
  %19 = insertvalue { i64, i64 } undef, i64 %18, 0
  %20 = insertvalue { i64, i64 } %19, i64 %17, 1
  ret { i64, i64 } %20
}

declare zeroext i1 @_ZNK9CPDF_Font11IsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font14IsTrueTypeFontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font9IsCIDFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type1Font* @_ZNK9CPDF_Font11AsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type1Font* @_ZN9CPDF_Font11AsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_TrueTypeFont* @_ZNK9CPDF_Font14AsTrueTypeFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_TrueTypeFont* @_ZN9CPDF_Font14AsTrueTypeFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_CIDFont* @_ZNK9CPDF_Font9AsCIDFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_CIDFont* @_ZN9CPDF_Font9AsCIDFontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font13IsVertWritingEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_SimpleFont19IsUnicodeCompatibleEv(%class.CPDF_SimpleFont*) unnamed_addr #1

declare i32 @_ZNK9CPDF_Font11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm(%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*) unnamed_addr #1

declare i64 @_ZNK9CPDF_Font9CountCharEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

declare i32 @_ZNK9CPDF_Font10AppendCharEPcj(%class.CPDF_Font*, i8*, i32) unnamed_addr #1

declare i32 @_ZN15CPDF_SimpleFont17GlyphFromCharCodeEjPb(%class.CPDF_SimpleFont*, i32, i8*) unnamed_addr #1

declare void @_ZNK15CPDF_SimpleFont19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* sret, %class.CPDF_SimpleFont*, i32) unnamed_addr #1

declare i32 @_ZNK15CPDF_SimpleFont19CharCodeFromUnicodeEw(%class.CPDF_SimpleFont*, i32 signext) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_SimpleFont13HasFontWidthsEv(%class.CPDF_SimpleFont*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI14CPDF_Type3CharNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.114"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI14CPDF_Type3CharNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.114"* %0, %"class.std::__1::__tree_node"* %6) #7
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI14CPDF_Type3CharNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.114"* %0, %"class.std::__1::__tree_node"* %9) #7
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_Type3Char*, %class.CPDF_Type3Char** %10, align 8
  store %class.CPDF_Type3Char* null, %class.CPDF_Type3Char** %10, align 8
  %12 = icmp eq %class.CPDF_Type3Char* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN14CPDF_Type3CharD1Ev(%class.CPDF_Type3Char* nonnull %11) #7
  %14 = bitcast %class.CPDF_Type3Char* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %4, %13
  %16 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN14CPDF_Type3CharC1Ev(%class.CPDF_Type3Char*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN14CPDF_Type3CharD1Ev(%class.CPDF_Type3Char*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI14CPDF_Type3CharNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSJ_IJEEEEEENS2_INS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI14CPDF_Type3CharNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSJ_IJEEEEEENS2_INS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
