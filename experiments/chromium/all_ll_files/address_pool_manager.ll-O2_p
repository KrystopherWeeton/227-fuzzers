; ModuleID = '../../base/allocator/partition_allocator/address_pool_manager.cc'
source_filename = "../../base/allocator/partition_allocator/address_pool_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [1152 x i8] }
%"class.base::internal::AddressPoolManager::Pool" = type { %"class.base::Lock", %"class.std::__1::bitset", i64, i64, i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [64 x i64] }
%"class.base::internal::AddressPoolManager" = type { [2 x %"class.base::internal::AddressPoolManager::Pool"] }

@_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN4base8internal18AddressPoolManager4Pool8kMaxBitsE = hidden local_unnamed_addr constant i64 4096, align 8
@.str = private unnamed_addr constant [93 x i8] c"../../base/allocator/partition_allocator/address_pool_manager.cc(112) Check failed: ptr != 0\00", align 1
@.str.1 = private unnamed_addr constant [114 x i8] c"../../base/allocator/partition_allocator/address_pool_manager.cc(113) Check failed: !(ptr & kSuperPageOffsetMask)\00", align 1
@.str.2 = private unnamed_addr constant [117 x i8] c"../../base/allocator/partition_allocator/address_pool_manager.cc(114) Check failed: !(length & kSuperPageOffsetMask)\00", align 1
@.str.3 = private unnamed_addr constant [108 x i8] c"../../base/allocator/partition_allocator/address_pool_manager.cc(122) Check failed: total_bits_ <= kMaxBits\00", align 1

@_ZN4base8internal18AddressPoolManager4PoolC1Ev = hidden unnamed_addr alias void (%"class.base::internal::AddressPoolManager::Pool"*), void (%"class.base::internal::AddressPoolManager::Pool"*)* @_ZN4base8internal18AddressPoolManager4PoolC2Ev
@_ZN4base8internal18AddressPoolManager4PoolD1Ev = hidden unnamed_addr alias void (%"class.base::internal::AddressPoolManager::Pool"*), void (%"class.base::internal::AddressPoolManager::Pool"*)* @_ZN4base8internal18AddressPoolManager4PoolD2Ev
@_ZN4base8internal18AddressPoolManagerC1Ev = hidden unnamed_addr alias void (%"class.base::internal::AddressPoolManager"*), void (%"class.base::internal::AddressPoolManager"*)* @_ZN4base8internal18AddressPoolManagerC2Ev
@_ZN4base8internal18AddressPoolManagerD1Ev = hidden unnamed_addr alias void (%"class.base::internal::AddressPoolManager"*), void (%"class.base::internal::AddressPoolManager"*)* @_ZN4base8internal18AddressPoolManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 0)) #7
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 1, i64 40), i8 0, i64 512, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 1, i64 560), i8 0, i64 16, i1 false) #7
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 1, i64 576) to %"class.base::internal::LockImpl"*)) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 1, i64 616), i8 0, i64 512, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 1, i64 1136), i8 0, i64 16, i1 false) #7
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE to i8*)) #7
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_122g_address_pool_managerE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.base::internal::AddressPoolManager"*
  ret %"class.base::internal::AddressPoolManager"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base8internal18AddressPoolManager3AddEmm(%"class.base::internal::AddressPoolManager"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 1, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7, %3
  %12 = phi i32 [ 0, %3 ], [ 1, %7 ]
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 %13
  tail call void @_ZN4base8internal18AddressPoolManager4Pool10InitializeEmm(%"class.base::internal::AddressPoolManager::Pool"* %14, i64 %1, i64 %2)
  %15 = add nuw nsw i32 %12, 1
  br label %16

16:                                               ; preds = %7, %11
  %17 = phi i32 [ %15, %11 ], [ 0, %7 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base8internal18AddressPoolManager4Pool13IsInitializedEv(%"class.base::internal::AddressPoolManager::Pool"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal18AddressPoolManager4Pool10InitializeEmm(%"class.base::internal::AddressPoolManager::Pool"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %8, label %5, !prof !2

5:                                                ; preds = %3
  %6 = and i64 %1, 2097151
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %5, %3
  %9 = phi i8* [ getelementptr inbounds ([93 x i8], [93 x i8]* @.str, i64 0, i64 0), %3 ], [ getelementptr inbounds ([114 x i8], [114 x i8]* @.str.1, i64 0, i64 0), %5 ]
  tail call void @_ZN7logging8RawCheckEPKc(i8* %9) #7
  br label %10

10:                                               ; preds = %8, %5
  %11 = and i64 %2, 2097151
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %10
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %14

14:                                               ; preds = %10, %13
  %15 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 4
  store i64 %1, i64* %15, align 8
  %16 = lshr i64 %2, 21
  %17 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 3
  store i64 %16, i64* %17, align 8
  %18 = icmp ugt i64 %2, 8592031743
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %14
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %20

20:                                               ; preds = %14, %19
  %21 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %21) #7
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24, !prof !3

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %25) #7
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 1
  %28 = bitcast %"class.std::__1::bitset"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 520, i1 false)
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %21) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal18AddressPoolManager15ResetForTestingEv(%"class.base::internal::AddressPoolManager"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 0, i32 4
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 1, i32 4
  store i64 0, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal18AddressPoolManager4Pool5ResetEv(%"class.base::internal::AddressPoolManager::Pool"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 4
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal18AddressPoolManager6RemoveEj(%"class.base::internal::AddressPoolManager"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = add i32 %1, -1
  %4 = zext i32 %3 to i64
  %5 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 %4, i32 4
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"*, i32, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = add i32 %1, -1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 %6
  %8 = icmp eq i8* %2, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = ptrtoint i8* %2 to i64
  %11 = tail call zeroext i1 @_ZN4base8internal18AddressPoolManager4Pool15TryReserveChunkEmm(%"class.base::internal::AddressPoolManager::Pool"* %7, i64 %10, i64 %3)
  br i1 %11, label %15, label %12

12:                                               ; preds = %9, %4
  %13 = tail call i64 @_ZN4base8internal18AddressPoolManager4Pool9FindChunkEm(%"class.base::internal::AddressPoolManager::Pool"* %7, i64 %3)
  %14 = inttoptr i64 %13 to i8*
  br label %15

15:                                               ; preds = %12, %9
  %16 = phi i8* [ %2, %9 ], [ %14, %12 ]
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base8internal18AddressPoolManager4Pool9FindChunkEm(%"class.base::internal::AddressPoolManager::Pool"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #7
  br label %8

8:                                                ; preds = %2, %6
  %9 = lshr i64 %1, 21
  %10 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %46, %8
  %15 = phi i64 [ %11, %8 ], [ %42, %46 ]
  %16 = phi i64 [ %11, %8 ], [ %43, %46 ]
  %17 = phi i64 [ %11, %8 ], [ %18, %46 ]
  %18 = add i64 %16, %9
  %19 = icmp ugt i64 %18, %13
  br i1 %19, label %77, label %20

20:                                               ; preds = %14
  %21 = icmp ult i64 %17, %18
  br i1 %21, label %22, label %49

22:                                               ; preds = %20, %41
  %23 = phi i64 [ %42, %41 ], [ %15, %20 ]
  %24 = phi i8 [ %44, %41 ], [ 1, %20 ]
  %25 = phi i64 [ %37, %41 ], [ %17, %20 ]
  %26 = phi i64 [ %43, %41 ], [ %16, %20 ]
  %27 = icmp ugt i64 %25, 4095
  br i1 %27, label %28, label %29

28:                                               ; preds = %22
  tail call void @abort() #8
  unreachable

29:                                               ; preds = %22
  %30 = lshr i64 %25, 6
  %31 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 1, i32 0, i32 0, i64 %30
  %32 = and i64 %25, 63
  %33 = shl i64 1, %32
  %34 = load i64, i64* %31, align 8
  %35 = and i64 %34, %33
  %36 = icmp eq i64 %35, 0
  %37 = add nuw nsw i64 %25, 1
  br i1 %36, label %41, label %38

38:                                               ; preds = %29
  %39 = icmp eq i64 %23, %25
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  store i64 %37, i64* %10, align 8
  br label %41

41:                                               ; preds = %29, %40, %38
  %42 = phi i64 [ %37, %40 ], [ %23, %38 ], [ %23, %29 ]
  %43 = phi i64 [ %37, %40 ], [ %37, %38 ], [ %26, %29 ]
  %44 = phi i8 [ 0, %40 ], [ 0, %38 ], [ %24, %29 ]
  %45 = icmp eq i64 %37, %18
  br i1 %45, label %46, label %22

46:                                               ; preds = %41
  %47 = and i8 %44, 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %14, label %49

49:                                               ; preds = %20, %46
  %50 = phi i64 [ %43, %46 ], [ %16, %20 ]
  %51 = phi i64 [ %42, %46 ], [ %15, %20 ]
  %52 = icmp ult i64 %50, %18
  br i1 %52, label %58, label %55

53:                                               ; preds = %62
  %54 = load i64, i64* %10, align 8
  br label %55

55:                                               ; preds = %53, %49
  %56 = phi i64 [ %54, %53 ], [ %51, %49 ]
  %57 = icmp eq i64 %56, %50
  br i1 %57, label %71, label %72

58:                                               ; preds = %49, %62
  %59 = phi i64 [ %69, %62 ], [ %50, %49 ]
  %60 = icmp ugt i64 %59, 4095
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @abort() #8
  unreachable

62:                                               ; preds = %58
  %63 = lshr i64 %59, 6
  %64 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 1, i32 0, i32 0, i64 %63
  %65 = and i64 %59, 63
  %66 = shl i64 1, %65
  %67 = load i64, i64* %64, align 8
  %68 = or i64 %67, %66
  store i64 %68, i64* %64, align 8
  %69 = add nuw nsw i64 %59, 1
  %70 = icmp eq i64 %69, %18
  br i1 %70, label %53, label %58

71:                                               ; preds = %55
  store i64 %18, i64* %10, align 8
  br label %72

72:                                               ; preds = %71, %55
  %73 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 4
  %74 = load i64, i64* %73, align 8
  %75 = shl i64 %50, 21
  %76 = add i64 %74, %75
  br label %77

77:                                               ; preds = %14, %72
  %78 = phi i64 [ %76, %72 ], [ 0, %14 ]
  %79 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #7
  ret i64 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal18AddressPoolManager4Pool15TryReserveChunkEmm(%"class.base::internal::AddressPoolManager::Pool"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !3

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #7
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %1, %11
  %13 = lshr i64 %12, 21
  %14 = lshr i64 %2, 21
  %15 = add nuw nsw i64 %13, %14
  %16 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %15, %17
  br i1 %18, label %50, label %19

19:                                               ; preds = %9
  %20 = icmp eq i64 %14, 0
  br i1 %20, label %50, label %24

21:                                               ; preds = %28
  %22 = icmp ult i64 %36, %15
  br i1 %22, label %24, label %23

23:                                               ; preds = %21
  br i1 %20, label %50, label %37

24:                                               ; preds = %19, %21
  %25 = phi i64 [ %36, %21 ], [ %13, %19 ]
  %26 = icmp ugt i64 %25, 4095
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @abort() #8
  unreachable

28:                                               ; preds = %24
  %29 = lshr i64 %25, 6
  %30 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 1, i32 0, i32 0, i64 %29
  %31 = and i64 %25, 63
  %32 = shl i64 1, %31
  %33 = load i64, i64* %30, align 8
  %34 = and i64 %33, %32
  %35 = icmp eq i64 %34, 0
  %36 = add nuw nsw i64 %25, 1
  br i1 %35, label %21, label %50

37:                                               ; preds = %23, %41
  %38 = phi i64 [ %48, %41 ], [ %13, %23 ]
  %39 = icmp ugt i64 %38, 4095
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @abort() #8
  unreachable

41:                                               ; preds = %37
  %42 = lshr i64 %38, 6
  %43 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 1, i32 0, i32 0, i64 %42
  %44 = and i64 %38, 63
  %45 = shl i64 1, %44
  %46 = load i64, i64* %43, align 8
  %47 = or i64 %46, %45
  store i64 %47, i64* %43, align 8
  %48 = add nuw nsw i64 %38, 1
  %49 = icmp ult i64 %48, %15
  br i1 %49, label %37, label %50

50:                                               ; preds = %28, %41, %19, %23, %9
  %51 = phi i1 [ false, %9 ], [ true, %23 ], [ true, %19 ], [ true, %41 ], [ false, %28 ]
  %52 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #7
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal18AddressPoolManager20UnreserveAndDecommitEjPvm(%"class.base::internal::AddressPoolManager"*, i32, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = add i32 %1, -1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 %6
  tail call void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8* %2, i64 %3, i32 0) #7
  %8 = ptrtoint i8* %2 to i64
  %9 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #7
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !3

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %7, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #7
  br label %14

14:                                               ; preds = %12, %4
  %15 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 %6, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %16
  %18 = lshr i64 %17, 21
  %19 = lshr i64 %3, 21
  %20 = add nuw nsw i64 %18, %19
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %14, %26
  %23 = phi i64 [ %34, %26 ], [ %18, %14 ]
  %24 = icmp ugt i64 %23, 4095
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @abort() #8
  unreachable

26:                                               ; preds = %22
  %27 = lshr i64 %23, 6
  %28 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 %6, i32 1, i32 0, i32 0, i64 %27
  %29 = and i64 %23, 63
  %30 = shl i64 1, %29
  %31 = xor i64 %30, -1
  %32 = load i64, i64* %28, align 8
  %33 = and i64 %32, %31
  store i64 %33, i64* %28, align 8
  %34 = add nuw nsw i64 %23, 1
  %35 = icmp ult i64 %34, %20
  br i1 %35, label %22, label %36

36:                                               ; preds = %26, %14
  %37 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 %6, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = icmp ult i64 %18, %38
  %40 = select i1 %39, i64 %18, i64 %38
  store i64 %40, i64* %37, align 8
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal18AddressPoolManager4Pool9FreeChunkEmm(%"class.base::internal::AddressPoolManager::Pool"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !3

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #7
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %1, %11
  %13 = lshr i64 %12, 21
  %14 = lshr i64 %2, 21
  %15 = add nuw nsw i64 %13, %14
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %27, %9
  %18 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %13, %19
  %21 = select i1 %20, i64 %13, i64 %19
  store i64 %21, i64* %18, align 8
  %22 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #7
  ret void

23:                                               ; preds = %9, %27
  %24 = phi i64 [ %35, %27 ], [ %13, %9 ]
  %25 = icmp ugt i64 %24, 4095
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @abort() #8
  unreachable

27:                                               ; preds = %23
  %28 = lshr i64 %24, 6
  %29 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 1, i32 0, i32 0, i64 %28
  %30 = and i64 %24, 63
  %31 = shl i64 1, %30
  %32 = xor i64 %31, -1
  %33 = load i64, i64* %29, align 8
  %34 = and i64 %33, %32
  store i64 %34, i64* %29, align 8
  %35 = add nuw nsw i64 %24, 1
  %36 = icmp ult i64 %35, %15
  br i1 %36, label %23, label %17
}

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal18AddressPoolManager4PoolC2Ev(%"class.base::internal::AddressPoolManager::Pool"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %2) #7
  %3 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::bitset"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 512, i1 false) #7
  %5 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 3
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal18AddressPoolManager4PoolD2Ev(%"class.base::internal::AddressPoolManager::Pool"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::AddressPoolManager::Pool", %"class.base::internal::AddressPoolManager::Pool"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal18AddressPoolManagerC2Ev(%"class.base::internal::AddressPoolManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %2) #7
  %3 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::bitset"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 512, i1 false) #7
  %5 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 0, i32 3
  %6 = bitcast i64* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #7
  %7 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 1, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %7) #7
  %8 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 1, i32 1
  %9 = bitcast %"class.std::__1::bitset"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 512, i1 false) #7
  %10 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 1, i32 3
  %11 = bitcast i64* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal18AddressPoolManagerD2Ev(%"class.base::internal::AddressPoolManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 1, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %2) #7
  %3 = getelementptr inbounds %"class.base::internal::AddressPoolManager", %"class.base::internal::AddressPoolManager"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #7
  ret void
}

declare void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8*, i64, i32) local_unnamed_addr #3

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #5

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #3

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #3

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
