; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/generic/systemdependent.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/generic/systemdependent.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VP8Common = type { %struct.vpx_internal_error_info, [8 x i8], [128 x [2 x i16]], [128 x [2 x i16]], [128 x [2 x i16]], i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, [4 x %struct.yv12_buffer_config], [4 x i32], i32, i32, i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.modeinfo*, %struct.modeinfo*, %struct.modeinfo*, i32, [12 x i8], %struct.loop_filter_info_n, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES, %struct.frame_contexts, %struct.frame_contexts, i32, i32, i32, i32, %struct.postproc_state, i32, [12 x i8] }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.modeinfo = type { %struct.MB_MODE_INFO, [16 x %union.b_mode_info] }
%struct.MB_MODE_INFO = type { i8, i8, i8, i8, %union.int_mv, i8, i8, i8, i8 }
%union.int_mv = type { i32 }
%union.b_mode_info = type { i32 }
%struct.loop_filter_info_n = type { [64 x [16 x i8]], [64 x [16 x i8]], [64 x [16 x i8]], [4 x [16 x i8]], [4 x [4 x [4 x i8]]], [2 x [64 x i8]], [10 x i8], [6 x i8] }
%struct.ENTROPY_CONTEXT_PLANES = type { [4 x i8], [2 x i8], [2 x i8], i8 }
%struct.frame_contexts = type { [9 x i8], [4 x i8], [3 x i8], [3 x i8], [4 x [8 x [3 x [11 x i8]]]], [2 x %struct.mv_context] }
%struct.mv_context = type { [19 x i8] }
%struct.postproc_state = type { i32, i32, i32, i32, i32, i8* }

@.str = private unnamed_addr constant [14 x i8] c"VPX_SIMD_CAPS\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"VPX_SIMD_CAPS_MASK\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_machine_specific_config(%struct.VP8Common* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 63
  store i32 16, i32* %2, align 8
  %3 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #3
  %4 = icmp eq i8* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = load i8, i8* %3, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 0) #3
  %10 = trunc i64 %9 to i32
  br label %74

11:                                               ; preds = %5, %1
  %12 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #3
  %13 = icmp eq i8* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = load i8, i8* %12, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = tail call i64 @strtoul(i8* nocapture nonnull %12, i8** null, i32 0) #3
  %19 = trunc i64 %18 to i32
  br label %20

20:                                               ; preds = %17, %14, %11
  %21 = phi i32 [ %19, %17 ], [ -1, %14 ], [ -1, %11 ]
  %22 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid           \0A\09", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0, i32 0) #3, !srcloc !2
  %23 = extractvalue { i32, i32, i32, i32 } %22, 0
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %74, label %25

25:                                               ; preds = %20
  %26 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid           \0A\09", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 1, i32 0) #3, !srcloc !3
  %27 = extractvalue { i32, i32, i32, i32 } %26, 2
  %28 = extractvalue { i32, i32, i32, i32 } %26, 3
  %29 = lshr i32 %28, 23
  %30 = and i32 %29, 1
  %31 = lshr i32 %28, 24
  %32 = and i32 %31, 2
  %33 = or i32 %32, %30
  %34 = and i32 %31, 4
  %35 = or i32 %33, %34
  %36 = shl i32 %27, 3
  %37 = and i32 %36, 8
  %38 = or i32 %35, %37
  %39 = lshr i32 %27, 5
  %40 = and i32 %39, 16
  %41 = or i32 %38, %40
  %42 = lshr i32 %27, 14
  %43 = and i32 %42, 32
  %44 = or i32 %41, %43
  %45 = and i32 %27, 402653184
  %46 = icmp eq i32 %45, 402653184
  br i1 %46, label %47, label %71

47:                                               ; preds = %25
  %48 = tail call { i32, i32 } asm sideeffect ".byte 0x0f, 0x01, 0xd0\0A", "={ax},={dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0) #3, !srcloc !4
  %49 = extractvalue { i32, i32 } %48, 0
  %50 = and i32 %49, 6
  %51 = icmp eq i32 %50, 6
  br i1 %51, label %52, label %71

52:                                               ; preds = %47
  %53 = or i32 %44, 64
  %54 = icmp ugt i32 %23, 6
  br i1 %54, label %55, label %71

55:                                               ; preds = %52
  %56 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid           \0A\09", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 7, i32 0) #3, !srcloc !5
  %57 = extractvalue { i32, i32, i32, i32 } %56, 1
  %58 = and i32 %57, 32
  %59 = icmp eq i32 %58, 0
  %60 = or i32 %44, 192
  %61 = select i1 %59, i32 %53, i32 %60
  %62 = and i32 %57, -805109760
  %63 = icmp eq i32 %62, -805109760
  br i1 %63, label %64, label %71

64:                                               ; preds = %55
  %65 = tail call { i32, i32 } asm sideeffect ".byte 0x0f, 0x01, 0xd0\0A", "={ax},={dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0) #3, !srcloc !4
  %66 = extractvalue { i32, i32 } %65, 0
  %67 = and i32 %66, 230
  %68 = icmp eq i32 %67, 230
  %69 = or i32 %61, 256
  %70 = select i1 %68, i32 %69, i32 %61
  br label %71

71:                                               ; preds = %64, %55, %52, %47, %25
  %72 = phi i32 [ %61, %55 ], [ %53, %52 ], [ %44, %47 ], [ %44, %25 ], [ %70, %64 ]
  %73 = and i32 %72, %21
  br label %74

74:                                               ; preds = %8, %20, %71
  %75 = phi i32 [ %10, %8 ], [ %73, %71 ], [ 0, %20 ]
  %76 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 65
  store i32 %75, i32* %76, align 16
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @strtoul(i8* readonly, i8** nocapture, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2147173690, i32 -2147173671}
!3 = !{i32 -2147173469, i32 -2147173450}
!4 = !{i32 52254}
!5 = !{i32 -2147173064, i32 -2147173045}
