; ModuleID = '../../third_party/ffmpeg/libavutil/pixdesc.c'
source_filename = "../../third_party/ffmpeg/libavutil/pixdesc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }

@av_pix_fmt_descriptors = internal constant [198 x %struct.AVPixFmtDescriptor] [%struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8 3, i8 1, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 8, i32 3, i32 7, i32 4 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 3, i32 0, i32 0, i32 8, i32 2, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 3, i32 1, i32 0, i32 8, i32 2, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 3, i32 2, i32 0, i32 8, i32 2, i32 7, i32 3 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 3, i32 2, i32 0, i32 8, i32 2, i32 7, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 3, i32 1, i32 0, i32 8, i32 2, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 3, i32 0, i32 0, i32 8, i32 2, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8 3, i8 1, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), i8 3, i8 0, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8 3, i8 2, i8 2, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i8 3, i8 2, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8 1, i8 0, i8 0, i64 64, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), i8 1, i8 0, i8 0, i64 4, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i8 1, i8 0, i8 0, i64 4, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 7, i32 1, i32 0, i32 0, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8 1, i8 0, i8 0, i64 130, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8 3, i8 1, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i8 3, i8 0, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), i8 3, i8 1, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 1, i32 0, i32 8, i32 1, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 8, i32 3, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 8, i32 3, i32 7, i32 3 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8 3, i8 2, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 0, i32 0, i32 8, i32 5, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 3, i32 0, i32 8, i32 5, i32 7, i32 4 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i8 3, i8 0, i8 0, i64 96, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 2, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 3, i32 3, i32 0, i32 2, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 6, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i8 3, i8 0, i8 0, i64 36, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 1, i32 3, i32 0, i32 4 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 2, i32 3, i32 1, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 1, i32 3, i32 0, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), i8 3, i8 0, i8 0, i64 96, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i8 3, i8 0, i8 0, i64 96, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 6, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 3, i32 3, i32 0, i32 2, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 2, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0), i8 3, i8 0, i8 0, i64 36, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 1, i32 3, i32 0, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 2, i32 3, i32 1, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 1, i32 3, i32 0, i32 4 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0), i8 3, i8 0, i8 0, i64 96, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 1, i32 0, i32 8, i32 1, i32 7, i32 2 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 1, i32 0, i32 8, i32 1, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i8 4, i8 0, i8 0, i64 160, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 8, i32 3, i32 7, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 8, i32 3, i32 7, i32 4 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 8, i32 3, i32 7, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8 4, i8 0, i8 0, i64 160, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 8, i32 3, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 8, i32 3, i32 7, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 8, i32 3, i32 7, i32 4 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i8 4, i8 0, i8 0, i64 160, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 8, i32 3, i32 7, i32 4 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 8, i32 3, i32 7, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 8, i32 3, i32 7, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8 4, i8 0, i8 0, i64 160, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 8, i32 3, i32 7, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 8, i32 3, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 8, i32 3, i32 7, i32 4 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i32 0, i32 0), i8 1, i8 0, i8 0, i64 1, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), i8 1, i8 0, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i32 0, i32 0), i8 3, i8 0, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), i8 3, i8 0, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i8 4, i8 1, i8 1, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i8 3, i8 0, i8 0, i64 33, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 6, i32 0, i32 0, i32 16, i32 5, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 2, i32 0, i32 16, i32 5, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 4, i32 0, i32 16, i32 5, i32 15, i32 5 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 6, i32 0, i32 0, i32 16, i32 5, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 2, i32 0, i32 16, i32 5, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 4, i32 0, i32 16, i32 5, i32 15, i32 5 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), i8 3, i8 0, i8 0, i64 33, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 -1, i32 3, i32 5, i32 1, i32 4, i32 0 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 5, i32 6, i32 1, i32 5, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 1, i32 3, i32 5, i32 1, i32 4, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 5, i32 6, i32 1, i32 5, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i32 0, i32 0), i8 3, i8 0, i8 0, i64 33, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 -1, i32 2, i32 5, i32 1, i32 4, i32 0 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 5, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 1, i32 2, i32 5, i32 1, i32 4, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 5, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), i8 3, i8 0, i8 0, i64 33, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 5, i32 6, i32 1, i32 5, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 -1, i32 3, i32 5, i32 1, i32 4, i32 0 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 5, i32 6, i32 1, i32 5, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 1, i32 3, i32 5, i32 1, i32 4, i32 2 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8 3, i8 0, i8 0, i64 33, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 5, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 -1, i32 2, i32 5, i32 1, i32 4, i32 0 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 5, i32 5, i32 1, i32 4, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 1, i32 2, i32 5, i32 1, i32 4, i32 2 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i32 0, i32 0), i8 0, i8 1, i8 1, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i32 0, i32 0), i8 0, i8 1, i8 1, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i32 0, i32 0), i8 0, i8 1, i8 1, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i32 0, i32 0), i8 3, i8 1, i8 1, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i32 0, i32 0), i8 3, i8 1, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i32 0, i32 0), i8 3, i8 1, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.72, i32 0, i32 0), i8 3, i8 0, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i32 0, i32 0), i8 3, i8 0, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0), i8 0, i8 1, i8 1, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 1, i32 0, i32 4, i32 1, i32 3, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 4, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8 3, i8 0, i8 0, i64 33, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 -1, i32 0, i32 4, i32 1, i32 3, i32 0 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 4, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 4, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 1, i32 0, i32 4, i32 1, i32 3, i32 2 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i8 3, i8 0, i8 0, i64 33, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 4, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 -1, i32 0, i32 4, i32 1, i32 3, i32 0 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79, i32 0, i32 0), i8 2, i8 0, i8 0, i64 128, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 1, i32 0, i32 8, i32 1, i32 7, i32 2 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i32 0, i32 0), i8 3, i8 0, i8 0, i64 33, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 6, i32 4, i32 0, i32 16, i32 5, i32 15, i32 5 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 2, i32 0, i32 16, i32 5, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 0, i32 0, i32 16, i32 5, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.82, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 6, i32 4, i32 0, i32 16, i32 5, i32 15, i32 5 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 2, i32 0, i32 16, i32 5, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 0, i32 0, i32 16, i32 5, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i32 0, i32 0), i8 3, i8 1, i8 1, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.84, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.85, i32 0, i32 0), i8 3, i8 1, i8 1, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.86, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.87, i32 0, i32 0), i8 3, i8 1, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0), i8 3, i8 1, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.89, i32 0, i32 0), i8 3, i8 0, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i32 0, i32 0), i8 3, i8 0, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i32 0, i32 0), i8 3, i8 0, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.92, i32 0, i32 0), i8 3, i8 0, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.93, i32 0, i32 0), i8 3, i8 1, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0), i8 3, i8 1, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), i8 3, i8 0, i8 0, i64 48, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i32 0, i32 0), i8 3, i8 0, i8 0, i64 49, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.97, i32 0, i32 0), i8 3, i8 0, i8 0, i64 48, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i32 0, i32 0), i8 3, i8 0, i8 0, i64 49, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), i8 3, i8 0, i8 0, i64 48, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.100, i32 0, i32 0), i8 3, i8 0, i8 0, i64 49, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.101, i32 0, i32 0), i8 3, i8 0, i8 0, i64 48, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102, i32 0, i32 0), i8 4, i8 1, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.103, i32 0, i32 0), i8 4, i8 0, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i32 0, i32 0), i8 4, i8 1, i8 1, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.105, i32 0, i32 0), i8 4, i8 1, i8 1, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i32 0, i32 0), i8 4, i8 1, i8 0, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i32 0, i32 0), i8 4, i8 1, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.108, i32 0, i32 0), i8 4, i8 0, i8 0, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.109, i32 0, i32 0), i8 4, i8 0, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.110, i32 0, i32 0), i8 4, i8 1, i8 1, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.111, i32 0, i32 0), i8 4, i8 1, i8 1, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0), i8 4, i8 1, i8 0, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.113, i32 0, i32 0), i8 4, i8 1, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i32 0, i32 0), i8 4, i8 0, i8 0, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.115, i32 0, i32 0), i8 4, i8 0, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.116, i32 0, i32 0), i8 4, i8 1, i8 1, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.117, i32 0, i32 0), i8 4, i8 1, i8 1, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i32 0, i32 0), i8 4, i8 1, i8 0, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.119, i32 0, i32 0), i8 4, i8 1, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.120, i32 0, i32 0), i8 4, i8 0, i8 0, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.121, i32 0, i32 0), i8 4, i8 0, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i32 0, i32 0), i8 0, i8 1, i8 1, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i32 0, i32 0), i8 3, i8 0, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 6, i32 0, i32 4, i32 12, i32 5, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 2, i32 4, i32 12, i32 5, i32 11, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 4, i32 4, i32 12, i32 5, i32 11, i32 5 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.124, i32 0, i32 0), i8 3, i8 0, i8 0, i64 1, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 6, i32 0, i32 4, i32 12, i32 5, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 2, i32 4, i32 12, i32 5, i32 11, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 6, i32 4, i32 4, i32 12, i32 5, i32 11, i32 5 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), i8 3, i8 1, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 1, i32 0, i32 8, i32 1, i32 7, i32 2 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i32 0, i32 0), i8 3, i8 1, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 0, i32 10, i32 3, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 2, i32 0, i32 10, i32 3, i32 9, i32 3 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0), i8 3, i8 1, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 0, i32 10, i32 3, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 2, i32 0, i32 10, i32 3, i32 9, i32 3 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i32 0), i8 4, i8 0, i8 0, i64 161, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 8, i32 0, i32 0, i32 16, i32 7, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 2, i32 0, i32 16, i32 7, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 4, i32 0, i32 16, i32 7, i32 15, i32 5 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 6, i32 0, i32 16, i32 7, i32 15, i32 7 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i32 0, i32 0), i8 4, i8 0, i8 0, i64 160, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 8, i32 0, i32 0, i32 16, i32 7, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 2, i32 0, i32 16, i32 7, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 4, i32 0, i32 16, i32 7, i32 15, i32 5 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 6, i32 0, i32 16, i32 7, i32 15, i32 7 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.130, i32 0, i32 0), i8 4, i8 0, i8 0, i64 161, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 8, i32 4, i32 0, i32 16, i32 7, i32 15, i32 5 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 2, i32 0, i32 16, i32 7, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 0, i32 0, i32 16, i32 7, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 6, i32 0, i32 16, i32 7, i32 15, i32 7 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.131, i32 0, i32 0), i8 4, i8 0, i8 0, i64 160, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 8, i32 4, i32 0, i32 16, i32 7, i32 15, i32 5 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 2, i32 0, i32 16, i32 7, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 0, i32 0, i32 16, i32 7, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 6, i32 0, i32 16, i32 7, i32 15, i32 7 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i32 0, i32 0), i8 3, i8 1, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 8, i32 3, i32 7, i32 4 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8 2, i8 0, i8 0, i64 129, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 16, i32 3, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 16, i32 3, i32 15, i32 3 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.134, i32 0, i32 0), i8 2, i8 0, i8 0, i64 128, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 16, i32 3, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 16, i32 3, i32 15, i32 3 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i32 0, i32 0), i8 4, i8 0, i8 0, i64 176, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i32 0, i32 0), i8 4, i8 0, i8 0, i64 177, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i8 4, i8 0, i8 0, i64 176, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.138, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.139, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.140, i32 0, i32 0), i8 0, i8 1, i8 1, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.142, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 8, i32 3, i32 7, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 8, i32 3, i32 7, i32 4 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 8, i32 3, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 8, i32 3, i32 7, i32 3 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 3, i32 0, i32 8, i32 3, i32 7, i32 4 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 8, i32 3, i32 7, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.145, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 8, i32 3, i32 7, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 0, i32 8, i32 3, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 8, i32 3, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.146, i32 0, i32 0), i8 3, i8 1, i8 1, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.147, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.148, i32 0, i32 0), i8 3, i8 1, i8 1, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.149, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.150, i32 0, i32 0), i8 3, i8 1, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.151, i32 0, i32 0), i8 3, i8 1, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.152, i32 0, i32 0), i8 3, i8 1, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.153, i32 0, i32 0), i8 3, i8 1, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.154, i32 0, i32 0), i8 3, i8 0, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.155, i32 0, i32 0), i8 3, i8 0, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.156, i32 0, i32 0), i8 3, i8 0, i8 0, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.157, i32 0, i32 0), i8 3, i8 0, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.158, i32 0, i32 0), i8 3, i8 0, i8 0, i64 49, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i32 0, i32 0), i8 3, i8 0, i8 0, i64 48, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i32 0, i32 0), i8 3, i8 0, i8 0, i64 49, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.161, i32 0, i32 0), i8 3, i8 0, i8 0, i64 48, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.162, i32 0, i32 0), i8 3, i8 2, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i32 0, i32 0), i8 3, i8 0, i8 0, i64 288, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.164, i32 0, i32 0), i8 3, i8 0, i8 0, i64 288, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.165, i32 0, i32 0), i8 3, i8 0, i8 0, i64 288, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.166, i32 0, i32 0), i8 3, i8 0, i8 0, i64 288, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 4, i32 0, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.167, i32 0, i32 0), i8 3, i8 0, i8 0, i64 288, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.168, i32 0, i32 0), i8 3, i8 0, i8 0, i64 289, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.169, i32 0, i32 0), i8 3, i8 0, i8 0, i64 288, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.170, i32 0, i32 0), i8 3, i8 0, i8 0, i64 289, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.171, i32 0, i32 0), i8 3, i8 0, i8 0, i64 288, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.172, i32 0, i32 0), i8 3, i8 0, i8 0, i64 289, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.173, i32 0, i32 0), i8 3, i8 0, i8 0, i64 288, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.174, i32 0, i32 0), i8 3, i8 0, i8 0, i64 289, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 4, i32 1, i32 3, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.175, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.176, i32 0, i32 0), i8 3, i8 0, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.177, i32 0, i32 0), i8 3, i8 0, i8 1, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.178, i32 0, i32 0), i8 3, i8 0, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.179, i32 0, i32 0), i8 3, i8 0, i8 1, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.180, i32 0, i32 0), i8 4, i8 0, i8 0, i64 128, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 8, i32 2, i32 0, i32 16, i32 7, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 4, i32 0, i32 16, i32 7, i32 15, i32 5 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 6, i32 0, i32 16, i32 7, i32 15, i32 7 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 0, i32 0, i32 16, i32 7, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.181, i32 0, i32 0), i8 4, i8 0, i8 0, i64 129, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 8, i32 2, i32 0, i32 16, i32 7, i32 15, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 4, i32 0, i32 16, i32 7, i32 15, i32 5 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 6, i32 0, i32 16, i32 7, i32 15, i32 7 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 0, i32 0, i32 16, i32 7, i32 15, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.182, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 6, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 6, i32 10, i32 3, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 2, i32 6, i32 10, i32 3, i32 9, i32 3 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.184, i32 0, i32 0), i8 3, i8 1, i8 1, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 6, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 6, i32 10, i32 3, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 2, i32 6, i32 10, i32 3, i32 9, i32 3 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.185, i32 0, i32 0), i8 4, i8 0, i8 0, i64 177, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.186, i32 0, i32 0), i8 4, i8 0, i8 0, i64 176, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.187, i32 0, i32 0), i8 4, i8 0, i8 0, i64 177, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.188, i32 0, i32 0), i8 4, i8 0, i8 0, i64 176, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.189, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.190, i32 0, i32 0), i8 1, i8 0, i8 0, i64 1, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.191, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.192, i32 0, i32 0), i8 1, i8 0, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.193, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.194, i32 0, i32 0), i8 1, i8 0, i8 0, i64 1, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.196, i32 0, i32 0), i8 1, i8 0, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 10, i32 1, i32 9, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.197, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.198, i32 0, i32 0), i8 3, i8 1, i8 1, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 0, i32 16, i32 3, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 2, i32 0, i32 16, i32 3, i32 15, i32 3 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.199, i32 0, i32 0), i8 3, i8 1, i8 1, i64 17, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 16, i32 1, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 0, i32 16, i32 3, i32 15, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 2, i32 0, i32 16, i32 3, i32 15, i32 3 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.200, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8 1, i8 0, i8 0, i64 1, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.203, i32 0, i32 0), i8 1, i8 0, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 9, i32 1, i32 8, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.204, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.205, i32 0, i32 0), i8 3, i8 0, i8 0, i64 561, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.206, i32 0, i32 0), i8 3, i8 0, i8 0, i64 560, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8 4, i8 0, i8 0, i64 689, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.208, i32 0, i32 0), i8 4, i8 0, i8 0, i64 688, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 2, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.209, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.210, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.211, i32 0, i32 0), i8 1, i8 0, i8 0, i64 1, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.212, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.213, i32 0, i32 0), i8 1, i8 0, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 14, i32 1, i32 13, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.215, i32 0, i32 0), i8 1, i8 0, i8 0, i64 513, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0), i8 1, i8 0, i8 0, i64 512, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 32, i32 3, i32 31, i32 1 }, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer, %struct.AVComponentDescriptor zeroinitializer], i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i32 0, i32 0) }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.219, i32 0, i32 0), i8 4, i8 1, i8 0, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.220, i32 0, i32 0), i8 4, i8 1, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.221, i32 0, i32 0), i8 4, i8 0, i8 0, i64 145, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.222, i32 0, i32 0), i8 4, i8 0, i8 0, i64 144, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 2, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }, %struct.AVComponentDescriptor { i32 3, i32 2, i32 0, i32 0, i32 12, i32 1, i32 11, i32 1 }], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.223, i32 0, i32 0), i8 3, i8 0, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 1, i32 0, i32 8, i32 1, i32 7, i32 2 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i32 0, i32 0), i8 3, i8 0, i8 0, i64 16, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 1, i32 0, i32 0, i32 8, i32 0, i32 7, i32 1 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 1, i32 0, i32 8, i32 1, i32 7, i32 2 }, %struct.AVComponentDescriptor { i32 1, i32 2, i32 0, i32 0, i32 8, i32 1, i32 7, i32 1 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.225, i32 0, i32 0), i8 0, i8 0, i8 0, i64 8, [4 x %struct.AVComponentDescriptor] zeroinitializer, i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.226, i32 0, i32 0), i8 3, i8 1, i8 0, i64 1, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 6, i32 10, i32 3, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 2, i32 6, i32 10, i32 7, i32 9, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 6, i32 6, i32 10, i32 7, i32 9, i32 7 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i8 3, i8 1, i8 0, i64 0, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 6, i32 10, i32 3, i32 9, i32 1 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 2, i32 6, i32 10, i32 7, i32 9, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 8, i32 6, i32 6, i32 10, i32 7, i32 9, i32 7 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.228, i32 0, i32 0), i8 3, i8 0, i8 0, i64 32, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 4, i32 10, i32 3, i32 9, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 2, i32 10, i32 3, i32 9, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 0, i32 10, i32 3, i32 9, i32 4 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }, %struct.AVPixFmtDescriptor { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.229, i32 0, i32 0), i8 3, i8 0, i8 0, i64 33, [4 x %struct.AVComponentDescriptor] [%struct.AVComponentDescriptor { i32 0, i32 4, i32 0, i32 4, i32 10, i32 3, i32 9, i32 2 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 1, i32 2, i32 10, i32 3, i32 9, i32 3 }, %struct.AVComponentDescriptor { i32 0, i32 4, i32 2, i32 0, i32 10, i32 3, i32 9, i32 4 }, %struct.AVComponentDescriptor zeroinitializer], i8* null }], align 16
@.str = private unnamed_addr constant [6 x i8] c"rgb32\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"bgra\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"bgr32\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"le\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"vaapi\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"name nb_components nb_bits\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"%-11s %7d %10d\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.11 = private unnamed_addr constant [45 x i8] c"../../third_party/ffmpeg/libavutil/pixdesc.c\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"d->name && d->name[0]\00", align 1
@.str.15 = private unnamed_addr constant [62 x i8] c"!c->plane && !c->step && !c->offset && !c->shift && !c->depth\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"c->step >= c->depth\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"8*c->step >= c->depth\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"tmp[0] == 0 && tmp[1] == 0\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"be\00", align 1
@color_range_names = internal unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.234, i32 0, i32 0)], align 16
@color_primaries_names = internal unnamed_addr constant [23 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.242, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.243, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i32 0, i32 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.246, i32 0, i32 0)], align 16
@color_transfer_names = internal unnamed_addr constant [19 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.252, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.254, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.255, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.243, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.256, i32 0, i32 0)], align 16
@color_space_names = internal unnamed_addr constant [15 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.264, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.265, i32 0, i32 0)], align 16
@chroma_location_names = internal unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.267, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.269, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.270, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.272, i32 0, i32 0)], align 16
@.str.20 = private unnamed_addr constant [8 x i8] c"yuv420p\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"yuyv422\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"rgb24\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"bgr24\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"yuv422p\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"yuv444p\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"yuv410p\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"yuv411p\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"gray\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"gray8,y8\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"monow\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"monob\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"pal8\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"yuvj420p\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"yuvj422p\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"yuvj444p\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"uyvy422\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"uyyvyy411\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"bgr8\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"bgr4\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"bgr4_byte\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"rgb8\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"rgb4\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"rgb4_byte\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"nv12\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"nv21\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"argb\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"abgr\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"gray16be\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"y16be\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"gray16le\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"y16le\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"yuv440p\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"yuvj440p\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"yuva420p\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"rgb48be\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"rgb48le\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"rgb565be\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"rgb565le\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"rgb555be\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"rgb555le\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"bgr565be\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"bgr565le\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"bgr555be\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"bgr555le\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"vaapi_moco\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"vaapi_idct\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"vaapi_vld\00", align 1
@.str.68 = private unnamed_addr constant [12 x i8] c"yuv420p16le\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"yuv420p16be\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"yuv422p16le\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"yuv422p16be\00", align 1
@.str.72 = private unnamed_addr constant [12 x i8] c"yuv444p16le\00", align 1
@.str.73 = private unnamed_addr constant [12 x i8] c"yuv444p16be\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"dxva2_vld\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"rgb444le\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"rgb444be\00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c"bgr444le\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"bgr444be\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"ya8\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"gray8a\00", align 1
@.str.81 = private unnamed_addr constant [8 x i8] c"bgr48be\00", align 1
@.str.82 = private unnamed_addr constant [8 x i8] c"bgr48le\00", align 1
@.str.83 = private unnamed_addr constant [11 x i8] c"yuv420p9be\00", align 1
@.str.84 = private unnamed_addr constant [11 x i8] c"yuv420p9le\00", align 1
@.str.85 = private unnamed_addr constant [12 x i8] c"yuv420p10be\00", align 1
@.str.86 = private unnamed_addr constant [12 x i8] c"yuv420p10le\00", align 1
@.str.87 = private unnamed_addr constant [12 x i8] c"yuv422p10be\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"yuv422p10le\00", align 1
@.str.89 = private unnamed_addr constant [11 x i8] c"yuv444p9be\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"yuv444p9le\00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"yuv444p10be\00", align 1
@.str.92 = private unnamed_addr constant [12 x i8] c"yuv444p10le\00", align 1
@.str.93 = private unnamed_addr constant [11 x i8] c"yuv422p9be\00", align 1
@.str.94 = private unnamed_addr constant [11 x i8] c"yuv422p9le\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"gbrp\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"gbrp9be\00", align 1
@.str.97 = private unnamed_addr constant [8 x i8] c"gbrp9le\00", align 1
@.str.98 = private unnamed_addr constant [9 x i8] c"gbrp10be\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"gbrp10le\00", align 1
@.str.100 = private unnamed_addr constant [9 x i8] c"gbrp16be\00", align 1
@.str.101 = private unnamed_addr constant [9 x i8] c"gbrp16le\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"yuva422p\00", align 1
@.str.103 = private unnamed_addr constant [9 x i8] c"yuva444p\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"yuva420p9be\00", align 1
@.str.105 = private unnamed_addr constant [12 x i8] c"yuva420p9le\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"yuva422p9be\00", align 1
@.str.107 = private unnamed_addr constant [12 x i8] c"yuva422p9le\00", align 1
@.str.108 = private unnamed_addr constant [12 x i8] c"yuva444p9be\00", align 1
@.str.109 = private unnamed_addr constant [12 x i8] c"yuva444p9le\00", align 1
@.str.110 = private unnamed_addr constant [13 x i8] c"yuva420p10be\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"yuva420p10le\00", align 1
@.str.112 = private unnamed_addr constant [13 x i8] c"yuva422p10be\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"yuva422p10le\00", align 1
@.str.114 = private unnamed_addr constant [13 x i8] c"yuva444p10be\00", align 1
@.str.115 = private unnamed_addr constant [13 x i8] c"yuva444p10le\00", align 1
@.str.116 = private unnamed_addr constant [13 x i8] c"yuva420p16be\00", align 1
@.str.117 = private unnamed_addr constant [13 x i8] c"yuva420p16le\00", align 1
@.str.118 = private unnamed_addr constant [13 x i8] c"yuva422p16be\00", align 1
@.str.119 = private unnamed_addr constant [13 x i8] c"yuva422p16le\00", align 1
@.str.120 = private unnamed_addr constant [13 x i8] c"yuva444p16be\00", align 1
@.str.121 = private unnamed_addr constant [13 x i8] c"yuva444p16le\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"vdpau\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"xyz12le\00", align 1
@.str.124 = private unnamed_addr constant [8 x i8] c"xyz12be\00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"nv16\00", align 1
@.str.126 = private unnamed_addr constant [7 x i8] c"nv20le\00", align 1
@.str.127 = private unnamed_addr constant [7 x i8] c"nv20be\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"rgba64be\00", align 1
@.str.129 = private unnamed_addr constant [9 x i8] c"rgba64le\00", align 1
@.str.130 = private unnamed_addr constant [9 x i8] c"bgra64be\00", align 1
@.str.131 = private unnamed_addr constant [9 x i8] c"bgra64le\00", align 1
@.str.132 = private unnamed_addr constant [8 x i8] c"yvyu422\00", align 1
@.str.133 = private unnamed_addr constant [7 x i8] c"ya16be\00", align 1
@.str.134 = private unnamed_addr constant [7 x i8] c"ya16le\00", align 1
@.str.135 = private unnamed_addr constant [6 x i8] c"gbrap\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"gbrap16be\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"gbrap16le\00", align 1
@.str.138 = private unnamed_addr constant [4 x i8] c"qsv\00", align 1
@.str.139 = private unnamed_addr constant [5 x i8] c"mmal\00", align 1
@.str.140 = private unnamed_addr constant [12 x i8] c"d3d11va_vld\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"cuda\00", align 1
@.str.142 = private unnamed_addr constant [5 x i8] c"0rgb\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"rgb0\00", align 1
@.str.144 = private unnamed_addr constant [5 x i8] c"0bgr\00", align 1
@.str.145 = private unnamed_addr constant [5 x i8] c"bgr0\00", align 1
@.str.146 = private unnamed_addr constant [12 x i8] c"yuv420p12be\00", align 1
@.str.147 = private unnamed_addr constant [12 x i8] c"yuv420p12le\00", align 1
@.str.148 = private unnamed_addr constant [12 x i8] c"yuv420p14be\00", align 1
@.str.149 = private unnamed_addr constant [12 x i8] c"yuv420p14le\00", align 1
@.str.150 = private unnamed_addr constant [12 x i8] c"yuv422p12be\00", align 1
@.str.151 = private unnamed_addr constant [12 x i8] c"yuv422p12le\00", align 1
@.str.152 = private unnamed_addr constant [12 x i8] c"yuv422p14be\00", align 1
@.str.153 = private unnamed_addr constant [12 x i8] c"yuv422p14le\00", align 1
@.str.154 = private unnamed_addr constant [12 x i8] c"yuv444p12be\00", align 1
@.str.155 = private unnamed_addr constant [12 x i8] c"yuv444p12le\00", align 1
@.str.156 = private unnamed_addr constant [12 x i8] c"yuv444p14be\00", align 1
@.str.157 = private unnamed_addr constant [12 x i8] c"yuv444p14le\00", align 1
@.str.158 = private unnamed_addr constant [9 x i8] c"gbrp12be\00", align 1
@.str.159 = private unnamed_addr constant [9 x i8] c"gbrp12le\00", align 1
@.str.160 = private unnamed_addr constant [9 x i8] c"gbrp14be\00", align 1
@.str.161 = private unnamed_addr constant [9 x i8] c"gbrp14le\00", align 1
@.str.162 = private unnamed_addr constant [9 x i8] c"yuvj411p\00", align 1
@.str.163 = private unnamed_addr constant [12 x i8] c"bayer_bggr8\00", align 1
@.str.164 = private unnamed_addr constant [12 x i8] c"bayer_rggb8\00", align 1
@.str.165 = private unnamed_addr constant [12 x i8] c"bayer_gbrg8\00", align 1
@.str.166 = private unnamed_addr constant [12 x i8] c"bayer_grbg8\00", align 1
@.str.167 = private unnamed_addr constant [15 x i8] c"bayer_bggr16le\00", align 1
@.str.168 = private unnamed_addr constant [15 x i8] c"bayer_bggr16be\00", align 1
@.str.169 = private unnamed_addr constant [15 x i8] c"bayer_rggb16le\00", align 1
@.str.170 = private unnamed_addr constant [15 x i8] c"bayer_rggb16be\00", align 1
@.str.171 = private unnamed_addr constant [15 x i8] c"bayer_gbrg16le\00", align 1
@.str.172 = private unnamed_addr constant [15 x i8] c"bayer_gbrg16be\00", align 1
@.str.173 = private unnamed_addr constant [15 x i8] c"bayer_grbg16le\00", align 1
@.str.174 = private unnamed_addr constant [15 x i8] c"bayer_grbg16be\00", align 1
@.str.175 = private unnamed_addr constant [5 x i8] c"xvmc\00", align 1
@.str.176 = private unnamed_addr constant [12 x i8] c"yuv440p10le\00", align 1
@.str.177 = private unnamed_addr constant [12 x i8] c"yuv440p10be\00", align 1
@.str.178 = private unnamed_addr constant [12 x i8] c"yuv440p12le\00", align 1
@.str.179 = private unnamed_addr constant [12 x i8] c"yuv440p12be\00", align 1
@.str.180 = private unnamed_addr constant [9 x i8] c"ayuv64le\00", align 1
@.str.181 = private unnamed_addr constant [9 x i8] c"ayuv64be\00", align 1
@.str.182 = private unnamed_addr constant [17 x i8] c"videotoolbox_vld\00", align 1
@.str.183 = private unnamed_addr constant [7 x i8] c"p010le\00", align 1
@.str.184 = private unnamed_addr constant [7 x i8] c"p010be\00", align 1
@.str.185 = private unnamed_addr constant [10 x i8] c"gbrap12be\00", align 1
@.str.186 = private unnamed_addr constant [10 x i8] c"gbrap12le\00", align 1
@.str.187 = private unnamed_addr constant [10 x i8] c"gbrap10be\00", align 1
@.str.188 = private unnamed_addr constant [10 x i8] c"gbrap10le\00", align 1
@.str.189 = private unnamed_addr constant [11 x i8] c"mediacodec\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"gray12be\00", align 1
@.str.191 = private unnamed_addr constant [6 x i8] c"y12be\00", align 1
@.str.192 = private unnamed_addr constant [9 x i8] c"gray12le\00", align 1
@.str.193 = private unnamed_addr constant [6 x i8] c"y12le\00", align 1
@.str.194 = private unnamed_addr constant [9 x i8] c"gray10be\00", align 1
@.str.195 = private unnamed_addr constant [6 x i8] c"y10be\00", align 1
@.str.196 = private unnamed_addr constant [9 x i8] c"gray10le\00", align 1
@.str.197 = private unnamed_addr constant [6 x i8] c"y10le\00", align 1
@.str.198 = private unnamed_addr constant [7 x i8] c"p016le\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"p016be\00", align 1
@.str.200 = private unnamed_addr constant [6 x i8] c"d3d11\00", align 1
@.str.201 = private unnamed_addr constant [8 x i8] c"gray9be\00", align 1
@.str.202 = private unnamed_addr constant [5 x i8] c"y9be\00", align 1
@.str.203 = private unnamed_addr constant [8 x i8] c"gray9le\00", align 1
@.str.204 = private unnamed_addr constant [5 x i8] c"y9le\00", align 1
@.str.205 = private unnamed_addr constant [10 x i8] c"gbrpf32be\00", align 1
@.str.206 = private unnamed_addr constant [10 x i8] c"gbrpf32le\00", align 1
@.str.207 = private unnamed_addr constant [11 x i8] c"gbrapf32be\00", align 1
@.str.208 = private unnamed_addr constant [11 x i8] c"gbrapf32le\00", align 1
@.str.209 = private unnamed_addr constant [10 x i8] c"drm_prime\00", align 1
@.str.210 = private unnamed_addr constant [7 x i8] c"opencl\00", align 1
@.str.211 = private unnamed_addr constant [9 x i8] c"gray14be\00", align 1
@.str.212 = private unnamed_addr constant [6 x i8] c"y14be\00", align 1
@.str.213 = private unnamed_addr constant [9 x i8] c"gray14le\00", align 1
@.str.214 = private unnamed_addr constant [6 x i8] c"y14le\00", align 1
@.str.215 = private unnamed_addr constant [10 x i8] c"grayf32be\00", align 1
@.str.216 = private unnamed_addr constant [7 x i8] c"yf32be\00", align 1
@.str.217 = private unnamed_addr constant [10 x i8] c"grayf32le\00", align 1
@.str.218 = private unnamed_addr constant [7 x i8] c"yf32le\00", align 1
@.str.219 = private unnamed_addr constant [13 x i8] c"yuva422p12be\00", align 1
@.str.220 = private unnamed_addr constant [13 x i8] c"yuva422p12le\00", align 1
@.str.221 = private unnamed_addr constant [13 x i8] c"yuva444p12be\00", align 1
@.str.222 = private unnamed_addr constant [13 x i8] c"yuva444p12le\00", align 1
@.str.223 = private unnamed_addr constant [5 x i8] c"nv24\00", align 1
@.str.224 = private unnamed_addr constant [5 x i8] c"nv42\00", align 1
@.str.225 = private unnamed_addr constant [7 x i8] c"vulkan\00", align 1
@.str.226 = private unnamed_addr constant [7 x i8] c"y210be\00", align 1
@.str.227 = private unnamed_addr constant [7 x i8] c"y210le\00", align 1
@.str.228 = private unnamed_addr constant [10 x i8] c"x2rgb10le\00", align 1
@.str.229 = private unnamed_addr constant [10 x i8] c"x2rgb10be\00", align 1
@.str.230 = private unnamed_addr constant [5 x i8] c"yuvj\00", align 1
@.str.231 = private unnamed_addr constant [4 x i8] c"xyz\00", align 1
@.str.232 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.233 = private unnamed_addr constant [3 x i8] c"tv\00", align 1
@.str.234 = private unnamed_addr constant [3 x i8] c"pc\00", align 1
@.str.235 = private unnamed_addr constant [9 x i8] c"reserved\00", align 1
@.str.236 = private unnamed_addr constant [6 x i8] c"bt709\00", align 1
@.str.237 = private unnamed_addr constant [7 x i8] c"bt470m\00", align 1
@.str.238 = private unnamed_addr constant [8 x i8] c"bt470bg\00", align 1
@.str.239 = private unnamed_addr constant [10 x i8] c"smpte170m\00", align 1
@.str.240 = private unnamed_addr constant [10 x i8] c"smpte240m\00", align 1
@.str.241 = private unnamed_addr constant [5 x i8] c"film\00", align 1
@.str.242 = private unnamed_addr constant [7 x i8] c"bt2020\00", align 1
@.str.243 = private unnamed_addr constant [9 x i8] c"smpte428\00", align 1
@.str.244 = private unnamed_addr constant [9 x i8] c"smpte431\00", align 1
@.str.245 = private unnamed_addr constant [9 x i8] c"smpte432\00", align 1
@.str.246 = private unnamed_addr constant [8 x i8] c"ebu3213\00", align 1
@.str.247 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.248 = private unnamed_addr constant [7 x i8] c"log100\00", align 1
@.str.249 = private unnamed_addr constant [7 x i8] c"log316\00", align 1
@.str.250 = private unnamed_addr constant [13 x i8] c"iec61966-2-4\00", align 1
@.str.251 = private unnamed_addr constant [8 x i8] c"bt1361e\00", align 1
@.str.252 = private unnamed_addr constant [13 x i8] c"iec61966-2-1\00", align 1
@.str.253 = private unnamed_addr constant [10 x i8] c"bt2020-10\00", align 1
@.str.254 = private unnamed_addr constant [10 x i8] c"bt2020-12\00", align 1
@.str.255 = private unnamed_addr constant [10 x i8] c"smpte2084\00", align 1
@.str.256 = private unnamed_addr constant [13 x i8] c"arib-std-b67\00", align 1
@.str.257 = private unnamed_addr constant [4 x i8] c"gbr\00", align 1
@.str.258 = private unnamed_addr constant [4 x i8] c"fcc\00", align 1
@.str.259 = private unnamed_addr constant [6 x i8] c"ycgco\00", align 1
@.str.260 = private unnamed_addr constant [9 x i8] c"bt2020nc\00", align 1
@.str.261 = private unnamed_addr constant [8 x i8] c"bt2020c\00", align 1
@.str.262 = private unnamed_addr constant [10 x i8] c"smpte2085\00", align 1
@.str.263 = private unnamed_addr constant [18 x i8] c"chroma-derived-nc\00", align 1
@.str.264 = private unnamed_addr constant [17 x i8] c"chroma-derived-c\00", align 1
@.str.265 = private unnamed_addr constant [6 x i8] c"ictcp\00", align 1
@.str.266 = private unnamed_addr constant [12 x i8] c"unspecified\00", align 1
@.str.267 = private unnamed_addr constant [5 x i8] c"left\00", align 1
@.str.268 = private unnamed_addr constant [7 x i8] c"center\00", align 1
@.str.269 = private unnamed_addr constant [8 x i8] c"topleft\00", align 1
@.str.270 = private unnamed_addr constant [4 x i8] c"top\00", align 1
@.str.271 = private unnamed_addr constant [11 x i8] c"bottomleft\00", align 1
@.str.272 = private unnamed_addr constant [7 x i8] c"bottom\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_read_image_line2(i8* nocapture, i8** nocapture readonly, i32* nocapture readonly, %struct.AVPixFmtDescriptor* nocapture readonly, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %11, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %11, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %11, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %11, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %11, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = shl nsw i64 -1, %22
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, -1
  %26 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = bitcast i8* %0 to i16*
  %30 = bitcast i8* %0 to i32*
  %31 = and i32 %28, 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %91, label %33

33:                                               ; preds = %10
  %34 = mul nsw i32 %15, %4
  %35 = add nsw i32 %34, %17
  %36 = sext i32 %13 to i64
  %37 = icmp eq i32 %7, 0
  br i1 %37, label %164, label %38

38:                                               ; preds = %33
  %39 = sub i32 8, %21
  %40 = and i32 %35, 7
  %41 = sub i32 %39, %40
  %42 = getelementptr inbounds i8*, i8** %1, i64 %36
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds i32, i32* %2, i64 %36
  %45 = load i32, i32* %44, align 4
  %46 = mul nsw i32 %45, %5
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %43, i64 %47
  %49 = ashr i32 %35, 3
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = icmp eq i32 %8, 0
  %53 = getelementptr inbounds i8*, i8** %1, i64 1
  %54 = icmp eq i32 %9, 4
  br label %55

55:                                               ; preds = %38, %87
  %56 = phi i32 [ %7, %38 ], [ %61, %87 ]
  %57 = phi i32 [ %41, %38 ], [ %81, %87 ]
  %58 = phi i8* [ %51, %38 ], [ %80, %87 ]
  %59 = phi i32* [ %30, %38 ], [ %89, %87 ]
  %60 = phi i16* [ %29, %38 ], [ %88, %87 ]
  %61 = add nsw i32 %56, -1
  %62 = load i8, i8* %58, align 1
  %63 = zext i8 %62 to i32
  %64 = lshr i32 %63, %57
  %65 = and i32 %64, %25
  br i1 %52, label %74, label %66

66:                                               ; preds = %55
  %67 = load i8*, i8** %53, align 8
  %68 = shl i32 %65, 2
  %69 = add nsw i32 %68, %6
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %67, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  br label %74

74:                                               ; preds = %55, %66
  %75 = phi i32 [ %73, %66 ], [ %65, %55 ]
  %76 = sub nsw i32 %57, %15
  %77 = ashr i32 %76, 3
  %78 = sub nsw i32 0, %77
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %58, i64 %79
  %81 = and i32 %76, 7
  br i1 %54, label %82, label %84

82:                                               ; preds = %74
  %83 = getelementptr inbounds i32, i32* %59, i64 1
  store i32 %75, i32* %59, align 4
  br label %87

84:                                               ; preds = %74
  %85 = trunc i32 %75 to i16
  %86 = getelementptr inbounds i16, i16* %60, i64 1
  store i16 %85, i16* %60, align 2
  br label %87

87:                                               ; preds = %84, %82
  %88 = phi i16* [ %60, %82 ], [ %86, %84 ]
  %89 = phi i32* [ %83, %82 ], [ %59, %84 ]
  %90 = icmp eq i32 %61, 0
  br i1 %90, label %164, label %55

91:                                               ; preds = %10
  %92 = sext i32 %13 to i64
  %93 = getelementptr inbounds i8*, i8** %1, i64 %92
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i32, i32* %2, i64 %92
  %96 = load i32, i32* %95, align 4
  %97 = mul nsw i32 %96, %5
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %94, i64 %98
  %100 = mul nsw i32 %15, %4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %99, i64 %101
  %103 = sext i32 %17 to i64
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = add nsw i32 %21, %19
  %106 = icmp slt i32 %105, 9
  %107 = icmp slt i32 %105, 17
  %108 = icmp eq i32 %7, 0
  br i1 %108, label %164, label %109

109:                                              ; preds = %91
  %110 = and i64 %27, 1
  %111 = getelementptr inbounds i8, i8* %104, i64 %110
  %112 = select i1 %106, i8* %111, i8* %104
  %113 = and i32 %28, 1
  %114 = icmp ne i32 %113, 0
  %115 = icmp eq i32 %8, 0
  %116 = getelementptr inbounds i8*, i8** %1, i64 1
  %117 = sext i32 %15 to i64
  %118 = icmp eq i32 %9, 4
  br label %119

119:                                              ; preds = %109, %160
  %120 = phi i32 [ %7, %109 ], [ %124, %160 ]
  %121 = phi i8* [ %112, %109 ], [ %154, %160 ]
  %122 = phi i32* [ %30, %109 ], [ %162, %160 ]
  %123 = phi i16* [ %29, %109 ], [ %161, %160 ]
  %124 = add nsw i32 %120, -1
  br i1 %106, label %125, label %128

125:                                              ; preds = %119
  %126 = load i8, i8* %121, align 1
  %127 = zext i8 %126 to i32
  br label %140

128:                                              ; preds = %119
  br i1 %107, label %129, label %135

129:                                              ; preds = %128
  %130 = bitcast i8* %121 to i16*
  %131 = load i16, i16* %130, align 1
  %132 = tail call i16 @llvm.bswap.i16(i16 %131) #13
  %133 = select i1 %114, i16 %132, i16 %131
  %134 = zext i16 %133 to i32
  br label %140

135:                                              ; preds = %128
  %136 = bitcast i8* %121 to i32*
  %137 = load i32, i32* %136, align 1
  br i1 %114, label %138, label %140

138:                                              ; preds = %135
  %139 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %137) #14, !srcloc !2
  br label %140

140:                                              ; preds = %138, %135, %129, %125
  %141 = phi i32 [ %127, %125 ], [ %134, %129 ], [ %139, %138 ], [ %137, %135 ]
  %142 = lshr i32 %141, %19
  %143 = and i32 %142, %25
  br i1 %115, label %152, label %144

144:                                              ; preds = %140
  %145 = load i8*, i8** %116, align 8
  %146 = shl i32 %143, 2
  %147 = add i32 %146, %6
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %145, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  br label %152

152:                                              ; preds = %140, %144
  %153 = phi i32 [ %151, %144 ], [ %143, %140 ]
  %154 = getelementptr inbounds i8, i8* %121, i64 %117
  br i1 %118, label %155, label %157

155:                                              ; preds = %152
  %156 = getelementptr inbounds i32, i32* %122, i64 1
  store i32 %153, i32* %122, align 4
  br label %160

157:                                              ; preds = %152
  %158 = trunc i32 %153 to i16
  %159 = getelementptr inbounds i16, i16* %123, i64 1
  store i16 %158, i16* %123, align 2
  br label %160

160:                                              ; preds = %157, %155
  %161 = phi i16* [ %123, %155 ], [ %159, %157 ]
  %162 = phi i32* [ %156, %155 ], [ %122, %157 ]
  %163 = icmp eq i32 %124, 0
  br i1 %163, label %164, label %119

164:                                              ; preds = %87, %160, %33, %91
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_read_image_line(i16* nocapture, i8** nocapture readonly, i32* nocapture readonly, %struct.AVPixFmtDescriptor* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %10 = bitcast i16* %0 to i8*
  tail call void @av_read_image_line2(i8* %10, i8** %1, i32* %2, %struct.AVPixFmtDescriptor* %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_write_image_line2(i8* nocapture readonly, i8** nocapture readonly, i32* nocapture readonly, %struct.AVPixFmtDescriptor* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %10 = sext i32 %6 to i64
  %11 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %10, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %10, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %10, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %10, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 5, i64 %10, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %3, i64 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = bitcast i8* %0 to i32*
  %25 = bitcast i8* %0 to i16*
  %26 = and i32 %23, 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %77, label %28

28:                                               ; preds = %9
  %29 = mul nsw i32 %14, %4
  %30 = add nsw i32 %29, %16
  %31 = sext i32 %12 to i64
  %32 = icmp eq i32 %7, 0
  br i1 %32, label %201, label %33

33:                                               ; preds = %28
  %34 = sub i32 8, %20
  %35 = and i32 %30, 7
  %36 = sub i32 %34, %35
  %37 = getelementptr inbounds i8*, i8** %1, i64 %31
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i32, i32* %2, i64 %31
  %40 = load i32, i32* %39, align 4
  %41 = mul nsw i32 %40, %5
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %38, i64 %42
  %44 = ashr i32 %30, 3
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = icmp eq i32 %8, 4
  br label %48

48:                                               ; preds = %33, %62
  %49 = phi i32 [ %7, %33 ], [ %54, %62 ]
  %50 = phi i32 [ %36, %33 ], [ %75, %62 ]
  %51 = phi i8* [ %46, %33 ], [ %74, %62 ]
  %52 = phi i16* [ %25, %33 ], [ %64, %62 ]
  %53 = phi i32* [ %24, %33 ], [ %63, %62 ]
  %54 = add nsw i32 %49, -1
  br i1 %47, label %55, label %58

55:                                               ; preds = %48
  %56 = getelementptr inbounds i32, i32* %53, i64 1
  %57 = load i32, i32* %53, align 4
  br label %62

58:                                               ; preds = %48
  %59 = getelementptr inbounds i16, i16* %52, i64 1
  %60 = load i16, i16* %52, align 2
  %61 = zext i16 %60 to i32
  br label %62

62:                                               ; preds = %58, %55
  %63 = phi i32* [ %56, %55 ], [ %53, %58 ]
  %64 = phi i16* [ %52, %55 ], [ %59, %58 ]
  %65 = phi i32 [ %57, %55 ], [ %61, %58 ]
  %66 = shl i32 %65, %50
  %67 = load i8, i8* %51, align 1
  %68 = trunc i32 %66 to i8
  %69 = or i8 %67, %68
  store i8 %69, i8* %51, align 1
  %70 = sub nsw i32 %50, %14
  %71 = ashr i32 %70, 3
  %72 = sub nsw i32 0, %71
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %51, i64 %73
  %75 = and i32 %70, 7
  %76 = icmp eq i32 %54, 0
  br i1 %76, label %201, label %48

77:                                               ; preds = %9
  %78 = sext i32 %12 to i64
  %79 = getelementptr inbounds i8*, i8** %1, i64 %78
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds i32, i32* %2, i64 %78
  %82 = load i32, i32* %81, align 4
  %83 = mul nsw i32 %82, %5
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %80, i64 %84
  %86 = mul nsw i32 %14, %4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = sext i32 %16 to i64
  %90 = getelementptr inbounds i8, i8* %88, i64 %89
  %91 = add nsw i32 %20, %18
  %92 = icmp slt i32 %91, 9
  %93 = icmp eq i32 %7, 0
  br i1 %92, label %101, label %94

94:                                               ; preds = %77
  br i1 %93, label %201, label %95

95:                                               ; preds = %94
  %96 = icmp eq i32 %8, 4
  %97 = icmp slt i32 %91, 17
  %98 = and i32 %23, 1
  %99 = icmp ne i32 %98, 0
  %100 = sext i32 %14 to i64
  br label %157

101:                                              ; preds = %77
  br i1 %93, label %201, label %102

102:                                              ; preds = %101
  %103 = and i64 %22, 1
  %104 = getelementptr inbounds i8, i8* %90, i64 %103
  %105 = icmp eq i32 %8, 4
  %106 = sext i32 %14 to i64
  %107 = and i32 %7, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %129, label %109

109:                                              ; preds = %102
  %110 = add nsw i32 %7, -1
  br i1 %105, label %116, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds i8, i8* %0, i64 2
  %113 = bitcast i8* %112 to i16*
  %114 = load i16, i16* %25, align 2
  %115 = zext i16 %114 to i32
  br label %120

116:                                              ; preds = %109
  %117 = getelementptr inbounds i8, i8* %0, i64 4
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %24, align 4
  br label %120

120:                                              ; preds = %116, %111
  %121 = phi i32* [ %118, %116 ], [ %24, %111 ]
  %122 = phi i16* [ %25, %116 ], [ %113, %111 ]
  %123 = phi i32 [ %119, %116 ], [ %115, %111 ]
  %124 = shl i32 %123, %18
  %125 = load i8, i8* %104, align 1
  %126 = trunc i32 %124 to i8
  %127 = or i8 %125, %126
  store i8 %127, i8* %104, align 1
  %128 = getelementptr inbounds i8, i8* %104, i64 %106
  br label %129

129:                                              ; preds = %102, %120
  %130 = phi i32 [ %7, %102 ], [ %110, %120 ]
  %131 = phi i8* [ %104, %102 ], [ %128, %120 ]
  %132 = phi i16* [ %25, %102 ], [ %122, %120 ]
  %133 = phi i32* [ %24, %102 ], [ %121, %120 ]
  %134 = icmp eq i32 %7, 1
  br i1 %134, label %201, label %135

135:                                              ; preds = %129, %209
  %136 = phi i32 [ %156, %209 ], [ %130, %129 ]
  %137 = phi i8* [ %217, %209 ], [ %131, %129 ]
  %138 = phi i16* [ %211, %209 ], [ %132, %129 ]
  %139 = phi i32* [ %210, %209 ], [ %133, %129 ]
  br i1 %105, label %140, label %143

140:                                              ; preds = %135
  %141 = getelementptr inbounds i32, i32* %139, i64 1
  %142 = load i32, i32* %139, align 4
  br label %147

143:                                              ; preds = %135
  %144 = getelementptr inbounds i16, i16* %138, i64 1
  %145 = load i16, i16* %138, align 2
  %146 = zext i16 %145 to i32
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i32* [ %141, %140 ], [ %139, %143 ]
  %149 = phi i16* [ %138, %140 ], [ %144, %143 ]
  %150 = phi i32 [ %142, %140 ], [ %146, %143 ]
  %151 = shl i32 %150, %18
  %152 = load i8, i8* %137, align 1
  %153 = trunc i32 %151 to i8
  %154 = or i8 %152, %153
  store i8 %154, i8* %137, align 1
  %155 = getelementptr inbounds i8, i8* %137, i64 %106
  %156 = add nsw i32 %136, -2
  br i1 %105, label %206, label %202

157:                                              ; preds = %95, %198
  %158 = phi i32 [ %7, %95 ], [ %162, %198 ]
  %159 = phi i8* [ %90, %95 ], [ %199, %198 ]
  %160 = phi i16* [ %25, %95 ], [ %172, %198 ]
  %161 = phi i32* [ %24, %95 ], [ %171, %198 ]
  %162 = add nsw i32 %158, -1
  br i1 %96, label %163, label %166

163:                                              ; preds = %157
  %164 = getelementptr inbounds i32, i32* %161, i64 1
  %165 = load i32, i32* %161, align 4
  br label %170

166:                                              ; preds = %157
  %167 = getelementptr inbounds i16, i16* %160, i64 1
  %168 = load i16, i16* %160, align 2
  %169 = zext i16 %168 to i32
  br label %170

170:                                              ; preds = %166, %163
  %171 = phi i32* [ %164, %163 ], [ %161, %166 ]
  %172 = phi i16* [ %160, %163 ], [ %167, %166 ]
  %173 = phi i32 [ %165, %163 ], [ %169, %166 ]
  br i1 %97, label %174, label %187

174:                                              ; preds = %170
  %175 = bitcast i8* %159 to i16*
  %176 = load i16, i16* %175, align 1
  br i1 %99, label %177, label %183

177:                                              ; preds = %174
  %178 = tail call i16 @llvm.bswap.i16(i16 %176) #13
  %179 = shl i32 %173, %18
  %180 = trunc i32 %179 to i16
  %181 = or i16 %178, %180
  %182 = tail call i16 @llvm.bswap.i16(i16 %181) #13
  store i16 %182, i16* %175, align 1
  br label %198

183:                                              ; preds = %174
  %184 = shl i32 %173, %18
  %185 = trunc i32 %184 to i16
  %186 = or i16 %176, %185
  store i16 %186, i16* %175, align 1
  br label %198

187:                                              ; preds = %170
  %188 = bitcast i8* %159 to i32*
  %189 = load i32, i32* %188, align 1
  br i1 %99, label %190, label %195

190:                                              ; preds = %187
  %191 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %189) #14, !srcloc !2
  %192 = shl i32 %173, %18
  %193 = or i32 %191, %192
  %194 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %193) #14, !srcloc !2
  store i32 %194, i32* %188, align 1
  br label %198

195:                                              ; preds = %187
  %196 = shl i32 %173, %18
  %197 = or i32 %189, %196
  store i32 %197, i32* %188, align 1
  br label %198

198:                                              ; preds = %190, %195, %177, %183
  %199 = getelementptr inbounds i8, i8* %159, i64 %100
  %200 = icmp eq i32 %162, 0
  br i1 %200, label %201, label %157

201:                                              ; preds = %62, %198, %129, %209, %28, %94, %101
  ret void

202:                                              ; preds = %147
  %203 = getelementptr inbounds i16, i16* %149, i64 1
  %204 = load i16, i16* %149, align 2
  %205 = zext i16 %204 to i32
  br label %209

206:                                              ; preds = %147
  %207 = getelementptr inbounds i32, i32* %148, i64 1
  %208 = load i32, i32* %148, align 4
  br label %209

209:                                              ; preds = %206, %202
  %210 = phi i32* [ %207, %206 ], [ %148, %202 ]
  %211 = phi i16* [ %149, %206 ], [ %203, %202 ]
  %212 = phi i32 [ %208, %206 ], [ %205, %202 ]
  %213 = shl i32 %212, %18
  %214 = load i8, i8* %155, align 1
  %215 = trunc i32 %213 to i8
  %216 = or i8 %214, %215
  store i8 %216, i8* %155, align 1
  %217 = getelementptr inbounds i8, i8* %155, i64 %106
  %218 = icmp eq i32 %156, 0
  br i1 %218, label %201, label %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_write_image_line(i16* nocapture readonly, i8** nocapture readonly, i32* nocapture readonly, %struct.AVPixFmtDescriptor* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #0 {
  %9 = bitcast i16* %0 to i8*
  tail call void @av_write_image_line2(i8* %9, i8** %1, i32* %2, %struct.AVPixFmtDescriptor* %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 2)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @av_get_pix_fmt_name(i32) local_unnamed_addr #2 {
  %2 = icmp ult i32 %0, 198
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %4, i32 0
  %6 = load i8*, i8** %5, align 16
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ null, %1 ]
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_get_pix_fmt(i8*) local_unnamed_addr #0 {
  %2 = alloca [32 x i8], align 16
  %3 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #15
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #15
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %1 ], [ %8, %5 ]
  br label %11

11:                                               ; preds = %22, %9
  %12 = phi i64 [ 0, %9 ], [ %23, %22 ]
  %13 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %12, i32 0
  %14 = load i8*, i8** %13, align 16
  %15 = tail call i32 @strcmp(i8* nonnull %14, i8* %10) #15
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %12, i32 6
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i32 @av_match_name(i8* %10, i8* %19) #13
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = add nuw nsw i64 %12, 1
  %24 = icmp eq i64 %23, 198
  br i1 %24, label %28, label %11

25:                                               ; preds = %17, %11
  %26 = trunc i64 %12 to i32
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %53

28:                                               ; preds = %22, %25
  %29 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -86, i64 32, i1 false)
  %30 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %29, i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #13
  br label %31

31:                                               ; preds = %42, %28
  %32 = phi i64 [ 0, %28 ], [ %43, %42 ]
  %33 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %32, i32 0
  %34 = load i8*, i8** %33, align 16
  %35 = call i32 @strcmp(i8* nonnull %34, i8* nonnull %29) #15
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %32, i32 6
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 @av_match_name(i8* nonnull %29, i8* %39) #13
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, 198
  br i1 %44, label %45, label %31

45:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #13
  br label %49

46:                                               ; preds = %37, %31
  %47 = trunc i64 %32 to i32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #13
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %53

49:                                               ; preds = %45, %46
  %50 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #15
  %51 = icmp eq i32 %50, 0
  %52 = select i1 %51, i32 46, i32 -1
  ret i32 %52

53:                                               ; preds = %25, %46
  %54 = phi i32 [ %47, %46 ], [ %26, %25 ]
  ret i32 %54
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_get_bits_per_pixel(%struct.AVPixFmtDescriptor* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 2
  %7 = zext i8 %6 to i32
  %8 = add nuw nsw i32 %7, %4
  %9 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %54, label %12

12:                                               ; preds = %1
  %13 = zext i8 %10 to i64
  %14 = and i64 %13, 1
  %15 = icmp eq i8 %10, 1
  br i1 %15, label %40, label %16

16:                                               ; preds = %12
  %17 = sub nsw i64 %13, %14
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i64 [ 0, %16 ], [ %37, %18 ]
  %20 = phi i32 [ 0, %16 ], [ %36, %18 ]
  %21 = phi i64 [ %17, %16 ], [ %38, %18 ]
  %22 = trunc i64 %19 to i32
  %23 = icmp eq i32 %22, 2
  %24 = select i1 %23, i32 0, i32 %8
  %25 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 5, i64 %19, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = shl i32 %26, %24
  %28 = add nsw i32 %27, %20
  %29 = or i64 %19, 1
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %30, 1
  %32 = select i1 %31, i32 0, i32 %8
  %33 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 5, i64 %29, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = shl i32 %34, %32
  %36 = add nsw i32 %35, %28
  %37 = add nuw nsw i64 %19, 2
  %38 = add i64 %21, -2
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %18

40:                                               ; preds = %18, %12
  %41 = phi i32 [ undef, %12 ], [ %36, %18 ]
  %42 = phi i64 [ 0, %12 ], [ %37, %18 ]
  %43 = phi i32 [ 0, %12 ], [ %36, %18 ]
  %44 = icmp eq i64 %14, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 5, i64 %42, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = trunc i64 %42 to i32
  %49 = add i32 %48, -1
  %50 = icmp ult i32 %49, 2
  %51 = select i1 %50, i32 0, i32 %8
  %52 = shl i32 %47, %51
  %53 = add nsw i32 %52, %43
  br label %54

54:                                               ; preds = %45, %40, %1
  %55 = phi i32 [ 0, %1 ], [ %41, %40 ], [ %53, %45 ]
  %56 = ashr i32 %55, %8
  ret i32 %56
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @av_get_padded_bits_per_pixel(%struct.AVPixFmtDescriptor* nocapture readonly) local_unnamed_addr #6 {
  %2 = alloca <4 x i32>, align 16
  %3 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 2
  %8 = zext i8 %7 to i32
  %9 = add nuw nsw i32 %8, %5
  %10 = bitcast <4 x i32>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 16, i1 false)
  %11 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 1
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %1
  %15 = zext i8 %12 to i64
  %16 = and i64 %15, 1
  %17 = icmp eq i8 %12, 1
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = sub nsw i64 %15, %16
  br label %51

20:                                               ; preds = %51, %14
  %21 = phi i64 [ 0, %14 ], [ %75, %51 ]
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %20
  %24 = trunc i64 %21 to i32
  %25 = add i32 %24, -1
  %26 = icmp ult i32 %25, 2
  %27 = select i1 %26, i32 0, i32 %9
  %28 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 5, i64 %21, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = shl i32 %29, %27
  %31 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 5, i64 %21, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds <4 x i32>, <4 x i32>* %2, i64 0, i64 %33
  store i32 %30, i32* %34, align 4
  br label %35

35:                                               ; preds = %20, %23
  %36 = load <4 x i32>, <4 x i32>* %2, align 16
  br label %37

37:                                               ; preds = %35, %1
  %38 = phi <4 x i32> [ %36, %35 ], [ zeroinitializer, %1 ]
  %39 = shufflevector <4 x i32> %38, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %40 = add nsw <4 x i32> %38, %39
  %41 = shufflevector <4 x i32> %40, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %42 = add nsw <4 x i32> %40, %41
  %43 = extractelement <4 x i32> %42, i32 0
  %44 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 4
  %47 = icmp eq i64 %46, 0
  %48 = shl nsw i32 %43, 3
  %49 = select i1 %47, i32 %48, i32 %43
  %50 = ashr i32 %49, %9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  ret i32 %50

51:                                               ; preds = %51, %18
  %52 = phi i64 [ 0, %18 ], [ %75, %51 ]
  %53 = phi i64 [ %19, %18 ], [ %76, %51 ]
  %54 = trunc i64 %52 to i32
  %55 = icmp eq i32 %54, 2
  %56 = select i1 %55, i32 0, i32 %9
  %57 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 5, i64 %52, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = shl i32 %58, %56
  %60 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 5, i64 %52, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds <4 x i32>, <4 x i32>* %2, i64 0, i64 %62
  store i32 %59, i32* %63, align 4
  %64 = or i64 %52, 1
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i32 %65, 1
  %67 = select i1 %66, i32 0, i32 %9
  %68 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 5, i64 %64, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = shl i32 %69, %67
  %71 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %0, i64 0, i32 5, i64 %64, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds <4 x i32>, <4 x i32>* %2, i64 0, i64 %73
  store i32 %70, i32* %74, align 4
  %75 = add nuw nsw i64 %52, 2
  %76 = add i64 %53, -2
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %20, label %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @av_get_pix_fmt_string(i8* returned, i32, i32) local_unnamed_addr #7 {
  %4 = icmp slt i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0)) #13
  br label %70

8:                                                ; preds = %3
  %9 = sext i32 %2 to i64
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %9, i32 0
  %12 = load i8*, i8** %11, align 16
  %13 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %9, i32 1
  %14 = load i8, i8* %13, align 8
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %9, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %9, i32 3
  %20 = load i8, i8* %19, align 2
  %21 = zext i8 %20 to i32
  %22 = add nuw nsw i32 %21, %18
  %23 = icmp eq i8 %14, 0
  br i1 %23, label %66, label %24

24:                                               ; preds = %8
  %25 = zext i8 %14 to i64
  %26 = and i64 %25, 1
  %27 = icmp eq i8 %14, 1
  br i1 %27, label %52, label %28

28:                                               ; preds = %24
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %49, %30 ]
  %32 = phi i32 [ 0, %28 ], [ %48, %30 ]
  %33 = phi i64 [ %29, %28 ], [ %50, %30 ]
  %34 = trunc i64 %31 to i32
  %35 = icmp eq i32 %34, 2
  %36 = select i1 %35, i32 0, i32 %22
  %37 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %9, i32 5, i64 %31, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = shl i32 %38, %36
  %40 = add nsw i32 %39, %32
  %41 = or i64 %31, 1
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %42, 1
  %44 = select i1 %43, i32 0, i32 %22
  %45 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %9, i32 5, i64 %41, i32 4
  %46 = load i32, i32* %45, align 8
  %47 = shl i32 %46, %44
  %48 = add nsw i32 %47, %40
  %49 = add nuw nsw i64 %31, 2
  %50 = add i64 %33, -2
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %30

52:                                               ; preds = %30, %24
  %53 = phi i32 [ undef, %24 ], [ %48, %30 ]
  %54 = phi i64 [ 0, %24 ], [ %49, %30 ]
  %55 = phi i32 [ 0, %24 ], [ %48, %30 ]
  %56 = icmp eq i64 %26, 0
  br i1 %56, label %66, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %9, i32 5, i64 %54, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = trunc i64 %54 to i32
  %61 = add i32 %60, -1
  %62 = icmp ult i32 %61, 2
  %63 = select i1 %62, i32 0, i32 %22
  %64 = shl i32 %59, %63
  %65 = add nsw i32 %64, %55
  br label %66

66:                                               ; preds = %57, %52, %8
  %67 = phi i32 [ 0, %8 ], [ %53, %52 ], [ %65, %57 ]
  %68 = ashr i32 %67, %22
  %69 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* %12, i32 %15, i32 %68) #13
  br label %70

70:                                               ; preds = %66, %5
  ret i8* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) local_unnamed_addr #2 {
  %2 = icmp ugt i32 %0, 197
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %3
  %5 = select i1 %2, %struct.AVPixFmtDescriptor* null, %struct.AVPixFmtDescriptor* %4
  ret %struct.AVPixFmtDescriptor* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_next(%struct.AVPixFmtDescriptor*) local_unnamed_addr #5 {
  %2 = icmp eq %struct.AVPixFmtDescriptor* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1, %9
  %4 = phi %struct.AVPixFmtDescriptor* [ %10, %9 ], [ %0, %1 ]
  %5 = ptrtoint %struct.AVPixFmtDescriptor* %4 to i64
  %6 = sub i64 %5, ptrtoint ([198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors to i64)
  %7 = sdiv exact i64 %6, 160
  %8 = icmp ult i64 %7, 197
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %4, i64 1
  %11 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %10, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %3, label %14

14:                                               ; preds = %3, %9, %1
  %15 = phi %struct.AVPixFmtDescriptor* [ getelementptr inbounds ([198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 0), %1 ], [ null, %3 ], [ %10, %9 ]
  ret %struct.AVPixFmtDescriptor* %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @av_pix_fmt_desc_get_id(%struct.AVPixFmtDescriptor*) local_unnamed_addr #2 {
  %2 = icmp ult %struct.AVPixFmtDescriptor* %0, getelementptr inbounds ([198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 0)
  %3 = icmp uge %struct.AVPixFmtDescriptor* %0, getelementptr inbounds ([198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 1, i64 0)
  %4 = or i1 %2, %3
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %struct.AVPixFmtDescriptor* %0 to i64
  %7 = sub i64 %6, ptrtoint ([198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors to i64)
  %8 = sdiv exact i64 %7, 160
  %9 = trunc i64 %8 to i32
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ -1, %1 ]
  ret i32 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @av_pix_fmt_get_chroma_sub_sample(i32, i32* nocapture, i32* nocapture) local_unnamed_addr #8 {
  %4 = icmp ugt i32 %0, 197
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %5
  %7 = icmp eq %struct.AVPixFmtDescriptor* %6, null
  %8 = or i1 %4, %7
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %5, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %1, align 4
  %13 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %5, i32 3
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %2, align 4
  br label %16

16:                                               ; preds = %3, %9
  %17 = phi i32 [ 0, %9 ], [ -38, %3 ]
  ret i32 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @av_pix_fmt_count_planes(i32) local_unnamed_addr #6 {
  %2 = alloca [4 x i32], align 16
  %3 = icmp ugt i32 %0, 197
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %4
  %6 = bitcast [4 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false)
  %7 = icmp eq %struct.AVPixFmtDescriptor* %5, null
  %8 = or i1 %3, %7
  br i1 %8, label %75, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %4, i32 1
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %42, label %13

13:                                               ; preds = %9
  %14 = zext i8 %11 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 3
  %17 = icmp ult i64 %15, 3
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = sub nsw i64 %14, %16
  br label %50

20:                                               ; preds = %50, %13
  %21 = phi i64 [ 0, %13 ], [ %72, %50 ]
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %20, %23
  %24 = phi i64 [ %30, %23 ], [ %21, %20 ]
  %25 = phi i64 [ %31, %23 ], [ %16, %20 ]
  %26 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %4, i32 5, i64 %24, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 %28
  store i32 1, i32* %29, align 4
  %30 = add nuw nsw i64 %24, 1
  %31 = add i64 %25, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %23, !llvm.loop !3

33:                                               ; preds = %23, %20
  %34 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 0
  %35 = load i32, i32* %34, align 16
  %36 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 2
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 3
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %33, %9
  %43 = phi i32 [ %41, %33 ], [ 0, %9 ]
  %44 = phi i32 [ %39, %33 ], [ 0, %9 ]
  %45 = phi i32 [ %37, %33 ], [ 0, %9 ]
  %46 = phi i32 [ %35, %33 ], [ 0, %9 ]
  %47 = add nsw i32 %45, %46
  %48 = add nsw i32 %44, %47
  %49 = add nsw i32 %43, %48
  br label %75

50:                                               ; preds = %50, %18
  %51 = phi i64 [ 0, %18 ], [ %72, %50 ]
  %52 = phi i64 [ %19, %18 ], [ %73, %50 ]
  %53 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %4, i32 5, i64 %51, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 %55
  store i32 1, i32* %56, align 4
  %57 = or i64 %51, 1
  %58 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %4, i32 5, i64 %57, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 %60
  store i32 1, i32* %61, align 4
  %62 = or i64 %51, 2
  %63 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %4, i32 5, i64 %62, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 %65
  store i32 1, i32* %66, align 4
  %67 = or i64 %51, 3
  %68 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %4, i32 5, i64 %67, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 %70
  store i32 1, i32* %71, align 4
  %72 = add nuw nsw i64 %51, 4
  %73 = add i64 %52, -4
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %20, label %50

75:                                               ; preds = %42, %1
  %76 = phi i32 [ -22, %1 ], [ %49, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_check_pixfmt_descriptors() local_unnamed_addr #0 {
  %1 = alloca [4 x [17 x i8]], align 16
  %2 = alloca [4 x i8*], align 16
  %3 = alloca [4 x i32], align 16
  %4 = alloca [2 x i16], align 2
  %5 = getelementptr inbounds [4 x [17 x i8]], [4 x [17 x i8]]* %1, i64 0, i64 0, i64 0
  %6 = bitcast [4 x i8*]* %2 to i8*
  %7 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 0
  %8 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 1
  %9 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 2
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 3
  %11 = getelementptr inbounds [4 x [17 x i8]], [4 x [17 x i8]]* %1, i64 0, i64 1, i64 0
  %12 = getelementptr inbounds [4 x [17 x i8]], [4 x [17 x i8]]* %1, i64 0, i64 2, i64 0
  %13 = getelementptr inbounds [4 x [17 x i8]], [4 x [17 x i8]]* %1, i64 0, i64 3, i64 0
  %14 = bitcast [4 x i32]* %3 to i8*
  %15 = bitcast [2 x i16]* %4 to i8*
  %16 = getelementptr inbounds [2 x i16], [2 x i16]* %4, i64 0, i64 0
  %17 = getelementptr inbounds [2 x i16], [2 x i16]* %4, i64 0, i64 1
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  br label %19

19:                                               ; preds = %108, %0
  %20 = phi i64 [ 0, %0 ], [ %109, %108 ]
  %21 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 68, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  store i8* %5, i8** %7, align 16
  store i8* %11, i8** %8, align 8
  store i8* %12, i8** %9, align 16
  store i8* %13, i8** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #13
  store i16 -21846, i16* %16, align 2
  store i16 -21846, i16* %17, align 2
  %22 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %21, i64 0, i32 0
  %23 = load i8*, i8** %22, align 16
  %24 = icmp eq i8* %23, null
  %25 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 1
  br i1 %24, label %26, label %41

26:                                               ; preds = %19
  %27 = load i8, i8* %25, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %50

29:                                               ; preds = %26
  %30 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %50

33:                                               ; preds = %29
  %34 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 3
  %35 = load i8, i8* %34, align 2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %50

37:                                               ; preds = %33
  %38 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 4
  %39 = load i64, i64* %38, align 16
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %108, label %50

41:                                               ; preds = %19
  %42 = load i8, i8* %23, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = load i8, i8* %25, align 8
  %46 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 4
  %47 = add nsw i64 %20, -141
  %48 = icmp ult i64 %47, 12
  %49 = zext i8 %45 to i64
  br label %51

50:                                               ; preds = %26, %29, %33, %37, %41
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0), i32 2644) #13
  call void @abort() #16
  unreachable

51:                                               ; preds = %105, %44
  %52 = phi i64 [ 0, %44 ], [ %106, %105 ]
  %53 = icmp ult i64 %52, %49
  br i1 %53, label %75, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 5, i64 %52, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %74

58:                                               ; preds = %54
  %59 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 5, i64 %52, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %58
  %63 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 5, i64 %52, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 5, i64 %52, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 5, i64 %52, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %105, label %74

74:                                               ; preds = %70, %66, %62, %58, %54
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0), i32 2650) #13
  call void @abort() #16
  unreachable

75:                                               ; preds = %51
  %76 = load i64, i64* %46, align 16
  %77 = and i64 %76, 4
  %78 = icmp eq i64 %77, 0
  %79 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 5, i64 %52, i32 1
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %86, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 5, i64 %52, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = icmp slt i32 %80, %83
  br i1 %84, label %85, label %92

85:                                               ; preds = %81
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0), i32 2654) #13
  call void @abort() #16
  unreachable

86:                                               ; preds = %75
  %87 = shl nsw i32 %80, 3
  %88 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %20, i32 5, i64 %52, i32 4
  %89 = load i32, i32* %88, align 8
  %90 = icmp slt i32 %87, %89
  br i1 %90, label %91, label %92

91:                                               ; preds = %86
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0), i32 2656) #13
  call void @abort() #16
  unreachable

92:                                               ; preds = %81, %86
  %93 = phi i32 [ %83, %81 ], [ %89, %86 ]
  br i1 %48, label %105, label %94

94:                                               ; preds = %92
  %95 = trunc i64 %52 to i32
  call void @av_read_image_line2(i8* nonnull %15, i8** nonnull %7, i32* nonnull %18, %struct.AVPixFmtDescriptor* %21, i32 0, i32 0, i32 %95, i32 2, i32 0, i32 2) #13
  %96 = load i16, i16* %16, align 2
  %97 = load i16, i16* %17, align 2
  %98 = or i16 %97, %96
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %94
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0), i32 2661) #13
  call void @abort() #16
  unreachable

101:                                              ; preds = %94
  %102 = shl nsw i32 -1, %93
  %103 = trunc i32 %102 to i16
  %104 = xor i16 %103, -1
  store i16 %104, i16* %17, align 2
  store i16 %104, i16* %16, align 2
  call void @av_write_image_line2(i8* nonnull %15, i8** nonnull %7, i32* nonnull %18, %struct.AVPixFmtDescriptor* %21, i32 0, i32 0, i32 %95, i32 2, i32 2) #13
  br label %105

105:                                              ; preds = %92, %70, %101
  %106 = add nuw nsw i64 %52, 1
  %107 = icmp eq i64 %106, 4
  br i1 %107, label %108, label %51

108:                                              ; preds = %105, %37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %5) #13
  %109 = add nuw nsw i64 %20, 1
  %110 = icmp eq i64 %109, 198
  br i1 %110, label %111, label %19

111:                                              ; preds = %108
  ret void
}

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_pix_fmt_swap_endianness(i32) local_unnamed_addr #0 {
  %2 = alloca [16 x i8], align 16
  %3 = icmp ugt i32 %0, 197
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %4
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = icmp eq %struct.AVPixFmtDescriptor* %5, null
  %8 = or i1 %3, %7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 16, i1 false)
  br i1 %8, label %47, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %5, i64 0, i32 0
  %11 = load i8*, i8** %10, align 16
  %12 = tail call i64 @strlen(i8* %11) #15
  %13 = icmp ult i64 %12, 2
  br i1 %13, label %47, label %14

14:                                               ; preds = %9
  %15 = call i64 @av_strlcpy(i8* nonnull %6, i8* %11, i64 16) #13
  %16 = call i64 @strlen(i8* nonnull %6) #15
  %17 = shl i64 %16, 32
  %18 = add i64 %17, -8589934592
  %19 = ashr exact i64 %18, 32
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i64 0, i64 %19
  %21 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %14
  %24 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #15
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %47

26:                                               ; preds = %23, %14
  %27 = load i8, i8* %20, align 1
  %28 = xor i8 %27, 14
  store i8 %28, i8* %20, align 1
  br label %29

29:                                               ; preds = %40, %26
  %30 = phi i64 [ 0, %26 ], [ %41, %40 ]
  %31 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %30, i32 0
  %32 = load i8*, i8** %31, align 16
  %33 = call i32 @strcmp(i8* nonnull %32, i8* nonnull %6) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %30, i32 6
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @av_match_name(i8* nonnull %6, i8* %37) #13
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = add nuw nsw i64 %30, 1
  %42 = icmp eq i64 %41, 198
  br i1 %42, label %47, label %29

43:                                               ; preds = %29
  %44 = trunc i64 %30 to i32
  br label %47

45:                                               ; preds = %35
  %46 = trunc i64 %30 to i32
  br label %47

47:                                               ; preds = %40, %45, %43, %23, %9, %1
  %48 = phi i32 [ -1, %1 ], [ -1, %9 ], [ -1, %23 ], [ %44, %43 ], [ %46, %45 ], [ -1, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret i32 %48
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare i64 @av_strlcpy(i8*, i8*, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_get_pix_fmt_loss(i32, i32, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #13
  store i32 -1431655766, i32* %4, align 4
  %6 = icmp eq i32 %2, 0
  %7 = select i1 %6, i32 -9, i32 -1
  %8 = call fastcc i32 @get_pix_fmt_score(i32 %0, i32 %1, i32* nonnull %4, i32 %7)
  %9 = icmp slt i32 %8, 0
  %10 = load i32, i32* %4, align 4
  %11 = select i1 %9, i32 %8, i32 %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #13
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @get_pix_fmt_score(i32, i32, i32* nocapture, i32) unnamed_addr #0 {
  %5 = icmp ugt i32 %1, 197
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %6
  %8 = select i1 %5, %struct.AVPixFmtDescriptor* null, %struct.AVPixFmtDescriptor* %7
  %9 = icmp ugt i32 %0, 197
  %10 = sext i32 %0 to i64
  %11 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %10
  %12 = select i1 %9, %struct.AVPixFmtDescriptor* null, %struct.AVPixFmtDescriptor* %11
  %13 = icmp ne %struct.AVPixFmtDescriptor* %8, null
  %14 = icmp ne %struct.AVPixFmtDescriptor* %12, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %283

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %8, i64 0, i32 4
  %18 = load i64, i64* %17, align 16
  %19 = and i64 %18, 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %12, i64 0, i32 4
  %23 = load i64, i64* %22, align 16
  %24 = and i64 %23, 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %16
  %27 = icmp eq i32 %0, %1
  %28 = select i1 %27, i32 -1, i32 -2
  br label %283

29:                                               ; preds = %21
  store i32 0, i32* %2, align 4
  %30 = icmp eq i32 %0, %1
  %31 = or i1 %30, %5
  %32 = select i1 %30, i32 2147483647, i32 -3
  br i1 %31, label %283, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %6, i32 1
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = or i1 %36, %9
  br i1 %37, label %283, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %10, i32 1
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %283, label %42

42:                                               ; preds = %38
  %43 = load i64, i64* %17, align 16
  %44 = and i64 %43, 2
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %72

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %8, i64 0, i32 1
  %48 = load i8, i8* %47, align 8
  %49 = add i8 %48, -1
  %50 = icmp ult i8 %49, 2
  br i1 %50, label %72, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %8, i64 0, i32 0
  %53 = load i8*, i8** %52, align 16
  %54 = icmp eq i8* %53, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = tail call i32 @av_strstart(i8* nonnull %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.230, i64 0, i64 0), i8** null) #13
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %72

58:                                               ; preds = %55
  %59 = load i8*, i8** %52, align 16
  %60 = tail call i32 @av_strstart(i8* %59, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.231, i64 0, i64 0), i8** null) #13
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %72

62:                                               ; preds = %58
  %63 = load i64, i64* %17, align 16
  br label %64

64:                                               ; preds = %62, %51
  %65 = phi i64 [ %63, %62 ], [ %43, %51 ]
  %66 = and i64 %65, 32
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = load i8, i8* %47, align 8
  %70 = icmp eq i8 %69, 0
  %71 = select i1 %70, i32 -1, i32 2
  br label %72

72:                                               ; preds = %42, %46, %55, %58, %64, %68
  %73 = phi i32 [ 0, %42 ], [ 1, %46 ], [ 3, %55 ], [ 4, %58 ], [ 0, %64 ], [ %71, %68 ]
  %74 = load i64, i64* %22, align 16
  %75 = and i64 %74, 2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %103

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %12, i64 0, i32 1
  %79 = load i8, i8* %78, align 8
  %80 = add i8 %79, -1
  %81 = icmp ult i8 %80, 2
  br i1 %81, label %103, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %12, i64 0, i32 0
  %84 = load i8*, i8** %83, align 16
  %85 = icmp eq i8* %84, null
  br i1 %85, label %95, label %86

86:                                               ; preds = %82
  %87 = tail call i32 @av_strstart(i8* nonnull %84, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.230, i64 0, i64 0), i8** null) #13
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %86
  %90 = load i8*, i8** %83, align 16
  %91 = tail call i32 @av_strstart(i8* %90, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.231, i64 0, i64 0), i8** null) #13
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %103

93:                                               ; preds = %89
  %94 = load i64, i64* %22, align 16
  br label %95

95:                                               ; preds = %93, %82
  %96 = phi i64 [ %94, %93 ], [ %74, %82 ]
  %97 = and i64 %96, 32
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = load i8, i8* %78, align 8
  %101 = icmp eq i8 %100, 0
  %102 = select i1 %101, i32 -1, i32 2
  br label %103

103:                                              ; preds = %72, %77, %86, %89, %95, %99
  %104 = phi i32 [ 0, %72 ], [ 1, %77 ], [ 3, %86 ], [ 4, %89 ], [ 0, %95 ], [ %102, %99 ]
  %105 = icmp eq i32 %0, 11
  %106 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %8, i64 0, i32 1
  %107 = load i8, i8* %106, align 8
  br i1 %105, label %108, label %110

108:                                              ; preds = %103
  %109 = icmp ult i8 %107, 4
  br i1 %109, label %115, label %119

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %12, i64 0, i32 1
  %112 = load i8, i8* %111, align 8
  %113 = icmp ult i8 %107, %112
  %114 = select i1 %113, i8 %107, i8 %112
  br label %115

115:                                              ; preds = %108, %110
  %116 = phi i8 [ %114, %110 ], [ %107, %108 ]
  %117 = zext i8 %116 to i32
  %118 = icmp eq i8 %116, 0
  br i1 %118, label %151, label %119

119:                                              ; preds = %108, %115
  %120 = phi i32 [ %117, %115 ], [ 4, %108 ]
  %121 = phi i8 [ %116, %115 ], [ 4, %108 ]
  %122 = and i32 %3, 2
  %123 = icmp eq i32 %122, 0
  %124 = zext i8 %121 to i64
  br label %125

125:                                              ; preds = %146, %119
  %126 = phi i64 [ 0, %119 ], [ %149, %146 ]
  %127 = phi i32 [ 2147483646, %119 ], [ %148, %146 ]
  %128 = phi i32 [ 0, %119 ], [ %147, %146 ]
  br i1 %105, label %129, label %131

129:                                              ; preds = %125
  %130 = udiv i32 7, %120
  br label %135

131:                                              ; preds = %125
  %132 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %12, i64 0, i32 5, i64 %126, i32 4
  %133 = load i32, i32* %132, align 8
  %134 = add nsw i32 %133, -1
  br label %135

135:                                              ; preds = %131, %129
  %136 = phi i32 [ %130, %129 ], [ %134, %131 ]
  %137 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %8, i64 0, i32 5, i64 %126, i32 4
  %138 = load i32, i32* %137, align 8
  %139 = add nsw i32 %138, -1
  %140 = icmp sle i32 %139, %136
  %141 = or i1 %123, %140
  br i1 %141, label %146, label %142

142:                                              ; preds = %135
  %143 = or i32 %128, 2
  %144 = lshr i32 65536, %136
  %145 = sub nsw i32 %127, %144
  br label %146

146:                                              ; preds = %135, %142
  %147 = phi i32 [ %143, %142 ], [ %128, %135 ]
  %148 = phi i32 [ %145, %142 ], [ %127, %135 ]
  %149 = add nuw nsw i64 %126, 1
  %150 = icmp eq i64 %149, %124
  br i1 %150, label %151, label %125

151:                                              ; preds = %146, %115
  %152 = phi i32 [ 0, %115 ], [ %120, %146 ]
  %153 = phi i32 [ 0, %115 ], [ %147, %146 ]
  %154 = phi i32 [ 2147483646, %115 ], [ %148, %146 ]
  %155 = and i32 %3, 1
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %193, label %157

157:                                              ; preds = %151
  %158 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %12, i64 0, i32 2
  %159 = load i8, i8* %158, align 1
  %160 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %8, i64 0, i32 2
  %161 = load i8, i8* %160, align 1
  %162 = icmp ugt i8 %159, %161
  br i1 %162, label %163, label %168

163:                                              ; preds = %157
  %164 = zext i8 %159 to i32
  %165 = or i32 %153, 1
  %166 = shl i32 256, %164
  %167 = sub nsw i32 %154, %166
  br label %168

168:                                              ; preds = %163, %157
  %169 = phi i32 [ %165, %163 ], [ %153, %157 ]
  %170 = phi i32 [ %167, %163 ], [ %154, %157 ]
  %171 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %12, i64 0, i32 3
  %172 = load i8, i8* %171, align 2
  %173 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %8, i64 0, i32 3
  %174 = load i8, i8* %173, align 2
  %175 = icmp ugt i8 %172, %174
  br i1 %175, label %176, label %181

176:                                              ; preds = %168
  %177 = zext i8 %172 to i32
  %178 = or i32 %169, 1
  %179 = shl i32 256, %177
  %180 = sub nsw i32 %170, %179
  br label %181

181:                                              ; preds = %176, %168
  %182 = phi i32 [ %178, %176 ], [ %169, %168 ]
  %183 = phi i32 [ %180, %176 ], [ %170, %168 ]
  %184 = icmp eq i8 %159, 1
  %185 = icmp eq i8 %161, 0
  %186 = and i1 %184, %185
  %187 = icmp eq i8 %172, 1
  %188 = and i1 %186, %187
  br i1 %188, label %189, label %193

189:                                              ; preds = %181
  %190 = icmp eq i8 %174, 0
  %191 = add nsw i32 %183, 512
  %192 = select i1 %190, i32 %191, i32 %183
  br label %193

193:                                              ; preds = %189, %151, %181
  %194 = phi i32 [ %182, %181 ], [ %153, %151 ], [ %182, %189 ]
  %195 = phi i32 [ %183, %181 ], [ %154, %151 ], [ %192, %189 ]
  %196 = and i32 %3, 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %220, label %198

198:                                              ; preds = %193
  switch i32 %104, label %216 [
    i32 0, label %199
    i32 1, label %203
    i32 2, label %207
    i32 3, label %211
  ]

199:                                              ; preds = %198
  %200 = icmp ugt i32 %73, 1
  %201 = or i32 %194, 4
  %202 = select i1 %200, i32 %201, i32 %194
  br label %220

203:                                              ; preds = %198
  %204 = icmp eq i32 %73, 1
  %205 = or i32 %194, 4
  %206 = select i1 %204, i32 %194, i32 %205
  br label %220

207:                                              ; preds = %198
  %208 = icmp eq i32 %73, 2
  %209 = or i32 %194, 4
  %210 = select i1 %208, i32 %194, i32 %209
  br label %220

211:                                              ; preds = %198
  %212 = add i32 %73, -1
  %213 = icmp ult i32 %212, 3
  %214 = or i32 %194, 4
  %215 = select i1 %213, i32 %194, i32 %214
  br label %220

216:                                              ; preds = %198
  %217 = icmp eq i32 %73, %104
  %218 = or i32 %194, 4
  %219 = select i1 %217, i32 %194, i32 %218
  br label %220

220:                                              ; preds = %211, %216, %207, %203, %199, %193
  %221 = phi i32 [ %194, %193 ], [ %202, %199 ], [ %206, %203 ], [ %210, %207 ], [ %219, %216 ], [ %215, %211 ]
  %222 = and i32 %221, 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %235, label %224

224:                                              ; preds = %220
  %225 = shl nuw nsw i32 %152, 16
  %226 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %12, i64 0, i32 5, i64 0, i32 4
  %227 = load i32, i32* %226, align 8
  %228 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %8, i64 0, i32 5, i64 0, i32 4
  %229 = load i32, i32* %228, align 8
  %230 = icmp sgt i32 %227, %229
  %231 = select i1 %230, i32 %229, i32 %227
  %232 = add nsw i32 %231, -1
  %233 = lshr i32 %225, %232
  %234 = sub nsw i32 %195, %233
  br label %235

235:                                              ; preds = %220, %224
  %236 = phi i32 [ %234, %224 ], [ %195, %220 ]
  %237 = icmp eq i32 %104, 1
  %238 = icmp ne i32 %73, 1
  %239 = and i1 %238, %237
  %240 = xor i1 %239, true
  %241 = and i32 %3, 32
  %242 = icmp eq i32 %241, 0
  %243 = or i1 %242, %240
  %244 = or i32 %221, 32
  %245 = add nsw i32 %236, -131072
  %246 = select i1 %243, i32 %221, i32 %244
  %247 = select i1 %243, i32 %236, i32 %245
  %248 = load i64, i64* %22, align 16
  %249 = trunc i64 %248 to i8
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %261, label %251

251:                                              ; preds = %235
  %252 = load i64, i64* %17, align 16
  %253 = trunc i64 %252 to i8
  %254 = icmp sgt i8 %253, -1
  %255 = and i32 %3, 8
  %256 = icmp eq i32 %255, 0
  %257 = or i1 %256, %254
  br i1 %257, label %261, label %258

258:                                              ; preds = %251
  %259 = or i32 %246, 8
  %260 = add nsw i32 %247, -65536
  br label %261

261:                                              ; preds = %251, %258, %235
  %262 = phi i32 [ %246, %235 ], [ %259, %258 ], [ %246, %251 ]
  %263 = phi i32 [ %247, %235 ], [ %260, %258 ], [ %247, %251 ]
  br i1 %105, label %264, label %280

264:                                              ; preds = %261
  %265 = and i32 %3, 16
  %266 = icmp ne i32 %265, 0
  %267 = icmp ne i32 %1, 11
  %268 = and i1 %267, %266
  br i1 %268, label %269, label %280

269:                                              ; preds = %264
  br i1 %238, label %277, label %270

270:                                              ; preds = %269
  %271 = load i64, i64* %17, align 16
  %272 = trunc i64 %271 to i8
  %273 = icmp sgt i8 %272, -1
  %274 = and i32 %3, 8
  %275 = icmp eq i32 %274, 0
  %276 = or i1 %275, %273
  br i1 %276, label %280, label %277

277:                                              ; preds = %270, %269
  %278 = or i32 %262, 16
  %279 = add nsw i32 %263, -65536
  br label %280

280:                                              ; preds = %270, %277, %264, %261
  %281 = phi i32 [ %278, %277 ], [ %262, %270 ], [ %262, %264 ], [ %262, %261 ]
  %282 = phi i32 [ %279, %277 ], [ %263, %270 ], [ %263, %264 ], [ %263, %261 ]
  store i32 %281, i32* %2, align 4
  br label %283

283:                                              ; preds = %33, %29, %38, %26, %4, %280
  %284 = phi i32 [ %282, %280 ], [ -4, %4 ], [ %28, %26 ], [ %32, %29 ], [ -3, %33 ], [ -3, %38 ]
  ret i32 %284
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_find_best_pix_fmt_of_2(i32, i32, i32, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca <4 x i32>, align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  store i32 -1431655766, i32* %8, align 4
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #13
  store i32 -1431655766, i32* %9, align 4
  %12 = icmp ugt i32 %0, 197
  %13 = sext i32 %0 to i64
  %14 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13
  %15 = icmp ugt i32 %1, 197
  %16 = sext i32 %1 to i64
  %17 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %16
  %18 = select i1 %15, %struct.AVPixFmtDescriptor* null, %struct.AVPixFmtDescriptor* %17
  %19 = icmp eq %struct.AVPixFmtDescriptor* %14, null
  %20 = or i1 %12, %19
  br i1 %20, label %332, label %21

21:                                               ; preds = %5
  %22 = icmp eq %struct.AVPixFmtDescriptor* %18, null
  br i1 %22, label %332, label %23

23:                                               ; preds = %21
  %24 = icmp eq i32* %4, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %23
  %26 = load i32, i32* %4, align 4
  %27 = xor i32 %26, -1
  br label %28

28:                                               ; preds = %23, %25
  %29 = phi i32 [ %27, %25 ], [ -1, %23 ]
  %30 = icmp eq i32 %3, 0
  %31 = and i32 %29, -9
  %32 = select i1 %30, i32 %31, i32 %29
  %33 = call fastcc i32 @get_pix_fmt_score(i32 %0, i32 %2, i32* nonnull %8, i32 %32)
  %34 = call fastcc i32 @get_pix_fmt_score(i32 %1, i32 %2, i32* nonnull %9, i32 %32)
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %36, label %329

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 2
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 3
  %41 = load i8, i8* %40, align 2
  %42 = zext i8 %41 to i32
  %43 = add nuw nsw i32 %42, %39
  %44 = bitcast <4 x i32>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 16, i1 false) #13
  %45 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 1
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %105, label %48

48:                                               ; preds = %36
  %49 = zext i8 %46 to i64
  %50 = and i64 %49, 1
  %51 = icmp eq i8 %46, 1
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = sub nsw i64 %49, %50
  br label %78

54:                                               ; preds = %78, %48
  %55 = phi i64 [ 0, %48 ], [ %102, %78 ]
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %54
  %58 = trunc i64 %55 to i32
  %59 = add i32 %58, -1
  %60 = icmp ult i32 %59, 2
  %61 = select i1 %60, i32 0, i32 %43
  %62 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %55, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = shl i32 %63, %61
  %65 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %55, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %67
  store i32 %64, i32* %68, align 4
  br label %69

69:                                               ; preds = %54, %57
  %70 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 0
  %71 = load i32, i32* %70, align 16
  %72 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 2
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 3
  %77 = load i32, i32* %76, align 4
  br label %105

78:                                               ; preds = %78, %52
  %79 = phi i64 [ 0, %52 ], [ %102, %78 ]
  %80 = phi i64 [ %53, %52 ], [ %103, %78 ]
  %81 = trunc i64 %79 to i32
  %82 = icmp eq i32 %81, 2
  %83 = select i1 %82, i32 0, i32 %43
  %84 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %79, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = shl i32 %85, %83
  %87 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %79, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %89
  store i32 %86, i32* %90, align 4
  %91 = or i64 %79, 1
  %92 = trunc i64 %91 to i32
  %93 = icmp eq i32 %92, 1
  %94 = select i1 %93, i32 0, i32 %43
  %95 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %91, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = shl i32 %96, %94
  %98 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %91, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %100
  store i32 %97, i32* %101, align 4
  %102 = add nuw nsw i64 %79, 2
  %103 = add i64 %80, -2
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %54, label %78

105:                                              ; preds = %36, %69
  %106 = phi i32 [ %77, %69 ], [ 0, %36 ]
  %107 = phi i32 [ %75, %69 ], [ 0, %36 ]
  %108 = phi i32 [ %73, %69 ], [ 0, %36 ]
  %109 = phi i32 [ %71, %69 ], [ 0, %36 ]
  %110 = add i32 %107, %106
  %111 = add i32 %110, %108
  %112 = add i32 %111, %109
  %113 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 4
  %114 = load i64, i64* %113, align 16
  %115 = and i64 %114, 4
  %116 = icmp eq i64 %115, 0
  %117 = shl nsw i32 %112, 3
  %118 = select i1 %116, i32 %117, i32 %112
  %119 = ashr i32 %118, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  %120 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 2
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 3
  %124 = load i8, i8* %123, align 2
  %125 = zext i8 %124 to i32
  %126 = add nuw nsw i32 %125, %122
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 16, i1 false) #13
  %127 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 1
  %128 = load i8, i8* %127, align 8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %180, label %130

130:                                              ; preds = %105
  %131 = zext i8 %128 to i64
  %132 = and i64 %131, 1
  %133 = icmp eq i8 %128, 1
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = sub nsw i64 %131, %132
  br label %153

136:                                              ; preds = %153, %130
  %137 = phi i64 [ 0, %130 ], [ %177, %153 ]
  %138 = icmp eq i64 %132, 0
  br i1 %138, label %151, label %139

139:                                              ; preds = %136
  %140 = trunc i64 %137 to i32
  %141 = add i32 %140, -1
  %142 = icmp ult i32 %141, 2
  %143 = select i1 %142, i32 0, i32 %126
  %144 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %137, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = shl i32 %145, %143
  %147 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %137, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %149
  store i32 %146, i32* %150, align 4
  br label %151

151:                                              ; preds = %136, %139
  %152 = load <4 x i32>, <4 x i32>* %6, align 16
  br label %180

153:                                              ; preds = %153, %134
  %154 = phi i64 [ 0, %134 ], [ %177, %153 ]
  %155 = phi i64 [ %135, %134 ], [ %178, %153 ]
  %156 = trunc i64 %154 to i32
  %157 = icmp eq i32 %156, 2
  %158 = select i1 %157, i32 0, i32 %126
  %159 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %154, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = shl i32 %160, %158
  %162 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %154, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %164
  store i32 %161, i32* %165, align 4
  %166 = or i64 %154, 1
  %167 = trunc i64 %166 to i32
  %168 = icmp eq i32 %167, 1
  %169 = select i1 %168, i32 0, i32 %126
  %170 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %166, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = shl i32 %171, %169
  %173 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %166, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %175
  store i32 %172, i32* %176, align 4
  %177 = add nuw nsw i64 %154, 2
  %178 = add i64 %155, -2
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %136, label %153

180:                                              ; preds = %105, %151
  %181 = phi <4 x i32> [ %152, %151 ], [ zeroinitializer, %105 ]
  %182 = shufflevector <4 x i32> %181, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %183 = add <4 x i32> %181, %182
  %184 = shufflevector <4 x i32> %183, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %185 = add <4 x i32> %183, %184
  %186 = extractelement <4 x i32> %185, i32 0
  %187 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 4
  %188 = load i64, i64* %187, align 16
  %189 = and i64 %188, 4
  %190 = icmp eq i64 %189, 0
  %191 = shl nsw i32 %186, 3
  %192 = select i1 %190, i32 %191, i32 %186
  %193 = ashr i32 %192, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  %194 = icmp eq i32 %119, %193
  br i1 %194, label %326, label %195

195:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 16, i1 false) #13
  br i1 %47, label %253, label %196

196:                                              ; preds = %195
  %197 = zext i8 %46 to i64
  %198 = and i64 %197, 1
  %199 = icmp eq i8 %46, 1
  br i1 %199, label %202, label %200

200:                                              ; preds = %196
  %201 = sub nsw i64 %197, %198
  br label %226

202:                                              ; preds = %226, %196
  %203 = phi i64 [ 0, %196 ], [ %250, %226 ]
  %204 = icmp eq i64 %198, 0
  br i1 %204, label %217, label %205

205:                                              ; preds = %202
  %206 = trunc i64 %203 to i32
  %207 = add i32 %206, -1
  %208 = icmp ult i32 %207, 2
  %209 = select i1 %208, i32 0, i32 %43
  %210 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %203, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = shl i32 %211, %209
  %213 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %203, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %215
  store i32 %212, i32* %216, align 4
  br label %217

217:                                              ; preds = %202, %205
  %218 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 0
  %219 = load i32, i32* %218, align 16
  %220 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 2
  %223 = load i32, i32* %222, align 8
  %224 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 3
  %225 = load i32, i32* %224, align 4
  br label %253

226:                                              ; preds = %226, %200
  %227 = phi i64 [ 0, %200 ], [ %250, %226 ]
  %228 = phi i64 [ %201, %200 ], [ %251, %226 ]
  %229 = trunc i64 %227 to i32
  %230 = icmp eq i32 %229, 2
  %231 = select i1 %230, i32 0, i32 %43
  %232 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %227, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = shl i32 %233, %231
  %235 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %227, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %237
  store i32 %234, i32* %238, align 4
  %239 = or i64 %227, 1
  %240 = trunc i64 %239 to i32
  %241 = icmp eq i32 %240, 1
  %242 = select i1 %241, i32 0, i32 %43
  %243 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %239, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = shl i32 %244, %242
  %246 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %18, i64 0, i32 5, i64 %239, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %248
  store i32 %245, i32* %249, align 4
  %250 = add nuw nsw i64 %227, 2
  %251 = add i64 %228, -2
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %202, label %226

253:                                              ; preds = %195, %217
  %254 = phi i32 [ %225, %217 ], [ 0, %195 ]
  %255 = phi i32 [ %223, %217 ], [ 0, %195 ]
  %256 = phi i32 [ %221, %217 ], [ 0, %195 ]
  %257 = phi i32 [ %219, %217 ], [ 0, %195 ]
  %258 = add i32 %255, %254
  %259 = add i32 %258, %256
  %260 = add i32 %259, %257
  %261 = shl nsw i32 %260, 3
  %262 = select i1 %116, i32 %261, i32 %260
  %263 = ashr i32 %262, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 16, i1 false) #13
  br i1 %129, label %314, label %264

264:                                              ; preds = %253
  %265 = zext i8 %128 to i64
  %266 = and i64 %265, 1
  %267 = icmp eq i8 %128, 1
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  %269 = sub nsw i64 %265, %266
  br label %287

270:                                              ; preds = %287, %264
  %271 = phi i64 [ 0, %264 ], [ %311, %287 ]
  %272 = icmp eq i64 %266, 0
  br i1 %272, label %285, label %273

273:                                              ; preds = %270
  %274 = trunc i64 %271 to i32
  %275 = add i32 %274, -1
  %276 = icmp ult i32 %275, 2
  %277 = select i1 %276, i32 0, i32 %126
  %278 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %271, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = shl i32 %279, %277
  %281 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %271, i32 0
  %282 = load i32, i32* %281, align 8
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %283
  store i32 %280, i32* %284, align 4
  br label %285

285:                                              ; preds = %270, %273
  %286 = load <4 x i32>, <4 x i32>* %6, align 16
  br label %314

287:                                              ; preds = %287, %268
  %288 = phi i64 [ 0, %268 ], [ %311, %287 ]
  %289 = phi i64 [ %269, %268 ], [ %312, %287 ]
  %290 = trunc i64 %288 to i32
  %291 = icmp eq i32 %290, 2
  %292 = select i1 %291, i32 0, i32 %126
  %293 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %288, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = shl i32 %294, %292
  %296 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %288, i32 0
  %297 = load i32, i32* %296, align 8
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %298
  store i32 %295, i32* %299, align 4
  %300 = or i64 %288, 1
  %301 = trunc i64 %300 to i32
  %302 = icmp eq i32 %301, 1
  %303 = select i1 %302, i32 0, i32 %126
  %304 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %300, i32 1
  %305 = load i32, i32* %304, align 4
  %306 = shl i32 %305, %303
  %307 = getelementptr inbounds [198 x %struct.AVPixFmtDescriptor], [198 x %struct.AVPixFmtDescriptor]* @av_pix_fmt_descriptors, i64 0, i64 %13, i32 5, i64 %300, i32 0
  %308 = load i32, i32* %307, align 8
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 %309
  store i32 %306, i32* %310, align 4
  %311 = add nuw nsw i64 %288, 2
  %312 = add i64 %289, -2
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %270, label %287

314:                                              ; preds = %253, %285
  %315 = phi <4 x i32> [ %286, %285 ], [ zeroinitializer, %253 ]
  %316 = shufflevector <4 x i32> %315, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %317 = add <4 x i32> %315, %316
  %318 = shufflevector <4 x i32> %317, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %319 = add <4 x i32> %317, %318
  %320 = extractelement <4 x i32> %319, i32 0
  %321 = shl nsw i32 %320, 3
  %322 = select i1 %190, i32 %321, i32 %320
  %323 = ashr i32 %322, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  %324 = icmp slt i32 %263, %323
  %325 = select i1 %324, i32 %1, i32 %0
  br label %332

326:                                              ; preds = %180
  %327 = icmp ult i8 %46, %128
  %328 = select i1 %327, i32 %1, i32 %0
  br label %332

329:                                              ; preds = %28
  %330 = icmp slt i32 %33, %34
  %331 = select i1 %330, i32 %1, i32 %0
  br label %332

332:                                              ; preds = %21, %5, %314, %326, %329
  %333 = phi i32 [ %325, %314 ], [ %328, %326 ], [ %331, %329 ], [ %1, %5 ], [ %0, %21 ]
  %334 = icmp eq i32* %4, null
  br i1 %334, label %343, label %335

335:                                              ; preds = %332
  %336 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %336) #13
  store i32 -1431655766, i32* %7, align 4
  %337 = icmp eq i32 %3, 0
  %338 = select i1 %337, i32 -9, i32 -1
  %339 = call fastcc i32 @get_pix_fmt_score(i32 %333, i32 %2, i32* nonnull %7, i32 %338) #13
  %340 = icmp slt i32 %339, 0
  %341 = load i32, i32* %7, align 4
  %342 = select i1 %340, i32 %339, i32 %341
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %336) #13
  store i32 %342, i32* %4, align 4
  br label %343

343:                                              ; preds = %332, %335
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  ret i32 %333
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @av_color_range_name(i32) local_unnamed_addr #2 {
  %2 = icmp ult i32 %0, 3
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = zext i32 %0 to i64
  %5 = getelementptr inbounds [3 x i8*], [3 x i8*]* @color_range_names, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ null, %1 ]
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_color_range_from_name(i8*) local_unnamed_addr #0 {
  %2 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.232, i64 0, i64 0), i8** null) #13
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.233, i64 0, i64 0), i8** null) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4, %1
  %8 = phi i32 [ 0, %1 ], [ 1, %4 ]
  ret i32 %8

9:                                                ; preds = %4
  %10 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.234, i64 0, i64 0), i8** null) #13
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i32 -22, i32 2
  ret i32 %12
}

declare i32 @av_strstart(i8*, i8*, i8**) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @av_color_primaries_name(i32) local_unnamed_addr #2 {
  %2 = icmp ult i32 %0, 23
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = zext i32 %0 to i64
  %5 = getelementptr inbounds [23 x i8*], [23 x i8*]* @color_primaries_names, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ null, %1 ]
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_color_primaries_from_name(i8*) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %11, %1
  %3 = phi i64 [ 0, %1 ], [ %12, %11 ]
  %4 = add nsw i64 %3, -13
  %5 = icmp ugt i64 %4, 8
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds [23 x i8*], [23 x i8*]* @color_primaries_names, i64 0, i64 %3
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i32 @av_strstart(i8* %0, i8* %8, i8** null) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %6, %2
  %12 = add nuw nsw i64 %3, 1
  %13 = icmp eq i64 %12, 23
  br i1 %13, label %16, label %2

14:                                               ; preds = %6
  %15 = trunc i64 %3 to i32
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i32 [ %15, %14 ], [ -22, %11 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @av_color_transfer_name(i32) local_unnamed_addr #2 {
  %2 = icmp ult i32 %0, 19
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = zext i32 %0 to i64
  %5 = getelementptr inbounds [19 x i8*], [19 x i8*]* @color_transfer_names, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ null, %1 ]
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_color_transfer_from_name(i8*) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %8, %1
  %3 = phi i64 [ 0, %1 ], [ %9, %8 ]
  %4 = getelementptr inbounds [19 x i8*], [19 x i8*]* @color_transfer_names, i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i32 @av_strstart(i8* %0, i8* %5, i8** null) #13
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = add nuw nsw i64 %3, 1
  %10 = icmp eq i64 %9, 19
  br i1 %10, label %13, label %2

11:                                               ; preds = %2
  %12 = trunc i64 %3 to i32
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ -22, %8 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @av_color_space_name(i32) local_unnamed_addr #2 {
  %2 = icmp ult i32 %0, 15
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = zext i32 %0 to i64
  %5 = getelementptr inbounds [15 x i8*], [15 x i8*]* @color_space_names, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ null, %1 ]
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_color_space_from_name(i8*) local_unnamed_addr #0 {
  %2 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i64 0, i64 0), i8** null) #13
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.236, i64 0, i64 0), i8** null) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %42, %39, %36, %33, %30, %27, %24, %21, %18, %15, %12, %9, %4, %1
  %8 = phi i32 [ 0, %1 ], [ 1, %4 ], [ 2, %9 ], [ 3, %12 ], [ 4, %15 ], [ 5, %18 ], [ 6, %21 ], [ 7, %24 ], [ 8, %27 ], [ 9, %30 ], [ 10, %33 ], [ 11, %36 ], [ 12, %39 ], [ 13, %42 ]
  ret i32 %8

9:                                                ; preds = %4
  %10 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.232, i64 0, i64 0), i8** null) #13
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %7

12:                                               ; preds = %9
  %13 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i64 0, i64 0), i8** null) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %7

15:                                               ; preds = %12
  %16 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.258, i64 0, i64 0), i8** null) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %7

18:                                               ; preds = %15
  %19 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.238, i64 0, i64 0), i8** null) #13
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %7

21:                                               ; preds = %18
  %22 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i64 0, i64 0), i8** null) #13
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %7

24:                                               ; preds = %21
  %25 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i64 0, i64 0), i8** null) #13
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %7

27:                                               ; preds = %24
  %28 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i64 0, i64 0), i8** null) #13
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %7

30:                                               ; preds = %27
  %31 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.260, i64 0, i64 0), i8** null) #13
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %7

33:                                               ; preds = %30
  %34 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.261, i64 0, i64 0), i8** null) #13
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %7

36:                                               ; preds = %33
  %37 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.262, i64 0, i64 0), i8** null) #13
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %7

39:                                               ; preds = %36
  %40 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.263, i64 0, i64 0), i8** null) #13
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %7

42:                                               ; preds = %39
  %43 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.264, i64 0, i64 0), i8** null) #13
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %7

45:                                               ; preds = %42
  %46 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.265, i64 0, i64 0), i8** null) #13
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, i32 -22, i32 14
  ret i32 %48
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @av_chroma_location_name(i32) local_unnamed_addr #2 {
  %2 = icmp ult i32 %0, 7
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = zext i32 %0 to i64
  %5 = getelementptr inbounds [7 x i8*], [7 x i8*]* @chroma_location_names, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ null, %1 ]
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_chroma_location_from_name(i8*) local_unnamed_addr #0 {
  %2 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.266, i64 0, i64 0), i8** null) #13
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.267, i64 0, i64 0), i8** null) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %18, %15, %12, %9, %4, %1
  %8 = phi i32 [ 0, %1 ], [ 1, %4 ], [ 2, %9 ], [ 3, %12 ], [ 4, %15 ], [ 5, %18 ]
  ret i32 %8

9:                                                ; preds = %4
  %10 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.268, i64 0, i64 0), i8** null) #13
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %7

12:                                               ; preds = %9
  %13 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.269, i64 0, i64 0), i8** null) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %7

15:                                               ; preds = %12
  %16 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.270, i64 0, i64 0), i8** null) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %7

18:                                               ; preds = %15
  %19 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.271, i64 0, i64 0), i8** null) #13
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %7

21:                                               ; preds = %18
  %22 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.272, i64 0, i64 0), i8** null) #13
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %23, i32 -22, i32 6
  ret i32 %24
}

declare i32 @av_match_name(i8*, i8*) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { nounwind readonly }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1540302}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
