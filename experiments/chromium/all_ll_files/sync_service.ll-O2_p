; ModuleID = '../../components/sync/driver/sync_service.cc'
source_filename = "../../components/sync/driver/sync_service.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.syncer::SyncSetupInProgressHandle" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.syncer::SyncService" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%"class.syncer::SyncCycleSnapshot" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.syncer::ModelNeutralState", %"class.std::__1::map", i8, [3 x i8], i32, i32, i32, i8, [7 x i8], i64, %"class.base::Time", %"class.base::Time", %"class.std::__1::vector", %"class.std::__1::vector", i32, [4 x i8], %"class.base::TimeDelta", i8, i8, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.syncer::ModelNeutralState" = type <{ %"class.syncer::EnumSet", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.syncer::SyncerError", %"class.syncer::SyncerError", %"class.syncer::SyncerError", i8, [7 x i8] }>
%"class.syncer::EnumSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.syncer::SyncerError" = type { i32, i32, i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.base::TimeDelta" = type { i64 }
%"class.syncer::SyncUserSettings" = type { i32 (...)** }

@_ZN6syncer25SyncSetupInProgressHandleC1EN4base12OnceCallbackIFvvEEE = hidden unnamed_addr alias void (%"class.syncer::SyncSetupInProgressHandle"*, %"class.base::OnceCallback"*), void (%"class.syncer::SyncSetupInProgressHandle"*, %"class.base::OnceCallback"*)* @_ZN6syncer25SyncSetupInProgressHandleC2EN4base12OnceCallbackIFvvEEE
@_ZN6syncer25SyncSetupInProgressHandleD1Ev = hidden unnamed_addr alias void (%"class.syncer::SyncSetupInProgressHandle"*), void (%"class.syncer::SyncSetupInProgressHandle"*)* @_ZN6syncer25SyncSetupInProgressHandleD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6syncer25SyncSetupInProgressHandleC2EN4base12OnceCallbackIFvvEEE(%"class.syncer::SyncSetupInProgressHandle"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.syncer::SyncSetupInProgressHandle"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer25SyncSetupInProgressHandleD2Ev(%"class.syncer::SyncSetupInProgressHandle"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #5
  %4 = getelementptr inbounds %"class.syncer::SyncSetupInProgressHandle", %"class.syncer::SyncSetupInProgressHandle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.syncer::SyncSetupInProgressHandle"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %9 = inttoptr i64 %6 to %"class.base::internal::BindStateBase"*
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %11 = bitcast void ()** %10 to void (%"class.base::internal::BindStateBase"*)**
  %12 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %11, align 8
  tail call void %12(%"class.base::internal::BindStateBase"* %9) #5
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #5
  %13 = getelementptr inbounds %"class.syncer::SyncSetupInProgressHandle", %"class.syncer::SyncSetupInProgressHandle"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %13) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6syncer11SyncService21HasCompletedSyncCycleEv(%"class.syncer::SyncService"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.syncer::SyncCycleSnapshot", align 8
  %3 = bitcast %"class.syncer::SyncCycleSnapshot"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %3) #5
  %4 = bitcast %"class.syncer::SyncService"* %0 to void (%"class.syncer::SyncCycleSnapshot"*, %"class.syncer::SyncService"*)***
  %5 = load void (%"class.syncer::SyncCycleSnapshot"*, %"class.syncer::SyncService"*)**, void (%"class.syncer::SyncCycleSnapshot"*, %"class.syncer::SyncService"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.syncer::SyncCycleSnapshot"*, %"class.syncer::SyncService"*)*, void (%"class.syncer::SyncCycleSnapshot"*, %"class.syncer::SyncService"*)** %5, i64 31
  %7 = load void (%"class.syncer::SyncCycleSnapshot"*, %"class.syncer::SyncService"*)*, void (%"class.syncer::SyncCycleSnapshot"*, %"class.syncer::SyncService"*)** %6, align 8
  call void %7(%"class.syncer::SyncCycleSnapshot"* nonnull sret %2, %"class.syncer::SyncService"* %0) #5
  %8 = call zeroext i1 @_ZNK6syncer17SyncCycleSnapshot14is_initializedEv(%"class.syncer::SyncCycleSnapshot"* nonnull %2) #5
  call void @_ZN6syncer17SyncCycleSnapshotD1Ev(%"class.syncer::SyncCycleSnapshot"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %3) #5
  ret i1 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK6syncer17SyncCycleSnapshot14is_initializedEv(%"class.syncer::SyncCycleSnapshot"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6syncer17SyncCycleSnapshotD1Ev(%"class.syncer::SyncCycleSnapshot"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6syncer11SyncService20IsSyncFeatureEnabledEv(%"class.syncer::SyncService"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.syncer::SyncService"* %0 to i64 (%"class.syncer::SyncService"*)***
  %3 = load i64 (%"class.syncer::SyncService"*)**, i64 (%"class.syncer::SyncService"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %3, i64 5
  %5 = load i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %4, align 8
  %6 = tail call i64 %5(%"class.syncer::SyncService"* %0) #5
  %7 = and i64 %6, 31
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %1
  %10 = bitcast %"class.syncer::SyncService"* %0 to i1 (%"class.syncer::SyncService"*)***
  %11 = load i1 (%"class.syncer::SyncService"*)**, i1 (%"class.syncer::SyncService"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.syncer::SyncService"*)*, i1 (%"class.syncer::SyncService"*)** %11, i64 9
  %13 = load i1 (%"class.syncer::SyncService"*)*, i1 (%"class.syncer::SyncService"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.syncer::SyncService"* %0) #5
  br i1 %14, label %15, label %26

15:                                               ; preds = %9
  %16 = bitcast %"class.syncer::SyncService"* %0 to %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)***
  %17 = load %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)**, %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)*, %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)** %17, i64 4
  %19 = load %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)*, %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)** %18, align 8
  %20 = tail call %"class.syncer::SyncUserSettings"* %19(%"class.syncer::SyncService"* %0) #5
  %21 = bitcast %"class.syncer::SyncUserSettings"* %20 to i1 (%"class.syncer::SyncUserSettings"*)***
  %22 = load i1 (%"class.syncer::SyncUserSettings"*)**, i1 (%"class.syncer::SyncUserSettings"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.syncer::SyncUserSettings"*)*, i1 (%"class.syncer::SyncUserSettings"*)** %22, i64 4
  %24 = load i1 (%"class.syncer::SyncUserSettings"*)*, i1 (%"class.syncer::SyncUserSettings"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.syncer::SyncUserSettings"* %20) #5
  br label %26

26:                                               ; preds = %1, %15, %9
  %27 = phi i1 [ false, %9 ], [ %25, %15 ], [ false, %1 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6syncer11SyncService19CanSyncFeatureStartEv(%"class.syncer::SyncService"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.syncer::SyncService"* %0 to i64 (%"class.syncer::SyncService"*)***
  %3 = load i64 (%"class.syncer::SyncService"*)**, i64 (%"class.syncer::SyncService"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %3, i64 5
  %5 = load i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %4, align 8
  %6 = tail call i64 %5(%"class.syncer::SyncService"* %0) #5
  %7 = and i64 %6, 31
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = bitcast %"class.syncer::SyncService"* %0 to i1 (%"class.syncer::SyncService"*)***
  %11 = load i1 (%"class.syncer::SyncService"*)**, i1 (%"class.syncer::SyncService"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.syncer::SyncService"*)*, i1 (%"class.syncer::SyncService"*)** %11, i64 9
  %13 = load i1 (%"class.syncer::SyncService"*)*, i1 (%"class.syncer::SyncService"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.syncer::SyncService"* %0) #5
  br label %15

15:                                               ; preds = %9, %1
  %16 = phi i1 [ false, %1 ], [ %14, %9 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6syncer11SyncService19IsEngineInitializedEv(%"class.syncer::SyncService"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.syncer::SyncService"* %0 to i32 (%"class.syncer::SyncService"*)***
  %3 = load i32 (%"class.syncer::SyncService"*)**, i32 (%"class.syncer::SyncService"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.syncer::SyncService"*)*, i32 (%"class.syncer::SyncService"*)** %3, i64 6
  %5 = load i32 (%"class.syncer::SyncService"*)*, i32 (%"class.syncer::SyncService"*)** %4, align 8
  %6 = tail call i32 %5(%"class.syncer::SyncService"* %0) #5
  %7 = add i32 %6, -4
  %8 = icmp ult i32 %7, 3
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6syncer11SyncService19IsSyncFeatureActiveEv(%"class.syncer::SyncService"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.syncer::SyncService"* %0 to i64 (%"class.syncer::SyncService"*)***
  %3 = load i64 (%"class.syncer::SyncService"*)**, i64 (%"class.syncer::SyncService"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %3, i64 5
  %5 = load i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %4, align 8
  %6 = tail call i64 %5(%"class.syncer::SyncService"* %0) #5
  %7 = and i64 %6, 31
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %34

9:                                                ; preds = %1
  %10 = bitcast %"class.syncer::SyncService"* %0 to i1 (%"class.syncer::SyncService"*)***
  %11 = load i1 (%"class.syncer::SyncService"*)**, i1 (%"class.syncer::SyncService"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.syncer::SyncService"*)*, i1 (%"class.syncer::SyncService"*)** %11, i64 9
  %13 = load i1 (%"class.syncer::SyncService"*)*, i1 (%"class.syncer::SyncService"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.syncer::SyncService"* %0) #5
  br i1 %14, label %15, label %34

15:                                               ; preds = %9
  %16 = bitcast %"class.syncer::SyncService"* %0 to %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)***
  %17 = load %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)**, %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)*, %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)** %17, i64 4
  %19 = load %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)*, %"class.syncer::SyncUserSettings"* (%"class.syncer::SyncService"*)** %18, align 8
  %20 = tail call %"class.syncer::SyncUserSettings"* %19(%"class.syncer::SyncService"* %0) #5
  %21 = bitcast %"class.syncer::SyncUserSettings"* %20 to i1 (%"class.syncer::SyncUserSettings"*)***
  %22 = load i1 (%"class.syncer::SyncUserSettings"*)**, i1 (%"class.syncer::SyncUserSettings"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.syncer::SyncUserSettings"*)*, i1 (%"class.syncer::SyncUserSettings"*)** %22, i64 4
  %24 = load i1 (%"class.syncer::SyncUserSettings"*)*, i1 (%"class.syncer::SyncUserSettings"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.syncer::SyncUserSettings"* %20) #5
  br i1 %25, label %26, label %34

26:                                               ; preds = %15
  %27 = bitcast %"class.syncer::SyncService"* %0 to i32 (%"class.syncer::SyncService"*)***
  %28 = load i32 (%"class.syncer::SyncService"*)**, i32 (%"class.syncer::SyncService"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.syncer::SyncService"*)*, i32 (%"class.syncer::SyncService"*)** %28, i64 6
  %30 = load i32 (%"class.syncer::SyncService"*)*, i32 (%"class.syncer::SyncService"*)** %29, align 8
  %31 = tail call i32 %30(%"class.syncer::SyncService"* %0) #5
  %32 = add i32 %31, -5
  %33 = icmp ult i32 %32, 2
  ret i1 %33

34:                                               ; preds = %1, %9, %15
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6syncer11SyncService21HasUnrecoverableErrorEv(%"class.syncer::SyncService"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.syncer::SyncService"* %0 to i64 (%"class.syncer::SyncService"*)***
  %3 = load i64 (%"class.syncer::SyncService"*)**, i64 (%"class.syncer::SyncService"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %3, i64 5
  %5 = load i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %4, align 8
  %6 = tail call i64 %5(%"class.syncer::SyncService"* %0) #5
  %7 = and i64 %6, 16
  %8 = icmp ne i64 %7, 0
  ret i1 %8
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
