; ModuleID = '../../third_party/skia/src/pathops/SkPathOpsTypes.cpp'
source_filename = "../../third_party/skia/src/pathops/SkPathOpsTypes.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkOpGlobalState = type <{ %class.SkArenaAlloc*, %class.SkOpCoincidence*, %class.SkOpContourHead*, i32, i8, i8, i8, i8 }>
%class.SkOpCoincidence = type <{ %class.SkCoincidentSpans*, %class.SkCoincidentSpans*, %class.SkOpGlobalState*, i8, i8, i8, i8, i8, [3 x i8] }>
%class.SkCoincidentSpans = type { %class.SkCoincidentSpans*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT* }
%class.SkOpPtT = type <{ double, %struct.SkPoint, %class.SkOpSpanBase*, %class.SkOpPtT*, i8, i8, i8, [5 x i8] }>
%struct.SkPoint = type { float, float }
%class.SkOpSpanBase = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8, [2 x i8] }>
%class.SkOpSegment = type opaque
%class.SkOpAngle = type opaque
%class.SkOpSpan = type <{ %class.SkOpSpanBase.base, [2 x i8], %class.SkOpSpan*, %class.SkOpAngle*, %class.SkOpSpanBase*, i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%class.SkOpSpanBase.base = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8 }>
%class.SkOpContourHead = type opaque
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }

@_ZN15SkOpGlobalStateC1EP15SkOpContourHeadP12SkArenaAlloc = hidden unnamed_addr alias void (%class.SkOpGlobalState*, %class.SkOpContourHead*, %class.SkArenaAlloc*), void (%class.SkOpGlobalState*, %class.SkOpContourHead*, %class.SkArenaAlloc*)* @_ZN15SkOpGlobalStateC2EP15SkOpContourHeadP12SkArenaAlloc

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z16AlmostBequalUlpsff(float, float) local_unnamed_addr #0 {
  %3 = tail call float @llvm.fabs.f32(float %0) #4
  %4 = fcmp ole float %3, 0x3E80000000000000
  %5 = tail call float @llvm.fabs.f32(float %1) #4
  %6 = fcmp ole float %5, 0x3E80000000000000
  %7 = and i1 %4, %6
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = bitcast float %0 to i32
  %10 = icmp slt i32 %9, 0
  %11 = and i32 %9, 2147483647
  %12 = sub nsw i32 0, %11
  %13 = select i1 %10, i32 %12, i32 %9
  %14 = bitcast float %1 to i32
  %15 = icmp slt i32 %14, 0
  %16 = and i32 %14, 2147483647
  %17 = sub nsw i32 0, %16
  %18 = select i1 %15, i32 %17, i32 %14
  %19 = add nsw i32 %18, 2
  %20 = icmp slt i32 %13, %19
  %21 = add nsw i32 %13, 2
  %22 = icmp slt i32 %18, %21
  %23 = and i1 %22, %20
  br label %24

24:                                               ; preds = %2, %8
  %25 = phi i1 [ true, %2 ], [ %23, %8 ]
  ret i1 %25
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z16AlmostPequalUlpsff(float, float) local_unnamed_addr #0 {
  %3 = tail call float @llvm.fabs.f32(float %0) #4
  %4 = fcmp ole float %3, 0x3EA0000000000000
  %5 = tail call float @llvm.fabs.f32(float %1) #4
  %6 = fcmp ole float %5, 0x3EA0000000000000
  %7 = and i1 %4, %6
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = bitcast float %0 to i32
  %10 = icmp slt i32 %9, 0
  %11 = and i32 %9, 2147483647
  %12 = sub nsw i32 0, %11
  %13 = select i1 %10, i32 %12, i32 %9
  %14 = bitcast float %1 to i32
  %15 = icmp slt i32 %14, 0
  %16 = and i32 %14, 2147483647
  %17 = sub nsw i32 0, %16
  %18 = select i1 %15, i32 %17, i32 %14
  %19 = add nsw i32 %18, 8
  %20 = icmp slt i32 %13, %19
  %21 = add nsw i32 %13, 8
  %22 = icmp slt i32 %18, %21
  %23 = and i1 %22, %20
  br label %24

24:                                               ; preds = %2, %8
  %25 = phi i1 [ true, %2 ], [ %23, %8 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z16AlmostDequalUlpsff(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = icmp slt i32 %3, 0
  %5 = and i32 %3, 2147483647
  %6 = sub nsw i32 0, %5
  %7 = select i1 %4, i32 %6, i32 %3
  %8 = bitcast float %1 to i32
  %9 = icmp slt i32 %8, 0
  %10 = and i32 %8, 2147483647
  %11 = sub nsw i32 0, %10
  %12 = select i1 %9, i32 %11, i32 %8
  %13 = add nsw i32 %12, 16
  %14 = icmp slt i32 %7, %13
  %15 = add nsw i32 %7, 16
  %16 = icmp slt i32 %12, %15
  %17 = and i1 %16, %14
  ret i1 %17
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z16AlmostDequalUlpsdd(double, double) local_unnamed_addr #0 {
  %3 = tail call double @llvm.fabs.f64(double %0)
  %4 = fcmp olt double %3, 0x47EFFFFFE0000000
  %5 = tail call double @llvm.fabs.f64(double %1)
  %6 = fcmp olt double %5, 0x47EFFFFFE0000000
  %7 = and i1 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = fptrunc double %0 to float
  %10 = fptrunc double %1 to float
  %11 = bitcast float %9 to i32
  %12 = icmp slt i32 %11, 0
  %13 = and i32 %11, 2147483647
  %14 = sub nsw i32 0, %13
  %15 = select i1 %12, i32 %14, i32 %11
  %16 = bitcast float %10 to i32
  %17 = icmp slt i32 %16, 0
  %18 = and i32 %16, 2147483647
  %19 = sub nsw i32 0, %18
  %20 = select i1 %17, i32 %19, i32 %16
  %21 = add nsw i32 %20, 16
  %22 = icmp slt i32 %15, %21
  %23 = add nsw i32 %15, 16
  %24 = icmp slt i32 %20, %23
  %25 = and i1 %24, %22
  br label %33

26:                                               ; preds = %2
  %27 = fsub double %0, %1
  %28 = tail call double @llvm.fabs.f64(double %27)
  %29 = fcmp olt double %3, %5
  %30 = select i1 %29, double %5, double %3
  %31 = fdiv double %28, %30
  %32 = fcmp olt double %31, 0x3EC0000000000000
  br label %33

33:                                               ; preds = %26, %8
  %34 = phi i1 [ %25, %8 ], [ %32, %26 ]
  ret i1 %34
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #2

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z15AlmostEqualUlpsff(float, float) local_unnamed_addr #0 {
  %3 = tail call float @llvm.fabs.f32(float %0) #4
  %4 = fcmp ole float %3, 0x3EB0000000000000
  %5 = tail call float @llvm.fabs.f32(float %1) #4
  %6 = fcmp ole float %5, 0x3EB0000000000000
  %7 = and i1 %4, %6
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = bitcast float %0 to i32
  %10 = icmp slt i32 %9, 0
  %11 = and i32 %9, 2147483647
  %12 = sub nsw i32 0, %11
  %13 = select i1 %10, i32 %12, i32 %9
  %14 = bitcast float %1 to i32
  %15 = icmp slt i32 %14, 0
  %16 = and i32 %14, 2147483647
  %17 = sub nsw i32 0, %16
  %18 = select i1 %15, i32 %17, i32 %14
  %19 = add nsw i32 %18, 16
  %20 = icmp slt i32 %13, %19
  %21 = add nsw i32 %13, 16
  %22 = icmp slt i32 %18, %21
  %23 = and i1 %22, %20
  br label %24

24:                                               ; preds = %2, %8
  %25 = phi i1 [ true, %2 ], [ %23, %8 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z28AlmostEqualUlpsNoNormalCheckff(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = icmp slt i32 %3, 0
  %5 = and i32 %3, 2147483647
  %6 = sub nsw i32 0, %5
  %7 = select i1 %4, i32 %6, i32 %3
  %8 = bitcast float %1 to i32
  %9 = icmp slt i32 %8, 0
  %10 = and i32 %8, 2147483647
  %11 = sub nsw i32 0, %10
  %12 = select i1 %9, i32 %11, i32 %8
  %13 = add nsw i32 %12, 16
  %14 = icmp slt i32 %7, %13
  %15 = add nsw i32 %7, 16
  %16 = icmp slt i32 %12, %15
  %17 = and i1 %16, %14
  ret i1 %17
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z19AlmostEqualUlps_Pinff(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2139095040
  %5 = icmp eq i32 %4, 2139095040
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = bitcast float %1 to i32
  %8 = and i32 %7, 2139095040
  %9 = icmp eq i32 %8, 2139095040
  br i1 %9, label %30, label %10

10:                                               ; preds = %6
  %11 = tail call float @llvm.fabs.f32(float %0) #4
  %12 = fcmp ole float %11, 0x3EB0000000000000
  %13 = tail call float @llvm.fabs.f32(float %1) #4
  %14 = fcmp ole float %13, 0x3EB0000000000000
  %15 = and i1 %12, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %10
  %17 = icmp slt i32 %3, 0
  %18 = and i32 %3, 2147483647
  %19 = sub nsw i32 0, %18
  %20 = select i1 %17, i32 %19, i32 %3
  %21 = icmp slt i32 %7, 0
  %22 = and i32 %7, 2147483647
  %23 = sub nsw i32 0, %22
  %24 = select i1 %21, i32 %23, i32 %7
  %25 = add nsw i32 %24, 16
  %26 = icmp slt i32 %20, %25
  %27 = add nsw i32 %20, 16
  %28 = icmp slt i32 %24, %27
  %29 = and i1 %28, %26
  br label %30

30:                                               ; preds = %2, %6, %10, %16
  %31 = phi i1 [ false, %6 ], [ false, %2 ], [ true, %10 ], [ %29, %16 ]
  ret i1 %31
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z18NotAlmostEqualUlpsff(float, float) local_unnamed_addr #0 {
  %3 = tail call float @llvm.fabs.f32(float %0) #4
  %4 = fcmp ole float %3, 0x3EB0000000000000
  %5 = tail call float @llvm.fabs.f32(float %1) #4
  %6 = fcmp ole float %5, 0x3EB0000000000000
  %7 = and i1 %4, %6
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = bitcast float %0 to i32
  %10 = icmp slt i32 %9, 0
  %11 = and i32 %9, 2147483647
  %12 = sub nsw i32 0, %11
  %13 = select i1 %10, i32 %12, i32 %9
  %14 = bitcast float %1 to i32
  %15 = icmp slt i32 %14, 0
  %16 = and i32 %14, 2147483647
  %17 = sub nsw i32 0, %16
  %18 = select i1 %15, i32 %17, i32 %14
  %19 = add nsw i32 %18, 16
  %20 = icmp sge i32 %13, %19
  %21 = add nsw i32 %13, 16
  %22 = icmp sge i32 %18, %21
  %23 = or i1 %22, %20
  br label %24

24:                                               ; preds = %2, %8
  %25 = phi i1 [ false, %2 ], [ %23, %8 ]
  ret i1 %25
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z22NotAlmostEqualUlps_Pinff(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2139095040
  %5 = icmp eq i32 %4, 2139095040
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = bitcast float %1 to i32
  %8 = and i32 %7, 2139095040
  %9 = icmp eq i32 %8, 2139095040
  br i1 %9, label %30, label %10

10:                                               ; preds = %6
  %11 = tail call float @llvm.fabs.f32(float %0) #4
  %12 = fcmp ole float %11, 0x3EB0000000000000
  %13 = tail call float @llvm.fabs.f32(float %1) #4
  %14 = fcmp ole float %13, 0x3EB0000000000000
  %15 = and i1 %12, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %10
  %17 = icmp slt i32 %3, 0
  %18 = and i32 %3, 2147483647
  %19 = sub nsw i32 0, %18
  %20 = select i1 %17, i32 %19, i32 %3
  %21 = icmp slt i32 %7, 0
  %22 = and i32 %7, 2147483647
  %23 = sub nsw i32 0, %22
  %24 = select i1 %21, i32 %23, i32 %7
  %25 = add nsw i32 %24, 16
  %26 = icmp sge i32 %20, %25
  %27 = add nsw i32 %20, 16
  %28 = icmp sge i32 %24, %27
  %29 = or i1 %28, %26
  br label %30

30:                                               ; preds = %2, %6, %10, %16
  %31 = phi i1 [ false, %6 ], [ false, %2 ], [ false, %10 ], [ %29, %16 ]
  ret i1 %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z19NotAlmostDequalUlpsff(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = icmp slt i32 %3, 0
  %5 = and i32 %3, 2147483647
  %6 = sub nsw i32 0, %5
  %7 = select i1 %4, i32 %6, i32 %3
  %8 = bitcast float %1 to i32
  %9 = icmp slt i32 %8, 0
  %10 = and i32 %8, 2147483647
  %11 = sub nsw i32 0, %10
  %12 = select i1 %9, i32 %11, i32 %8
  %13 = add nsw i32 %12, 16
  %14 = icmp sge i32 %7, %13
  %15 = add nsw i32 %7, 16
  %16 = icmp sge i32 %12, %15
  %17 = or i1 %16, %14
  ret i1 %17
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z16RoughlyEqualUlpsff(float, float) local_unnamed_addr #0 {
  %3 = tail call float @llvm.fabs.f32(float %0) #4
  %4 = fcmp ole float %3, 0x3F10000000000000
  %5 = tail call float @llvm.fabs.f32(float %1) #4
  %6 = fcmp ole float %5, 0x3F10000000000000
  %7 = and i1 %4, %6
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = bitcast float %0 to i32
  %10 = icmp slt i32 %9, 0
  %11 = and i32 %9, 2147483647
  %12 = sub nsw i32 0, %11
  %13 = select i1 %10, i32 %12, i32 %9
  %14 = bitcast float %1 to i32
  %15 = icmp slt i32 %14, 0
  %16 = and i32 %14, 2147483647
  %17 = sub nsw i32 0, %16
  %18 = select i1 %15, i32 %17, i32 %14
  %19 = add nsw i32 %18, 256
  %20 = icmp slt i32 %13, %19
  %21 = add nsw i32 %13, 256
  %22 = icmp slt i32 %18, %21
  %23 = and i1 %22, %20
  br label %24

24:                                               ; preds = %2, %8
  %25 = phi i1 [ true, %2 ], [ %23, %8 ]
  ret i1 %25
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z17AlmostBetweenUlpsfff(float, float, float) local_unnamed_addr #0 {
  %4 = fcmp ugt float %0, %2
  br i1 %4, label %47, label %5

5:                                                ; preds = %3
  %6 = tail call float @llvm.fabs.f32(float %0) #4
  %7 = fcmp ole float %6, 0x3E80000000000000
  %8 = tail call float @llvm.fabs.f32(float %1) #4
  %9 = fcmp ole float %8, 0x3E80000000000000
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = fadd float %1, 0x3E90000000000000
  %13 = fcmp ogt float %12, %0
  br i1 %13, label %27, label %89

14:                                               ; preds = %5
  %15 = bitcast float %0 to i32
  %16 = icmp slt i32 %15, 0
  %17 = and i32 %15, 2147483647
  %18 = sub nsw i32 0, %17
  %19 = select i1 %16, i32 %18, i32 %15
  %20 = bitcast float %1 to i32
  %21 = icmp slt i32 %20, 0
  %22 = and i32 %20, 2147483647
  %23 = sub nsw i32 0, %22
  %24 = select i1 %21, i32 %23, i32 %20
  %25 = add nsw i32 %24, 2
  %26 = icmp slt i32 %19, %25
  br i1 %26, label %27, label %89

27:                                               ; preds = %11, %14
  %28 = tail call float @llvm.fabs.f32(float %2) #4
  %29 = fcmp ole float %28, 0x3E80000000000000
  %30 = and i1 %9, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = fadd float %2, 0x3E90000000000000
  %33 = fcmp ogt float %32, %1
  br label %89

34:                                               ; preds = %27
  %35 = bitcast float %1 to i32
  %36 = icmp slt i32 %35, 0
  %37 = and i32 %35, 2147483647
  %38 = sub nsw i32 0, %37
  %39 = select i1 %36, i32 %38, i32 %35
  %40 = bitcast float %2 to i32
  %41 = icmp slt i32 %40, 0
  %42 = and i32 %40, 2147483647
  %43 = sub nsw i32 0, %42
  %44 = select i1 %41, i32 %43, i32 %40
  %45 = add nsw i32 %44, 2
  %46 = icmp slt i32 %39, %45
  br label %89

47:                                               ; preds = %3
  %48 = tail call float @llvm.fabs.f32(float %1) #4
  %49 = fcmp ole float %48, 0x3E80000000000000
  %50 = tail call float @llvm.fabs.f32(float %0) #4
  %51 = fcmp ole float %50, 0x3E80000000000000
  %52 = and i1 %51, %49
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = fadd float %0, 0x3E90000000000000
  %55 = fcmp ogt float %54, %1
  br i1 %55, label %69, label %89

56:                                               ; preds = %47
  %57 = bitcast float %1 to i32
  %58 = icmp slt i32 %57, 0
  %59 = and i32 %57, 2147483647
  %60 = sub nsw i32 0, %59
  %61 = select i1 %58, i32 %60, i32 %57
  %62 = bitcast float %0 to i32
  %63 = icmp slt i32 %62, 0
  %64 = and i32 %62, 2147483647
  %65 = sub nsw i32 0, %64
  %66 = select i1 %63, i32 %65, i32 %62
  %67 = add nsw i32 %66, 2
  %68 = icmp slt i32 %61, %67
  br i1 %68, label %69, label %89

69:                                               ; preds = %53, %56
  %70 = tail call float @llvm.fabs.f32(float %2) #4
  %71 = fcmp ole float %70, 0x3E80000000000000
  %72 = and i1 %49, %71
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  %74 = fadd float %1, 0x3E90000000000000
  %75 = fcmp ogt float %74, %2
  br label %89

76:                                               ; preds = %69
  %77 = bitcast float %2 to i32
  %78 = icmp slt i32 %77, 0
  %79 = and i32 %77, 2147483647
  %80 = sub nsw i32 0, %79
  %81 = select i1 %78, i32 %80, i32 %77
  %82 = bitcast float %1 to i32
  %83 = icmp slt i32 %82, 0
  %84 = and i32 %82, 2147483647
  %85 = sub nsw i32 0, %84
  %86 = select i1 %83, i32 %85, i32 %82
  %87 = add nsw i32 %86, 2
  %88 = icmp slt i32 %81, %87
  br label %89

89:                                               ; preds = %76, %73, %53, %34, %31, %11, %56, %14
  %90 = phi i1 [ false, %14 ], [ false, %56 ], [ false, %11 ], [ %33, %31 ], [ %46, %34 ], [ false, %53 ], [ %75, %73 ], [ %88, %76 ]
  ret i1 %90
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z14AlmostLessUlpsff(float, float) local_unnamed_addr #0 {
  %3 = tail call float @llvm.fabs.f32(float %0) #4
  %4 = fcmp ole float %3, 0x3EB0000000000000
  %5 = tail call float @llvm.fabs.f32(float %1) #4
  %6 = fcmp ole float %5, 0x3EB0000000000000
  %7 = and i1 %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = fadd float %1, 0xBEC0000000000000
  %10 = fcmp oge float %9, %0
  br label %24

11:                                               ; preds = %2
  %12 = bitcast float %0 to i32
  %13 = icmp slt i32 %12, 0
  %14 = and i32 %12, 2147483647
  %15 = sub nsw i32 0, %14
  %16 = select i1 %13, i32 %15, i32 %12
  %17 = bitcast float %1 to i32
  %18 = icmp slt i32 %17, 0
  %19 = and i32 %17, 2147483647
  %20 = sub nsw i32 0, %19
  %21 = select i1 %18, i32 %20, i32 %17
  %22 = add nsw i32 %21, -16
  %23 = icmp sle i32 %16, %22
  br label %24

24:                                               ; preds = %8, %11
  %25 = phi i1 [ %10, %8 ], [ %23, %11 ]
  ret i1 %25
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z21AlmostLessOrEqualUlpsff(float, float) local_unnamed_addr #0 {
  %3 = tail call float @llvm.fabs.f32(float %0) #4
  %4 = fcmp ole float %3, 0x3EB0000000000000
  %5 = tail call float @llvm.fabs.f32(float %1) #4
  %6 = fcmp ole float %5, 0x3EB0000000000000
  %7 = and i1 %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = fadd float %1, 0x3EC0000000000000
  %10 = fcmp ogt float %9, %0
  br label %24

11:                                               ; preds = %2
  %12 = bitcast float %0 to i32
  %13 = icmp slt i32 %12, 0
  %14 = and i32 %12, 2147483647
  %15 = sub nsw i32 0, %14
  %16 = select i1 %13, i32 %15, i32 %12
  %17 = bitcast float %1 to i32
  %18 = icmp slt i32 %17, 0
  %19 = and i32 %17, 2147483647
  %20 = sub nsw i32 0, %19
  %21 = select i1 %18, i32 %20, i32 %17
  %22 = add nsw i32 %21, 16
  %23 = icmp slt i32 %16, %22
  br label %24

24:                                               ; preds = %8, %11
  %25 = phi i1 [ %10, %8 ], [ %23, %11 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_Z12UlpsDistanceff(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = bitcast float %1 to i32
  %5 = xor i32 %4, %3
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = fcmp oeq float %0, %1
  %9 = select i1 %8, i32 0, i32 2147483647
  br label %15

10:                                               ; preds = %2
  %11 = sub nsw i32 %3, %4
  %12 = icmp slt i32 %11, 0
  %13 = sub nsw i32 0, %11
  %14 = select i1 %12, i32 %13, i32 %11
  br label %15

15:                                               ; preds = %10, %7
  %16 = phi i32 [ %9, %7 ], [ %14, %10 ]
  ret i32 %16
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden double @_Z11SkDCubeRootd(double) local_unnamed_addr #0 {
  %2 = tail call double @llvm.fabs.f64(double %0) #4
  %3 = fcmp olt double %2, 0x3BA0000000000000
  br i1 %3, label %40, label %4

4:                                                ; preds = %1
  %5 = bitcast double %2 to i64
  %6 = lshr i64 %5, 32
  %7 = trunc i64 %6 to i32
  %8 = udiv i32 %7, 3
  %9 = add nuw nsw i32 %8, 715094163
  %10 = zext i32 %9 to i64
  %11 = shl nuw nsw i64 %10, 32
  %12 = bitcast i64 %11 to double
  %13 = fmul double %12, %12
  %14 = fmul double %13, %12
  %15 = fadd double %2, %14
  %16 = fadd double %2, %15
  %17 = fmul double %16, %12
  %18 = fadd double %14, %14
  %19 = fadd double %2, %18
  %20 = fdiv double %17, %19
  %21 = fmul double %20, %20
  %22 = fmul double %20, %21
  %23 = fadd double %2, %22
  %24 = fadd double %2, %23
  %25 = fmul double %20, %24
  %26 = fadd double %22, %22
  %27 = fadd double %2, %26
  %28 = fdiv double %25, %27
  %29 = fmul double %28, %28
  %30 = fmul double %28, %29
  %31 = fadd double %2, %30
  %32 = fadd double %2, %31
  %33 = fmul double %28, %32
  %34 = fadd double %30, %30
  %35 = fadd double %2, %34
  %36 = fdiv double %33, %35
  %37 = fcmp olt double %0, 0.000000e+00
  %38 = fsub double -0.000000e+00, %36
  %39 = select i1 %37, double %38, double %36
  br label %40

40:                                               ; preds = %4, %1
  %41 = phi double [ 0.000000e+00, %1 ], [ %39, %4 ]
  ret double %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15SkOpGlobalStateC2EP15SkOpContourHeadP12SkArenaAlloc(%class.SkOpGlobalState* nocapture, %class.SkOpContourHead*, %class.SkArenaAlloc*) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %0, i64 0, i32 0
  store %class.SkArenaAlloc* %2, %class.SkArenaAlloc** %4, align 8
  %5 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %0, i64 0, i32 1
  store %class.SkOpCoincidence* null, %class.SkOpCoincidence** %5, align 8
  %6 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %0, i64 0, i32 2
  store %class.SkOpContourHead* %1, %class.SkOpContourHead** %6, align 8
  %7 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %0, i64 0, i32 5
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %0, i64 0, i32 6
  store i8 1, i8* %9, align 2
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #2

attributes #0 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
