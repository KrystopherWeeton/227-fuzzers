; ModuleID = '../../v8/src/objects/js-objects.cc'
source_filename = "../../v8/src/objects/js-objects.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.979", i32, i8, i8, i32, i32, %"class.std::__1::vector.985", %"class.std::__1::vector.985", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.992", i64, %"class.std::__1::unordered_map.993", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1049", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1121", %"class.std::__1::vector.1125", %"class.std::__1::vector.1125", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type { %"class.v8::internal::Isolate"*, i64, %"class.v8::internal::ExternalCallbackScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type { %"class.v8::internal::StringAllocator"*, i32, i32, i32, i8* }
%"class.v8::internal::StringAllocator" = type { i32 (...)** }
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type { i32 (...)**, %"class.v8::internal::Smi", [32 x %"struct.v8::internal::DateCache::DST"], i32, %"struct.v8::internal::DateCache::DST"*, %"struct.v8::internal::DateCache::DST"*, i32, i8, i32, i32, i32, i32, i8*, i8*, %"class.v8::base::TimezoneCache"* }
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"struct.v8::internal::DateCache::DST" = type { i32, i32, i32, i32 }
%"class.v8::base::TimezoneCache" = type { i32 (...)** }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.975" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"*, %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::pair.956"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.985" = type { %"class.std::__1::__vector_base.986" }
%"class.std::__1::__vector_base.986" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.992" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1017", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1046", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1047", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1042, %union.anon.1044, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1042 = type { i64 }
%union.anon.1044 = type { i64 }
%"class.std::__1::weak_ptr.1046" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1047" = type { %"class.v8::PersistentBase.1048" }
%"class.v8::PersistentBase.1048" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1018", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1078", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1054", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1064", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1070", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1054" = type { %"struct.std::__1::__atomic_base.1055" }
%"struct.std::__1::__atomic_base.1055" = type { %"struct.std::__1::__cxx_atomic_impl.1056" }
%"struct.std::__1::__cxx_atomic_impl.1056" = type { %"struct.std::__1::__cxx_atomic_base_impl.1057" }
%"struct.std::__1::__cxx_atomic_base_impl.1057" = type { i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1095" }
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1121" = type { %"struct.std::__1::__atomic_base.1122" }
%"struct.std::__1::__atomic_base.1122" = type { %"struct.std::__1::__cxx_atomic_impl.1123" }
%"struct.std::__1::__cxx_atomic_impl.1123" = type { %"struct.std::__1::__cxx_atomic_base_impl.1124" }
%"struct.std::__1::__cxx_atomic_base_impl.1124" = type { %"class.std::__1::vector.1125"* }
%"class.std::__1::vector.1125" = type { %"class.std::__1::__vector_base.1126" }
%"class.std::__1::__vector_base.1126" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1127" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"struct.std::__1::atomic.1225" = type { %"struct.std::__1::__atomic_base.1226" }
%"struct.std::__1::__atomic_base.1226" = type { %"struct.std::__1::__atomic_base.1227" }
%"struct.std::__1::__atomic_base.1227" = type { %"struct.std::__1::__cxx_atomic_impl.1228" }
%"struct.std::__1::__cxx_atomic_impl.1228" = type { %"struct.std::__1::__cxx_atomic_base_impl.1229" }
%"struct.std::__1::__cxx_atomic_base_impl.1229" = type { i32 }
%"class.v8::internal::ElementsAccessor" = type { i32 (...)** }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::Handle<v8::internal::AllocationSite>::ObjectRef" = type { %"class.v8::internal::AllocationSite" }
%"class.v8::internal::AllocationSite" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::DependentCode" = type { %"class.v8::internal::WeakFixedArray" }
%"class.v8::internal::WeakFixedArray" = type { %"class.v8::internal::TorqueGeneratedWeakFixedArray" }
%"class.v8::internal::TorqueGeneratedWeakFixedArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1139", %"class.v8::internal::Handle.1138", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1137" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1139" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1138" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1137", i64 }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::PropertyDescriptor" = type { i8, %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1138" }
%"class.v8::internal::PrototypeIterator" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Object", %"class.v8::internal::Handle.969", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::internal::ScopedVector" = type { %"class.v8::internal::Vector.1143" }
%"class.v8::internal::Vector.1143" = type { %"class.v8::internal::Handle.1138"*, i64 }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::Handle<v8::internal::Map>::ObjectRef" = type { %"class.v8::internal::Map" }
%"class.v8::internal::GlobalDictionary" = type { %"class.v8::internal::BaseNameDictionary" }
%"class.v8::internal::BaseNameDictionary" = type { %"class.v8::internal::Dictionary.1146" }
%"class.v8::internal::Dictionary.1146" = type { %"class.v8::internal::HashTable.1147" }
%"class.v8::internal::HashTable.1147" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::NameDictionary" = type { %"class.v8::internal::BaseNameDictionary.1148" }
%"class.v8::internal::BaseNameDictionary.1148" = type { %"class.v8::internal::Dictionary.1149" }
%"class.v8::internal::Dictionary.1149" = type { %"class.v8::internal::HashTable.1150" }
%"class.v8::internal::HashTable.1150" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1200", i32, i32, i32, %"class.v8::internal::Handle.1199" }
%"class.v8::internal::Handle.1200" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1199" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef" = type { %"class.v8::internal::PropertyCell" }
%"class.v8::internal::PropertyCell" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::PropertyCallbackArguments" = type { %"class.v8::internal::CustomArguments" }
%"class.v8::internal::CustomArguments" = type { %"class.v8::internal::CustomArgumentsBase", [7 x i64] }
%"class.v8::internal::CustomArgumentsBase" = type { %"class.v8::internal::Relocatable" }
%"class.v8::internal::Vector.1230" = type { i8*, i64 }
%"class.std::__1::vector.1163" = type { %"class.std::__1::__vector_base.1164" }
%"class.std::__1::__vector_base.1164" = type { %"class.v8::internal::PropertyDescriptor"*, %"class.v8::internal::PropertyDescriptor"*, %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.v8::internal::PropertyDescriptor"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::PropertyDescriptor" = type { %"struct.v8::PropertyDescriptor::PrivateData"* }
%"struct.v8::PropertyDescriptor::PrivateData" = type opaque
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.v8::Name" = type { i8 }
%"class.v8::internal::TransitionsAccessor" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1175", %"class.v8::internal::Map", %"class.v8::internal::MaybeObject", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1175" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeObject" = type { %"class.v8::internal::TaggedImpl.1244" }
%"class.v8::internal::TaggedImpl.1244" = type { i64 }
%"class.v8::internal::Handle.1144" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef" = type { %"class.v8::internal::NameDictionary" }
%"class.v8::internal::StringStream::FmtElm" = type { %union.anon.1252 }
%union.anon.1252 = type { double }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef" = type { %"class.v8::internal::FixedArrayBase" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.v8::internal::MapUpdater" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1175", %"class.v8::internal::Handle.1176", %"class.v8::internal::Handle.1175", %"class.v8::internal::Handle.1175", %"class.v8::internal::Handle.1175", i32, i8, i32, %"class.v8::internal::Handle.1174", %"class.v8::internal::Handle.1175", i32, i8, i8, %"class.v8::internal::InternalIndex", i32, i32, i32, i32, %"class.v8::internal::Representation", %"class.v8::internal::Handle.1187", %"class.v8::internal::Handle.1138" }
%"class.v8::internal::Handle.1176" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1174" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1187" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Descriptor" = type <{ %"class.v8::internal::Handle.1137", %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::PropertyDetails", [4 x i8] }>
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle.1151" }
%"class.v8::internal::MaybeHandle.1151" = type { i64* }
%"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef" = type { %"class.v8::internal::DescriptorArray" }
%"class.v8::internal::DescriptorArray" = type { %"class.v8::internal::TorqueGeneratedDescriptorArray" }
%"class.v8::internal::TorqueGeneratedDescriptorArray" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::unique_ptr.1237" = type { %"class.std::__1::__compressed_pair.1238" }
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::PropertyCallbackInfo.1255" = type { i64* }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::internal::JSTypedArray" = type { %"class.v8::internal::TorqueGeneratedJSTypedArray" }
%"class.v8::internal::TorqueGeneratedJSTypedArray" = type { %"class.v8::internal::JSArrayBufferView" }
%"class.v8::internal::JSArrayBufferView" = type { %"class.v8::internal::TorqueGeneratedJSArrayBufferView" }
%"class.v8::internal::TorqueGeneratedJSArrayBufferView" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::NumberDictionary" = type { %"class.v8::internal::Dictionary" }
%"class.v8::internal::Dictionary" = type { %"class.v8::internal::HashTable" }
%"class.v8::internal::HashTable" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::JSArrayBuffer" = type { %"class.v8::internal::TorqueGeneratedJSArrayBuffer" }
%"class.v8::internal::TorqueGeneratedJSArrayBuffer" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::Arguments" = type { i64, i64* }
%"class.v8::internal::JSGlobalProxy" = type { %"class.v8::internal::TorqueGeneratedJSGlobalProxy" }
%"class.v8::internal::TorqueGeneratedJSGlobalProxy" = type { %"class.v8::internal::JSSpecialObject" }
%"class.v8::internal::JSSpecialObject" = type { %"class.v8::internal::TorqueGeneratedJSSpecialObject" }
%"class.v8::internal::TorqueGeneratedJSSpecialObject" = type { %"class.v8::internal::JSCustomElementsObject" }
%"class.v8::internal::JSCustomElementsObject" = type { %"class.v8::internal::TorqueGeneratedJSCustomElementsObject" }
%"class.v8::internal::TorqueGeneratedJSCustomElementsObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef" = type { %"class.v8::internal::JSDate" }
%"class.v8::internal::JSDate" = type { %"class.v8::internal::TorqueGeneratedJSDate" }
%"class.v8::internal::TorqueGeneratedJSDate" = type { %"class.v8::internal::JSObject" }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::PerIsolateAssertScope" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::AbstractCode" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef" = type { %"class.v8::internal::SharedFunctionInfo" }
%"class.v8::internal::JSMessageObject" = type { %"class.v8::internal::JSObject" }
%"struct.v8::internal::Script::PositionInfo" = type { i32, i32, i32, i32 }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::PropertyCallbackInfo.1245" = type { i64* }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_16NumberDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE = comdat any

$_ZN2v88internal8JSObject20UpdateAllocationSiteILNS0_24AllocationSiteUpdateModeE1EEEbNS0_6HandleIS1_EENS0_12ElementsKindE = comdat any

$_ZN2v88internal14AllocationSite24DigestTransitionFeedbackILNS0_24AllocationSiteUpdateModeE1EEEbNS0_6HandleIS1_EENS0_12ElementsKindE = comdat any

$_ZN2v88internal8JSObject20UpdateAllocationSiteILNS0_24AllocationSiteUpdateModeE0EEEbNS0_6HandleIS1_EENS0_12ElementsKindE = comdat any

$_ZN2v88internal14AllocationSite24DigestTransitionFeedbackILNS0_24AllocationSiteUpdateModeE0EEEbNS0_6HandleIS1_EENS0_12ElementsKindE = comdat any

$_ZN2v88internal10JSReceiver24GetOwnPropertyAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE = comdat any

$_ZNK2v88internal14LookupIterator14GetInterceptorEv = comdat any

$_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE4EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE = comdat any

$_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE5EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE = comdat any

$_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE = comdat any

$_ZNK2v88internal18SharedFunctionInfo4NameEv = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

$_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal25PropertyCallbackArguments18CallIndexedDeleterENS0_6HandleINS0_15InterceptorInfoEEEj = comdat any

$_ZN2v88internal25PropertyCallbackArguments16CallNamedDeleterENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE0EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE = comdat any

$_ZNK2v88internal12JSTypedArray9GetLengthEv = comdat any

$_ZN2v88internal17PrototypeIterator7AdvanceEv = comdat any

$_ZN2v88internal8JSObject24EnsureCanContainElementsINS0_14FullObjectSlotEEEvNS0_6HandleIS1_EET_jNS0_18EnsureElementsModeE = comdat any

$_ZN2v88internal6JSDate15SetCachedFieldsElPNS0_9DateCacheE = comdat any

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

$_ZNK2v88internal17PrototypeIterator9HasAccessEv = comdat any

$_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv = comdat any

$_ZN2v88internal25PropertyCallbackArguments18CallIndexedDefinerENS0_6HandleINS0_15InterceptorInfoEEEjRKNS_18PropertyDescriptorE = comdat any

$_ZN2v88internal25PropertyCallbackArguments16CallNamedDefinerENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEERKNS_18PropertyDescriptorE = comdat any

$_ZNK2v88internal3Map21GetIndexedInterceptorENS0_16PtrComprCageBaseE = comdat any

$_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal25PropertyCallbackArguments30BasicCallIndexedGetterCallbackEPFvjRKNS_20PropertyCallbackInfoINS_5ValueEEEEjNS0_6HandleINS0_6ObjectEEE = comdat any

$_ZN2v88internal25PropertyCallbackArguments28BasicCallNamedGetterCallbackEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEENS0_6HandleINS0_4NameEEENSC_INS0_6ObjectEEESG_ = comdat any

$_ZN2v88internal25PropertyCallbackArguments16CallIndexedQueryENS0_6HandleINS0_15InterceptorInfoEEEj = comdat any

$_ZN2v88internal25PropertyCallbackArguments14CallNamedQueryENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal25PropertyCallbackArguments17CallIndexedSetterENS0_6HandleINS0_15InterceptorInfoEEEjNS2_INS0_6ObjectEEE = comdat any

$_ZN2v88internal25PropertyCallbackArguments15CallNamedSetterENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEENS2_INS0_6ObjectEEE = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal11Relocatable21PostGarbageCollectionEv = comdat any

$_ZN2v88internal11RelocatableD2Ev = comdat any

$_ZN2v88internal11RelocatableD0Ev = comdat any

$_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_16GlobalDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE = comdat any

$_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_14NameDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE = comdat any

$_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_ = comdat any

$_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 = comdat any

$_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal11RelocatableE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Copying data properties\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [79 x i8] c"JSObject::CreateDataProperty(&it, prop_value, Just(kThrowOnError)) .FromJust()\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"Object.defineProperty\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"success.FromJust()\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"Object.defineProperties\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"status.FromJust()\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"<JSArray[%u]>\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"<JSBoundFunction\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c" (BoundTargetFunction %p)>\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"<JSWeakMap>\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"<JSWeakSet>\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"<JSRegExp\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"<JSFunction \00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"<JSFunction\00", align 1
@_ZN2v88internal21FLAG_trace_file_namesE = external local_unnamed_addr global i8, align 1
@.str.18 = private unnamed_addr constant [3 x i8] c" <\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c" (sfi = %p)\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"<JSGenerator>\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"<JSAsyncFunctionObject>\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"<JS AsyncGenerator>\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"!!!INVALID CONSTRUCTOR!!!\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"!!!INVALID SHARED ON CONSTRUCTOR!!!\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"<GlobalObject \00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c" %smap = %p\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"deprecated-\00", align 1
@.str.29 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"<RemoteObject>\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"<JS%sObject\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"Global \00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c" value = \00", align 1
@.str.34 = private unnamed_addr constant [22 x i8] c"elements transition [\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"] in \00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c" for \00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c" from \00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.41 = private unnamed_addr constant [21 x i8] c"[migrating to slow]\0A\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"[migrating]\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c":%s->%s \00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"{symbol %p}\00", align 1
@.str.45 = private unnamed_addr constant [22 x i8] c"elements_kind[%i->%i]\00", align 1
@_ZN2v88internal26FLAG_trace_prototype_usersE = external local_unnamed_addr global i8, align 1
@.str.46 = private unnamed_addr constant [49 x i8] c"Moving prototype_info %p from map %p to map %p.\0A\00", align 1
@.str.47 = private unnamed_addr constant [29 x i8] c"new_map->is_dictionary_map()\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"ForceSetPrototype\00", align 1
@_ZN2v88internal20FLAG_trace_migrationE = external local_unnamed_addr global i8, align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.49 = private unnamed_addr constant [43 x i8] c"LookupIterator::ACCESS_CHECK != it.state()\00", align 1
@.str.50 = private unnamed_addr constant [113 x i8] c"Object::AddDataProperty(&it, value, attributes, Just(ShouldThrow::kThrowOnError), StoreOrigin::kNamed) .IsJust()\00", align 1
@_ZN2v88internal13FLAG_log_mapsE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str.51 = private unnamed_addr constant [11 x i8] c"SlowToFast\00", align 1
@.str.52 = private unnamed_addr constant [17 x i8] c"k.IsUniqueName()\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"PreventExtensions\00", align 1
@.str.54 = private unnamed_addr constant [36 x i8] c"GetPropertyAttributes(&it).IsJust()\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c"NormalizeAsPrototype\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"OptimizeAsPrototype\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"CopyAsPrototype\00", align 1
@.str.58 = private unnamed_addr constant [52 x i8] c"Registering %p as a user of prototype %p (map=%p).\0A\00", align 1
@.str.59 = private unnamed_addr constant [45 x i8] c"Unregistering %p as a user of prototype %p.\0A\00", align 1
@.str.60 = private unnamed_addr constant [59 x i8] c"JSArray::cast(*object).length().ToArrayLength(&old_length)\00", align 1
@.str.61 = private unnamed_addr constant [69 x i8] c"Fatal JavaScript invalid size error when transitioning elements kind\00", align 1
@_ZN2v88internal30FLAG_log_internal_timer_eventsE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE = external local_unnamed_addr global i8, align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"!handle_.is_null()\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1225", align 4
@.str.63 = private unnamed_addr constant [27 x i8] c"interceptor-indexed-define\00", align 1
@_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.64 = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.runtime\00", align 1
@.str.65 = private unnamed_addr constant [20 x i8] c"V8.ExternalCallback\00", align 1
@_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.66 = private unnamed_addr constant [25 x i8] c"interceptor-named-define\00", align 1
@.str.67 = private unnamed_addr constant [38 x i8] c"v8::IndexedPropertyDescriptorCallback\00", align 1
@.str.68 = private unnamed_addr constant [36 x i8] c"v8::NamedPropertyDescriptorCallback\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"Invalid property descriptor.\00", align 1
@.str.70 = private unnamed_addr constant [31 x i8] c"interceptor-indexed-descriptor\00", align 1
@.str.71 = private unnamed_addr constant [29 x i8] c"interceptor-named-descriptor\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c"interceptor-indexed-getter\00", align 1
@.str.74 = private unnamed_addr constant [25 x i8] c"interceptor-named-getter\00", align 1
@.str.75 = private unnamed_addr constant [24 x i8] c"result->ToInt32(&value)\00", align 1
@.str.76 = private unnamed_addr constant [26 x i8] c"interceptor-indexed-query\00", align 1
@.str.77 = private unnamed_addr constant [24 x i8] c"interceptor-named-query\00", align 1
@.str.78 = private unnamed_addr constant [24 x i8] c"interceptor-indexed-set\00", align 1
@.str.79 = private unnamed_addr constant [22 x i8] c"interceptor-named-set\00", align 1
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.80 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.81 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.82 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.84 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.85 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.86 = private unnamed_addr constant [11 x i8] c"0 == value\00", align 1
@.str.87 = private unnamed_addr constant [11 x i8] c"0 <= value\00", align 1
@.str.88 = private unnamed_addr constant [36 x i8] c"static_cast<unsigned>(value) <= 255\00", align 1
@.str.89 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@.str.90 = private unnamed_addr constant [54 x i8] c"static_cast<unsigned>(value) < JSObject::kFieldsAdded\00", align 1
@.str.91 = private unnamed_addr constant [28 x i8] c"interceptor-indexed-deleter\00", align 1
@.str.92 = private unnamed_addr constant [26 x i8] c"interceptor-named-deleter\00", align 1
@_ZTVN2v88internal11RelocatableE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11Relocatable21PostGarbageCollectionEv to i8*)] }, comdat, align 8
@.str.93 = private unnamed_addr constant [39 x i8] c"!constructor_or_back_pointer().IsMap()\00", align 1
@.str.94 = private unnamed_addr constant [39 x i8] c"Invalidating prototype map %p 's cell\0A\00", align 1
@_ZN2v88internal24FLAG_unbox_double_arraysE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal16ElementsAccessor19elements_accessors_E = external local_unnamed_addr global %"class.v8::internal::ElementsAccessor"**, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.96 = private unnamed_addr constant [25 x i8] c"CopyForPreventExtensions\00", align 1
@.str.97 = private unnamed_addr constant [22 x i8] c"SlowPreventExtensions\00", align 1
@.str.98 = private unnamed_addr constant [29 x i8] c"SlowCopyForPreventExtensions\00", align 1
@.str.100 = private unnamed_addr constant [47 x i8] c"old_details.cell_type() == details.cell_type()\00", align 1
@.str.101 = private unnamed_addr constant [45 x i8] c"boilerplate->length().ToArrayLength(&length)\00", align 1
@_ZN2v88internal33FLAG_trace_track_allocation_sitesE = external local_unnamed_addr global i8, align 1
@.str.102 = private unnamed_addr constant [57 x i8] c"AllocationSite: JSArray %p boilerplate %supdated %s->%s\0A\00", align 1
@.str.103 = private unnamed_addr constant [9 x i8] c"(nested)\00", align 1
@.str.104 = private unnamed_addr constant [48 x i8] c"AllocationSite: JSArray %p site updated %s->%s\0A\00", align 1
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i64 0, i64 0)], align 8
@switch.table._ZN2v88internal8JSObject17SlowReverseLookupENS0_6ObjectE = private unnamed_addr constant [5 x i64] [i64 0, i64 0, i64 16384, i64 0, i64 0], align 8

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_16NumberDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = load i64, i64* %2, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = sext i32 %9 to i64
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %98, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds i64, i64* %1, i64 4
  %14 = getelementptr inbounds i64, i64* %1, i64 5
  %15 = and i32 %3, 1
  %16 = icmp eq i32 %15, 0
  %17 = and i32 %3, -2
  br i1 %16, label %18, label %20

18:                                               ; preds = %12
  %19 = shl i32 %3, 4
  br label %99

20:                                               ; preds = %12, %96
  %21 = phi i64 [ %97, %96 ], [ %5, %12 ]
  %22 = phi i64 [ %94, %96 ], [ 0, %12 ]
  %23 = and i64 %21, -4294967296
  %24 = mul i64 %22, 51539607552
  %25 = add i64 %24, 68719476736
  %26 = ashr exact i64 %25, 32
  %27 = add i64 %21, 7
  %28 = add i64 %27, %26
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %23, %31
  %33 = load i64, i64* %13, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %30, %34
  br i1 %35, label %93, label %36

36:                                               ; preds = %20
  %37 = load i64, i64* %14, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %30, %38
  br i1 %39, label %93, label %40

40:                                               ; preds = %36
  %41 = and i64 %31, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %59, label %43

43:                                               ; preds = %40
  %44 = add i64 %32, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %23, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = icmp eq i16 %51, 64
  br i1 %52, label %53, label %59

53:                                               ; preds = %43
  %54 = add i64 %32, 7
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %93

59:                                               ; preds = %53, %43, %40
  %60 = add i64 %24, 103079215104
  %61 = ashr exact i64 %60, 32
  %62 = add i64 %27, %61
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, -2
  %66 = and i32 %64, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %89, label %68

68:                                               ; preds = %59
  %69 = add i64 %24, 85899345920
  %70 = ashr exact i64 %69, 32
  %71 = add i64 %27, %70
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %89, label %77

77:                                               ; preds = %68
  %78 = or i64 %23, %74
  %79 = add i64 %78, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %23, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 87
  %88 = select i1 %87, i32 %17, i32 %3
  br label %89

89:                                               ; preds = %59, %77, %68
  %90 = phi i32 [ %3, %59 ], [ %3, %68 ], [ %88, %77 ]
  %91 = shl i32 %90, 4
  %92 = or i32 %65, %91
  store atomic volatile i32 %92, i32* %63 monotonic, align 4
  br label %93

93:                                               ; preds = %89, %53, %36, %20
  %94 = add i64 %22, 1
  %95 = icmp eq i64 %94, %10
  br i1 %95, label %98, label %96

96:                                               ; preds = %93
  %97 = load i64, i64* %2, align 8
  br label %20

98:                                               ; preds = %93, %146, %4
  ret void

99:                                               ; preds = %149, %18
  %100 = phi i64 [ %150, %149 ], [ %5, %18 ]
  %101 = phi i64 [ %147, %149 ], [ 0, %18 ]
  %102 = and i64 %100, -4294967296
  %103 = mul i64 %101, 51539607552
  %104 = add i64 %103, 68719476736
  %105 = ashr exact i64 %104, 32
  %106 = add i64 %100, 7
  %107 = add i64 %106, %105
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %102, %110
  %112 = load i64, i64* %13, align 8
  %113 = trunc i64 %112 to i32
  %114 = icmp eq i32 %109, %113
  br i1 %114, label %146, label %115

115:                                              ; preds = %99
  %116 = load i64, i64* %14, align 8
  %117 = trunc i64 %116 to i32
  %118 = icmp eq i32 %109, %117
  br i1 %118, label %146, label %119

119:                                              ; preds = %115
  %120 = and i64 %110, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119
  %123 = add i64 %111, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %102, %126
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i16*
  %130 = load atomic i16, i16* %129 monotonic, align 2
  %131 = icmp eq i16 %130, 64
  br i1 %131, label %132, label %138

132:                                              ; preds = %122
  %133 = add i64 %111, 7
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %146

138:                                              ; preds = %119, %122, %132
  %139 = add i64 %103, 103079215104
  %140 = ashr exact i64 %139, 32
  %141 = add i64 %106, %140
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, -2
  %145 = or i32 %144, %19
  store atomic volatile i32 %145, i32* %142 monotonic, align 4
  br label %146

146:                                              ; preds = %132, %99, %115, %138
  %147 = add i64 %101, 1
  %148 = icmp eq i64 %147, %10
  br i1 %148, label %98, label %149

149:                                              ; preds = %146
  %150 = load i64, i64* %2, align 8
  br label %99
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal8JSObject20UpdateAllocationSiteILNS0_24AllocationSiteUpdateModeE1EEEbNS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::HeapObject", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp eq i16 %13, 1085
  br i1 %14, label %15, label %143

15:                                               ; preds = %2
  %16 = and i64 %4, -262144
  %17 = inttoptr i64 %16 to %"class.v8::internal::BasicMemoryChunk"*
  %18 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %17, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 24
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %143, label %22

22:                                               ; preds = %15
  %23 = tail call zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64 %4) #9
  br i1 %23, label %143, label %24

24:                                               ; preds = %22
  %25 = load i64, i64* %0, align 8
  %26 = and i64 %25, -262144
  %27 = or i64 %26, 16
  %28 = inttoptr i64 %27 to %"class.v8::internal::Heap"**
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 16
  %30 = and i64 %25, -4294967296
  %31 = add i64 %25, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = bitcast %"class.v8::internal::HeapObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %37, align 8
  %38 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %3, i64 %35) #9
  %39 = sext i32 %38 to i64
  %40 = add i64 %31, %39
  %41 = add i64 %40, 4
  %42 = and i64 %31, -262144
  %43 = inttoptr i64 %42 to %"class.v8::internal::Page"*
  %44 = and i64 %41, -262144
  %45 = inttoptr i64 %44 to %"class.v8::internal::Page"*
  %46 = icmp eq %"class.v8::internal::Page"* %43, %45
  br i1 %46, label %47, label %117

47:                                               ; preds = %24
  %48 = add i64 %25, %39
  %49 = ptrtoint %"class.v8::internal::Heap"* %29 to i64
  %50 = add i64 %49, -41416
  %51 = inttoptr i64 %50 to %"class.v8::internal::Isolate"*
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 0, i32 7, i32 0, i64 534
  %53 = load i64, i64* %52, align 8
  %54 = inttoptr i64 %40 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = trunc i64 %53 to i32
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %117

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %43, i64 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 524288
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %79, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %43, i64 0, i32 0, i32 0, i32 8, i32 0
  %65 = bitcast %"struct.std::__1::__atomic_base.69"* %64 to i64*
  %66 = load atomic i64, i64* %65 seq_cst, align 64
  %67 = inttoptr i64 %66 to %"class.v8::internal::SemiSpace"*
  %68 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %67, i64 0, i32 5
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %43, i64 0, i32 0, i32 0, i32 3
  %71 = load i64, i64* %70, align 8
  %72 = icmp ugt i64 %71, %69
  br i1 %72, label %117, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %43, i64 0, i32 0, i32 0, i32 4
  %75 = load i64, i64* %74, align 32
  %76 = icmp ule i64 %75, %69
  %77 = icmp ult i64 %31, %69
  %78 = or i1 %77, %76
  br i1 %78, label %117, label %79

79:                                               ; preds = %73, %58
  %80 = trunc i64 %48 to i32
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %117, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %29, i64 0, i32 24
  %84 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %83, align 8
  %85 = icmp eq %"class.v8::internal::NewSpace"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %84, i64 0, i32 0, i32 1, i32 1
  %88 = load i64, i64* %87, align 8
  br label %89

89:                                               ; preds = %86, %82
  %90 = phi i64 [ %88, %86 ], [ 0, %82 ]
  %91 = icmp eq i64 %40, %90
  br i1 %91, label %117, label %92

92:                                               ; preds = %89
  %93 = and i64 %48, -4294967296
  %94 = add i64 %48, 3
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %93, %97
  %99 = and i64 %97, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %92
  %102 = add i64 %98, -1
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %93, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = icmp eq i16 %109, 90
  br i1 %110, label %111, label %117

111:                                              ; preds = %101
  %112 = add i64 %98, 15
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 469762048
  %116 = icmp eq i32 %115, 268435456
  br i1 %116, label %117, label %118

117:                                              ; preds = %24, %47, %73, %79, %63, %111, %101, %92, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  br label %143

118:                                              ; preds = %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %119 = load i32, i32* %95, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %93, %120
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 31, i32 4
  %123 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %122, align 8
  %124 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %118
  %126 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %123, i64 %121) #9
  br label %140

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 31, i32 0
  %129 = load i64*, i64** %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 31, i32 1
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %129, %131
  br i1 %132, label %133, label %135

133:                                              ; preds = %127
  %134 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %51) #9
  br label %135

135:                                              ; preds = %133, %127
  %136 = phi i64* [ %134, %133 ], [ %129, %127 ]
  %137 = ptrtoint i64* %136 to i64
  %138 = add i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  store i64* %139, i64** %128, align 8
  store i64 %121, i64* %136, align 8
  br label %140

140:                                              ; preds = %125, %135
  %141 = phi i64* [ %126, %125 ], [ %136, %135 ]
  %142 = call zeroext i1 @_ZN2v88internal14AllocationSite24DigestTransitionFeedbackILNS0_24AllocationSiteUpdateModeE1EEEbNS0_6HandleIS1_EENS0_12ElementsKindE(i64* %141, i8 zeroext %1)
  br label %143

143:                                              ; preds = %15, %140, %117, %22, %2
  %144 = phi i1 [ false, %2 ], [ false, %15 ], [ false, %22 ], [ %142, %140 ], [ false, %117 ]
  ret i1 %144
}

declare zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal14AllocationSite24DigestTransitionFeedbackILNS0_24AllocationSiteUpdateModeE1EEEbNS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = add i64 %3, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %120, label %15

15:                                               ; preds = %2
  %16 = and i64 %3, -4294967296
  %17 = zext i32 %12 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %16, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 1085
  br i1 %27, label %28, label %120

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %30 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %31 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %30, i64 %18) #9
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -1
  %36 = inttoptr i64 %35 to i32*
  br label %50

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %41 = load i64*, i64** %40, align 8
  %42 = icmp eq i64* %39, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #9
  br label %45

45:                                               ; preds = %43, %37
  %46 = phi i64* [ %44, %43 ], [ %39, %37 ]
  %47 = ptrtoint i64* %46 to i64
  %48 = add i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  store i64* %49, i64** %38, align 8
  store i64 %18, i64* %46, align 8
  br label %50

50:                                               ; preds = %32, %45
  %51 = phi i32* [ %36, %32 ], [ %20, %45 ]
  %52 = phi i64 [ %34, %32 ], [ %18, %45 ]
  %53 = phi i64* [ %33, %32 ], [ %46, %45 ]
  %54 = and i64 %52, -4294967296
  %55 = load atomic i32, i32* %51 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %54, %56
  %58 = add i64 %57, 10
  %59 = inttoptr i64 %58 to i8*
  %60 = load i8, i8* %59, align 1
  %61 = lshr i8 %60, 2
  %62 = and i8 %60, 4
  %63 = icmp ne i8 %62, 0
  %64 = icmp ult i8 %60, 24
  %65 = and i1 %64, %63
  %66 = icmp ult i8 %1, 7
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %77

68:                                               ; preds = %50
  %69 = lshr i8 85, %1
  %70 = and i8 %69, 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = zext i8 %1 to i56
  %74 = shl nuw nsw i56 %73, 3
  %75 = lshr i56 1971445840412929, %74
  %76 = trunc i56 %75 to i8
  br label %77

77:                                               ; preds = %68, %72, %50
  %78 = phi i8 [ %1, %50 ], [ %76, %72 ], [ %1, %68 ]
  %79 = tail call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %61, i8 zeroext %78) #9
  br i1 %79, label %80, label %142

80:                                               ; preds = %77
  %81 = load i64, i64* %53, align 8
  %82 = and i64 %81, -4294967296
  %83 = add i64 %81, 11
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = and i64 %86, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %80
  %91 = icmp slt i32 %85, 0
  br i1 %91, label %116, label %92, !prof !2

92:                                               ; preds = %90
  %93 = lshr i32 %85, 1
  br label %117

94:                                               ; preds = %80
  %95 = add i64 %87, -1
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %82, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load atomic i16, i16* %101 monotonic, align 2
  %103 = icmp eq i16 %102, 66
  br i1 %103, label %104, label %116, !prof !3

104:                                              ; preds = %94
  %105 = add i64 %87, 3
  %106 = inttoptr i64 %105 to double*
  %107 = load double, double* %106, align 1
  %108 = fadd double %107, 0x4330000000000000
  %109 = bitcast double %108 to i64
  %110 = and i64 %109, -4294967296
  %111 = icmp eq i64 %110, 4841369599423283200
  br i1 %111, label %112, label %116, !prof !3

112:                                              ; preds = %104
  %113 = trunc i64 %109 to i32
  %114 = uitofp i32 %113 to double
  %115 = fcmp oeq double %107, %114
  br i1 %115, label %117, label %116, !prof !4

116:                                              ; preds = %104, %94, %90, %112
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.101, i64 0, i64 0)) #14
  unreachable

117:                                              ; preds = %92, %112
  %118 = phi i32 [ %93, %92 ], [ %113, %112 ]
  %119 = icmp ugt i32 %118, 8192
  br i1 %119, label %142, label %143

120:                                              ; preds = %2, %15
  %121 = lshr i32 %12, 1
  %122 = trunc i32 %121 to i8
  %123 = and i8 %122, 63
  %124 = and i8 %122, 1
  %125 = icmp ne i8 %124, 0
  %126 = icmp ult i8 %123, 6
  %127 = and i1 %126, %125
  %128 = icmp ult i8 %1, 7
  %129 = and i1 %127, %128
  br i1 %129, label %130, label %139

130:                                              ; preds = %120
  %131 = lshr i8 85, %1
  %132 = and i8 %131, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %139, label %134

134:                                              ; preds = %130
  %135 = zext i8 %1 to i56
  %136 = shl nuw nsw i56 %135, 3
  %137 = lshr i56 1971445840412929, %136
  %138 = trunc i56 %137 to i8
  br label %139

139:                                              ; preds = %130, %134, %120
  %140 = phi i8 [ %1, %120 ], [ %138, %134 ], [ %1, %130 ]
  %141 = tail call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %123, i8 zeroext %140) #9
  br i1 %141, label %143, label %142

142:                                              ; preds = %139, %117, %77
  br label %143

143:                                              ; preds = %139, %117, %142
  %144 = phi i1 [ false, %142 ], [ true, %139 ], [ true, %117 ]
  ret i1 %144
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal8JSObject20UpdateAllocationSiteILNS0_24AllocationSiteUpdateModeE0EEEbNS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::HeapObject", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp eq i16 %13, 1085
  br i1 %14, label %15, label %143

15:                                               ; preds = %2
  %16 = and i64 %4, -262144
  %17 = inttoptr i64 %16 to %"class.v8::internal::BasicMemoryChunk"*
  %18 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %17, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 24
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %143, label %22

22:                                               ; preds = %15
  %23 = tail call zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64 %4) #9
  br i1 %23, label %143, label %24

24:                                               ; preds = %22
  %25 = load i64, i64* %0, align 8
  %26 = and i64 %25, -262144
  %27 = or i64 %26, 16
  %28 = inttoptr i64 %27 to %"class.v8::internal::Heap"**
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 16
  %30 = and i64 %25, -4294967296
  %31 = add i64 %25, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = bitcast %"class.v8::internal::HeapObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %37, align 8
  %38 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %3, i64 %35) #9
  %39 = sext i32 %38 to i64
  %40 = add i64 %31, %39
  %41 = add i64 %40, 4
  %42 = and i64 %31, -262144
  %43 = inttoptr i64 %42 to %"class.v8::internal::Page"*
  %44 = and i64 %41, -262144
  %45 = inttoptr i64 %44 to %"class.v8::internal::Page"*
  %46 = icmp eq %"class.v8::internal::Page"* %43, %45
  br i1 %46, label %47, label %117

47:                                               ; preds = %24
  %48 = add i64 %25, %39
  %49 = ptrtoint %"class.v8::internal::Heap"* %29 to i64
  %50 = add i64 %49, -41416
  %51 = inttoptr i64 %50 to %"class.v8::internal::Isolate"*
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 0, i32 7, i32 0, i64 534
  %53 = load i64, i64* %52, align 8
  %54 = inttoptr i64 %40 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = trunc i64 %53 to i32
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %117

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %43, i64 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 524288
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %79, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %43, i64 0, i32 0, i32 0, i32 8, i32 0
  %65 = bitcast %"struct.std::__1::__atomic_base.69"* %64 to i64*
  %66 = load atomic i64, i64* %65 seq_cst, align 64
  %67 = inttoptr i64 %66 to %"class.v8::internal::SemiSpace"*
  %68 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %67, i64 0, i32 5
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %43, i64 0, i32 0, i32 0, i32 3
  %71 = load i64, i64* %70, align 8
  %72 = icmp ugt i64 %71, %69
  br i1 %72, label %117, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %43, i64 0, i32 0, i32 0, i32 4
  %75 = load i64, i64* %74, align 32
  %76 = icmp ule i64 %75, %69
  %77 = icmp ult i64 %31, %69
  %78 = or i1 %77, %76
  br i1 %78, label %117, label %79

79:                                               ; preds = %73, %58
  %80 = trunc i64 %48 to i32
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %117, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %29, i64 0, i32 24
  %84 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %83, align 8
  %85 = icmp eq %"class.v8::internal::NewSpace"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %84, i64 0, i32 0, i32 1, i32 1
  %88 = load i64, i64* %87, align 8
  br label %89

89:                                               ; preds = %86, %82
  %90 = phi i64 [ %88, %86 ], [ 0, %82 ]
  %91 = icmp eq i64 %40, %90
  br i1 %91, label %117, label %92

92:                                               ; preds = %89
  %93 = and i64 %48, -4294967296
  %94 = add i64 %48, 3
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %93, %97
  %99 = and i64 %97, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %92
  %102 = add i64 %98, -1
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %93, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = icmp eq i16 %109, 90
  br i1 %110, label %111, label %117

111:                                              ; preds = %101
  %112 = add i64 %98, 15
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 469762048
  %116 = icmp eq i32 %115, 268435456
  br i1 %116, label %117, label %118

117:                                              ; preds = %24, %47, %73, %79, %63, %111, %101, %92, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  br label %143

118:                                              ; preds = %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %119 = load i32, i32* %95, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %93, %120
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 31, i32 4
  %123 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %122, align 8
  %124 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %118
  %126 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %123, i64 %121) #9
  br label %140

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 31, i32 0
  %129 = load i64*, i64** %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 31, i32 1
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %129, %131
  br i1 %132, label %133, label %135

133:                                              ; preds = %127
  %134 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %51) #9
  br label %135

135:                                              ; preds = %133, %127
  %136 = phi i64* [ %134, %133 ], [ %129, %127 ]
  %137 = ptrtoint i64* %136 to i64
  %138 = add i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  store i64* %139, i64** %128, align 8
  store i64 %121, i64* %136, align 8
  br label %140

140:                                              ; preds = %125, %135
  %141 = phi i64* [ %126, %125 ], [ %136, %135 ]
  %142 = call zeroext i1 @_ZN2v88internal14AllocationSite24DigestTransitionFeedbackILNS0_24AllocationSiteUpdateModeE0EEEbNS0_6HandleIS1_EENS0_12ElementsKindE(i64* %141, i8 zeroext %1)
  br label %143

143:                                              ; preds = %15, %140, %117, %22, %2
  %144 = phi i1 [ false, %2 ], [ false, %15 ], [ false, %22 ], [ %142, %140 ], [ false, %117 ]
  ret i1 %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal14AllocationSite24DigestTransitionFeedbackILNS0_24AllocationSiteUpdateModeE0EEEbNS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::AllocationSite>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::DependentCode", align 8
  %5 = alloca %"class.v8::internal::DependentCode", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = add i64 %6, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %147, label %18

18:                                               ; preds = %2
  %19 = and i64 %6, -4294967296
  %20 = zext i32 %15 to i64
  %21 = or i64 %19, %20
  %22 = add i64 %21, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %19, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 1085
  br i1 %30, label %31, label %147

31:                                               ; preds = %18
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %33 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %32, align 8
  %34 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %33, i64 %21) #9
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, -1
  %39 = inttoptr i64 %38 to i32*
  br label %53

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #9
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %21, i64* %49, align 8
  br label %53

53:                                               ; preds = %35, %48
  %54 = phi i32* [ %39, %35 ], [ %23, %48 ]
  %55 = phi i64 [ %37, %35 ], [ %21, %48 ]
  %56 = phi i64* [ %36, %35 ], [ %49, %48 ]
  %57 = and i64 %55, -4294967296
  %58 = load atomic i32, i32* %54 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %57, %59
  %61 = add i64 %60, 10
  %62 = inttoptr i64 %61 to i8*
  %63 = load i8, i8* %62, align 1
  %64 = lshr i8 %63, 2
  %65 = and i8 %63, 4
  %66 = icmp ne i8 %65, 0
  %67 = icmp ult i8 %63, 24
  %68 = and i1 %67, %66
  %69 = icmp ult i8 %1, 7
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %80

71:                                               ; preds = %53
  %72 = lshr i8 85, %1
  %73 = and i8 %72, 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = zext i8 %1 to i56
  %77 = shl nuw nsw i56 %76, 3
  %78 = lshr i56 1971445840412929, %77
  %79 = trunc i56 %78 to i8
  br label %80

80:                                               ; preds = %71, %75, %53
  %81 = phi i8 [ %1, %53 ], [ %79, %75 ], [ %1, %71 ]
  %82 = tail call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %64, i8 zeroext %81) #9
  br i1 %82, label %83, label %195

83:                                               ; preds = %80
  %84 = load i64, i64* %56, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, 11
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = and i64 %89, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %83
  %94 = icmp slt i32 %88, 0
  br i1 %94, label %119, label %95, !prof !2

95:                                               ; preds = %93
  %96 = lshr i32 %88, 1
  br label %120

97:                                               ; preds = %83
  %98 = add i64 %90, -1
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %85, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = icmp eq i16 %105, 66
  br i1 %106, label %107, label %119, !prof !3

107:                                              ; preds = %97
  %108 = add i64 %90, 3
  %109 = inttoptr i64 %108 to double*
  %110 = load double, double* %109, align 1
  %111 = fadd double %110, 0x4330000000000000
  %112 = bitcast double %111 to i64
  %113 = and i64 %112, -4294967296
  %114 = icmp eq i64 %113, 4841369599423283200
  br i1 %114, label %115, label %119, !prof !3

115:                                              ; preds = %107
  %116 = trunc i64 %112 to i32
  %117 = uitofp i32 %116 to double
  %118 = fcmp oeq double %110, %117
  br i1 %118, label %120, label %119, !prof !4

119:                                              ; preds = %107, %97, %93, %115
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.101, i64 0, i64 0)) #14
  unreachable

120:                                              ; preds = %95, %115
  %121 = phi i32 [ %96, %95 ], [ %116, %115 ]
  %122 = icmp ult i32 %121, 8193
  br i1 %122, label %123, label %195

123:                                              ; preds = %120
  %124 = load i8, i8* @_ZN2v88internal33FLAG_trace_track_allocation_sitesE, align 1, !range !5
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %137, label %126

126:                                              ; preds = %123
  %127 = bitcast %"class.v8::internal::Handle<v8::internal::AllocationSite>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #9
  %128 = load i64, i64* %0, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AllocationSite>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AllocationSite>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AllocationSite>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AllocationSite>::ObjectRef"* %3, i64 0, i32 0
  %131 = call zeroext i1 @_ZN2v88internal14AllocationSite8IsNestedEv(%"class.v8::internal::AllocationSite"* nonnull %130) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #9
  %132 = bitcast i64* %0 to i8**
  %133 = load i8*, i8** %132, align 8
  %134 = select i1 %131, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)
  %135 = call i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext %64) #9
  %136 = call i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext %81) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.102, i64 0, i64 0), i8* %133, i8* %134, i8* %135, i8* %136) #9
  br label %137

137:                                              ; preds = %123, %126
  call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %56, i8 zeroext %81)
  %138 = bitcast %"class.v8::internal::DependentCode"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #9
  %139 = load i64, i64* %0, align 8
  %140 = and i64 %139, -4294967296
  %141 = add i64 %139, 11
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %140, %144
  %146 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %145, i64* %146, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %4, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #9
  br label %195

147:                                              ; preds = %2, %18
  %148 = lshr i32 %15, 1
  %149 = trunc i32 %148 to i8
  %150 = and i8 %149, 63
  %151 = and i8 %149, 1
  %152 = icmp ne i8 %151, 0
  %153 = icmp ult i8 %150, 6
  %154 = and i1 %153, %152
  %155 = icmp ult i8 %1, 7
  %156 = and i1 %154, %155
  br i1 %156, label %157, label %166

157:                                              ; preds = %147
  %158 = lshr i8 85, %1
  %159 = and i8 %158, 1
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %166, label %161

161:                                              ; preds = %157
  %162 = zext i8 %1 to i56
  %163 = shl nuw nsw i56 %162, 3
  %164 = lshr i56 1971445840412929, %163
  %165 = trunc i56 %164 to i8
  br label %166

166:                                              ; preds = %157, %161, %147
  %167 = phi i8 [ %1, %147 ], [ %165, %161 ], [ %1, %157 ]
  %168 = tail call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %150, i8 zeroext %167) #9
  br i1 %168, label %169, label %195

169:                                              ; preds = %166
  %170 = load i8, i8* @_ZN2v88internal33FLAG_trace_track_allocation_sitesE, align 1, !range !5
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %177, label %172

172:                                              ; preds = %169
  %173 = bitcast i64* %0 to i8**
  %174 = load i8*, i8** %173, align 8
  %175 = tail call i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext %150) #9
  %176 = tail call i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext %167) #9
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.104, i64 0, i64 0), i8* %174, i8* %175, i8* %176) #9
  br label %177

177:                                              ; preds = %169, %172
  %178 = load i64, i64* %0, align 8
  %179 = add i64 %178, 3
  %180 = inttoptr i64 %179 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = zext i8 %167 to i32
  %183 = shl nuw nsw i32 %182, 1
  %184 = and i32 %181, -128
  %185 = or i32 %184, %183
  store atomic volatile i32 %185, i32* %180 monotonic, align 4
  %186 = bitcast %"class.v8::internal::DependentCode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #9
  %187 = load i64, i64* %0, align 8
  %188 = and i64 %187, -4294967296
  %189 = add i64 %187, 11
  %190 = inttoptr i64 %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i64
  %193 = or i64 %188, %192
  %194 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %193, i64* %194, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %5, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #9
  br label %195

195:                                              ; preds = %80, %137, %120, %166, %177
  %196 = phi i1 [ true, %177 ], [ false, %166 ], [ false, %80 ], [ true, %137 ], [ false, %120 ]
  ret i1 %196
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  br label %3

3:                                                ; preds = %45, %1
  %4 = load i32, i32* %2, align 4
  switch i32 %4, label %45 [
    i32 4, label %46
    i32 6, label %48
    i32 7, label %5
    i32 3, label %6
    i32 2, label %25
    i32 0, label %33
    i32 1, label %46
    i32 5, label %48
  ]

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %11, i64 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %15, label %22

15:                                               ; preds = %6
  %16 = bitcast %"class.v8::internal::Isolate"* %8 to %"class.v8::internal::Factory"*
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %18 = load i64, i64* %17, align 8
  %19 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %16, i64 %18, i1 zeroext true) #9
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast %"class.v8::internal::Handle.1137"* %11 to i64*
  store i64 %20, i64* %21, align 8
  br label %22

22:                                               ; preds = %6, %15
  %23 = phi i64* [ %19, %15 ], [ %13, %6 ]
  %24 = tail call i16 @_ZN2v88internal7JSProxy11HasPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %8, i64* %10, i64* %23) #9
  br label %48

25:                                               ; preds = %3
  %26 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0) #9
  %27 = tail call fastcc i64 @_ZN2v88internal12_GLOBAL__N_144GetPropertyAttributesWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEE(%"class.v8::internal::LookupIterator"* %0, i64* %26) #9
  %28 = trunc i64 %27 to i8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %46, label %30

30:                                               ; preds = %25
  %31 = and i64 %27, -4294967296
  %32 = icmp eq i64 %31, 274877906944
  br i1 %32, label %45, label %46

33:                                               ; preds = %3
  %34 = tail call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %34, label %45, label %35

35:                                               ; preds = %33
  %36 = tail call i64 @_ZN2v88internal8JSObject42GetPropertyAttributesWithFailedAccessCheckEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0)
  %37 = trunc i64 %36 to i8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %35
  %40 = and i64 %36, -4294967296
  %41 = icmp ne i64 %40, 274877906944
  %42 = zext i1 %41 to i16
  %43 = shl nuw nsw i16 %42, 8
  %44 = or i16 %43, 1
  br label %48

45:                                               ; preds = %3, %30, %33
  tail call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %3

46:                                               ; preds = %25, %30, %3, %3
  %47 = phi i16 [ 1, %3 ], [ 257, %30 ], [ 0, %25 ], [ 1, %3 ]
  br label %48

48:                                               ; preds = %3, %3, %46, %39, %35, %22
  %49 = phi i16 [ %24, %22 ], [ %44, %39 ], [ 0, %35 ], [ %47, %46 ], [ 257, %3 ], [ 257, %3 ]
  ret i16 %49
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare i16 @_ZN2v88internal7JSProxy11HasPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8JSObject36GetPropertyAttributesWithInterceptorEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0)
  %3 = tail call fastcc i64 @_ZN2v88internal12_GLOBAL__N_144GetPropertyAttributesWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEE(%"class.v8::internal::LookupIterator"* %0, i64* %2)
  ret i64 %3
}

declare zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8JSObject42GetPropertyAttributesWithFailedAccessCheckEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i64* @_ZNK2v88internal14LookupIterator34GetInterceptorForFailedAccessCheckEv(%"class.v8::internal::LookupIterator"* %0) #9
  %7 = icmp eq i64* %6, null
  br i1 %7, label %8, label %39

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 7, i32 0, i64 5
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  br label %12

12:                                               ; preds = %8, %33
  %13 = tail call zeroext i1 @_ZN2v88internal8JSObject10AllCanReadEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0)
  br i1 %13, label %14, label %54

14:                                               ; preds = %12
  %15 = load i32, i32* %9, align 4
  %16 = icmp eq i32 %15, 5
  br i1 %16, label %17, label %25

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = lshr i32 %19, 3
  %21 = and i32 %20, 7
  %22 = zext i32 %21 to i64
  %23 = shl nuw nsw i64 %22, 32
  %24 = or i64 %23, 1
  br label %64

25:                                               ; preds = %14
  %26 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0) #9
  %27 = tail call fastcc i64 @_ZN2v88internal12_GLOBAL__N_144GetPropertyAttributesWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEE(%"class.v8::internal::LookupIterator"* %0, i64* %26) #9
  %28 = load i64, i64* %10, align 8
  %29 = load i64, i64* %11, align 8
  %30 = trunc i64 %29 to i32
  %31 = trunc i64 %28 to i32
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %54

33:                                               ; preds = %25
  %34 = trunc i64 %27 to i8
  %35 = icmp eq i8 %34, 0
  %36 = and i64 %27, -4294967296
  %37 = icmp eq i64 %36, 274877906944
  %38 = or i1 %35, %37
  br i1 %38, label %12, label %64

39:                                               ; preds = %1
  %40 = tail call fastcc i64 @_ZN2v88internal12_GLOBAL__N_144GetPropertyAttributesWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEE(%"class.v8::internal::LookupIterator"* %0, i64* nonnull %6)
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 7, i32 0, i64 5
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = trunc i64 %42 to i32
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %64

48:                                               ; preds = %39
  %49 = trunc i64 %40 to i8
  %50 = icmp eq i8 %49, 0
  %51 = and i64 %40, -4294967296
  %52 = icmp eq i64 %51, 274877906944
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %64

54:                                               ; preds = %25, %12, %48
  tail call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %3, i64* %5) #9
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 7, i32 0, i64 5
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = trunc i64 %56 to i32
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %64, label %62

62:                                               ; preds = %54
  %63 = tail call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %3) #9
  br label %64

64:                                               ; preds = %33, %54, %39, %62, %48, %17
  %65 = phi i64 [ %24, %17 ], [ 0, %62 ], [ %40, %48 ], [ 274877906945, %54 ], [ 0, %39 ], [ %27, %33 ]
  ret i64 %65
}

declare void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver14HasOwnPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %7 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %8 = alloca %"class.v8::internal::LookupIterator", align 8
  %9 = load i64, i64* %0, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 191
  br i1 %19, label %20, label %37

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #9
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast i64** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #9
  %24 = and i64 %9, -262144
  %25 = or i64 %24, 16
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 16
  %28 = add i64 %27, -41416
  %29 = inttoptr i64 %28 to %"class.v8::internal::Isolate"*
  %30 = bitcast %"class.v8::internal::LookupIterator::Key"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %3, %"class.v8::internal::Isolate"* %29, i64* %1) #9
  %31 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %3, i64 0, i32 0, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %3, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::Isolate"* %29, i64* %0, i64* %33, i64 %35, i64* %0, i32 1) #9
  %36 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::PropertyDescriptor"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #9
  br label %124

37:                                               ; preds = %2
  %38 = load atomic i32, i32* %12 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %10, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = icmp ugt i16 %43, 188
  br i1 %44, label %45, label %114

45:                                               ; preds = %37
  %46 = and i64 %9, -262144
  %47 = or i64 %46, 16
  %48 = inttoptr i64 %47 to i64*
  %49 = load i64, i64* %48, align 16
  %50 = add i64 %49, -41416
  %51 = inttoptr i64 %50 to %"class.v8::internal::Isolate"*
  %52 = bitcast %"class.v8::internal::LookupIterator::Key"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #9
  %53 = ptrtoint i64* %1 to i64
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %7, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %54, align 8
  %55 = load i64, i64* %1, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %7, i64 0, i32 1
  %57 = and i64 %55, -4294967296
  %58 = add i64 %55, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = icmp ult i16 %65, 64
  %67 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  br i1 %66, label %68, label %82

68:                                               ; preds = %45
  %69 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %69, align 8
  %70 = add i64 %55, 3
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = and i32 %72, -536870910
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %68
  %76 = lshr i32 %72, 2
  %77 = and i32 %76, 16777215
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br label %90

79:                                               ; preds = %68
  %80 = and i32 %72, 3
  %81 = icmp eq i32 %80, 2
  br i1 %81, label %82, label %83

82:                                               ; preds = %79, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br label %92

83:                                               ; preds = %79
  %84 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %5, i64* %56) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br i1 %84, label %90, label %85

85:                                               ; preds = %83
  %86 = load i64, i64* %1, align 8
  %87 = and i64 %86, -4294967296
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  br label %92

90:                                               ; preds = %83, %75
  %91 = bitcast %"class.v8::internal::LookupIterator::Key"* %7 to i64*
  store i64 %53, i64* %91, align 8
  br label %109

92:                                               ; preds = %85, %82
  %93 = phi i32* [ %89, %85 ], [ %59, %82 ]
  %94 = phi i64 [ %87, %85 ], [ %57, %82 ]
  store i64 -1, i64* %56, align 8
  %95 = load atomic i32, i32* %93 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %94, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = and i16 %100, -32
  %102 = icmp eq i16 %101, 32
  br i1 %102, label %103, label %107

103:                                              ; preds = %92
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 5, i32 0, i32 0, i32 0
  %105 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %104, align 8
  %106 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %105, %"class.v8::internal::Isolate"* %51, i64* %1) #9
  br label %107

107:                                              ; preds = %103, %92
  %108 = phi i64* [ %106, %103 ], [ %1, %92 ]
  store i64* %108, i64** %54, align 8
  br label %109

109:                                              ; preds = %90, %107
  %110 = phi i64* [ %1, %90 ], [ %108, %107 ]
  %111 = bitcast %"class.v8::internal::LookupIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %111) #9
  %112 = load i64, i64* %56, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %8, %"class.v8::internal::Isolate"* %51, i64* %0, i64* %110, i64 %112, i64* %0, i32 1) #9
  %113 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %111) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #9
  br label %124

114:                                              ; preds = %37
  %115 = tail call i64 @_ZN2v88internal10JSReceiver24GetOwnPropertyAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %0, i64* %1)
  %116 = trunc i64 %115 to i8
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %114
  %119 = and i64 %115, -4294967296
  %120 = icmp ne i64 %119, 274877906944
  %121 = zext i1 %120 to i16
  %122 = shl nuw nsw i16 %121, 8
  %123 = or i16 %122, 1
  br label %124

124:                                              ; preds = %118, %114, %109, %20
  %125 = phi i16 [ %36, %20 ], [ %113, %109 ], [ %123, %118 ], [ 0, %114 ]
  ret i16 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %5, %"class.v8::internal::Isolate"* %0, i64* %2)
  %8 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %10, i64 %12, i64* %1, i32 1) #9
  %13 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::PropertyDescriptor"* %3)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret i16 %13
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal10JSReceiver24GetOwnPropertyAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = ptrtoint i64* %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 1
  %18 = and i64 %16, -4294967296
  %19 = add i64 %16, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  %28 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  br i1 %27, label %29, label %43

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %30, align 8
  %31 = add i64 %16, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, -536870910
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = lshr i32 %33, 2
  %38 = and i32 %37, 16777215
  %39 = zext i32 %38 to i64
  store i64 %39, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %51

40:                                               ; preds = %29
  %41 = and i32 %33, 3
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %53

44:                                               ; preds = %40
  %45 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %3, i64* %17) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = load i64, i64* %1, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, -1
  %50 = inttoptr i64 %49 to i32*
  br label %53

51:                                               ; preds = %44, %36
  %52 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i64*
  store i64 %14, i64* %52, align 8
  br label %70

53:                                               ; preds = %46, %43
  %54 = phi i32* [ %50, %46 ], [ %20, %43 ]
  %55 = phi i64 [ %48, %46 ], [ %18, %43 ]
  store i64 -1, i64* %17, align 8
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, -32
  %63 = icmp eq i16 %62, 32
  br i1 %63, label %64, label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %65, align 8
  %67 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %66, %"class.v8::internal::Isolate"* %12, i64* %1) #9
  br label %68

68:                                               ; preds = %64, %53
  %69 = phi i64* [ %67, %64 ], [ %1, %53 ]
  store i64* %69, i64** %15, align 8
  br label %70

70:                                               ; preds = %51, %68
  %71 = phi i64* [ %1, %51 ], [ %69, %68 ]
  %72 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %72) #9
  %73 = load i64, i64* %17, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %12, i64* %0, i64* %71, i64 %73, i64* %0, i32 1) #9
  %74 = call i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %72) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  ret i64 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver15GetDataPropertyEPNS0_14LookupIteratorENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  br label %5

5:                                                ; preds = %35, %2
  %6 = load i32, i32* %3, align 4
  switch i32 %6, label %35 [
    i32 4, label %36
    i32 2, label %7
    i32 6, label %33
    i32 7, label %7
    i32 0, label %8
    i32 3, label %16
    i32 5, label %22
    i32 1, label %28
  ]

7:                                                ; preds = %5, %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %5
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %15, label %35, label %16

16:                                               ; preds = %5, %8, %14
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %17, align 8
  store i32 4, i32* %3, align 4
  %18 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %19 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %19, i64 160
  %21 = bitcast %"class.v8::internal::Factory"* %20 to i64*
  br label %41

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %23, align 8
  store i32 4, i32* %3, align 4
  %24 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %25 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %25, i64 160
  %27 = bitcast %"class.v8::internal::Factory"* %26 to i64*
  br label %41

28:                                               ; preds = %5
  %29 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %30 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 160
  %32 = bitcast %"class.v8::internal::Factory"* %31 to i64*
  br label %41

33:                                               ; preds = %5
  %34 = tail call i64* @_ZNK2v88internal14LookupIterator12GetDataValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* %0, i32 %1) #9
  br label %41

35:                                               ; preds = %5, %14
  tail call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %5

36:                                               ; preds = %5
  %37 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %38 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %38, i64 160
  %40 = bitcast %"class.v8::internal::Factory"* %39 to i64*
  br label %41

41:                                               ; preds = %36, %33, %28, %22, %16
  %42 = phi i64* [ %34, %33 ], [ %32, %28 ], [ %27, %22 ], [ %21, %16 ], [ %40, %36 ]
  ret i64* %42
}

declare i64* @_ZNK2v88internal14LookupIterator12GetDataValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver19HasInPrototypeChainEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %5 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2, i32 0, i32 0
  store i64* %1, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 3
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 4
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 6
  store i32 0, i32* %11, align 8
  %12 = icmp eq i64* %1, null
  br i1 %12, label %27, label %13, !prof !6

13:                                               ; preds = %3
  %14 = call zeroext i1 @_ZNK2v88internal17PrototypeIterator9HasAccessEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #9
  br i1 %14, label %15, label %28

15:                                               ; preds = %13
  %16 = icmp eq i64* %2, null
  br i1 %16, label %17, label %35

17:                                               ; preds = %15, %25
  %18 = call zeroext i1 @_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #9
  br i1 %18, label %19, label %53

19:                                               ; preds = %17
  %20 = load i8, i8* %10, align 4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %53

22:                                               ; preds = %19
  %23 = load i64*, i64** %8, align 8
  %24 = icmp eq i64* %23, null
  br i1 %24, label %53, label %25

25:                                               ; preds = %22
  %26 = call zeroext i1 @_ZNK2v88internal17PrototypeIterator9HasAccessEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #9
  br i1 %26, label %17, label %28

27:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #14
  unreachable

28:                                               ; preds = %51, %25, %13
  %29 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to %"class.v8::internal::Factory"**
  %30 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 176
  %32 = ptrtoint %"class.v8::internal::Factory"* %31 to i64
  %33 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2
  %34 = bitcast %"class.v8::internal::Handle.969"* %33 to i64*
  store i64 %32, i64* %34, align 8
  store i8 1, i8* %10, align 4
  br label %53

35:                                               ; preds = %15, %51
  %36 = call zeroext i1 @_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #9
  br i1 %36, label %37, label %53

37:                                               ; preds = %35
  %38 = load i8, i8* %10, align 4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %53

40:                                               ; preds = %37
  %41 = load i64*, i64** %8, align 8
  %42 = icmp eq i64* %41, %2
  br i1 %42, label %53, label %43

43:                                               ; preds = %40
  %44 = icmp eq i64* %41, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %43
  %46 = load i64, i64* %41, align 8
  %47 = load i64, i64* %2, align 8
  %48 = trunc i64 %46 to i32
  %49 = trunc i64 %47 to i32
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %45, %43
  %52 = call zeroext i1 @_ZNK2v88internal17PrototypeIterator9HasAccessEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #9
  br i1 %52, label %35, label %28

53:                                               ; preds = %37, %40, %45, %35, %22, %19, %17, %28
  %54 = phi i16 [ 1, %28 ], [ 0, %17 ], [ 1, %19 ], [ 257, %22 ], [ 0, %35 ], [ 1, %37 ], [ 257, %45 ], [ 257, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #9
  ret i16 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver23SetOrCopyDataPropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEENS0_25PropertiesEnumerationModeEPKNS0_12ScopedVectorIS7_EEb(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::ScopedVector"* readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %9 = alloca %"class.v8::internal::LookupIterator", align 8
  %10 = alloca %"class.v8::internal::Representation", align 1
  %11 = alloca %"class.v8::internal::String", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::LookupIterator", align 8
  %15 = alloca %"class.v8::internal::LookupIterator", align 8
  %16 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %17 = alloca %"class.v8::internal::LookupIterator", align 8
  %18 = alloca %"class.v8::internal::LookupIterator", align 8
  %19 = alloca %"class.v8::internal::GlobalDictionary", align 8
  %20 = alloca %"class.v8::internal::NameDictionary", align 8
  %21 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %22 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %23 = alloca %"class.v8::internal::LookupIterator", align 8
  %24 = load i64, i64* %2, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %894, label %27

27:                                               ; preds = %6
  %28 = and i64 %24, -4294967296
  %29 = add i64 %24, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp ugt i16 %36, 185
  br i1 %37, label %52, label %38

38:                                               ; preds = %27
  %39 = load atomic i32, i32* %30 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %28, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp ult i16 %44, 64
  br i1 %45, label %46, label %894

46:                                               ; preds = %38
  %47 = add i64 %24, 7
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  %51 = zext i1 %50 to i8
  br label %659

52:                                               ; preds = %27
  %53 = load i64, i64* %1, align 8
  %54 = and i64 %53, -262144
  %55 = or i64 %54, 16
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 16
  %58 = add i64 %57, -41416
  %59 = inttoptr i64 %58 to %"class.v8::internal::Isolate"*
  %60 = and i64 %53, -4294967296
  %61 = add i64 %53, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 acquire, align 4
  %69 = and i32 %68, 16777216
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %52
  tail call void @_ZN2v88internal8JSObject15MigrateInstanceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %59, i64* %1) #9
  br label %72

72:                                               ; preds = %71, %52
  %73 = load i64, i64* %2, align 8
  %74 = and i64 %73, -4294967296
  %75 = add i64 %73, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %74, %78
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 31, i32 4
  %81 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %80, align 8
  %82 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %72
  %84 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %81, i64 %79) #9
  %85 = load i64, i64* %84, align 8
  br label %99

86:                                               ; preds = %72
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 31, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 31, i32 1
  %90 = load i64*, i64** %89, align 8
  %91 = icmp eq i64* %88, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  %93 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %59) #9
  br label %94

94:                                               ; preds = %92, %86
  %95 = phi i64* [ %93, %92 ], [ %88, %86 ]
  %96 = ptrtoint i64* %95 to i64
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  store i64* %98, i64** %87, align 8
  store i64 %79, i64* %95, align 8
  br label %99

99:                                               ; preds = %94, %83
  %100 = phi i64 [ %85, %83 ], [ %79, %94 ]
  %101 = phi i64* [ %84, %83 ], [ %95, %94 ]
  %102 = add i64 %100, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load atomic i16, i16* %103 monotonic, align 2
  %105 = icmp ugt i16 %104, 188
  br i1 %105, label %106, label %662

106:                                              ; preds = %99
  %107 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #9
  %108 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %100, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %13, i64 0, i32 0
  %110 = call zeroext i1 @_ZNK2v88internal3Map23OnlyHasSimplePropertiesEv(%"class.v8::internal::Map"* nonnull %109) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #9
  br i1 %110, label %111, label %662

111:                                              ; preds = %106
  %112 = load i64, i64* %2, align 8
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 0, i32 7, i32 0, i64 29
  %117 = load i64, i64* %116, align 8
  %118 = trunc i64 %117 to i32
  %119 = icmp eq i32 %115, %118
  br i1 %119, label %120, label %662

120:                                              ; preds = %111
  %121 = load i64, i64* %101, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 0, i32 4
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %121, 23
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i64 %123, 4294967295
  %128 = icmp eq i64 %127, 0
  call void @llvm.assume(i1 %128) #9
  %129 = zext i32 %126 to i64
  %130 = or i64 %123, %129
  %131 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %80, align 8
  %132 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %120
  %134 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %131, i64 %130) #9
  br label %148

135:                                              ; preds = %120
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 31, i32 0
  %137 = load i64*, i64** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 31, i32 1
  %139 = load i64*, i64** %138, align 8
  %140 = icmp eq i64* %137, %139
  br i1 %140, label %141, label %143

141:                                              ; preds = %135
  %142 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %59) #9
  br label %143

143:                                              ; preds = %141, %135
  %144 = phi i64* [ %142, %141 ], [ %137, %135 ]
  %145 = ptrtoint i64* %144 to i64
  %146 = add i64 %145, 8
  %147 = inttoptr i64 %146 to i64*
  store i64* %147, i64** %136, align 8
  store i64 %130, i64* %144, align 8
  br label %148

148:                                              ; preds = %143, %133
  %149 = phi i64* [ %134, %133 ], [ %144, %143 ]
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 31
  %151 = bitcast %"struct.v8::internal::HandleScopeData"* %150 to i64*
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 31, i32 1
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 31, i32 2
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 31, i32 0
  %155 = icmp eq i32 %3, 0
  %156 = bitcast %"class.v8::internal::LookupIterator"* %14 to i8*
  %157 = ptrtoint i64* %2 to i64
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 0
  %159 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 1
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 2
  %161 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 3
  %162 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 4, i32 0
  %163 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 5
  %164 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 6, i32 0, i32 0
  %165 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 7, i32 0, i32 0
  %166 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 8, i32 0, i32 0
  %167 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 9, i32 0, i32 0
  %168 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 10
  %169 = bitcast %"class.v8::internal::Handle.1138"* %168 to i64*
  %170 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 11
  %171 = bitcast i64* %170 to i8*
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 5, i32 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %10, i64 0, i32 0
  %174 = bitcast %"class.v8::internal::LookupIterator"* %15 to i8*
  %175 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 0
  %176 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 1
  %177 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 2
  %178 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 3
  %179 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 4, i32 0
  %180 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 5
  %181 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 6, i32 0, i32 0
  %182 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 7, i32 0, i32 0
  %183 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 8, i32 0, i32 0
  %184 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 9, i32 0, i32 0
  %185 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 10
  %186 = bitcast %"class.v8::internal::Handle.1138"* %185 to i64*
  %187 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %15, i64 0, i32 11
  %188 = bitcast i64* %187 to i8*
  %189 = icmp eq %"class.v8::internal::ScopedVector"* %4, null
  %190 = getelementptr inbounds %"class.v8::internal::ScopedVector", %"class.v8::internal::ScopedVector"* %4, i64 0, i32 0, i32 1
  %191 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %12 to i8*
  %192 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %12, i64 0, i32 0
  %194 = getelementptr inbounds %"class.v8::internal::ScopedVector", %"class.v8::internal::ScopedVector"* %4, i64 0, i32 0, i32 0
  %195 = bitcast %"class.v8::internal::LookupIterator"* %18 to i8*
  %196 = ptrtoint i64* %1 to i64
  %197 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 0
  %198 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 1
  %199 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 2
  %200 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 3
  %201 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 4, i32 0
  %202 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 5
  %203 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 6, i32 0, i32 0
  %204 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 7, i32 0, i32 0
  %205 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 8, i32 0, i32 0
  %206 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 9, i32 0, i32 0
  %207 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 10
  %208 = bitcast %"class.v8::internal::Handle.1138"* %207 to i64*
  %209 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %18, i64 0, i32 11
  %210 = bitcast i64* %209 to i8*
  %211 = bitcast %"class.v8::internal::LookupIterator::Key"* %16 to i8*
  %212 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %16, i64 0, i32 0, i32 0, i32 0
  %213 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %16, i64 0, i32 1
  %214 = bitcast %"class.v8::internal::String"* %11 to i8*
  %215 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = bitcast %"class.v8::internal::LookupIterator::Key"* %16 to i64*
  %217 = bitcast %"class.v8::internal::LookupIterator"* %17 to i8*
  %218 = icmp eq i64 %58, 0
  %219 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %150, i64 0, i32 0
  br label %220

220:                                              ; preds = %653, %148
  %221 = phi i8 [ undef, %148 ], [ %649, %653 ]
  %222 = phi i8 [ undef, %148 ], [ %650, %653 ]
  %223 = phi i1 [ false, %148 ], [ true, %653 ]
  %224 = phi i8 [ 0, %148 ], [ %651, %653 ]
  %225 = phi i8 [ 1, %148 ], [ %652, %653 ]
  %226 = load i64, i64* %101, align 8
  %227 = add i64 %226, 11
  %228 = inttoptr i64 %227 to i32*
  %229 = load atomic i32, i32* %228 acquire, align 4
  %230 = lshr i32 %229, 10
  %231 = and i32 %230, 1023
  %232 = zext i32 %231 to i64
  %233 = icmp eq i32 %231, 0
  br i1 %233, label %648, label %234

234:                                              ; preds = %220, %645
  %235 = phi i8 [ %631, %645 ], [ %225, %220 ]
  %236 = phi i8 [ %630, %645 ], [ %224, %220 ]
  %237 = phi i8 [ %629, %645 ], [ %222, %220 ]
  %238 = phi i8 [ %628, %645 ], [ %221, %220 ]
  %239 = phi i64 [ %646, %645 ], [ 0, %220 ]
  %240 = load i64, i64* %151, align 8
  %241 = load i64*, i64** %152, align 8
  %242 = load i32, i32* %153, align 8
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %153, align 8
  %244 = load i64, i64* %149, align 8
  %245 = and i64 %244, -4294967296
  %246 = mul nuw nsw i64 %239, 51539607552
  %247 = add nuw nsw i64 %246, 68719476736
  %248 = lshr exact i64 %247, 32
  %249 = add nsw i64 %248, -1
  %250 = add i64 %249, %244
  %251 = inttoptr i64 %250 to i32*
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = zext i32 %252 to i64
  %254 = or i64 %245, %253
  %255 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %80, align 8
  %256 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %255, null
  %257 = inttoptr i64 %240 to i64*
  br i1 %256, label %260, label %258

258:                                              ; preds = %234
  %259 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %255, i64 %254) #9
  br label %269

260:                                              ; preds = %234
  %261 = icmp eq i64* %241, %257
  br i1 %261, label %262, label %264

262:                                              ; preds = %260
  %263 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %59) #9
  br label %264

264:                                              ; preds = %262, %260
  %265 = phi i64* [ %263, %262 ], [ %257, %260 ]
  %266 = ptrtoint i64* %265 to i64
  %267 = add i64 %266, 8
  %268 = inttoptr i64 %267 to i64*
  store i64* %268, i64** %154, align 8
  store i64 %254, i64* %265, align 8
  br label %269

269:                                              ; preds = %264, %258
  %270 = phi i64* [ %259, %258 ], [ %265, %264 ]
  br i1 %155, label %271, label %285

271:                                              ; preds = %269
  %272 = load i64, i64* %270, align 8
  %273 = and i64 %272, -4294967296
  %274 = add i64 %272, -1
  %275 = inttoptr i64 %274 to i32*
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = zext i32 %276 to i64
  %278 = or i64 %273, %277
  %279 = add i64 %278, 7
  %280 = inttoptr i64 %279 to i16*
  %281 = load atomic i16, i16* %280 monotonic, align 2
  %282 = icmp eq i16 %281, 64
  br i1 %282, label %283, label %284

283:                                              ; preds = %271
  br i1 %223, label %285, label %627

284:                                              ; preds = %271
  br i1 %223, label %627, label %285

285:                                              ; preds = %284, %283, %269
  %286 = phi i8 [ 1, %283 ], [ %236, %284 ], [ %236, %269 ]
  %287 = and i8 %235, 1
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %429, label %289

289:                                              ; preds = %285
  %290 = load i64, i64* %149, align 8
  %291 = or i64 %248, 3
  %292 = add i64 %290, %291
  %293 = inttoptr i64 %292 to i32*
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = ashr i32 %294, 1
  %296 = and i32 %294, 32
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %627

298:                                              ; preds = %289
  %299 = and i32 %294, 2
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %376

301:                                              ; preds = %298
  %302 = and i32 %294, 4
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %327, label %304

304:                                              ; preds = %301
  %305 = and i64 %290, -4294967296
  %306 = add nuw nsw i64 %248, 7
  %307 = add i64 %306, %290
  %308 = inttoptr i64 %307 to i32*
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = zext i32 %309 to i64
  %311 = or i64 %305, %310
  %312 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %80, align 8
  %313 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %312, null
  br i1 %313, label %316, label %314

314:                                              ; preds = %304
  %315 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %312, i64 %311) #9
  br label %476

316:                                              ; preds = %304
  %317 = load i64*, i64** %154, align 8
  %318 = load i64*, i64** %152, align 8
  %319 = icmp eq i64* %317, %318
  br i1 %319, label %320, label %322

320:                                              ; preds = %316
  %321 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %59) #9
  br label %322

322:                                              ; preds = %320, %316
  %323 = phi i64* [ %321, %320 ], [ %317, %316 ]
  %324 = ptrtoint i64* %323 to i64
  %325 = add i64 %324, 8
  %326 = inttoptr i64 %325 to i64*
  store i64* %326, i64** %154, align 8
  store i64 %311, i64* %323, align 8
  br label %476

327:                                              ; preds = %301
  %328 = lshr i32 %295, 6
  %329 = trunc i32 %328 to i8
  %330 = and i8 %329, 7
  %331 = load i64, i64* %101, align 8
  %332 = lshr i32 %295, 19
  %333 = and i32 %332, 1023
  %334 = add i64 %331, 3
  %335 = inttoptr i64 %334 to i8*
  %336 = load atomic i8, i8* %335 monotonic, align 1
  %337 = zext i8 %336 to i32
  %338 = add i64 %331, 4
  %339 = inttoptr i64 %338 to i8*
  %340 = load atomic i8, i8* %339 monotonic, align 1
  %341 = zext i8 %340 to i32
  %342 = sub nsw i32 %337, %341
  %343 = icmp slt i32 %333, %342
  br i1 %343, label %344, label %352

344:                                              ; preds = %327
  %345 = load atomic i8, i8* %339 monotonic, align 1
  %346 = zext i8 %345 to i64
  %347 = shl nuw nsw i64 %346, 28
  %348 = load atomic i8, i8* %339 monotonic, align 1
  %349 = zext i8 %348 to i32
  %350 = add nuw nsw i32 %333, %349
  %351 = shl nuw nsw i32 %350, 2
  br label %356

352:                                              ; preds = %327
  %353 = sub nsw i32 %333, %342
  %354 = shl nsw i32 %353, 2
  %355 = add nsw i32 %354, 8
  br label %356

356:                                              ; preds = %352, %344
  %357 = phi i32 [ %351, %344 ], [ %355, %352 ]
  %358 = phi i64 [ %347, %344 ], [ 536870912, %352 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %173) #9
  store i8 %330, i8* %173, align 1
  %359 = icmp ult i8 %330, 5
  br i1 %359, label %362, label %360

360:                                              ; preds = %356
  %361 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %10) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* %361) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

362:                                              ; preds = %356
  %363 = zext i8 %330 to i64
  %364 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal8JSObject17SlowReverseLookupENS0_6ObjectE, i64 0, i64 %363
  %365 = load i64, i64* %364, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %173) #9
  %366 = zext i1 %343 to i64
  %367 = shl nuw nsw i64 %366, 13
  %368 = sext i32 %357 to i64
  %369 = sext i32 %342 to i64
  %370 = shl nsw i64 %369, 16
  %371 = or i64 %367, %370
  %372 = or i64 %371, %368
  %373 = or i64 %372, %358
  %374 = or i64 %373, %365
  %375 = call i64* @_ZN2v88internal8JSObject14FastPropertyAtENS0_6HandleIS1_EENS0_14RepresentationENS0_10FieldIndexE(i64* %2, i8 %330, i64 %374) #9
  br label %476

376:                                              ; preds = %298
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %156) #9
  %377 = icmp eq i64* %270, null
  br i1 %377, label %391, label %378

378:                                              ; preds = %376
  %379 = load i64, i64* %270, align 8
  %380 = load i64, i64* %122, align 8
  %381 = add i64 %379, -1
  %382 = inttoptr i64 %381 to i32*
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i64 %380, 4294967295
  %385 = icmp eq i64 %384, 0
  call void @llvm.assume(i1 %385) #9
  %386 = zext i32 %383 to i64
  %387 = or i64 %380, %386
  %388 = add i64 %387, 7
  %389 = inttoptr i64 %388 to i16*
  %390 = load atomic i16, i16* %389 monotonic, align 2
  br label %391

391:                                              ; preds = %378, %376
  store i32 0, i32* %158, align 8
  store i32 4, i32* %159, align 4
  store i8 0, i8* %160, align 8
  store i32 0, i32* %161, align 4
  store i32 0, i32* %162, align 8
  store %"class.v8::internal::Isolate"* %59, %"class.v8::internal::Isolate"** %163, align 8
  store i64* %270, i64** %164, align 8
  store i64* null, i64** %165, align 8
  store i64* %2, i64** %166, align 8
  store i64* null, i64** %167, align 8
  store i64 %157, i64* %169, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 -1, i64 16, i1 false) #9
  %392 = load i64, i64* %270, align 8
  %393 = and i64 %392, -4294967296
  %394 = add i64 %392, -1
  %395 = inttoptr i64 %394 to i32*
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = zext i32 %396 to i64
  %398 = or i64 %393, %397
  %399 = add i64 %398, 7
  %400 = inttoptr i64 %399 to i16*
  %401 = load atomic i16, i16* %400 monotonic, align 2
  %402 = and i16 %401, -32
  %403 = icmp eq i16 %402, 32
  br i1 %403, label %404, label %407

404:                                              ; preds = %391
  %405 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %172, align 8
  %406 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %405, %"class.v8::internal::Isolate"* %59, i64* %270) #9
  br label %407

407:                                              ; preds = %404, %391
  %408 = phi i64* [ %406, %404 ], [ %270, %391 ]
  store i64* %408, i64** %164, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %14) #9
  %409 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %14, i1 zeroext false) #9
  %410 = icmp eq i64* %409, null
  br i1 %410, label %428, label %411

411:                                              ; preds = %407
  %412 = load i64, i64* %2, align 8
  %413 = add i64 %412, -1
  %414 = inttoptr i64 %413 to i32*
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = load i64, i64* %101, align 8
  %417 = trunc i64 %416 to i32
  %418 = icmp eq i32 %415, %417
  %419 = zext i1 %418 to i8
  %420 = load i64, i64* %122, align 8
  %421 = add i64 %416, 23
  %422 = inttoptr i64 %421 to i32*
  %423 = load i32, i32* %422, align 4
  %424 = and i64 %420, 4294967295
  %425 = icmp eq i64 %424, 0
  call void @llvm.assume(i1 %425) #9
  %426 = zext i32 %423 to i64
  %427 = or i64 %420, %426
  store i64 %427, i64* %149, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %156) #9
  br label %476

428:                                              ; preds = %407
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %156) #9
  br label %627

429:                                              ; preds = %285
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %174) #9
  %430 = icmp eq i64* %270, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %429
  %432 = load i64, i64* %270, align 8
  %433 = load i64, i64* %122, align 8
  %434 = add i64 %432, -1
  %435 = inttoptr i64 %434 to i32*
  %436 = load atomic i32, i32* %435 monotonic, align 4
  %437 = and i64 %433, 4294967295
  %438 = icmp eq i64 %437, 0
  call void @llvm.assume(i1 %438) #9
  %439 = zext i32 %436 to i64
  %440 = or i64 %433, %439
  %441 = add i64 %440, 7
  %442 = inttoptr i64 %441 to i16*
  %443 = load atomic i16, i16* %442 monotonic, align 2
  br label %444

444:                                              ; preds = %431, %429
  store i32 0, i32* %175, align 8
  store i32 4, i32* %176, align 4
  store i8 0, i8* %177, align 8
  store i32 0, i32* %178, align 4
  store i32 0, i32* %179, align 8
  store %"class.v8::internal::Isolate"* %59, %"class.v8::internal::Isolate"** %180, align 8
  store i64* %270, i64** %181, align 8
  store i64* null, i64** %182, align 8
  store i64* %2, i64** %183, align 8
  store i64* null, i64** %184, align 8
  store i64 %157, i64* %186, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 -1, i64 16, i1 false) #9
  %445 = load i64, i64* %270, align 8
  %446 = and i64 %445, -4294967296
  %447 = add i64 %445, -1
  %448 = inttoptr i64 %447 to i32*
  %449 = load atomic i32, i32* %448 monotonic, align 4
  %450 = zext i32 %449 to i64
  %451 = or i64 %446, %450
  %452 = add i64 %451, 7
  %453 = inttoptr i64 %452 to i16*
  %454 = load atomic i16, i16* %453 monotonic, align 2
  %455 = and i16 %454, -32
  %456 = icmp eq i16 %455, 32
  br i1 %456, label %457, label %460

457:                                              ; preds = %444
  %458 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %172, align 8
  %459 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %458, %"class.v8::internal::Isolate"* %59, i64* %270) #9
  br label %460

460:                                              ; preds = %457, %444
  %461 = phi i64* [ %459, %457 ], [ %270, %444 ]
  store i64* %461, i64** %181, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %15) #9
  %462 = load i32, i32* %176, align 4
  %463 = icmp eq i32 %462, 4
  br i1 %463, label %471, label %464

464:                                              ; preds = %460
  %465 = load i32, i32* %179, align 8
  %466 = and i32 %465, 16
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %471

468:                                              ; preds = %464
  %469 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %15, i1 zeroext false) #9
  %470 = icmp eq i64* %469, null
  br i1 %470, label %471, label %475

471:                                              ; preds = %468, %464, %460
  %472 = phi i8 [ 0, %468 ], [ %238, %460 ], [ %238, %464 ]
  %473 = phi i8 [ 0, %468 ], [ %237, %460 ], [ %237, %464 ]
  %474 = phi i32 [ 1, %468 ], [ 5, %460 ], [ 5, %464 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %174) #9
  br label %627

475:                                              ; preds = %468
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %174) #9
  br label %476

476:                                              ; preds = %475, %411, %362, %322, %314
  %477 = phi i64* [ %469, %475 ], [ %409, %411 ], [ %375, %362 ], [ %315, %314 ], [ %323, %322 ]
  %478 = phi i8 [ %235, %475 ], [ %419, %411 ], [ %235, %362 ], [ %235, %314 ], [ %235, %322 ]
  br i1 %5, label %479, label %558

479:                                              ; preds = %476
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %211) #9
  %480 = ptrtoint i64* %270 to i64
  store i64* null, i64** %212, align 8
  %481 = load i64, i64* %270, align 8
  %482 = and i64 %481, -4294967296
  %483 = add i64 %481, -1
  %484 = inttoptr i64 %483 to i32*
  %485 = load atomic i32, i32* %484 monotonic, align 4
  %486 = zext i32 %485 to i64
  %487 = or i64 %482, %486
  %488 = add i64 %487, 7
  %489 = inttoptr i64 %488 to i16*
  %490 = load atomic i16, i16* %489 monotonic, align 2
  %491 = icmp ult i16 %490, 64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #9
  br i1 %491, label %492, label %505

492:                                              ; preds = %479
  store i64 %481, i64* %215, align 8
  %493 = add i64 %481, 3
  %494 = inttoptr i64 %493 to i32*
  %495 = load i32, i32* %494, align 4
  %496 = and i32 %495, -536870910
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %502

498:                                              ; preds = %492
  %499 = lshr i32 %495, 2
  %500 = and i32 %499, 16777215
  %501 = zext i32 %500 to i64
  store i64 %501, i64* %213, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #9
  br label %508

502:                                              ; preds = %492
  %503 = and i32 %495, 3
  %504 = icmp eq i32 %503, 2
  br i1 %504, label %505, label %506

505:                                              ; preds = %502, %479
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #9
  br label %509

506:                                              ; preds = %502
  %507 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %11, i64* %213) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #9
  br i1 %507, label %508, label %509

508:                                              ; preds = %506, %498
  store i64 %480, i64* %216, align 8
  br label %527

509:                                              ; preds = %506, %505
  store i64 -1, i64* %213, align 8
  %510 = load i64, i64* %270, align 8
  %511 = and i64 %510, -4294967296
  %512 = add i64 %510, -1
  %513 = inttoptr i64 %512 to i32*
  %514 = load atomic i32, i32* %513 monotonic, align 4
  %515 = zext i32 %514 to i64
  %516 = or i64 %511, %515
  %517 = add i64 %516, 7
  %518 = inttoptr i64 %517 to i16*
  %519 = load atomic i16, i16* %518 monotonic, align 2
  %520 = and i16 %519, -32
  %521 = icmp eq i16 %520, 32
  br i1 %521, label %522, label %525

522:                                              ; preds = %509
  %523 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %172, align 8
  %524 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %523, %"class.v8::internal::Isolate"* %59, i64* %270) #9
  br label %525

525:                                              ; preds = %522, %509
  %526 = phi i64* [ %524, %522 ], [ %270, %509 ]
  store i64* %526, i64** %212, align 8
  br label %527

527:                                              ; preds = %525, %508
  %528 = phi i64* [ %270, %508 ], [ %526, %525 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %217) #9
  %529 = load i64, i64* %213, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %17, %"class.v8::internal::Isolate"* %59, i64* %1, i64* %528, i64 %529, i64* %1, i32 3) #9
  %530 = call i16 @_ZN2v88internal6Object11SetPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %17, i64* %477, i32 1, i64 1) #9
  %531 = trunc i16 %530 to i8
  %532 = lshr i16 %530, 8
  %533 = trunc i16 %532 to i8
  %534 = icmp eq i8 %531, 0
  br i1 %534, label %557, label %535

535:                                              ; preds = %527
  %536 = and i8 %478, 1
  %537 = icmp eq i8 %536, 0
  br i1 %537, label %555, label %538

538:                                              ; preds = %535
  %539 = load i64, i64* %2, align 8
  %540 = add i64 %539, -1
  %541 = inttoptr i64 %540 to i32*
  %542 = load atomic i32, i32* %541 monotonic, align 4
  %543 = load i64, i64* %101, align 8
  %544 = trunc i64 %543 to i32
  %545 = icmp eq i32 %542, %544
  %546 = zext i1 %545 to i8
  %547 = load i64, i64* %122, align 8
  %548 = add i64 %543, 23
  %549 = inttoptr i64 %548 to i32*
  %550 = load i32, i32* %549, align 4
  %551 = and i64 %547, 4294967295
  %552 = icmp eq i64 %551, 0
  call void @llvm.assume(i1 %552) #9
  %553 = zext i32 %550 to i64
  %554 = or i64 %547, %553
  store i64 %554, i64* %149, align 8
  br label %555

555:                                              ; preds = %538, %535
  %556 = phi i8 [ %478, %535 ], [ %546, %538 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %217) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %211) #9
  br label %627

557:                                              ; preds = %527
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %217) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %211) #9
  br label %627

558:                                              ; preds = %476
  br i1 %189, label %577, label %559

559:                                              ; preds = %558
  %560 = load i64, i64* %190, align 8
  %561 = trunc i64 %560 to i32
  %562 = icmp sgt i32 %561, 0
  br i1 %562, label %568, label %577

563:                                              ; preds = %568
  %564 = load i64, i64* %190, align 8
  %565 = shl i64 %564, 32
  %566 = ashr exact i64 %565, 32
  %567 = icmp slt i64 %576, %566
  br i1 %567, label %568, label %577

568:                                              ; preds = %559, %563
  %569 = phi i64 [ %576, %563 ], [ 0, %559 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #9
  %570 = load i64, i64* %270, align 8
  store i64 %570, i64* %192, align 8
  %571 = load %"class.v8::internal::Handle.1138"*, %"class.v8::internal::Handle.1138"** %194, align 8
  %572 = getelementptr inbounds %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1138"* %571, i64 %569, i32 0, i32 0
  %573 = load i64*, i64** %572, align 8
  %574 = load i64, i64* %573, align 8
  %575 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %193, i64 %574) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #9
  %576 = add nuw nsw i64 %569, 1
  br i1 %575, label %627, label %563

577:                                              ; preds = %563, %559, %558
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %195) #9
  %578 = icmp eq i64* %270, null
  br i1 %578, label %599, label %579

579:                                              ; preds = %577
  %580 = load i64, i64* %270, align 8
  %581 = load i64, i64* %122, align 8
  %582 = add i64 %580, -1
  %583 = inttoptr i64 %582 to i32*
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i64 %581, 4294967295
  %586 = icmp eq i64 %585, 0
  call void @llvm.assume(i1 %586) #9
  %587 = zext i32 %584 to i64
  %588 = or i64 %581, %587
  %589 = add i64 %588, 7
  %590 = inttoptr i64 %589 to i16*
  %591 = load atomic i16, i16* %590 monotonic, align 2
  %592 = icmp eq i16 %591, 64
  br i1 %592, label %593, label %599

593:                                              ; preds = %579
  %594 = add i64 %580, 7
  %595 = inttoptr i64 %594 to i32*
  %596 = load i32, i32* %595, align 4
  %597 = and i32 %596, 1
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %599, label %600

599:                                              ; preds = %593, %579, %577
  br label %600

600:                                              ; preds = %599, %593
  %601 = phi i32 [ 1, %599 ], [ 0, %593 ]
  store i32 %601, i32* %197, align 8
  store i32 4, i32* %198, align 4
  store i8 0, i8* %199, align 8
  store i32 0, i32* %200, align 4
  store i32 0, i32* %201, align 8
  store %"class.v8::internal::Isolate"* %59, %"class.v8::internal::Isolate"** %202, align 8
  store i64* %270, i64** %203, align 8
  store i64* null, i64** %204, align 8
  store i64* %1, i64** %205, align 8
  store i64* null, i64** %206, align 8
  store i64 %196, i64* %208, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 -1, i64 16, i1 false) #9
  %602 = load i64, i64* %270, align 8
  %603 = and i64 %602, -4294967296
  %604 = add i64 %602, -1
  %605 = inttoptr i64 %604 to i32*
  %606 = load atomic i32, i32* %605 monotonic, align 4
  %607 = zext i32 %606 to i64
  %608 = or i64 %603, %607
  %609 = add i64 %608, 7
  %610 = inttoptr i64 %609 to i16*
  %611 = load atomic i16, i16* %610 monotonic, align 2
  %612 = and i16 %611, -32
  %613 = icmp eq i16 %612, 32
  br i1 %613, label %614, label %617

614:                                              ; preds = %600
  %615 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %172, align 8
  %616 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %615, %"class.v8::internal::Isolate"* %59, i64* %270) #9
  br label %617

617:                                              ; preds = %614, %600
  %618 = phi i64* [ %616, %614 ], [ %270, %600 ]
  store i64* %618, i64** %203, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %18) #9
  %619 = call i16 @_ZN2v88internal8JSObject18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %18, i64* %477, i64 1) #9
  %620 = trunc i16 %619 to i8
  %621 = icmp eq i8 %620, 0
  br i1 %621, label %622, label %623, !prof !6

622:                                              ; preds = %617
  call void @_ZN2v82V817FromJustIsNothingEv() #9
  br label %623

623:                                              ; preds = %622, %617
  %624 = icmp ugt i16 %619, 255
  br i1 %624, label %626, label %625, !prof !4

625:                                              ; preds = %623
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

626:                                              ; preds = %623
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %195) #9
  br label %627

627:                                              ; preds = %568, %626, %557, %555, %471, %428, %289, %284, %283
  %628 = phi i8 [ %238, %283 ], [ %238, %284 ], [ 0, %557 ], [ 0, %428 ], [ %238, %289 ], [ %472, %471 ], [ %238, %626 ], [ %531, %555 ], [ %238, %568 ]
  %629 = phi i8 [ %237, %283 ], [ %237, %284 ], [ %533, %557 ], [ 0, %428 ], [ %237, %289 ], [ %473, %471 ], [ %237, %626 ], [ %533, %555 ], [ %237, %568 ]
  %630 = phi i8 [ 1, %283 ], [ %236, %284 ], [ %286, %557 ], [ %286, %428 ], [ %286, %289 ], [ %286, %471 ], [ %286, %626 ], [ %286, %555 ], [ %286, %568 ]
  %631 = phi i8 [ %235, %283 ], [ %235, %284 ], [ %478, %557 ], [ %235, %428 ], [ %235, %289 ], [ %235, %471 ], [ %478, %626 ], [ %556, %555 ], [ %478, %568 ]
  %632 = phi i32 [ 5, %283 ], [ 5, %284 ], [ 1, %557 ], [ 1, %428 ], [ 5, %289 ], [ %474, %471 ], [ 0, %626 ], [ 0, %555 ], [ 5, %568 ]
  br i1 %218, label %644, label %633

633:                                              ; preds = %627
  %634 = load i64*, i64** %219, align 8
  store i64 %240, i64* %151, align 8
  %635 = load i32, i32* %153, align 8
  %636 = add nsw i32 %635, -1
  store i32 %636, i32* %153, align 8
  %637 = load i64*, i64** %152, align 8
  %638 = icmp eq i64* %637, %241
  br i1 %638, label %641, label %639

639:                                              ; preds = %633
  store i64* %241, i64** %152, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %59) #9
  %640 = load i64*, i64** %219, align 8
  br label %641

641:                                              ; preds = %639, %633
  %642 = phi i64* [ %640, %639 ], [ %257, %633 ]
  %643 = phi i64* [ %241, %639 ], [ %634, %633 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %642, i64* %643) #9
  br label %644

644:                                              ; preds = %641, %627
  switch i32 %632, label %657 [
    i32 0, label %645
    i32 5, label %645
  ]

645:                                              ; preds = %644, %644
  %646 = add nuw nsw i64 %239, 1
  %647 = icmp eq i64 %646, %232
  br i1 %647, label %648, label %234

648:                                              ; preds = %645, %220
  %649 = phi i8 [ %221, %220 ], [ %628, %645 ]
  %650 = phi i8 [ %222, %220 ], [ %629, %645 ]
  %651 = phi i8 [ %224, %220 ], [ %630, %645 ]
  %652 = phi i8 [ %225, %220 ], [ %631, %645 ]
  br i1 %155, label %653, label %894

653:                                              ; preds = %648
  %654 = and i8 %651, 1
  %655 = icmp eq i8 %654, 0
  %656 = or i1 %223, %655
  br i1 %656, label %894, label %220

657:                                              ; preds = %644
  %658 = icmp eq i8 %628, 0
  br i1 %658, label %894, label %659

659:                                              ; preds = %46, %657
  %660 = phi i8 [ %629, %657 ], [ %51, %46 ]
  %661 = icmp eq i8 %660, 0
  br i1 %661, label %662, label %894

662:                                              ; preds = %99, %106, %111, %659
  %663 = load i64, i64* %2, align 8
  %664 = and i64 %663, 1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %677, label %666

666:                                              ; preds = %662
  %667 = and i64 %663, -4294967296
  %668 = add i64 %663, -1
  %669 = inttoptr i64 %668 to i32*
  %670 = load atomic i32, i32* %669 monotonic, align 4
  %671 = zext i32 %670 to i64
  %672 = or i64 %667, %671
  %673 = add i64 %672, 7
  %674 = inttoptr i64 %673 to i16*
  %675 = load atomic i16, i16* %674 monotonic, align 2
  %676 = icmp ugt i16 %675, 185
  br i1 %676, label %679, label %677

677:                                              ; preds = %666, %662
  %678 = call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %2, i8* null) #9
  br label %679

679:                                              ; preds = %666, %677
  %680 = phi i64* [ %678, %677 ], [ %2, %666 ]
  %681 = icmp eq i64* %680, null
  br i1 %681, label %682, label %683, !prof !6

682:                                              ; preds = %679
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.89, i64 0, i64 0)) #14
  unreachable

683:                                              ; preds = %679
  %684 = call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* nonnull %680, i32 0, i32 0, i32 1, i1 zeroext false, i1 zeroext false) #9
  %685 = icmp eq i64* %684, null
  br i1 %685, label %894, label %686

686:                                              ; preds = %683
  %687 = load i64, i64* %680, align 8
  %688 = and i64 %687, -4294967296
  %689 = add i64 %687, -1
  %690 = inttoptr i64 %689 to i32*
  %691 = load atomic i32, i32* %690 monotonic, align 4
  %692 = zext i32 %691 to i64
  %693 = or i64 %688, %692
  %694 = add i64 %693, 11
  %695 = inttoptr i64 %694 to i32*
  %696 = load atomic i32, i32* %695 monotonic, align 4
  %697 = and i32 %696, 2097152
  %698 = icmp eq i32 %697, 0
  br i1 %698, label %778, label %699

699:                                              ; preds = %686
  %700 = load i64, i64* %1, align 8
  %701 = and i64 %700, -4294967296
  %702 = add i64 %700, -1
  %703 = inttoptr i64 %702 to i32*
  %704 = load atomic i32, i32* %703 monotonic, align 4
  %705 = zext i32 %704 to i64
  %706 = or i64 %701, %705
  %707 = add i64 %706, 11
  %708 = inttoptr i64 %707 to i32*
  %709 = load atomic i32, i32* %708 monotonic, align 4
  %710 = and i32 %709, 2097152
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %778

712:                                              ; preds = %699
  %713 = load atomic i32, i32* %703 monotonic, align 4
  %714 = zext i32 %713 to i64
  %715 = or i64 %701, %714
  %716 = add i64 %715, 7
  %717 = inttoptr i64 %716 to i16*
  %718 = load atomic i16, i16* %717 monotonic, align 2
  %719 = icmp eq i16 %718, 190
  br i1 %719, label %778, label %720

720:                                              ; preds = %712
  %721 = load atomic i32, i32* %690 monotonic, align 4
  %722 = zext i32 %721 to i64
  %723 = or i64 %688, %722
  %724 = add i64 %723, 7
  %725 = inttoptr i64 %724 to i16*
  %726 = load atomic i16, i16* %725 monotonic, align 2
  %727 = icmp eq i16 %726, 189
  br i1 %727, label %728, label %738

728:                                              ; preds = %720
  %729 = bitcast %"class.v8::internal::GlobalDictionary"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %729) #9
  %730 = add i64 %687, 3
  %731 = inttoptr i64 %730 to i32*
  %732 = load atomic i32, i32* %731 acquire, align 4
  %733 = zext i32 %732 to i64
  %734 = or i64 %688, %733
  %735 = getelementptr inbounds %"class.v8::internal::GlobalDictionary", %"class.v8::internal::GlobalDictionary"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %734, i64* %735, align 8
  %736 = getelementptr inbounds %"class.v8::internal::GlobalDictionary", %"class.v8::internal::GlobalDictionary"* %19, i64 0, i32 0, i32 0
  %737 = call i32 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1146"* nonnull %736) #9
  br label %773

738:                                              ; preds = %720
  %739 = bitcast %"class.v8::internal::NameDictionary"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %739) #9
  %740 = add i64 %687, 3
  %741 = inttoptr i64 %740 to i32*
  %742 = load i32, i32* %741, align 4
  %743 = zext i32 %742 to i64
  %744 = or i64 %688, %743
  %745 = and i64 %743, 1
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %768

747:                                              ; preds = %738
  %748 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %749 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %748, null
  br i1 %749, label %756, label %750

750:                                              ; preds = %747
  %751 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %748, i64 0, i32 0, i32 1
  %752 = load i8, i8* %751, align 8, !range !5
  %753 = icmp eq i8 %752, 0
  br i1 %753, label %756, label %754

754:                                              ; preds = %750
  %755 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %748, i64 0, i32 1, i64 0
  br label %764

756:                                              ; preds = %750, %747
  %757 = and i64 %687, -262144
  %758 = or i64 %757, 16
  %759 = inttoptr i64 %758 to i64*
  %760 = load i64, i64* %759, align 16
  %761 = add i64 %760, -41416
  %762 = inttoptr i64 %761 to %"class.v8::internal::Isolate"*
  %763 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %762, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %764

764:                                              ; preds = %756, %754
  %765 = phi i64* [ %763, %756 ], [ %755, %754 ]
  %766 = getelementptr inbounds i64, i64* %765, i64 115
  %767 = load i64, i64* %766, align 8
  br label %768

768:                                              ; preds = %738, %764
  %769 = phi i64 [ %767, %764 ], [ %744, %738 ]
  %770 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %769, i64* %770, align 8
  %771 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %20, i64 0, i32 0, i32 0
  %772 = call i32 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1149"* nonnull %771) #9
  br label %773

773:                                              ; preds = %768, %728
  %774 = phi i8* [ %739, %768 ], [ %729, %728 ]
  %775 = phi i32 [ %772, %768 ], [ %737, %728 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %774) #9
  %776 = icmp sgt i32 %775, 1020
  br i1 %776, label %777, label %778

777:                                              ; preds = %773
  call void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0, i32 %775, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0))
  br label %778

778:                                              ; preds = %686, %699, %773, %777, %712
  %779 = load i64, i64* %684, align 8
  %780 = add i64 %779, 3
  %781 = inttoptr i64 %780 to i32*
  %782 = load i32, i32* %781, align 4
  %783 = icmp sgt i32 %782, 1
  br i1 %783, label %784, label %894

784:                                              ; preds = %778
  %785 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %786 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %787 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %788 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %21, i64 0, i32 0
  %789 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %21, i64 0, i32 1, i32 0, i32 0
  %790 = bitcast i64** %789 to i8*
  %791 = bitcast %"class.v8::internal::LookupIterator::Key"* %8 to i8*
  %792 = bitcast %"class.v8::internal::LookupIterator"* %9 to i8*
  %793 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 0, i32 0, i32 0
  %794 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 1
  %795 = icmp eq %"class.v8::internal::ScopedVector"* %4, null
  %796 = getelementptr inbounds %"class.v8::internal::ScopedVector", %"class.v8::internal::ScopedVector"* %4, i64 0, i32 0, i32 1
  %797 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7 to i8*
  %798 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  %799 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0
  %800 = getelementptr inbounds %"class.v8::internal::ScopedVector", %"class.v8::internal::ScopedVector"* %4, i64 0, i32 0, i32 0
  %801 = bitcast %"class.v8::internal::LookupIterator::Key"* %22 to i8*
  %802 = bitcast %"class.v8::internal::LookupIterator"* %23 to i8*
  %803 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %22, i64 0, i32 0, i32 0, i32 0
  %804 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %22, i64 0, i32 1
  br label %805

805:                                              ; preds = %784, %885
  %806 = phi i64 [ 0, %784 ], [ %886, %885 ]
  %807 = phi i64 [ %779, %784 ], [ %887, %885 ]
  %808 = and i64 %807, -4294967296
  %809 = trunc i64 %806 to i32
  %810 = shl i32 %809, 2
  %811 = sext i32 %810 to i64
  %812 = add i64 %807, 7
  %813 = add i64 %812, %811
  %814 = inttoptr i64 %813 to i32*
  %815 = load atomic i32, i32* %814 monotonic, align 4
  %816 = zext i32 %815 to i64
  %817 = or i64 %808, %816
  %818 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %785, align 8
  %819 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %818, null
  br i1 %819, label %822, label %820

820:                                              ; preds = %805
  %821 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %818, i64 %817) #9
  br label %833

822:                                              ; preds = %805
  %823 = load i64*, i64** %786, align 8
  %824 = load i64*, i64** %787, align 8
  %825 = icmp eq i64* %823, %824
  br i1 %825, label %826, label %828

826:                                              ; preds = %822
  %827 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %828

828:                                              ; preds = %826, %822
  %829 = phi i64* [ %827, %826 ], [ %823, %822 ]
  %830 = ptrtoint i64* %829 to i64
  %831 = add i64 %830, 8
  %832 = inttoptr i64 %831 to i64*
  store i64* %832, i64** %786, align 8
  store i64 %817, i64* %829, align 8
  br label %833

833:                                              ; preds = %820, %828
  %834 = phi i64* [ %821, %820 ], [ %829, %828 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %788) #9
  store i8 0, i8* %788, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %790, i8 0, i64 32, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %791) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %8, %"class.v8::internal::Isolate"* %0, i64* %834) #9
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %792) #9
  %835 = load i64*, i64** %793, align 8
  %836 = load i64, i64* %794, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %9, %"class.v8::internal::Isolate"* %0, i64* nonnull %680, i64* %835, i64 %836, i64* nonnull %680, i32 1) #9
  %837 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"* nonnull %9, %"class.v8::internal::PropertyDescriptor"* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %792) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %791) #9
  %838 = trunc i16 %837 to i8
  %839 = icmp eq i8 %838, 0
  br i1 %839, label %840, label %841

840:                                              ; preds = %833
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %788) #9
  br label %894

841:                                              ; preds = %833
  %842 = icmp ugt i16 %837, 255
  br i1 %842, label %843, label %885

843:                                              ; preds = %841
  %844 = load i8, i8* %788, align 8
  %845 = and i8 %844, 1
  %846 = icmp eq i8 %845, 0
  br i1 %846, label %885, label %847

847:                                              ; preds = %843
  %848 = call i64* @_ZN2v88internal7Runtime17GetObjectPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_S6_Pb(%"class.v8::internal::Isolate"* %0, i64* nonnull %680, i64* %834, i64* null, i8* null) #9
  %849 = icmp eq i64* %848, null
  br i1 %849, label %884, label %850

850:                                              ; preds = %847
  br i1 %5, label %851, label %854

851:                                              ; preds = %850
  %852 = call i64* @_ZN2v88internal7Runtime17SetObjectPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_S6_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %834, i64* nonnull %848, i32 0, i64 1) #9
  %853 = icmp eq i64* %852, null
  br i1 %853, label %884, label %885

854:                                              ; preds = %850
  br i1 %795, label %873, label %855

855:                                              ; preds = %854
  %856 = load i64, i64* %796, align 8
  %857 = trunc i64 %856 to i32
  %858 = icmp sgt i32 %857, 0
  br i1 %858, label %864, label %873

859:                                              ; preds = %864
  %860 = load i64, i64* %796, align 8
  %861 = shl i64 %860, 32
  %862 = ashr exact i64 %861, 32
  %863 = icmp slt i64 %872, %862
  br i1 %863, label %864, label %873

864:                                              ; preds = %855, %859
  %865 = phi i64 [ %872, %859 ], [ 0, %855 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %797) #9
  %866 = load i64, i64* %834, align 8
  store i64 %866, i64* %798, align 8
  %867 = load %"class.v8::internal::Handle.1138"*, %"class.v8::internal::Handle.1138"** %800, align 8
  %868 = getelementptr inbounds %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1138"* %867, i64 %865, i32 0, i32 0
  %869 = load i64*, i64** %868, align 8
  %870 = load i64, i64* %869, align 8
  %871 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %799, i64 %870) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %797) #9
  %872 = add nuw nsw i64 %865, 1
  br i1 %871, label %885, label %859

873:                                              ; preds = %859, %855, %854
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %801) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %22, %"class.v8::internal::Isolate"* %0, i64* %834)
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %802) #9
  %874 = load i64*, i64** %803, align 8
  %875 = load i64, i64* %804, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %23, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %874, i64 %875, i64* %1, i32 1) #9
  %876 = call i16 @_ZN2v88internal8JSObject18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %23, i64* nonnull %848, i64 1)
  %877 = trunc i16 %876 to i8
  %878 = icmp eq i8 %877, 0
  br i1 %878, label %879, label %880, !prof !6

879:                                              ; preds = %873
  call void @_ZN2v82V817FromJustIsNothingEv() #9
  br label %880

880:                                              ; preds = %873, %879
  %881 = icmp ugt i16 %876, 255
  br i1 %881, label %883, label %882, !prof !4

882:                                              ; preds = %880
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

883:                                              ; preds = %880
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %802) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %801) #9
  br label %885

884:                                              ; preds = %851, %847
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %788) #9
  br label %894

885:                                              ; preds = %864, %851, %841, %883, %843
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %788) #9
  %886 = add nuw nsw i64 %806, 1
  %887 = load i64, i64* %684, align 8
  %888 = add i64 %887, 3
  %889 = inttoptr i64 %888 to i32*
  %890 = load i32, i32* %889, align 4
  %891 = ashr i32 %890, 1
  %892 = sext i32 %891 to i64
  %893 = icmp slt i64 %886, %892
  br i1 %893, label %805, label %894

894:                                              ; preds = %653, %648, %885, %6, %38, %778, %659, %884, %840, %683, %657
  %895 = phi i16 [ 0, %657 ], [ 257, %659 ], [ 0, %683 ], [ 0, %840 ], [ 0, %884 ], [ 257, %778 ], [ 257, %38 ], [ 257, %6 ], [ 257, %885 ], [ 257, %648 ], [ 257, %653 ]
  ret i16 %895
}

declare i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64*, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1146"*) local_unnamed_addr #2

declare i32 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1149"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"*, i64*, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2097152
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %49

18:                                               ; preds = %5
  %19 = load atomic i32, i32* %9 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %7, %20
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %23 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %23, i64 %21) #9
  %27 = load i64, i64* %26, align 8
  br label %41

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi i64* [ %35, %34 ], [ %30, %28 ]
  %38 = ptrtoint i64* %37 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  store i64* %40, i64** %29, align 8
  store i64 %21, i64* %37, align 8
  br label %41

41:                                               ; preds = %25, %36
  %42 = phi i64 [ %27, %25 ], [ %21, %36 ]
  %43 = phi i64* [ %26, %25 ], [ %37, %36 ]
  %44 = add i64 %42, 10
  %45 = inttoptr i64 %44 to i8*
  %46 = load i8, i8* %45, align 1
  %47 = lshr i8 %46, 2
  %48 = tail call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %0, i64* %43, i8 zeroext %47, i32 %2, i8* %4) #9
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %48, i32 %3)
  br label %49

49:                                               ; preds = %5, %41
  ret void
}

declare i64* @_ZN2v88internal7Runtime17GetObjectPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_S6_Pb(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i8*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Runtime17SetObjectPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_S6_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"*, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = load i64, i64* %2, align 8
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %0, i64 0, i32 1
  %8 = and i64 %6, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = trunc i64 %6 to i32
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %50, label %13

13:                                               ; preds = %10
  %14 = lshr i64 %6, 1
  %15 = and i64 %14, 2147483647
  store i64 %15, i64* %7, align 8
  br label %106

16:                                               ; preds = %3
  %17 = and i64 %6, -4294967296
  %18 = add i64 %6, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 66
  br i1 %26, label %27, label %39

27:                                               ; preds = %16
  %28 = add i64 %6, 3
  %29 = inttoptr i64 %28 to double*
  %30 = load double, double* %29, align 1
  %31 = fcmp ult double %30, 0.000000e+00
  %32 = fcmp ogt double %30, 0x433FFFFFFFFFFFFF
  %33 = or i1 %31, %32
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = fptoui double %30 to i64
  %36 = uitofp i64 %35 to double
  %37 = fcmp une double %30, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  store i64 %35, i64* %7, align 8
  br label %106

39:                                               ; preds = %27, %34, %16
  %40 = and i64 %6, -4294967296
  %41 = add i64 %6, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp eq i16 %48, 66
  br i1 %49, label %50, label %53

50:                                               ; preds = %10, %39
  %51 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %52 = tail call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %51, i64* %2, i32 2) #9
  br label %53

53:                                               ; preds = %50, %39
  %54 = phi i64* [ %52, %50 ], [ %2, %39 ]
  store i64* %54, i64** %5, align 8
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, -4294967296
  %57 = add i64 %55, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %56, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = icmp ult i16 %64, 64
  %66 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #9
  br i1 %65, label %67, label %81

67:                                               ; preds = %53
  %68 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %68, align 8
  %69 = add i64 %55, 3
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, -536870910
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %67
  %75 = lshr i32 %71, 2
  %76 = and i32 %75, 16777215
  %77 = zext i32 %76 to i64
  store i64 %77, i64* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #9
  br label %106

78:                                               ; preds = %67
  %79 = and i32 %71, 3
  %80 = icmp eq i32 %79, 2
  br i1 %80, label %81, label %82

81:                                               ; preds = %53, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #9
  br label %86

82:                                               ; preds = %78
  %83 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %4, i64* %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #9
  br i1 %83, label %106, label %84

84:                                               ; preds = %82
  %85 = load i64*, i64** %5, align 8
  br label %86

86:                                               ; preds = %84, %81
  %87 = phi i64* [ %85, %84 ], [ %54, %81 ]
  store i64 -1, i64* %7, align 8
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, -4294967296
  %90 = add i64 %88, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %89, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = and i16 %97, -32
  %99 = icmp eq i16 %98, 32
  br i1 %99, label %100, label %104

100:                                              ; preds = %86
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %102 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %101, align 8
  %103 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %102, %"class.v8::internal::Isolate"* %1, i64* %87) #9
  br label %104

104:                                              ; preds = %86, %100
  %105 = phi i64* [ %103, %100 ], [ %87, %86 ]
  store i64* %105, i64** %5, align 8
  br label %106

106:                                              ; preds = %74, %38, %13, %82, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0)
  %5 = trunc i64 %4 to i8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %82, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -262144
  %12 = or i64 %11, 16
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 16
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %50, label %20

20:                                               ; preds = %7
  %21 = tail call i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0)
  %22 = trunc i64 %21 to i8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %82, label %24

24:                                               ; preds = %20
  %25 = and i64 %21, 17179869184
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %75, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %16, i64 %2) #9
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %82, label %30

30:                                               ; preds = %27
  %31 = inttoptr i64 %15 to %"class.v8::internal::Factory"*
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %33 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %32, i64 0, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %34, null
  br i1 %35, label %36, label %45

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %38 = bitcast %"class.v8::internal::Isolate"** %37 to %"class.v8::internal::Factory"**
  %39 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %41 = load i64, i64* %40, align 8
  %42 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %39, i64 %41, i1 zeroext true) #9
  %43 = ptrtoint i64* %42 to i64
  %44 = bitcast %"class.v8::internal::Handle.1137"* %32 to i64*
  store i64 %43, i64* %44, align 8
  br label %45

45:                                               ; preds = %30, %36
  %46 = phi i64* [ %42, %36 ], [ %34, %30 ]
  %47 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %31, i32 156, i64* %46, i64* null, i64* null) #9
  %48 = load i64, i64* %47, align 8
  %49 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %16, i64 %48, %"class.v8::internal::MessageLocation"* null) #9
  br label %82

50:                                               ; preds = %7
  %51 = tail call zeroext i1 @_ZN2v88internal8JSObject12IsExtensibleENS0_6HandleIS1_EE(i64* %9)
  br i1 %51, label %75, label %52

52:                                               ; preds = %50
  %53 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %16, i64 %2) #9
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %82, label %55

55:                                               ; preds = %52
  %56 = inttoptr i64 %15 to %"class.v8::internal::Factory"*
  %57 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %58 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %57, i64 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = icmp eq i64* %59, null
  br i1 %60, label %61, label %70

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %63 = bitcast %"class.v8::internal::Isolate"** %62 to %"class.v8::internal::Factory"**
  %64 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %66 = load i64, i64* %65, align 8
  %67 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %64, i64 %66, i1 zeroext true) #9
  %68 = ptrtoint i64* %67 to i64
  %69 = bitcast %"class.v8::internal::Handle.1137"* %57 to i64*
  store i64 %68, i64* %69, align 8
  br label %70

70:                                               ; preds = %55, %61
  %71 = phi i64* [ %67, %61 ], [ %59, %55 ]
  %72 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %56, i32 50, i64* %71, i64* null, i64* null) #9
  %73 = load i64, i64* %72, align 8
  %74 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %16, i64 %73, %"class.v8::internal::MessageLocation"* null) #9
  br label %82

75:                                               ; preds = %24, %50
  %76 = tail call i16 @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i32 0, i64 1, i32 1) #9
  %77 = trunc i16 %76 to i8
  %78 = icmp eq i8 %77, 0
  %79 = icmp eq i64* %1, null
  %80 = or i1 %79, %78
  %81 = select i1 %80, i16 0, i16 257
  ret i16 %81

82:                                               ; preds = %27, %20, %45, %70, %52, %3
  %83 = phi i16 [ 0, %3 ], [ 0, %70 ], [ 1, %52 ], [ 1, %27 ], [ 0, %20 ], [ 0, %45 ]
  ret i16 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10JSReceiver10class_nameEv(%"class.v8::internal::JSReceiver"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %5 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 1, i64 0
  br label %20

12:                                               ; preds = %6, %1
  %13 = and i64 %3, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %20

20:                                               ; preds = %10, %12
  %21 = phi i64* [ %19, %12 ], [ %11, %10 ]
  %22 = and i64 %3, -4294967296
  %23 = add i64 %3, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = add i16 %30, -1058
  %32 = icmp ult i16 %31, 16
  br i1 %32, label %360, label %33

33:                                               ; preds = %20
  %34 = load atomic i32, i32* %24 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %22, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp eq i16 %39, 1055
  br i1 %40, label %360, label %41

41:                                               ; preds = %33
  %42 = load atomic i32, i32* %24 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %22, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = icmp eq i16 %47, 1085
  br i1 %48, label %360, label %49

49:                                               ; preds = %41
  %50 = load atomic i32, i32* %24 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %22, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp eq i16 %55, 1086
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = add i64 %3, 43
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 16
  %62 = icmp eq i32 %61, 0
  %63 = select i1 %62, i64 266, i64 433
  br label %360

64:                                               ; preds = %49
  %65 = load atomic i32, i32* %24 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %22, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp eq i16 %70, 1087
  br i1 %71, label %360, label %72

72:                                               ; preds = %64
  %73 = load atomic i32, i32* %24 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %22, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp eq i16 %78, 1091
  br i1 %79, label %360, label %80

80:                                               ; preds = %72
  %81 = load atomic i32, i32* %24 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %22, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 1094
  br i1 %87, label %360, label %88

88:                                               ; preds = %80
  %89 = load atomic i32, i32* %24 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %22, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = add i16 %94, -1052
  %96 = icmp ult i16 %95, 3
  br i1 %96, label %360, label %97

97:                                               ; preds = %88
  %98 = load atomic i32, i32* %24 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %22, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load atomic i16, i16* %102 monotonic, align 2
  %104 = icmp eq i16 %103, 1081
  br i1 %104, label %360, label %105

105:                                              ; preds = %97
  %106 = load atomic i32, i32* %24 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %22, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = add i16 %111, -1074
  %113 = icmp ult i16 %112, 3
  br i1 %113, label %360, label %114

114:                                              ; preds = %105
  %115 = load atomic i32, i32* %24 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %22, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = icmp eq i16 %120, 188
  %122 = load atomic i32, i32* %24 monotonic, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %22, %123
  br i1 %121, label %125, label %132

125:                                              ; preds = %114
  %126 = add i64 %124, 9
  %127 = inttoptr i64 %126 to i8*
  %128 = load atomic i8, i8* %127 monotonic, align 1
  %129 = and i8 %128, 2
  %130 = icmp eq i8 %129, 0
  %131 = select i1 %130, i64 394, i64 332
  br label %360

132:                                              ; preds = %114
  %133 = add i64 %124, 7
  %134 = inttoptr i64 %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = icmp eq i16 %135, 1102
  br i1 %136, label %360, label %137

137:                                              ; preds = %132
  %138 = load atomic i32, i32* %24 monotonic, align 4
  %139 = zext i32 %138 to i64
  %140 = or i64 %22, %139
  %141 = add i64 %140, 7
  %142 = inttoptr i64 %141 to i16*
  %143 = load atomic i16, i16* %142 monotonic, align 2
  %144 = icmp eq i16 %143, 1082
  br i1 %144, label %360, label %145

145:                                              ; preds = %137
  %146 = load atomic i32, i32* %24 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %22, %147
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = add i16 %151, -1077
  %153 = icmp ult i16 %152, 2
  br i1 %153, label %360, label %154

154:                                              ; preds = %145
  %155 = load atomic i32, i32* %24 monotonic, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %22, %156
  %158 = add i64 %157, 7
  %159 = inttoptr i64 %158 to i16*
  %160 = load atomic i16, i16* %159 monotonic, align 2
  %161 = icmp eq i16 %160, 1080
  br i1 %161, label %162, label %261

162:                                              ; preds = %154
  %163 = load atomic i32, i32* %24 monotonic, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %22, %164
  %166 = add i64 %165, 10
  %167 = inttoptr i64 %166 to i8*
  %168 = load i8, i8* %167, align 1
  %169 = and i8 %168, -4
  %170 = icmp eq i8 %169, 68
  br i1 %170, label %360, label %171

171:                                              ; preds = %162
  %172 = load atomic i32, i32* %24 monotonic, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %22, %173
  %175 = add i64 %174, 10
  %176 = inttoptr i64 %175 to i8*
  %177 = load i8, i8* %176, align 1
  %178 = and i8 %177, -4
  %179 = icmp eq i8 %178, 72
  br i1 %179, label %360, label %180

180:                                              ; preds = %171
  %181 = load atomic i32, i32* %24 monotonic, align 4
  %182 = zext i32 %181 to i64
  %183 = or i64 %22, %182
  %184 = add i64 %183, 10
  %185 = inttoptr i64 %184 to i8*
  %186 = load i8, i8* %185, align 1
  %187 = and i8 %186, -4
  %188 = icmp eq i8 %187, 76
  br i1 %188, label %360, label %189

189:                                              ; preds = %180
  %190 = load atomic i32, i32* %24 monotonic, align 4
  %191 = zext i32 %190 to i64
  %192 = or i64 %22, %191
  %193 = add i64 %192, 10
  %194 = inttoptr i64 %193 to i8*
  %195 = load i8, i8* %194, align 1
  %196 = and i8 %195, -4
  %197 = icmp eq i8 %196, 80
  br i1 %197, label %360, label %198

198:                                              ; preds = %189
  %199 = load atomic i32, i32* %24 monotonic, align 4
  %200 = zext i32 %199 to i64
  %201 = or i64 %22, %200
  %202 = add i64 %201, 10
  %203 = inttoptr i64 %202 to i8*
  %204 = load i8, i8* %203, align 1
  %205 = and i8 %204, -4
  %206 = icmp eq i8 %205, 84
  br i1 %206, label %360, label %207

207:                                              ; preds = %198
  %208 = load atomic i32, i32* %24 monotonic, align 4
  %209 = zext i32 %208 to i64
  %210 = or i64 %22, %209
  %211 = add i64 %210, 10
  %212 = inttoptr i64 %211 to i8*
  %213 = load i8, i8* %212, align 1
  %214 = and i8 %213, -4
  %215 = icmp eq i8 %214, 88
  br i1 %215, label %360, label %216

216:                                              ; preds = %207
  %217 = load atomic i32, i32* %24 monotonic, align 4
  %218 = zext i32 %217 to i64
  %219 = or i64 %22, %218
  %220 = add i64 %219, 10
  %221 = inttoptr i64 %220 to i8*
  %222 = load i8, i8* %221, align 1
  %223 = and i8 %222, -4
  %224 = icmp eq i8 %223, 92
  br i1 %224, label %360, label %225

225:                                              ; preds = %216
  %226 = load atomic i32, i32* %24 monotonic, align 4
  %227 = zext i32 %226 to i64
  %228 = or i64 %22, %227
  %229 = add i64 %228, 10
  %230 = inttoptr i64 %229 to i8*
  %231 = load i8, i8* %230, align 1
  %232 = and i8 %231, -4
  %233 = icmp eq i8 %232, 96
  br i1 %233, label %360, label %234

234:                                              ; preds = %225
  %235 = load atomic i32, i32* %24 monotonic, align 4
  %236 = zext i32 %235 to i64
  %237 = or i64 %22, %236
  %238 = add i64 %237, 10
  %239 = inttoptr i64 %238 to i8*
  %240 = load i8, i8* %239, align 1
  %241 = and i8 %240, -4
  %242 = icmp eq i8 %241, 100
  br i1 %242, label %360, label %243

243:                                              ; preds = %234
  %244 = load atomic i32, i32* %24 monotonic, align 4
  %245 = zext i32 %244 to i64
  %246 = or i64 %22, %245
  %247 = add i64 %246, 10
  %248 = inttoptr i64 %247 to i8*
  %249 = load i8, i8* %248, align 1
  %250 = and i8 %249, -4
  %251 = icmp eq i8 %250, 104
  br i1 %251, label %360, label %252

252:                                              ; preds = %243
  %253 = load atomic i32, i32* %24 monotonic, align 4
  %254 = zext i32 %253 to i64
  %255 = or i64 %22, %254
  %256 = add i64 %255, 10
  %257 = inttoptr i64 %256 to i8*
  %258 = load i8, i8* %257, align 1
  %259 = and i8 %258, -4
  %260 = icmp eq i8 %259, 108
  br i1 %260, label %360, label %261

261:                                              ; preds = %252, %154
  %262 = load atomic i32, i32* %24 monotonic, align 4
  %263 = zext i32 %262 to i64
  %264 = or i64 %22, %263
  %265 = add i64 %264, 7
  %266 = inttoptr i64 %265 to i16*
  %267 = load atomic i16, i16* %266 monotonic, align 2
  %268 = icmp eq i16 %267, 1041
  br i1 %268, label %269, label %335

269:                                              ; preds = %261
  %270 = add i64 %3, 11
  %271 = inttoptr i64 %270 to i32*
  %272 = load i32, i32* %271, align 4
  %273 = zext i32 %272 to i64
  %274 = or i64 %22, %273
  %275 = and i64 %273, 1
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %360, label %277

277:                                              ; preds = %269
  %278 = add i64 %274, -1
  %279 = inttoptr i64 %278 to i32*
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = zext i32 %280 to i64
  %282 = or i64 %22, %281
  %283 = add i64 %282, 7
  %284 = inttoptr i64 %283 to i16*
  %285 = load atomic i16, i16* %284 monotonic, align 2
  %286 = icmp eq i16 %285, 67
  br i1 %286, label %287, label %294

287:                                              ; preds = %277
  %288 = add i64 %274, 23
  %289 = inttoptr i64 %288 to i32*
  %290 = load i32, i32* %289, align 4
  %291 = lshr i32 %290, 1
  %292 = trunc i32 %291 to i8
  %293 = icmp ult i8 %292, 2
  br i1 %293, label %360, label %294

294:                                              ; preds = %287, %277
  %295 = load atomic i32, i32* %279 monotonic, align 4
  %296 = zext i32 %295 to i64
  %297 = or i64 %22, %296
  %298 = add i64 %297, 7
  %299 = inttoptr i64 %298 to i16*
  %300 = load atomic i16, i16* %299 monotonic, align 2
  %301 = icmp ult i16 %300, 64
  br i1 %301, label %360, label %302

302:                                              ; preds = %294
  %303 = load atomic i32, i32* %279 monotonic, align 4
  %304 = zext i32 %303 to i64
  %305 = or i64 %22, %304
  %306 = add i64 %305, 7
  %307 = inttoptr i64 %306 to i16*
  %308 = load atomic i16, i16* %307 monotonic, align 2
  %309 = icmp eq i16 %308, 66
  br i1 %309, label %360, label %310

310:                                              ; preds = %302
  %311 = load atomic i32, i32* %279 monotonic, align 4
  %312 = zext i32 %311 to i64
  %313 = or i64 %22, %312
  %314 = add i64 %313, 7
  %315 = inttoptr i64 %314 to i16*
  %316 = load atomic i16, i16* %315 monotonic, align 2
  %317 = icmp eq i16 %316, 65
  br i1 %317, label %360, label %318

318:                                              ; preds = %310
  %319 = load atomic i32, i32* %279 monotonic, align 4
  %320 = zext i32 %319 to i64
  %321 = or i64 %22, %320
  %322 = add i64 %321, 7
  %323 = inttoptr i64 %322 to i16*
  %324 = load atomic i16, i16* %323 monotonic, align 2
  %325 = icmp eq i16 %324, 64
  br i1 %325, label %360, label %326

326:                                              ; preds = %318
  %327 = load atomic i32, i32* %279 monotonic, align 4
  %328 = zext i32 %327 to i64
  %329 = or i64 %22, %328
  %330 = add i64 %329, 7
  %331 = inttoptr i64 %330 to i16*
  %332 = load atomic i16, i16* %331 monotonic, align 2
  %333 = icmp eq i16 %332, 112
  br i1 %333, label %360, label %334

334:                                              ; preds = %326
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

335:                                              ; preds = %261
  %336 = load atomic i32, i32* %24 monotonic, align 4
  %337 = zext i32 %336 to i64
  %338 = or i64 %22, %337
  %339 = add i64 %338, 7
  %340 = inttoptr i64 %339 to i16*
  %341 = load atomic i16, i16* %340 monotonic, align 2
  %342 = icmp eq i16 %341, 1083
  br i1 %342, label %360, label %343

343:                                              ; preds = %335
  %344 = load atomic i32, i32* %24 monotonic, align 4
  %345 = zext i32 %344 to i64
  %346 = or i64 %22, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load atomic i16, i16* %348 monotonic, align 2
  %350 = icmp eq i16 %349, 1084
  br i1 %350, label %360, label %351

351:                                              ; preds = %343
  %352 = load atomic i32, i32* %24 monotonic, align 4
  %353 = zext i32 %352 to i64
  %354 = or i64 %22, %353
  %355 = add i64 %354, 7
  %356 = inttoptr i64 %355 to i16*
  %357 = load atomic i16, i16* %356 monotonic, align 2
  %358 = icmp eq i16 %357, 190
  %359 = select i1 %358, i64 341, i64 394
  br label %360

360:                                              ; preds = %351, %343, %335, %326, %318, %310, %302, %269, %294, %287, %252, %243, %234, %225, %216, %207, %198, %189, %180, %171, %162, %145, %137, %132, %125, %105, %97, %88, %80, %72, %64, %57, %41, %33, %20
  %361 = phi i64 [ 332, %20 ], [ 261, %33 ], [ 264, %41 ], [ %63, %57 ], [ 267, %64 ], [ 299, %72 ], [ 320, %80 ], [ 336, %88 ], [ 369, %97 ], [ 370, %105 ], [ %131, %125 ], [ 417, %132 ], [ 427, %137 ], [ 431, %145 ], [ 459, %162 ], [ 357, %171 ], [ 457, %180 ], [ 355, %189 ], [ 458, %198 ], [ 356, %207 ], [ 329, %216 ], [ 330, %225 ], [ 460, %234 ], [ 276, %243 ], [ 275, %252 ], [ 278, %287 ], [ 439, %294 ], [ 391, %269 ], [ 391, %302 ], [ 273, %310 ], [ 443, %318 ], [ 424, %326 ], [ 467, %335 ], [ 469, %343 ], [ %359, %351 ]
  %362 = getelementptr inbounds i64, i64* %21, i64 %361
  %363 = load i64, i64* %362, align 8
  ret i64 %363
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver14GetConstructorENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc { i64*, i64* } @_ZN2v88internal12_GLOBAL__N_120GetConstructorHelperENS0_6HandleINS0_10JSReceiverEEE(i64* %0)
  %3 = extractvalue { i64*, i64* } %2, 0
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64*, i64* } @_ZN2v88internal12_GLOBAL__N_120GetConstructorHelperENS0_6HandleINS0_10JSReceiverEEE(i64*) unnamed_addr #0 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", align 8
  %9 = load i64, i64* %0, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = and i64 %9, -4294967296
  %17 = add i64 %9, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 188
  br i1 %25, label %236, label %26

26:                                               ; preds = %1
  %27 = load atomic i32, i32* %18 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %16, %28
  %30 = add i64 %29, 10
  %31 = inttoptr i64 %30 to i8*
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %236, label %35

35:                                               ; preds = %26
  %36 = load atomic i32, i32* %18 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %16, %37
  %39 = add i64 %38, 11
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 acquire, align 4
  %42 = and i32 %41, 1048576
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %236

44:                                               ; preds = %35
  %45 = load i64, i64* %0, align 8
  %46 = and i64 %45, -4294967296
  %47 = add i64 %45, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  %52 = add i64 %51, 19
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %46, %55
  %57 = and i64 %55, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %129, label %59

59:                                               ; preds = %44
  %60 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %61 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %60, null
  %62 = and i64 %51, -262144
  %63 = or i64 %62, 16
  %64 = inttoptr i64 %63 to i64*
  br i1 %61, label %94, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %60, i64 0, i32 0, i32 1
  %67 = load i8, i8* %66, align 8, !range !5
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %60, i64 0, i32 1, i64 10
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  br label %115

73:                                               ; preds = %65
  %74 = load i64, i64* %64, align 16
  %75 = add i64 %74, -41416
  %76 = inttoptr i64 %75 to %"class.v8::internal::Isolate"*
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %76, i64 0, i32 0, i32 7, i32 0, i64 10
  %78 = load i64, i64* %77, align 8
  %79 = trunc i64 %78 to i32
  br label %80

80:                                               ; preds = %86, %73
  %81 = phi i64 [ %91, %86 ], [ %56, %73 ]
  %82 = add i64 %81, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = icmp eq i32 %84, %79
  br i1 %85, label %86, label %129

86:                                               ; preds = %80
  %87 = add i64 %81, 19
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %46, %90
  %92 = and i64 %90, 1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %129, label %80

94:                                               ; preds = %59
  %95 = load i64, i64* %64, align 16
  %96 = add i64 %95, -41416
  %97 = inttoptr i64 %96 to %"class.v8::internal::Isolate"*
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 10
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %99 to i32
  br label %101

101:                                              ; preds = %107, %94
  %102 = phi i64 [ %112, %107 ], [ %56, %94 ]
  %103 = add i64 %102, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = icmp eq i32 %105, %100
  br i1 %106, label %107, label %129

107:                                              ; preds = %101
  %108 = add i64 %102, 19
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %46, %111
  %113 = and i64 %111, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %129, label %101

115:                                              ; preds = %121, %69
  %116 = phi i64 [ %126, %121 ], [ %56, %69 ]
  %117 = add i64 %116, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = icmp eq i32 %119, %72
  br i1 %120, label %121, label %129

121:                                              ; preds = %115
  %122 = add i64 %116, 19
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %46, %125
  %127 = and i64 %125, 1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %115

129:                                              ; preds = %115, %121, %80, %86, %101, %107, %44
  %130 = phi i64 [ %56, %44 ], [ %112, %107 ], [ %102, %101 ], [ %81, %80 ], [ %91, %86 ], [ %116, %115 ], [ %126, %121 ]
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %132 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %131, align 8
  %133 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %132, i64 %130) #9
  %136 = load i64, i64* %135, align 8
  br label %150

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %139 = load i64*, i64** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %141 = load i64*, i64** %140, align 8
  %142 = icmp eq i64* %139, %141
  br i1 %142, label %143, label %145

143:                                              ; preds = %137
  %144 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %145

145:                                              ; preds = %143, %137
  %146 = phi i64* [ %144, %143 ], [ %139, %137 ]
  %147 = ptrtoint i64* %146 to i64
  %148 = add i64 %147, 8
  %149 = inttoptr i64 %148 to i64*
  store i64* %149, i64** %138, align 8
  store i64 %130, i64* %146, align 8
  br label %150

150:                                              ; preds = %134, %145
  %151 = phi i64 [ %136, %134 ], [ %130, %145 ]
  %152 = phi i64* [ %135, %134 ], [ %146, %145 ]
  %153 = and i64 %151, 1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %236, label %155

155:                                              ; preds = %150
  %156 = and i64 %151, -4294967296
  %157 = add i64 %151, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %156, %160
  %162 = add i64 %161, 7
  %163 = inttoptr i64 %162 to i16*
  %164 = load atomic i16, i16* %163 monotonic, align 2
  %165 = add i16 %164, -1059
  %166 = icmp ult i16 %165, 15
  br i1 %166, label %167, label %236

167:                                              ; preds = %155
  %168 = add i64 %151, 11
  %169 = inttoptr i64 %168 to i32*
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %156, %171
  %173 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %131, align 8
  %174 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %173, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %167
  %176 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %173, i64 %172) #9
  br label %190

177:                                              ; preds = %167
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %181 = load i64*, i64** %180, align 8
  %182 = icmp eq i64* %179, %181
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  %184 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %185

185:                                              ; preds = %183, %177
  %186 = phi i64* [ %184, %183 ], [ %179, %177 ]
  %187 = ptrtoint i64* %186 to i64
  %188 = add i64 %187, 8
  %189 = inttoptr i64 %188 to i64*
  store i64* %189, i64** %178, align 8
  store i64 %172, i64* %186, align 8
  br label %190

190:                                              ; preds = %175, %185
  %191 = phi i64* [ %176, %175 ], [ %186, %185 ]
  %192 = tail call i64* @_ZN2v88internal18SharedFunctionInfo9DebugNameENS0_6HandleIS1_EE(i64* %191) #9
  %193 = load i64, i64* %192, align 8
  %194 = add i64 %193, 7
  %195 = inttoptr i64 %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  %198 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #9
  br i1 %197, label %233, label %199

199:                                              ; preds = %190
  %200 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %193, i64* %200, align 8
  %201 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %2, i64 0, i32 0
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 394
  %203 = load i64, i64* %202, align 8
  %204 = trunc i64 %203 to i32
  %205 = trunc i64 %193 to i32
  %206 = icmp eq i32 %204, %205
  br i1 %206, label %207, label %208

207:                                              ; preds = %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #9
  br label %236

208:                                              ; preds = %199
  %209 = and i64 %193, -4294967296
  %210 = add i64 %193, -1
  %211 = inttoptr i64 %210 to i32*
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = zext i32 %212 to i64
  %214 = or i64 %209, %213
  %215 = add i64 %214, 7
  %216 = inttoptr i64 %215 to i16*
  %217 = load atomic i16, i16* %216 monotonic, align 2
  %218 = icmp ult i16 %217, 32
  br i1 %218, label %219, label %231

219:                                              ; preds = %208
  %220 = and i64 %203, -4294967296
  %221 = add i64 %203, -1
  %222 = inttoptr i64 %221 to i32*
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = zext i32 %223 to i64
  %225 = or i64 %220, %224
  %226 = add i64 %225, 7
  %227 = inttoptr i64 %226 to i16*
  %228 = load atomic i16, i16* %227 monotonic, align 2
  %229 = icmp ult i16 %228, 32
  br i1 %229, label %230, label %231

230:                                              ; preds = %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #9
  br label %234

231:                                              ; preds = %208, %219
  %232 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %201, i64 %203) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #9
  br i1 %232, label %236, label %234

233:                                              ; preds = %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #9
  br label %236

234:                                              ; preds = %230, %231
  %235 = ptrtoint i64* %152 to i64
  br label %613

236:                                              ; preds = %26, %207, %233, %231, %150, %155, %1, %35
  %237 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %237) #9
  %238 = inttoptr i64 %14 to %"class.v8::internal::Factory"*
  %239 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %238, i64 4304
  %240 = bitcast %"class.v8::internal::Factory"* %239 to i64*
  %241 = ptrtoint i64* %0 to i64
  %242 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %243 = icmp eq %"class.v8::internal::Factory"* %239, null
  %244 = load i64, i64* %240, align 8
  br i1 %243, label %245, label %248

245:                                              ; preds = %236
  %246 = add i64 %244, -1
  %247 = inttoptr i64 %246 to i32*
  br label %268

248:                                              ; preds = %236
  %249 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 4
  %250 = load i64, i64* %249, align 8
  %251 = add i64 %244, -1
  %252 = inttoptr i64 %251 to i32*
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i64 %250, 4294967295
  %255 = icmp eq i64 %254, 0
  call void @llvm.assume(i1 %255) #9
  %256 = zext i32 %253 to i64
  %257 = or i64 %250, %256
  %258 = add i64 %257, 7
  %259 = inttoptr i64 %258 to i16*
  %260 = load atomic i16, i16* %259 monotonic, align 2
  %261 = icmp eq i16 %260, 64
  br i1 %261, label %262, label %268

262:                                              ; preds = %248
  %263 = add i64 %244, 7
  %264 = inttoptr i64 %263 to i32*
  %265 = load i32, i32* %264, align 4
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %245, %262, %248
  %269 = phi i32* [ %247, %245 ], [ %252, %262 ], [ %252, %248 ]
  br label %270

270:                                              ; preds = %268, %262
  %271 = phi i32* [ %269, %268 ], [ %252, %262 ]
  %272 = phi i32 [ 2, %268 ], [ 0, %262 ]
  store i32 %272, i32* %242, align 8
  %273 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %273, align 4
  %274 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %274, align 8
  %275 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %275, align 4
  %276 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %276, align 8
  %277 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %15, %"class.v8::internal::Isolate"** %277, align 8
  %278 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  %279 = bitcast i64** %278 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %239, %"class.v8::internal::Factory"** %279, align 8
  %280 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %0, i64** %281, align 8
  %282 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %282, align 8
  %283 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %284 = bitcast %"class.v8::internal::Handle.1138"* %283 to i64*
  store i64 %241, i64* %284, align 8
  %285 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %286 = bitcast i64* %285 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %286, i8 -1, i64 16, i1 false) #9
  %287 = and i64 %244, -4294967296
  %288 = load atomic i32, i32* %271 monotonic, align 4
  %289 = zext i32 %288 to i64
  %290 = or i64 %287, %289
  %291 = add i64 %290, 7
  %292 = inttoptr i64 %291 to i16*
  %293 = load atomic i16, i16* %292 monotonic, align 2
  %294 = and i16 %293, -32
  %295 = icmp eq i16 %294, 32
  br i1 %295, label %296, label %300

296:                                              ; preds = %270
  %297 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 5, i32 0, i32 0, i32 0
  %298 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %297, align 8
  %299 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %298, %"class.v8::internal::Isolate"* %15, i64* %240) #9
  br label %300

300:                                              ; preds = %270, %296
  %301 = phi i64* [ %299, %296 ], [ %240, %270 ]
  store i64* %301, i64** %278, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #9
  br label %302

302:                                              ; preds = %330, %300
  %303 = load i32, i32* %273, align 4
  switch i32 %303, label %330 [
    i32 4, label %331
    i32 2, label %304
    i32 6, label %328
    i32 7, label %304
    i32 0, label %305
    i32 3, label %313
    i32 5, label %318
    i32 1, label %323
  ]

304:                                              ; preds = %302, %302
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

305:                                              ; preds = %302
  %306 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %277, align 8
  %307 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %306, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load i64, i64* %307, align 8
  %309 = trunc i64 %308 to i32
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %313, label %311

311:                                              ; preds = %305
  %312 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* nonnull %3) #9
  br i1 %312, label %330, label %313

313:                                              ; preds = %311, %305, %302
  store i8 0, i8* %274, align 8
  store i32 4, i32* %273, align 4
  %314 = bitcast %"class.v8::internal::Isolate"** %277 to %"class.v8::internal::Factory"**
  %315 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %314, align 8
  %316 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %315, i64 160
  %317 = bitcast %"class.v8::internal::Factory"* %316 to i64*
  br label %336

318:                                              ; preds = %302
  store i8 0, i8* %274, align 8
  store i32 4, i32* %273, align 4
  %319 = bitcast %"class.v8::internal::Isolate"** %277 to %"class.v8::internal::Factory"**
  %320 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %320, i64 160
  %322 = bitcast %"class.v8::internal::Factory"* %321 to i64*
  br label %336

323:                                              ; preds = %302
  %324 = bitcast %"class.v8::internal::Isolate"** %277 to %"class.v8::internal::Factory"**
  %325 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %324, align 8
  %326 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %325, i64 160
  %327 = bitcast %"class.v8::internal::Factory"* %326 to i64*
  br label %336

328:                                              ; preds = %302
  %329 = call i64* @_ZNK2v88internal14LookupIterator12GetDataValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* nonnull %3, i32 1) #9
  br label %336

330:                                              ; preds = %311, %302
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* nonnull %3) #9
  br label %302

331:                                              ; preds = %302
  %332 = bitcast %"class.v8::internal::Isolate"** %277 to %"class.v8::internal::Factory"**
  %333 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %332, align 8
  %334 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %333, i64 160
  %335 = bitcast %"class.v8::internal::Factory"* %334 to i64*
  br label %336

336:                                              ; preds = %313, %318, %323, %328, %331
  %337 = phi i64* [ %329, %328 ], [ %327, %323 ], [ %322, %318 ], [ %317, %313 ], [ %335, %331 ]
  %338 = load i64, i64* %337, align 8
  %339 = and i64 %338, 1
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %352, label %341

341:                                              ; preds = %336
  %342 = and i64 %338, -4294967296
  %343 = add i64 %338, -1
  %344 = inttoptr i64 %343 to i32*
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = zext i32 %345 to i64
  %347 = or i64 %342, %346
  %348 = add i64 %347, 7
  %349 = inttoptr i64 %348 to i16*
  %350 = load atomic i16, i16* %349 monotonic, align 2
  %351 = icmp ult i16 %350, 64
  br i1 %351, label %610, label %352

352:                                              ; preds = %336, %341
  %353 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %353) #9
  %354 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %15, %"class.v8::internal::Isolate"** %354, align 8
  %355 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %355, align 8
  %356 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2, i32 0, i32 0
  store i64* %0, i64** %356, align 8
  %357 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 3
  store i32 0, i32* %357, align 8
  %358 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 4
  store i8 0, i8* %358, align 4
  %359 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 6
  store i32 0, i32* %359, align 8
  %360 = icmp eq i64* %0, null
  br i1 %360, label %361, label %362, !prof !6

361:                                              ; preds = %352
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #14
  unreachable

362:                                              ; preds = %352
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #9
  %363 = load i8, i8* %358, align 4, !range !5
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %391, label %365

365:                                              ; preds = %362
  %366 = bitcast %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %366) #9
  %367 = load i64, i64* %0, align 8
  %368 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %5, i64 0, i32 0
  %370 = call i64 @_ZN2v88internal10JSReceiver10class_nameEv(%"class.v8::internal::JSReceiver"* nonnull %369)
  %371 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %372 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %371, align 8
  %373 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %372, null
  br i1 %373, label %376, label %374

374:                                              ; preds = %365
  %375 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %372, i64 %370) #9
  br label %389

376:                                              ; preds = %365
  %377 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %378 = load i64*, i64** %377, align 8
  %379 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %380 = load i64*, i64** %379, align 8
  %381 = icmp eq i64* %378, %380
  br i1 %381, label %382, label %384

382:                                              ; preds = %376
  %383 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %384

384:                                              ; preds = %382, %376
  %385 = phi i64* [ %383, %382 ], [ %378, %376 ]
  %386 = ptrtoint i64* %385 to i64
  %387 = add i64 %386, 8
  %388 = inttoptr i64 %387 to i64*
  store i64* %388, i64** %377, align 8
  store i64 %370, i64* %385, align 8
  br label %389

389:                                              ; preds = %374, %384
  %390 = phi i64* [ %375, %374 ], [ %385, %384 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %366) #9
  br label %607

391:                                              ; preds = %362
  %392 = bitcast i64** %356 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %394) #9
  %395 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %238, i64 2504
  %396 = bitcast %"class.v8::internal::Factory"* %395 to i64*
  %397 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 0
  %398 = icmp eq %"class.v8::internal::Factory"* %395, null
  %399 = load i64, i64* %396, align 8
  br i1 %398, label %400, label %403

400:                                              ; preds = %391
  %401 = add i64 %399, -1
  %402 = inttoptr i64 %401 to i32*
  br label %423

403:                                              ; preds = %391
  %404 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 4
  %405 = load i64, i64* %404, align 8
  %406 = add i64 %399, -1
  %407 = inttoptr i64 %406 to i32*
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i64 %405, 4294967295
  %410 = icmp eq i64 %409, 0
  call void @llvm.assume(i1 %410) #9
  %411 = zext i32 %408 to i64
  %412 = or i64 %405, %411
  %413 = add i64 %412, 7
  %414 = inttoptr i64 %413 to i16*
  %415 = load atomic i16, i16* %414 monotonic, align 2
  %416 = icmp eq i16 %415, 64
  br i1 %416, label %417, label %423

417:                                              ; preds = %403
  %418 = add i64 %399, 7
  %419 = inttoptr i64 %418 to i32*
  %420 = load i32, i32* %419, align 4
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %425

423:                                              ; preds = %400, %417, %403
  %424 = phi i32* [ %402, %400 ], [ %407, %417 ], [ %407, %403 ]
  br label %425

425:                                              ; preds = %423, %417
  %426 = phi i32* [ %424, %423 ], [ %407, %417 ]
  %427 = phi i32 [ 2, %423 ], [ 0, %417 ]
  store i32 %427, i32* %397, align 8
  %428 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  store i32 4, i32* %428, align 4
  %429 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 2
  store i8 0, i8* %429, align 8
  %430 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 3
  store i32 0, i32* %430, align 4
  %431 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 4, i32 0
  store i32 0, i32* %431, align 8
  %432 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %15, %"class.v8::internal::Isolate"** %432, align 8
  %433 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 6, i32 0, i32 0
  %434 = bitcast i64** %433 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %395, %"class.v8::internal::Factory"** %434, align 8
  %435 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %435, align 8
  %436 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 8, i32 0, i32 0
  store i64* %0, i64** %436, align 8
  %437 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %437, align 8
  %438 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 10
  %439 = bitcast %"class.v8::internal::Handle.1138"* %438 to i64*
  store i64 %393, i64* %439, align 8
  %440 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 11
  %441 = bitcast i64* %440 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %441, i8 -1, i64 16, i1 false) #9
  %442 = and i64 %399, -4294967296
  %443 = load atomic i32, i32* %426 monotonic, align 4
  %444 = zext i32 %443 to i64
  %445 = or i64 %442, %444
  %446 = add i64 %445, 7
  %447 = inttoptr i64 %446 to i16*
  %448 = load atomic i16, i16* %447 monotonic, align 2
  %449 = and i16 %448, -32
  %450 = icmp eq i16 %449, 32
  br i1 %450, label %451, label %455

451:                                              ; preds = %425
  %452 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 5, i32 0, i32 0, i32 0
  %453 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %452, align 8
  %454 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %453, %"class.v8::internal::Isolate"* %15, i64* %396) #9
  br label %455

455:                                              ; preds = %425, %451
  %456 = phi i64* [ %454, %451 ], [ %396, %425 ]
  store i64* %456, i64** %433, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %6) #9
  br label %457

457:                                              ; preds = %485, %455
  %458 = load i32, i32* %428, align 4
  switch i32 %458, label %485 [
    i32 4, label %486
    i32 2, label %459
    i32 6, label %483
    i32 7, label %459
    i32 0, label %460
    i32 3, label %468
    i32 5, label %473
    i32 1, label %478
  ]

459:                                              ; preds = %457, %457
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

460:                                              ; preds = %457
  %461 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %432, align 8
  %462 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %461, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load i64, i64* %462, align 8
  %464 = trunc i64 %463 to i32
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %468, label %466

466:                                              ; preds = %460
  %467 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* nonnull %6) #9
  br i1 %467, label %485, label %468

468:                                              ; preds = %466, %460, %457
  store i8 0, i8* %429, align 8
  store i32 4, i32* %428, align 4
  %469 = bitcast %"class.v8::internal::Isolate"** %432 to %"class.v8::internal::Factory"**
  %470 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %469, align 8
  %471 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %470, i64 160
  %472 = bitcast %"class.v8::internal::Factory"* %471 to i64*
  br label %491

473:                                              ; preds = %457
  store i8 0, i8* %429, align 8
  store i32 4, i32* %428, align 4
  %474 = bitcast %"class.v8::internal::Isolate"** %432 to %"class.v8::internal::Factory"**
  %475 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %474, align 8
  %476 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %475, i64 160
  %477 = bitcast %"class.v8::internal::Factory"* %476 to i64*
  br label %491

478:                                              ; preds = %457
  %479 = bitcast %"class.v8::internal::Isolate"** %432 to %"class.v8::internal::Factory"**
  %480 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %479, align 8
  %481 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %480, i64 160
  %482 = bitcast %"class.v8::internal::Factory"* %481 to i64*
  br label %491

483:                                              ; preds = %457
  %484 = call i64* @_ZNK2v88internal14LookupIterator12GetDataValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* nonnull %6, i32 1) #9
  br label %491

485:                                              ; preds = %466, %457
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* nonnull %6) #9
  br label %457

486:                                              ; preds = %457
  %487 = bitcast %"class.v8::internal::Isolate"** %432 to %"class.v8::internal::Factory"**
  %488 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %487, align 8
  %489 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %488, i64 160
  %490 = bitcast %"class.v8::internal::Factory"* %489 to i64*
  br label %491

491:                                              ; preds = %468, %473, %478, %483, %486
  %492 = phi i64* [ %484, %483 ], [ %482, %478 ], [ %477, %473 ], [ %472, %468 ], [ %490, %486 ]
  %493 = load i64, i64* %492, align 8
  %494 = and i64 %493, 1
  %495 = icmp eq i64 %494, 0
  br i1 %495, label %578, label %496

496:                                              ; preds = %491
  %497 = and i64 %493, -4294967296
  %498 = add i64 %493, -1
  %499 = inttoptr i64 %498 to i32*
  %500 = load atomic i32, i32* %499 monotonic, align 4
  %501 = zext i32 %500 to i64
  %502 = or i64 %497, %501
  %503 = add i64 %502, 7
  %504 = inttoptr i64 %503 to i16*
  %505 = load atomic i16, i16* %504 monotonic, align 2
  %506 = add i16 %505, -1059
  %507 = icmp ult i16 %506, 15
  br i1 %507, label %508, label %578

508:                                              ; preds = %496
  %509 = add i64 %493, 11
  %510 = inttoptr i64 %509 to i32*
  %511 = load atomic i32, i32* %510 monotonic, align 4
  %512 = zext i32 %511 to i64
  %513 = or i64 %497, %512
  %514 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %515 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %514, align 8
  %516 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %515, null
  br i1 %516, label %519, label %517

517:                                              ; preds = %508
  %518 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %515, i64 %513) #9
  br label %532

519:                                              ; preds = %508
  %520 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %521 = load i64*, i64** %520, align 8
  %522 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %523 = load i64*, i64** %522, align 8
  %524 = icmp eq i64* %521, %523
  br i1 %524, label %525, label %527

525:                                              ; preds = %519
  %526 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %527

527:                                              ; preds = %525, %519
  %528 = phi i64* [ %526, %525 ], [ %521, %519 ]
  %529 = ptrtoint i64* %528 to i64
  %530 = add i64 %529, 8
  %531 = inttoptr i64 %530 to i64*
  store i64* %531, i64** %520, align 8
  store i64 %513, i64* %528, align 8
  br label %532

532:                                              ; preds = %517, %527
  %533 = phi i64* [ %518, %517 ], [ %528, %527 ]
  %534 = call i64* @_ZN2v88internal18SharedFunctionInfo9DebugNameENS0_6HandleIS1_EE(i64* %533) #9
  %535 = load i64, i64* %534, align 8
  %536 = add i64 %535, 7
  %537 = inttoptr i64 %536 to i32*
  %538 = load i32, i32* %537, align 4
  %539 = icmp eq i32 %538, 0
  %540 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %540) #9
  br i1 %539, label %577, label %541

541:                                              ; preds = %532
  %542 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %535, i64* %542, align 8
  %543 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0
  %544 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 394
  %545 = load i64, i64* %544, align 8
  %546 = trunc i64 %545 to i32
  %547 = trunc i64 %535 to i32
  %548 = icmp eq i32 %546, %547
  br i1 %548, label %549, label %550

549:                                              ; preds = %541
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %540) #9
  br label %578

550:                                              ; preds = %541
  %551 = and i64 %535, -4294967296
  %552 = add i64 %535, -1
  %553 = inttoptr i64 %552 to i32*
  %554 = load atomic i32, i32* %553 monotonic, align 4
  %555 = zext i32 %554 to i64
  %556 = or i64 %551, %555
  %557 = add i64 %556, 7
  %558 = inttoptr i64 %557 to i16*
  %559 = load atomic i16, i16* %558 monotonic, align 2
  %560 = icmp ult i16 %559, 32
  br i1 %560, label %561, label %573

561:                                              ; preds = %550
  %562 = and i64 %545, -4294967296
  %563 = add i64 %545, -1
  %564 = inttoptr i64 %563 to i32*
  %565 = load atomic i32, i32* %564 monotonic, align 4
  %566 = zext i32 %565 to i64
  %567 = or i64 %562, %566
  %568 = add i64 %567, 7
  %569 = inttoptr i64 %568 to i16*
  %570 = load atomic i16, i16* %569 monotonic, align 2
  %571 = icmp ult i16 %570, 32
  br i1 %571, label %572, label %573

572:                                              ; preds = %561
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %540) #9
  br label %575

573:                                              ; preds = %550, %561
  %574 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %543, i64 %545) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %540) #9
  br i1 %574, label %578, label %575

575:                                              ; preds = %572, %573
  %576 = ptrtoint i64* %492 to i64
  br label %604

577:                                              ; preds = %532
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %540) #9
  br label %578

578:                                              ; preds = %491, %573, %577, %549, %496
  %579 = bitcast %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %579) #9
  %580 = load i64, i64* %0, align 8
  %581 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %580, i64* %581, align 8
  %582 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %8, i64 0, i32 0
  %583 = call i64 @_ZN2v88internal10JSReceiver10class_nameEv(%"class.v8::internal::JSReceiver"* nonnull %582)
  %584 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %585 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %584, align 8
  %586 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %585, null
  br i1 %586, label %589, label %587

587:                                              ; preds = %578
  %588 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %585, i64 %583) #9
  br label %602

589:                                              ; preds = %578
  %590 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %591 = load i64*, i64** %590, align 8
  %592 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %593 = load i64*, i64** %592, align 8
  %594 = icmp eq i64* %591, %593
  br i1 %594, label %595, label %597

595:                                              ; preds = %589
  %596 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %597

597:                                              ; preds = %595, %589
  %598 = phi i64* [ %596, %595 ], [ %591, %589 ]
  %599 = ptrtoint i64* %598 to i64
  %600 = add i64 %599, 8
  %601 = inttoptr i64 %600 to i64*
  store i64* %601, i64** %590, align 8
  store i64 %583, i64* %598, align 8
  br label %602

602:                                              ; preds = %587, %597
  %603 = phi i64* [ %588, %587 ], [ %598, %597 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %579) #9
  br label %604

604:                                              ; preds = %575, %602
  %605 = phi i64 [ 0, %602 ], [ %576, %575 ]
  %606 = phi i64* [ %603, %602 ], [ %534, %575 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %394) #9
  br label %607

607:                                              ; preds = %604, %389
  %608 = phi i64 [ 0, %389 ], [ %605, %604 ]
  %609 = phi i64* [ %390, %389 ], [ %606, %604 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %353) #9
  br label %610

610:                                              ; preds = %341, %607
  %611 = phi i64 [ %608, %607 ], [ 0, %341 ]
  %612 = phi i64* [ %609, %607 ], [ %337, %341 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %237) #9
  br label %613

613:                                              ; preds = %234, %610
  %614 = phi i64 [ %611, %610 ], [ %235, %234 ]
  %615 = phi i64* [ %612, %610 ], [ %192, %234 ]
  %616 = inttoptr i64 %614 to i64*
  %617 = insertvalue { i64*, i64* } undef, i64* %616, 0
  %618 = insertvalue { i64*, i64* } %617, i64* %615, 1
  ret { i64*, i64* } %618
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver18GetConstructorNameENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc { i64*, i64* } @_ZN2v88internal12_GLOBAL__N_120GetConstructorHelperENS0_6HandleINS0_10JSReceiverEEE(i64* %0)
  %3 = extractvalue { i64*, i64* } %2, 1
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver18GetCreationContextEv(%"class.v8::internal::JSReceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 19
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  %15 = and i64 %13, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %87, label %17

17:                                               ; preds = %1
  %18 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %19 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %18, null
  %20 = and i64 %9, -262144
  %21 = or i64 %20, 16
  %22 = inttoptr i64 %21 to i64*
  br i1 %19, label %52, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 1, i64 10
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  br label %73

31:                                               ; preds = %23
  %32 = load i64, i64* %22, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 10
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  br label %38

38:                                               ; preds = %44, %31
  %39 = phi i64 [ %49, %44 ], [ %14, %31 ]
  %40 = add i64 %39, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, %37
  br i1 %43, label %44, label %87

44:                                               ; preds = %38
  %45 = add i64 %39, 19
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %4, %48
  %50 = and i64 %48, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %87, label %38

52:                                               ; preds = %17
  %53 = load i64, i64* %22, align 16
  %54 = add i64 %53, -41416
  %55 = inttoptr i64 %54 to %"class.v8::internal::Isolate"*
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %55, i64 0, i32 0, i32 7, i32 0, i64 10
  %57 = load i64, i64* %56, align 8
  %58 = trunc i64 %57 to i32
  br label %59

59:                                               ; preds = %65, %52
  %60 = phi i64 [ %70, %65 ], [ %14, %52 ]
  %61 = add i64 %60, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = icmp eq i32 %63, %58
  br i1 %64, label %65, label %87

65:                                               ; preds = %59
  %66 = add i64 %60, 19
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %4, %69
  %71 = and i64 %69, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %59

73:                                               ; preds = %79, %27
  %74 = phi i64 [ %84, %79 ], [ %14, %27 ]
  %75 = add i64 %74, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = icmp eq i32 %77, %30
  br i1 %78, label %79, label %87

79:                                               ; preds = %73
  %80 = add i64 %74, 19
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %4, %83
  %85 = and i64 %83, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73

87:                                               ; preds = %73, %79, %38, %44, %59, %65, %1
  %88 = phi i64 [ %14, %1 ], [ %70, %65 ], [ %60, %59 ], [ %39, %38 ], [ %49, %44 ], [ %74, %73 ], [ %84, %79 ]
  %89 = and i64 %88, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %111, label %91

91:                                               ; preds = %87
  %92 = and i64 %88, -4294967296
  %93 = add i64 %88, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %92, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = add i16 %100, -1059
  %102 = icmp ult i16 %101, 15
  br i1 %102, label %135, label %103

103:                                              ; preds = %91
  %104 = load atomic i32, i32* %94 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %92, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = icmp eq i16 %109, 83
  br i1 %110, label %186, label %111

111:                                              ; preds = %87, %103
  %112 = load atomic i32, i32* %6 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %4, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = add i16 %117, -1052
  %119 = icmp ult i16 %118, 3
  br i1 %119, label %120, label %126

120:                                              ; preds = %111
  %121 = add i64 %3, 11
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %4, %124
  br label %135

126:                                              ; preds = %111
  %127 = load atomic i32, i32* %6 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %4, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = add i16 %132, -1059
  %134 = icmp ult i16 %133, 15
  br i1 %134, label %135, label %186

135:                                              ; preds = %126, %91, %120
  %136 = phi i64 [ %4, %126 ], [ %92, %91 ], [ %4, %120 ]
  %137 = phi i64 [ %3, %126 ], [ %88, %91 ], [ %125, %120 ]
  %138 = add i64 %137, 15
  %139 = inttoptr i64 %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %136, %141
  %143 = add i64 %142, -1
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %136, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = add i16 %150, -137
  %152 = icmp ult i16 %151, 10
  br i1 %152, label %153, label %186

153:                                              ; preds = %135
  %154 = load atomic i32, i32* %144 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %136, %155
  %157 = add i64 %156, 19
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %136, %160
  %162 = and i64 %3, -262144
  %163 = or i64 %162, 16
  %164 = inttoptr i64 %163 to i64*
  %165 = load i64, i64* %164, align 16
  %166 = add i64 %165, -41416
  %167 = inttoptr i64 %166 to %"class.v8::internal::Isolate"*
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %167, i64 0, i32 31, i32 4
  %169 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %168, align 8
  %170 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %153
  %172 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %169, i64 %161) #9
  br label %186

173:                                              ; preds = %153
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %167, i64 0, i32 31, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %167, i64 0, i32 31, i32 1
  %177 = load i64*, i64** %176, align 8
  %178 = icmp eq i64* %175, %177
  br i1 %178, label %179, label %181

179:                                              ; preds = %173
  %180 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %167) #9
  br label %181

181:                                              ; preds = %179, %173
  %182 = phi i64* [ %180, %179 ], [ %175, %173 ]
  %183 = ptrtoint i64* %182 to i64
  %184 = add i64 %183, 8
  %185 = inttoptr i64 %184 to i64*
  store i64* %185, i64** %174, align 8
  store i64 %161, i64* %182, align 8
  br label %186

186:                                              ; preds = %181, %171, %135, %126, %103
  %187 = phi i64* [ null, %103 ], [ null, %126 ], [ null, %135 ], [ %172, %171 ], [ %182, %181 ]
  ret i64* %187
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver16GetFunctionRealmENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 188
  br i1 %13, label %14, label %16

14:                                               ; preds = %1
  %15 = tail call i64* @_ZN2v88internal7JSProxy16GetFunctionRealmENS0_6HandleIS1_EE(i64* %0) #9
  br label %42

16:                                               ; preds = %1
  %17 = load atomic i32, i32* %6 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = add i16 %22, -1059
  %24 = icmp ult i16 %23, 15
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = tail call i64* @_ZN2v88internal10JSFunction16GetFunctionRealmENS0_6HandleIS1_EE(i64* %0) #9
  br label %42

27:                                               ; preds = %16
  %28 = load atomic i32, i32* %6 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %4, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 1058
  br i1 %34, label %35, label %37

35:                                               ; preds = %27
  %36 = tail call i64* @_ZN2v88internal15JSBoundFunction16GetFunctionRealmENS0_6HandleIS1_EE(i64* %0) #9
  br label %42

37:                                               ; preds = %27
  %38 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  %39 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = call i64* @_ZN2v88internal10JSReceiver18GetCreationContextEv(%"class.v8::internal::JSReceiver"* nonnull %40) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  br label %42

42:                                               ; preds = %37, %35, %25, %14
  %43 = phi i64* [ %15, %14 ], [ %26, %25 ], [ %36, %35 ], [ %41, %37 ]
  ret i64* %43
}

declare i64* @_ZN2v88internal7JSProxy16GetFunctionRealmENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal10JSFunction16GetFunctionRealmENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal15JSBoundFunction16GetFunctionRealmENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject16GetFunctionRealmENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %3 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #9
  %4 = load i64, i64* %0, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = call i64* @_ZN2v88internal10JSReceiver18GetCreationContextEv(%"class.v8::internal::JSReceiver"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #9
  ret i64* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver22GetContextForMicrotaskENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = and i64 %2, -262144
  %4 = or i64 %3, 16
  %5 = inttoptr i64 %4 to i64*
  %6 = load i64, i64* %5, align 16
  %7 = add i64 %6, -41416
  %8 = inttoptr i64 %7 to %"class.v8::internal::Isolate"*
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  br label %12

12:                                               ; preds = %99, %1
  %13 = phi i64 [ %2, %1 ], [ %100, %99 ]
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 1058
  br i1 %23, label %32, label %24

24:                                               ; preds = %12
  %25 = load atomic i32, i32* %16 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %14, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 188
  br i1 %31, label %32, label %101

32:                                               ; preds = %12, %24
  %33 = load atomic i32, i32* %16 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %14, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 1058
  br i1 %39, label %40, label %62

40:                                               ; preds = %32
  %41 = add i64 %13, 11
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %14, %44
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %9, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %40
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %45) #9
  %50 = load i64, i64* %49, align 8
  br label %99

51:                                               ; preds = %40
  %52 = load i64*, i64** %10, align 8
  %53 = load i64*, i64** %11, align 8
  %54 = icmp eq i64* %52, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #9
  br label %57

57:                                               ; preds = %55, %51
  %58 = phi i64* [ %56, %55 ], [ %52, %51 ]
  %59 = ptrtoint i64* %58 to i64
  %60 = add i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  store i64* %61, i64** %10, align 8
  store i64 %45, i64* %58, align 8
  br label %99

62:                                               ; preds = %32
  %63 = add i64 %13, 7
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %14, %66
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %9, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %62
  %71 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %67) #9
  %72 = load i64, i64* %71, align 8
  br label %84

73:                                               ; preds = %62
  %74 = load i64*, i64** %10, align 8
  %75 = load i64*, i64** %11, align 8
  %76 = icmp eq i64* %74, %75
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #9
  br label %79

79:                                               ; preds = %77, %73
  %80 = phi i64* [ %78, %77 ], [ %74, %73 ]
  %81 = ptrtoint i64* %80 to i64
  %82 = add i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  store i64* %83, i64** %10, align 8
  store i64 %67, i64* %80, align 8
  br label %84

84:                                               ; preds = %70, %79
  %85 = phi i64 [ %72, %70 ], [ %67, %79 ]
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %142, label %88

88:                                               ; preds = %84
  %89 = and i64 %85, -4294967296
  %90 = add i64 %85, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %89, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = icmp ugt i16 %97, 185
  br i1 %98, label %99, label %142

99:                                               ; preds = %88, %57, %48
  %100 = phi i64 [ %50, %48 ], [ %45, %57 ], [ %85, %88 ]
  br label %12

101:                                              ; preds = %24
  %102 = inttoptr i64 %15 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %14, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = add i16 %108, -1059
  %110 = icmp ult i16 %109, 15
  br i1 %110, label %111, label %142

111:                                              ; preds = %101
  %112 = add i64 %13, 15
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = or i64 %14, %115
  %117 = add i64 %116, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %14, %120
  %122 = add i64 %121, 19
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %14, %125
  %127 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %9, align 8
  %128 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %111
  %130 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %127, i64 %126) #9
  br label %142

131:                                              ; preds = %111
  %132 = load i64*, i64** %10, align 8
  %133 = load i64*, i64** %11, align 8
  %134 = icmp eq i64* %132, %133
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #9
  br label %137

137:                                              ; preds = %135, %131
  %138 = phi i64* [ %136, %135 ], [ %132, %131 ]
  %139 = ptrtoint i64* %138 to i64
  %140 = add i64 %139, 8
  %141 = inttoptr i64 %140 to i64*
  store i64* %141, i64** %10, align 8
  store i64 %126, i64* %138, align 8
  br label %142

142:                                              ; preds = %84, %88, %137, %129, %101
  %143 = phi i64* [ null, %101 ], [ %130, %129 ], [ %138, %137 ], [ null, %88 ], [ null, %84 ]
  ret i64* %143
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  br label %3

3:                                                ; preds = %58, %1
  %4 = load i32, i32* %2, align 4
  switch i32 %4, label %58 [
    i32 4, label %65
    i32 6, label %53
    i32 7, label %5
    i32 3, label %6
    i32 2, label %11
    i32 0, label %19
    i32 1, label %65
    i32 5, label %26
  ]

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

6:                                                ; preds = %3
  %7 = tail call i64 @_ZN2v88internal7JSProxy21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0) #9
  %8 = and i64 %7, -256
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  br label %65

11:                                               ; preds = %3
  %12 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0) #9
  %13 = tail call fastcc i64 @_ZN2v88internal12_GLOBAL__N_144GetPropertyAttributesWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEE(%"class.v8::internal::LookupIterator"* %0, i64* %12) #9
  %14 = trunc i64 %13 to i8
  %15 = lshr i64 %13, 32
  %16 = icmp eq i8 %14, 0
  br i1 %16, label %59, label %17

17:                                               ; preds = %11
  %18 = icmp eq i64 %15, 64
  br i1 %18, label %58, label %62

19:                                               ; preds = %3
  %20 = tail call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %20, label %58, label %21

21:                                               ; preds = %19
  %22 = tail call i64 @_ZN2v88internal8JSObject42GetPropertyAttributesWithFailedAccessCheckEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0)
  %23 = and i64 %22, -256
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  br label %65

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %48, label %32

32:                                               ; preds = %26
  %33 = and i64 %29, -4294967296
  %34 = add i64 %29, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %33, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp eq i16 %41, 191
  br i1 %42, label %43, label %48

43:                                               ; preds = %32
  %44 = tail call i64 @_ZN2v88internal17JSModuleNamespace21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0) #9
  %45 = and i64 %44, -256
  %46 = lshr i64 %44, 32
  %47 = trunc i64 %46 to i32
  br label %65

48:                                               ; preds = %26, %32
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = lshr i32 %50, 3
  %52 = and i32 %51, 7
  br label %65

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = lshr i32 %55, 3
  %57 = and i32 %56, 7
  br label %65

58:                                               ; preds = %3, %17, %19
  tail call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %3

59:                                               ; preds = %11
  %60 = and i64 %13, -256
  %61 = trunc i64 %15 to i32
  br label %65

62:                                               ; preds = %17
  %63 = and i64 %13, -256
  %64 = trunc i64 %15 to i32
  br label %65

65:                                               ; preds = %3, %3, %59, %62, %53, %48, %43, %21, %6
  %66 = phi i64 [ 1, %53 ], [ %44, %43 ], [ 1, %48 ], [ %22, %21 ], [ %7, %6 ], [ 0, %59 ], [ %13, %62 ], [ 1, %3 ], [ 1, %3 ]
  %67 = phi i32 [ %57, %53 ], [ %47, %43 ], [ %52, %48 ], [ %25, %21 ], [ %10, %6 ], [ %61, %59 ], [ %64, %62 ], [ 64, %3 ], [ 64, %3 ]
  %68 = phi i64 [ 0, %53 ], [ %45, %43 ], [ 0, %48 ], [ %23, %21 ], [ %8, %6 ], [ %60, %59 ], [ %63, %62 ], [ 0, %3 ], [ 0, %3 ]
  %69 = zext i32 %67 to i64
  %70 = shl nuw i64 %69, 32
  %71 = and i64 %68, 4294967040
  %72 = and i64 %66, 255
  %73 = or i64 %70, %72
  %74 = or i64 %73, %71
  ret i64 %74
}

declare i64 @_ZN2v88internal7JSProxy21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal17JSModuleNamespace21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10JSReceiver15SetIdentityHashEi(%"class.v8::internal::JSReceiver"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %12 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %11, i64 0, i32 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !5
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %11, i64 0, i32 1, i64 0
  br label %27

19:                                               ; preds = %13, %2
  %20 = and i64 %10, -262144
  %21 = or i64 %20, 16
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 16
  %24 = add i64 %23, -41416
  %25 = inttoptr i64 %24 to %"class.v8::internal::Isolate"*
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %27

27:                                               ; preds = %19, %17
  %28 = phi i64* [ %26, %19 ], [ %18, %17 ]
  %29 = getelementptr inbounds i64, i64* %28, i64 29
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %8, %31
  br i1 %32, label %48, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds i64, i64* %28, i64 106
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %8, %36
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds i64, i64* %28, i64 115
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %8, %41
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds i64, i64* %28, i64 117
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %8, %46
  br i1 %47, label %48, label %51

48:                                               ; preds = %43, %38, %33, %27
  %49 = sext i32 %1 to i64
  %50 = shl nsw i64 %49, 1
  br label %78

51:                                               ; preds = %43
  %52 = add i64 %10, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %5, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = icmp eq i16 %59, 176
  br i1 %60, label %61, label %68

61:                                               ; preds = %51
  %62 = add i64 %10, 3
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, -2147481602
  %66 = shl i32 %1, 11
  %67 = or i32 %65, %66
  store atomic volatile i32 %67, i32* %63 monotonic, align 4
  br label %78

68:                                               ; preds = %51
  %69 = load atomic i32, i32* %53 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %5, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = shl i32 %1, 1
  %76 = add i64 %10, 23
  %77 = inttoptr i64 %76 to i32*
  store atomic volatile i32 %75, i32* %77 monotonic, align 4
  br label %78

78:                                               ; preds = %48, %61, %68
  %79 = phi i64 [ %50, %48 ], [ %10, %61 ], [ %10, %68 ]
  %80 = load i64, i64* %3, align 8
  %81 = add i64 %80, 3
  %82 = inttoptr i64 %81 to i32*
  %83 = trunc i64 %79 to i32
  store atomic volatile i32 %83, i32* %82 monotonic, align 4
  %84 = load i64, i64* %3, align 8
  %85 = add i64 %84, 3
  %86 = and i64 %79, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %118, label %88

88:                                               ; preds = %78
  %89 = and i64 %84, -262144
  %90 = or i64 %89, 8
  %91 = inttoptr i64 %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = and i64 %92, 262144
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %88
  %96 = or i64 %89, 16
  %97 = inttoptr i64 %96 to %"class.v8::internal::Heap"**
  %98 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %97, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %98, i64 %84, i64 %85, i64 %79) #9
  %99 = load i64, i64* %3, align 8
  %100 = add i64 %99, 3
  br label %101

101:                                              ; preds = %95, %88
  %102 = phi i64 [ %100, %95 ], [ %85, %88 ]
  %103 = phi i64 [ %99, %95 ], [ %84, %88 ]
  %104 = and i64 %79, -262144
  %105 = or i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 24
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %118, label %110

110:                                              ; preds = %101
  %111 = and i64 %103, -262144
  %112 = or i64 %111, 8
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, 24
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %110
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %103, i64 %102, i64 %79) #9
  br label %118

118:                                              ; preds = %78, %101, %110, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = and i64 %9, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = ashr i32 %8, 1
  br label %57

15:                                               ; preds = %2
  %16 = add i64 %10, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %5, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 176
  br i1 %24, label %25, label %31

25:                                               ; preds = %15
  %26 = add i64 %10, 3
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 11
  %30 = and i32 %29, 1048575
  br label %57

31:                                               ; preds = %15
  %32 = load atomic i32, i32* %17 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %5, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 123
  br i1 %38, label %39, label %44

39:                                               ; preds = %31
  %40 = add i64 %10, 23
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = ashr i32 %42, 1
  br label %57

44:                                               ; preds = %31
  %45 = load atomic i32, i32* %17 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %5, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp eq i16 %50, 122
  br i1 %51, label %52, label %130

52:                                               ; preds = %44
  %53 = add i64 %10, 23
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = ashr i32 %55, 1
  br label %57

57:                                               ; preds = %13, %25, %39, %52
  %58 = phi i32 [ %14, %13 ], [ %30, %25 ], [ %43, %39 ], [ %56, %52 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %130, label %60

60:                                               ; preds = %57
  %61 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %62 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %61, i64 0, i32 0, i32 1
  %65 = load i8, i8* %64, align 8, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %61, i64 0, i32 1, i64 0
  br label %77

69:                                               ; preds = %63, %60
  %70 = and i64 %1, -262144
  %71 = or i64 %70, 16
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 16
  %74 = add i64 %73, -41416
  %75 = inttoptr i64 %74 to %"class.v8::internal::Isolate"*
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %77

77:                                               ; preds = %69, %67
  %78 = phi i64* [ %76, %69 ], [ %68, %67 ]
  %79 = getelementptr inbounds i64, i64* %78, i64 29
  %80 = load i64, i64* %79, align 8
  %81 = trunc i64 %1 to i32
  %82 = trunc i64 %80 to i32
  %83 = icmp eq i32 %81, %82
  br i1 %83, label %99, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds i64, i64* %78, i64 106
  %86 = load i64, i64* %85, align 8
  %87 = trunc i64 %86 to i32
  %88 = icmp eq i32 %81, %87
  br i1 %88, label %99, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds i64, i64* %78, i64 115
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %91 to i32
  %93 = icmp eq i32 %81, %92
  br i1 %93, label %99, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds i64, i64* %78, i64 117
  %96 = load i64, i64* %95, align 8
  %97 = trunc i64 %96 to i32
  %98 = icmp eq i32 %81, %97
  br i1 %98, label %99, label %102

99:                                               ; preds = %94, %89, %84, %77
  %100 = sext i32 %58 to i64
  %101 = shl nsw i64 %100, 1
  br label %130

102:                                              ; preds = %94
  %103 = and i64 %1, -4294967296
  %104 = add i64 %1, -1
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %103, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp eq i16 %111, 176
  br i1 %112, label %113, label %120

113:                                              ; preds = %102
  %114 = add i64 %1, 3
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, -2147481602
  %118 = shl i32 %58, 11
  %119 = or i32 %117, %118
  store atomic volatile i32 %119, i32* %115 monotonic, align 4
  br label %130

120:                                              ; preds = %102
  %121 = load atomic i32, i32* %105 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %103, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = shl nsw i32 %58, 1
  %128 = add i64 %1, 23
  %129 = inttoptr i64 %128 to i32*
  store atomic volatile i32 %127, i32* %129 monotonic, align 4
  br label %130

130:                                              ; preds = %44, %120, %113, %99, %57
  %131 = phi i64 [ %1, %57 ], [ %101, %99 ], [ %1, %113 ], [ %1, %120 ], [ %1, %44 ]
  %132 = load i64, i64* %3, align 8
  %133 = add i64 %132, 3
  %134 = inttoptr i64 %133 to i32*
  %135 = trunc i64 %131 to i32
  store atomic volatile i32 %135, i32* %134 monotonic, align 4
  %136 = load i64, i64* %3, align 8
  %137 = add i64 %136, 3
  %138 = and i64 %131, 1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %170, label %140

140:                                              ; preds = %130
  %141 = and i64 %136, -262144
  %142 = or i64 %141, 8
  %143 = inttoptr i64 %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, 262144
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %153, label %147

147:                                              ; preds = %140
  %148 = or i64 %141, 16
  %149 = inttoptr i64 %148 to %"class.v8::internal::Heap"**
  %150 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %149, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %150, i64 %136, i64 %137, i64 %131) #9
  %151 = load i64, i64* %3, align 8
  %152 = add i64 %151, 3
  br label %153

153:                                              ; preds = %147, %140
  %154 = phi i64 [ %152, %147 ], [ %137, %140 ]
  %155 = phi i64 [ %151, %147 ], [ %136, %140 ]
  %156 = and i64 %131, -262144
  %157 = or i64 %156, 8
  %158 = inttoptr i64 %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = and i64 %159, 24
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %170, label %162

162:                                              ; preds = %153
  %163 = and i64 %155, -262144
  %164 = or i64 %163, 8
  %165 = inttoptr i64 %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = and i64 %166, 24
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %162
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %155, i64 %154, i64 %131) #9
  br label %170

170:                                              ; preds = %130, %153, %162, %169
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = and i64 %8, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = ashr i32 %7, 1
  br label %56

14:                                               ; preds = %1
  %15 = add i64 %9, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 176
  br i1 %23, label %24, label %30

24:                                               ; preds = %14
  %25 = add i64 %9, 3
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = lshr i32 %27, 11
  %29 = and i32 %28, 1048575
  br label %56

30:                                               ; preds = %14
  %31 = load atomic i32, i32* %16 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %4, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp eq i16 %36, 123
  br i1 %37, label %38, label %43

38:                                               ; preds = %30
  %39 = add i64 %9, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = ashr i32 %41, 1
  br label %56

43:                                               ; preds = %30
  %44 = load atomic i32, i32* %16 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %4, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp eq i16 %49, 122
  br i1 %50, label %51, label %59

51:                                               ; preds = %43
  %52 = add i64 %9, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = ashr i32 %54, 1
  br label %56

56:                                               ; preds = %12, %24, %38, %51
  %57 = phi i32 [ %13, %12 ], [ %29, %24 ], [ %42, %38 ], [ %55, %51 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %80

59:                                               ; preds = %43, %56
  %60 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %61 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %60, i64 0, i32 0, i32 1
  %64 = load i8, i8* %63, align 8, !range !5
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %60, i64 0, i32 1, i64 0
  br label %76

68:                                               ; preds = %62, %59
  %69 = and i64 %3, -262144
  %70 = or i64 %69, 16
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 16
  %73 = add i64 %72, -41416
  %74 = inttoptr i64 %73 to %"class.v8::internal::Isolate"*
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %76

76:                                               ; preds = %66, %68
  %77 = phi i64* [ %75, %68 ], [ %67, %66 ]
  %78 = getelementptr inbounds i64, i64* %77, i64 4
  %79 = load i64, i64* %78, align 8
  br label %83

80:                                               ; preds = %56
  %81 = sext i32 %57 to i64
  %82 = shl nsw i64 %81, 1
  br label %83

83:                                               ; preds = %80, %76
  %84 = phi i64 [ %79, %76 ], [ %82, %80 ]
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10JSReceiver18CreateIdentityHashEPNS0_7IsolateES1_(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = tail call i32 @_ZN2v88internal7Isolate20GenerateIdentityHashEj(%"class.v8::internal::Isolate"* %0, i32 1048575) #9
  call void @_ZN2v88internal10JSReceiver15SetIdentityHashEi(%"class.v8::internal::JSReceiver"* nonnull %3, i32 %5)
  %6 = sext i32 %5 to i64
  %7 = shl nsw i64 %6, 1
  ret i64 %7
}

declare i32 @_ZN2v88internal7Isolate20GenerateIdentityHashEj(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10JSReceiver23GetOrCreateIdentityHashEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = ashr i32 %9, 1
  br label %58

16:                                               ; preds = %2
  %17 = add i64 %11, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %6, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 176
  br i1 %25, label %26, label %32

26:                                               ; preds = %16
  %27 = add i64 %11, 3
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = lshr i32 %29, 11
  %31 = and i32 %30, 1048575
  br label %58

32:                                               ; preds = %16
  %33 = load atomic i32, i32* %18 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %6, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 123
  br i1 %39, label %40, label %45

40:                                               ; preds = %32
  %41 = add i64 %11, 23
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = ashr i32 %43, 1
  br label %58

45:                                               ; preds = %32
  %46 = load atomic i32, i32* %18 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %6, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = icmp eq i16 %51, 122
  br i1 %52, label %53, label %61

53:                                               ; preds = %45
  %54 = add i64 %11, 23
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = ashr i32 %56, 1
  br label %58

58:                                               ; preds = %14, %26, %40, %53
  %59 = phi i32 [ %15, %14 ], [ %31, %26 ], [ %44, %40 ], [ %57, %53 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %45, %58
  %62 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %63, align 8
  %64 = tail call i32 @_ZN2v88internal7Isolate20GenerateIdentityHashEj(%"class.v8::internal::Isolate"* %1, i32 1048575) #9
  call void @_ZN2v88internal10JSReceiver15SetIdentityHashEi(%"class.v8::internal::JSReceiver"* nonnull %3, i32 %64) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  br label %65

65:                                               ; preds = %58, %61
  %66 = phi i32 [ %64, %61 ], [ %59, %58 ]
  %67 = sext i32 %66 to i64
  %68 = shl nsw i64 %67, 1
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10JSReceiver24DeleteNormalizedPropertyENS0_6HandleIS1_EENS0_13InternalIndexE(i64*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", align 8
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = and i64 %5, -4294967296
  %13 = add i64 %5, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 189
  %22 = add i64 %5, 3
  %23 = inttoptr i64 %22 to i32*
  br i1 %21, label %24, label %120

24:                                               ; preds = %2
  %25 = load atomic i32, i32* %23 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %12, %26
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %27) #9
  %33 = load i64, i64* %32, align 8
  br label %47

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %36, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #9
  br label %42

42:                                               ; preds = %40, %34
  %43 = phi i64* [ %41, %40 ], [ %36, %34 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %35, align 8
  store i64 %27, i64* %43, align 8
  br label %47

47:                                               ; preds = %31, %42
  %48 = phi i64 [ %33, %31 ], [ %27, %42 ]
  %49 = phi i64* [ %32, %31 ], [ %43, %42 ]
  %50 = and i64 %48, -4294967296
  %51 = trunc i64 %1 to i32
  %52 = shl i32 %51, 2
  %53 = add i32 %52, 20
  %54 = sext i32 %53 to i64
  %55 = add nsw i64 %54, 7
  %56 = add i64 %55, %48
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %50, %59
  %61 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %62 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %47
  %64 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %61, i64 %60) #9
  br label %78

65:                                               ; preds = %47
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %69 = load i64*, i64** %68, align 8
  %70 = icmp eq i64* %67, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %65
  %72 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #9
  br label %73

73:                                               ; preds = %71, %65
  %74 = phi i64* [ %72, %71 ], [ %67, %65 ]
  %75 = ptrtoint i64* %74 to i64
  %76 = add i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  store i64* %77, i64** %66, align 8
  store i64 %60, i64* %74, align 8
  br label %78

78:                                               ; preds = %63, %73
  %79 = phi i64* [ %64, %63 ], [ %74, %73 ]
  %80 = tail call i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"* %11, i64* %49, i64 %1) #9
  %81 = load i64, i64* %0, align 8
  %82 = load i64, i64* %80, align 8
  %83 = add i64 %81, 3
  %84 = inttoptr i64 %83 to i32*
  %85 = trunc i64 %82 to i32
  store atomic volatile i32 %85, i32* %84 release, align 4
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %99, label %88

88:                                               ; preds = %78
  %89 = and i64 %81, -262144
  %90 = or i64 %89, 8
  %91 = inttoptr i64 %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = and i64 %92, 262144
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %88
  %96 = or i64 %89, 16
  %97 = inttoptr i64 %96 to %"class.v8::internal::Heap"**
  %98 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %97, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %98, i64 %81, i64 %83, i64 %82) #9
  br label %99

99:                                               ; preds = %95, %88, %78
  %100 = and i64 %82, -262144
  %101 = or i64 %100, 8
  %102 = inttoptr i64 %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %103, 24
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %99
  %107 = and i64 %81, -262144
  %108 = or i64 %107, 8
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = and i64 %110, 24
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %106
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %81, i64 %83, i64 %82) #9
  br label %114

114:                                              ; preds = %99, %106, %113
  %115 = bitcast %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #9
  %116 = load i64, i64* %79, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef", %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef", %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef"* %3, i64 0, i32 0
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 0
  call void @_ZN2v88internal12PropertyCell18ClearAndInvalidateENS0_13ReadOnlyRootsE(%"class.v8::internal::PropertyCell"* nonnull %118, i64* %119) #9
  br label %169

120:                                              ; preds = %2
  %121 = load i32, i32* %23, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %12, %122
  %124 = and i64 %122, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %141

126:                                              ; preds = %120
  %127 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %128 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %127, null
  br i1 %128, label %135, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %127, i64 0, i32 0, i32 1
  %131 = load i8, i8* %130, align 8, !range !5
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %127, i64 0, i32 1, i64 0
  br label %137

135:                                              ; preds = %129, %126
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i64* [ %136, %135 ], [ %134, %133 ]
  %139 = getelementptr inbounds i64, i64* %138, i64 115
  %140 = load i64, i64* %139, align 8
  br label %141

141:                                              ; preds = %120, %137
  %142 = phi i64 [ %140, %137 ], [ %123, %120 ]
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %144 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %143, align 8
  %145 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %141
  %147 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %144, i64 %142) #9
  br label %161

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %152 = load i64*, i64** %151, align 8
  %153 = icmp eq i64* %150, %152
  br i1 %153, label %154, label %156

154:                                              ; preds = %148
  %155 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #9
  br label %156

156:                                              ; preds = %154, %148
  %157 = phi i64* [ %155, %154 ], [ %150, %148 ]
  %158 = ptrtoint i64* %157 to i64
  %159 = add i64 %158, 8
  %160 = inttoptr i64 %159 to i64*
  store i64* %160, i64** %149, align 8
  store i64 %142, i64* %157, align 8
  br label %161

161:                                              ; preds = %146, %156
  %162 = phi i64* [ %147, %146 ], [ %157, %156 ]
  %163 = tail call i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"* %11, i64* %162, i64 %1) #9
  %164 = bitcast %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #9
  %165 = load i64, i64* %0, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %4, i64 0, i32 0
  %168 = load i64, i64* %163, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %167, i64 %168)
  br label %169

169:                                              ; preds = %161, %114
  %170 = phi i8* [ %164, %161 ], [ %115, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #9
  %171 = load i64, i64* %0, align 8
  %172 = and i64 %171, -4294967296
  %173 = add i64 %171, -1
  %174 = inttoptr i64 %173 to i32*
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = zext i32 %175 to i64
  %177 = or i64 %172, %176
  %178 = add i64 %177, 11
  %179 = inttoptr i64 %178 to i32*
  %180 = load atomic i32, i32* %179 acquire, align 4
  %181 = and i32 %180, 1048576
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %169
  %184 = load i64, i64* %0, align 8
  %185 = and i64 %184, -4294967296
  %186 = add i64 %184, -1
  %187 = inttoptr i64 %186 to i32*
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = zext i32 %188 to i64
  %190 = or i64 %185, %189
  call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %190) #9
  br label %191

191:                                              ; preds = %169, %183
  ret void
}

declare i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal12PropertyCell18ClearAndInvalidateENS0_13ReadOnlyRootsE(%"class.v8::internal::PropertyCell"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64 returned) local_unnamed_addr #0 align 2 {
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %0)
  ret i64 %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver14DeletePropertyEPNS0_14LookupIteratorENS0_12LanguageModeE(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %7, label %68

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 40, i1 false) #9
  %15 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17, !prof !4

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 14, i32 0
  %21 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %21, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %22, %"class.v8::internal::RuntimeCallStats"** %18, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %22, %"class.v8::internal::RuntimeCallTimer"* %19, i32 207) #9
  br label %23

23:                                               ; preds = %17, %7
  %24 = load i64, i64* %13, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 521
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %24 to i32
  %28 = trunc i64 %26 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %60, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 297
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %27, %33
  br i1 %34, label %60, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 383
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %27, %38
  br i1 %39, label %60, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 516
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %27, %43
  br i1 %44, label %60, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 510
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %27, %48
  br i1 %49, label %60, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 420
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32 %27, %53
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 447
  %57 = load i64, i64* %56, align 8
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %27, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %55, %50, %45, %40, %35, %30, %23
  call void @_ZN2v88internal14LookupIterator23InternalUpdateProtectorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %9, i64* %11, i64* %13) #9
  br label %61

61:                                               ; preds = %60, %55
  %62 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %63 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %62, align 8
  %64 = icmp eq %"class.v8::internal::RuntimeCallStats"* %63, null
  br i1 %64, label %67, label %65, !prof !4

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %63, %"class.v8::internal::RuntimeCallTimer"* %66) #9
  br label %67

67:                                               ; preds = %65, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #9
  br label %68

68:                                               ; preds = %2, %67
  %69 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %70 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 3
  %74 = bitcast %"class.v8::internal::Isolate"* %70 to %"class.v8::internal::Factory"*
  br i1 %73, label %75, label %90

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %79 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %78, i64 0, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %80, null
  br i1 %81, label %82, label %87

82:                                               ; preds = %75
  %83 = load i64, i64* %4, align 8
  %84 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %83, i1 zeroext true) #9
  %85 = ptrtoint i64* %84 to i64
  %86 = bitcast %"class.v8::internal::Handle.1137"* %78 to i64*
  store i64 %85, i64* %86, align 8
  br label %87

87:                                               ; preds = %75, %82
  %88 = phi i64* [ %84, %82 ], [ %80, %75 ]
  %89 = call i16 @_ZN2v88internal7JSProxy23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64* %77, i64* %88, i1 zeroext %1) #9
  br label %196

90:                                               ; preds = %68
  %91 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %110, label %96

96:                                               ; preds = %90
  %97 = and i64 %93, -4294967296
  %98 = add i64 %93, -1
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %97, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = icmp eq i16 %105, 188
  br i1 %106, label %107, label %110

107:                                              ; preds = %96
  %108 = icmp eq i32 %72, 4
  br i1 %108, label %196, label %109

109:                                              ; preds = %107
  call void @_ZN2v88internal14LookupIterator6DeleteEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %196

110:                                              ; preds = %90, %96
  %111 = xor i1 %1, true
  %112 = zext i1 %111 to i32
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 0, i32 7, i32 0, i64 5
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  br label %115

115:                                              ; preds = %194, %110
  %116 = phi i32 [ %72, %110 ], [ %195, %194 ]
  switch i32 %116, label %194 [
    i32 4, label %196
    i32 3, label %117
    i32 5, label %141
    i32 7, label %117
    i32 0, label %118
    i32 2, label %131
    i32 1, label %196
    i32 6, label %141
  ]

117:                                              ; preds = %115, %115
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

118:                                              ; preds = %115
  %119 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %119, label %194, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %122 = load i64*, i64** %121, align 8
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %70, i64* %122) #9
  %123 = load i64, i64* %113, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = trunc i64 %125 to i32
  %127 = trunc i64 %123 to i32
  %128 = icmp eq i32 %126, %127
  br i1 %128, label %196, label %129

129:                                              ; preds = %120
  %130 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %70) #9
  br label %196

131:                                              ; preds = %115
  %132 = call i16 @_ZN2v88internal8JSObject29DeletePropertyWithInterceptorEPNS0_14LookupIteratorENS0_11ShouldThrowE(%"class.v8::internal::LookupIterator"* %0, i32 %112)
  %133 = load i64, i64* %113, align 8
  %134 = load i64, i64* %114, align 8
  %135 = trunc i64 %134 to i32
  %136 = trunc i64 %133 to i32
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %138, label %196

138:                                              ; preds = %131
  %139 = trunc i16 %132 to i8
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %194, label %196

141:                                              ; preds = %115, %115
  %142 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = and i32 %143, 32
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %175

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %148 = load i64*, i64** %147, align 8
  %149 = load i64, i64* %148, align 8
  %150 = and i64 %149, -4294967296
  %151 = add i64 %149, -1
  %152 = inttoptr i64 %151 to i32*
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = zext i32 %153 to i64
  %155 = or i64 %150, %154
  %156 = add i64 %155, 7
  %157 = inttoptr i64 %156 to i16*
  %158 = load atomic i16, i16* %157 monotonic, align 2
  %159 = icmp eq i16 %158, 1080
  br i1 %159, label %160, label %193

160:                                              ; preds = %146
  %161 = load i64, i64* %4, align 8
  %162 = icmp ult i64 %161, 4294967295
  br i1 %162, label %175, label %163

163:                                              ; preds = %160
  %164 = icmp eq i64 %161, -1
  br i1 %164, label %193, label %165

165:                                              ; preds = %163
  %166 = load atomic i32, i32* %152 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %150, %167
  %169 = add i64 %168, 10
  %170 = inttoptr i64 %169 to i8*
  %171 = load i8, i8* %170, align 1
  %172 = lshr i8 %171, 2
  %173 = add nsw i8 %172, -17
  %174 = icmp ult i8 %173, 22
  br i1 %174, label %175, label %193

175:                                              ; preds = %160, %141, %165
  br i1 %1, label %176, label %196

176:                                              ; preds = %175
  %177 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %178 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %177, i64 0, i32 0, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = icmp eq i64* %179, null
  br i1 %180, label %181, label %188

181:                                              ; preds = %176
  %182 = bitcast %"class.v8::internal::Isolate"** %69 to %"class.v8::internal::Factory"**
  %183 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %182, align 8
  %184 = load i64, i64* %4, align 8
  %185 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %183, i64 %184, i1 zeroext true) #9
  %186 = ptrtoint i64* %185 to i64
  %187 = bitcast %"class.v8::internal::Handle.1137"* %177 to i64*
  store i64 %186, i64* %187, align 8
  br label %188

188:                                              ; preds = %176, %181
  %189 = phi i64* [ %185, %181 ], [ %179, %176 ]
  %190 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %74, i32 169, i64* %189, i64* %92, i64* null) #9
  %191 = load i64, i64* %190, align 8
  %192 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %70, i64 %191, %"class.v8::internal::MessageLocation"* null) #9
  br label %196

193:                                              ; preds = %163, %146, %165
  call void @_ZN2v88internal14LookupIterator6DeleteEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %196

194:                                              ; preds = %138, %115, %118
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  %195 = load i32, i32* %71, align 4
  br label %115

196:                                              ; preds = %138, %131, %115, %115, %120, %188, %193, %175, %129, %109, %107, %87
  %197 = phi i16 [ %89, %87 ], [ 0, %129 ], [ 257, %107 ], [ 257, %109 ], [ 1, %120 ], [ 0, %188 ], [ 257, %193 ], [ 1, %175 ], [ 257, %115 ], [ 0, %131 ], [ 257, %115 ], [ %132, %138 ]
  ret i16 %197
}

declare i16 @_ZN2v88internal7JSProxy23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator6DeleteEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject29DeletePropertyWithInterceptorEPNS0_14LookupIteratorENS0_11ShouldThrowE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0)
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 4
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %10, %13
  br i1 %14, label %114, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %15
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp ugt i16 %32, 185
  br i1 %33, label %40, label %34

34:                                               ; preds = %15, %23
  %35 = tail call i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %5, i64* %19) #9
  %36 = icmp eq i64* %35, null
  br i1 %36, label %114, label %37

37:                                               ; preds = %34
  %38 = load i64, i64* %6, align 8
  %39 = load i64, i64* %35, align 8
  br label %40

40:                                               ; preds = %37, %23
  %41 = phi i64 [ %20, %23 ], [ %39, %37 ]
  %42 = phi i64 [ %7, %23 ], [ %38, %37 ]
  %43 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %43) #9
  %44 = and i64 %42, -4294967296
  %45 = add i64 %42, 31
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = load i64, i64* %17, align 8
  %51 = zext i32 %1 to i64
  %52 = shl nuw i64 %51, 32
  %53 = or i64 %52, 1
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %3, %"class.v8::internal::Isolate"* %5, i64 %49, i64 %41, i64 %50, i64 %53) #9
  %54 = load i64, i64* %17, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %56, 4294967295
  br i1 %57, label %73, label %58

58:                                               ; preds = %40
  %59 = icmp eq i64 %56, -1
  br i1 %59, label %76, label %60

60:                                               ; preds = %58
  %61 = and i64 %54, -4294967296
  %62 = add i64 %54, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = add i64 %66, 10
  %68 = inttoptr i64 %67 to i8*
  %69 = load i8, i8* %68, align 1
  %70 = lshr i8 %69, 2
  %71 = add nsw i8 %70, -17
  %72 = icmp ult i8 %71, 22
  br i1 %72, label %73, label %76

73:                                               ; preds = %40, %60
  %74 = trunc i64 %56 to i32
  %75 = call i64* @_ZN2v88internal25PropertyCallbackArguments18CallIndexedDeleterENS0_6HandleINS0_15InterceptorInfoEEEj(%"class.v8::internal::PropertyCallbackArguments"* nonnull %3, i64* %6, i32 %74)
  br label %80

76:                                               ; preds = %58, %60
  %77 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = call i64* @_ZN2v88internal25PropertyCallbackArguments16CallNamedDeleterENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %3, i64* %6, i64* %78)
  br label %80

80:                                               ; preds = %73, %76
  %81 = phi i64* [ %75, %73 ], [ %79, %76 ]
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 5
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = trunc i64 %85 to i32
  %87 = trunc i64 %83 to i32
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %80
  %90 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %5) #9
  br label %103

91:                                               ; preds = %80
  %92 = icmp eq i64* %81, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %91
  %94 = load i64, i64* %81, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 7
  %96 = load i64, i64* %95, align 8
  %97 = trunc i64 %94 to i32
  %98 = trunc i64 %96 to i32
  %99 = icmp eq i32 %97, %98
  %100 = zext i1 %99 to i16
  %101 = shl nuw nsw i16 %100, 8
  %102 = or i16 %101, 1
  br label %103

103:                                              ; preds = %91, %89, %93
  %104 = phi i16 [ %102, %93 ], [ 0, %89 ], [ 0, %91 ]
  %105 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %3, i64 0, i32 0, i32 1, i64 4
  store i64 1994495044801650351, i64* %106, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %108 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %110 = bitcast %"class.v8::internal::Relocatable"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %108, i64 0, i32 91
  %113 = bitcast %"class.v8::internal::Relocatable"** %112 to i64*
  store i64 %111, i64* %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %43) #9
  br label %114

114:                                              ; preds = %103, %34, %2
  %115 = phi i16 [ 0, %2 ], [ %104, %103 ], [ 0, %34 ]
  ret i16 %115
}

declare i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver13DeleteElementENS0_6HandleIS1_EEjNS0_12LanguageModeE(i64*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #9
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = zext i32 %1 to i64
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::Isolate"* %12, i64* %0, i64* null, i64 %13, i64* %0, i32 1) #9
  %14 = call i16 @_ZN2v88internal10JSReceiver14DeletePropertyEPNS0_14LookupIteratorENS0_12LanguageModeE(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext %2)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #9
  ret i16 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver14DeletePropertyENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64*, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #9
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = ptrtoint i64* %0 to i64
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %15 = icmp eq i64* %1, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = load i64, i64* null, align 536870912
  %18 = add i64 %17, -1
  %19 = inttoptr i64 %18 to i32*
  br label %41

20:                                               ; preds = %3
  %21 = load i64, i64* %1, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %21, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i64 %23, 4294967295
  %28 = icmp eq i64 %27, 0
  tail call void @llvm.assume(i1 %28) #9
  %29 = zext i32 %26 to i64
  %30 = or i64 %23, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 64
  br i1 %34, label %35, label %41

35:                                               ; preds = %20
  %36 = add i64 %21, 7
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %16, %35, %20
  %42 = phi i32* [ %19, %16 ], [ %25, %35 ], [ %25, %20 ]
  %43 = phi i64 [ %17, %16 ], [ %21, %35 ], [ %21, %20 ]
  br label %44

44:                                               ; preds = %41, %35
  %45 = phi i32* [ %42, %41 ], [ %25, %35 ]
  %46 = phi i64 [ %43, %41 ], [ %21, %35 ]
  %47 = phi i32 [ 1, %41 ], [ 0, %35 ]
  store i32 %47, i32* %14, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %12, %"class.v8::internal::Isolate"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %1, i64** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %0, i64** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %58 = bitcast %"class.v8::internal::Handle.1138"* %57 to i64*
  store i64 %13, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %60 = bitcast i64* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 -1, i64 16, i1 false) #9
  %61 = and i64 %46, -4294967296
  %62 = load atomic i32, i32* %45 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %61, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = and i16 %67, -32
  %69 = icmp eq i16 %68, 32
  br i1 %69, label %70, label %74

70:                                               ; preds = %44
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  %72 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %71, align 8
  %73 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %72, %"class.v8::internal::Isolate"* %12, i64* %1) #9
  br label %74

74:                                               ; preds = %44, %70
  %75 = phi i64* [ %73, %70 ], [ %1, %44 ]
  store i64* %75, i64** %53, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #9
  %76 = call i16 @_ZN2v88internal10JSReceiver14DeletePropertyEPNS0_14LookupIteratorENS0_12LanguageModeE(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext %2)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #9
  ret i16 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64*, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = load i64, i64* %0, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = ptrtoint i64* %1 to i64
  %16 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %16, align 8
  %17 = load i64, i64* %1, align 8
  %18 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 1
  %19 = and i64 %17, -4294967296
  %20 = add i64 %17, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %19, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp ult i16 %27, 64
  %29 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  br i1 %28, label %30, label %44

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %31, align 8
  %32 = add i64 %17, 3
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, -536870910
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %30
  %38 = lshr i32 %34, 2
  %39 = and i32 %38, 16777215
  %40 = zext i32 %39 to i64
  store i64 %40, i64* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %52

41:                                               ; preds = %30
  %42 = and i32 %34, 3
  %43 = icmp eq i32 %42, 2
  br i1 %43, label %44, label %45

44:                                               ; preds = %41, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %54

45:                                               ; preds = %41
  %46 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %4, i64* %18) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br i1 %46, label %52, label %47

47:                                               ; preds = %45
  %48 = load i64, i64* %1, align 8
  %49 = and i64 %48, -4294967296
  %50 = add i64 %48, -1
  %51 = inttoptr i64 %50 to i32*
  br label %54

52:                                               ; preds = %45, %37
  %53 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i64*
  store i64 %15, i64* %53, align 8
  br label %71

54:                                               ; preds = %47, %44
  %55 = phi i32* [ %51, %47 ], [ %21, %44 ]
  %56 = phi i64 [ %49, %47 ], [ %19, %44 ]
  store i64 -1, i64* %18, align 8
  %57 = load atomic i32, i32* %55 monotonic, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %56, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = and i16 %62, -32
  %64 = icmp eq i16 %63, 32
  br i1 %64, label %65, label %69

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 5, i32 0, i32 0, i32 0
  %67 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %66, align 8
  %68 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %67, %"class.v8::internal::Isolate"* %13, i64* %1) #9
  br label %69

69:                                               ; preds = %65, %54
  %70 = phi i64* [ %68, %65 ], [ %1, %54 ]
  store i64* %70, i64** %16, align 8
  br label %71

71:                                               ; preds = %52, %69
  %72 = phi i64* [ %1, %52 ], [ %70, %69 ]
  %73 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %73) #9
  %74 = load i64, i64* %18, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %13, i64* %0, i64* %72, i64 %74, i64* %0, i32 1) #9
  %75 = call i16 @_ZN2v88internal10JSReceiver14DeletePropertyEPNS0_14LookupIteratorENS0_12LanguageModeE(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext %2)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %73) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  ret i16 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10JSReceiver14DefinePropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_S6_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Vector.1230", align 8
  %6 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %4
  %11 = and i64 %7, -4294967296
  %12 = add i64 %7, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp ugt i16 %19, 185
  br i1 %20, label %30, label %21

21:                                               ; preds = %4, %10
  %22 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %23 = bitcast %"class.v8::internal::Vector.1230"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.v8::internal::Vector.1230", %"class.v8::internal::Vector.1230"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Vector.1230", %"class.v8::internal::Vector.1230"* %5, i64 0, i32 1
  store i64 21, i64* %25, align 8
  %26 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %22, %"class.v8::internal::Vector.1230"* nonnull dereferenceable(16) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  %27 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %22, i32 26, i64* %26, i64* null, i64* null) #9
  %28 = load i64, i64* %27, align 8
  %29 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %28, %"class.v8::internal::MessageLocation"* null) #9
  br label %72

30:                                               ; preds = %10
  %31 = load i64, i64* %2, align 8
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = and i64 %31, -4294967296
  %36 = add i64 %31, -1
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %35, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = icmp ult i16 %43, 65
  br i1 %44, label %47, label %45

45:                                               ; preds = %34
  %46 = tail call i64* @_ZN2v88internal6Object20ConvertToPropertyKeyEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %2) #9
  br label %47

47:                                               ; preds = %30, %34, %45
  %48 = phi i64* [ %46, %45 ], [ %2, %30 ], [ %2, %34 ]
  %49 = icmp eq i64* %48, null
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %52 = load i64, i64* %51, align 8
  br label %72

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #9
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 1, i32 0, i32 0
  %56 = bitcast i64** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #9
  %57 = call zeroext i1 @_ZN2v88internal18PropertyDescriptor20ToPropertyDescriptorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPS1_(%"class.v8::internal::Isolate"* %0, i64* %3, %"class.v8::internal::PropertyDescriptor"* nonnull %6) #9
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %69

60:                                               ; preds = %53
  %61 = call i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* nonnull %48, %"class.v8::internal::PropertyDescriptor"* nonnull %6, i64 1)
  %62 = trunc i16 %61 to i8
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %69

66:                                               ; preds = %60
  %67 = icmp ugt i16 %61, 255
  br i1 %67, label %69, label %68, !prof !4

68:                                               ; preds = %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #14
  unreachable

69:                                               ; preds = %66, %64, %58
  %70 = phi i64* [ %59, %58 ], [ %65, %64 ], [ %1, %66 ]
  %71 = load i64, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #9
  br label %72

72:                                               ; preds = %50, %21, %69
  %73 = phi i64 [ %71, %69 ], [ %52, %50 ], [ %29, %21 ]
  ret i64 %73
}

declare zeroext i1 @_ZN2v88internal18PropertyDescriptor20ToPropertyDescriptorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPS1_(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #0 align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 1085
  br i1 %16, label %17, label %19

17:                                               ; preds = %5
  %18 = tail call i16 @_ZN2v88internal7JSArray17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4) #9
  br label %41

19:                                               ; preds = %5
  %20 = load atomic i32, i32* %9 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %7, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 188
  br i1 %26, label %27, label %29

27:                                               ; preds = %19
  %28 = tail call i16 @_ZN2v88internal7JSProxy17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4) #9
  br label %41

29:                                               ; preds = %19
  %30 = load atomic i32, i32* %9 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %7, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp eq i16 %35, 1080
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = tail call i16 @_ZN2v88internal12JSTypedArray17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4) #9
  br label %41

39:                                               ; preds = %29
  %40 = tail call i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4)
  br label %41

41:                                               ; preds = %39, %37, %27, %17
  %42 = phi i16 [ %18, %17 ], [ %28, %27 ], [ %38, %37 ], [ %40, %39 ]
  ret i16 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver16DefinePropertiesEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Vector.1230", align 8
  %5 = alloca %"class.std::__1::vector.1163", align 8
  %6 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ugt i16 %20, 185
  br i1 %21, label %31, label %22

22:                                               ; preds = %3, %11
  %23 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %24 = bitcast %"class.v8::internal::Vector.1230"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.v8::internal::Vector.1230", %"class.v8::internal::Vector.1230"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Vector.1230", %"class.v8::internal::Vector.1230"* %4, i64 0, i32 1
  store i64 23, i64* %26, align 8
  %27 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %23, %"class.v8::internal::Vector.1230"* nonnull dereferenceable(16) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  %28 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %23, i32 26, i64* %27, i64* null, i64* null) #9
  %29 = load i64, i64* %28, align 8
  %30 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %29, %"class.v8::internal::MessageLocation"* null) #9
  br label %200

31:                                               ; preds = %11
  %32 = load i64, i64* %2, align 8
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = and i64 %32, -4294967296
  %37 = add i64 %32, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %36, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp ugt i16 %44, 185
  br i1 %45, label %48, label %46

46:                                               ; preds = %35, %31
  %47 = tail call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %2, i8* null) #9
  br label %48

48:                                               ; preds = %35, %46
  %49 = phi i64* [ %47, %46 ], [ %2, %35 ]
  %50 = icmp eq i64* %49, null
  br i1 %50, label %200, label %51

51:                                               ; preds = %48
  %52 = tail call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* nonnull %49, i32 0, i32 0, i32 1, i1 zeroext false, i1 zeroext false) #9
  %53 = icmp eq i64* %52, null
  br i1 %53, label %200, label %54

54:                                               ; preds = %51
  %55 = load i64, i64* %52, align 8
  %56 = add i64 %55, 3
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = ashr i32 %58, 1
  %60 = bitcast %"class.std::__1::vector.1163"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #9
  %61 = sext i32 %59 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #9
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %88, label %63

63:                                               ; preds = %54
  %64 = icmp slt i32 %58, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = bitcast %"class.std::__1::vector.1163"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %66) #14
  unreachable

67:                                               ; preds = %63
  %68 = mul nsw i64 %61, 40
  %69 = tail call i8* @_Znwm(i64 %68) #15
  %70 = bitcast i8* %69 to %"class.v8::internal::PropertyDescriptor"*
  %71 = getelementptr inbounds %"class.std::__1::vector.1163", %"class.std::__1::vector.1163"* %5, i64 0, i32 0, i32 1
  %72 = bitcast %"class.v8::internal::PropertyDescriptor"** %71 to i8**
  store i8* %69, i8** %72, align 8
  %73 = bitcast %"class.std::__1::vector.1163"* %5 to i8**
  store i8* %69, i8** %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %70, i64 %61
  %75 = getelementptr inbounds %"class.std::__1::vector.1163", %"class.std::__1::vector.1163"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::PropertyDescriptor"* %74, %"class.v8::internal::PropertyDescriptor"** %75, align 8
  br label %76

76:                                               ; preds = %76, %67
  %77 = phi %"class.v8::internal::PropertyDescriptor"* [ %83, %76 ], [ %70, %67 ]
  %78 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %77, i64 0, i32 0
  %79 = load i8, i8* %78, align 8
  %80 = and i8 %79, -64
  store i8 %80, i8* %78, align 8
  %81 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %77, i64 0, i32 1, i32 0, i32 0
  %82 = bitcast i64** %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 32, i1 false) #9
  %83 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %77, i64 1
  %84 = icmp eq %"class.v8::internal::PropertyDescriptor"* %83, %74
  br i1 %84, label %85, label %76

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::internal::PropertyDescriptor"** %71 to i64*
  %87 = ptrtoint %"class.v8::internal::PropertyDescriptor"* %74 to i64
  store i64 %87, i64* %86, align 8
  br label %88

88:                                               ; preds = %54, %85
  %89 = load i64, i64* %52, align 8
  %90 = add i64 %89, 3
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, 1
  br i1 %93, label %94, label %187

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %98 = bitcast %"class.v8::internal::LookupIterator::Key"* %6 to i8*
  %99 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  %100 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 1
  %102 = getelementptr inbounds %"class.std::__1::vector.1163", %"class.std::__1::vector.1163"* %5, i64 0, i32 0, i32 0
  br label %107

103:                                              ; preds = %162
  %104 = icmp eq i64 %163, 0
  br i1 %104, label %187, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.std::__1::vector.1163", %"class.std::__1::vector.1163"* %5, i64 0, i32 0, i32 0
  br label %174

107:                                              ; preds = %94, %162
  %108 = phi i64 [ 0, %94 ], [ %164, %162 ]
  %109 = phi i64 [ %89, %94 ], [ %165, %162 ]
  %110 = phi i64 [ 0, %94 ], [ %163, %162 ]
  %111 = and i64 %109, -4294967296
  %112 = trunc i64 %108 to i32
  %113 = shl i32 %112, 2
  %114 = sext i32 %113 to i64
  %115 = add nsw i64 %114, 7
  %116 = add i64 %115, %109
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %111, %119
  %121 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %95, align 8
  %122 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %107
  %124 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %121, i64 %120) #9
  br label %136

125:                                              ; preds = %107
  %126 = load i64*, i64** %96, align 8
  %127 = load i64*, i64** %97, align 8
  %128 = icmp eq i64* %126, %127
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %131

131:                                              ; preds = %129, %125
  %132 = phi i64* [ %130, %129 ], [ %126, %125 ]
  %133 = ptrtoint i64* %132 to i64
  %134 = add i64 %133, 8
  %135 = inttoptr i64 %134 to i64*
  store i64* %135, i64** %96, align 8
  store i64 %120, i64* %132, align 8
  br label %136

136:                                              ; preds = %123, %131
  %137 = phi i64* [ %124, %123 ], [ %132, %131 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* %137)
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %99) #9
  %138 = load i64*, i64** %100, align 8
  %139 = load i64, i64* %101, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::Isolate"* %0, i64* nonnull %49, i64* %138, i64 %139, i64* nonnull %49, i32 1) #9
  %140 = call i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %7)
  %141 = trunc i64 %140 to i8
  %142 = lshr i64 %140, 32
  %143 = trunc i64 %142 to i32
  %144 = icmp eq i8 %141, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %136
  %146 = icmp ne i32 %143, 64
  %147 = and i32 %143, 2
  %148 = icmp eq i32 %147, 0
  %149 = and i1 %146, %148
  br i1 %149, label %150, label %162

150:                                              ; preds = %145
  %151 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %7, i1 zeroext false) #9
  %152 = icmp eq i64* %151, null
  br i1 %152, label %161, label %153

153:                                              ; preds = %150
  %154 = load %"class.v8::internal::PropertyDescriptor"*, %"class.v8::internal::PropertyDescriptor"** %102, align 8
  %155 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %154, i64 %110
  %156 = call zeroext i1 @_ZN2v88internal18PropertyDescriptor20ToPropertyDescriptorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPS1_(%"class.v8::internal::Isolate"* %0, i64* nonnull %151, %"class.v8::internal::PropertyDescriptor"* %155) #9
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = load %"class.v8::internal::PropertyDescriptor"*, %"class.v8::internal::PropertyDescriptor"** %102, align 8
  %159 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %158, i64 %110, i32 4, i32 0, i32 0
  store i64* %137, i64** %159, align 8
  %160 = add i64 %110, 1
  br label %162

161:                                              ; preds = %153, %150, %136
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %99) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #9
  br label %189

162:                                              ; preds = %145, %157
  %163 = phi i64 [ %110, %145 ], [ %160, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %99) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #9
  %164 = add nuw nsw i64 %108, 1
  %165 = load i64, i64* %52, align 8
  %166 = add i64 %165, 3
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = ashr i32 %168, 1
  %170 = sext i32 %169 to i64
  %171 = icmp slt i64 %164, %170
  br i1 %171, label %107, label %103

172:                                              ; preds = %183
  %173 = icmp eq i64 %185, %163
  br i1 %173, label %187, label %174

174:                                              ; preds = %172, %105
  %175 = phi i64 [ 0, %105 ], [ %185, %172 ]
  %176 = load %"class.v8::internal::PropertyDescriptor"*, %"class.v8::internal::PropertyDescriptor"** %106, align 8
  %177 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %176, i64 %175
  %178 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %176, i64 %175, i32 4, i32 0, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = call i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %179, %"class.v8::internal::PropertyDescriptor"* %177, i64 1)
  %181 = trunc i16 %180 to i8
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %189, label %183

183:                                              ; preds = %174
  %184 = icmp ugt i16 %180, 255
  %185 = add nuw i64 %175, 1
  br i1 %184, label %172, label %186, !prof !4

186:                                              ; preds = %183
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #14
  unreachable

187:                                              ; preds = %172, %88, %103
  %188 = ptrtoint i64* %1 to i64
  br label %189

189:                                              ; preds = %174, %161, %187
  %190 = phi i64 [ %188, %187 ], [ 0, %161 ], [ 0, %174 ]
  %191 = getelementptr inbounds %"class.std::__1::vector.1163", %"class.std::__1::vector.1163"* %5, i64 0, i32 0, i32 0
  %192 = load %"class.v8::internal::PropertyDescriptor"*, %"class.v8::internal::PropertyDescriptor"** %191, align 8
  %193 = icmp eq %"class.v8::internal::PropertyDescriptor"* %192, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %189
  %195 = ptrtoint %"class.v8::internal::PropertyDescriptor"* %192 to i64
  %196 = getelementptr inbounds %"class.std::__1::vector.1163", %"class.std::__1::vector.1163"* %5, i64 0, i32 0, i32 1
  %197 = bitcast %"class.v8::internal::PropertyDescriptor"** %196 to i64*
  store i64 %195, i64* %197, align 8
  %198 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %192, i64 0, i32 0
  call void @_ZdlPv(i8* %198) #15
  br label %199

199:                                              ; preds = %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #9
  br label %200

200:                                              ; preds = %48, %51, %199, %22
  %201 = phi i64 [ 0, %22 ], [ 0, %48 ], [ %190, %199 ], [ 0, %51 ]
  %202 = inttoptr i64 %201 to i64*
  ret i64* %202
}

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #2

declare i16 @_ZN2v88internal7JSArray17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #2

declare i16 @_ZN2v88internal7JSProxy17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #2

declare i16 @_ZN2v88internal12JSTypedArray17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = bitcast %"class.v8::internal::LookupIterator::Key"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* %2)
  %9 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %11, i64 %13, i64* %1, i32 1) #9
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %32

17:                                               ; preds = %5
  %18 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* nonnull %7) #9
  br i1 %18, label %31, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 9, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %21) #9
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = trunc i64 %23 to i32
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %19
  %30 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %0) #9
  br label %34

31:                                               ; preds = %17
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* nonnull %7) #9
  br label %32

32:                                               ; preds = %31, %5
  %33 = call i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4)
  br label %34

34:                                               ; preds = %19, %29, %32
  %35 = phi i16 [ %33, %32 ], [ 0, %29 ], [ 257, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret i16 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  %5 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #9
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %5, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast i64** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #9
  %11 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"* %0, %"class.v8::internal::PropertyDescriptor"* nonnull %5)
  %12 = trunc i16 %11 to i8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %198, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, -1
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  call void @_ZN2v88internal14LookupIterator15RestartInternalILb1EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"* %0, i32 0) #9
  br label %20

19:                                               ; preds = %14
  call void @_ZN2v88internal14LookupIterator15RestartInternalILb0EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"* %0, i32 0) #9
  br label %20

20:                                               ; preds = %18, %19
  %21 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %24 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %4 to i8*
  %25 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 2, i32 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 3, i32 0, i32 0
  %27 = bitcast i64** %26 to %"class.v8::Value"**
  %28 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 1, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %4, i64 0, i32 0, i32 1, i64 4
  %33 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %35 = bitcast %"class.v8::internal::Relocatable"** %34 to i64*
  br label %36

36:                                               ; preds = %187, %20
  %37 = load i32, i32* %21, align 4
  switch i32 %37, label %187 [
    i32 4, label %188
    i32 2, label %38
  ]

38:                                               ; preds = %36
  %39 = call zeroext i1 @_ZNK2v88internal14LookupIterator33HolderIsReceiverOrHiddenPrototypeEv(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %39, label %40, label %187

40:                                               ; preds = %38
  %41 = call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0)
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %43 = load i64, i64* %41, align 8
  %44 = add i64 %43, 27
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 0, i32 7, i32 0, i64 4
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %187, label %51

51:                                               ; preds = %40
  %52 = load i64*, i64** %22, align 8
  %53 = load i64*, i64** %23, align 8
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %51
  %58 = and i64 %54, -4294967296
  %59 = add i64 %54, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %58, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = icmp ugt i16 %66, 185
  br i1 %67, label %74, label %68

68:                                               ; preds = %57, %51
  %69 = call i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %42, i64* %53) #9
  %70 = icmp eq i64* %69, null
  br i1 %70, label %198, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %41, align 8
  %73 = load i64, i64* %69, align 8
  br label %74

74:                                               ; preds = %71, %57
  %75 = phi i64 [ %54, %57 ], [ %73, %71 ]
  %76 = phi i64 [ %43, %57 ], [ %72, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %24) #9
  %77 = and i64 %76, -4294967296
  %78 = add i64 %76, 31
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %77, %81
  %83 = load i64, i64* %52, align 8
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %4, %"class.v8::internal::Isolate"* %42, i64 %82, i64 %75, i64 %83, i64 %2) #9
  %84 = call i8* @_Znwm(i64 8) #15
  %85 = bitcast i8* %84 to %"class.v8::PropertyDescriptor"*
  call void @_ZN2v818PropertyDescriptorC1Ev(%"class.v8::PropertyDescriptor"* nonnull %85) #9
  %86 = load i64*, i64** %25, align 8
  %87 = icmp eq i64* %86, null
  br i1 %87, label %88, label %91

88:                                               ; preds = %74
  %89 = load i64*, i64** %26, align 8
  %90 = icmp eq i64* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %88, %74
  %92 = call i8* @_Znwm(i64 8) #15
  %93 = bitcast i8* %92 to %"class.v8::PropertyDescriptor"*
  %94 = bitcast i64* %86 to %"class.v8::Value"*
  %95 = load %"class.v8::Value"*, %"class.v8::Value"** %27, align 8
  call void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEES3_(%"class.v8::PropertyDescriptor"* nonnull %93, %"class.v8::Value"* %94, %"class.v8::Value"* %95) #9
  br label %111

96:                                               ; preds = %88
  %97 = load i64*, i64** %28, align 8
  %98 = icmp eq i64* %97, null
  %99 = load i8, i8* %29, align 8
  %100 = and i8 %99, 32
  %101 = icmp eq i8 %100, 0
  %102 = and i1 %98, %101
  br i1 %102, label %113, label %103

103:                                              ; preds = %96
  %104 = call i8* @_Znwm(i64 8) #15
  %105 = bitcast i8* %104 to %"class.v8::PropertyDescriptor"*
  %106 = bitcast i64* %97 to %"class.v8::Value"*
  br i1 %101, label %110, label %107

107:                                              ; preds = %103
  %108 = and i8 %99, 16
  %109 = icmp ne i8 %108, 0
  call void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEEb(%"class.v8::PropertyDescriptor"* nonnull %105, %"class.v8::Value"* %106, i1 zeroext %109) #9
  br label %111

110:                                              ; preds = %103
  call void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEE(%"class.v8::PropertyDescriptor"* nonnull %105, %"class.v8::Value"* %106) #9
  br label %111

111:                                              ; preds = %91, %107, %110
  %112 = phi i8* [ %104, %110 ], [ %104, %107 ], [ %92, %91 ]
  call void @_ZN2v818PropertyDescriptorD1Ev(%"class.v8::PropertyDescriptor"* nonnull %85) #9
  call void @_ZdlPv(i8* nonnull %84) #15
  br label %113

113:                                              ; preds = %111, %96
  %114 = phi i8* [ %84, %96 ], [ %112, %111 ]
  %115 = load i8, i8* %29, align 8
  %116 = and i8 %115, 2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %123, label %118

118:                                              ; preds = %113
  %119 = bitcast i8* %114 to %"class.v8::PropertyDescriptor"*
  %120 = and i8 %115, 1
  %121 = icmp ne i8 %120, 0
  call void @_ZN2v818PropertyDescriptor14set_enumerableEb(%"class.v8::PropertyDescriptor"* %119, i1 zeroext %121) #9
  %122 = load i8, i8* %29, align 8
  br label %123

123:                                              ; preds = %118, %113
  %124 = phi i8 [ %115, %113 ], [ %122, %118 ]
  %125 = and i8 %124, 8
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = bitcast i8* %114 to %"class.v8::PropertyDescriptor"*
  %129 = and i8 %124, 4
  %130 = icmp ne i8 %129, 0
  call void @_ZN2v818PropertyDescriptor16set_configurableEb(%"class.v8::PropertyDescriptor"* %128, i1 zeroext %130) #9
  br label %131

131:                                              ; preds = %127, %123
  %132 = load i64, i64* %52, align 8
  %133 = load i64, i64* %15, align 8
  %134 = icmp ult i64 %133, 4294967295
  br i1 %134, label %150, label %135

135:                                              ; preds = %131
  %136 = icmp eq i64 %133, -1
  br i1 %136, label %154, label %137

137:                                              ; preds = %135
  %138 = and i64 %132, -4294967296
  %139 = add i64 %132, -1
  %140 = inttoptr i64 %139 to i32*
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %138, %142
  %144 = add i64 %143, 10
  %145 = inttoptr i64 %144 to i8*
  %146 = load i8, i8* %145, align 1
  %147 = lshr i8 %146, 2
  %148 = add nsw i8 %147, -17
  %149 = icmp ult i8 %148, 22
  br i1 %149, label %150, label %154

150:                                              ; preds = %137, %131
  %151 = trunc i64 %133 to i32
  %152 = bitcast i8* %114 to %"class.v8::PropertyDescriptor"*
  %153 = call i64* @_ZN2v88internal25PropertyCallbackArguments18CallIndexedDefinerENS0_6HandleINS0_15InterceptorInfoEEEjRKNS_18PropertyDescriptorE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %4, i64* %41, i32 %151, %"class.v8::PropertyDescriptor"* dereferenceable(8) %152) #9
  br label %158

154:                                              ; preds = %137, %135
  %155 = load i64*, i64** %30, align 8
  %156 = bitcast i8* %114 to %"class.v8::PropertyDescriptor"*
  %157 = call i64* @_ZN2v88internal25PropertyCallbackArguments16CallNamedDefinerENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEERKNS_18PropertyDescriptorE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %4, i64* %41, i64* %155, %"class.v8::PropertyDescriptor"* dereferenceable(8) %156) #9
  br label %158

158:                                              ; preds = %154, %150
  %159 = phi i64* [ %153, %150 ], [ %157, %154 ]
  %160 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %160, i64 0, i32 0, i32 7, i32 0, i64 5
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %160, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = trunc i64 %164 to i32
  %166 = trunc i64 %162 to i32
  %167 = icmp eq i32 %165, %166
  br i1 %167, label %170, label %168

168:                                              ; preds = %158
  %169 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %160) #9
  br label %175

170:                                              ; preds = %158
  %171 = icmp ne i64* %159, null
  %172 = zext i1 %171 to i16
  %173 = shl nuw nsw i16 %172, 8
  %174 = or i16 %173, 1
  br label %175

175:                                              ; preds = %168, %170
  %176 = phi i16 [ %174, %170 ], [ 0, %168 ]
  %177 = bitcast i8* %114 to %"class.v8::PropertyDescriptor"*
  call void @_ZN2v818PropertyDescriptorD1Ev(%"class.v8::PropertyDescriptor"* nonnull %177) #9
  call void @_ZdlPv(i8* nonnull %114) #15
  store i64 1994495044801650351, i64* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %178 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %179 = load i64, i64* %35, align 8
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %178, i64 0, i32 91
  %181 = bitcast %"class.v8::internal::Relocatable"** %180 to i64*
  store i64 %179, i64* %181, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %24) #9
  %182 = trunc i16 %176 to i8
  %183 = lshr i16 %176, 8
  %184 = icmp eq i8 %182, 0
  br i1 %184, label %198, label %185

185:                                              ; preds = %175
  %186 = icmp eq i16 %183, 0
  br i1 %186, label %187, label %198

187:                                              ; preds = %185, %36, %40, %38
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %36

188:                                              ; preds = %36
  %189 = load i64, i64* %15, align 8
  %190 = icmp eq i64 %189, -1
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  call void @_ZN2v88internal14LookupIterator15RestartInternalILb1EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"* %0, i32 0) #9
  br label %193

192:                                              ; preds = %188
  call void @_ZN2v88internal14LookupIterator15RestartInternalILb0EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"* %0, i32 0) #9
  br label %193

193:                                              ; preds = %191, %192
  %194 = load i64*, i64** %23, align 8
  %195 = call zeroext i1 @_ZN2v88internal8JSObject12IsExtensibleENS0_6HandleIS1_EE(i64* %194)
  %196 = call i16 @_ZN2v88internal10JSReceiver34ValidateAndApplyPropertyDescriptorEPNS0_7IsolateEPNS0_14LookupIteratorEbPNS0_18PropertyDescriptorES7_NS_5MaybeINS0_11ShouldThrowEEENS0_6HandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %7, %"class.v8::internal::LookupIterator"* %0, i1 zeroext %195, %"class.v8::internal::PropertyDescriptor"* %1, %"class.v8::internal::PropertyDescriptor"* nonnull %5, i64 %2, i64 0)
  %197 = lshr i16 %196, 8
  br label %198

198:                                              ; preds = %185, %68, %175, %3, %193
  %199 = phi i16 [ %196, %193 ], [ 0, %3 ], [ 0, %68 ], [ %176, %185 ], [ 0, %175 ]
  %200 = phi i16 [ %197, %193 ], [ 0, %3 ], [ 0, %68 ], [ %183, %185 ], [ %183, %175 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #9
  %201 = shl nuw i16 %200, 8
  %202 = and i16 %199, 255
  %203 = or i16 %201, %202
  ret i16 %203
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %4 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %5 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  %12 = bitcast %"class.v8::internal::Isolate"* %8 to %"class.v8::internal::Factory"*
  br i1 %11, label %279, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 188
  br i1 %26, label %27, label %41

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %29 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %28, i64 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %34 = load i64, i64* %33, align 8
  %35 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %12, i64 %34, i1 zeroext true) #9
  %36 = ptrtoint i64* %35 to i64
  %37 = bitcast %"class.v8::internal::Handle.1137"* %28 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %27, %32
  %39 = phi i64* [ %35, %32 ], [ %30, %27 ]
  %40 = tail call i16 @_ZN2v88internal7JSProxy24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %8, i64* %15, i64* %39, %"class.v8::internal::PropertyDescriptor"* %1) #9
  br label %348

41:                                               ; preds = %13
  %42 = icmp eq i32 %10, 0
  br i1 %42, label %43, label %63

43:                                               ; preds = %41
  %44 = tail call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %60

46:                                               ; preds = %43
  %47 = tail call i64* @_ZNK2v88internal14LookupIterator34GetInterceptorForFailedAccessCheckEv(%"class.v8::internal::LookupIterator"* %0) #9
  %48 = icmp eq i64* %47, null
  br i1 %48, label %49, label %60

49:                                               ; preds = %46
  %50 = tail call zeroext i1 @_ZN2v88internal8JSObject10AllCanReadEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %50, label %51, label %54

51:                                               ; preds = %49
  %52 = load i32, i32* %9, align 4
  %53 = icmp eq i32 %52, 2
  br i1 %53, label %67, label %54

54:                                               ; preds = %51, %49
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, -1
  br i1 %57, label %59, label %58

58:                                               ; preds = %54
  tail call void @_ZN2v88internal14LookupIterator15RestartInternalILb1EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"* %0, i32 0) #9
  br label %279

59:                                               ; preds = %54
  tail call void @_ZN2v88internal14LookupIterator15RestartInternalILb0EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"* %0, i32 0) #9
  br label %279

60:                                               ; preds = %46, %45
  %61 = phi i64* [ %47, %46 ], [ null, %45 ]
  %62 = load i32, i32* %9, align 4
  br label %63

63:                                               ; preds = %60, %41
  %64 = phi i32 [ %62, %60 ], [ %10, %41 ]
  %65 = phi i64* [ %61, %60 ], [ null, %41 ]
  %66 = icmp eq i32 %64, 2
  br i1 %66, label %67, label %69

67:                                               ; preds = %63, %51
  %68 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %69

69:                                               ; preds = %67, %63
  %70 = phi i64* [ %68, %67 ], [ %65, %63 ]
  %71 = icmp eq i64* %70, null
  br i1 %71, label %279, label %72

72:                                               ; preds = %69
  %73 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %74 = load i64, i64* %70, align 8
  %75 = add i64 %74, 15
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 0, i32 7, i32 0, i64 4
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  %81 = icmp eq i32 %77, %80
  br i1 %81, label %279, label %82

82:                                               ; preds = %72
  %83 = load i64*, i64** %14, align 8
  %84 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %82
  %90 = and i64 %86, -4294967296
  %91 = add i64 %86, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %90, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = icmp ugt i16 %98, 185
  br i1 %99, label %106, label %100

100:                                              ; preds = %89, %82
  %101 = tail call i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %73, i64* %85) #9
  %102 = icmp eq i64* %101, null
  br i1 %102, label %348, label %103

103:                                              ; preds = %100
  %104 = load i64, i64* %70, align 8
  %105 = load i64, i64* %101, align 8
  br label %106

106:                                              ; preds = %103, %89
  %107 = phi i64 [ %86, %89 ], [ %105, %103 ]
  %108 = phi i64 [ %74, %89 ], [ %104, %103 ]
  %109 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %109) #9
  %110 = and i64 %108, -4294967296
  %111 = add i64 %108, 31
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %110, %114
  %116 = load i64, i64* %83, align 8
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, %"class.v8::internal::Isolate"* %73, i64 %115, i64 %107, i64 %116, i64 4294967297) #9
  %117 = load i64, i64* %83, align 8
  %118 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %119 = load i64, i64* %118, align 8
  %120 = icmp ult i64 %119, 4294967295
  br i1 %120, label %136, label %121

121:                                              ; preds = %106
  %122 = icmp eq i64 %119, -1
  br i1 %122, label %179, label %123

123:                                              ; preds = %121
  %124 = and i64 %117, -4294967296
  %125 = add i64 %117, -1
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %124, %128
  %130 = add i64 %129, 10
  %131 = inttoptr i64 %130 to i8*
  %132 = load i8, i8* %131, align 1
  %133 = lshr i8 %132, 2
  %134 = add nsw i8 %133, -17
  %135 = icmp ult i8 %134, 22
  br i1 %135, label %136, label %179

136:                                              ; preds = %123, %106
  %137 = trunc i64 %119 to i32
  %138 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 2
  %139 = bitcast i64* %138 to %"class.v8::internal::Isolate"**
  %140 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %139, align 8
  %141 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %141) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 0, i64 40, i1 false) #9
  %142 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %150, label %144, !prof !4

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %146 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %140, i64 0, i32 14, i32 0
  %148 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %148, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %149, %"class.v8::internal::RuntimeCallStats"** %145, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %149, %"class.v8::internal::RuntimeCallTimer"* %146, i32 164) #9
  br label %150

150:                                              ; preds = %144, %136
  %151 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %158, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %140, i64 0, i32 21
  %155 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 1
  %157 = load i64, i64* %156, align 8
  call void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"* %155, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.70, i64 0, i64 0), i64 %157, i32 %137) #9
  br label %158

158:                                              ; preds = %153, %150
  %159 = load i64, i64* %70, align 8
  %160 = add i64 %159, 15
  %161 = inttoptr i64 %160 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %171, label %164

164:                                              ; preds = %158
  %165 = and i64 %159, -4294967296
  %166 = zext i32 %162 to i64
  %167 = or i64 %165, %166
  %168 = add i64 %167, 3
  %169 = inttoptr i64 %168 to void (i32, %"class.v8::PropertyCallbackInfo"*)**
  %170 = load void (i32, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::PropertyCallbackInfo"*)** %169, align 1
  br label %171

171:                                              ; preds = %164, %158
  %172 = phi void (i32, %"class.v8::PropertyCallbackInfo"*)* [ %170, %164 ], [ null, %158 ]
  %173 = call i64* @_ZN2v88internal25PropertyCallbackArguments30BasicCallIndexedGetterCallbackEPFvjRKNS_20PropertyCallbackInfoINS_5ValueEEEEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, void (i32, %"class.v8::PropertyCallbackInfo"*)* %172, i32 %137, i64* nonnull %70) #9
  %174 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %175 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %174, align 8
  %176 = icmp eq %"class.v8::internal::RuntimeCallStats"* %175, null
  br i1 %176, label %224, label %177, !prof !4

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %175, %"class.v8::internal::RuntimeCallTimer"* %178) #9
  br label %224

179:                                              ; preds = %123, %121
  %180 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 2
  %183 = bitcast i64* %182 to %"class.v8::internal::Isolate"**
  %184 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %183, align 8
  %185 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %185) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 0, i64 40, i1 false) #9
  %186 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %194, label %188, !prof !4

188:                                              ; preds = %179
  %189 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %190 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %184, i64 0, i32 14, i32 0
  %192 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %192, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %193, %"class.v8::internal::RuntimeCallStats"** %189, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %193, %"class.v8::internal::RuntimeCallTimer"* %190, i32 184) #9
  br label %194

194:                                              ; preds = %188, %179
  %195 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %203, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %184, i64 0, i32 21
  %199 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 1
  %201 = load i64, i64* %200, align 8
  %202 = load i64, i64* %181, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %199, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i64 0, i64 0), i64 %201, i64 %202) #9
  br label %203

203:                                              ; preds = %197, %194
  %204 = load i64, i64* %70, align 8
  %205 = add i64 %204, 15
  %206 = inttoptr i64 %205 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %216, label %209

209:                                              ; preds = %203
  %210 = and i64 %204, -4294967296
  %211 = zext i32 %207 to i64
  %212 = or i64 %210, %211
  %213 = add i64 %212, 3
  %214 = inttoptr i64 %213 to void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)**
  %215 = load void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)** %214, align 1
  br label %216

216:                                              ; preds = %209, %203
  %217 = phi void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* [ %215, %209 ], [ null, %203 ]
  %218 = call i64* @_ZN2v88internal25PropertyCallbackArguments28BasicCallNamedGetterCallbackEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEENS0_6HandleINS0_4NameEEENSC_INS0_6ObjectEEESG_(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* %217, i64* %181, i64* nonnull %70, i64* null) #9
  %219 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %220 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %219, align 8
  %221 = icmp eq %"class.v8::internal::RuntimeCallStats"* %220, null
  br i1 %221, label %224, label %222, !prof !4

222:                                              ; preds = %216
  %223 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %220, %"class.v8::internal::RuntimeCallTimer"* %223) #9
  br label %224

224:                                              ; preds = %216, %222, %171, %177
  %225 = phi i8* [ %141, %177 ], [ %141, %171 ], [ %185, %222 ], [ %185, %216 ]
  %226 = phi i64* [ %173, %177 ], [ %173, %171 ], [ %218, %222 ], [ %218, %216 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %225) #9
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 0, i32 7, i32 0, i64 5
  %228 = load i64, i64* %227, align 8
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %230 = load i64, i64* %229, align 8
  %231 = trunc i64 %230 to i32
  %232 = trunc i64 %228 to i32
  %233 = icmp eq i32 %231, %232
  br i1 %233, label %236, label %234

234:                                              ; preds = %224
  %235 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %73) #9
  br label %263

236:                                              ; preds = %224
  %237 = icmp eq i64* %226, null
  br i1 %237, label %262, label %238

238:                                              ; preds = %236
  %239 = call zeroext i1 @_ZN2v88internal18PropertyDescriptor20ToPropertyDescriptorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPS1_(%"class.v8::internal::Isolate"* %73, i64* nonnull %226, %"class.v8::internal::PropertyDescriptor"* %1) #9
  %240 = load i64, i64* %83, align 8
  %241 = load i64, i64* %118, align 8
  %242 = icmp ult i64 %241, 4294967295
  br i1 %242, label %258, label %243

243:                                              ; preds = %238
  %244 = icmp eq i64 %241, -1
  br i1 %244, label %259, label %245

245:                                              ; preds = %243
  %246 = and i64 %240, -4294967296
  %247 = add i64 %240, -1
  %248 = inttoptr i64 %247 to i32*
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = zext i32 %249 to i64
  %251 = or i64 %246, %250
  %252 = add i64 %251, 10
  %253 = inttoptr i64 %252 to i8*
  %254 = load i8, i8* %253, align 1
  %255 = lshr i8 %254, 2
  %256 = add nsw i8 %255, -17
  %257 = icmp ult i8 %256, 22
  br i1 %257, label %258, label %259

258:                                              ; preds = %245, %238
  br label %259

259:                                              ; preds = %258, %245, %243
  %260 = phi i8* [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.67, i64 0, i64 0), %258 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.68, i64 0, i64 0), %245 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.68, i64 0, i64 0), %243 ]
  br i1 %239, label %263, label %261

261:                                              ; preds = %259
  call void @_ZN2v85Utils16ReportApiFailureEPKcS2_(i8* %260, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i64 0, i64 0)) #9
  br label %263

262:                                              ; preds = %236
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %263

263:                                              ; preds = %234, %259, %261, %262
  %264 = phi i16 [ 1, %262 ], [ 0, %234 ], [ 257, %259 ], [ 257, %261 ]
  %265 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %266 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 4
  store i64 1994495044801650351, i64* %266, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %267 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %268 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %267, align 8
  %269 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %270 = bitcast %"class.v8::internal::Relocatable"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %268, i64 0, i32 91
  %273 = bitcast %"class.v8::internal::Relocatable"** %272 to i64*
  store i64 %271, i64* %273, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %109) #9
  %274 = trunc i16 %264 to i8
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %348, label %276

276:                                              ; preds = %263
  %277 = and i16 %264, 256
  %278 = icmp eq i16 %277, 0
  br i1 %278, label %279, label %348

279:                                              ; preds = %276, %2, %58, %59, %69, %72
  %280 = call i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0)
  %281 = trunc i64 %280 to i8
  %282 = lshr i64 %280, 32
  %283 = icmp eq i8 %281, 0
  br i1 %283, label %348, label %284

284:                                              ; preds = %279
  %285 = icmp eq i64 %282, 64
  br i1 %285, label %348, label %286

286:                                              ; preds = %284
  %287 = load i32, i32* %9, align 4
  %288 = icmp eq i32 %287, 5
  br i1 %288, label %289, label %305

289:                                              ; preds = %286
  %290 = call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* %0) #9
  %291 = load i64, i64* %290, align 8
  %292 = and i64 %291, 1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %305, label %294

294:                                              ; preds = %289
  %295 = and i64 %291, -4294967296
  %296 = add i64 %291, -1
  %297 = inttoptr i64 %296 to i32*
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = zext i32 %298 to i64
  %300 = or i64 %295, %299
  %301 = add i64 %300, 7
  %302 = inttoptr i64 %301 to i16*
  %303 = load atomic i16, i16* %302 monotonic, align 2
  %304 = icmp eq i16 %303, 87
  br i1 %304, label %318, label %305

305:                                              ; preds = %289, %286, %294
  %306 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* %0, i1 zeroext false) #9
  %307 = icmp eq i64* %306, null
  br i1 %307, label %348, label %308

308:                                              ; preds = %305
  %309 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 1, i32 0, i32 0
  store i64* %306, i64** %309, align 8
  %310 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 0
  %311 = load i8, i8* %310, align 8
  %312 = shl nuw nsw i64 %282, 4
  %313 = trunc i64 %312 to i8
  %314 = and i8 %313, 16
  %315 = and i8 %311, -49
  %316 = or i8 %315, %314
  %317 = xor i8 %316, 48
  store i8 %317, i8* %310, align 8
  br label %336

318:                                              ; preds = %294
  %319 = call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* %0) #9
  %320 = bitcast %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320) #9
  %321 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %322 = load i64*, i64** %321, align 8
  %323 = load i64, i64* %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %323, i64* %324, align 8
  %325 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %6, i64 0, i32 0
  %326 = call i64* @_ZN2v88internal10JSReceiver18GetCreationContextEv(%"class.v8::internal::JSReceiver"* nonnull %325)
  %327 = icmp eq i64* %326, null
  br i1 %327, label %328, label %329, !prof !6

328:                                              ; preds = %318
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.89, i64 0, i64 0)) #14
  unreachable

329:                                              ; preds = %318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #9
  %330 = call i64* @_ZN2v88internal12AccessorPair12GetComponentEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_IS1_EENS0_17AccessorComponentE(%"class.v8::internal::Isolate"* %8, i64* nonnull %326, i64* %319, i32 0) #9
  %331 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 2, i32 0, i32 0
  store i64* %330, i64** %331, align 8
  %332 = call i64* @_ZN2v88internal12AccessorPair12GetComponentEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_IS1_EENS0_17AccessorComponentE(%"class.v8::internal::Isolate"* %8, i64* nonnull %326, i64* %319, i32 1) #9
  %333 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 3, i32 0, i32 0
  store i64* %332, i64** %333, align 8
  %334 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 0
  %335 = load i8, i8* %334, align 8
  br label %336

336:                                              ; preds = %308, %329
  %337 = phi i8 [ %317, %308 ], [ %335, %329 ]
  %338 = lshr i64 %280, 33
  %339 = trunc i64 %338 to i8
  %340 = and i8 %339, 1
  %341 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %1, i64 0, i32 0
  %342 = and i8 %337, -16
  %343 = trunc i64 %282 to i8
  %344 = and i8 %343, 4
  %345 = or i8 %344, %340
  %346 = or i8 %345, %342
  %347 = xor i8 %346, 15
  store i8 %347, i8* %341, align 8
  br label %348

348:                                              ; preds = %276, %100, %263, %305, %284, %279, %336, %38
  %349 = phi i16 [ %40, %38 ], [ 0, %263 ], [ 257, %276 ], [ 257, %336 ], [ 0, %279 ], [ 1, %284 ], [ 0, %305 ], [ 0, %100 ]
  ret i16 %349
}

declare zeroext i1 @_ZNK2v88internal14LookupIterator33HolderIsReceiverOrHiddenPrototypeEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.v8::internal::Map", align 8
  %3 = alloca %"class.v8::internal::Map", align 8
  %4 = alloca %"class.v8::internal::Map", align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, 4294967295
  br i1 %10, label %29, label %11

11:                                               ; preds = %1
  %12 = icmp eq i64 %9, -1
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = add i64 %7, -1
  %15 = inttoptr i64 %14 to i32*
  br label %57

16:                                               ; preds = %11
  %17 = and i64 %7, -4294967296
  %18 = add i64 %7, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 10
  %24 = inttoptr i64 %23 to i8*
  %25 = load i8, i8* %24, align 1
  %26 = lshr i8 %25, 2
  %27 = add nsw i8 %26, -17
  %28 = icmp ult i8 %27, 22
  br i1 %28, label %44, label %57

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %31 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.v8::internal::Map"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = add i64 %7, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i64 %33, 4294967295
  %39 = icmp eq i64 %38, 0
  tail call void @llvm.assume(i1 %39) #9
  %40 = zext i32 %37 to i64
  %41 = or i64 %33, %40
  %42 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = call i64 @_ZNK2v88internal3Map21GetIndexedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"* nonnull %2, i64 %33) #9
  br label %71

44:                                               ; preds = %16
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %46 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %46, i64 0, i32 0, i32 4
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.v8::internal::Map"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  %50 = load atomic i32, i32* %19 monotonic, align 4
  %51 = and i64 %48, 4294967295
  %52 = icmp eq i64 %51, 0
  tail call void @llvm.assume(i1 %52) #9
  %53 = zext i32 %50 to i64
  %54 = or i64 %48, %53
  %55 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %54, i64* %55, align 8
  %56 = call i64 @_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"* nonnull %3, i64 %48) #9
  br label %71

57:                                               ; preds = %13, %16
  %58 = phi i32* [ %15, %13 ], [ %19, %16 ]
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %60 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 0, i32 4
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.v8::internal::Map"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  %64 = load atomic i32, i32* %58 monotonic, align 4
  %65 = and i64 %62, 4294967295
  %66 = icmp eq i64 %65, 0
  tail call void @llvm.assume(i1 %66) #9
  %67 = zext i32 %64 to i64
  %68 = or i64 %62, %67
  %69 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %69, align 8
  %70 = call i64 @_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"* nonnull %4, i64 %62) #9
  br label %71

71:                                               ; preds = %44, %29, %57
  %72 = phi i8* [ %49, %44 ], [ %34, %29 ], [ %63, %57 ]
  %73 = phi i64 [ %56, %44 ], [ %43, %29 ], [ %70, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  %74 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %75 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 31, i32 4
  %77 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %76, align 8
  %78 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %71
  %80 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %77, i64 %73) #9
  br label %94

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 31, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 31, i32 1
  %85 = load i64*, i64** %84, align 8
  %86 = icmp eq i64* %83, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %81
  %88 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %75) #9
  br label %89

89:                                               ; preds = %87, %81
  %90 = phi i64* [ %88, %87 ], [ %83, %81 ]
  %91 = ptrtoint i64* %90 to i64
  %92 = add i64 %91, 8
  %93 = inttoptr i64 %92 to i64*
  store i64* %93, i64** %82, align 8
  store i64 %73, i64* %90, align 8
  br label %94

94:                                               ; preds = %79, %89
  %95 = phi i64* [ %80, %79 ], [ %90, %89 ]
  ret i64* %95
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject12IsExtensibleENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %3 = alloca %"class.v8::internal::Context", align 8
  %4 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = and i64 %5, -4294967296
  %13 = add i64 %5, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 190
  br i1 %21, label %22, label %42

22:                                               ; preds = %1
  %23 = bitcast %"class.v8::internal::Context"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %26, align 8
  %27 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %28 = bitcast %"class.v8::internal::PrototypeIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #9
  %29 = load i64, i64* %8, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %31, %"class.v8::internal::Isolate"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 1, i32 0, i32 0
  store i64 %5, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 3
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 4
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 6
  store i32 0, i32* %37, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %2) #9
  %38 = load i64, i64* %33, align 8
  %39 = trunc i64 %38 to i32
  %40 = trunc i64 %27 to i32
  %41 = icmp eq i32 %39, %40
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #9
  br i1 %41, label %75, label %51

42:                                               ; preds = %1
  %43 = load atomic i32, i32* %14 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %12, %44
  %46 = add i64 %45, 9
  %47 = inttoptr i64 %46 to i8*
  %48 = load atomic i8, i8* %47 monotonic, align 1
  %49 = and i8 %48, 32
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %22, %42
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %55 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %54, align 8
  %56 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %51
  %58 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %55, i64 %53) #9
  br label %72

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %63 = load i64*, i64** %62, align 8
  %64 = icmp eq i64* %61, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #9
  br label %67

67:                                               ; preds = %65, %59
  %68 = phi i64* [ %66, %65 ], [ %61, %59 ]
  %69 = ptrtoint i64* %68 to i64
  %70 = add i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  store i64* %71, i64** %60, align 8
  store i64 %53, i64* %68, align 8
  br label %72

72:                                               ; preds = %57, %67
  %73 = phi i64* [ %58, %57 ], [ %68, %67 ]
  %74 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %11, i64* %73, i64* %0) #9
  br i1 %74, label %75, label %121

75:                                               ; preds = %22, %42, %72
  %76 = load i64, i64* %0, align 8
  %77 = and i64 %76, -4294967296
  %78 = add i64 %76, -1
  %79 = inttoptr i64 %78 to i32*
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %77, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = icmp eq i16 %85, 190
  br i1 %86, label %87, label %112

87:                                               ; preds = %75
  %88 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %88) #9
  %89 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 1, i32 0, i32 0
  store i64 %76, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 3
  store i32 0, i32* %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 4
  store i8 0, i8* %93, align 4
  %94 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 6
  store i32 0, i32* %94, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #9
  %95 = load i8, i8* %93, align 4, !range !5
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %110

97:                                               ; preds = %87
  %98 = load i64, i64* %90, align 8
  %99 = and i64 %98, -4294967296
  %100 = add i64 %98, -1
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  %105 = add i64 %104, 11
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 134217728
  %109 = icmp ne i32 %108, 0
  br label %110

110:                                              ; preds = %87, %97
  %111 = phi i1 [ %109, %97 ], [ false, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %88) #9
  br label %121

112:                                              ; preds = %75
  %113 = load atomic i32, i32* %79 monotonic, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %77, %114
  %116 = add i64 %115, 11
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 134217728
  %120 = icmp ne i32 %119, 0
  br label %121

121:                                              ; preds = %72, %112, %110
  %122 = phi i1 [ %111, %110 ], [ %120, %112 ], [ true, %72 ]
  ret i1 %122
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver34ValidateAndApplyPropertyDescriptorEPNS0_7IsolateEPNS0_14LookupIteratorEbPNS0_18PropertyDescriptorES7_NS_5MaybeINS0_11ShouldThrowEEENS0_6HandleINS0_4NameEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::LookupIterator"*, i1 zeroext, %"class.v8::internal::PropertyDescriptor"*, %"class.v8::internal::PropertyDescriptor"* readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %14 = inttoptr i64 %6 to i64*
  %15 = icmp ne %"class.v8::internal::LookupIterator"* %1, null
  %16 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 1, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  br i1 %18, label %19, label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, 32
  %23 = icmp ne i8 %22, 0
  br label %24

24:                                               ; preds = %7, %19
  %25 = phi i1 [ true, %7 ], [ %23, %19 ]
  %26 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 2, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %27, null
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 3, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = icmp ne i64* %31, null
  %33 = xor i1 %18, true
  %34 = or i1 %32, %33
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 0
  %37 = load i8, i8* %36, align 8
  %38 = and i8 %37, 32
  %39 = icmp eq i8 %38, 0
  br label %40

40:                                               ; preds = %29, %24, %35
  %41 = phi i1 [ %32, %29 ], [ false, %35 ], [ true, %24 ]
  %42 = phi i1 [ false, %29 ], [ %39, %35 ], [ false, %24 ]
  %43 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 0
  %44 = load i8, i8* %43, align 8
  %45 = and i8 %44, 42
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %198

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 1, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = icmp eq i64* %49, null
  br i1 %50, label %51, label %198

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 2, i32 0, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = icmp eq i64* %53, null
  br i1 %54, label %55, label %198

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 3, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = icmp eq i64* %57, null
  br i1 %58, label %59, label %198

59:                                               ; preds = %55
  br i1 %2, label %84, label %60

60:                                               ; preds = %59
  %61 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %5) #9
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %590, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %15, label %65, label %79

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 6
  %67 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %66, i64 0, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %68, null
  br i1 %69, label %70, label %79

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 5
  %72 = bitcast %"class.v8::internal::Isolate"** %71 to %"class.v8::internal::Factory"**
  %73 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 11
  %75 = load i64, i64* %74, align 8
  %76 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %73, i64 %75, i1 zeroext true) #9
  %77 = ptrtoint i64* %76 to i64
  %78 = bitcast %"class.v8::internal::Handle.1137"* %66 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %65, %63
  %80 = phi i64* [ %14, %63 ], [ %76, %70 ], [ %68, %65 ]
  %81 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %64, i32 50, i64* %80, i64* null, i64* null) #9
  %82 = load i64, i64* %81, align 8
  %83 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %82, %"class.v8::internal::MessageLocation"* null) #9
  br label %590

84:                                               ; preds = %59
  br i1 %41, label %144, label %85

85:                                               ; preds = %84
  br i1 %15, label %86, label %590

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 0
  %88 = load i8, i8* %87, align 8
  %89 = and i8 %88, 32
  %90 = icmp eq i8 %89, 0
  %91 = and i8 %88, -49
  %92 = or i8 %91, 32
  %93 = select i1 %90, i8 %92, i8 %88
  %94 = and i8 %93, 2
  %95 = icmp eq i8 %94, 0
  %96 = and i8 %93, -4
  %97 = or i8 %96, 2
  %98 = select i1 %95, i8 %97, i8 %93
  %99 = or i1 %90, %95
  %100 = and i8 %98, 8
  %101 = icmp eq i8 %100, 0
  %102 = and i8 %98, -13
  %103 = or i8 %102, 8
  %104 = select i1 %101, i8 %103, i8 %98
  %105 = or i1 %99, %101
  br i1 %105, label %106, label %107

106:                                              ; preds = %86
  store i8 %104, i8* %87, align 8
  br label %107

107:                                              ; preds = %86, %106
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %109 = select i1 %18, i64* %108, i64* %17
  %110 = and i8 %104, 2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %107
  %113 = shl i8 %104, 1
  %114 = and i8 %113, 2
  %115 = xor i8 %114, 2
  %116 = zext i8 %115 to i32
  br label %117

117:                                              ; preds = %112, %107
  %118 = phi i32 [ 0, %107 ], [ %116, %112 ]
  %119 = and i8 %104, 8
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %117
  %122 = and i8 %104, 4
  %123 = xor i8 %122, 4
  %124 = zext i8 %123 to i32
  br label %125

125:                                              ; preds = %121, %117
  %126 = phi i32 [ 0, %117 ], [ %124, %121 ]
  %127 = or i32 %126, %118
  %128 = and i8 %104, 32
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %125
  %131 = lshr i8 %104, 4
  %132 = and i8 %131, 1
  %133 = xor i8 %132, 1
  %134 = zext i8 %133 to i32
  br label %135

135:                                              ; preds = %125, %130
  %136 = phi i32 [ 0, %125 ], [ %134, %130 ]
  %137 = or i32 %127, %136
  %138 = tail call i16 @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"* nonnull %1, i64* %109, i32 %137, i64 1, i32 1) #9
  %139 = trunc i16 %138 to i8
  %140 = icmp eq i8 %139, 0
  %141 = icmp eq i64* %109, null
  %142 = or i1 %141, %140
  %143 = select i1 %142, i16 0, i16 257
  ret i16 %143

144:                                              ; preds = %84
  br i1 %15, label %145, label %590

145:                                              ; preds = %144
  %146 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 0
  %147 = load i8, i8* %146, align 8
  %148 = and i8 %147, 2
  %149 = icmp eq i8 %148, 0
  %150 = and i8 %147, -4
  %151 = or i8 %150, 2
  %152 = select i1 %149, i8 %151, i8 %147
  %153 = and i8 %152, 8
  %154 = icmp eq i8 %153, 0
  %155 = and i8 %152, -13
  %156 = or i8 %155, 8
  %157 = select i1 %154, i8 %156, i8 %152
  %158 = or i1 %149, %154
  br i1 %158, label %159, label %160

159:                                              ; preds = %145
  store i8 %157, i8* %146, align 8
  br label %160

160:                                              ; preds = %145, %159
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %162 = select i1 %28, i64* %161, i64* %27
  %163 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 3, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = select i1 %165, i64* %161, i64* %164
  %167 = and i8 %157, 2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %174, label %169

169:                                              ; preds = %160
  %170 = shl i8 %157, 1
  %171 = and i8 %170, 2
  %172 = xor i8 %171, 2
  %173 = zext i8 %172 to i32
  br label %174

174:                                              ; preds = %169, %160
  %175 = phi i32 [ 0, %160 ], [ %173, %169 ]
  %176 = and i8 %157, 8
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = and i8 %157, 4
  %180 = xor i8 %179, 4
  %181 = zext i8 %180 to i32
  br label %182

182:                                              ; preds = %178, %174
  %183 = phi i32 [ 0, %174 ], [ %181, %178 ]
  %184 = or i32 %183, %175
  %185 = and i8 %157, 32
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %192, label %187

187:                                              ; preds = %182
  %188 = lshr i8 %157, 4
  %189 = and i8 %188, 1
  %190 = xor i8 %189, 1
  %191 = zext i8 %190 to i32
  br label %192

192:                                              ; preds = %182, %187
  %193 = phi i32 [ 0, %182 ], [ %191, %187 ]
  %194 = or i32 %184, %193
  %195 = tail call i64* @_ZN2v88internal8JSObject14DefineAccessorEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEES6_NS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* nonnull %1, i64* %162, i64* %166, i32 %194)
  %196 = icmp eq i64* %195, null
  %197 = select i1 %196, i16 0, i16 257
  br label %590

198:                                              ; preds = %40, %47, %51, %55
  %199 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 0
  %200 = load i8, i8* %199, align 8
  %201 = and i8 %200, 2
  %202 = icmp eq i8 %201, 0
  %203 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #9
  %204 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #9
  %205 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #9
  br i1 %202, label %212, label %206

206:                                              ; preds = %198
  %207 = and i8 %200, 1
  %208 = icmp ne i8 %207, 0
  %209 = and i8 %44, 1
  %210 = icmp ne i8 %209, 0
  %211 = xor i1 %210, %208
  br i1 %211, label %276, label %212

212:                                              ; preds = %198, %206
  %213 = and i8 %200, 8
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %221, label %215

215:                                              ; preds = %212
  %216 = and i8 %200, 4
  %217 = icmp ne i8 %216, 0
  %218 = and i8 %44, 4
  %219 = icmp ne i8 %218, 0
  %220 = xor i1 %219, %217
  br i1 %220, label %276, label %221

221:                                              ; preds = %212, %215
  br i1 %18, label %234, label %222

222:                                              ; preds = %221
  %223 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 1, i32 0, i32 0
  %224 = load i64*, i64** %223, align 8
  %225 = icmp eq i64* %224, null
  br i1 %225, label %276, label %226

226:                                              ; preds = %222
  %227 = load i64, i64* %224, align 8
  %228 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %8, i64 0, i32 0
  %230 = load i64, i64* %17, align 8
  %231 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %229, i64 %230) #9
  br i1 %231, label %232, label %276

232:                                              ; preds = %226
  %233 = load i8, i8* %199, align 8
  br label %234

234:                                              ; preds = %232, %221
  %235 = phi i8 [ %233, %232 ], [ %200, %221 ]
  %236 = and i8 %235, 32
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %248, label %238

238:                                              ; preds = %234
  %239 = load i8, i8* %43, align 8
  %240 = and i8 %239, 32
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %276, label %242

242:                                              ; preds = %238
  %243 = and i8 %239, 16
  %244 = icmp ne i8 %243, 0
  %245 = and i8 %235, 16
  %246 = icmp ne i8 %245, 0
  %247 = xor i1 %246, %244
  br i1 %247, label %276, label %248

248:                                              ; preds = %234, %242
  %249 = load i64*, i64** %26, align 8
  %250 = icmp eq i64* %249, null
  br i1 %250, label %261, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 2, i32 0, i32 0
  %253 = load i64*, i64** %252, align 8
  %254 = icmp eq i64* %253, null
  br i1 %254, label %276, label %255

255:                                              ; preds = %251
  %256 = load i64, i64* %253, align 8
  %257 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %9, i64 0, i32 0
  %259 = load i64, i64* %249, align 8
  %260 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %258, i64 %259) #9
  br i1 %260, label %261, label %276

261:                                              ; preds = %248, %255
  %262 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 3, i32 0, i32 0
  %263 = load i64*, i64** %262, align 8
  %264 = icmp eq i64* %263, null
  br i1 %264, label %275, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 3, i32 0, i32 0
  %267 = load i64*, i64** %266, align 8
  %268 = icmp eq i64* %267, null
  br i1 %268, label %276, label %269

269:                                              ; preds = %265
  %270 = load i64, i64* %267, align 8
  %271 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0
  store i64 %270, i64* %271, align 8
  %272 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %10, i64 0, i32 0
  %273 = load i64, i64* %263, align 8
  %274 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %272, i64 %273) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #9
  br i1 %274, label %590, label %277

275:                                              ; preds = %261
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #9
  br label %590

276:                                              ; preds = %265, %206, %215, %222, %226, %238, %242, %251, %255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #9
  br label %277

277:                                              ; preds = %276, %269
  %278 = load i8, i8* %43, align 8
  %279 = and i8 %278, 4
  %280 = icmp ne i8 %279, 0
  br i1 %280, label %342, label %281

281:                                              ; preds = %277
  %282 = load i8, i8* %199, align 8
  %283 = and i8 %282, 12
  %284 = icmp eq i8 %283, 12
  br i1 %284, label %285, label %309

285:                                              ; preds = %281
  %286 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %5) #9
  %287 = icmp eq i32 %286, 1
  br i1 %287, label %590, label %288

288:                                              ; preds = %285
  %289 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %15, label %290, label %304

290:                                              ; preds = %288
  %291 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 6
  %292 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %291, i64 0, i32 0, i32 0
  %293 = load i64*, i64** %292, align 8
  %294 = icmp eq i64* %293, null
  br i1 %294, label %295, label %304

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 5
  %297 = bitcast %"class.v8::internal::Isolate"** %296 to %"class.v8::internal::Factory"**
  %298 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %297, align 8
  %299 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 11
  %300 = load i64, i64* %299, align 8
  %301 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %298, i64 %300, i1 zeroext true) #9
  %302 = ptrtoint i64* %301 to i64
  %303 = bitcast %"class.v8::internal::Handle.1137"* %291 to i64*
  store i64 %302, i64* %303, align 8
  br label %304

304:                                              ; preds = %295, %290, %288
  %305 = phi i64* [ %14, %288 ], [ %301, %295 ], [ %293, %290 ]
  %306 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %289, i32 156, i64* %305, i64* null, i64* null) #9
  %307 = load i64, i64* %306, align 8
  %308 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %307, %"class.v8::internal::MessageLocation"* null) #9
  br label %590

309:                                              ; preds = %281
  %310 = and i8 %282, 2
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %342, label %312

312:                                              ; preds = %309
  %313 = and i8 %282, 1
  %314 = icmp ne i8 %313, 0
  %315 = and i8 %278, 1
  %316 = icmp ne i8 %315, 0
  %317 = xor i1 %316, %314
  br i1 %317, label %318, label %342

318:                                              ; preds = %312
  %319 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %5) #9
  %320 = icmp eq i32 %319, 1
  br i1 %320, label %590, label %321

321:                                              ; preds = %318
  %322 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %15, label %323, label %337

323:                                              ; preds = %321
  %324 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 6
  %325 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %324, i64 0, i32 0, i32 0
  %326 = load i64*, i64** %325, align 8
  %327 = icmp eq i64* %326, null
  br i1 %327, label %328, label %337

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 5
  %330 = bitcast %"class.v8::internal::Isolate"** %329 to %"class.v8::internal::Factory"**
  %331 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %330, align 8
  %332 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 11
  %333 = load i64, i64* %332, align 8
  %334 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %331, i64 %333, i1 zeroext true) #9
  %335 = ptrtoint i64* %334 to i64
  %336 = bitcast %"class.v8::internal::Handle.1137"* %324 to i64*
  store i64 %335, i64* %336, align 8
  br label %337

337:                                              ; preds = %328, %323, %321
  %338 = phi i64* [ %14, %321 ], [ %334, %328 ], [ %326, %323 ]
  %339 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %322, i32 156, i64* %338, i64* null, i64* null) #9
  %340 = load i64, i64* %339, align 8
  %341 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %340, %"class.v8::internal::MessageLocation"* null) #9
  br label %590

342:                                              ; preds = %309, %312, %277
  %343 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 1, i32 0, i32 0
  %344 = load i64*, i64** %343, align 8
  %345 = icmp ne i64* %344, null
  %346 = and i8 %278, 32
  %347 = icmp ne i8 %346, 0
  %348 = or i1 %347, %345
  br i1 %42, label %520, label %349

349:                                              ; preds = %342
  %350 = xor i1 %25, %348
  br i1 %350, label %351, label %376

351:                                              ; preds = %349
  br i1 %280, label %520, label %352

352:                                              ; preds = %351
  %353 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %5) #9
  %354 = icmp eq i32 %353, 1
  br i1 %354, label %590, label %355

355:                                              ; preds = %352
  %356 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %15, label %357, label %371

357:                                              ; preds = %355
  %358 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 6
  %359 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %358, i64 0, i32 0, i32 0
  %360 = load i64*, i64** %359, align 8
  %361 = icmp eq i64* %360, null
  br i1 %361, label %362, label %371

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 5
  %364 = bitcast %"class.v8::internal::Isolate"** %363 to %"class.v8::internal::Factory"**
  %365 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %364, align 8
  %366 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 11
  %367 = load i64, i64* %366, align 8
  %368 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %365, i64 %367, i1 zeroext true) #9
  %369 = ptrtoint i64* %368 to i64
  %370 = bitcast %"class.v8::internal::Handle.1137"* %358 to i64*
  store i64 %369, i64* %370, align 8
  br label %371

371:                                              ; preds = %362, %357, %355
  %372 = phi i64* [ %14, %355 ], [ %368, %362 ], [ %360, %357 ]
  %373 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %356, i32 156, i64* %372, i64* null, i64* null) #9
  %374 = load i64, i64* %373, align 8
  %375 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %374, %"class.v8::internal::MessageLocation"* null) #9
  br label %590

376:                                              ; preds = %349
  %377 = and i1 %25, %348
  br i1 %377, label %378, label %444

378:                                              ; preds = %376
  %379 = and i8 %278, 20
  %380 = icmp eq i8 %379, 0
  br i1 %380, label %381, label %520

381:                                              ; preds = %378
  %382 = load i8, i8* %199, align 8
  %383 = and i8 %382, 48
  %384 = icmp eq i8 %383, 48
  br i1 %384, label %385, label %409

385:                                              ; preds = %381
  %386 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %5) #9
  %387 = icmp eq i32 %386, 1
  br i1 %387, label %590, label %388

388:                                              ; preds = %385
  %389 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %15, label %390, label %404

390:                                              ; preds = %388
  %391 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 6
  %392 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %391, i64 0, i32 0, i32 0
  %393 = load i64*, i64** %392, align 8
  %394 = icmp eq i64* %393, null
  br i1 %394, label %395, label %404

395:                                              ; preds = %390
  %396 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 5
  %397 = bitcast %"class.v8::internal::Isolate"** %396 to %"class.v8::internal::Factory"**
  %398 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %397, align 8
  %399 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 11
  %400 = load i64, i64* %399, align 8
  %401 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %398, i64 %400, i1 zeroext true) #9
  %402 = ptrtoint i64* %401 to i64
  %403 = bitcast %"class.v8::internal::Handle.1137"* %391 to i64*
  store i64 %402, i64* %403, align 8
  br label %404

404:                                              ; preds = %395, %390, %388
  %405 = phi i64* [ %14, %388 ], [ %401, %395 ], [ %393, %390 ]
  %406 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %389, i32 156, i64* %405, i64* null, i64* null) #9
  %407 = load i64, i64* %406, align 8
  %408 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %407, %"class.v8::internal::MessageLocation"* null) #9
  br label %590

409:                                              ; preds = %381
  %410 = load i64*, i64** %16, align 8
  %411 = icmp eq i64* %410, null
  %412 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %412) #9
  br i1 %411, label %443, label %413

413:                                              ; preds = %409
  %414 = load i64, i64* %410, align 8
  %415 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0
  store i64 %414, i64* %415, align 8
  %416 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11, i64 0, i32 0
  %417 = load i64, i64* %344, align 8
  %418 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %416, i64 %417) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %412) #9
  br i1 %418, label %520, label %419

419:                                              ; preds = %413
  %420 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %5) #9
  %421 = icmp eq i32 %420, 1
  br i1 %421, label %590, label %422

422:                                              ; preds = %419
  %423 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %15, label %424, label %438

424:                                              ; preds = %422
  %425 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 6
  %426 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %425, i64 0, i32 0, i32 0
  %427 = load i64*, i64** %426, align 8
  %428 = icmp eq i64* %427, null
  br i1 %428, label %429, label %438

429:                                              ; preds = %424
  %430 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 5
  %431 = bitcast %"class.v8::internal::Isolate"** %430 to %"class.v8::internal::Factory"**
  %432 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %431, align 8
  %433 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 11
  %434 = load i64, i64* %433, align 8
  %435 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %432, i64 %434, i1 zeroext true) #9
  %436 = ptrtoint i64* %435 to i64
  %437 = bitcast %"class.v8::internal::Handle.1137"* %425 to i64*
  store i64 %436, i64* %437, align 8
  br label %438

438:                                              ; preds = %429, %424, %422
  %439 = phi i64* [ %14, %422 ], [ %435, %429 ], [ %427, %424 ]
  %440 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %423, i32 156, i64* %439, i64* null, i64* null) #9
  %441 = load i64, i64* %440, align 8
  %442 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %441, %"class.v8::internal::MessageLocation"* null) #9
  br label %590

443:                                              ; preds = %409
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %412) #9
  br label %520

444:                                              ; preds = %376
  br i1 %280, label %520, label %445

445:                                              ; preds = %444
  %446 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 3, i32 0, i32 0
  %447 = load i64*, i64** %446, align 8
  %448 = icmp eq i64* %447, null
  %449 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %449) #9
  br i1 %448, label %482, label %450

450:                                              ; preds = %445
  %451 = load i64, i64* %447, align 8
  %452 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0
  store i64 %451, i64* %452, align 8
  %453 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %12, i64 0, i32 0
  %454 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 3, i32 0, i32 0
  %455 = load i64*, i64** %454, align 8
  %456 = load i64, i64* %455, align 8
  %457 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %453, i64 %456) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %449) #9
  br i1 %457, label %483, label %458

458:                                              ; preds = %450
  %459 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %5) #9
  %460 = icmp eq i32 %459, 1
  br i1 %460, label %590, label %461

461:                                              ; preds = %458
  %462 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %15, label %463, label %477

463:                                              ; preds = %461
  %464 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 6
  %465 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %464, i64 0, i32 0, i32 0
  %466 = load i64*, i64** %465, align 8
  %467 = icmp eq i64* %466, null
  br i1 %467, label %468, label %477

468:                                              ; preds = %463
  %469 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 5
  %470 = bitcast %"class.v8::internal::Isolate"** %469 to %"class.v8::internal::Factory"**
  %471 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %470, align 8
  %472 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 11
  %473 = load i64, i64* %472, align 8
  %474 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %471, i64 %473, i1 zeroext true) #9
  %475 = ptrtoint i64* %474 to i64
  %476 = bitcast %"class.v8::internal::Handle.1137"* %464 to i64*
  store i64 %475, i64* %476, align 8
  br label %477

477:                                              ; preds = %468, %463, %461
  %478 = phi i64* [ %14, %461 ], [ %474, %468 ], [ %466, %463 ]
  %479 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %462, i32 156, i64* %478, i64* null, i64* null) #9
  %480 = load i64, i64* %479, align 8
  %481 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %480, %"class.v8::internal::MessageLocation"* null) #9
  br label %590

482:                                              ; preds = %445
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %449) #9
  br label %483

483:                                              ; preds = %450, %482
  %484 = load i64*, i64** %26, align 8
  %485 = icmp eq i64* %484, null
  %486 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %486) #9
  br i1 %485, label %519, label %487

487:                                              ; preds = %483
  %488 = load i64, i64* %484, align 8
  %489 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0
  store i64 %488, i64* %489, align 8
  %490 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %13, i64 0, i32 0
  %491 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 2, i32 0, i32 0
  %492 = load i64*, i64** %491, align 8
  %493 = load i64, i64* %492, align 8
  %494 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %490, i64 %493) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #9
  br i1 %494, label %520, label %495

495:                                              ; preds = %487
  %496 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %5) #9
  %497 = icmp eq i32 %496, 1
  br i1 %497, label %590, label %498

498:                                              ; preds = %495
  %499 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %15, label %500, label %514

500:                                              ; preds = %498
  %501 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 6
  %502 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %501, i64 0, i32 0, i32 0
  %503 = load i64*, i64** %502, align 8
  %504 = icmp eq i64* %503, null
  br i1 %504, label %505, label %514

505:                                              ; preds = %500
  %506 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 5
  %507 = bitcast %"class.v8::internal::Isolate"** %506 to %"class.v8::internal::Factory"**
  %508 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %507, align 8
  %509 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %1, i64 0, i32 11
  %510 = load i64, i64* %509, align 8
  %511 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %508, i64 %510, i1 zeroext true) #9
  %512 = ptrtoint i64* %511 to i64
  %513 = bitcast %"class.v8::internal::Handle.1137"* %501 to i64*
  store i64 %512, i64* %513, align 8
  br label %514

514:                                              ; preds = %505, %500, %498
  %515 = phi i64* [ %14, %498 ], [ %511, %505 ], [ %503, %500 ]
  %516 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %499, i32 156, i64* %515, i64* null, i64* null) #9
  %517 = load i64, i64* %516, align 8
  %518 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %517, %"class.v8::internal::MessageLocation"* null) #9
  br label %590

519:                                              ; preds = %483
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #9
  br label %520

520:                                              ; preds = %378, %413, %487, %351, %444, %519, %443, %342
  br i1 %15, label %521, label %590

521:                                              ; preds = %520
  %522 = load i8, i8* %199, align 8
  %523 = and i8 %522, 2
  %524 = icmp eq i8 %523, 0
  br i1 %524, label %525, label %527

525:                                              ; preds = %521
  %526 = load i8, i8* %43, align 8
  br label %527

527:                                              ; preds = %521, %525
  %528 = phi i8 [ %526, %525 ], [ %522, %521 ]
  %529 = shl i8 %528, 1
  %530 = and i8 %529, 2
  %531 = and i8 %522, 8
  %532 = icmp eq i8 %531, 0
  br i1 %532, label %533, label %535

533:                                              ; preds = %527
  %534 = load i8, i8* %43, align 8
  br label %535

535:                                              ; preds = %527, %533
  %536 = phi i8 [ %534, %533 ], [ %522, %527 ]
  %537 = and i8 %536, 4
  %538 = or i8 %537, %530
  %539 = xor i8 %538, 6
  %540 = zext i8 %539 to i32
  %541 = and i1 %42, %348
  %542 = or i1 %25, %541
  br i1 %542, label %543, label %565

543:                                              ; preds = %535
  %544 = and i8 %522, 32
  %545 = icmp eq i8 %544, 0
  br i1 %545, label %546, label %548

546:                                              ; preds = %543
  %547 = load i8, i8* %43, align 8
  br label %548

548:                                              ; preds = %543, %546
  %549 = phi i8 [ %547, %546 ], [ %522, %543 ]
  %550 = lshr i8 %549, 4
  %551 = and i8 %550, 1
  %552 = or i8 %551, %539
  %553 = xor i8 %552, 1
  %554 = zext i8 %553 to i32
  %555 = load i64*, i64** %16, align 8
  %556 = icmp eq i64* %555, null
  br i1 %556, label %557, label %562

557:                                              ; preds = %548
  %558 = load i64*, i64** %343, align 8
  %559 = icmp eq i64* %558, null
  %560 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %561 = select i1 %559, i64* %560, i64* %558
  br label %562

562:                                              ; preds = %557, %548
  %563 = phi i64* [ %555, %548 ], [ %561, %557 ]
  %564 = call i16 @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"* nonnull %1, i64* %563, i32 %554, i64 %5, i32 1)
  br label %590

565:                                              ; preds = %535
  %566 = load i64*, i64** %26, align 8
  %567 = icmp eq i64* %566, null
  br i1 %567, label %568, label %574

568:                                              ; preds = %565
  %569 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 2, i32 0, i32 0
  %570 = load i64*, i64** %569, align 8
  %571 = icmp eq i64* %570, null
  %572 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %573 = select i1 %571, i64* %572, i64* %570
  br label %574

574:                                              ; preds = %568, %565
  %575 = phi i64* [ %566, %565 ], [ %573, %568 ]
  %576 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 3, i32 0, i32 0
  %577 = load i64*, i64** %576, align 8
  %578 = icmp eq i64* %577, null
  br i1 %578, label %579, label %585

579:                                              ; preds = %574
  %580 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 3, i32 0, i32 0
  %581 = load i64*, i64** %580, align 8
  %582 = icmp eq i64* %581, null
  %583 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %584 = select i1 %582, i64* %583, i64* %581
  br label %585

585:                                              ; preds = %579, %574
  %586 = phi i64* [ %577, %574 ], [ %584, %579 ]
  %587 = call i64* @_ZN2v88internal8JSObject14DefineAccessorEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEES6_NS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* nonnull %1, i64* %575, i64* %586, i32 %540)
  %588 = icmp eq i64* %587, null
  %589 = select i1 %588, i16 0, i16 257
  br label %590

590:                                              ; preds = %585, %192, %520, %562, %495, %458, %419, %385, %352, %318, %285, %269, %275, %85, %144, %60, %371, %404, %438, %477, %514, %337, %304, %79
  %591 = phi i16 [ 0, %79 ], [ 0, %304 ], [ 0, %337 ], [ 0, %371 ], [ 0, %404 ], [ 0, %438 ], [ 0, %477 ], [ 0, %514 ], [ 1, %60 ], [ 257, %144 ], [ 257, %85 ], [ 257, %275 ], [ 257, %269 ], [ 1, %285 ], [ 1, %318 ], [ 1, %352 ], [ 1, %385 ], [ 1, %419 ], [ 1, %458 ], [ 1, %495 ], [ %564, %562 ], [ 257, %520 ], [ %197, %192 ], [ %589, %585 ]
  ret i16 %591
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver30IsCompatiblePropertyDescriptorEPNS0_7IsolateEbPNS0_18PropertyDescriptorES5_NS0_6HandleINS0_4NameEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i1 zeroext, %"class.v8::internal::PropertyDescriptor"*, %"class.v8::internal::PropertyDescriptor"* readonly, i64*, i64) local_unnamed_addr #0 align 2 {
  %7 = ptrtoint i64* %4 to i64
  %8 = tail call i16 @_ZN2v88internal10JSReceiver34ValidateAndApplyPropertyDescriptorEPNS0_7IsolateEPNS0_14LookupIteratorEbPNS0_18PropertyDescriptorES7_NS_5MaybeINS0_11ShouldThrowEEENS0_6HandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::LookupIterator"* null, i1 zeroext %1, %"class.v8::internal::PropertyDescriptor"* %2, %"class.v8::internal::PropertyDescriptor"* %3, i64 %5, i64 %7)
  ret i16 %8
}

declare i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"*, i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call i16 @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i32 %2, i64 1, i32 %3)
  %6 = trunc i16 %5 to i8
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %7, i64* null, i64* %1
  ret i64* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject14DefineAccessorEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEES6_NS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %11, label %70

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 40, i1 false) #9
  %17 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19, !prof !4

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 14, i32 0
  %23 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %23, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %24, %"class.v8::internal::RuntimeCallStats"** %20, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %24, %"class.v8::internal::RuntimeCallTimer"* %21, i32 207) #9
  br label %25

25:                                               ; preds = %19, %11
  %26 = load i64, i64* %15, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 521
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %26 to i32
  %30 = trunc i64 %28 to i32
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %62, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 297
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %29, %35
  br i1 %36, label %62, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 383
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %29, %40
  br i1 %41, label %62, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 516
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %29, %45
  br i1 %46, label %62, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 510
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %29, %50
  br i1 %51, label %62, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 420
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %29, %55
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 447
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %29, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %57, %52, %47, %42, %37, %32, %25
  call void @_ZN2v88internal14LookupIterator23InternalUpdateProtectorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %7, i64* %13, i64* %15) #9
  br label %63

63:                                               ; preds = %62, %57
  %64 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %65 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %64, align 8
  %66 = icmp eq %"class.v8::internal::RuntimeCallStats"* %65, null
  br i1 %66, label %69, label %67, !prof !4

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %65, %"class.v8::internal::RuntimeCallTimer"* %68) #9
  br label %69

69:                                               ; preds = %67, %63
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #9
  br label %70

70:                                               ; preds = %4, %69
  %71 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %92

74:                                               ; preds = %70
  %75 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %75, label %91, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %7, i64* %78) #9
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 5
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %82 to i32
  %84 = trunc i64 %80 to i32
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %76
  %87 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %7) #9
  br label %119

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 4
  %90 = ptrtoint i64* %89 to i64
  br label %119

91:                                               ; preds = %74
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %92

92:                                               ; preds = %91, %70
  %93 = load i64, i64* %8, align 8
  %94 = icmp eq i64 %93, -1
  br i1 %94, label %116, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, -4294967296
  %100 = add i64 %98, -1
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  %105 = add i64 %104, 10
  %106 = inttoptr i64 %105 to i8*
  %107 = load i8, i8* %106, align 1
  %108 = lshr i8 %107, 2
  %109 = add nsw i8 %108, -17
  %110 = icmp ult i8 %109, 11
  br i1 %110, label %111, label %116

111:                                              ; preds = %95
  %112 = bitcast %"class.v8::internal::Isolate"** %6 to %"class.v8::internal::Factory"**
  %113 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %113, i64 160
  %115 = ptrtoint %"class.v8::internal::Factory"* %114 to i64
  br label %119

116:                                              ; preds = %92, %95
  call void @_ZN2v88internal14LookupIterator28TransitionToAccessorPropertyENS0_6HandleINS0_6ObjectEEES4_NS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64* %2, i32 %3) #9
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 4
  %118 = ptrtoint i64* %117 to i64
  br label %119

119:                                              ; preds = %111, %116, %86, %88
  %120 = phi i64 [ 0, %86 ], [ %90, %88 ], [ %115, %111 ], [ %118, %116 ]
  %121 = inttoptr i64 %120 to i64*
  ret i64* %121
}

declare zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"*, i64*, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %10, label %71

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 40, i1 false) #9
  %18 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20, !prof !4

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 14, i32 0
  %24 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %24, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %25, %"class.v8::internal::RuntimeCallStats"** %21, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %25, %"class.v8::internal::RuntimeCallTimer"* %22, i32 207) #9
  br label %26

26:                                               ; preds = %20, %10
  %27 = load i64, i64* %16, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 521
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %27 to i32
  %31 = trunc i64 %29 to i32
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %63, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 297
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %30, %36
  br i1 %37, label %63, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 383
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %30, %41
  br i1 %42, label %63, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 516
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %30, %46
  br i1 %47, label %63, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 510
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %30, %51
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 420
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %30, %56
  br i1 %57, label %63, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 447
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %30, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %58, %53, %48, %43, %38, %33, %26
  call void @_ZN2v88internal14LookupIterator23InternalUpdateProtectorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %12, i64* %14, i64* %16) #9
  br label %64

64:                                               ; preds = %63, %58
  %65 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %66 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %65, align 8
  %67 = icmp eq %"class.v8::internal::RuntimeCallStats"* %66, null
  br i1 %67, label %70, label %68, !prof !4

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %66, %"class.v8::internal::RuntimeCallTimer"* %69) #9
  br label %70

70:                                               ; preds = %68, %64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #9
  br label %71

71:                                               ; preds = %5, %70
  %72 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %75 = icmp eq i32 %4, 1
  br i1 %75, label %76, label %89

76:                                               ; preds = %71, %88
  %77 = load i32, i32* %74, align 4
  switch i32 %77, label %88 [
    i32 4, label %198
    i32 3, label %91
    i32 6, label %154
    i32 7, label %91
    i32 0, label %86
    i32 2, label %78
    i32 5, label %109
    i32 1, label %137
  ]

78:                                               ; preds = %76
  %79 = call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0) #9
  %80 = call fastcc i16 @_ZN2v88internal12_GLOBAL__N_134SetPropertyWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEENS_5MaybeINS0_11ShouldThrowEEENS4_INS0_6ObjectEEE(%"class.v8::internal::LookupIterator"* %0, i64* %79, i64 %3, i64* %1) #9
  %81 = trunc i16 %80 to i8
  %82 = lshr i16 %80, 8
  %83 = icmp eq i8 %81, 0
  br i1 %83, label %201, label %84

84:                                               ; preds = %78
  %85 = icmp eq i16 %82, 0
  br i1 %85, label %88, label %201

86:                                               ; preds = %76
  %87 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %87, label %88, label %94

88:                                               ; preds = %86, %84, %76
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %76

89:                                               ; preds = %71, %197
  %90 = load i32, i32* %74, align 4
  switch i32 %90, label %197 [
    i32 4, label %198
    i32 3, label %91
    i32 6, label %154
    i32 7, label %91
    i32 0, label %92
    i32 1, label %137
    i32 5, label %109
  ]

91:                                               ; preds = %89, %89, %76, %76
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

92:                                               ; preds = %89
  %93 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #9
  br i1 %93, label %197, label %94

94:                                               ; preds = %92, %86
  %95 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %96 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %96, i64* %98) #9
  %99 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %95, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 0, i32 7, i32 0, i64 5
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = trunc i64 %103 to i32
  %105 = trunc i64 %101 to i32
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %201, label %107

107:                                              ; preds = %94
  %108 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %99) #9
  br label %201

109:                                              ; preds = %89, %76
  %110 = call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* %0) #9
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %136, label %114

114:                                              ; preds = %109
  %115 = and i64 %111, -4294967296
  %116 = add i64 %111, -1
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %115, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load atomic i16, i16* %122 monotonic, align 2
  %124 = icmp eq i16 %123, 86
  %125 = and i1 %75, %124
  br i1 %125, label %126, label %136

126:                                              ; preds = %114
  %127 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = lshr i32 %128, 3
  %130 = and i32 %129, 7
  %131 = icmp eq i32 %130, %2
  br i1 %131, label %133, label %132

132:                                              ; preds = %126
  call void @_ZN2v88internal14LookupIterator24TransitionToAccessorPairENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* %0, i64* %110, i32 %2) #9
  br label %133

133:                                              ; preds = %126, %132
  %134 = call i16 @_ZN2v88internal6Object23SetPropertyWithAccessorEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %3) #9
  %135 = lshr i16 %134, 8
  br label %201

136:                                              ; preds = %109, %114
  call void @_ZN2v88internal14LookupIterator23ReconfigureDataPropertyENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i32 %2) #9
  br label %201

137:                                              ; preds = %89, %76
  %138 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %139 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %141 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %140, i64 0, i32 0, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = icmp eq i64* %142, null
  br i1 %143, label %144, label %150

144:                                              ; preds = %137
  %145 = bitcast %"class.v8::internal::Isolate"* %139 to %"class.v8::internal::Factory"*
  %146 = load i64, i64* %7, align 8
  %147 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %145, i64 %146, i1 zeroext true) #9
  %148 = ptrtoint i64* %147 to i64
  %149 = bitcast %"class.v8::internal::Handle.1137"* %140 to i64*
  store i64 %148, i64* %149, align 8
  br label %150

150:                                              ; preds = %137, %144
  %151 = phi i64* [ %147, %144 ], [ %142, %137 ]
  %152 = call i16 @_ZN2v88internal6Object28RedefineIncompatiblePropertyEPNS0_7IsolateENS0_6HandleIS1_EES5_NS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %139, i64* %151, i64* %1, i64 %3) #9
  %153 = lshr i16 %152, 8
  br label %201

154:                                              ; preds = %89, %76
  %155 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = lshr i32 %156, 3
  %158 = and i32 %157, 7
  %159 = icmp eq i32 %158, %2
  br i1 %159, label %160, label %163

160:                                              ; preds = %154
  %161 = call i16 @_ZN2v88internal6Object15SetDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EE(%"class.v8::internal::LookupIterator"* %0, i64* %1) #9
  %162 = lshr i16 %161, 8
  br label %201

163:                                              ; preds = %154
  %164 = load i64, i64* %7, align 8
  %165 = icmp eq i64 %164, -1
  br i1 %165, label %196, label %166

166:                                              ; preds = %163
  %167 = load i64, i64* %73, align 8
  %168 = and i64 %167, -4294967296
  %169 = add i64 %167, -1
  %170 = inttoptr i64 %169 to i32*
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %168, %172
  %174 = add i64 %173, 10
  %175 = inttoptr i64 %174 to i8*
  %176 = load i8, i8* %175, align 1
  %177 = lshr i8 %176, 2
  %178 = add nsw i8 %177, -17
  %179 = icmp ult i8 %178, 11
  br i1 %179, label %180, label %196

180:                                              ; preds = %166
  %181 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %182 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %184 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %183, i64 0, i32 0, i32 0
  %185 = load i64*, i64** %184, align 8
  %186 = icmp eq i64* %185, null
  br i1 %186, label %187, label %192

187:                                              ; preds = %180
  %188 = bitcast %"class.v8::internal::Isolate"* %182 to %"class.v8::internal::Factory"*
  %189 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %188, i64 %164, i1 zeroext true) #9
  %190 = ptrtoint i64* %189 to i64
  %191 = bitcast %"class.v8::internal::Handle.1137"* %183 to i64*
  store i64 %190, i64* %191, align 8
  br label %192

192:                                              ; preds = %180, %187
  %193 = phi i64* [ %189, %187 ], [ %185, %180 ]
  %194 = call i16 @_ZN2v88internal6Object28RedefineIncompatiblePropertyEPNS0_7IsolateENS0_6HandleIS1_EES5_NS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %182, i64* %193, i64* %1, i64 %3) #9
  %195 = lshr i16 %194, 8
  br label %201

196:                                              ; preds = %163, %166
  call void @_ZN2v88internal14LookupIterator23ReconfigureDataPropertyENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i32 %2) #9
  br label %201

197:                                              ; preds = %89, %92
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %89

198:                                              ; preds = %89, %76
  %199 = call i16 @_ZN2v88internal6Object15AddDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i32 %2, i64 %3, i32 1) #9
  %200 = lshr i16 %199, 8
  br label %201

201:                                              ; preds = %84, %78, %94, %133, %136, %107, %198, %196, %192, %160, %150
  %202 = phi i16 [ %161, %160 ], [ %194, %192 ], [ 1, %196 ], [ %152, %150 ], [ 0, %107 ], [ %199, %198 ], [ 1, %94 ], [ %134, %133 ], [ 1, %136 ], [ 0, %78 ], [ %80, %84 ]
  %203 = phi i16 [ %162, %160 ], [ %195, %192 ], [ 1, %196 ], [ %153, %150 ], [ 0, %107 ], [ %200, %198 ], [ 1, %94 ], [ %135, %133 ], [ 1, %136 ], [ %82, %78 ], [ %82, %84 ]
  %204 = shl nuw i16 %203, 8
  %205 = and i16 %202, 255
  %206 = or i16 %204, %205
  ret i16 %206
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver18CreateDataPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %9 = alloca %"class.v8::internal::LookupIterator", align 8
  %10 = bitcast %"class.v8::internal::LookupIterator::Key"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = ptrtoint i64* %2 to i64
  %12 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %12, align 8
  %13 = load i64, i64* %2, align 8
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 1
  %15 = and i64 %13, -4294967296
  %16 = add i64 %13, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp ult i16 %23, 64
  %25 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  br i1 %24, label %26, label %40

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %27, align 8
  %28 = add i64 %13, 3
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, -536870910
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %26
  %34 = lshr i32 %30, 2
  %35 = and i32 %34, 16777215
  %36 = zext i32 %35 to i64
  store i64 %36, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %48

37:                                               ; preds = %26
  %38 = and i32 %30, 3
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %40, label %41

40:                                               ; preds = %37, %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %50

41:                                               ; preds = %37
  %42 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %7, i64* %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br i1 %42, label %48, label %43

43:                                               ; preds = %41
  %44 = load i64, i64* %2, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, -1
  %47 = inttoptr i64 %46 to i32*
  br label %50

48:                                               ; preds = %41, %33
  %49 = bitcast %"class.v8::internal::LookupIterator::Key"* %8 to i64*
  store i64 %11, i64* %49, align 8
  br label %67

50:                                               ; preds = %43, %40
  %51 = phi i32* [ %47, %43 ], [ %17, %40 ]
  %52 = phi i64 [ %45, %43 ], [ %15, %40 ]
  store i64 -1, i64* %14, align 8
  %53 = load atomic i32, i32* %51 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %52, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = and i16 %58, -32
  %60 = icmp eq i16 %59, 32
  br i1 %60, label %61, label %65

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %63 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %62, align 8
  %64 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %63, %"class.v8::internal::Isolate"* %0, i64* %2) #9
  br label %65

65:                                               ; preds = %61, %50
  %66 = phi i64* [ %64, %61 ], [ %2, %50 ]
  store i64* %66, i64** %12, align 8
  br label %67

67:                                               ; preds = %48, %65
  %68 = phi i64* [ %2, %48 ], [ %66, %65 ]
  %69 = bitcast %"class.v8::internal::LookupIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %69) #9
  %70 = load i64, i64* %14, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %9, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %68, i64 %70, i64* %1, i32 1) #9
  %71 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 8, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, -262144
  %75 = or i64 %74, 16
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 16
  %78 = add i64 %77, -41416
  %79 = inttoptr i64 %78 to %"class.v8::internal::Isolate"*
  %80 = and i64 %73, -4294967296
  %81 = add i64 %73, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp ugt i16 %88, 188
  br i1 %89, label %90, label %92

90:                                               ; preds = %67
  %91 = call i16 @_ZN2v88internal8JSObject18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %9, i64* %3, i64 %4) #9
  br label %113

92:                                               ; preds = %67
  %93 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #9
  %94 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 1, i32 0, i32 0
  %95 = getelementptr inbounds i64*, i64** %94, i64 1
  %96 = bitcast i64** %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #9
  store i64* %3, i64** %94, align 8
  store i8 -1, i8* %93, align 8
  %97 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 6
  %98 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %97, i64 0, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %99, null
  br i1 %100, label %101, label %110

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 5
  %103 = bitcast %"class.v8::internal::Isolate"** %102 to %"class.v8::internal::Factory"**
  %104 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 11
  %106 = load i64, i64* %105, align 8
  %107 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %104, i64 %106, i1 zeroext true) #9
  %108 = ptrtoint i64* %107 to i64
  %109 = bitcast %"class.v8::internal::Handle.1137"* %97 to i64*
  store i64 %108, i64* %109, align 8
  br label %110

110:                                              ; preds = %101, %92
  %111 = phi i64* [ %107, %101 ], [ %99, %92 ]
  %112 = call i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %79, i64* %72, i64* %111, %"class.v8::internal::PropertyDescriptor"* nonnull %6, i64 %4) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #9
  br label %113

113:                                              ; preds = %90, %110
  %114 = phi i16 [ %91, %90 ], [ %112, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %69) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i16 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = and i64 %7, -4294967296
  %15 = add i64 %7, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp ugt i16 %22, 188
  br i1 %23, label %24, label %26

24:                                               ; preds = %3
  %25 = tail call i16 @_ZN2v88internal8JSObject18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %2)
  br label %47

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 1, i32 0, i32 0
  %29 = getelementptr inbounds i64*, i64** %28, i64 1
  %30 = bitcast i64** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #9
  store i64* %1, i64** %28, align 8
  store i8 -1, i8* %27, align 8
  %31 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %32 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %31, i64 0, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = icmp eq i64* %33, null
  br i1 %34, label %35, label %44

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %37 = bitcast %"class.v8::internal::Isolate"** %36 to %"class.v8::internal::Factory"**
  %38 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %40 = load i64, i64* %39, align 8
  %41 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %38, i64 %40, i1 zeroext true) #9
  %42 = ptrtoint i64* %41 to i64
  %43 = bitcast %"class.v8::internal::Handle.1137"* %31 to i64*
  store i64 %42, i64* %43, align 8
  br label %44

44:                                               ; preds = %26, %35
  %45 = phi i64* [ %41, %35 ], [ %33, %26 ]
  %46 = call i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %13, i64* %6, i64* %45, %"class.v8::internal::PropertyDescriptor"* nonnull %4, i64 %2)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #9
  br label %47

47:                                               ; preds = %44, %24
  %48 = phi i16 [ %25, %24 ], [ %46, %44 ]
  ret i16 %48
}

declare i16 @_ZN2v88internal7JSProxy24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #2

declare i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal12AccessorPair12GetComponentEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_IS1_EENS0_17AccessorComponentE(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver17SetIntegrityLevelENS0_6HandleIS1_EENS0_18PropertyAttributesENS0_11ShouldThrowE(i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %7 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %8 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %9 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %10 = load i64, i64* %0, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp ugt i16 %19, 188
  br i1 %20, label %21, label %51

21:                                               ; preds = %3
  %22 = load atomic i32, i32* %13 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %11, %23
  %25 = add i64 %24, 10
  %26 = inttoptr i64 %25 to i8*
  %27 = load i8, i8* %26, align 1
  %28 = lshr i8 %27, 2
  %29 = add nsw i8 %28, -13
  %30 = icmp ult i8 %29, 2
  br i1 %30, label %51, label %31

31:                                               ; preds = %21
  %32 = load atomic i32, i32* %13 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %11, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 191
  br i1 %38, label %51, label %39

39:                                               ; preds = %31
  %40 = tail call i16 @_ZN2v88internal8JSObject18TestIntegrityLevelENS0_6HandleIS1_EENS0_18PropertyAttributesE(i64* %0, i32 %1)
  %41 = trunc i16 %40 to i8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %211, label %43

43:                                               ; preds = %39
  %44 = icmp ult i16 %40, 256
  br i1 %44, label %45, label %211

45:                                               ; preds = %43
  %46 = icmp eq i32 %1, 4
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = tail call i16 @_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE4EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %0, i32 %2)
  br label %211

49:                                               ; preds = %45
  %50 = tail call i16 @_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE5EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %0, i32 %2)
  br label %211

51:                                               ; preds = %31, %21, %3
  %52 = and i64 %10, -262144
  %53 = or i64 %52, 16
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = add i64 %55, -41416
  %57 = inttoptr i64 %56 to %"class.v8::internal::Isolate"*
  %58 = load atomic i32, i32* %13 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %11, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp eq i16 %63, 188
  br i1 %64, label %65, label %67

65:                                               ; preds = %51
  %66 = tail call i16 @_ZN2v88internal7JSProxy17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %0, i32 %2) #9
  br label %69

67:                                               ; preds = %51
  %68 = tail call i16 @_ZN2v88internal8JSObject17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %0, i32 %2) #9
  br label %69

69:                                               ; preds = %65, %67
  %70 = phi i16 [ %66, %65 ], [ %68, %67 ]
  %71 = trunc i16 %70 to i8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %211, label %73

73:                                               ; preds = %69
  %74 = tail call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* %0, i32 0, i32 0, i32 0, i1 zeroext false, i1 zeroext false) #9
  %75 = icmp eq i64* %74, null
  br i1 %75, label %211, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 1, i32 0, i32 0
  %79 = bitcast i64** %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 32, i1 false) #9
  store i8 8, i8* %77, align 8
  %80 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %80) #9
  %81 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 1, i32 0, i32 0
  %82 = bitcast i64** %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 32, i1 false) #9
  store i8 40, i8* %80, align 8
  %83 = icmp eq i32 %1, 4
  %84 = load i64, i64* %74, align 8
  %85 = add i64 %84, 3
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, 1
  br i1 %83, label %104, label %89

89:                                               ; preds = %76
  br i1 %88, label %90, label %209

90:                                               ; preds = %89
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 4
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 0
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 1
  %94 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 0
  %95 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 1, i32 0, i32 0
  %96 = bitcast i64** %95 to i8*
  %97 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i8*
  %98 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  %99 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 1
  %101 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %9, i64 0, i32 0
  %102 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 2, i32 0, i32 0
  %103 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 3, i32 0, i32 0
  br label %151

104:                                              ; preds = %76
  br i1 %88, label %105, label %209

105:                                              ; preds = %104
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 4
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 0
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 1
  br label %117

109:                                              ; preds = %145
  %110 = load i64, i64* %74, align 8
  %111 = add i64 %110, 3
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = ashr i32 %113, 1
  %115 = sext i32 %114 to i64
  %116 = icmp slt i64 %150, %115
  br i1 %116, label %117, label %209

117:                                              ; preds = %105, %109
  %118 = phi i64 [ 0, %105 ], [ %150, %109 ]
  %119 = phi i64 [ %84, %105 ], [ %110, %109 ]
  %120 = and i64 %119, -4294967296
  %121 = trunc i64 %118 to i32
  %122 = shl i32 %121, 2
  %123 = sext i32 %122 to i64
  %124 = add i64 %119, 7
  %125 = add i64 %124, %123
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %120, %128
  %130 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %106, align 8
  %131 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %117
  %133 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %130, i64 %129) #9
  br label %145

134:                                              ; preds = %117
  %135 = load i64*, i64** %107, align 8
  %136 = load i64*, i64** %108, align 8
  %137 = icmp eq i64* %135, %136
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  %139 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %57) #9
  br label %140

140:                                              ; preds = %138, %134
  %141 = phi i64* [ %139, %138 ], [ %135, %134 ]
  %142 = ptrtoint i64* %141 to i64
  %143 = add i64 %142, 8
  %144 = inttoptr i64 %143 to i64*
  store i64* %144, i64** %107, align 8
  store i64 %129, i64* %141, align 8
  br label %145

145:                                              ; preds = %132, %140
  %146 = phi i64* [ %133, %132 ], [ %141, %140 ]
  %147 = call i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %57, i64* %0, i64* %146, %"class.v8::internal::PropertyDescriptor"* nonnull %6, i64 1)
  %148 = trunc i16 %147 to i8
  %149 = icmp eq i8 %148, 0
  %150 = add nuw nsw i64 %118, 1
  br i1 %149, label %209, label %109

151:                                              ; preds = %90, %199
  %152 = phi i64 [ 0, %90 ], [ %200, %199 ]
  %153 = phi i64 [ %84, %90 ], [ %201, %199 ]
  %154 = and i64 %153, -4294967296
  %155 = trunc i64 %152 to i32
  %156 = shl i32 %155, 2
  %157 = sext i32 %156 to i64
  %158 = add i64 %153, 7
  %159 = add i64 %158, %157
  %160 = inttoptr i64 %159 to i32*
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = zext i32 %161 to i64
  %163 = or i64 %154, %162
  %164 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %91, align 8
  %165 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %151
  %167 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %164, i64 %163) #9
  br label %179

168:                                              ; preds = %151
  %169 = load i64*, i64** %92, align 8
  %170 = load i64*, i64** %93, align 8
  %171 = icmp eq i64* %169, %170
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %57) #9
  br label %174

174:                                              ; preds = %172, %168
  %175 = phi i64* [ %173, %172 ], [ %169, %168 ]
  %176 = ptrtoint i64* %175 to i64
  %177 = add i64 %176, 8
  %178 = inttoptr i64 %177 to i64*
  store i64* %178, i64** %92, align 8
  store i64 %163, i64* %175, align 8
  br label %179

179:                                              ; preds = %166, %174
  %180 = phi i64* [ %167, %166 ], [ %175, %174 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %94) #9
  store i8 0, i8* %94, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %4, %"class.v8::internal::Isolate"* %57, i64* %180) #9
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %98) #9
  %181 = load i64*, i64** %99, align 8
  %182 = load i64, i64* %100, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %57, i64* %0, i64* %181, i64 %182, i64* %0, i32 1) #9
  %183 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::PropertyDescriptor"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %98) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #9
  %184 = trunc i16 %183 to i8
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %208, label %186

186:                                              ; preds = %179
  %187 = icmp ugt i16 %183, 255
  br i1 %187, label %188, label %199

188:                                              ; preds = %186
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %101) #9
  %189 = load i64*, i64** %102, align 8
  %190 = icmp eq i64* %189, null
  %191 = load i64*, i64** %103, align 8
  %192 = icmp eq i64* %191, null
  %193 = and i1 %190, %192
  %194 = select i1 %193, %"class.v8::internal::PropertyDescriptor"* %7, %"class.v8::internal::PropertyDescriptor"* %6
  %195 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %194, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* nonnull align 8 %195, i64 40, i1 false)
  %196 = call i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %57, i64* %0, i64* %180, %"class.v8::internal::PropertyDescriptor"* nonnull %9, i64 1)
  %197 = trunc i16 %196 to i8
  %198 = icmp eq i8 %197, 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %101) #9
  br i1 %198, label %208, label %199

199:                                              ; preds = %188, %186
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %94) #9
  %200 = add nuw nsw i64 %152, 1
  %201 = load i64, i64* %74, align 8
  %202 = add i64 %201, 3
  %203 = inttoptr i64 %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = ashr i32 %204, 1
  %206 = sext i32 %205 to i64
  %207 = icmp slt i64 %200, %206
  br i1 %207, label %151, label %209

208:                                              ; preds = %188, %179
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %94) #9
  br label %209

209:                                              ; preds = %199, %145, %109, %89, %104, %208
  %210 = phi i16 [ 0, %208 ], [ 257, %104 ], [ 257, %89 ], [ 0, %145 ], [ 257, %109 ], [ 257, %199 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %80) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #9
  br label %211

211:                                              ; preds = %43, %47, %49, %39, %209, %73, %69
  %212 = phi i16 [ 0, %69 ], [ %210, %209 ], [ 0, %73 ], [ 0, %39 ], [ %50, %49 ], [ %48, %47 ], [ %40, %43 ]
  ret i16 %212
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject18TestIntegrityLevelENS0_6HandleIS1_EENS0_18PropertyAttributesE(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp ult i16 %12, 1042
  br i1 %13, label %213, label %14

14:                                               ; preds = %2
  %15 = load atomic i32, i32* %6 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %4, %16
  %18 = add i64 %17, 10
  %19 = inttoptr i64 %18 to i8*
  %20 = load i8, i8* %19, align 1
  %21 = lshr i8 %20, 2
  %22 = add nsw i8 %21, -13
  %23 = icmp ult i8 %22, 2
  br i1 %23, label %213, label %24

24:                                               ; preds = %14
  %25 = load atomic i32, i32* %6 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %4, %26
  %28 = add i64 %27, 11
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 134217728
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %215

33:                                               ; preds = %24
  %34 = load atomic i32, i32* %6 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %4, %35
  %37 = add i64 %36, 10
  %38 = inttoptr i64 %37 to i8*
  %39 = load i8, i8* %38, align 1
  %40 = lshr i8 %39, 2
  %41 = icmp eq i8 %40, 12
  br i1 %41, label %42, label %172

42:                                               ; preds = %33
  %43 = add i64 %3, 7
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %4, %46
  %48 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %49 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %48, i64 0, i32 0, i32 1
  %52 = load i8, i8* %51, align 8, !range !5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %48, i64 0, i32 1, i64 0
  br label %64

56:                                               ; preds = %50, %42
  %57 = and i64 %3, -262144
  %58 = or i64 %57, 16
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 16
  %61 = add i64 %60, -41416
  %62 = inttoptr i64 %61 to %"class.v8::internal::Isolate"*
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %64

64:                                               ; preds = %56, %54
  %65 = phi i64* [ %63, %56 ], [ %55, %54 ]
  %66 = add i64 %47, 15
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = ashr i32 %68, 1
  %70 = sext i32 %69 to i64
  %71 = icmp eq i32 %69, 0
  br i1 %71, label %208, label %72

72:                                               ; preds = %64
  %73 = add i64 %47, 7
  %74 = getelementptr inbounds i64, i64* %65, i64 4
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %77 = getelementptr inbounds i64, i64* %65, i64 5
  %78 = icmp eq i32 %1, 5
  br i1 %78, label %124, label %79

79:                                               ; preds = %72, %121
  %80 = phi i64 [ %122, %121 ], [ 0, %72 ]
  %81 = mul i64 %80, 51539607552
  %82 = add i64 %81, 68719476736
  %83 = ashr exact i64 %82, 32
  %84 = add i64 %83, %73
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %4, %87
  %89 = icmp eq i32 %86, %76
  br i1 %89, label %121, label %90

90:                                               ; preds = %79
  %91 = load i64, i64* %77, align 8
  %92 = trunc i64 %91 to i32
  %93 = icmp eq i32 %86, %92
  br i1 %93, label %121, label %94

94:                                               ; preds = %90
  %95 = and i64 %87, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %94
  %98 = add i64 %88, -1
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %4, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = icmp eq i16 %105, 64
  br i1 %106, label %107, label %113

107:                                              ; preds = %97
  %108 = add i64 %88, 7
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %121

113:                                              ; preds = %107, %97, %94
  %114 = add i64 %81, 103079215104
  %115 = ashr exact i64 %114, 32
  %116 = add i64 %115, %73
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 64
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %215, label %121

121:                                              ; preds = %113, %107, %90, %79
  %122 = add i64 %80, 1
  %123 = icmp eq i64 %122, %70
  br i1 %123, label %208, label %79

124:                                              ; preds = %72, %169
  %125 = phi i64 [ %170, %169 ], [ 0, %72 ]
  %126 = mul i64 %125, 51539607552
  %127 = add i64 %126, 68719476736
  %128 = ashr exact i64 %127, 32
  %129 = add i64 %128, %73
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %4, %132
  %134 = icmp eq i32 %131, %76
  br i1 %134, label %169, label %135

135:                                              ; preds = %124
  %136 = load i64, i64* %77, align 8
  %137 = trunc i64 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %169, label %139

139:                                              ; preds = %135
  %140 = and i64 %132, 1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %158, label %142

142:                                              ; preds = %139
  %143 = add i64 %133, -1
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %4, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = icmp eq i16 %150, 64
  br i1 %151, label %152, label %158

152:                                              ; preds = %142
  %153 = add i64 %133, 7
  %154 = inttoptr i64 %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %169

158:                                              ; preds = %152, %142, %139
  %159 = add i64 %126, 103079215104
  %160 = ashr exact i64 %159, 32
  %161 = add i64 %160, %73
  %162 = inttoptr i64 %161 to i32*
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 64
  %165 = icmp ne i32 %164, 0
  %166 = and i32 %163, 18
  %167 = icmp ne i32 %166, 0
  %168 = and i1 %165, %167
  br i1 %168, label %169, label %215

169:                                              ; preds = %158, %152, %135, %124
  %170 = add i64 %125, 1
  %171 = icmp eq i64 %170, %70
  br i1 %171, label %208, label %124

172:                                              ; preds = %33
  %173 = add nsw i8 %40, -17
  %174 = icmp ult i8 %173, 11
  br i1 %174, label %175, label %184

175:                                              ; preds = %172
  %176 = icmp eq i32 %1, 5
  br i1 %176, label %177, label %206

177:                                              ; preds = %175
  %178 = add i64 %3, 23
  %179 = inttoptr i64 %178 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %215

182:                                              ; preds = %177
  %183 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_128TestPropertiesIntegrityLevelENS0_8JSObjectENS0_18PropertyAttributesE(i64 %3, i32 5) #9
  br i1 %183, label %208, label %215

184:                                              ; preds = %172
  %185 = and i8 %40, 62
  %186 = icmp eq i8 %185, 10
  br i1 %186, label %208, label %187

187:                                              ; preds = %184
  %188 = icmp eq i8 %185, 8
  %189 = icmp ne i32 %1, 5
  %190 = and i1 %189, %188
  br i1 %190, label %208, label %191

191:                                              ; preds = %187
  %192 = icmp eq i8 %185, 6
  %193 = icmp eq i32 %1, 0
  %194 = and i1 %193, %192
  br i1 %194, label %208, label %195

195:                                              ; preds = %191
  %196 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %197 = zext i8 %40 to i64
  %198 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %196, i64 %197
  %199 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %198, align 8
  %200 = bitcast %"class.v8::internal::ElementsAccessor"* %199 to i64 (%"class.v8::internal::ElementsAccessor"*, i64)***
  %201 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64)**, i64 (%"class.v8::internal::ElementsAccessor"*, i64)*** %200, align 8
  %202 = getelementptr inbounds i64 (%"class.v8::internal::ElementsAccessor"*, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64)** %201, i64 7
  %203 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64)** %202, align 8
  %204 = tail call i64 %203(%"class.v8::internal::ElementsAccessor"* %199, i64 %3) #9
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %208, label %215

206:                                              ; preds = %175
  %207 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_128TestPropertiesIntegrityLevelENS0_8JSObjectENS0_18PropertyAttributesE(i64 %3, i32 %1) #9
  br i1 %207, label %208, label %215

208:                                              ; preds = %121, %169, %206, %195, %191, %187, %184, %182, %64
  %209 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_128TestPropertiesIntegrityLevelENS0_8JSObjectENS0_18PropertyAttributesE(i64 %3, i32 %1) #9
  %210 = zext i1 %209 to i16
  %211 = shl nuw nsw i16 %210, 8
  %212 = or i16 %211, 1
  br label %215

213:                                              ; preds = %2, %14
  %214 = tail call fastcc i16 @_ZN2v88internal12_GLOBAL__N_125GenericTestIntegrityLevelENS0_6HandleINS0_10JSReceiverEEENS0_18PropertyAttributesE(i64* %0, i32 %1)
  br label %215

215:                                              ; preds = %113, %158, %208, %206, %195, %182, %177, %24, %213
  %216 = phi i16 [ %214, %213 ], [ 1, %206 ], [ 1, %24 ], [ %212, %208 ], [ 1, %195 ], [ 1, %182 ], [ 1, %177 ], [ 1, %158 ], [ 1, %113 ]
  ret i16 %216
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE4EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE(i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %4 = alloca %"class.v8::internal::Context", align 8
  %5 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %6 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %7 = load i64, i64* %0, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = and i64 %7, -4294967296
  %15 = add i64 %7, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 190
  br i1 %23, label %24, label %44

24:                                               ; preds = %2
  %25 = bitcast %"class.v8::internal::Context"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %30 = bitcast %"class.v8::internal::PrototypeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #9
  %31 = load i64, i64* %10, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %33, %"class.v8::internal::Isolate"** %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 1, i32 0, i32 0
  store i64 %7, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 3
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 4
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 6
  store i32 0, i32* %39, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %3) #9
  %40 = load i64, i64* %35, align 8
  %41 = trunc i64 %40 to i32
  %42 = trunc i64 %29 to i32
  %43 = icmp eq i32 %41, %42
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #9
  br i1 %43, label %94, label %53

44:                                               ; preds = %2
  %45 = load atomic i32, i32* %16 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %14, %46
  %48 = add i64 %47, 9
  %49 = inttoptr i64 %48 to i8*
  %50 = load atomic i8, i8* %49 monotonic, align 1
  %51 = and i8 %50, 32
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %94, label %53

53:                                               ; preds = %24, %44
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  %60 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %55) #9
  br label %74

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64* [ %68, %67 ], [ %63, %61 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = add i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  store i64* %73, i64** %62, align 8
  store i64 %55, i64* %70, align 8
  br label %74

74:                                               ; preds = %59, %69
  %75 = phi i64* [ %60, %59 ], [ %70, %69 ]
  %76 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %13, i64* %75, i64* %0) #9
  br i1 %76, label %94, label %77

77:                                               ; preds = %74
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %13, i64* %0) #9
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 5
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = trunc i64 %79 to i32
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  %86 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %13) #9
  br label %907

87:                                               ; preds = %77
  %88 = icmp eq i32 %1, 1
  br i1 %88, label %907, label %89

89:                                               ; preds = %87
  %90 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %91 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %90, i32 81, i64* null, i64* null, i64* null) #9
  %92 = load i64, i64* %91, align 8
  %93 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %92, %"class.v8::internal::MessageLocation"* null) #9
  br label %907

94:                                               ; preds = %24, %44, %74
  %95 = load i64, i64* %0, align 8
  %96 = and i64 %95, -4294967296
  %97 = add i64 %95, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %96, %100
  %102 = add i64 %101, 10
  %103 = inttoptr i64 %102 to i8*
  %104 = load i8, i8* %103, align 1
  %105 = lshr i8 %104, 2
  %106 = and i8 %105, 62
  switch i8 %106, label %107 [
    i8 10, label %907
    i8 8, label %907
  ]

107:                                              ; preds = %94
  %108 = load atomic i32, i32* %98 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %96, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = icmp eq i16 %113, 190
  br i1 %114, label %115, label %133

115:                                              ; preds = %107
  %116 = bitcast %"class.v8::internal::PrototypeIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %116) #9
  %117 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 2, i32 0, i32 0
  store i64* %0, i64** %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 3
  store i32 0, i32* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 4
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 6
  store i32 0, i32* %122, align 8
  %123 = icmp eq i64* %0, null
  br i1 %123, label %124, label %125, !prof !6

124:                                              ; preds = %115
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #14
  unreachable

125:                                              ; preds = %115
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %5) #9
  %126 = load i8, i8* %121, align 4, !range !5
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %125
  %129 = load i64*, i64** %119, align 8
  %130 = call i16 @_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE4EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %129, i32 %1)
  br label %131

131:                                              ; preds = %125, %128
  %132 = phi i16 [ %130, %128 ], [ 257, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %116) #9
  br label %907

133:                                              ; preds = %107
  %134 = load atomic i32, i32* %98 monotonic, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %96, %135
  %137 = add i64 %136, 9
  %138 = inttoptr i64 %137 to i8*
  %139 = load atomic i8, i8* %138 monotonic, align 1
  %140 = and i8 %139, 4
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %151

142:                                              ; preds = %133
  %143 = load atomic i32, i32* %98 monotonic, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %96, %144
  %146 = add i64 %145, 9
  %147 = inttoptr i64 %146 to i8*
  %148 = load atomic i8, i8* %147 monotonic, align 1
  %149 = and i8 %148, 8
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %158, label %151

151:                                              ; preds = %142, %133
  %152 = icmp eq i32 %1, 1
  br i1 %152, label %907, label %153

153:                                              ; preds = %151
  %154 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %155 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %154, i32 34, i64* null, i64* null, i64* null) #9
  %156 = load i64, i64* %155, align 8
  %157 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %156, %"class.v8::internal::MessageLocation"* null) #9
  br label %907

158:                                              ; preds = %142
  %159 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %160 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %159, i64 4120
  %161 = bitcast %"class.v8::internal::Factory"* %160 to i64*
  %162 = load atomic i32, i32* %98 monotonic, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %96, %163
  %165 = add i64 %164, 10
  %166 = inttoptr i64 %165 to i8*
  %167 = load i8, i8* %166, align 1
  %168 = lshr i8 %167, 2
  %169 = icmp ult i8 %167, 24
  br i1 %169, label %170, label %179

170:                                              ; preds = %158
  %171 = lshr i8 51, %168
  %172 = and i8 %171, 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %170
  %175 = zext i8 %168 to i48
  %176 = shl nuw nsw i48 %175, 3
  %177 = lshr i48 3307158504194, %176
  %178 = trunc i48 %177 to i8
  call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext %178)
  br label %179

179:                                              ; preds = %170, %158, %174
  %180 = load i64, i64* %0, align 8
  %181 = and i64 %180, -4294967296
  %182 = add i64 %180, -1
  %183 = inttoptr i64 %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = zext i32 %184 to i64
  %186 = or i64 %181, %185
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %188 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %189 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %179
  %191 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %188, i64 %186) #9
  br label %205

192:                                              ; preds = %179
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %194 = load i64*, i64** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %196 = load i64*, i64** %195, align 8
  %197 = icmp eq i64* %194, %196
  br i1 %197, label %198, label %200

198:                                              ; preds = %192
  %199 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %200

200:                                              ; preds = %198, %192
  %201 = phi i64* [ %199, %198 ], [ %194, %192 ]
  %202 = ptrtoint i64* %201 to i64
  %203 = add i64 %202, 8
  %204 = inttoptr i64 %203 to i64*
  store i64* %204, i64** %193, align 8
  store i64 %186, i64* %201, align 8
  br label %205

205:                                              ; preds = %190, %200
  %206 = phi i64* [ %191, %190 ], [ %201, %200 ]
  %207 = call i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %13, i64* %206) #9
  %208 = bitcast %"class.v8::internal::TransitionsAccessor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %208) #9
  %209 = ptrtoint i64* %207 to i64
  %210 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %210, align 8
  %211 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 1
  %212 = bitcast %"class.v8::internal::Handle.1175"* %211 to i64*
  store i64 %209, i64* %212, align 8
  %213 = load i64, i64* %207, align 8
  %214 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i64 %213, i64* %214, align 8
  %215 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 5
  store i8 0, i8* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 4
  %218 = load i64, i64* %217, align 8
  %219 = add i64 %213, 35
  %220 = inttoptr i64 %219 to i32*
  %221 = load atomic i32, i32* %220 acquire, align 4
  %222 = and i64 %218, 4294967295
  %223 = icmp eq i64 %222, 0
  call void @llvm.assume(i1 %223) #9
  %224 = zext i32 %221 to i64
  %225 = or i64 %218, %224
  store i64 %225, i64* %215, align 8
  %226 = and i64 %224, 1
  %227 = icmp eq i64 %226, 0
  %228 = icmp eq i32 %221, 3
  %229 = or i1 %228, %227
  br i1 %229, label %230, label %232

230:                                              ; preds = %205
  %231 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  store i32 1, i32* %231, align 8
  br label %260

232:                                              ; preds = %205
  %233 = and i64 %224, 3
  switch i64 %233, label %259 [
    i64 3, label %234
    i64 1, label %236
  ]

234:                                              ; preds = %232
  %235 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  store i32 3, i32* %235, align 8
  br label %260

236:                                              ; preds = %232
  %237 = add i64 %225, -1
  %238 = inttoptr i64 %237 to i32*
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = zext i32 %239 to i64
  %241 = or i64 %218, %240
  %242 = add i64 %241, 7
  %243 = inttoptr i64 %242 to i16*
  %244 = load atomic i16, i16* %243 monotonic, align 2
  %245 = icmp eq i16 %244, 160
  br i1 %245, label %246, label %248

246:                                              ; preds = %236
  %247 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  store i32 4, i32* %247, align 8
  br label %260

248:                                              ; preds = %236
  %249 = load atomic i32, i32* %238 monotonic, align 4
  %250 = zext i32 %249 to i64
  %251 = or i64 %218, %250
  %252 = add i64 %251, 7
  %253 = inttoptr i64 %252 to i16*
  %254 = load atomic i16, i16* %253 monotonic, align 2
  %255 = icmp eq i16 %254, 110
  %256 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  br i1 %255, label %257, label %258

257:                                              ; preds = %248
  store i32 0, i32* %256, align 8
  br label %260

258:                                              ; preds = %248
  store i32 2, i32* %256, align 8
  br label %260

259:                                              ; preds = %232
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

260:                                              ; preds = %230, %234, %246, %257, %258
  %261 = load i64, i64* %161, align 8
  %262 = call i64 @_ZN2v88internal19TransitionsAccessor13SearchSpecialENS0_6SymbolE(%"class.v8::internal::TransitionsAccessor"* nonnull %6, i64 %261) #9
  %263 = trunc i64 %262 to i32
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %368, label %265

265:                                              ; preds = %260
  %266 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %267 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %266, null
  br i1 %267, label %271, label %268

268:                                              ; preds = %265
  %269 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %266, i64 %262) #9
  %270 = load i64, i64* %269, align 8
  br label %284

271:                                              ; preds = %265
  %272 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %275 = load i64*, i64** %274, align 8
  %276 = icmp eq i64* %273, %275
  br i1 %276, label %277, label %279

277:                                              ; preds = %271
  %278 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %279

279:                                              ; preds = %277, %271
  %280 = phi i64* [ %278, %277 ], [ %273, %271 ]
  %281 = ptrtoint i64* %280 to i64
  %282 = add i64 %281, 8
  %283 = inttoptr i64 %282 to i64*
  store i64* %283, i64** %272, align 8
  store i64 %262, i64* %280, align 8
  br label %284

284:                                              ; preds = %268, %279
  %285 = phi i64 [ %270, %268 ], [ %262, %279 ]
  %286 = phi i64* [ %269, %268 ], [ %280, %279 ]
  %287 = add i64 %285, 10
  %288 = inttoptr i64 %287 to i8*
  %289 = load i8, i8* %288, align 1
  %290 = lshr i8 %289, 2
  %291 = add nsw i8 %290, -6
  %292 = icmp ult i8 %291, 6
  br i1 %292, label %366, label %293

293:                                              ; preds = %284
  %294 = load i64, i64* %0, align 8
  %295 = and i64 %294, -4294967296
  %296 = add i64 %294, -1
  %297 = inttoptr i64 %296 to i32*
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = zext i32 %298 to i64
  %300 = or i64 %295, %299
  %301 = add i64 %300, 10
  %302 = inttoptr i64 %301 to i8*
  %303 = load i8, i8* %302, align 1
  %304 = lshr i8 %303, 2
  %305 = add nsw i8 %304, -17
  %306 = icmp ult i8 %305, 11
  br i1 %306, label %366, label %307

307:                                              ; preds = %293
  %308 = load atomic i32, i32* %297 monotonic, align 4
  %309 = zext i32 %308 to i64
  %310 = or i64 %295, %309
  %311 = add i64 %310, 10
  %312 = inttoptr i64 %311 to i8*
  %313 = load i8, i8* %312, align 1
  %314 = and i8 %313, -4
  %315 = icmp eq i8 %314, 48
  br i1 %315, label %366, label %316

316:                                              ; preds = %307
  %317 = load atomic i32, i32* %297 monotonic, align 4
  %318 = zext i32 %317 to i64
  %319 = or i64 %295, %318
  %320 = add i64 %319, 10
  %321 = inttoptr i64 %320 to i8*
  %322 = load i8, i8* %321, align 1
  %323 = and i8 %322, -4
  %324 = icmp eq i8 %323, 64
  br i1 %324, label %366, label %325

325:                                              ; preds = %316
  %326 = load atomic i32, i32* %297 monotonic, align 4
  %327 = zext i32 %326 to i64
  %328 = or i64 %295, %327
  %329 = add i64 %328, 7
  %330 = inttoptr i64 %329 to i16*
  %331 = load atomic i16, i16* %330 monotonic, align 2
  %332 = icmp eq i16 %331, 1085
  br i1 %332, label %333, label %335

333:                                              ; preds = %325
  %334 = add i64 %294, 11
  br label %342

335:                                              ; preds = %325
  %336 = add i64 %294, 7
  %337 = inttoptr i64 %336 to i32*
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i64
  %340 = or i64 %295, %339
  %341 = add i64 %340, 3
  br label %342

342:                                              ; preds = %335, %333
  %343 = phi i64 [ %334, %333 ], [ %341, %335 ]
  %344 = inttoptr i64 %343 to i32*
  %345 = load i32, i32* %344, align 4
  %346 = icmp ult i32 %345, 2
  br i1 %346, label %347, label %349

347:                                              ; preds = %342
  %348 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %366

349:                                              ; preds = %342
  %350 = load atomic i32, i32* %297 monotonic, align 4
  %351 = zext i32 %350 to i64
  %352 = or i64 %295, %351
  %353 = add i64 %352, 10
  %354 = inttoptr i64 %353 to i8*
  %355 = load i8, i8* %354, align 1
  %356 = lshr i8 %355, 2
  %357 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %358 = zext i8 %356 to i64
  %359 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %357, i64 %358
  %360 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %359, align 8
  %361 = bitcast %"class.v8::internal::ElementsAccessor"* %360 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %362 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %361, align 8
  %363 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %362, i64 22
  %364 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %363, align 8
  %365 = call i64* %364(%"class.v8::internal::ElementsAccessor"* %360, i64* %0) #9
  br label %366

366:                                              ; preds = %349, %347, %316, %307, %293, %284
  %367 = phi i64* [ null, %284 ], [ null, %316 ], [ %348, %347 ], [ %365, %349 ], [ null, %307 ], [ null, %293 ]
  call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %13, i64* %0, i64* %286, i32 0)
  br label %727

368:                                              ; preds = %260
  %369 = call zeroext i1 @_ZN2v88internal19TransitionsAccessor22CanHaveMoreTransitionsEv(%"class.v8::internal::TransitionsAccessor"* nonnull %6) #9
  br i1 %369, label %370, label %454

370:                                              ; preds = %368
  %371 = call i64* @_ZN2v88internal3Map24CopyForPreventExtensionsEPNS0_7IsolateENS0_6HandleIS1_EENS0_18PropertyAttributesENS4_INS0_6SymbolEEEPKcb(%"class.v8::internal::Isolate"* %13, i64* %207, i32 4, i64* %161, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0), i1 zeroext false) #9
  %372 = load i64, i64* %371, align 8
  %373 = add i64 %372, 10
  %374 = inttoptr i64 %373 to i8*
  %375 = load i8, i8* %374, align 1
  %376 = lshr i8 %375, 2
  %377 = add nsw i8 %376, -6
  %378 = icmp ult i8 %377, 6
  br i1 %378, label %452, label %379

379:                                              ; preds = %370
  %380 = load i64, i64* %0, align 8
  %381 = and i64 %380, -4294967296
  %382 = add i64 %380, -1
  %383 = inttoptr i64 %382 to i32*
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = zext i32 %384 to i64
  %386 = or i64 %381, %385
  %387 = add i64 %386, 10
  %388 = inttoptr i64 %387 to i8*
  %389 = load i8, i8* %388, align 1
  %390 = lshr i8 %389, 2
  %391 = add nsw i8 %390, -17
  %392 = icmp ult i8 %391, 11
  br i1 %392, label %452, label %393

393:                                              ; preds = %379
  %394 = load atomic i32, i32* %383 monotonic, align 4
  %395 = zext i32 %394 to i64
  %396 = or i64 %381, %395
  %397 = add i64 %396, 10
  %398 = inttoptr i64 %397 to i8*
  %399 = load i8, i8* %398, align 1
  %400 = and i8 %399, -4
  %401 = icmp eq i8 %400, 48
  br i1 %401, label %452, label %402

402:                                              ; preds = %393
  %403 = load atomic i32, i32* %383 monotonic, align 4
  %404 = zext i32 %403 to i64
  %405 = or i64 %381, %404
  %406 = add i64 %405, 10
  %407 = inttoptr i64 %406 to i8*
  %408 = load i8, i8* %407, align 1
  %409 = and i8 %408, -4
  %410 = icmp eq i8 %409, 64
  br i1 %410, label %452, label %411

411:                                              ; preds = %402
  %412 = load atomic i32, i32* %383 monotonic, align 4
  %413 = zext i32 %412 to i64
  %414 = or i64 %381, %413
  %415 = add i64 %414, 7
  %416 = inttoptr i64 %415 to i16*
  %417 = load atomic i16, i16* %416 monotonic, align 2
  %418 = icmp eq i16 %417, 1085
  br i1 %418, label %419, label %421

419:                                              ; preds = %411
  %420 = add i64 %380, 11
  br label %428

421:                                              ; preds = %411
  %422 = add i64 %380, 7
  %423 = inttoptr i64 %422 to i32*
  %424 = load i32, i32* %423, align 4
  %425 = zext i32 %424 to i64
  %426 = or i64 %381, %425
  %427 = add i64 %426, 3
  br label %428

428:                                              ; preds = %421, %419
  %429 = phi i64 [ %420, %419 ], [ %427, %421 ]
  %430 = inttoptr i64 %429 to i32*
  %431 = load i32, i32* %430, align 4
  %432 = icmp ult i32 %431, 2
  br i1 %432, label %433, label %435

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %452

435:                                              ; preds = %428
  %436 = load atomic i32, i32* %383 monotonic, align 4
  %437 = zext i32 %436 to i64
  %438 = or i64 %381, %437
  %439 = add i64 %438, 10
  %440 = inttoptr i64 %439 to i8*
  %441 = load i8, i8* %440, align 1
  %442 = lshr i8 %441, 2
  %443 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %444 = zext i8 %442 to i64
  %445 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %443, i64 %444
  %446 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %445, align 8
  %447 = bitcast %"class.v8::internal::ElementsAccessor"* %446 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %448 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %447, align 8
  %449 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %448, i64 22
  %450 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %449, align 8
  %451 = call i64* %450(%"class.v8::internal::ElementsAccessor"* %446, i64* %0) #9
  br label %452

452:                                              ; preds = %435, %433, %402, %393, %379, %370
  %453 = phi i64* [ null, %370 ], [ null, %402 ], [ %434, %433 ], [ %451, %435 ], [ null, %393 ], [ null, %379 ]
  call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %13, i64* %0, i64* %371, i32 0)
  br label %727

454:                                              ; preds = %368
  call void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"* %13, i64* %0, i32 0, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.97, i64 0, i64 0))
  %455 = load i64, i64* %0, align 8
  %456 = and i64 %455, -4294967296
  %457 = add i64 %455, -1
  %458 = inttoptr i64 %457 to i32*
  %459 = load atomic i32, i32* %458 monotonic, align 4
  %460 = zext i32 %459 to i64
  %461 = or i64 %456, %460
  %462 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %463 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %462, null
  br i1 %463, label %466, label %464

464:                                              ; preds = %454
  %465 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %462, i64 %461) #9
  br label %479

466:                                              ; preds = %454
  %467 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %468 = load i64*, i64** %467, align 8
  %469 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %470 = load i64*, i64** %469, align 8
  %471 = icmp eq i64* %468, %470
  br i1 %471, label %472, label %474

472:                                              ; preds = %466
  %473 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %474

474:                                              ; preds = %472, %466
  %475 = phi i64* [ %473, %472 ], [ %468, %466 ]
  %476 = ptrtoint i64* %475 to i64
  %477 = add i64 %476, 8
  %478 = inttoptr i64 %477 to i64*
  store i64* %478, i64** %467, align 8
  store i64 %461, i64* %475, align 8
  br label %479

479:                                              ; preds = %464, %474
  %480 = phi i64* [ %465, %464 ], [ %475, %474 ]
  %481 = call i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %13, i64* %480, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.98, i64 0, i64 0)) #9
  %482 = load i64, i64* %481, align 8
  %483 = add i64 %482, 11
  %484 = inttoptr i64 %483 to i32*
  %485 = load atomic i32, i32* %484 monotonic, align 4
  %486 = and i32 %485, -134217729
  store atomic volatile i32 %486, i32* %484 monotonic, align 4
  %487 = load i64, i64* %0, align 8
  %488 = and i64 %487, -4294967296
  %489 = add i64 %487, -1
  %490 = inttoptr i64 %489 to i32*
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = zext i32 %491 to i64
  %493 = or i64 %488, %492
  %494 = add i64 %493, 10
  %495 = inttoptr i64 %494 to i8*
  %496 = load i8, i8* %495, align 1
  %497 = lshr i8 %496, 2
  %498 = add nsw i8 %497, -17
  %499 = icmp ult i8 %498, 11
  br i1 %499, label %577, label %500

500:                                              ; preds = %479
  %501 = load atomic i32, i32* %490 monotonic, align 4
  %502 = zext i32 %501 to i64
  %503 = or i64 %488, %502
  %504 = add i64 %503, 10
  %505 = inttoptr i64 %504 to i8*
  %506 = load i8, i8* %505, align 1
  %507 = and i8 %506, -4
  %508 = icmp eq i8 %507, 48
  br i1 %508, label %577, label %509

509:                                              ; preds = %500
  %510 = load atomic i32, i32* %490 monotonic, align 4
  %511 = zext i32 %510 to i64
  %512 = or i64 %488, %511
  %513 = add i64 %512, 10
  %514 = inttoptr i64 %513 to i8*
  %515 = load i8, i8* %514, align 1
  %516 = and i8 %515, -4
  %517 = icmp eq i8 %516, 64
  br i1 %517, label %577, label %518

518:                                              ; preds = %509
  %519 = load atomic i32, i32* %490 monotonic, align 4
  %520 = zext i32 %519 to i64
  %521 = or i64 %488, %520
  %522 = add i64 %521, 7
  %523 = inttoptr i64 %522 to i16*
  %524 = load atomic i16, i16* %523 monotonic, align 2
  %525 = icmp eq i16 %524, 1085
  br i1 %525, label %526, label %528

526:                                              ; preds = %518
  %527 = add i64 %487, 11
  br label %535

528:                                              ; preds = %518
  %529 = add i64 %487, 7
  %530 = inttoptr i64 %529 to i32*
  %531 = load i32, i32* %530, align 4
  %532 = zext i32 %531 to i64
  %533 = or i64 %488, %532
  %534 = add i64 %533, 3
  br label %535

535:                                              ; preds = %528, %526
  %536 = phi i64 [ %527, %526 ], [ %534, %528 ]
  %537 = inttoptr i64 %536 to i32*
  %538 = load i32, i32* %537, align 4
  %539 = icmp ult i32 %538, 2
  br i1 %539, label %540, label %542

540:                                              ; preds = %535
  %541 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %559

542:                                              ; preds = %535
  %543 = load atomic i32, i32* %490 monotonic, align 4
  %544 = zext i32 %543 to i64
  %545 = or i64 %488, %544
  %546 = add i64 %545, 10
  %547 = inttoptr i64 %546 to i8*
  %548 = load i8, i8* %547, align 1
  %549 = lshr i8 %548, 2
  %550 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %551 = zext i8 %549 to i64
  %552 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %550, i64 %551
  %553 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %552, align 8
  %554 = bitcast %"class.v8::internal::ElementsAccessor"* %553 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %555 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %554, align 8
  %556 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %555, i64 22
  %557 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %556, align 8
  %558 = call i64* %557(%"class.v8::internal::ElementsAccessor"* %553, i64* %0) #9
  br label %559

559:                                              ; preds = %540, %542
  %560 = phi i64* [ %541, %540 ], [ %558, %542 ]
  %561 = icmp eq i64* %560, null
  br i1 %561, label %577, label %562

562:                                              ; preds = %559
  %563 = load i64, i64* %207, align 8
  %564 = add i64 %563, 10
  %565 = inttoptr i64 %564 to i8*
  %566 = load i8, i8* %565, align 1
  %567 = lshr i8 %566, 2
  %568 = add nsw i8 %567, -15
  %569 = icmp ult i8 %568, 2
  %570 = select i1 %569, i8 64, i8 48
  %571 = load i64, i64* %481, align 8
  %572 = add i64 %571, 10
  %573 = inttoptr i64 %572 to i8*
  %574 = load i8, i8* %573, align 1
  %575 = and i8 %574, 3
  %576 = or i8 %570, %575
  store i8 %576, i8* %573, align 1
  br label %577

577:                                              ; preds = %479, %500, %509, %562, %559
  %578 = phi i64* [ %560, %562 ], [ null, %559 ], [ null, %509 ], [ null, %500 ], [ null, %479 ]
  call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %13, i64* %0, i64* %481, i32 0)
  %579 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 0
  %580 = load i64, i64* %0, align 8
  %581 = and i64 %580, -4294967296
  %582 = add i64 %580, -1
  %583 = inttoptr i64 %582 to i32*
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = zext i32 %584 to i64
  %586 = or i64 %581, %585
  %587 = add i64 %586, 7
  %588 = inttoptr i64 %587 to i16*
  %589 = load atomic i16, i16* %588 monotonic, align 2
  %590 = icmp eq i16 %589, 189
  %591 = add i64 %580, 3
  %592 = inttoptr i64 %591 to i32*
  br i1 %590, label %593, label %616

593:                                              ; preds = %577
  %594 = load atomic i32, i32* %592 acquire, align 4
  %595 = zext i32 %594 to i64
  %596 = or i64 %581, %595
  %597 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %598 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %597, null
  br i1 %598, label %601, label %599

599:                                              ; preds = %593
  %600 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %597, i64 %596) #9
  br label %614

601:                                              ; preds = %593
  %602 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %603 = load i64*, i64** %602, align 8
  %604 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %605 = load i64*, i64** %604, align 8
  %606 = icmp eq i64* %603, %605
  br i1 %606, label %607, label %609

607:                                              ; preds = %601
  %608 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %609

609:                                              ; preds = %607, %601
  %610 = phi i64* [ %608, %607 ], [ %603, %601 ]
  %611 = ptrtoint i64* %610 to i64
  %612 = add i64 %611, 8
  %613 = inttoptr i64 %612 to i64*
  store i64* %613, i64** %602, align 8
  store i64 %596, i64* %610, align 8
  br label %614

614:                                              ; preds = %599, %609
  %615 = phi i64* [ %600, %599 ], [ %610, %609 ]
  call void @_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_16GlobalDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %13, i64* %579, i64* %615, i32 4)
  br label %727

616:                                              ; preds = %577
  %617 = load i32, i32* %592, align 4
  %618 = zext i32 %617 to i64
  %619 = or i64 %581, %618
  %620 = and i64 %618, 1
  %621 = icmp eq i64 %620, 0
  br i1 %621, label %622, label %643

622:                                              ; preds = %616
  %623 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %624 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %623, null
  br i1 %624, label %631, label %625

625:                                              ; preds = %622
  %626 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %623, i64 0, i32 0, i32 1
  %627 = load i8, i8* %626, align 8, !range !5
  %628 = icmp eq i8 %627, 0
  br i1 %628, label %631, label %629

629:                                              ; preds = %625
  %630 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %623, i64 0, i32 1, i64 0
  br label %639

631:                                              ; preds = %625, %622
  %632 = and i64 %580, -262144
  %633 = or i64 %632, 16
  %634 = inttoptr i64 %633 to i64*
  %635 = load i64, i64* %634, align 16
  %636 = add i64 %635, -41416
  %637 = inttoptr i64 %636 to %"class.v8::internal::Isolate"*
  %638 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %637, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %639

639:                                              ; preds = %631, %629
  %640 = phi i64* [ %638, %631 ], [ %630, %629 ]
  %641 = getelementptr inbounds i64, i64* %640, i64 115
  %642 = load i64, i64* %641, align 8
  br label %643

643:                                              ; preds = %616, %639
  %644 = phi i64 [ %642, %639 ], [ %619, %616 ]
  %645 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %646 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %645, null
  br i1 %646, label %650, label %647

647:                                              ; preds = %643
  %648 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %645, i64 %644) #9
  %649 = load i64, i64* %648, align 8
  br label %663

650:                                              ; preds = %643
  %651 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %652 = load i64*, i64** %651, align 8
  %653 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %654 = load i64*, i64** %653, align 8
  %655 = icmp eq i64* %652, %654
  br i1 %655, label %656, label %658

656:                                              ; preds = %650
  %657 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %658

658:                                              ; preds = %656, %650
  %659 = phi i64* [ %657, %656 ], [ %652, %650 ]
  %660 = ptrtoint i64* %659 to i64
  %661 = add i64 %660, 8
  %662 = inttoptr i64 %661 to i64*
  store i64* %662, i64** %651, align 8
  store i64 %644, i64* %659, align 8
  br label %663

663:                                              ; preds = %647, %658
  %664 = phi i64 [ %649, %647 ], [ %644, %658 ]
  %665 = phi i64* [ %648, %647 ], [ %659, %658 ]
  %666 = add i64 %664, 15
  %667 = inttoptr i64 %666 to i32*
  %668 = load atomic i32, i32* %667 monotonic, align 4
  %669 = ashr i32 %668, 1
  %670 = sext i32 %669 to i64
  %671 = icmp eq i32 %669, 0
  br i1 %671, label %727, label %672

672:                                              ; preds = %663
  %673 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 4
  %674 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %675

675:                                              ; preds = %725, %672
  %676 = phi i64 [ %726, %725 ], [ %664, %672 ]
  %677 = phi i64 [ %723, %725 ], [ 0, %672 ]
  %678 = and i64 %676, -4294967296
  %679 = mul i64 %677, 51539607552
  %680 = add i64 %679, 85899345920
  %681 = ashr exact i64 %680, 32
  %682 = add i64 %676, 7
  %683 = add i64 %681, %682
  %684 = inttoptr i64 %683 to i32*
  %685 = load atomic i32, i32* %684 monotonic, align 4
  %686 = zext i32 %685 to i64
  %687 = or i64 %678, %686
  %688 = load i64, i64* %673, align 8
  %689 = trunc i64 %688 to i32
  %690 = icmp eq i32 %685, %689
  br i1 %690, label %722, label %691

691:                                              ; preds = %675
  %692 = load i64, i64* %674, align 8
  %693 = trunc i64 %692 to i32
  %694 = icmp eq i32 %685, %693
  br i1 %694, label %722, label %695

695:                                              ; preds = %691
  %696 = and i64 %686, 1
  %697 = icmp eq i64 %696, 0
  br i1 %697, label %714, label %698

698:                                              ; preds = %695
  %699 = add i64 %687, -1
  %700 = inttoptr i64 %699 to i32*
  %701 = load atomic i32, i32* %700 monotonic, align 4
  %702 = zext i32 %701 to i64
  %703 = or i64 %678, %702
  %704 = add i64 %703, 7
  %705 = inttoptr i64 %704 to i16*
  %706 = load atomic i16, i16* %705 monotonic, align 2
  %707 = icmp eq i16 %706, 64
  br i1 %707, label %708, label %714

708:                                              ; preds = %698
  %709 = add i64 %687, 7
  %710 = inttoptr i64 %709 to i32*
  %711 = load i32, i32* %710, align 4
  %712 = and i32 %711, 1
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %714, label %722

714:                                              ; preds = %708, %698, %695
  %715 = add i64 %679, 120259084288
  %716 = ashr exact i64 %715, 32
  %717 = add i64 %716, %682
  %718 = inttoptr i64 %717 to i32*
  %719 = load atomic i32, i32* %718 monotonic, align 4
  %720 = and i32 %719, -66
  %721 = or i32 %720, 64
  store atomic volatile i32 %721, i32* %718 monotonic, align 4
  br label %722

722:                                              ; preds = %714, %708, %691, %675
  %723 = add i64 %677, 1
  %724 = icmp eq i64 %723, %670
  br i1 %724, label %727, label %725

725:                                              ; preds = %722
  %726 = load i64, i64* %665, align 8
  br label %675

727:                                              ; preds = %722, %614, %663, %452, %366
  %728 = phi i64* [ %453, %452 ], [ %367, %366 ], [ %578, %663 ], [ %578, %614 ], [ %578, %722 ]
  %729 = load i64, i64* %0, align 8
  %730 = and i64 %729, -4294967296
  %731 = add i64 %729, -1
  %732 = inttoptr i64 %731 to i32*
  %733 = load atomic i32, i32* %732 monotonic, align 4
  %734 = zext i32 %733 to i64
  %735 = or i64 %730, %734
  %736 = add i64 %735, 10
  %737 = inttoptr i64 %736 to i8*
  %738 = load i8, i8* %737, align 1
  %739 = lshr i8 %738, 2
  %740 = add nsw i8 %739, -6
  %741 = icmp ult i8 %740, 6
  br i1 %741, label %906, label %742

742:                                              ; preds = %727
  %743 = load atomic i32, i32* %732 monotonic, align 4
  %744 = zext i32 %743 to i64
  %745 = or i64 %730, %744
  %746 = add i64 %745, 10
  %747 = inttoptr i64 %746 to i8*
  %748 = load i8, i8* %747, align 1
  %749 = lshr i8 %748, 2
  %750 = add nsw i8 %749, -17
  %751 = icmp ult i8 %750, 11
  br i1 %751, label %906, label %752

752:                                              ; preds = %742
  %753 = icmp eq i64* %728, null
  br i1 %753, label %787, label %754

754:                                              ; preds = %752
  %755 = load i64, i64* %728, align 8
  %756 = add i64 %729, 7
  %757 = inttoptr i64 %756 to i32*
  %758 = trunc i64 %755 to i32
  store atomic volatile i32 %758, i32* %757 monotonic, align 4
  %759 = and i64 %755, 1
  %760 = icmp eq i64 %759, 0
  br i1 %760, label %772, label %761

761:                                              ; preds = %754
  %762 = and i64 %729, -262144
  %763 = or i64 %762, 8
  %764 = inttoptr i64 %763 to i64*
  %765 = load i64, i64* %764, align 8
  %766 = and i64 %765, 262144
  %767 = icmp eq i64 %766, 0
  br i1 %767, label %772, label %768

768:                                              ; preds = %761
  %769 = or i64 %762, 16
  %770 = inttoptr i64 %769 to %"class.v8::internal::Heap"**
  %771 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %770, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %771, i64 %729, i64 %756, i64 %755) #9
  br label %772

772:                                              ; preds = %768, %761, %754
  %773 = and i64 %755, -262144
  %774 = or i64 %773, 8
  %775 = inttoptr i64 %774 to i64*
  %776 = load i64, i64* %775, align 8
  %777 = and i64 %776, 24
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %787, label %779

779:                                              ; preds = %772
  %780 = and i64 %729, -262144
  %781 = or i64 %780, 8
  %782 = inttoptr i64 %781 to i64*
  %783 = load i64, i64* %782, align 8
  %784 = and i64 %783, 24
  %785 = icmp eq i64 %784, 0
  br i1 %785, label %786, label %787

786:                                              ; preds = %779
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %729, i64 %756, i64 %755) #9
  br label %787

787:                                              ; preds = %786, %779, %772, %752
  %788 = load i64, i64* %0, align 8
  %789 = and i64 %788, -4294967296
  %790 = add i64 %788, 7
  %791 = inttoptr i64 %790 to i32*
  %792 = load i32, i32* %791, align 4
  %793 = zext i32 %792 to i64
  %794 = or i64 %789, %793
  %795 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  %796 = load i64, i64* %795, align 8
  %797 = trunc i64 %796 to i32
  %798 = icmp eq i32 %792, %797
  br i1 %798, label %906, label %799

799:                                              ; preds = %787
  %800 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %801 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %800, null
  br i1 %801, label %805, label %802

802:                                              ; preds = %799
  %803 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %800, i64 %794) #9
  %804 = load i64, i64* %803, align 8
  br label %818

805:                                              ; preds = %799
  %806 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %807 = load i64*, i64** %806, align 8
  %808 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %809 = load i64*, i64** %808, align 8
  %810 = icmp eq i64* %807, %809
  br i1 %810, label %811, label %813

811:                                              ; preds = %805
  %812 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %813

813:                                              ; preds = %811, %805
  %814 = phi i64* [ %812, %811 ], [ %807, %805 ]
  %815 = ptrtoint i64* %814 to i64
  %816 = add i64 %815, 8
  %817 = inttoptr i64 %816 to i64*
  store i64* %817, i64** %806, align 8
  store i64 %794, i64* %814, align 8
  br label %818

818:                                              ; preds = %802, %813
  %819 = phi i64 [ %804, %802 ], [ %794, %813 ]
  %820 = phi i64* [ %803, %802 ], [ %814, %813 ]
  %821 = load i64, i64* %0, align 8
  %822 = add i64 %819, 19
  %823 = inttoptr i64 %822 to i32*
  %824 = load atomic i32, i32* %823 monotonic, align 4
  %825 = and i32 %824, 3
  %826 = icmp eq i32 %825, 2
  br i1 %826, label %843, label %827

827:                                              ; preds = %818
  store atomic volatile i32 2, i32* %823 monotonic, align 4
  %828 = and i64 %821, -4294967296
  %829 = add i64 %821, -1
  %830 = inttoptr i64 %829 to i32*
  %831 = load atomic i32, i32* %830 monotonic, align 4
  %832 = zext i32 %831 to i64
  %833 = or i64 %828, %832
  %834 = add i64 %833, 11
  %835 = inttoptr i64 %834 to i32*
  %836 = load atomic i32, i32* %835 acquire, align 4
  %837 = and i32 %836, 1048576
  %838 = icmp eq i32 %837, 0
  br i1 %838, label %843, label %839

839:                                              ; preds = %827
  %840 = load atomic i32, i32* %830 monotonic, align 4
  %841 = zext i32 %840 to i64
  %842 = or i64 %828, %841
  call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %842) #9
  br label %843

843:                                              ; preds = %818, %827, %839
  %844 = load i64, i64* %820, align 8
  %845 = add i64 %844, 15
  %846 = inttoptr i64 %845 to i32*
  %847 = load atomic i32, i32* %846 monotonic, align 4
  %848 = ashr i32 %847, 1
  %849 = sext i32 %848 to i64
  %850 = icmp eq i32 %848, 0
  br i1 %850, label %906, label %851

851:                                              ; preds = %843
  %852 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 4
  %853 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %854

854:                                              ; preds = %904, %851
  %855 = phi i64 [ %905, %904 ], [ %844, %851 ]
  %856 = phi i64 [ %902, %904 ], [ 0, %851 ]
  %857 = and i64 %855, -4294967296
  %858 = mul i64 %856, 51539607552
  %859 = add i64 %858, 68719476736
  %860 = ashr exact i64 %859, 32
  %861 = add i64 %855, 7
  %862 = add i64 %860, %861
  %863 = inttoptr i64 %862 to i32*
  %864 = load atomic i32, i32* %863 monotonic, align 4
  %865 = zext i32 %864 to i64
  %866 = or i64 %857, %865
  %867 = load i64, i64* %852, align 8
  %868 = trunc i64 %867 to i32
  %869 = icmp eq i32 %864, %868
  br i1 %869, label %901, label %870

870:                                              ; preds = %854
  %871 = load i64, i64* %853, align 8
  %872 = trunc i64 %871 to i32
  %873 = icmp eq i32 %864, %872
  br i1 %873, label %901, label %874

874:                                              ; preds = %870
  %875 = and i64 %865, 1
  %876 = icmp eq i64 %875, 0
  br i1 %876, label %893, label %877

877:                                              ; preds = %874
  %878 = add i64 %866, -1
  %879 = inttoptr i64 %878 to i32*
  %880 = load atomic i32, i32* %879 monotonic, align 4
  %881 = zext i32 %880 to i64
  %882 = or i64 %857, %881
  %883 = add i64 %882, 7
  %884 = inttoptr i64 %883 to i16*
  %885 = load atomic i16, i16* %884 monotonic, align 2
  %886 = icmp eq i16 %885, 64
  br i1 %886, label %887, label %893

887:                                              ; preds = %877
  %888 = add i64 %866, 7
  %889 = inttoptr i64 %888 to i32*
  %890 = load i32, i32* %889, align 4
  %891 = and i32 %890, 1
  %892 = icmp eq i32 %891, 0
  br i1 %892, label %893, label %901

893:                                              ; preds = %887, %877, %874
  %894 = add i64 %858, 103079215104
  %895 = ashr exact i64 %894, 32
  %896 = add i64 %895, %861
  %897 = inttoptr i64 %896 to i32*
  %898 = load atomic i32, i32* %897 monotonic, align 4
  %899 = and i32 %898, -66
  %900 = or i32 %899, 64
  store atomic volatile i32 %900, i32* %897 monotonic, align 4
  br label %901

901:                                              ; preds = %893, %887, %870, %854
  %902 = add i64 %856, 1
  %903 = icmp eq i64 %902, %849
  br i1 %903, label %906, label %904

904:                                              ; preds = %901
  %905 = load i64, i64* %820, align 8
  br label %854

906:                                              ; preds = %901, %787, %843, %742, %727
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %208) #9
  br label %907

907:                                              ; preds = %94, %94, %151, %87, %85, %153, %906, %131, %89
  %908 = phi i16 [ 0, %89 ], [ 0, %85 ], [ %132, %131 ], [ 257, %906 ], [ 0, %153 ], [ 1, %87 ], [ 1, %151 ], [ 257, %94 ], [ 257, %94 ]
  ret i16 %908
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE5EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE(i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %4 = alloca %"class.v8::internal::Context", align 8
  %5 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %6 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %7 = load i64, i64* %0, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = and i64 %7, -4294967296
  %15 = add i64 %7, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 190
  br i1 %23, label %24, label %44

24:                                               ; preds = %2
  %25 = bitcast %"class.v8::internal::Context"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %30 = bitcast %"class.v8::internal::PrototypeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #9
  %31 = load i64, i64* %10, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %33, %"class.v8::internal::Isolate"** %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 1, i32 0, i32 0
  store i64 %7, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 3
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 4
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 6
  store i32 0, i32* %39, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %3) #9
  %40 = load i64, i64* %35, align 8
  %41 = trunc i64 %40 to i32
  %42 = trunc i64 %29 to i32
  %43 = icmp eq i32 %41, %42
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #9
  br i1 %43, label %94, label %53

44:                                               ; preds = %2
  %45 = load atomic i32, i32* %16 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %14, %46
  %48 = add i64 %47, 9
  %49 = inttoptr i64 %48 to i8*
  %50 = load atomic i8, i8* %49 monotonic, align 1
  %51 = and i8 %50, 32
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %94, label %53

53:                                               ; preds = %24, %44
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  %60 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %55) #9
  br label %74

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64* [ %68, %67 ], [ %63, %61 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = add i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  store i64* %73, i64** %62, align 8
  store i64 %55, i64* %70, align 8
  br label %74

74:                                               ; preds = %59, %69
  %75 = phi i64* [ %60, %59 ], [ %70, %69 ]
  %76 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %13, i64* %75, i64* %0) #9
  br i1 %76, label %94, label %77

77:                                               ; preds = %74
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %13, i64* %0) #9
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 5
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = trunc i64 %79 to i32
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  %86 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %13) #9
  br label %793

87:                                               ; preds = %77
  %88 = icmp eq i32 %1, 1
  br i1 %88, label %793, label %89

89:                                               ; preds = %87
  %90 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %91 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %90, i32 81, i64* null, i64* null, i64* null) #9
  %92 = load i64, i64* %91, align 8
  %93 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %92, %"class.v8::internal::MessageLocation"* null) #9
  br label %793

94:                                               ; preds = %24, %44, %74
  %95 = load i64, i64* %0, align 8
  %96 = and i64 %95, -4294967296
  %97 = add i64 %95, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %96, %100
  %102 = add i64 %101, 10
  %103 = inttoptr i64 %102 to i8*
  %104 = load i8, i8* %103, align 1
  %105 = and i8 %104, -8
  %106 = icmp eq i8 %105, 40
  br i1 %106, label %793, label %107

107:                                              ; preds = %94
  %108 = load atomic i32, i32* %98 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %96, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = icmp eq i16 %113, 190
  br i1 %114, label %115, label %133

115:                                              ; preds = %107
  %116 = bitcast %"class.v8::internal::PrototypeIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %116) #9
  %117 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 2, i32 0, i32 0
  store i64* %0, i64** %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 3
  store i32 0, i32* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 4
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 6
  store i32 0, i32* %122, align 8
  %123 = icmp eq i64* %0, null
  br i1 %123, label %124, label %125, !prof !6

124:                                              ; preds = %115
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #14
  unreachable

125:                                              ; preds = %115
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %5) #9
  %126 = load i8, i8* %121, align 4, !range !5
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %125
  %129 = load i64*, i64** %119, align 8
  %130 = call i16 @_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE5EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %129, i32 %1)
  br label %131

131:                                              ; preds = %125, %128
  %132 = phi i16 [ %130, %128 ], [ 257, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %116) #9
  br label %793

133:                                              ; preds = %107
  %134 = load atomic i32, i32* %98 monotonic, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %96, %135
  %137 = add i64 %136, 9
  %138 = inttoptr i64 %137 to i8*
  %139 = load atomic i8, i8* %138 monotonic, align 1
  %140 = and i8 %139, 4
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %151

142:                                              ; preds = %133
  %143 = load atomic i32, i32* %98 monotonic, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %96, %144
  %146 = add i64 %145, 9
  %147 = inttoptr i64 %146 to i8*
  %148 = load atomic i8, i8* %147 monotonic, align 1
  %149 = and i8 %148, 8
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %158, label %151

151:                                              ; preds = %142, %133
  %152 = icmp eq i32 %1, 1
  br i1 %152, label %793, label %153

153:                                              ; preds = %151
  %154 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %155 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %154, i32 32, i64* null, i64* null, i64* null) #9
  %156 = load i64, i64* %155, align 8
  %157 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %156, %"class.v8::internal::MessageLocation"* null) #9
  br label %793

158:                                              ; preds = %142
  %159 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %160 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %159, i64 4008
  %161 = bitcast %"class.v8::internal::Factory"* %160 to i64*
  %162 = load atomic i32, i32* %98 monotonic, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %96, %163
  %165 = add i64 %164, 10
  %166 = inttoptr i64 %165 to i8*
  %167 = load i8, i8* %166, align 1
  %168 = lshr i8 %167, 2
  %169 = icmp ult i8 %167, 24
  br i1 %169, label %170, label %179

170:                                              ; preds = %158
  %171 = lshr i8 51, %168
  %172 = and i8 %171, 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %170
  %175 = zext i8 %168 to i48
  %176 = shl nuw nsw i48 %175, 3
  %177 = lshr i48 3307158504194, %176
  %178 = trunc i48 %177 to i8
  call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext %178)
  br label %179

179:                                              ; preds = %170, %158, %174
  %180 = load i64, i64* %0, align 8
  %181 = and i64 %180, -4294967296
  %182 = add i64 %180, -1
  %183 = inttoptr i64 %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = zext i32 %184 to i64
  %186 = or i64 %181, %185
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %188 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %189 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %179
  %191 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %188, i64 %186) #9
  br label %205

192:                                              ; preds = %179
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %194 = load i64*, i64** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %196 = load i64*, i64** %195, align 8
  %197 = icmp eq i64* %194, %196
  br i1 %197, label %198, label %200

198:                                              ; preds = %192
  %199 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %200

200:                                              ; preds = %198, %192
  %201 = phi i64* [ %199, %198 ], [ %194, %192 ]
  %202 = ptrtoint i64* %201 to i64
  %203 = add i64 %202, 8
  %204 = inttoptr i64 %203 to i64*
  store i64* %204, i64** %193, align 8
  store i64 %186, i64* %201, align 8
  br label %205

205:                                              ; preds = %190, %200
  %206 = phi i64* [ %191, %190 ], [ %201, %200 ]
  %207 = call i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %13, i64* %206) #9
  %208 = bitcast %"class.v8::internal::TransitionsAccessor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %208) #9
  %209 = ptrtoint i64* %207 to i64
  %210 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %210, align 8
  %211 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 1
  %212 = bitcast %"class.v8::internal::Handle.1175"* %211 to i64*
  store i64 %209, i64* %212, align 8
  %213 = load i64, i64* %207, align 8
  %214 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i64 %213, i64* %214, align 8
  %215 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 5
  store i8 0, i8* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 4
  %218 = load i64, i64* %217, align 8
  %219 = add i64 %213, 35
  %220 = inttoptr i64 %219 to i32*
  %221 = load atomic i32, i32* %220 acquire, align 4
  %222 = and i64 %218, 4294967295
  %223 = icmp eq i64 %222, 0
  call void @llvm.assume(i1 %223) #9
  %224 = zext i32 %221 to i64
  %225 = or i64 %218, %224
  store i64 %225, i64* %215, align 8
  %226 = and i64 %224, 1
  %227 = icmp eq i64 %226, 0
  %228 = icmp eq i32 %221, 3
  %229 = or i1 %228, %227
  br i1 %229, label %230, label %232

230:                                              ; preds = %205
  %231 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  store i32 1, i32* %231, align 8
  br label %260

232:                                              ; preds = %205
  %233 = and i64 %224, 3
  switch i64 %233, label %259 [
    i64 3, label %234
    i64 1, label %236
  ]

234:                                              ; preds = %232
  %235 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  store i32 3, i32* %235, align 8
  br label %260

236:                                              ; preds = %232
  %237 = add i64 %225, -1
  %238 = inttoptr i64 %237 to i32*
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = zext i32 %239 to i64
  %241 = or i64 %218, %240
  %242 = add i64 %241, 7
  %243 = inttoptr i64 %242 to i16*
  %244 = load atomic i16, i16* %243 monotonic, align 2
  %245 = icmp eq i16 %244, 160
  br i1 %245, label %246, label %248

246:                                              ; preds = %236
  %247 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  store i32 4, i32* %247, align 8
  br label %260

248:                                              ; preds = %236
  %249 = load atomic i32, i32* %238 monotonic, align 4
  %250 = zext i32 %249 to i64
  %251 = or i64 %218, %250
  %252 = add i64 %251, 7
  %253 = inttoptr i64 %252 to i16*
  %254 = load atomic i16, i16* %253 monotonic, align 2
  %255 = icmp eq i16 %254, 110
  %256 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  br i1 %255, label %257, label %258

257:                                              ; preds = %248
  store i32 0, i32* %256, align 8
  br label %260

258:                                              ; preds = %248
  store i32 2, i32* %256, align 8
  br label %260

259:                                              ; preds = %232
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

260:                                              ; preds = %230, %234, %246, %257, %258
  %261 = load i64, i64* %161, align 8
  %262 = call i64 @_ZN2v88internal19TransitionsAccessor13SearchSpecialENS0_6SymbolE(%"class.v8::internal::TransitionsAccessor"* nonnull %6, i64 %261) #9
  %263 = trunc i64 %262 to i32
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %368, label %265

265:                                              ; preds = %260
  %266 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %267 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %266, null
  br i1 %267, label %271, label %268

268:                                              ; preds = %265
  %269 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %266, i64 %262) #9
  %270 = load i64, i64* %269, align 8
  br label %284

271:                                              ; preds = %265
  %272 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %275 = load i64*, i64** %274, align 8
  %276 = icmp eq i64* %273, %275
  br i1 %276, label %277, label %279

277:                                              ; preds = %271
  %278 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %279

279:                                              ; preds = %277, %271
  %280 = phi i64* [ %278, %277 ], [ %273, %271 ]
  %281 = ptrtoint i64* %280 to i64
  %282 = add i64 %281, 8
  %283 = inttoptr i64 %282 to i64*
  store i64* %283, i64** %272, align 8
  store i64 %262, i64* %280, align 8
  br label %284

284:                                              ; preds = %268, %279
  %285 = phi i64 [ %270, %268 ], [ %262, %279 ]
  %286 = phi i64* [ %269, %268 ], [ %280, %279 ]
  %287 = add i64 %285, 10
  %288 = inttoptr i64 %287 to i8*
  %289 = load i8, i8* %288, align 1
  %290 = lshr i8 %289, 2
  %291 = add nsw i8 %290, -6
  %292 = icmp ult i8 %291, 6
  br i1 %292, label %366, label %293

293:                                              ; preds = %284
  %294 = load i64, i64* %0, align 8
  %295 = and i64 %294, -4294967296
  %296 = add i64 %294, -1
  %297 = inttoptr i64 %296 to i32*
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = zext i32 %298 to i64
  %300 = or i64 %295, %299
  %301 = add i64 %300, 10
  %302 = inttoptr i64 %301 to i8*
  %303 = load i8, i8* %302, align 1
  %304 = lshr i8 %303, 2
  %305 = add nsw i8 %304, -17
  %306 = icmp ult i8 %305, 11
  br i1 %306, label %366, label %307

307:                                              ; preds = %293
  %308 = load atomic i32, i32* %297 monotonic, align 4
  %309 = zext i32 %308 to i64
  %310 = or i64 %295, %309
  %311 = add i64 %310, 10
  %312 = inttoptr i64 %311 to i8*
  %313 = load i8, i8* %312, align 1
  %314 = and i8 %313, -4
  %315 = icmp eq i8 %314, 48
  br i1 %315, label %366, label %316

316:                                              ; preds = %307
  %317 = load atomic i32, i32* %297 monotonic, align 4
  %318 = zext i32 %317 to i64
  %319 = or i64 %295, %318
  %320 = add i64 %319, 10
  %321 = inttoptr i64 %320 to i8*
  %322 = load i8, i8* %321, align 1
  %323 = and i8 %322, -4
  %324 = icmp eq i8 %323, 64
  br i1 %324, label %366, label %325

325:                                              ; preds = %316
  %326 = load atomic i32, i32* %297 monotonic, align 4
  %327 = zext i32 %326 to i64
  %328 = or i64 %295, %327
  %329 = add i64 %328, 7
  %330 = inttoptr i64 %329 to i16*
  %331 = load atomic i16, i16* %330 monotonic, align 2
  %332 = icmp eq i16 %331, 1085
  br i1 %332, label %333, label %335

333:                                              ; preds = %325
  %334 = add i64 %294, 11
  br label %342

335:                                              ; preds = %325
  %336 = add i64 %294, 7
  %337 = inttoptr i64 %336 to i32*
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i64
  %340 = or i64 %295, %339
  %341 = add i64 %340, 3
  br label %342

342:                                              ; preds = %335, %333
  %343 = phi i64 [ %334, %333 ], [ %341, %335 ]
  %344 = inttoptr i64 %343 to i32*
  %345 = load i32, i32* %344, align 4
  %346 = icmp ult i32 %345, 2
  br i1 %346, label %347, label %349

347:                                              ; preds = %342
  %348 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %366

349:                                              ; preds = %342
  %350 = load atomic i32, i32* %297 monotonic, align 4
  %351 = zext i32 %350 to i64
  %352 = or i64 %295, %351
  %353 = add i64 %352, 10
  %354 = inttoptr i64 %353 to i8*
  %355 = load i8, i8* %354, align 1
  %356 = lshr i8 %355, 2
  %357 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %358 = zext i8 %356 to i64
  %359 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %357, i64 %358
  %360 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %359, align 8
  %361 = bitcast %"class.v8::internal::ElementsAccessor"* %360 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %362 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %361, align 8
  %363 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %362, i64 22
  %364 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %363, align 8
  %365 = call i64* %364(%"class.v8::internal::ElementsAccessor"* %360, i64* %0) #9
  br label %366

366:                                              ; preds = %349, %347, %316, %307, %293, %284
  %367 = phi i64* [ null, %284 ], [ null, %316 ], [ %348, %347 ], [ %365, %349 ], [ null, %307 ], [ null, %293 ]
  call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %13, i64* %0, i64* %286, i32 0)
  br label %664

368:                                              ; preds = %260
  %369 = call zeroext i1 @_ZN2v88internal19TransitionsAccessor22CanHaveMoreTransitionsEv(%"class.v8::internal::TransitionsAccessor"* nonnull %6) #9
  br i1 %369, label %370, label %454

370:                                              ; preds = %368
  %371 = call i64* @_ZN2v88internal3Map24CopyForPreventExtensionsEPNS0_7IsolateENS0_6HandleIS1_EENS0_18PropertyAttributesENS4_INS0_6SymbolEEEPKcb(%"class.v8::internal::Isolate"* %13, i64* %207, i32 5, i64* %161, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0), i1 zeroext false) #9
  %372 = load i64, i64* %371, align 8
  %373 = add i64 %372, 10
  %374 = inttoptr i64 %373 to i8*
  %375 = load i8, i8* %374, align 1
  %376 = lshr i8 %375, 2
  %377 = add nsw i8 %376, -6
  %378 = icmp ult i8 %377, 6
  br i1 %378, label %452, label %379

379:                                              ; preds = %370
  %380 = load i64, i64* %0, align 8
  %381 = and i64 %380, -4294967296
  %382 = add i64 %380, -1
  %383 = inttoptr i64 %382 to i32*
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = zext i32 %384 to i64
  %386 = or i64 %381, %385
  %387 = add i64 %386, 10
  %388 = inttoptr i64 %387 to i8*
  %389 = load i8, i8* %388, align 1
  %390 = lshr i8 %389, 2
  %391 = add nsw i8 %390, -17
  %392 = icmp ult i8 %391, 11
  br i1 %392, label %452, label %393

393:                                              ; preds = %379
  %394 = load atomic i32, i32* %383 monotonic, align 4
  %395 = zext i32 %394 to i64
  %396 = or i64 %381, %395
  %397 = add i64 %396, 10
  %398 = inttoptr i64 %397 to i8*
  %399 = load i8, i8* %398, align 1
  %400 = and i8 %399, -4
  %401 = icmp eq i8 %400, 48
  br i1 %401, label %452, label %402

402:                                              ; preds = %393
  %403 = load atomic i32, i32* %383 monotonic, align 4
  %404 = zext i32 %403 to i64
  %405 = or i64 %381, %404
  %406 = add i64 %405, 10
  %407 = inttoptr i64 %406 to i8*
  %408 = load i8, i8* %407, align 1
  %409 = and i8 %408, -4
  %410 = icmp eq i8 %409, 64
  br i1 %410, label %452, label %411

411:                                              ; preds = %402
  %412 = load atomic i32, i32* %383 monotonic, align 4
  %413 = zext i32 %412 to i64
  %414 = or i64 %381, %413
  %415 = add i64 %414, 7
  %416 = inttoptr i64 %415 to i16*
  %417 = load atomic i16, i16* %416 monotonic, align 2
  %418 = icmp eq i16 %417, 1085
  br i1 %418, label %419, label %421

419:                                              ; preds = %411
  %420 = add i64 %380, 11
  br label %428

421:                                              ; preds = %411
  %422 = add i64 %380, 7
  %423 = inttoptr i64 %422 to i32*
  %424 = load i32, i32* %423, align 4
  %425 = zext i32 %424 to i64
  %426 = or i64 %381, %425
  %427 = add i64 %426, 3
  br label %428

428:                                              ; preds = %421, %419
  %429 = phi i64 [ %420, %419 ], [ %427, %421 ]
  %430 = inttoptr i64 %429 to i32*
  %431 = load i32, i32* %430, align 4
  %432 = icmp ult i32 %431, 2
  br i1 %432, label %433, label %435

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %452

435:                                              ; preds = %428
  %436 = load atomic i32, i32* %383 monotonic, align 4
  %437 = zext i32 %436 to i64
  %438 = or i64 %381, %437
  %439 = add i64 %438, 10
  %440 = inttoptr i64 %439 to i8*
  %441 = load i8, i8* %440, align 1
  %442 = lshr i8 %441, 2
  %443 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %444 = zext i8 %442 to i64
  %445 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %443, i64 %444
  %446 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %445, align 8
  %447 = bitcast %"class.v8::internal::ElementsAccessor"* %446 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %448 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %447, align 8
  %449 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %448, i64 22
  %450 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %449, align 8
  %451 = call i64* %450(%"class.v8::internal::ElementsAccessor"* %446, i64* %0) #9
  br label %452

452:                                              ; preds = %435, %433, %402, %393, %379, %370
  %453 = phi i64* [ null, %370 ], [ null, %402 ], [ %434, %433 ], [ %451, %435 ], [ null, %393 ], [ null, %379 ]
  call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %13, i64* %0, i64* %371, i32 0)
  br label %664

454:                                              ; preds = %368
  call void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"* %13, i64* %0, i32 0, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.97, i64 0, i64 0))
  %455 = load i64, i64* %0, align 8
  %456 = and i64 %455, -4294967296
  %457 = add i64 %455, -1
  %458 = inttoptr i64 %457 to i32*
  %459 = load atomic i32, i32* %458 monotonic, align 4
  %460 = zext i32 %459 to i64
  %461 = or i64 %456, %460
  %462 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %463 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %462, null
  br i1 %463, label %466, label %464

464:                                              ; preds = %454
  %465 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %462, i64 %461) #9
  br label %479

466:                                              ; preds = %454
  %467 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %468 = load i64*, i64** %467, align 8
  %469 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %470 = load i64*, i64** %469, align 8
  %471 = icmp eq i64* %468, %470
  br i1 %471, label %472, label %474

472:                                              ; preds = %466
  %473 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %474

474:                                              ; preds = %472, %466
  %475 = phi i64* [ %473, %472 ], [ %468, %466 ]
  %476 = ptrtoint i64* %475 to i64
  %477 = add i64 %476, 8
  %478 = inttoptr i64 %477 to i64*
  store i64* %478, i64** %467, align 8
  store i64 %461, i64* %475, align 8
  br label %479

479:                                              ; preds = %464, %474
  %480 = phi i64* [ %465, %464 ], [ %475, %474 ]
  %481 = call i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %13, i64* %480, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.98, i64 0, i64 0)) #9
  %482 = load i64, i64* %481, align 8
  %483 = add i64 %482, 11
  %484 = inttoptr i64 %483 to i32*
  %485 = load atomic i32, i32* %484 monotonic, align 4
  %486 = and i32 %485, -134217729
  store atomic volatile i32 %486, i32* %484 monotonic, align 4
  %487 = load i64, i64* %0, align 8
  %488 = and i64 %487, -4294967296
  %489 = add i64 %487, -1
  %490 = inttoptr i64 %489 to i32*
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = zext i32 %491 to i64
  %493 = or i64 %488, %492
  %494 = add i64 %493, 10
  %495 = inttoptr i64 %494 to i8*
  %496 = load i8, i8* %495, align 1
  %497 = lshr i8 %496, 2
  %498 = add nsw i8 %497, -17
  %499 = icmp ult i8 %498, 11
  br i1 %499, label %577, label %500

500:                                              ; preds = %479
  %501 = load atomic i32, i32* %490 monotonic, align 4
  %502 = zext i32 %501 to i64
  %503 = or i64 %488, %502
  %504 = add i64 %503, 10
  %505 = inttoptr i64 %504 to i8*
  %506 = load i8, i8* %505, align 1
  %507 = and i8 %506, -4
  %508 = icmp eq i8 %507, 48
  br i1 %508, label %577, label %509

509:                                              ; preds = %500
  %510 = load atomic i32, i32* %490 monotonic, align 4
  %511 = zext i32 %510 to i64
  %512 = or i64 %488, %511
  %513 = add i64 %512, 10
  %514 = inttoptr i64 %513 to i8*
  %515 = load i8, i8* %514, align 1
  %516 = and i8 %515, -4
  %517 = icmp eq i8 %516, 64
  br i1 %517, label %577, label %518

518:                                              ; preds = %509
  %519 = load atomic i32, i32* %490 monotonic, align 4
  %520 = zext i32 %519 to i64
  %521 = or i64 %488, %520
  %522 = add i64 %521, 7
  %523 = inttoptr i64 %522 to i16*
  %524 = load atomic i16, i16* %523 monotonic, align 2
  %525 = icmp eq i16 %524, 1085
  br i1 %525, label %526, label %528

526:                                              ; preds = %518
  %527 = add i64 %487, 11
  br label %535

528:                                              ; preds = %518
  %529 = add i64 %487, 7
  %530 = inttoptr i64 %529 to i32*
  %531 = load i32, i32* %530, align 4
  %532 = zext i32 %531 to i64
  %533 = or i64 %488, %532
  %534 = add i64 %533, 3
  br label %535

535:                                              ; preds = %528, %526
  %536 = phi i64 [ %527, %526 ], [ %534, %528 ]
  %537 = inttoptr i64 %536 to i32*
  %538 = load i32, i32* %537, align 4
  %539 = icmp ult i32 %538, 2
  br i1 %539, label %540, label %542

540:                                              ; preds = %535
  %541 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %559

542:                                              ; preds = %535
  %543 = load atomic i32, i32* %490 monotonic, align 4
  %544 = zext i32 %543 to i64
  %545 = or i64 %488, %544
  %546 = add i64 %545, 10
  %547 = inttoptr i64 %546 to i8*
  %548 = load i8, i8* %547, align 1
  %549 = lshr i8 %548, 2
  %550 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %551 = zext i8 %549 to i64
  %552 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %550, i64 %551
  %553 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %552, align 8
  %554 = bitcast %"class.v8::internal::ElementsAccessor"* %553 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %555 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %554, align 8
  %556 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %555, i64 22
  %557 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %556, align 8
  %558 = call i64* %557(%"class.v8::internal::ElementsAccessor"* %553, i64* %0) #9
  br label %559

559:                                              ; preds = %540, %542
  %560 = phi i64* [ %541, %540 ], [ %558, %542 ]
  %561 = icmp eq i64* %560, null
  br i1 %561, label %577, label %562

562:                                              ; preds = %559
  %563 = load i64, i64* %207, align 8
  %564 = add i64 %563, 10
  %565 = inttoptr i64 %564 to i8*
  %566 = load i8, i8* %565, align 1
  %567 = lshr i8 %566, 2
  %568 = add nsw i8 %567, -15
  %569 = icmp ult i8 %568, 2
  %570 = select i1 %569, i8 64, i8 48
  %571 = load i64, i64* %481, align 8
  %572 = add i64 %571, 10
  %573 = inttoptr i64 %572 to i8*
  %574 = load i8, i8* %573, align 1
  %575 = and i8 %574, 3
  %576 = or i8 %570, %575
  store i8 %576, i8* %573, align 1
  br label %577

577:                                              ; preds = %479, %500, %509, %562, %559
  %578 = phi i64* [ %560, %562 ], [ null, %559 ], [ null, %509 ], [ null, %500 ], [ null, %479 ]
  call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %13, i64* %0, i64* %481, i32 0)
  %579 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 0
  %580 = load i64, i64* %0, align 8
  %581 = and i64 %580, -4294967296
  %582 = add i64 %580, -1
  %583 = inttoptr i64 %582 to i32*
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = zext i32 %584 to i64
  %586 = or i64 %581, %585
  %587 = add i64 %586, 7
  %588 = inttoptr i64 %587 to i16*
  %589 = load atomic i16, i16* %588 monotonic, align 2
  %590 = icmp eq i16 %589, 189
  %591 = add i64 %580, 3
  %592 = inttoptr i64 %591 to i32*
  br i1 %590, label %593, label %616

593:                                              ; preds = %577
  %594 = load atomic i32, i32* %592 acquire, align 4
  %595 = zext i32 %594 to i64
  %596 = or i64 %581, %595
  %597 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %598 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %597, null
  br i1 %598, label %601, label %599

599:                                              ; preds = %593
  %600 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %597, i64 %596) #9
  br label %614

601:                                              ; preds = %593
  %602 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %603 = load i64*, i64** %602, align 8
  %604 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %605 = load i64*, i64** %604, align 8
  %606 = icmp eq i64* %603, %605
  br i1 %606, label %607, label %609

607:                                              ; preds = %601
  %608 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %609

609:                                              ; preds = %607, %601
  %610 = phi i64* [ %608, %607 ], [ %603, %601 ]
  %611 = ptrtoint i64* %610 to i64
  %612 = add i64 %611, 8
  %613 = inttoptr i64 %612 to i64*
  store i64* %613, i64** %602, align 8
  store i64 %596, i64* %610, align 8
  br label %614

614:                                              ; preds = %599, %609
  %615 = phi i64* [ %600, %599 ], [ %610, %609 ]
  call void @_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_16GlobalDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %13, i64* %579, i64* %615, i32 5)
  br label %664

616:                                              ; preds = %577
  %617 = load i32, i32* %592, align 4
  %618 = zext i32 %617 to i64
  %619 = or i64 %581, %618
  %620 = and i64 %618, 1
  %621 = icmp eq i64 %620, 0
  br i1 %621, label %622, label %643

622:                                              ; preds = %616
  %623 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %624 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %623, null
  br i1 %624, label %631, label %625

625:                                              ; preds = %622
  %626 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %623, i64 0, i32 0, i32 1
  %627 = load i8, i8* %626, align 8, !range !5
  %628 = icmp eq i8 %627, 0
  br i1 %628, label %631, label %629

629:                                              ; preds = %625
  %630 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %623, i64 0, i32 1, i64 0
  br label %639

631:                                              ; preds = %625, %622
  %632 = and i64 %580, -262144
  %633 = or i64 %632, 16
  %634 = inttoptr i64 %633 to i64*
  %635 = load i64, i64* %634, align 16
  %636 = add i64 %635, -41416
  %637 = inttoptr i64 %636 to %"class.v8::internal::Isolate"*
  %638 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %637, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %639

639:                                              ; preds = %631, %629
  %640 = phi i64* [ %638, %631 ], [ %630, %629 ]
  %641 = getelementptr inbounds i64, i64* %640, i64 115
  %642 = load i64, i64* %641, align 8
  br label %643

643:                                              ; preds = %616, %639
  %644 = phi i64 [ %642, %639 ], [ %619, %616 ]
  %645 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %646 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %645, null
  br i1 %646, label %649, label %647

647:                                              ; preds = %643
  %648 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %645, i64 %644) #9
  br label %662

649:                                              ; preds = %643
  %650 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %651 = load i64*, i64** %650, align 8
  %652 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %653 = load i64*, i64** %652, align 8
  %654 = icmp eq i64* %651, %653
  br i1 %654, label %655, label %657

655:                                              ; preds = %649
  %656 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %657

657:                                              ; preds = %655, %649
  %658 = phi i64* [ %656, %655 ], [ %651, %649 ]
  %659 = ptrtoint i64* %658 to i64
  %660 = add i64 %659, 8
  %661 = inttoptr i64 %660 to i64*
  store i64* %661, i64** %650, align 8
  store i64 %644, i64* %658, align 8
  br label %662

662:                                              ; preds = %647, %657
  %663 = phi i64* [ %648, %647 ], [ %658, %657 ]
  call void @_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_14NameDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %13, i64* %579, i64* %663, i32 5)
  br label %664

664:                                              ; preds = %614, %662, %452, %366
  %665 = phi i64* [ %453, %452 ], [ %367, %366 ], [ %578, %662 ], [ %578, %614 ]
  %666 = load i64, i64* %0, align 8
  %667 = and i64 %666, -4294967296
  %668 = add i64 %666, -1
  %669 = inttoptr i64 %668 to i32*
  %670 = load atomic i32, i32* %669 monotonic, align 4
  %671 = zext i32 %670 to i64
  %672 = or i64 %667, %671
  %673 = add i64 %672, 10
  %674 = inttoptr i64 %673 to i8*
  %675 = load i8, i8* %674, align 1
  %676 = lshr i8 %675, 2
  %677 = add nsw i8 %676, -6
  %678 = icmp ult i8 %677, 6
  br i1 %678, label %791, label %679

679:                                              ; preds = %664
  %680 = load atomic i32, i32* %669 monotonic, align 4
  %681 = zext i32 %680 to i64
  %682 = or i64 %667, %681
  %683 = add i64 %682, 10
  %684 = inttoptr i64 %683 to i8*
  %685 = load i8, i8* %684, align 1
  %686 = lshr i8 %685, 2
  %687 = add nsw i8 %686, -17
  %688 = icmp ult i8 %687, 11
  br i1 %688, label %689, label %698

689:                                              ; preds = %679
  %690 = add i64 %666, 23
  %691 = inttoptr i64 %690 to i64*
  %692 = load i64, i64* %691, align 1
  %693 = icmp eq i64 %692, 0
  br i1 %693, label %791, label %694

694:                                              ; preds = %689
  %695 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %159, i32 33, i64* null, i64* null, i64* null) #9
  %696 = load i64, i64* %695, align 8
  %697 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %696, %"class.v8::internal::MessageLocation"* null) #9
  br label %791

698:                                              ; preds = %679
  %699 = icmp eq i64* %665, null
  br i1 %699, label %733, label %700

700:                                              ; preds = %698
  %701 = load i64, i64* %665, align 8
  %702 = add i64 %666, 7
  %703 = inttoptr i64 %702 to i32*
  %704 = trunc i64 %701 to i32
  store atomic volatile i32 %704, i32* %703 monotonic, align 4
  %705 = and i64 %701, 1
  %706 = icmp eq i64 %705, 0
  br i1 %706, label %718, label %707

707:                                              ; preds = %700
  %708 = and i64 %666, -262144
  %709 = or i64 %708, 8
  %710 = inttoptr i64 %709 to i64*
  %711 = load i64, i64* %710, align 8
  %712 = and i64 %711, 262144
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %718, label %714

714:                                              ; preds = %707
  %715 = or i64 %708, 16
  %716 = inttoptr i64 %715 to %"class.v8::internal::Heap"**
  %717 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %716, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %717, i64 %666, i64 %702, i64 %701) #9
  br label %718

718:                                              ; preds = %714, %707, %700
  %719 = and i64 %701, -262144
  %720 = or i64 %719, 8
  %721 = inttoptr i64 %720 to i64*
  %722 = load i64, i64* %721, align 8
  %723 = and i64 %722, 24
  %724 = icmp eq i64 %723, 0
  br i1 %724, label %733, label %725

725:                                              ; preds = %718
  %726 = and i64 %666, -262144
  %727 = or i64 %726, 8
  %728 = inttoptr i64 %727 to i64*
  %729 = load i64, i64* %728, align 8
  %730 = and i64 %729, 24
  %731 = icmp eq i64 %730, 0
  br i1 %731, label %732, label %733

732:                                              ; preds = %725
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %666, i64 %702, i64 %701) #9
  br label %733

733:                                              ; preds = %732, %725, %718, %698
  %734 = load i64, i64* %0, align 8
  %735 = and i64 %734, -4294967296
  %736 = add i64 %734, 7
  %737 = inttoptr i64 %736 to i32*
  %738 = load i32, i32* %737, align 4
  %739 = zext i32 %738 to i64
  %740 = or i64 %735, %739
  %741 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 0
  %742 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  %743 = load i64, i64* %742, align 8
  %744 = trunc i64 %743 to i32
  %745 = icmp eq i32 %738, %744
  br i1 %745, label %791, label %746

746:                                              ; preds = %733
  %747 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %187, align 8
  %748 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %747, null
  br i1 %748, label %752, label %749

749:                                              ; preds = %746
  %750 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %747, i64 %740) #9
  %751 = load i64, i64* %750, align 8
  br label %765

752:                                              ; preds = %746
  %753 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %754 = load i64*, i64** %753, align 8
  %755 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %756 = load i64*, i64** %755, align 8
  %757 = icmp eq i64* %754, %756
  br i1 %757, label %758, label %760

758:                                              ; preds = %752
  %759 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %760

760:                                              ; preds = %758, %752
  %761 = phi i64* [ %759, %758 ], [ %754, %752 ]
  %762 = ptrtoint i64* %761 to i64
  %763 = add i64 %762, 8
  %764 = inttoptr i64 %763 to i64*
  store i64* %764, i64** %753, align 8
  store i64 %740, i64* %761, align 8
  br label %765

765:                                              ; preds = %749, %760
  %766 = phi i64 [ %751, %749 ], [ %740, %760 ]
  %767 = phi i64* [ %750, %749 ], [ %761, %760 ]
  %768 = load i64, i64* %0, align 8
  %769 = add i64 %766, 19
  %770 = inttoptr i64 %769 to i32*
  %771 = load atomic i32, i32* %770 monotonic, align 4
  %772 = and i32 %771, 3
  %773 = icmp eq i32 %772, 2
  br i1 %773, label %790, label %774

774:                                              ; preds = %765
  store atomic volatile i32 2, i32* %770 monotonic, align 4
  %775 = and i64 %768, -4294967296
  %776 = add i64 %768, -1
  %777 = inttoptr i64 %776 to i32*
  %778 = load atomic i32, i32* %777 monotonic, align 4
  %779 = zext i32 %778 to i64
  %780 = or i64 %775, %779
  %781 = add i64 %780, 11
  %782 = inttoptr i64 %781 to i32*
  %783 = load atomic i32, i32* %782 acquire, align 4
  %784 = and i32 %783, 1048576
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %790, label %786

786:                                              ; preds = %774
  %787 = load atomic i32, i32* %777 monotonic, align 4
  %788 = zext i32 %787 to i64
  %789 = or i64 %775, %788
  call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %789) #9
  br label %790

790:                                              ; preds = %765, %774, %786
  call void @_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_16NumberDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %13, i64* %741, i64* %767, i32 5)
  br label %791

791:                                              ; preds = %733, %790, %689, %664, %694
  %792 = phi i16 [ 0, %694 ], [ 257, %664 ], [ 257, %689 ], [ 257, %790 ], [ 257, %733 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %208) #9
  br label %793

793:                                              ; preds = %151, %94, %87, %85, %153, %791, %131, %89
  %794 = phi i16 [ 0, %89 ], [ 0, %85 ], [ %132, %131 ], [ %792, %791 ], [ 0, %153 ], [ 1, %87 ], [ 257, %94 ], [ 1, %151 ]
  ret i16 %794
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 188
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = tail call i16 @_ZN2v88internal7JSProxy17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %0, i32 %1) #9
  br label %18

16:                                               ; preds = %2
  %17 = tail call i16 @_ZN2v88internal8JSObject17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %0, i32 %1)
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i16 [ %15, %14 ], [ %17, %16 ]
  ret i16 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver18TestIntegrityLevelENS0_6HandleIS1_EENS0_18PropertyAttributesE(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp ult i16 %12, 1042
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = tail call i16 @_ZN2v88internal8JSObject18TestIntegrityLevelENS0_6HandleIS1_EENS0_18PropertyAttributesE(i64* %0, i32 %1)
  br label %18

16:                                               ; preds = %2
  %17 = tail call fastcc i16 @_ZN2v88internal12_GLOBAL__N_125GenericTestIntegrityLevelENS0_6HandleINS0_10JSReceiverEEENS0_18PropertyAttributesE(i64* %0, i32 %1)
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i16 [ %15, %14 ], [ %17, %16 ]
  ret i16 %19
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i16 @_ZN2v88internal12_GLOBAL__N_125GenericTestIntegrityLevelENS0_6HandleINS0_10JSReceiverEEENS0_18PropertyAttributesE(i64*, i32) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 188
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = tail call i16 @_ZN2v88internal7JSProxy12IsExtensibleENS0_6HandleIS1_EE(i64* %0) #9
  br label %24

19:                                               ; preds = %2
  %20 = tail call zeroext i1 @_ZN2v88internal8JSObject12IsExtensibleENS0_6HandleIS1_EE(i64* %0) #9
  %21 = zext i1 %20 to i16
  %22 = shl nuw nsw i16 %21, 8
  %23 = or i16 %22, 1
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi i16 [ %18, %17 ], [ %23, %19 ]
  %26 = trunc i16 %25 to i8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %169, label %28

28:                                               ; preds = %24
  %29 = icmp ugt i16 %25, 255
  br i1 %29, label %169, label %30

30:                                               ; preds = %28
  %31 = load i64, i64* %0, align 8
  %32 = and i64 %31, -262144
  %33 = or i64 %32, 16
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = add i64 %35, -41416
  %37 = inttoptr i64 %36 to %"class.v8::internal::Isolate"*
  %38 = tail call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* %0, i32 0, i32 0, i32 0, i1 zeroext false, i1 zeroext false) #9
  %39 = icmp eq i64* %38, null
  br i1 %39, label %169, label %40

40:                                               ; preds = %30
  %41 = load i64, i64* %38, align 8
  %42 = add i64 %41, 3
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 1
  br i1 %45, label %46, label %169

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 31, i32 4
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 31, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 31, i32 1
  %50 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %5, i64 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %5, i64 0, i32 1, i32 0, i32 0
  %52 = bitcast i64** %51 to i8*
  %53 = bitcast %"class.v8::internal::LookupIterator::Key"* %3 to i8*
  %54 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %3, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %3, i64 0, i32 1
  %57 = icmp eq i32 %1, 5
  br i1 %57, label %58, label %117

58:                                               ; preds = %46, %108
  %59 = phi i64 [ %109, %108 ], [ 0, %46 ]
  %60 = phi i64 [ %110, %108 ], [ %41, %46 ]
  %61 = and i64 %60, -4294967296
  %62 = trunc i64 %59 to i32
  %63 = shl i32 %62, 2
  %64 = sext i32 %63 to i64
  %65 = add i64 %60, 7
  %66 = add i64 %65, %64
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %61, %69
  %71 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %47, align 8
  %72 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %58
  %74 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %71, i64 %70) #9
  br label %86

75:                                               ; preds = %58
  %76 = load i64*, i64** %48, align 8
  %77 = load i64*, i64** %49, align 8
  %78 = icmp eq i64* %76, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %37) #9
  br label %81

81:                                               ; preds = %79, %75
  %82 = phi i64* [ %80, %79 ], [ %76, %75 ]
  %83 = ptrtoint i64* %82 to i64
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to i64*
  store i64* %85, i64** %48, align 8
  store i64 %70, i64* %82, align 8
  br label %86

86:                                               ; preds = %81, %73
  %87 = phi i64* [ %74, %73 ], [ %82, %81 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #9
  store i8 0, i8* %50, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %3, %"class.v8::internal::Isolate"* %37, i64* %87) #9
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %54) #9
  %88 = load i64*, i64** %55, align 8
  %89 = load i64, i64* %56, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::Isolate"* %37, i64* %0, i64* %88, i64 %89, i64* %0, i32 1) #9
  %90 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::PropertyDescriptor"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %54) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #9
  %91 = trunc i16 %90 to i8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %86
  %94 = icmp ugt i16 %90, 255
  br i1 %94, label %95, label %108

95:                                               ; preds = %93
  %96 = load i8, i8* %50, align 8
  %97 = and i8 %96, 4
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %167

99:                                               ; preds = %95
  %100 = load i64*, i64** %51, align 8
  %101 = icmp ne i64* %100, null
  %102 = and i8 %96, 32
  %103 = icmp ne i8 %102, 0
  %104 = or i1 %103, %101
  %105 = and i8 %96, 16
  %106 = icmp ne i8 %105, 0
  %107 = and i1 %106, %104
  br i1 %107, label %167, label %108

108:                                              ; preds = %99, %93
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #9
  %109 = add nuw nsw i64 %59, 1
  %110 = load i64, i64* %38, align 8
  %111 = add i64 %110, 3
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = ashr i32 %113, 1
  %115 = sext i32 %114 to i64
  %116 = icmp slt i64 %109, %115
  br i1 %116, label %58, label %169

117:                                              ; preds = %46, %158
  %118 = phi i64 [ %159, %158 ], [ 0, %46 ]
  %119 = phi i64 [ %160, %158 ], [ %41, %46 ]
  %120 = and i64 %119, -4294967296
  %121 = trunc i64 %118 to i32
  %122 = shl i32 %121, 2
  %123 = sext i32 %122 to i64
  %124 = add i64 %119, 7
  %125 = add i64 %124, %123
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %120, %128
  %130 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %47, align 8
  %131 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %117
  %133 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %130, i64 %129) #9
  br label %145

134:                                              ; preds = %117
  %135 = load i64*, i64** %48, align 8
  %136 = load i64*, i64** %49, align 8
  %137 = icmp eq i64* %135, %136
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  %139 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %37) #9
  br label %140

140:                                              ; preds = %138, %134
  %141 = phi i64* [ %139, %138 ], [ %135, %134 ]
  %142 = ptrtoint i64* %141 to i64
  %143 = add i64 %142, 8
  %144 = inttoptr i64 %143 to i64*
  store i64* %144, i64** %48, align 8
  store i64 %129, i64* %141, align 8
  br label %145

145:                                              ; preds = %132, %140
  %146 = phi i64* [ %133, %132 ], [ %141, %140 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #9
  store i8 0, i8* %50, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %3, %"class.v8::internal::Isolate"* %37, i64* %146) #9
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %54) #9
  %147 = load i64*, i64** %55, align 8
  %148 = load i64, i64* %56, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::Isolate"* %37, i64* %0, i64* %147, i64 %148, i64* %0, i32 1) #9
  %149 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::PropertyDescriptor"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %54) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #9
  %150 = trunc i16 %149 to i8
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %167, label %152

152:                                              ; preds = %145
  %153 = icmp ugt i16 %149, 255
  br i1 %153, label %154, label %158

154:                                              ; preds = %152
  %155 = load i8, i8* %50, align 8
  %156 = and i8 %155, 4
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %167

158:                                              ; preds = %154, %152
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #9
  %159 = add nuw nsw i64 %118, 1
  %160 = load i64, i64* %38, align 8
  %161 = add i64 %160, 3
  %162 = inttoptr i64 %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = ashr i32 %163, 1
  %165 = sext i32 %164 to i64
  %166 = icmp slt i64 %159, %165
  br i1 %166, label %117, label %169

167:                                              ; preds = %154, %145, %86, %95, %99
  %168 = phi i16 [ 1, %99 ], [ 1, %95 ], [ 0, %86 ], [ 1, %154 ], [ 0, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #9
  br label %169

169:                                              ; preds = %158, %108, %40, %30, %167, %28, %24
  %170 = phi i16 [ 0, %24 ], [ 1, %28 ], [ %168, %167 ], [ 0, %30 ], [ 257, %40 ], [ 257, %108 ], [ 257, %158 ]
  ret i16 %170
}

declare i16 @_ZN2v88internal7JSProxy17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %4 = alloca %"class.v8::internal::Context", align 8
  %5 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = and i64 %6, -4294967296
  %14 = add i64 %6, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 10
  %20 = inttoptr i64 %19 to i8*
  %21 = load i8, i8* %20, align 1
  %22 = lshr i8 %21, 2
  %23 = add nsw i8 %22, -13
  %24 = icmp ult i8 %23, 2
  br i1 %24, label %27, label %25

25:                                               ; preds = %2
  %26 = tail call i16 @_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE0EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %0, i32 %1)
  br label %244

27:                                               ; preds = %2
  %28 = load atomic i32, i32* %15 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %13, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 190
  br i1 %34, label %35, label %55

35:                                               ; preds = %27
  %36 = bitcast %"class.v8::internal::Context"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %38, i64* %39, align 8
  %40 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  %41 = bitcast %"class.v8::internal::PrototypeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #9
  %42 = load i64, i64* %9, align 16
  %43 = add i64 %42, -41416
  %44 = inttoptr i64 %43 to %"class.v8::internal::Isolate"*
  %45 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %44, %"class.v8::internal::Isolate"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 1, i32 0, i32 0
  store i64 %6, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 3
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 4
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 6
  store i32 0, i32* %50, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %3) #9
  %51 = load i64, i64* %46, align 8
  %52 = trunc i64 %51 to i32
  %53 = trunc i64 %40 to i32
  %54 = icmp eq i32 %52, %53
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #9
  br i1 %54, label %105, label %64

55:                                               ; preds = %27
  %56 = load atomic i32, i32* %15 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %13, %57
  %59 = add i64 %58, 9
  %60 = inttoptr i64 %59 to i8*
  %61 = load atomic i8, i8* %60 monotonic, align 1
  %62 = and i8 %61, 32
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %105, label %64

64:                                               ; preds = %35, %55
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %64
  %71 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %66) #9
  br label %85

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #9
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %66, i64* %81, align 8
  br label %85

85:                                               ; preds = %70, %80
  %86 = phi i64* [ %71, %70 ], [ %81, %80 ]
  %87 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %12, i64* %86, i64* %0) #9
  br i1 %87, label %105, label %88

88:                                               ; preds = %85
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %12, i64* %0) #9
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 5
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = trunc i64 %92 to i32
  %94 = trunc i64 %90 to i32
  %95 = icmp eq i32 %93, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %88
  %97 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %12) #9
  br label %244

98:                                               ; preds = %88
  %99 = icmp eq i32 %1, 1
  br i1 %99, label %244, label %100

100:                                              ; preds = %98
  %101 = inttoptr i64 %11 to %"class.v8::internal::Factory"*
  %102 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %101, i32 81, i64* null, i64* null, i64* null) #9
  %103 = load i64, i64* %102, align 8
  %104 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %12, i64 %103, %"class.v8::internal::MessageLocation"* null) #9
  br label %244

105:                                              ; preds = %35, %55, %85
  %106 = load i64, i64* %0, align 8
  %107 = and i64 %106, -4294967296
  %108 = add i64 %106, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = add i64 %112, 11
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 134217728
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %244, label %118

118:                                              ; preds = %105
  %119 = load atomic i32, i32* %109 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %107, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = icmp eq i16 %124, 190
  br i1 %125, label %126, label %144

126:                                              ; preds = %118
  %127 = bitcast %"class.v8::internal::PrototypeIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %127) #9
  %128 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %12, %"class.v8::internal::Isolate"** %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 2, i32 0, i32 0
  store i64* %0, i64** %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 3
  store i32 0, i32* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 4
  store i8 0, i8* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 6
  store i32 0, i32* %133, align 8
  %134 = icmp eq i64* %0, null
  br i1 %134, label %135, label %136, !prof !6

135:                                              ; preds = %126
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #14
  unreachable

136:                                              ; preds = %126
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %5) #9
  %137 = load i8, i8* %132, align 4, !range !5
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %136
  %140 = load i64*, i64** %130, align 8
  %141 = call i16 @_ZN2v88internal8JSObject17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %140, i32 %1)
  br label %142

142:                                              ; preds = %136, %139
  %143 = phi i16 [ %141, %139 ], [ 257, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %127) #9
  br label %244

144:                                              ; preds = %118
  %145 = load atomic i32, i32* %109 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %107, %146
  %148 = add i64 %147, 9
  %149 = inttoptr i64 %148 to i8*
  %150 = load atomic i8, i8* %149 monotonic, align 1
  %151 = and i8 %150, 4
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %162

153:                                              ; preds = %144
  %154 = load atomic i32, i32* %109 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %107, %155
  %157 = add i64 %156, 9
  %158 = inttoptr i64 %157 to i8*
  %159 = load atomic i8, i8* %158 monotonic, align 1
  %160 = and i8 %159, 8
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %169, label %162

162:                                              ; preds = %153, %144
  %163 = icmp eq i32 %1, 1
  br i1 %163, label %244, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %11 to %"class.v8::internal::Factory"*
  %166 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %165, i32 31, i64* null, i64* null, i64* null) #9
  %167 = load i64, i64* %166, align 8
  %168 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %12, i64 %167, %"class.v8::internal::MessageLocation"* null) #9
  br label %244

169:                                              ; preds = %153
  %170 = load atomic i32, i32* %109 monotonic, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %107, %171
  %173 = add i64 %172, 10
  %174 = inttoptr i64 %173 to i8*
  %175 = load i8, i8* %174, align 1
  %176 = lshr i8 %175, 2
  %177 = add nsw i8 %176, -17
  %178 = icmp ult i8 %177, 11
  br i1 %178, label %210, label %179

179:                                              ; preds = %169
  %180 = call i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64* %0)
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 111
  %183 = load i64, i64* %182, align 8
  %184 = trunc i64 %181 to i32
  %185 = trunc i64 %183 to i32
  %186 = icmp eq i32 %184, %185
  br i1 %186, label %210, label %187

187:                                              ; preds = %179
  %188 = load i64, i64* %0, align 8
  %189 = add i64 %181, 19
  %190 = inttoptr i64 %189 to i32*
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 3
  %193 = icmp eq i32 %192, 2
  br i1 %193, label %210, label %194

194:                                              ; preds = %187
  store atomic volatile i32 2, i32* %190 monotonic, align 4
  %195 = and i64 %188, -4294967296
  %196 = add i64 %188, -1
  %197 = inttoptr i64 %196 to i32*
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = zext i32 %198 to i64
  %200 = or i64 %195, %199
  %201 = add i64 %200, 11
  %202 = inttoptr i64 %201 to i32*
  %203 = load atomic i32, i32* %202 acquire, align 4
  %204 = and i32 %203, 1048576
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %210, label %206

206:                                              ; preds = %194
  %207 = load atomic i32, i32* %197 monotonic, align 4
  %208 = zext i32 %207 to i64
  %209 = or i64 %195, %208
  call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %209) #9
  br label %210

210:                                              ; preds = %179, %187, %194, %206, %169
  %211 = load i64, i64* %0, align 8
  %212 = and i64 %211, -4294967296
  %213 = add i64 %211, -1
  %214 = inttoptr i64 %213 to i32*
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = zext i32 %215 to i64
  %217 = or i64 %212, %216
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %219 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %218, align 8
  %220 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %210
  %222 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %219, i64 %217) #9
  br label %236

223:                                              ; preds = %210
  %224 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %225 = load i64*, i64** %224, align 8
  %226 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %227 = load i64*, i64** %226, align 8
  %228 = icmp eq i64* %225, %227
  br i1 %228, label %229, label %231

229:                                              ; preds = %223
  %230 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #9
  br label %231

231:                                              ; preds = %229, %223
  %232 = phi i64* [ %230, %229 ], [ %225, %223 ]
  %233 = ptrtoint i64* %232 to i64
  %234 = add i64 %233, 8
  %235 = inttoptr i64 %234 to i64*
  store i64* %235, i64** %224, align 8
  store i64 %217, i64* %232, align 8
  br label %236

236:                                              ; preds = %221, %231
  %237 = phi i64* [ %222, %221 ], [ %232, %231 ]
  %238 = call i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %12, i64* %237, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i64 0, i64 0)) #9
  %239 = load i64, i64* %238, align 8
  %240 = add i64 %239, 11
  %241 = inttoptr i64 %240 to i32*
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, -134217729
  store atomic volatile i32 %243, i32* %241 monotonic, align 4
  call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %12, i64* %0, i64* %238, i32 0)
  br label %244

244:                                              ; preds = %105, %162, %98, %96, %236, %164, %142, %100, %25
  %245 = phi i16 [ %26, %25 ], [ 0, %100 ], [ 0, %96 ], [ %143, %142 ], [ 0, %164 ], [ 257, %236 ], [ 1, %98 ], [ 257, %105 ], [ 1, %162 ]
  ret i16 %245
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = and i64 %2, -4294967296
  %4 = add i64 %2, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = icmp eq i16 %11, 188
  br i1 %12, label %13, label %15

13:                                               ; preds = %1
  %14 = tail call i16 @_ZN2v88internal7JSProxy12IsExtensibleENS0_6HandleIS1_EE(i64* %0) #9
  br label %20

15:                                               ; preds = %1
  %16 = tail call zeroext i1 @_ZN2v88internal8JSObject12IsExtensibleENS0_6HandleIS1_EE(i64* %0)
  %17 = zext i1 %16 to i16
  %18 = shl nuw nsw i16 %17, 8
  %19 = or i16 %18, 1
  br label %20

20:                                               ; preds = %15, %13
  %21 = phi i16 [ %14, %13 ], [ %19, %15 ]
  ret i16 %21
}

declare i16 @_ZN2v88internal7JSProxy12IsExtensibleENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle.1138", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %12 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 4272
  %13 = bitcast %"class.v8::internal::Factory"* %12 to i64*
  %14 = tail call i64* @_ZN2v88internal6Object9GetMethodENS0_6HandleINS0_10JSReceiverEEENS2_INS0_4NameEEE(i64* %0, i64* %13) #9
  %15 = icmp eq i64* %14, null
  br i1 %15, label %56, label %16

16:                                               ; preds = %2
  %17 = load i64, i64* %14, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %17 to i32
  %21 = trunc i64 %19 to i32
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %51, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.v8::internal::Handle.1138"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call i64* @_ZN2v88internal7Factory21ToPrimitiveHintStringENS0_15ToPrimitiveHintE(%"class.v8::internal::Factory"* %11, i32 %1) #9
  %26 = getelementptr inbounds %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1138"* %3, i64 0, i32 0, i32 0
  store i64* %25, i64** %26, align 8
  %27 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %10, i64* nonnull %14, i64* %0, i32 1, %"class.v8::internal::Handle.1138"* nonnull %3) #9
  %28 = icmp eq i64* %27, null
  br i1 %28, label %49, label %29

29:                                               ; preds = %23
  %30 = ptrtoint i64* %27 to i64
  %31 = load i64, i64* %27, align 8
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %49, label %34

34:                                               ; preds = %29
  %35 = and i64 %31, -4294967296
  %36 = add i64 %31, -1
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %35, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = icmp ult i16 %43, 68
  br i1 %44, label %49, label %45

45:                                               ; preds = %34
  %46 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %11, i32 30, i64* null, i64* null, i64* null) #9
  %47 = load i64, i64* %46, align 8
  %48 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %10, i64 %47, %"class.v8::internal::MessageLocation"* null) #9
  br label %49

49:                                               ; preds = %29, %34, %23, %45
  %50 = phi i64 [ 0, %45 ], [ 0, %23 ], [ %30, %34 ], [ %30, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %56

51:                                               ; preds = %16
  %52 = icmp eq i32 %1, 2
  %53 = zext i1 %52 to i32
  %54 = tail call i64* @_ZN2v88internal10JSReceiver19OrdinaryToPrimitiveENS0_6HandleIS1_EENS0_23OrdinaryToPrimitiveHintE(i64* %0, i32 %53)
  %55 = ptrtoint i64* %54 to i64
  br label %56

56:                                               ; preds = %2, %49, %51
  %57 = phi i64 [ %55, %51 ], [ %50, %49 ], [ 0, %2 ]
  %58 = inttoptr i64 %57 to i64*
  ret i64* %58
}

declare i64* @_ZN2v88internal6Object9GetMethodENS0_6HandleINS0_10JSReceiverEEENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory21ToPrimitiveHintStringENS0_15ToPrimitiveHintE(%"class.v8::internal::Factory"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1138"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver19OrdinaryToPrimitiveENS0_6HandleIS1_EENS0_23OrdinaryToPrimitiveHintE(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  switch i32 %1, label %23 [
    i32 0, label %11
    i32 1, label %17
  ]

11:                                               ; preds = %2
  %12 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %13 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %12, i64 3856
  %14 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %12, i64 3752
  %15 = bitcast %"class.v8::internal::Factory"* %13 to i64*
  %16 = bitcast %"class.v8::internal::Factory"* %14 to i64*
  br label %23

17:                                               ; preds = %2
  %18 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %19 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %18, i64 3752
  %20 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %18, i64 3856
  %21 = bitcast %"class.v8::internal::Factory"* %19 to i64*
  %22 = bitcast %"class.v8::internal::Factory"* %20 to i64*
  br label %23

23:                                               ; preds = %2, %17, %11
  %24 = phi i64* [ null, %2 ], [ %22, %17 ], [ %16, %11 ]
  %25 = phi i64* [ null, %2 ], [ %21, %17 ], [ %15, %11 ]
  %26 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  %27 = ptrtoint i64* %0 to i64
  %28 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 4
  %30 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  %31 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  %33 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %40 = bitcast %"class.v8::internal::Handle.1138"* %39 to i64*
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %42 = bitcast i64* %41 to i8*
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 5, i32 0, i32 0, i32 0
  %44 = bitcast %"class.v8::internal::Isolate"** %34 to %"class.v8::internal::Factory"**
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %26) #9
  %45 = icmp eq i64* %25, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %23
  %47 = load i64, i64* null, align 536870912
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  br label %70

50:                                               ; preds = %23
  %51 = load i64, i64* %25, align 8
  %52 = load i64, i64* %29, align 8
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i64 %52, 4294967295
  %57 = icmp eq i64 %56, 0
  call void @llvm.assume(i1 %57) #9
  %58 = zext i32 %55 to i64
  %59 = or i64 %52, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = icmp eq i16 %62, 64
  br i1 %63, label %64, label %70

64:                                               ; preds = %50
  %65 = add i64 %51, 7
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %46, %64, %50
  %71 = phi i32* [ %49, %46 ], [ %54, %64 ], [ %54, %50 ]
  %72 = phi i64 [ %47, %46 ], [ %51, %64 ], [ %51, %50 ]
  br label %73

73:                                               ; preds = %70, %64
  %74 = phi i32* [ %71, %70 ], [ %54, %64 ]
  %75 = phi i64 [ %72, %70 ], [ %51, %64 ]
  %76 = phi i32 [ 3, %70 ], [ 0, %64 ]
  store i32 %76, i32* %28, align 8
  store i32 4, i32* %30, align 4
  store i8 0, i8* %31, align 8
  store i32 0, i32* %32, align 4
  store i32 0, i32* %33, align 8
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %34, align 8
  store i64* %25, i64** %35, align 8
  store i64* null, i64** %36, align 8
  store i64* %0, i64** %37, align 8
  store i64* null, i64** %38, align 8
  store i64 %27, i64* %40, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 -1, i64 16, i1 false) #9
  %77 = and i64 %75, -4294967296
  %78 = load atomic i32, i32* %74 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %77, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = and i16 %83, -32
  %85 = icmp eq i16 %84, 32
  br i1 %85, label %86, label %89

86:                                               ; preds = %73
  %87 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %43, align 8
  %88 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %87, %"class.v8::internal::Isolate"* %10, i64* %25) #9
  br label %89

89:                                               ; preds = %73, %86
  %90 = phi i64* [ %88, %86 ], [ %25, %73 ]
  store i64* %90, i64** %35, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #9
  %91 = load i32, i32* %30, align 4
  %92 = icmp eq i32 %91, 4
  br i1 %92, label %93, label %97

93:                                               ; preds = %89
  %94 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %44, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %94, i64 160
  %96 = bitcast %"class.v8::internal::Factory"* %95 to i64*
  br label %99

97:                                               ; preds = %89
  %98 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #9
  br label %99

99:                                               ; preds = %93, %97
  %100 = phi i64* [ %98, %97 ], [ %96, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %26) #9
  %101 = icmp eq i64* %100, null
  br i1 %101, label %148, label %102

102:                                              ; preds = %99
  %103 = load i64, i64* %100, align 8
  %104 = and i64 %103, 1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %136, label %106

106:                                              ; preds = %102
  %107 = and i64 %103, -4294967296
  %108 = add i64 %103, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = add i64 %112, 9
  %114 = inttoptr i64 %113 to i8*
  %115 = load atomic i8, i8* %114 monotonic, align 1
  %116 = and i8 %115, 2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %136, label %118

118:                                              ; preds = %106
  %119 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %10, i64* nonnull %100, i64* %0, i32 0, %"class.v8::internal::Handle.1138"* null) #9
  %120 = icmp eq i64* %119, null
  br i1 %120, label %148, label %121

121:                                              ; preds = %118
  %122 = load i64, i64* %119, align 8
  %123 = and i64 %122, 1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %142, label %125

125:                                              ; preds = %121
  %126 = and i64 %122, -4294967296
  %127 = add i64 %122, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %126, %130
  %132 = add i64 %131, 7
  %133 = inttoptr i64 %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = icmp ult i16 %134, 68
  br i1 %135, label %145, label %136

136:                                              ; preds = %106, %102, %125
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %26) #9
  %137 = icmp eq i64* %24, null
  br i1 %137, label %138, label %151

138:                                              ; preds = %136
  %139 = load i64, i64* null, align 536870912
  %140 = add i64 %139, -1
  %141 = inttoptr i64 %140 to i32*
  br label %171

142:                                              ; preds = %222, %121
  %143 = phi i64* [ %119, %121 ], [ %220, %222 ]
  %144 = ptrtoint i64* %143 to i64
  br label %148

145:                                              ; preds = %226, %125
  %146 = phi i64* [ %119, %125 ], [ %220, %226 ]
  %147 = ptrtoint i64* %146 to i64
  br label %148

148:                                              ; preds = %99, %118, %200, %219, %142, %145, %237
  %149 = phi i64 [ 0, %237 ], [ %144, %142 ], [ %147, %145 ], [ 0, %219 ], [ 0, %200 ], [ 0, %118 ], [ 0, %99 ]
  %150 = inttoptr i64 %149 to i64*
  ret i64* %150

151:                                              ; preds = %136
  %152 = load i64, i64* %24, align 8
  %153 = load i64, i64* %29, align 8
  %154 = add i64 %152, -1
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i64 %153, 4294967295
  %158 = icmp eq i64 %157, 0
  call void @llvm.assume(i1 %158) #9
  %159 = zext i32 %156 to i64
  %160 = or i64 %153, %159
  %161 = add i64 %160, 7
  %162 = inttoptr i64 %161 to i16*
  %163 = load atomic i16, i16* %162 monotonic, align 2
  %164 = icmp eq i16 %163, 64
  br i1 %164, label %165, label %171

165:                                              ; preds = %151
  %166 = add i64 %152, 7
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %138, %165, %151
  %172 = phi i32* [ %141, %138 ], [ %155, %165 ], [ %155, %151 ]
  %173 = phi i64 [ %139, %138 ], [ %152, %165 ], [ %152, %151 ]
  br label %174

174:                                              ; preds = %171, %165
  %175 = phi i32* [ %172, %171 ], [ %155, %165 ]
  %176 = phi i64 [ %173, %171 ], [ %152, %165 ]
  %177 = phi i32 [ 3, %171 ], [ 0, %165 ]
  store i32 %177, i32* %28, align 8
  store i32 4, i32* %30, align 4
  store i8 0, i8* %31, align 8
  store i32 0, i32* %32, align 4
  store i32 0, i32* %33, align 8
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %34, align 8
  store i64* %24, i64** %35, align 8
  store i64* null, i64** %36, align 8
  store i64* %0, i64** %37, align 8
  store i64* null, i64** %38, align 8
  store i64 %27, i64* %40, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 -1, i64 16, i1 false) #9
  %178 = and i64 %176, -4294967296
  %179 = load atomic i32, i32* %175 monotonic, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %178, %180
  %182 = add i64 %181, 7
  %183 = inttoptr i64 %182 to i16*
  %184 = load atomic i16, i16* %183 monotonic, align 2
  %185 = and i16 %184, -32
  %186 = icmp eq i16 %185, 32
  br i1 %186, label %187, label %190

187:                                              ; preds = %174
  %188 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %43, align 8
  %189 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %188, %"class.v8::internal::Isolate"* %10, i64* %24) #9
  br label %190

190:                                              ; preds = %187, %174
  %191 = phi i64* [ %189, %187 ], [ %24, %174 ]
  store i64* %191, i64** %35, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #9
  %192 = load i32, i32* %30, align 4
  %193 = icmp eq i32 %192, 4
  br i1 %193, label %196, label %194

194:                                              ; preds = %190
  %195 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #9
  br label %200

196:                                              ; preds = %190
  %197 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %44, align 8
  %198 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %197, i64 160
  %199 = bitcast %"class.v8::internal::Factory"* %198 to i64*
  br label %200

200:                                              ; preds = %196, %194
  %201 = phi i64* [ %195, %194 ], [ %199, %196 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %26) #9
  %202 = icmp eq i64* %201, null
  br i1 %202, label %148, label %203

203:                                              ; preds = %200
  %204 = load i64, i64* %201, align 8
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %237, label %207

207:                                              ; preds = %203
  %208 = and i64 %204, -4294967296
  %209 = add i64 %204, -1
  %210 = inttoptr i64 %209 to i32*
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = zext i32 %211 to i64
  %213 = or i64 %208, %212
  %214 = add i64 %213, 9
  %215 = inttoptr i64 %214 to i8*
  %216 = load atomic i8, i8* %215 monotonic, align 1
  %217 = and i8 %216, 2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %237, label %219

219:                                              ; preds = %207
  %220 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %10, i64* nonnull %201, i64* %0, i32 0, %"class.v8::internal::Handle.1138"* null) #9
  %221 = icmp eq i64* %220, null
  br i1 %221, label %148, label %222

222:                                              ; preds = %219
  %223 = load i64, i64* %220, align 8
  %224 = and i64 %223, 1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %142, label %226

226:                                              ; preds = %222
  %227 = and i64 %223, -4294967296
  %228 = add i64 %223, -1
  %229 = inttoptr i64 %228 to i32*
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = zext i32 %230 to i64
  %232 = or i64 %227, %231
  %233 = add i64 %232, 7
  %234 = inttoptr i64 %233 to i16*
  %235 = load atomic i16, i16* %234 monotonic, align 2
  %236 = icmp ult i16 %235, 68
  br i1 %236, label %145, label %237

237:                                              ; preds = %226, %207, %203
  %238 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %239 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %238, i32 30, i64* null, i64* null, i64* null) #9
  %240 = load i64, i64* %239, align 8
  %241 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %10, i64 %240, %"class.v8::internal::MessageLocation"* null) #9
  br label %148
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal25FastGetOwnValuesOrEntriesEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEbPNS3_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"*, i64*, i1 zeroext, %"class.v8::internal::Handle.1144"* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::Representation", align 1
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::LookupIterator", align 8
  %9 = alloca %"class.v8::internal::LookupIterator", align 8
  %10 = load i64, i64* %1, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %18 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %19 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %4
  %21 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %18, i64 %16) #9
  %22 = load i64, i64* %21, align 8
  br label %36

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %16, i64* %32, align 8
  br label %36

36:                                               ; preds = %20, %31
  %37 = phi i64 [ %22, %20 ], [ %16, %31 ]
  %38 = phi i64* [ %21, %20 ], [ %32, %31 ]
  %39 = add i64 %37, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp ugt i16 %41, 188
  br i1 %42, label %43, label %544

43:                                               ; preds = %36
  %44 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6, i64 0, i32 0
  %47 = call zeroext i1 @_ZNK2v88internal3Map23OnlyHasSimplePropertiesEv(%"class.v8::internal::Map"* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  br i1 %47, label %48, label %544

48:                                               ; preds = %43
  %49 = load i64, i64* %1, align 8
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %49) #9
  br label %67

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %49, i64* %63, align 8
  br label %67

67:                                               ; preds = %52, %62
  %68 = phi i64* [ %53, %52 ], [ %63, %62 ]
  %69 = load i64, i64* %38, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %69, 23
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = and i64 %71, 4294967295
  %76 = icmp eq i64 %75, 0
  call void @llvm.assume(i1 %76) #9
  %77 = zext i32 %74 to i64
  %78 = or i64 %71, %77
  %79 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %80 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %67
  %82 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %79, i64 %78) #9
  br label %96

83:                                               ; preds = %67
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %87 = load i64*, i64** %86, align 8
  %88 = icmp eq i64* %85, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %91

91:                                               ; preds = %89, %83
  %92 = phi i64* [ %90, %89 ], [ %85, %83 ]
  %93 = ptrtoint i64* %92 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  store i64* %95, i64** %84, align 8
  store i64 %78, i64* %92, align 8
  br label %96

96:                                               ; preds = %81, %91
  %97 = phi i64* [ %82, %81 ], [ %92, %91 ]
  %98 = load i64, i64* %38, align 8
  %99 = add i64 %98, 11
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 acquire, align 4
  %102 = lshr i32 %101, 10
  %103 = and i32 %102, 1023
  %104 = load i64, i64* %68, align 8
  %105 = and i64 %104, -4294967296
  %106 = add i64 %104, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %105, %109
  %111 = add i64 %110, 10
  %112 = inttoptr i64 %111 to i8*
  %113 = load i8, i8* %112, align 1
  %114 = lshr i8 %113, 2
  %115 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %116 = zext i8 %114 to i64
  %117 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %115, i64 %116
  %118 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %117, align 8
  %119 = add i64 %104, 7
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %105, %122
  %124 = bitcast %"class.v8::internal::ElementsAccessor"* %118 to i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)***
  %125 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)**, i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*** %124, align 8
  %126 = getelementptr inbounds i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)** %125, i64 23
  %127 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)** %126, align 8
  %128 = call i64 %127(%"class.v8::internal::ElementsAccessor"* %118, i64 %104, i64 %123) #9
  %129 = sub nuw nsw i32 134217725, %103
  %130 = zext i32 %129 to i64
  %131 = icmp ugt i64 %128, %130
  %132 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %131, label %133, label %137

133:                                              ; preds = %96
  %134 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %132, i32 199, i64* null, i64* null, i64* null) #9
  %135 = load i64, i64* %134, align 8
  %136 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %135, %"class.v8::internal::MessageLocation"* null) #9
  br label %544

137:                                              ; preds = %96
  %138 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %139 = zext i32 %103 to i64
  %140 = trunc i64 %128 to i32
  %141 = add i32 %103, %140
  %142 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %138, i32 %141, i8 zeroext 0) #9
  %143 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #9
  store i32 0, i32* %7, align 4
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  %149 = load i64, i64* %148, align 8
  %150 = trunc i64 %149 to i32
  %151 = icmp eq i32 %147, %150
  br i1 %151, label %176, label %152

152:                                              ; preds = %137
  %153 = and i64 %144, -4294967296
  %154 = add i64 %144, -1
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %153, %157
  %159 = add i64 %158, 10
  %160 = inttoptr i64 %159 to i8*
  %161 = load i8, i8* %160, align 1
  %162 = lshr i8 %161, 2
  %163 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %164 = zext i8 %162 to i64
  %165 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %163, i64 %164
  %166 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %165, align 8
  %167 = bitcast %"class.v8::internal::ElementsAccessor"* %166 to i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i1, i32*, i32)***
  %168 = load i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i1, i32*, i32)**, i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i1, i32*, i32)*** %167, align 8
  %169 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i1, i32*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i1, i32*, i32)** %168, i64 10
  %170 = load i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i1, i32*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i1, i32*, i32)** %169, align 8
  %171 = call i16 %170(%"class.v8::internal::ElementsAccessor"* %166, %"class.v8::internal::Isolate"* %0, i64* %68, i64* %142, i1 zeroext %2, i32* nonnull %7, i32 18) #9
  %172 = trunc i16 %171 to i8
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %542, label %174

174:                                              ; preds = %152
  %175 = load i64, i64* %68, align 8
  br label %176

176:                                              ; preds = %174, %137
  %177 = phi i64 [ %175, %174 ], [ %144, %137 ]
  %178 = load i64, i64* %38, align 8
  %179 = add i64 %177, -1
  %180 = inttoptr i64 %179 to i32*
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = trunc i64 %178 to i32
  %183 = icmp eq i32 %181, %182
  %184 = zext i1 %183 to i8
  br i1 %183, label %185, label %194

185:                                              ; preds = %176
  %186 = load i64, i64* %70, align 8
  %187 = add i64 %178, 23
  %188 = inttoptr i64 %187 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = and i64 %186, 4294967295
  %191 = icmp eq i64 %190, 0
  call void @llvm.assume(i1 %191) #9
  %192 = zext i32 %189 to i64
  %193 = or i64 %186, %192
  store i64 %193, i64* %97, align 8
  br label %194

194:                                              ; preds = %185, %176
  %195 = icmp eq i32 %103, 0
  br i1 %195, label %538, label %196

196:                                              ; preds = %194
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %198 = bitcast %"struct.v8::internal::HandleScopeData"* %197 to i64*
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %202 = bitcast %"class.v8::internal::LookupIterator"* %8 to i8*
  %203 = ptrtoint i64* %68 to i64
  %204 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 0
  %205 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 1
  %206 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 2
  %207 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 3
  %208 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 4, i32 0
  %209 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 5
  %210 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 6, i32 0, i32 0
  %211 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 7, i32 0, i32 0
  %212 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 8, i32 0, i32 0
  %213 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 9, i32 0, i32 0
  %214 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 10
  %215 = bitcast %"class.v8::internal::Handle.1138"* %214 to i64*
  %216 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 11
  %217 = bitcast i64* %216 to i8*
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %219 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %5, i64 0, i32 0
  %220 = bitcast %"class.v8::internal::LookupIterator"* %9 to i8*
  %221 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 0
  %222 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 1
  %223 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 2
  %224 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 3
  %225 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 4, i32 0
  %226 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 5
  %227 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 6, i32 0, i32 0
  %228 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 7, i32 0, i32 0
  %229 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 8, i32 0, i32 0
  %230 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 9, i32 0, i32 0
  %231 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 10
  %232 = bitcast %"class.v8::internal::Handle.1138"* %231 to i64*
  %233 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 11
  %234 = bitcast i64* %233 to i8*
  %235 = icmp eq %"class.v8::internal::Isolate"* %0, null
  %236 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %197, i64 0, i32 0
  br label %237

237:                                              ; preds = %196, %535
  %238 = phi i8 [ %184, %196 ], [ %521, %535 ]
  %239 = phi i64 [ 0, %196 ], [ %536, %535 ]
  %240 = load i64, i64* %198, align 8
  %241 = load i64*, i64** %199, align 8
  %242 = load i32, i32* %200, align 8
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %200, align 8
  %244 = load i64, i64* %97, align 8
  %245 = and i64 %244, -4294967296
  %246 = mul nuw nsw i64 %239, 51539607552
  %247 = add nuw nsw i64 %246, 68719476736
  %248 = lshr exact i64 %247, 32
  %249 = add nsw i64 %248, -1
  %250 = add i64 %249, %244
  %251 = inttoptr i64 %250 to i32*
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = zext i32 %252 to i64
  %254 = or i64 %245, %253
  %255 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %256 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %255, null
  %257 = inttoptr i64 %240 to i64*
  br i1 %256, label %261, label %258

258:                                              ; preds = %237
  %259 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %255, i64 %254) #9
  %260 = load i64, i64* %259, align 8
  br label %270

261:                                              ; preds = %237
  %262 = icmp eq i64* %241, %257
  br i1 %262, label %263, label %265

263:                                              ; preds = %261
  %264 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %265

265:                                              ; preds = %263, %261
  %266 = phi i64* [ %264, %263 ], [ %257, %261 ]
  %267 = ptrtoint i64* %266 to i64
  %268 = add i64 %267, 8
  %269 = inttoptr i64 %268 to i64*
  store i64* %269, i64** %201, align 8
  store i64 %254, i64* %266, align 8
  br label %270

270:                                              ; preds = %258, %265
  %271 = phi i64 [ %260, %258 ], [ %254, %265 ]
  %272 = phi i64* [ %259, %258 ], [ %266, %265 ]
  %273 = and i64 %271, -4294967296
  %274 = add i64 %271, -1
  %275 = inttoptr i64 %274 to i32*
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = zext i32 %276 to i64
  %278 = or i64 %273, %277
  %279 = add i64 %278, 7
  %280 = inttoptr i64 %279 to i16*
  %281 = load atomic i16, i16* %280 monotonic, align 2
  %282 = icmp ult i16 %281, 64
  br i1 %282, label %283, label %520

283:                                              ; preds = %270
  %284 = and i8 %238, 1
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %423, label %286

286:                                              ; preds = %283
  %287 = load i64, i64* %97, align 8
  %288 = or i64 %248, 3
  %289 = add i64 %287, %288
  %290 = inttoptr i64 %289 to i32*
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = ashr i32 %291, 1
  %293 = and i32 %291, 32
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %520

295:                                              ; preds = %286
  %296 = and i32 %291, 2
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %373

298:                                              ; preds = %295
  %299 = and i32 %291, 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %324, label %301

301:                                              ; preds = %298
  %302 = and i64 %287, -4294967296
  %303 = add nuw nsw i64 %248, 7
  %304 = add i64 %303, %287
  %305 = inttoptr i64 %304 to i32*
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = zext i32 %306 to i64
  %308 = or i64 %302, %307
  %309 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %310 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %309, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %301
  %312 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %309, i64 %308) #9
  br label %465

313:                                              ; preds = %301
  %314 = load i64*, i64** %201, align 8
  %315 = load i64*, i64** %199, align 8
  %316 = icmp eq i64* %314, %315
  br i1 %316, label %317, label %319

317:                                              ; preds = %313
  %318 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %319

319:                                              ; preds = %317, %313
  %320 = phi i64* [ %318, %317 ], [ %314, %313 ]
  %321 = ptrtoint i64* %320 to i64
  %322 = add i64 %321, 8
  %323 = inttoptr i64 %322 to i64*
  store i64* %323, i64** %201, align 8
  store i64 %308, i64* %320, align 8
  br label %465

324:                                              ; preds = %298
  %325 = lshr i32 %292, 6
  %326 = trunc i32 %325 to i8
  %327 = and i8 %326, 7
  %328 = load i64, i64* %38, align 8
  %329 = lshr i32 %292, 19
  %330 = and i32 %329, 1023
  %331 = add i64 %328, 3
  %332 = inttoptr i64 %331 to i8*
  %333 = load atomic i8, i8* %332 monotonic, align 1
  %334 = zext i8 %333 to i32
  %335 = add i64 %328, 4
  %336 = inttoptr i64 %335 to i8*
  %337 = load atomic i8, i8* %336 monotonic, align 1
  %338 = zext i8 %337 to i32
  %339 = sub nsw i32 %334, %338
  %340 = icmp slt i32 %330, %339
  br i1 %340, label %341, label %349

341:                                              ; preds = %324
  %342 = load atomic i8, i8* %336 monotonic, align 1
  %343 = zext i8 %342 to i64
  %344 = shl nuw nsw i64 %343, 28
  %345 = load atomic i8, i8* %336 monotonic, align 1
  %346 = zext i8 %345 to i32
  %347 = add nuw nsw i32 %330, %346
  %348 = shl nuw nsw i32 %347, 2
  br label %353

349:                                              ; preds = %324
  %350 = sub nsw i32 %330, %339
  %351 = shl nsw i32 %350, 2
  %352 = add nsw i32 %351, 8
  br label %353

353:                                              ; preds = %349, %341
  %354 = phi i32 [ %348, %341 ], [ %352, %349 ]
  %355 = phi i64 [ %344, %341 ], [ 536870912, %349 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %219) #9
  store i8 %327, i8* %219, align 1
  %356 = icmp ult i8 %327, 5
  br i1 %356, label %359, label %357

357:                                              ; preds = %353
  %358 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %5) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* %358) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

359:                                              ; preds = %353
  %360 = zext i8 %327 to i64
  %361 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal8JSObject17SlowReverseLookupENS0_6ObjectE, i64 0, i64 %360
  %362 = load i64, i64* %361, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %219) #9
  %363 = zext i1 %340 to i64
  %364 = shl nuw nsw i64 %363, 13
  %365 = sext i32 %354 to i64
  %366 = sext i32 %339 to i64
  %367 = shl nsw i64 %366, 16
  %368 = or i64 %364, %367
  %369 = or i64 %368, %365
  %370 = or i64 %369, %355
  %371 = or i64 %370, %362
  %372 = call i64* @_ZN2v88internal8JSObject14FastPropertyAtENS0_6HandleIS1_EENS0_14RepresentationENS0_10FieldIndexE(i64* %68, i8 %327, i64 %371)
  br label %465

373:                                              ; preds = %295
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %202) #9
  %374 = icmp eq i64* %272, null
  br i1 %374, label %385, label %375

375:                                              ; preds = %373
  %376 = load i64, i64* %70, align 8
  %377 = load atomic i32, i32* %275 monotonic, align 4
  %378 = and i64 %376, 4294967295
  %379 = icmp eq i64 %378, 0
  call void @llvm.assume(i1 %379) #9
  %380 = zext i32 %377 to i64
  %381 = or i64 %376, %380
  %382 = add i64 %381, 7
  %383 = inttoptr i64 %382 to i16*
  %384 = load atomic i16, i16* %383 monotonic, align 2
  br label %385

385:                                              ; preds = %375, %373
  store i32 0, i32* %204, align 8
  store i32 4, i32* %205, align 4
  store i8 0, i8* %206, align 8
  store i32 0, i32* %207, align 4
  store i32 0, i32* %208, align 8
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %209, align 8
  store i64* %272, i64** %210, align 8
  store i64* null, i64** %211, align 8
  store i64* %68, i64** %212, align 8
  store i64* null, i64** %213, align 8
  store i64 %203, i64* %215, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 -1, i64 16, i1 false) #9
  %386 = load i64, i64* %272, align 8
  %387 = and i64 %386, -4294967296
  %388 = add i64 %386, -1
  %389 = inttoptr i64 %388 to i32*
  %390 = load atomic i32, i32* %389 monotonic, align 4
  %391 = zext i32 %390 to i64
  %392 = or i64 %387, %391
  %393 = add i64 %392, 7
  %394 = inttoptr i64 %393 to i16*
  %395 = load atomic i16, i16* %394 monotonic, align 2
  %396 = and i16 %395, -32
  %397 = icmp eq i16 %396, 32
  br i1 %397, label %398, label %401

398:                                              ; preds = %385
  %399 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %218, align 8
  %400 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %399, %"class.v8::internal::Isolate"* %0, i64* %272) #9
  br label %401

401:                                              ; preds = %385, %398
  %402 = phi i64* [ %400, %398 ], [ %272, %385 ]
  store i64* %402, i64** %210, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %8) #9
  %403 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %8, i1 zeroext false) #9
  %404 = icmp eq i64* %403, null
  br i1 %404, label %422, label %405

405:                                              ; preds = %401
  %406 = load i64, i64* %68, align 8
  %407 = add i64 %406, -1
  %408 = inttoptr i64 %407 to i32*
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = load i64, i64* %38, align 8
  %411 = trunc i64 %410 to i32
  %412 = icmp eq i32 %409, %411
  %413 = zext i1 %412 to i8
  %414 = load i64, i64* %70, align 8
  %415 = add i64 %410, 23
  %416 = inttoptr i64 %415 to i32*
  %417 = load i32, i32* %416, align 4
  %418 = and i64 %414, 4294967295
  %419 = icmp eq i64 %418, 0
  call void @llvm.assume(i1 %419) #9
  %420 = zext i32 %417 to i64
  %421 = or i64 %414, %420
  store i64 %421, i64* %97, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %202) #9
  br label %465

422:                                              ; preds = %401
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %202) #9
  br label %520

423:                                              ; preds = %283
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %220) #9
  %424 = icmp eq i64* %272, null
  br i1 %424, label %435, label %425

425:                                              ; preds = %423
  %426 = load i64, i64* %70, align 8
  %427 = load atomic i32, i32* %275 monotonic, align 4
  %428 = and i64 %426, 4294967295
  %429 = icmp eq i64 %428, 0
  call void @llvm.assume(i1 %429) #9
  %430 = zext i32 %427 to i64
  %431 = or i64 %426, %430
  %432 = add i64 %431, 7
  %433 = inttoptr i64 %432 to i16*
  %434 = load atomic i16, i16* %433 monotonic, align 2
  br label %435

435:                                              ; preds = %425, %423
  store i32 0, i32* %221, align 8
  store i32 4, i32* %222, align 4
  store i8 0, i8* %223, align 8
  store i32 0, i32* %224, align 4
  store i32 0, i32* %225, align 8
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %226, align 8
  store i64* %272, i64** %227, align 8
  store i64* null, i64** %228, align 8
  store i64* %68, i64** %229, align 8
  store i64* null, i64** %230, align 8
  store i64 %203, i64* %232, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 -1, i64 16, i1 false) #9
  %436 = load i64, i64* %272, align 8
  %437 = and i64 %436, -4294967296
  %438 = add i64 %436, -1
  %439 = inttoptr i64 %438 to i32*
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = zext i32 %440 to i64
  %442 = or i64 %437, %441
  %443 = add i64 %442, 7
  %444 = inttoptr i64 %443 to i16*
  %445 = load atomic i16, i16* %444 monotonic, align 2
  %446 = and i16 %445, -32
  %447 = icmp eq i16 %446, 32
  br i1 %447, label %448, label %451

448:                                              ; preds = %435
  %449 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %218, align 8
  %450 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %449, %"class.v8::internal::Isolate"* %0, i64* %272) #9
  br label %451

451:                                              ; preds = %435, %448
  %452 = phi i64* [ %450, %448 ], [ %272, %435 ]
  store i64* %452, i64** %227, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %9) #9
  %453 = load i32, i32* %222, align 4
  %454 = icmp eq i32 %453, 4
  br i1 %454, label %462, label %455

455:                                              ; preds = %451
  %456 = load i32, i32* %225, align 8
  %457 = and i32 %456, 16
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %462

459:                                              ; preds = %455
  %460 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %9, i1 zeroext false) #9
  %461 = icmp eq i64* %460, null
  br i1 %461, label %462, label %464

462:                                              ; preds = %451, %455, %459
  %463 = phi i32 [ 1, %459 ], [ 5, %455 ], [ 5, %451 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %220) #9
  br label %520

464:                                              ; preds = %459
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %220) #9
  br label %465

465:                                              ; preds = %319, %311, %359, %405, %464
  %466 = phi i64* [ %460, %464 ], [ %403, %405 ], [ %372, %359 ], [ %312, %311 ], [ %320, %319 ]
  %467 = phi i8 [ %238, %464 ], [ %413, %405 ], [ %238, %359 ], [ %238, %311 ], [ %238, %319 ]
  br i1 %2, label %468, label %481

468:                                              ; preds = %465
  %469 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %138, i32 2, i8 zeroext 0) #9
  %470 = load i64, i64* %469, align 8
  %471 = load i64, i64* %272, align 8
  %472 = add i64 %470, 7
  %473 = inttoptr i64 %472 to i32*
  %474 = trunc i64 %471 to i32
  store atomic volatile i32 %474, i32* %473 monotonic, align 4
  %475 = load i64, i64* %469, align 8
  %476 = load i64, i64* %466, align 8
  %477 = add i64 %475, 11
  %478 = inttoptr i64 %477 to i32*
  %479 = trunc i64 %476 to i32
  store atomic volatile i32 %479, i32* %478 monotonic, align 4
  %480 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %132, i64* %469, i8 zeroext 2, i32 2, i8 zeroext 0) #9
  br label %481

481:                                              ; preds = %468, %465
  %482 = phi i64* [ %480, %468 ], [ %466, %465 ]
  %483 = load i64, i64* %142, align 8
  %484 = load i32, i32* %7, align 4
  %485 = load i64, i64* %482, align 8
  %486 = shl i32 %484, 2
  %487 = sext i32 %486 to i64
  %488 = add i64 %483, 7
  %489 = add i64 %488, %487
  %490 = inttoptr i64 %489 to i32*
  %491 = trunc i64 %485 to i32
  store atomic volatile i32 %491, i32* %490 monotonic, align 4
  %492 = and i64 %485, 1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %517, label %494

494:                                              ; preds = %481
  %495 = and i64 %483, -262144
  %496 = or i64 %495, 8
  %497 = inttoptr i64 %496 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = and i64 %498, 262144
  %500 = icmp eq i64 %499, 0
  br i1 %500, label %505, label %501

501:                                              ; preds = %494
  %502 = or i64 %495, 16
  %503 = inttoptr i64 %502 to %"class.v8::internal::Heap"**
  %504 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %503, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %504, i64 %483, i64 %489, i64 %485) #9
  br label %505

505:                                              ; preds = %501, %494
  %506 = and i64 %485, -262144
  %507 = or i64 %506, 8
  %508 = inttoptr i64 %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = and i64 %509, 24
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %517, label %512

512:                                              ; preds = %505
  %513 = load i64, i64* %497, align 8
  %514 = and i64 %513, 24
  %515 = icmp eq i64 %514, 0
  br i1 %515, label %516, label %517

516:                                              ; preds = %512
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %483, i64 %489, i64 %485) #9
  br label %517

517:                                              ; preds = %481, %505, %512, %516
  %518 = load i32, i32* %7, align 4
  %519 = add nsw i32 %518, 1
  store i32 %519, i32* %7, align 4
  br label %520

520:                                              ; preds = %517, %422, %286, %462, %270
  %521 = phi i8 [ %238, %270 ], [ %467, %517 ], [ %238, %422 ], [ %238, %286 ], [ %238, %462 ]
  %522 = phi i32 [ 5, %270 ], [ 0, %517 ], [ 1, %422 ], [ 5, %286 ], [ %463, %462 ]
  br i1 %235, label %534, label %523

523:                                              ; preds = %520
  %524 = load i64*, i64** %236, align 8
  store i64 %240, i64* %198, align 8
  %525 = load i32, i32* %200, align 8
  %526 = add nsw i32 %525, -1
  store i32 %526, i32* %200, align 8
  %527 = load i64*, i64** %199, align 8
  %528 = icmp eq i64* %527, %241
  br i1 %528, label %531, label %529

529:                                              ; preds = %523
  store i64* %241, i64** %199, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #9
  %530 = load i64*, i64** %236, align 8
  br label %531

531:                                              ; preds = %529, %523
  %532 = phi i64* [ %530, %529 ], [ %257, %523 ]
  %533 = phi i64* [ %241, %529 ], [ %524, %523 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %532, i64* %533) #9
  br label %534

534:                                              ; preds = %520, %531
  switch i32 %522, label %542 [
    i32 0, label %535
    i32 5, label %535
  ]

535:                                              ; preds = %534, %534
  %536 = add nuw nsw i64 %239, 1
  %537 = icmp eq i64 %536, %139
  br i1 %537, label %538, label %237

538:                                              ; preds = %535, %194
  %539 = load i32, i32* %7, align 4
  %540 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %0, i64* %142, i32 %539) #9
  %541 = getelementptr inbounds %"class.v8::internal::Handle.1144", %"class.v8::internal::Handle.1144"* %3, i64 0, i32 0, i32 0
  store i64* %540, i64** %541, align 8
  br label %542

542:                                              ; preds = %534, %152, %538
  %543 = phi i16 [ 257, %538 ], [ 0, %152 ], [ 0, %534 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #9
  br label %544

544:                                              ; preds = %133, %542, %43, %36
  %545 = phi i16 [ 1, %36 ], [ 1, %43 ], [ 0, %133 ], [ %543, %542 ]
  ret i16 %545
}

declare zeroext i1 @_ZNK2v88internal3Map23OnlyHasSimplePropertiesEv(%"class.v8::internal::Map"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject14FastPropertyAtENS0_6HandleIS1_EENS0_14RepresentationENS0_10FieldIndexE(i64*, i8, i64) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = and i64 %4, -4294967296
  %12 = and i64 %2, 8192
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %3
  %15 = and i64 %2, 8191
  %16 = add nsw i64 %15, -1
  %17 = add i64 %16, %4
  %18 = inttoptr i64 %17 to i32*
  br label %68

19:                                               ; preds = %3
  %20 = add i64 %4, 3
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %11, %23
  %25 = and i64 %23, 1
  %26 = icmp eq i64 %25, 0
  %27 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %26, label %44, label %28

28:                                               ; preds = %19
  %29 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %27, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %27, i64 0, i32 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %27, i64 0, i32 1, i64 0
  br label %38

36:                                               ; preds = %30, %28
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i64* [ %37, %36 ], [ %35, %34 ]
  %40 = getelementptr inbounds i64, i64* %39, i64 29
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %22, %42
  br i1 %43, label %44, label %58

44:                                               ; preds = %38, %19
  %45 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %27, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %27, i64 0, i32 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !5
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %27, i64 0, i32 1, i64 0
  br label %54

52:                                               ; preds = %46, %44
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64* [ %53, %52 ], [ %51, %50 ]
  %56 = getelementptr inbounds i64, i64* %55, i64 106
  %57 = load i64, i64* %56, align 8
  br label %58

58:                                               ; preds = %54, %38
  %59 = phi i64 [ %57, %54 ], [ %24, %38 ]
  %60 = lshr i64 %2, 26
  %61 = and i64 %60, 124
  %62 = and i64 %2, 8188
  %63 = add nuw nsw i64 %62, 7
  %64 = sub nsw i64 %63, %61
  %65 = add i64 %64, %59
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  br label %68

68:                                               ; preds = %14, %58
  %69 = phi i32* [ %18, %14 ], [ %66, %58 ]
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %11, %71
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %74 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %73, align 8
  %75 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %68
  %77 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %74, i64 %72) #9
  br label %91

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %82 = load i64*, i64** %81, align 8
  %83 = icmp eq i64* %80, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #9
  br label %86

86:                                               ; preds = %84, %78
  %87 = phi i64* [ %85, %84 ], [ %80, %78 ]
  %88 = ptrtoint i64* %87 to i64
  %89 = add i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  store i64* %90, i64** %79, align 8
  store i64 %72, i64* %87, align 8
  br label %91

91:                                               ; preds = %76, %86
  %92 = phi i64* [ %77, %76 ], [ %87, %86 ]
  %93 = tail call i64* @_ZN2v88internal6Object11WrapForReadEPNS0_7IsolateENS0_6HandleIS1_EENS0_14RepresentationE(%"class.v8::internal::Isolate"* %10, i64* %92, i8 %1) #9
  ret i64* %93
}

declare i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal21GetOwnValuesOrEntriesEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS0_14PropertyFilterEbb(%"class.v8::internal::Isolate"*, i64*, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = alloca %"class.v8::internal::Handle.1144", align 8
  %9 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %10 = bitcast %"class.v8::internal::Handle.1144"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.v8::internal::Handle.1144", %"class.v8::internal::Handle.1144"* %8, i64 0, i32 0, i32 0
  store i64* null, i64** %11, align 8
  %12 = icmp eq i32 %2, 18
  %13 = and i1 %12, %3
  br i1 %13, label %14, label %23

14:                                               ; preds = %5
  %15 = call i16 @_ZN2v88internal25FastGetOwnValuesOrEntriesEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEbPNS3_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i1 zeroext %4, %"class.v8::internal::Handle.1144"* nonnull %8)
  %16 = trunc i16 %15 to i8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %227, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i16 %15, 255
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = bitcast %"class.v8::internal::Handle.1144"* %8 to i64*
  %22 = load i64, i64* %21, align 8
  br label %227

23:                                               ; preds = %18, %5
  %24 = and i32 %2, -3
  %25 = tail call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* %1, i32 0, i32 %24, i32 0, i1 zeroext false, i1 zeroext false) #9
  %26 = icmp eq i64* %25, null
  br i1 %26, label %227, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %29 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %30 = load i64, i64* %25, align 8
  %31 = add i64 %30, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = ashr i32 %33, 1
  %35 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %29, i32 %34, i8 zeroext 0) #9
  store i64* %35, i64** %11, align 8
  %36 = load i64, i64* %25, align 8
  %37 = add i64 %36, 3
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 1
  br i1 %40, label %41, label %222

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %46 = and i32 %2, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %9, i64 0, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %9, i64 0, i32 1, i32 0, i32 0
  %50 = bitcast i64** %49 to i8*
  %51 = bitcast %"class.v8::internal::LookupIterator::Key"* %6 to i8*
  %52 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 1
  br label %55

55:                                               ; preds = %41, %210
  %56 = phi i64 [ 0, %41 ], [ %212, %210 ]
  %57 = phi i64 [ %36, %41 ], [ %213, %210 ]
  %58 = phi i32 [ 0, %41 ], [ %211, %210 ]
  %59 = load i64, i64* %42, align 8
  %60 = trunc i64 %56 to i32
  %61 = shl i32 %60, 2
  %62 = sext i32 %61 to i64
  %63 = add nsw i64 %62, 7
  %64 = add i64 %63, %57
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i64 %59, 4294967295
  %68 = icmp eq i64 %67, 0
  call void @llvm.assume(i1 %68) #9
  %69 = zext i32 %66 to i64
  %70 = or i64 %59, %69
  %71 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %43, align 8
  %72 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %55
  %74 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %71, i64 %70) #9
  br label %86

75:                                               ; preds = %55
  %76 = load i64*, i64** %44, align 8
  %77 = load i64*, i64** %45, align 8
  %78 = icmp eq i64* %76, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %81

81:                                               ; preds = %79, %75
  %82 = phi i64* [ %80, %79 ], [ %76, %75 ]
  %83 = ptrtoint i64* %82 to i64
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to i64*
  store i64* %85, i64** %44, align 8
  store i64 %70, i64* %82, align 8
  br label %86

86:                                               ; preds = %73, %81
  %87 = phi i64* [ %74, %73 ], [ %82, %81 ]
  br i1 %47, label %101, label %88

88:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #9
  store i8 0, i8* %48, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 32, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #9
  call void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator::Key"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* %87) #9
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %52) #9
  %89 = load i64*, i64** %53, align 8
  %90 = load i64, i64* %54, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %89, i64 %90, i64* %1, i32 1) #9
  %91 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::PropertyDescriptor"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %52) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #9
  %92 = trunc i16 %91 to i8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %209, label %94

94:                                               ; preds = %88
  %95 = icmp ugt i16 %91, 255
  br i1 %95, label %96, label %208

96:                                               ; preds = %94
  %97 = load i8, i8* %48, align 8
  %98 = and i8 %97, 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %208, label %100

100:                                              ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #9
  br label %101

101:                                              ; preds = %100, %86
  %102 = call i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %87)
  %103 = icmp eq i64* %102, null
  br i1 %103, label %227, label %104

104:                                              ; preds = %101
  br i1 %4, label %105, label %170

105:                                              ; preds = %104
  %106 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %29, i32 2, i8 zeroext 0) #9
  %107 = load i64, i64* %106, align 8
  %108 = load i64, i64* %87, align 8
  %109 = add i64 %107, 7
  %110 = inttoptr i64 %109 to i32*
  %111 = trunc i64 %108 to i32
  store atomic volatile i32 %111, i32* %110 monotonic, align 4
  %112 = and i64 %108, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %137, label %114

114:                                              ; preds = %105
  %115 = and i64 %107, -262144
  %116 = or i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, 262144
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %114
  %122 = or i64 %115, 16
  %123 = inttoptr i64 %122 to %"class.v8::internal::Heap"**
  %124 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %123, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %124, i64 %107, i64 %109, i64 %108) #9
  br label %125

125:                                              ; preds = %121, %114
  %126 = and i64 %108, -262144
  %127 = or i64 %126, 8
  %128 = inttoptr i64 %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = and i64 %129, 24
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %137, label %132

132:                                              ; preds = %125
  %133 = load i64, i64* %117, align 8
  %134 = and i64 %133, 24
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %107, i64 %109, i64 %108) #9
  br label %137

137:                                              ; preds = %105, %125, %132, %136
  %138 = load i64, i64* %106, align 8
  %139 = load i64, i64* %102, align 8
  %140 = add i64 %138, 11
  %141 = inttoptr i64 %140 to i32*
  %142 = trunc i64 %139 to i32
  store atomic volatile i32 %142, i32* %141 monotonic, align 4
  %143 = and i64 %139, 1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %168, label %145

145:                                              ; preds = %137
  %146 = and i64 %138, -262144
  %147 = or i64 %146, 8
  %148 = inttoptr i64 %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = and i64 %149, 262144
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %156, label %152

152:                                              ; preds = %145
  %153 = or i64 %146, 16
  %154 = inttoptr i64 %153 to %"class.v8::internal::Heap"**
  %155 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %154, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %155, i64 %138, i64 %140, i64 %139) #9
  br label %156

156:                                              ; preds = %152, %145
  %157 = and i64 %139, -262144
  %158 = or i64 %157, 8
  %159 = inttoptr i64 %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = and i64 %160, 24
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %168, label %163

163:                                              ; preds = %156
  %164 = load i64, i64* %148, align 8
  %165 = and i64 %164, 24
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %163
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %138, i64 %140, i64 %139) #9
  br label %168

168:                                              ; preds = %137, %156, %163, %167
  %169 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %28, i64* %106, i8 zeroext 2, i32 2, i8 zeroext 0) #9
  br label %170

170:                                              ; preds = %168, %104
  %171 = phi i64* [ %169, %168 ], [ %102, %104 ]
  %172 = load i64*, i64** %11, align 8
  %173 = load i64, i64* %172, align 8
  %174 = load i64, i64* %171, align 8
  %175 = shl i32 %58, 2
  %176 = sext i32 %175 to i64
  %177 = add nsw i64 %176, 7
  %178 = add i64 %177, %173
  %179 = inttoptr i64 %178 to i32*
  %180 = trunc i64 %174 to i32
  store atomic volatile i32 %180, i32* %179 monotonic, align 4
  %181 = and i64 %174, 1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %206, label %183

183:                                              ; preds = %170
  %184 = and i64 %173, -262144
  %185 = or i64 %184, 8
  %186 = inttoptr i64 %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, 262144
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %194, label %190

190:                                              ; preds = %183
  %191 = or i64 %184, 16
  %192 = inttoptr i64 %191 to %"class.v8::internal::Heap"**
  %193 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %192, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %193, i64 %173, i64 %178, i64 %174) #9
  br label %194

194:                                              ; preds = %190, %183
  %195 = and i64 %174, -262144
  %196 = or i64 %195, 8
  %197 = inttoptr i64 %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = and i64 %198, 24
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %206, label %201

201:                                              ; preds = %194
  %202 = load i64, i64* %186, align 8
  %203 = and i64 %202, 24
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %201
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %173, i64 %178, i64 %174) #9
  br label %206

206:                                              ; preds = %205, %201, %194, %170
  %207 = add nsw i32 %58, 1
  br label %210

208:                                              ; preds = %96, %94
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #9
  br label %210

209:                                              ; preds = %88
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #9
  br label %227

210:                                              ; preds = %208, %206
  %211 = phi i32 [ %207, %206 ], [ %58, %208 ]
  %212 = add nuw nsw i64 %56, 1
  %213 = load i64, i64* %25, align 8
  %214 = add i64 %213, 3
  %215 = inttoptr i64 %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = ashr i32 %216, 1
  %218 = sext i32 %217 to i64
  %219 = icmp slt i64 %212, %218
  br i1 %219, label %55, label %220

220:                                              ; preds = %210
  %221 = load i64*, i64** %11, align 8
  br label %222

222:                                              ; preds = %220, %27
  %223 = phi i64* [ %35, %27 ], [ %221, %220 ]
  %224 = phi i32 [ 0, %27 ], [ %211, %220 ]
  %225 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %0, i64* %223, i32 %224) #9
  %226 = ptrtoint i64* %225 to i64
  br label %227

227:                                              ; preds = %101, %209, %222, %23, %14, %20
  %228 = phi i64 [ %22, %20 ], [ 0, %14 ], [ %226, %222 ], [ 0, %23 ], [ 0, %209 ], [ 0, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %229 = inttoptr i64 %228 to i64*
  ret i64* %229
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = ptrtoint i64* %2 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %9, align 8
  %10 = load i64, i64* %2, align 8
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 1
  %12 = and i64 %10, -4294967296
  %13 = add i64 %10, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ult i16 %20, 64
  %22 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  br i1 %21, label %23, label %37

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %24, align 8
  %25 = add i64 %10, 3
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -536870910
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %23
  %31 = lshr i32 %27, 2
  %32 = and i32 %31, 16777215
  %33 = zext i32 %32 to i64
  store i64 %33, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %45

34:                                               ; preds = %23
  %35 = and i32 %27, 3
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %38

37:                                               ; preds = %34, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %47

38:                                               ; preds = %34
  %39 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %4, i64* %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  %41 = load i64, i64* %2, align 8
  %42 = and i64 %41, -4294967296
  %43 = add i64 %41, -1
  %44 = inttoptr i64 %43 to i32*
  br label %47

45:                                               ; preds = %38, %30
  %46 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i64*
  store i64 %8, i64* %46, align 8
  br label %64

47:                                               ; preds = %40, %37
  %48 = phi i32* [ %44, %40 ], [ %14, %37 ]
  %49 = phi i64 [ %42, %40 ], [ %12, %37 ]
  store i64 -1, i64* %11, align 8
  %50 = load atomic i32, i32* %48 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %49, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = and i16 %55, -32
  %57 = icmp eq i16 %56, 32
  br i1 %57, label %58, label %62

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %59, align 8
  %61 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %60, %"class.v8::internal::Isolate"* %0, i64* %2) #9
  br label %62

62:                                               ; preds = %58, %47
  %63 = phi i64* [ %61, %58 ], [ %2, %47 ]
  store i64* %63, i64** %9, align 8
  br label %64

64:                                               ; preds = %45, %62
  %65 = phi i64* [ %2, %45 ], [ %63, %62 ]
  %66 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %66) #9
  %67 = load i64, i64* %11, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %65, i64 %67, i64* %1, i32 3) #9
  %68 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %66) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret i64* %68
}

declare i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver12GetOwnValuesENS0_6HandleIS1_EENS0_14PropertyFilterEb(i64*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = tail call i64* @_ZN2v88internal21GetOwnValuesOrEntriesEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS0_14PropertyFilterEbb(%"class.v8::internal::Isolate"* %10, i64* %0, i32 %1, i1 zeroext %2, i1 zeroext false)
  ret i64* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10JSReceiver13GetOwnEntriesENS0_6HandleIS1_EENS0_14PropertyFilterEb(i64*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = tail call i64* @_ZN2v88internal21GetOwnValuesOrEntriesEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS0_14PropertyFilterEbb(%"class.v8::internal::Isolate"* %10, i64* %0, i32 %1, i1 zeroext %2, i1 zeroext true)
  ret i64* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal10JSReceiver12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEEbNS0_11ShouldThrowE(i64*, i64*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 188
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = tail call i16 @_ZN2v88internal7JSProxy12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEEbNS0_11ShouldThrowE(i64* %0, i64* %1, i1 zeroext %2, i32 %3) #9
  br label %20

18:                                               ; preds = %4
  %19 = tail call i16 @_ZN2v88internal8JSObject12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEEbNS0_11ShouldThrowE(i64* %0, i64* %1, i1 zeroext %2, i32 %3)
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi i16 [ %17, %16 ], [ %19, %18 ]
  ret i16 %21
}

declare i16 @_ZN2v88internal7JSProxy12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEEbNS0_11ShouldThrowE(i64*, i64*, i1 zeroext, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEEbNS0_11ShouldThrowE(i64*, i64*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %6 = alloca %"class.v8::internal::Context", align 8
  %7 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %8 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %9 = load i64, i64* %0, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  br i1 %2, label %16, label %97

16:                                               ; preds = %4
  %17 = and i64 %9, -4294967296
  %18 = add i64 %9, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 190
  br i1 %26, label %27, label %47

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::internal::Context"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %33 = bitcast %"class.v8::internal::PrototypeIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #9
  %34 = load i64, i64* %12, align 16
  %35 = add i64 %34, -41416
  %36 = inttoptr i64 %35 to %"class.v8::internal::Isolate"*
  %37 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %36, %"class.v8::internal::Isolate"** %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 1, i32 0, i32 0
  store i64 %9, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 3
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 4
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 6
  store i32 0, i32* %42, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %5) #9
  %43 = load i64, i64* %38, align 8
  %44 = trunc i64 %43 to i32
  %45 = trunc i64 %32 to i32
  %46 = icmp eq i32 %44, %45
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #9
  br i1 %46, label %97, label %56

47:                                               ; preds = %16
  %48 = load atomic i32, i32* %19 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %17, %49
  %51 = add i64 %50, 9
  %52 = inttoptr i64 %51 to i8*
  %53 = load atomic i8, i8* %52 monotonic, align 1
  %54 = and i8 %53, 32
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %97, label %56

56:                                               ; preds = %27, %47
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %60 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %59, align 8
  %61 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %56
  %63 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %60, i64 %58) #9
  br label %77

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %66, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %72

72:                                               ; preds = %70, %64
  %73 = phi i64* [ %71, %70 ], [ %66, %64 ]
  %74 = ptrtoint i64* %73 to i64
  %75 = add i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  store i64* %76, i64** %65, align 8
  store i64 %58, i64* %73, align 8
  br label %77

77:                                               ; preds = %62, %72
  %78 = phi i64* [ %63, %62 ], [ %73, %72 ]
  %79 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %15, i64* %78, i64* %0) #9
  br i1 %79, label %97, label %80

80:                                               ; preds = %77
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %15, i64* %0) #9
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 5
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i32
  %86 = trunc i64 %82 to i32
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %80
  %89 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %15) #9
  br label %280

90:                                               ; preds = %80
  %91 = icmp eq i32 %3, 1
  br i1 %91, label %280, label %92

92:                                               ; preds = %90
  %93 = inttoptr i64 %14 to %"class.v8::internal::Factory"*
  %94 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %93, i32 81, i64* null, i64* null, i64* null) #9
  %95 = load i64, i64* %94, align 8
  %96 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %15, i64 %95, %"class.v8::internal::MessageLocation"* null) #9
  br label %280

97:                                               ; preds = %27, %47, %77, %4
  %98 = load i64, i64* %1, align 8
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %112, label %101

101:                                              ; preds = %97
  %102 = and i64 %98, -4294967296
  %103 = add i64 %98, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ugt i16 %110, 185
  br i1 %111, label %118, label %112

112:                                              ; preds = %97, %101
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 6
  %114 = load i64, i64* %113, align 8
  %115 = trunc i64 %98 to i32
  %116 = trunc i64 %114 to i32
  %117 = icmp eq i32 %115, %116
  br i1 %117, label %118, label %280

118:                                              ; preds = %101, %112
  %119 = load i64, i64* %0, align 8
  %120 = and i64 %119, -4294967296
  %121 = add i64 %119, -1
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %120, %124
  %126 = add i64 %125, 11
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = lshr i32 %128, 27
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  br i1 %2, label %132, label %174

132:                                              ; preds = %118
  %133 = bitcast %"class.v8::internal::PrototypeIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %133) #9
  %134 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %15, %"class.v8::internal::Isolate"** %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %7, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %7, i64 0, i32 2, i32 0, i32 0
  store i64* %0, i64** %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %7, i64 0, i32 3
  store i32 1, i32* %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %7, i64 0, i32 4
  store i8 0, i8* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %7, i64 0, i32 6
  store i32 0, i32* %139, align 8
  %140 = icmp eq i64* %0, null
  br i1 %140, label %141, label %142, !prof !6

141:                                              ; preds = %132
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #14
  unreachable

142:                                              ; preds = %132
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %7) #9
  %143 = load i8, i8* %138, align 4, !range !5
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %167

145:                                              ; preds = %142, %162
  %146 = phi i8 [ %164, %162 ], [ %131, %142 ]
  %147 = load i64*, i64** %136, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %7)
  %148 = icmp eq i8 %146, 0
  br i1 %148, label %162, label %149

149:                                              ; preds = %145
  %150 = load i64, i64* %147, align 8
  %151 = and i64 %150, -4294967296
  %152 = add i64 %150, -1
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %151, %155
  %157 = add i64 %156, 11
  %158 = inttoptr i64 %157 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 134217728
  %161 = icmp ne i32 %160, 0
  br label %162

162:                                              ; preds = %145, %149
  %163 = phi i1 [ false, %145 ], [ %161, %149 ]
  %164 = zext i1 %163 to i8
  %165 = load i8, i8* %138, align 4, !range !5
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %145, label %167

167:                                              ; preds = %162, %142
  %168 = phi i64* [ %0, %142 ], [ %147, %162 ]
  %169 = phi i8 [ %131, %142 ], [ %164, %162 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %133) #9
  %170 = load i64, i64* %168, align 8
  %171 = and i64 %170, -4294967296
  %172 = add i64 %170, -1
  %173 = inttoptr i64 %172 to i32*
  br label %174

174:                                              ; preds = %167, %118
  %175 = phi i32* [ %173, %167 ], [ %122, %118 ]
  %176 = phi i64 [ %171, %167 ], [ %120, %118 ]
  %177 = phi i64* [ %168, %167 ], [ %0, %118 ]
  %178 = phi i8 [ %169, %167 ], [ %131, %118 ]
  %179 = load atomic i32, i32* %175 monotonic, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %176, %180
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %183 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %182, align 8
  %184 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %183, null
  br i1 %184, label %188, label %185

185:                                              ; preds = %174
  %186 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %183, i64 %181) #9
  %187 = load i64, i64* %186, align 8
  br label %201

188:                                              ; preds = %174
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %190 = load i64*, i64** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %192 = load i64*, i64** %191, align 8
  %193 = icmp eq i64* %190, %192
  br i1 %193, label %194, label %196

194:                                              ; preds = %188
  %195 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %196

196:                                              ; preds = %194, %188
  %197 = phi i64* [ %195, %194 ], [ %190, %188 ]
  %198 = ptrtoint i64* %197 to i64
  %199 = add i64 %198, 8
  %200 = inttoptr i64 %199 to i64*
  store i64* %200, i64** %189, align 8
  store i64 %181, i64* %197, align 8
  br label %201

201:                                              ; preds = %185, %196
  %202 = phi i64 [ %187, %185 ], [ %181, %196 ]
  %203 = phi i64* [ %186, %185 ], [ %197, %196 ]
  %204 = add i64 %202, 15
  %205 = inttoptr i64 %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = load i64, i64* %1, align 8
  %208 = trunc i64 %207 to i32
  %209 = icmp eq i32 %206, %208
  br i1 %209, label %280, label %210

210:                                              ; preds = %201
  %211 = add i64 %202, 10
  %212 = inttoptr i64 %211 to i8*
  %213 = load i8, i8* %212, align 1
  %214 = and i8 %213, 2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %223, label %216

216:                                              ; preds = %210
  %217 = icmp eq i32 %3, 1
  br i1 %217, label %280, label %218

218:                                              ; preds = %216
  %219 = inttoptr i64 %14 to %"class.v8::internal::Factory"*
  %220 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %219, i32 58, i64* %0, i64* null, i64* null) #9
  %221 = load i64, i64* %220, align 8
  %222 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %15, i64 %221, %"class.v8::internal::MessageLocation"* null) #9
  br label %280

223:                                              ; preds = %210
  %224 = and i8 %178, 1
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %226, label %233

226:                                              ; preds = %223
  %227 = icmp eq i32 %3, 1
  br i1 %227, label %280, label %228

228:                                              ; preds = %226
  %229 = inttoptr i64 %14 to %"class.v8::internal::Factory"*
  %230 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %229, i32 85, i64* %0, i64* null, i64* null) #9
  %231 = load i64, i64* %230, align 8
  %232 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %15, i64 %231, %"class.v8::internal::MessageLocation"* null) #9
  br label %280

233:                                              ; preds = %223
  %234 = and i64 %207, 1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %278, label %236

236:                                              ; preds = %233
  %237 = and i64 %207, -4294967296
  %238 = add i64 %207, -1
  %239 = inttoptr i64 %238 to i32*
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = zext i32 %240 to i64
  %242 = or i64 %237, %241
  %243 = add i64 %242, 7
  %244 = inttoptr i64 %243 to i16*
  %245 = load atomic i16, i16* %244 monotonic, align 2
  %246 = icmp ugt i16 %245, 185
  br i1 %246, label %247, label %278

247:                                              ; preds = %236
  %248 = bitcast %"class.v8::internal::PrototypeIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %248) #9
  %249 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %15, %"class.v8::internal::Isolate"** %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 1, i32 0, i32 0
  store i64 %207, i64* %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %251, align 8
  %252 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 3
  store i32 0, i32* %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 4
  store i8 0, i8* %253, align 4
  %254 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 6
  store i32 0, i32* %254, align 8
  %255 = load i64, i64* %0, align 8
  %256 = trunc i64 %207 to i32
  %257 = trunc i64 %255 to i32
  %258 = icmp eq i32 %256, %257
  br i1 %258, label %259, label %266

259:                                              ; preds = %269, %247
  %260 = icmp eq i32 %3, 1
  br i1 %260, label %275, label %261

261:                                              ; preds = %259
  %262 = inttoptr i64 %14 to %"class.v8::internal::Factory"*
  %263 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %262, i32 1, i64* null, i64* null, i64* null) #9
  %264 = load i64, i64* %263, align 8
  %265 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %15, i64 %264, %"class.v8::internal::MessageLocation"* null) #9
  br label %275

266:                                              ; preds = %247, %269
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %8)
  %267 = load i8, i8* %253, align 4
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %269, label %277

269:                                              ; preds = %266
  %270 = load i64, i64* %250, align 8
  %271 = load i64, i64* %0, align 8
  %272 = trunc i64 %270 to i32
  %273 = trunc i64 %271 to i32
  %274 = icmp eq i32 %272, %273
  br i1 %274, label %259, label %266

275:                                              ; preds = %261, %259
  %276 = phi i16 [ 1, %259 ], [ 0, %261 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %248) #9
  br label %280

277:                                              ; preds = %266
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %248) #9
  br label %278

278:                                              ; preds = %233, %277, %236
  call void @_ZN2v88internal7Isolate37UpdateNoElementsProtectorOnSetElementENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %15, i64* %177) #9
  %279 = call i64* @_ZN2v88internal3Map21TransitionToPrototypeEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10HeapObjectEEE(%"class.v8::internal::Isolate"* %15, i64* %203, i64* %1) #9
  call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %15, i64* %177, i64* %279, i32 0)
  br label %280

280:                                              ; preds = %278, %228, %218, %201, %216, %226, %275, %112, %90, %88, %92
  %281 = phi i16 [ 0, %92 ], [ 0, %88 ], [ 1, %90 ], [ 257, %112 ], [ 0, %218 ], [ 257, %278 ], [ 0, %228 ], [ 257, %201 ], [ 1, %216 ], [ 1, %226 ], [ %276, %275 ]
  ret i16 %281
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10JSReceiver19HasProxyInPrototypeEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 6
  br label %8

8:                                                ; preds = %20, %2
  %9 = phi i64 [ %6, %2 ], [ %32, %20 ]
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 188
  br i1 %19, label %36, label %20

20:                                               ; preds = %8
  %21 = load i64, i64* %3, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %22, %31
  %33 = load i64, i64* %7, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %30, %34
  store i64 %32, i64* %3, align 8
  br i1 %35, label %36, label %8

36:                                               ; preds = %20, %8
  %37 = phi i1 [ true, %8 ], [ false, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal10JSReceiver10IsCodeLikeEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nocapture readonly, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 19
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = and i64 %14, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %88, label %18

18:                                               ; preds = %2
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  %21 = and i64 %10, -262144
  %22 = or i64 %21, 16
  %23 = inttoptr i64 %22 to i64*
  br i1 %20, label %53, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %26 = load i8, i8* %25, align 8, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 10
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  br label %74

32:                                               ; preds = %24
  %33 = load i64, i64* %23, align 16
  %34 = add i64 %33, -41416
  %35 = inttoptr i64 %34 to %"class.v8::internal::Isolate"*
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 7, i32 0, i64 10
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  br label %39

39:                                               ; preds = %45, %32
  %40 = phi i64 [ %50, %45 ], [ %15, %32 ]
  %41 = add i64 %40, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = icmp eq i32 %43, %38
  br i1 %44, label %45, label %88

45:                                               ; preds = %39
  %46 = add i64 %40, 19
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %5, %49
  %51 = and i64 %49, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %88, label %39

53:                                               ; preds = %18
  %54 = load i64, i64* %23, align 16
  %55 = add i64 %54, -41416
  %56 = inttoptr i64 %55 to %"class.v8::internal::Isolate"*
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 0, i32 7, i32 0, i64 10
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  br label %60

60:                                               ; preds = %66, %53
  %61 = phi i64 [ %71, %66 ], [ %15, %53 ]
  %62 = add i64 %61, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = icmp eq i32 %64, %59
  br i1 %65, label %66, label %88

66:                                               ; preds = %60
  %67 = add i64 %61, 19
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %5, %70
  %72 = and i64 %70, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %88, label %60

74:                                               ; preds = %80, %28
  %75 = phi i64 [ %85, %80 ], [ %15, %28 ]
  %76 = add i64 %75, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = icmp eq i32 %78, %31
  br i1 %79, label %80, label %88

80:                                               ; preds = %74
  %81 = add i64 %75, 19
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %5, %84
  %86 = and i64 %84, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %74

88:                                               ; preds = %74, %80, %39, %45, %60, %66, %2
  %89 = phi i64 [ %15, %2 ], [ %71, %66 ], [ %61, %60 ], [ %40, %39 ], [ %50, %45 ], [ %75, %74 ], [ %85, %80 ]
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %182, label %92

92:                                               ; preds = %88
  %93 = and i64 %89, -4294967296
  %94 = add i64 %89, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %93, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = add i16 %101, -1059
  %103 = icmp ult i16 %102, 15
  br i1 %103, label %104, label %182

104:                                              ; preds = %92
  %105 = add i64 %89, 11
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %93, %108
  %110 = add i64 %109, 3
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 acquire, align 4
  %113 = zext i32 %112 to i64
  %114 = and i64 %113, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %182, label %116

116:                                              ; preds = %104
  %117 = or i64 %93, %113
  %118 = add i64 %117, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %93, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = icmp eq i16 %125, 83
  br i1 %126, label %127, label %182

127:                                              ; preds = %116
  %128 = load atomic i32, i32* %106 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %93, %129
  %131 = add i64 %130, 3
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 acquire, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %93, %134
  %136 = add i64 %135, 35
  %137 = inttoptr i64 %136 to i32*
  %138 = load atomic i32, i32* %137 acquire, align 4
  %139 = zext i32 %138 to i64
  %140 = or i64 %93, %139
  %141 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %142 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %141, null
  br i1 %142, label %149, label %143

143:                                              ; preds = %127
  %144 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %141, i64 0, i32 0, i32 1
  %145 = load i8, i8* %144, align 8, !range !5
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %141, i64 0, i32 1, i64 0
  br label %157

149:                                              ; preds = %143, %127
  %150 = and i64 %135, -262144
  %151 = or i64 %150, 16
  %152 = inttoptr i64 %151 to i64*
  %153 = load i64, i64* %152, align 16
  %154 = add i64 %153, -41416
  %155 = inttoptr i64 %154 to %"class.v8::internal::Isolate"*
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %155, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %157

157:                                              ; preds = %149, %147
  %158 = phi i64* [ %156, %149 ], [ %148, %147 ]
  %159 = getelementptr inbounds i64, i64* %158, i64 4
  %160 = load i64, i64* %159, align 8
  %161 = trunc i64 %160 to i32
  %162 = icmp eq i32 %138, %161
  br i1 %162, label %169, label %163

163:                                              ; preds = %157
  %164 = add i64 %140, 23
  %165 = inttoptr i64 %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %93, %167
  br label %169

169:                                              ; preds = %157, %163
  %170 = phi i32 [ %161, %157 ], [ %166, %163 ]
  %171 = phi i64 [ %160, %157 ], [ %168, %163 ]
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %173 = load i64, i64* %172, align 8
  %174 = trunc i64 %173 to i32
  %175 = icmp eq i32 %170, %174
  br i1 %175, label %182, label %176

176:                                              ; preds = %169
  %177 = add i64 %171, 27
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = and i32 %179, 4
  %181 = icmp ne i32 %180, 0
  br label %182

182:                                              ; preds = %104, %88, %176, %169, %116, %92
  %183 = phi i1 [ false, %92 ], [ false, %116 ], [ %181, %176 ], [ false, %169 ], [ false, %88 ], [ false, %104 ]
  ret i1 %183
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject3NewENS0_6HandleINS0_10JSFunctionEEENS2_INS0_10JSReceiverEEENS2_INS0_14AllocationSiteEEE(i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = tail call i64* @_ZN2v88internal10JSFunction13GetDerivedMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %10, i64* %0, i64* %1) #9
  %12 = icmp eq i64* %11, null
  br i1 %12, label %63, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %15 = load i64, i64* %11, align 8
  %16 = add i64 %15, 11
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2097152
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = tail call i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %14, i64* nonnull %11, i32 2, i8 zeroext 0, i64* %2) #9
  br label %25

23:                                               ; preds = %13
  %24 = tail call i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %14, i64* nonnull %11, i8 zeroext 0, i64* %2) #9
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi i64* [ %22, %21 ], [ %24, %23 ]
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 14, i32 0
  %28 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %28, i64 0, i32 190, i32 1
  %30 = load i8, i8* %29, align 8, !range !5
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %28, i64 0, i32 190, i32 0, i32 2
  %34 = load i32*, i32** %33, align 8
  br label %39

35:                                               ; preds = %25
  store i8 1, i8* %29, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %28, i64 0, i32 190, i32 0
  %37 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %36) #9
  %38 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %28, i64 0, i32 190, i32 0, i32 2
  store i32* %37, i32** %38, align 8
  br label %39

39:                                               ; preds = %35, %32
  %40 = phi i32* [ %34, %32 ], [ %37, %35 ]
  %41 = icmp eq i32* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = load i32, i32* %40, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %40, align 4
  br label %45

45:                                               ; preds = %39, %42
  %46 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %27, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %46, i64 0, i32 162, i32 1
  %48 = load i8, i8* %47, align 8, !range !5
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %46, i64 0, i32 162, i32 0, i32 2
  %52 = load i32*, i32** %51, align 8
  br label %57

53:                                               ; preds = %45
  store i8 1, i8* %47, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %46, i64 0, i32 162, i32 0
  %55 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %54) #9
  %56 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %46, i64 0, i32 162, i32 0, i32 2
  store i32* %55, i32** %56, align 8
  br label %57

57:                                               ; preds = %53, %50
  %58 = phi i32* [ %52, %50 ], [ %55, %53 ]
  %59 = icmp eq i32* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = load i32, i32* %58, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %58, align 4
  br label %63

63:                                               ; preds = %60, %57, %3
  %64 = phi i64* [ null, %3 ], [ %26, %57 ], [ %26, %60 ]
  ret i64* %64
}

declare i64* @_ZN2v88internal10JSFunction13GetDerivedMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject12ObjectCreateEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64* @_ZN2v88internal3Map18GetObjectCreateMapEPNS0_7IsolateENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1) #9
  %4 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %5 = load i64, i64* %3, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2097152
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %4, i64* %3, i32 2, i8 zeroext 0, i64* null) #9
  br label %15

13:                                               ; preds = %2
  %14 = tail call i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %4, i64* %3, i8 zeroext 0, i64* null) #9
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi i64* [ %12, %11 ], [ %14, %13 ]
  ret i64* %16
}

declare i64* @_ZN2v88internal3Map18GetObjectCreateMapEPNS0_7IsolateENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject26EnsureWritableFastElementsENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = and i64 %2, -4294967296
  %4 = add i64 %2, 7
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = and i64 %2, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = add i64 %8, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 13
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %17, %20
  br i1 %21, label %22, label %99

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 4
  %24 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %25 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %24, i64 %8) #9
  br label %41

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %14) #9
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi i64* [ %35, %34 ], [ %30, %28 ]
  %38 = ptrtoint i64* %37 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  store i64* %40, i64** %29, align 8
  store i64 %8, i64* %37, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i64* [ %27, %26 ], [ %37, %36 ]
  %43 = inttoptr i64 %13 to %"class.v8::internal::Factory"*
  %44 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %43, i64 224
  %45 = bitcast %"class.v8::internal::Factory"* %44 to i64*
  %46 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %43, i64* %42, i64* %45) #9
  %47 = load i64, i64* %0, align 8
  %48 = load i64, i64* %46, align 8
  %49 = add i64 %47, 7
  %50 = inttoptr i64 %49 to i32*
  %51 = trunc i64 %48 to i32
  store atomic volatile i32 %51, i32* %50 monotonic, align 4
  %52 = and i64 %48, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %41
  %55 = and i64 %47, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 262144
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = or i64 %55, 16
  %63 = inttoptr i64 %62 to %"class.v8::internal::Heap"**
  %64 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %63, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %64, i64 %47, i64 %49, i64 %48) #9
  br label %65

65:                                               ; preds = %61, %54, %41
  %66 = and i64 %48, -262144
  %67 = or i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 24
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %65
  %73 = and i64 %47, -262144
  %74 = or i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 24
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %72
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %47, i64 %49, i64 %48) #9
  br label %80

80:                                               ; preds = %65, %72, %79
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 14, i32 0
  %82 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %82, i64 0, i32 161, i32 1
  %84 = load i8, i8* %83, align 8, !range !5
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %82, i64 0, i32 161, i32 0, i32 2
  %88 = load i32*, i32** %87, align 8
  br label %93

89:                                               ; preds = %80
  store i8 1, i8* %83, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %82, i64 0, i32 161, i32 0
  %91 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %90) #9
  %92 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %82, i64 0, i32 161, i32 0, i32 2
  store i32* %91, i32** %92, align 8
  br label %93

93:                                               ; preds = %89, %86
  %94 = phi i32* [ %88, %86 ], [ %91, %89 ]
  %95 = icmp eq i32* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = load i32, i32* %94, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %94, align 4
  br label %99

99:                                               ; preds = %1, %96, %93
  ret void
}

declare i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  switch i16 %0, label %51 [
    i16 1056, label %52
    i16 1043, label %52
    i16 1044, label %52
    i16 1045, label %52
    i16 1057, label %52
    i16 1046, label %52
    i16 1047, label %52
    i16 1048, label %52
    i16 1049, label %52
    i16 1040, label %52
    i16 1050, label %52
    i16 1042, label %52
    i16 1051, label %52
    i16 1052, label %3
    i16 1053, label %4
    i16 1054, label %5
    i16 1088, label %6
    i16 190, label %7
    i16 189, label %8
    i16 1058, label %9
    i16 1059, label %10
    i16 1072, label %10
    i16 1073, label %10
    i16 1071, label %10
    i16 1070, label %10
    i16 1066, label %10
    i16 1067, label %10
    i16 1064, label %10
    i16 1068, label %10
    i16 1065, label %10
    i16 1062, label %10
    i16 1063, label %10
    i16 1069, label %10
    i16 1061, label %10
    i16 1060, label %10
    i16 1041, label %12
    i16 1091, label %13
    i16 1085, label %14
    i16 1086, label %15
    i16 1087, label %16
    i16 1080, label %17
    i16 1079, label %18
    i16 1082, label %19
    i16 1081, label %20
    i16 1077, label %21
    i16 1078, label %21
    i16 1074, label %22
    i16 1075, label %22
    i16 1076, label %22
    i16 1110, label %23
    i16 1095, label %24
    i16 1083, label %25
    i16 1084, label %26
    i16 1101, label %27
    i16 1102, label %28
    i16 1103, label %29
    i16 1090, label %52
    i16 1098, label %30
    i16 1055, label %52
    i16 1094, label %52
    i16 1108, label %31
    i16 191, label %32
    i16 1109, label %33
    i16 1089, label %34
    i16 1092, label %35
    i16 1093, label %36
    i16 1096, label %37
    i16 1097, label %38
    i16 1099, label %39
    i16 1100, label %40
    i16 1104, label %41
    i16 1105, label %42
    i16 1106, label %43
    i16 1107, label %44
    i16 1112, label %45
    i16 1113, label %46
    i16 1114, label %47
    i16 1115, label %48
    i16 1116, label %49
    i16 1117, label %52
    i16 1111, label %50
  ]

3:                                                ; preds = %2
  br label %52

4:                                                ; preds = %2
  br label %52

5:                                                ; preds = %2
  br label %52

6:                                                ; preds = %2
  br label %52

7:                                                ; preds = %2
  br label %52

8:                                                ; preds = %2
  br label %52

9:                                                ; preds = %2
  br label %52

10:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %11 = select i1 %1, i32 32, i32 28
  br label %52

12:                                               ; preds = %2
  br label %52

13:                                               ; preds = %2
  br label %52

14:                                               ; preds = %2
  br label %52

15:                                               ; preds = %2
  br label %52

16:                                               ; preds = %2
  br label %52

17:                                               ; preds = %2
  br label %52

18:                                               ; preds = %2
  br label %52

19:                                               ; preds = %2
  br label %52

20:                                               ; preds = %2
  br label %52

21:                                               ; preds = %2, %2
  br label %52

22:                                               ; preds = %2, %2, %2
  br label %52

23:                                               ; preds = %2
  br label %52

24:                                               ; preds = %2
  br label %52

25:                                               ; preds = %2
  br label %52

26:                                               ; preds = %2
  br label %52

27:                                               ; preds = %2
  br label %52

28:                                               ; preds = %2
  br label %52

29:                                               ; preds = %2
  br label %52

30:                                               ; preds = %2
  br label %52

31:                                               ; preds = %2
  br label %52

32:                                               ; preds = %2
  br label %52

33:                                               ; preds = %2
  br label %52

34:                                               ; preds = %2
  br label %52

35:                                               ; preds = %2
  br label %52

36:                                               ; preds = %2
  br label %52

37:                                               ; preds = %2
  br label %52

38:                                               ; preds = %2
  br label %52

39:                                               ; preds = %2
  br label %52

40:                                               ; preds = %2
  br label %52

41:                                               ; preds = %2
  br label %52

42:                                               ; preds = %2
  br label %52

43:                                               ; preds = %2
  br label %52

44:                                               ; preds = %2
  br label %52

45:                                               ; preds = %2
  br label %52

46:                                               ; preds = %2
  br label %52

47:                                               ; preds = %2
  br label %52

48:                                               ; preds = %2
  br label %52

49:                                               ; preds = %2
  br label %52

50:                                               ; preds = %2
  br label %52

51:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

52:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %10, %9, %8, %7, %6, %5, %4, %3
  %53 = phi i32 [ 20, %50 ], [ 36, %49 ], [ 24, %48 ], [ 24, %47 ], [ 216, %46 ], [ 36, %45 ], [ 24, %44 ], [ 24, %43 ], [ 24, %42 ], [ 28, %41 ], [ 28, %40 ], [ 24, %39 ], [ 16, %38 ], [ 24, %37 ], [ 20, %36 ], [ 36, %35 ], [ 24, %34 ], [ 44, %33 ], [ 16, %32 ], [ 20, %31 ], [ 48, %30 ], [ 24, %29 ], [ 24, %28 ], [ 20, %27 ], [ 16, %26 ], [ 16, %25 ], [ 40, %24 ], [ 16, %23 ], [ 20, %22 ], [ 20, %21 ], [ 16, %20 ], [ 16, %19 ], [ 40, %18 ], [ 56, %17 ], [ 24, %16 ], [ 48, %15 ], [ 16, %14 ], [ 48, %13 ], [ 16, %12 ], [ %11, %10 ], [ 24, %9 ], [ 20, %8 ], [ 16, %7 ], [ 20, %6 ], [ 48, %5 ], [ 44, %4 ], [ 40, %3 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ], [ 12, %2 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject10AllCanReadEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  br label %3

3:                                                ; preds = %35, %1
  %4 = load i32, i32* %2, align 4
  switch i32 %4, label %35 [
    i32 4, label %36
    i32 5, label %5
    i32 2, label %27
    i32 3, label %36
  ]

5:                                                ; preds = %3
  %6 = tail call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* %0) #9
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %5
  %11 = and i64 %7, -4294967296
  %12 = add i64 %7, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 86
  br i1 %20, label %21, label %35

21:                                               ; preds = %10
  %22 = add i64 %7, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %35, label %36

27:                                               ; preds = %3
  %28 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0)
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 35
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %21, %27, %3, %5, %10
  tail call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %3

36:                                               ; preds = %21, %27, %3, %3
  %37 = phi i1 [ true, %27 ], [ false, %3 ], [ true, %21 ], [ false, %3 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject32GetPropertyWithFailedAccessCheckEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = tail call i64* @_ZNK2v88internal14LookupIterator34GetInterceptorForFailedAccessCheckEv(%"class.v8::internal::LookupIterator"* %0) #9
  %9 = icmp eq i64* %8, null
  br i1 %9, label %10, label %32

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZN2v88internal8JSObject10AllCanReadEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0)
  br i1 %11, label %12, label %42

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  br label %14

14:                                               ; preds = %12, %30
  %15 = load i32, i32* %13, align 4
  %16 = icmp eq i32 %15, 5
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = tail call i64* @_ZN2v88internal6Object23GetPropertyWithAccessorEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0) #9
  %19 = ptrtoint i64* %18 to i64
  br label %94

20:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #9
  %21 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0) #9
  %22 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_134GetPropertyWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEEPb(%"class.v8::internal::LookupIterator"* %0, i64* %21, i8* nonnull %2) #9
  %23 = icmp eq i64* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #9
  br label %94

25:                                               ; preds = %20
  %26 = load i8, i8* %2, align 1, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %25
  %29 = ptrtoint i64* %22 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #9
  br label %94

30:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #9
  %31 = tail call zeroext i1 @_ZN2v88internal8JSObject10AllCanReadEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0)
  br i1 %31, label %14, label %42

32:                                               ; preds = %1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %33 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_134GetPropertyWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEEPb(%"class.v8::internal::LookupIterator"* %0, i64* nonnull %8, i8* nonnull %3)
  %34 = icmp eq i64* %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  br label %94

36:                                               ; preds = %32
  %37 = load i8, i8* %3, align 1, !range !5
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = ptrtoint i64* %33 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  br label %94

41:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  br label %42

42:                                               ; preds = %30, %10, %41
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %44 = getelementptr inbounds %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137"* %43, i64 0, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %45, null
  br i1 %46, label %47, label %55

47:                                               ; preds = %42
  %48 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %49 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %51 = load i64, i64* %50, align 8
  %52 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %49, i64 %51, i1 zeroext true) #9
  %53 = ptrtoint i64* %52 to i64
  %54 = bitcast %"class.v8::internal::Handle.1137"* %43 to i64*
  store i64 %53, i64* %54, align 8
  br label %55

55:                                               ; preds = %42, %47
  %56 = phi i64* [ %52, %47 ], [ %45, %42 ]
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, -4294967296
  %59 = add i64 %57, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %58, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = icmp eq i16 %66, 64
  br i1 %67, label %68, label %79

68:                                               ; preds = %55
  %69 = add i64 %57, 7
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %76 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %76, i64 160
  %78 = ptrtoint %"class.v8::internal::Factory"* %77 to i64
  br label %94

79:                                               ; preds = %68, %55
  tail call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %5, i64* %7) #9
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 5
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = trunc i64 %83 to i32
  %85 = trunc i64 %81 to i32
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = tail call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %5) #9
  br label %94

89:                                               ; preds = %79
  %90 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %91 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %91, i64 160
  %93 = ptrtoint %"class.v8::internal::Factory"* %92 to i64
  br label %94

94:                                               ; preds = %74, %89, %87, %39, %35, %28, %24, %17
  %95 = phi i64 [ %19, %17 ], [ %29, %28 ], [ 0, %24 ], [ %40, %39 ], [ 0, %35 ], [ %78, %74 ], [ 0, %87 ], [ %93, %89 ]
  %96 = inttoptr i64 %95 to i64*
  ret i64* %96
}

declare i64* @_ZNK2v88internal14LookupIterator34GetInterceptorForFailedAccessCheckEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object23GetPropertyWithAccessorEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject26GetPropertyWithInterceptorEPNS0_14LookupIteratorEPb(%"class.v8::internal::LookupIterator"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0)
  %4 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_134GetPropertyWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEEPb(%"class.v8::internal::LookupIterator"* %0, i64* %3, i8* %1)
  ret i64* %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_134GetPropertyWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEEPb(%"class.v8::internal::LookupIterator"* nocapture readonly, i64*, i8* nocapture) unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  store i8 0, i8* %2, align 1
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = load i64, i64* %1, align 8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 4
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %12, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = ptrtoint i64* %13 to i64
  br label %210

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %19
  %28 = and i64 %24, -4294967296
  %29 = add i64 %24, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp ugt i16 %36, 185
  br i1 %37, label %44, label %38

38:                                               ; preds = %19, %27
  %39 = tail call i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %8, i64* %23) #9
  %40 = icmp eq i64* %39, null
  br i1 %40, label %210, label %41

41:                                               ; preds = %38
  %42 = load i64, i64* %1, align 8
  %43 = load i64, i64* %39, align 8
  br label %44

44:                                               ; preds = %41, %27
  %45 = phi i64 [ %24, %27 ], [ %43, %41 ]
  %46 = phi i64 [ %9, %27 ], [ %42, %41 ]
  %47 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %47) #9
  %48 = and i64 %46, -4294967296
  %49 = add i64 %46, 31
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = load i64, i64* %21, align 8
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %6, %"class.v8::internal::Isolate"* %8, i64 %53, i64 %45, i64 %54, i64 4294967297) #9
  %55 = load i64, i64* %21, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %57 = load i64, i64* %56, align 8
  %58 = icmp ult i64 %57, 4294967295
  br i1 %58, label %74, label %59

59:                                               ; preds = %44
  %60 = icmp eq i64 %57, -1
  br i1 %60, label %117, label %61

61:                                               ; preds = %59
  %62 = and i64 %55, -4294967296
  %63 = add i64 %55, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = add i64 %67, 10
  %69 = inttoptr i64 %68 to i8*
  %70 = load i8, i8* %69, align 1
  %71 = lshr i8 %70, 2
  %72 = add nsw i8 %71, -17
  %73 = icmp ult i8 %72, 22
  br i1 %73, label %74, label %117

74:                                               ; preds = %44, %61
  %75 = trunc i64 %57 to i32
  %76 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 1, i64 2
  %77 = bitcast i64* %76 to %"class.v8::internal::Isolate"**
  %78 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %77, align 8
  %79 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %79) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 40, i1 false) #9
  %80 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %88, label %82, !prof !4

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %84 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %78, i64 0, i32 14, i32 0
  %86 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %86, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %87, %"class.v8::internal::RuntimeCallStats"** %83, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %87, %"class.v8::internal::RuntimeCallTimer"* %84, i32 186) #9
  br label %88

88:                                               ; preds = %82, %74
  %89 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %78, i64 0, i32 21
  %93 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 1, i64 1
  %95 = load i64, i64* %94, align 8
  call void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"* %93, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0), i64 %95, i32 %75) #9
  br label %96

96:                                               ; preds = %91, %88
  %97 = load i64, i64* %1, align 8
  %98 = add i64 %97, 3
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %109, label %102

102:                                              ; preds = %96
  %103 = and i64 %97, -4294967296
  %104 = zext i32 %100 to i64
  %105 = or i64 %103, %104
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to void (i32, %"class.v8::PropertyCallbackInfo"*)**
  %108 = load void (i32, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::PropertyCallbackInfo"*)** %107, align 1
  br label %109

109:                                              ; preds = %102, %96
  %110 = phi void (i32, %"class.v8::PropertyCallbackInfo"*)* [ %108, %102 ], [ null, %96 ]
  %111 = call i64* @_ZN2v88internal25PropertyCallbackArguments30BasicCallIndexedGetterCallbackEPFvjRKNS_20PropertyCallbackInfoINS_5ValueEEEEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %6, void (i32, %"class.v8::PropertyCallbackInfo"*)* %110, i32 %75, i64* %1) #9
  %112 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %113 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %112, align 8
  %114 = icmp eq %"class.v8::internal::RuntimeCallStats"* %113, null
  br i1 %114, label %162, label %115, !prof !4

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %113, %"class.v8::internal::RuntimeCallTimer"* %116) #9
  br label %162

117:                                              ; preds = %59, %61
  %118 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 1, i64 2
  %121 = bitcast i64* %120 to %"class.v8::internal::Isolate"**
  %122 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %121, align 8
  %123 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 40, i1 false) #9
  %124 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %132, label %126, !prof !4

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %128 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %122, i64 0, i32 14, i32 0
  %130 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %130, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %131, %"class.v8::internal::RuntimeCallStats"** %127, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %131, %"class.v8::internal::RuntimeCallTimer"* %128, i32 186) #9
  br label %132

132:                                              ; preds = %126, %117
  %133 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %141, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %122, i64 0, i32 21
  %137 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 1, i64 1
  %139 = load i64, i64* %138, align 8
  %140 = load i64, i64* %119, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %137, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.74, i64 0, i64 0), i64 %139, i64 %140) #9
  br label %141

141:                                              ; preds = %135, %132
  %142 = load i64, i64* %1, align 8
  %143 = add i64 %142, 3
  %144 = inttoptr i64 %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %154, label %147

147:                                              ; preds = %141
  %148 = and i64 %142, -4294967296
  %149 = zext i32 %145 to i64
  %150 = or i64 %148, %149
  %151 = add i64 %150, 3
  %152 = inttoptr i64 %151 to void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)**
  %153 = load void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)** %152, align 1
  br label %154

154:                                              ; preds = %147, %141
  %155 = phi void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* [ %153, %147 ], [ null, %141 ]
  %156 = call i64* @_ZN2v88internal25PropertyCallbackArguments28BasicCallNamedGetterCallbackEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEENS0_6HandleINS0_4NameEEENSC_INS0_6ObjectEEESG_(%"class.v8::internal::PropertyCallbackArguments"* nonnull %6, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* %155, i64* %119, i64* %1, i64* null) #9
  %157 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %158 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %157, align 8
  %159 = icmp eq %"class.v8::internal::RuntimeCallStats"* %158, null
  br i1 %159, label %162, label %160, !prof !4

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %158, %"class.v8::internal::RuntimeCallTimer"* %161) #9
  br label %162

162:                                              ; preds = %160, %154, %115, %109
  %163 = phi i8* [ %79, %109 ], [ %79, %115 ], [ %123, %154 ], [ %123, %160 ]
  %164 = phi i64* [ %111, %109 ], [ %111, %115 ], [ %156, %154 ], [ %156, %160 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %163) #9
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 5
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = trunc i64 %168 to i32
  %170 = trunc i64 %166 to i32
  %171 = icmp eq i32 %169, %170
  br i1 %171, label %174, label %172

172:                                              ; preds = %162
  %173 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %8) #9
  br label %199

174:                                              ; preds = %162
  %175 = icmp eq i64* %164, null
  br i1 %175, label %176, label %178

176:                                              ; preds = %174
  %177 = ptrtoint i64* %13 to i64
  br label %199

178:                                              ; preds = %174
  store i8 1, i8* %2, align 1
  %179 = load i64, i64* %164, align 8
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %181 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %180, align 8
  %182 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %178
  %184 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %181, i64 %179) #9
  %185 = ptrtoint i64* %184 to i64
  br label %199

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %188 = load i64*, i64** %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %190 = load i64*, i64** %189, align 8
  %191 = icmp eq i64* %188, %190
  br i1 %191, label %192, label %194

192:                                              ; preds = %186
  %193 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #9
  br label %194

194:                                              ; preds = %192, %186
  %195 = phi i64* [ %193, %192 ], [ %188, %186 ]
  %196 = ptrtoint i64* %195 to i64
  %197 = add i64 %196, 8
  %198 = inttoptr i64 %197 to i64*
  store i64* %198, i64** %187, align 8
  store i64 %179, i64* %195, align 8
  br label %199

199:                                              ; preds = %194, %183, %172, %176
  %200 = phi i64 [ 0, %172 ], [ %177, %176 ], [ %185, %183 ], [ %196, %194 ]
  %201 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %202 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 1, i64 4
  store i64 1994495044801650351, i64* %202, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %201, align 8
  %203 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %204 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %206 = bitcast %"class.v8::internal::Relocatable"** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %204, i64 0, i32 91
  %209 = bitcast %"class.v8::internal::Relocatable"** %208 to i64*
  store i64 %207, i64* %209, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %47) #9
  br label %210

210:                                              ; preds = %199, %38, %17
  %211 = phi i64 [ %18, %17 ], [ %200, %199 ], [ 0, %38 ]
  %212 = inttoptr i64 %211 to i64*
  ret i64* %212
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internal12_GLOBAL__N_144GetPropertyAttributesWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEE(%"class.v8::internal::LookupIterator"* nocapture readonly, i64*) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %4 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %5 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %2
  %26 = and i64 %22, -4294967296
  %27 = add i64 %22, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = icmp ugt i16 %34, 185
  br i1 %35, label %41, label %36

36:                                               ; preds = %2, %25
  %37 = tail call i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %9, i64* %21) #9
  %38 = icmp eq i64* %37, null
  br i1 %38, label %241, label %39

39:                                               ; preds = %36
  %40 = load i64, i64* %37, align 8
  br label %41

41:                                               ; preds = %39, %25
  %42 = phi i64 [ %22, %25 ], [ %40, %39 ]
  %43 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %43) #9
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 31
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = load i64, i64* %19, align 8
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, %"class.v8::internal::Isolate"* %9, i64 %50, i64 %42, i64 %51, i64 4294967297) #9
  %52 = load i64, i64* %1, align 8
  %53 = add i64 %52, 11
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 4
  %57 = load i64, i64* %56, align 8
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %55, %58
  br i1 %59, label %103, label %60

60:                                               ; preds = %41
  %61 = load i64, i64* %19, align 8
  %62 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %63 = load i64, i64* %62, align 8
  %64 = icmp ult i64 %63, 4294967295
  br i1 %64, label %80, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %63, -1
  br i1 %66, label %83, label %67

67:                                               ; preds = %65
  %68 = and i64 %61, -4294967296
  %69 = add i64 %61, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %68, %72
  %74 = add i64 %73, 10
  %75 = inttoptr i64 %74 to i8*
  %76 = load i8, i8* %75, align 1
  %77 = lshr i8 %76, 2
  %78 = add nsw i8 %77, -17
  %79 = icmp ult i8 %78, 22
  br i1 %79, label %80, label %83

80:                                               ; preds = %60, %67
  %81 = trunc i64 %63 to i32
  %82 = call i64* @_ZN2v88internal25PropertyCallbackArguments16CallIndexedQueryENS0_6HandleINS0_15InterceptorInfoEEEj(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, i64* %1, i32 %81)
  br label %87

83:                                               ; preds = %65, %67
  %84 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = call i64* @_ZN2v88internal25PropertyCallbackArguments14CallNamedQueryENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, i64* %1, i64* %85)
  br label %87

87:                                               ; preds = %83, %80
  %88 = phi i64* [ %82, %80 ], [ %86, %83 ]
  %89 = icmp eq i64* %88, null
  br i1 %89, label %220, label %90

90:                                               ; preds = %87
  %91 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #9
  %92 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #9
  %93 = load i64, i64* %88, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0
  %96 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %95, i32* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #9
  br i1 %96, label %98, label %97, !prof !4

97:                                               ; preds = %90
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.75, i64 0, i64 0)) #14
  unreachable

98:                                               ; preds = %90
  %99 = load i32, i32* %6, align 4
  %100 = zext i32 %99 to i64
  %101 = shl nuw i64 %100, 32
  %102 = or i64 %101, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #9
  br label %230

103:                                              ; preds = %41
  %104 = add i64 %52, 3
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, %55
  br i1 %107, label %220, label %108

108:                                              ; preds = %103
  %109 = load i64, i64* %19, align 8
  %110 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %111 = load i64, i64* %110, align 8
  %112 = icmp ult i64 %111, 4294967295
  br i1 %112, label %128, label %113

113:                                              ; preds = %108
  %114 = icmp eq i64 %111, -1
  br i1 %114, label %171, label %115

115:                                              ; preds = %113
  %116 = and i64 %109, -4294967296
  %117 = add i64 %109, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %116, %120
  %122 = add i64 %121, 10
  %123 = inttoptr i64 %122 to i8*
  %124 = load i8, i8* %123, align 1
  %125 = lshr i8 %124, 2
  %126 = add nsw i8 %125, -17
  %127 = icmp ult i8 %126, 22
  br i1 %127, label %128, label %171

128:                                              ; preds = %108, %115
  %129 = trunc i64 %111 to i32
  %130 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 2
  %131 = bitcast i64* %130 to %"class.v8::internal::Isolate"**
  %132 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %131, align 8
  %133 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %133) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 40, i1 false) #9
  %134 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %142, label %136, !prof !4

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %138 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 14, i32 0
  %140 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %140, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %141, %"class.v8::internal::RuntimeCallStats"** %137, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %141, %"class.v8::internal::RuntimeCallTimer"* %138, i32 186) #9
  br label %142

142:                                              ; preds = %136, %128
  %143 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %150, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 21
  %147 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 1
  %149 = load i64, i64* %148, align 8
  call void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"* %147, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0), i64 %149, i32 %129) #9
  br label %150

150:                                              ; preds = %145, %142
  %151 = load i64, i64* %1, align 8
  %152 = add i64 %151, 3
  %153 = inttoptr i64 %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %163, label %156

156:                                              ; preds = %150
  %157 = and i64 %151, -4294967296
  %158 = zext i32 %154 to i64
  %159 = or i64 %157, %158
  %160 = add i64 %159, 3
  %161 = inttoptr i64 %160 to void (i32, %"class.v8::PropertyCallbackInfo"*)**
  %162 = load void (i32, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::PropertyCallbackInfo"*)** %161, align 1
  br label %163

163:                                              ; preds = %156, %150
  %164 = phi void (i32, %"class.v8::PropertyCallbackInfo"*)* [ %162, %156 ], [ null, %150 ]
  %165 = call i64* @_ZN2v88internal25PropertyCallbackArguments30BasicCallIndexedGetterCallbackEPFvjRKNS_20PropertyCallbackInfoINS_5ValueEEEEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, void (i32, %"class.v8::PropertyCallbackInfo"*)* %164, i32 %129, i64* %1) #9
  %166 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %167 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %166, align 8
  %168 = icmp eq %"class.v8::internal::RuntimeCallStats"* %167, null
  br i1 %168, label %216, label %169, !prof !4

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %167, %"class.v8::internal::RuntimeCallTimer"* %170) #9
  br label %216

171:                                              ; preds = %113, %115
  %172 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %173 = load i64*, i64** %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 2
  %175 = bitcast i64* %174 to %"class.v8::internal::Isolate"**
  %176 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %175, align 8
  %177 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %177) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 0, i64 40, i1 false) #9
  %178 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %186, label %180, !prof !4

180:                                              ; preds = %171
  %181 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %182 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %176, i64 0, i32 14, i32 0
  %184 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %184, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %185, %"class.v8::internal::RuntimeCallStats"** %181, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %185, %"class.v8::internal::RuntimeCallTimer"* %182, i32 186) #9
  br label %186

186:                                              ; preds = %180, %171
  %187 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %195, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %176, i64 0, i32 21
  %191 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %190, align 8
  %192 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 1
  %193 = load i64, i64* %192, align 8
  %194 = load i64, i64* %173, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %191, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.74, i64 0, i64 0), i64 %193, i64 %194) #9
  br label %195

195:                                              ; preds = %189, %186
  %196 = load i64, i64* %1, align 8
  %197 = add i64 %196, 3
  %198 = inttoptr i64 %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %208, label %201

201:                                              ; preds = %195
  %202 = and i64 %196, -4294967296
  %203 = zext i32 %199 to i64
  %204 = or i64 %202, %203
  %205 = add i64 %204, 3
  %206 = inttoptr i64 %205 to void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)**
  %207 = load void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)** %206, align 1
  br label %208

208:                                              ; preds = %201, %195
  %209 = phi void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* [ %207, %201 ], [ null, %195 ]
  %210 = call i64* @_ZN2v88internal25PropertyCallbackArguments28BasicCallNamedGetterCallbackEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEENS0_6HandleINS0_4NameEEENSC_INS0_6ObjectEEESG_(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* %209, i64* %173, i64* %1, i64* null) #9
  %211 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %212 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %211, align 8
  %213 = icmp eq %"class.v8::internal::RuntimeCallStats"* %212, null
  br i1 %213, label %216, label %214, !prof !4

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %212, %"class.v8::internal::RuntimeCallTimer"* %215) #9
  br label %216

216:                                              ; preds = %214, %208, %169, %163
  %217 = phi i8* [ %133, %163 ], [ %133, %169 ], [ %177, %208 ], [ %177, %214 ]
  %218 = phi i64* [ %165, %163 ], [ %165, %169 ], [ %210, %208 ], [ %210, %214 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %217) #9
  %219 = icmp eq i64* %218, null
  br i1 %219, label %220, label %230

220:                                              ; preds = %216, %87, %103
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 5
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = trunc i64 %224 to i32
  %226 = trunc i64 %222 to i32
  %227 = icmp eq i32 %225, %226
  br i1 %227, label %230, label %228

228:                                              ; preds = %220
  %229 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %9) #9
  br label %230

230:                                              ; preds = %220, %228, %216, %98
  %231 = phi i64 [ 0, %228 ], [ %102, %98 ], [ 8589934593, %216 ], [ 274877906945, %220 ]
  %232 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 4
  store i64 1994495044801650351, i64* %233, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %232, align 8
  %234 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %235 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %234, align 8
  %236 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %237 = bitcast %"class.v8::internal::Relocatable"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %235, i64 0, i32 91
  %240 = bitcast %"class.v8::internal::Relocatable"** %239 to i64*
  store i64 %238, i64* %240, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %43) #9
  br label %241

241:                                              ; preds = %36, %230
  %242 = phi i64 [ %231, %230 ], [ 0, %36 ]
  %243 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %241
  %245 = inttoptr i64 %12 to i64*
  %246 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %247 = load i64*, i64** %246, align 8
  store i64 %12, i64* %11, align 8
  %248 = load i32, i32* %15, align 8
  %249 = add nsw i32 %248, -1
  store i32 %249, i32* %15, align 8
  %250 = load i64*, i64** %13, align 8
  %251 = icmp eq i64* %250, %14
  br i1 %251, label %254, label %252

252:                                              ; preds = %244
  store i64* %14, i64** %13, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #9
  %253 = load i64*, i64** %246, align 8
  br label %254

254:                                              ; preds = %252, %244
  %255 = phi i64* [ %253, %252 ], [ %245, %244 ]
  %256 = phi i64* [ %14, %252 ], [ %247, %244 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %255, i64* %256) #9
  br label %257

257:                                              ; preds = %241, %254
  ret i64 %242
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject11AllCanWriteEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  br label %3

3:                                                ; preds = %27, %1
  %4 = load i32, i32* %2, align 4
  switch i32 %4, label %27 [
    i32 4, label %28
    i32 3, label %28
    i32 5, label %5
  ]

5:                                                ; preds = %3
  %6 = tail call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* %0) #9
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = and i64 %7, -4294967296
  %12 = add i64 %7, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 86
  br i1 %20, label %21, label %27

21:                                               ; preds = %10
  %22 = add i64 %7, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %21, %3, %5, %10
  tail call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %3

28:                                               ; preds = %21, %3, %3
  %29 = phi i1 [ false, %3 ], [ true, %21 ], [ false, %3 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject32SetPropertyWithFailedAccessCheckEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = tail call i64* @_ZNK2v88internal14LookupIterator34GetInterceptorForFailedAccessCheckEv(%"class.v8::internal::LookupIterator"* %0) #9
  %9 = icmp eq i64* %8, null
  br i1 %9, label %10, label %39

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  br label %12

12:                                               ; preds = %36, %10
  %13 = load i32, i32* %11, align 4
  switch i32 %13, label %36 [
    i32 4, label %51
    i32 3, label %51
    i32 5, label %14
  ]

14:                                               ; preds = %12
  %15 = tail call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* %0) #9
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %36, label %19

19:                                               ; preds = %14
  %20 = and i64 %16, -4294967296
  %21 = add i64 %16, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = icmp eq i16 %28, 86
  br i1 %29, label %30, label %36

30:                                               ; preds = %19
  %31 = add i64 %16, 7
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %30, %19, %14, %12
  tail call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %12

37:                                               ; preds = %30
  %38 = tail call i16 @_ZN2v88internal6Object23SetPropertyWithAccessorEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %2) #9
  br label %61

39:                                               ; preds = %3
  %40 = tail call fastcc i16 @_ZN2v88internal12_GLOBAL__N_134SetPropertyWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEENS_5MaybeINS0_11ShouldThrowEEENS4_INS0_6ObjectEEE(%"class.v8::internal::LookupIterator"* %0, i64* nonnull %8, i64 %2, i64* %1)
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 5
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = trunc i64 %42 to i32
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %61

48:                                               ; preds = %39
  %49 = trunc i16 %40 to i8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %61

51:                                               ; preds = %12, %12, %48
  tail call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %5, i64* %7) #9
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 5
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = trunc i64 %53 to i32
  %58 = icmp eq i32 %56, %57
  br i1 %58, label %61, label %59

59:                                               ; preds = %51
  %60 = tail call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %5) #9
  br label %61

61:                                               ; preds = %51, %39, %59, %48, %37
  %62 = phi i16 [ %38, %37 ], [ 0, %59 ], [ %40, %48 ], [ 257, %51 ], [ 0, %39 ]
  ret i16 %62
}

declare i16 @_ZN2v88internal6Object23SetPropertyWithAccessorEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i16 @_ZN2v88internal12_GLOBAL__N_134SetPropertyWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEENS_5MaybeINS0_11ShouldThrowEEENS4_INS0_6ObjectEEE(%"class.v8::internal::LookupIterator"* nocapture readonly, i64*, i64, i64*) unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = load i64, i64* %1, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %11, %14
  br i1 %15, label %106, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %16
  %25 = and i64 %21, -4294967296
  %26 = add i64 %21, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp ugt i16 %33, 185
  br i1 %34, label %41, label %35

35:                                               ; preds = %16, %24
  %36 = tail call i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %7, i64* %20) #9
  %37 = icmp eq i64* %36, null
  br i1 %37, label %106, label %38

38:                                               ; preds = %35
  %39 = load i64, i64* %1, align 8
  %40 = load i64, i64* %36, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = phi i64 [ %21, %24 ], [ %40, %38 ]
  %43 = phi i64 [ %8, %24 ], [ %39, %38 ]
  %44 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %44) #9
  %45 = and i64 %43, -4294967296
  %46 = add i64 %43, 31
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = load i64, i64* %18, align 8
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, %"class.v8::internal::Isolate"* %7, i64 %50, i64 %42, i64 %51, i64 %2) #9
  %52 = load i64, i64* %18, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %54, 4294967295
  br i1 %55, label %71, label %56

56:                                               ; preds = %41
  %57 = icmp eq i64 %54, -1
  br i1 %57, label %74, label %58

58:                                               ; preds = %56
  %59 = and i64 %52, -4294967296
  %60 = add i64 %52, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %59, %63
  %65 = add i64 %64, 10
  %66 = inttoptr i64 %65 to i8*
  %67 = load i8, i8* %66, align 1
  %68 = lshr i8 %67, 2
  %69 = add nsw i8 %68, -17
  %70 = icmp ult i8 %69, 22
  br i1 %70, label %71, label %74

71:                                               ; preds = %41, %58
  %72 = trunc i64 %54 to i32
  %73 = call i64* @_ZN2v88internal25PropertyCallbackArguments17CallIndexedSetterENS0_6HandleINS0_15InterceptorInfoEEEjNS2_INS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, i64* %1, i32 %72, i64* %3)
  br label %78

74:                                               ; preds = %56, %58
  %75 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = call i64* @_ZN2v88internal25PropertyCallbackArguments15CallNamedSetterENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEENS2_INS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %5, i64* %1, i64* %76, i64* %3)
  br label %78

78:                                               ; preds = %71, %74
  %79 = phi i64* [ %73, %71 ], [ %77, %74 ]
  %80 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %80, i64 0, i32 0, i32 7, i32 0, i64 5
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %80, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i32
  %86 = trunc i64 %82 to i32
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %78
  %89 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %80) #9
  br label %95

90:                                               ; preds = %78
  %91 = icmp ne i64* %79, null
  %92 = zext i1 %91 to i16
  %93 = shl nuw nsw i16 %92, 8
  %94 = or i16 %93, 1
  br label %95

95:                                               ; preds = %88, %90
  %96 = phi i16 [ %94, %90 ], [ 0, %88 ]
  %97 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 1, i64 4
  store i64 1994495044801650351, i64* %98, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %100 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %102 = bitcast %"class.v8::internal::Relocatable"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %100, i64 0, i32 91
  %105 = bitcast %"class.v8::internal::Relocatable"** %104 to i64*
  store i64 %103, i64* %105, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %44) #9
  br label %106

106:                                              ; preds = %95, %35, %4
  %107 = phi i16 [ 1, %4 ], [ %96, %95 ], [ 0, %35 ]
  ret i16 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject21SetNormalizedPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_15PropertyDetailsE(i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", align 8
  %7 = load i64, i64* %0, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = load i64, i64* %1, align 8
  %15 = add i64 %14, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = lshr i32 %17, 2
  %19 = and i64 %7, -4294967296
  %20 = add i64 %7, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %19, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 189
  %29 = add i64 %7, 3
  %30 = inttoptr i64 %29 to i32*
  br i1 %28, label %31, label %151

31:                                               ; preds = %4
  %32 = load atomic i32, i32* %30 acquire, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %19, %33
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %34) #9
  %40 = load i64, i64* %39, align 8
  br label %54

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi i64* [ %48, %47 ], [ %43, %41 ]
  %51 = ptrtoint i64* %50 to i64
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  store i64* %53, i64** %42, align 8
  store i64 %34, i64* %50, align 8
  br label %54

54:                                               ; preds = %38, %49
  %55 = phi i64 [ %40, %38 ], [ %34, %49 ]
  %56 = phi i64* [ %39, %38 ], [ %50, %49 ]
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %55, 15
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = ashr i32 %61, 1
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 4
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 5
  %66 = load i64, i64* %65, align 8
  %67 = add nsw i32 %62, -1
  %68 = and i32 %67, %18
  %69 = shl nuw i32 %68, 2
  %70 = add i32 %69, 20
  %71 = sext i32 %70 to i64
  %72 = add i64 %55, 7
  %73 = add i64 %72, %71
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = trunc i64 %64 to i32
  %77 = icmp eq i32 %75, %76
  br i1 %77, label %105, label %78

78:                                               ; preds = %54
  %79 = trunc i64 %66 to i32
  br label %80

80:                                               ; preds = %94, %78
  %81 = phi i32 [ %75, %78 ], [ %103, %94 ]
  %82 = phi i32 [ %68, %78 ], [ %97, %94 ]
  %83 = phi i32 [ 1, %78 ], [ %95, %94 ]
  %84 = icmp eq i32 %81, %79
  br i1 %84, label %94, label %85

85:                                               ; preds = %80
  %86 = zext i32 %81 to i64
  %87 = or i64 %58, %86
  %88 = load i64, i64* %1, align 8
  %89 = add i64 %87, 3
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = trunc i64 %88 to i32
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %148, label %94

94:                                               ; preds = %85, %80
  %95 = add i32 %83, 1
  %96 = add i32 %83, %82
  %97 = and i32 %96, %67
  %98 = shl i32 %97, 2
  %99 = add i32 %98, 20
  %100 = sext i32 %99 to i64
  %101 = add i64 %72, %100
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = icmp eq i32 %103, %76
  br i1 %104, label %105, label %80

105:                                              ; preds = %94, %54
  %106 = load i64, i64* %2, align 8
  %107 = trunc i64 %106 to i32
  %108 = icmp eq i32 %107, %76
  %109 = select i1 %108, i32 64, i32 128
  %110 = and i32 %3, -193
  %111 = or i32 %109, %110
  %112 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %113 = tail call i64* @_ZN2v88internal7Factory15NewPropertyCellENS0_6HandleINS0_4NameEEENS0_15PropertyDetailsENS2_INS0_6ObjectEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %112, i64* %1, i32 %111, i64* %2, i8 zeroext 1) #9
  %114 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %13, i64* %56, i64* %1, i64* %113, i32 %111, %"class.v8::internal::InternalIndex"* null) #9
  %115 = load i64, i64* %0, align 8
  %116 = load i64, i64* %114, align 8
  %117 = add i64 %115, 3
  %118 = inttoptr i64 %117 to i32*
  %119 = trunc i64 %116 to i32
  store atomic volatile i32 %119, i32* %118 release, align 4
  %120 = and i64 %116, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %133, label %122

122:                                              ; preds = %105
  %123 = and i64 %115, -262144
  %124 = or i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 262144
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %122
  %130 = or i64 %123, 16
  %131 = inttoptr i64 %130 to %"class.v8::internal::Heap"**
  %132 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %131, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %132, i64 %115, i64 %117, i64 %116) #9
  br label %133

133:                                              ; preds = %129, %122, %105
  %134 = and i64 %116, -262144
  %135 = or i64 %134, 8
  %136 = inttoptr i64 %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, 24
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %263, label %140

140:                                              ; preds = %133
  %141 = and i64 %115, -262144
  %142 = or i64 %141, 8
  %143 = inttoptr i64 %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, 24
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %263

147:                                              ; preds = %140
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %115, i64 %117, i64 %116) #9
  br label %263

148:                                              ; preds = %85
  %149 = zext i32 %82 to i64
  %150 = tail call i64* @_ZN2v88internal12PropertyCell21PrepareForAndSetValueEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS4_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %13, i64* %56, i64 %149, i64* %2, i32 %3) #9
  br label %263

151:                                              ; preds = %4
  %152 = load i32, i32* %30, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %19, %153
  %155 = and i64 %153, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %172

157:                                              ; preds = %151
  %158 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %159 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %158, i64 0, i32 0, i32 1
  %162 = load i8, i8* %161, align 8, !range !5
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %158, i64 0, i32 1, i64 0
  br label %168

166:                                              ; preds = %160, %157
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %168

168:                                              ; preds = %166, %164
  %169 = phi i64* [ %167, %166 ], [ %165, %164 ]
  %170 = getelementptr inbounds i64, i64* %169, i64 115
  %171 = load i64, i64* %170, align 8
  br label %172

172:                                              ; preds = %151, %168
  %173 = phi i64 [ %171, %168 ], [ %154, %151 ]
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %175 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %174, align 8
  %176 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %175, null
  br i1 %176, label %180, label %177

177:                                              ; preds = %172
  %178 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %175, i64 %173) #9
  %179 = load i64, i64* %178, align 8
  br label %193

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %182 = load i64*, i64** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %184 = load i64*, i64** %183, align 8
  %185 = icmp eq i64* %182, %184
  br i1 %185, label %186, label %188

186:                                              ; preds = %180
  %187 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %188

188:                                              ; preds = %186, %180
  %189 = phi i64* [ %187, %186 ], [ %182, %180 ]
  %190 = ptrtoint i64* %189 to i64
  %191 = add i64 %190, 8
  %192 = inttoptr i64 %191 to i64*
  store i64* %192, i64** %181, align 8
  store i64 %173, i64* %189, align 8
  br label %193

193:                                              ; preds = %177, %188
  %194 = phi i64 [ %179, %177 ], [ %173, %188 ]
  %195 = phi i64* [ %178, %177 ], [ %189, %188 ]
  %196 = load i64, i64* %1, align 8
  %197 = add i64 %196, 3
  %198 = inttoptr i64 %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = lshr i32 %199, 2
  %201 = add i64 %194, 15
  %202 = inttoptr i64 %201 to i32*
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = ashr i32 %203, 1
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 4
  %206 = load i64, i64* %205, align 8
  %207 = add nsw i32 %204, -1
  %208 = and i32 %207, %200
  %209 = zext i32 %208 to i64
  %210 = mul i64 %209, 51539607552
  %211 = add i64 %210, 85899345920
  %212 = ashr exact i64 %211, 32
  %213 = add i64 %194, 7
  %214 = add i64 %212, %213
  %215 = inttoptr i64 %214 to i32*
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = trunc i64 %206 to i32
  %218 = icmp eq i32 %216, %217
  br i1 %218, label %238, label %219

219:                                              ; preds = %193
  %220 = trunc i64 %196 to i32
  %221 = icmp eq i32 %216, %220
  br i1 %221, label %247, label %225

222:                                              ; preds = %225
  %223 = add i32 %226, 1
  %224 = icmp eq i32 %236, %220
  br i1 %224, label %245, label %225

225:                                              ; preds = %219, %222
  %226 = phi i32 [ %223, %222 ], [ 1, %219 ]
  %227 = phi i32 [ %229, %222 ], [ %208, %219 ]
  %228 = add i32 %227, %226
  %229 = and i32 %228, %207
  %230 = zext i32 %229 to i64
  %231 = mul i64 %230, 51539607552
  %232 = add i64 %231, 85899345920
  %233 = ashr exact i64 %232, 32
  %234 = add i64 %233, %213
  %235 = inttoptr i64 %234 to i32*
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = icmp eq i32 %236, %217
  br i1 %237, label %238, label %222

238:                                              ; preds = %225, %193
  %239 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %13, i64* %195, i64* %1, i64* %2, i32 %3, %"class.v8::internal::InternalIndex"* null) #9
  %240 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #9
  %241 = load i64, i64* %0, align 8
  %242 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %244 = load i64, i64* %239, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %243, i64 %244)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #9
  br label %263

245:                                              ; preds = %222
  %246 = zext i32 %229 to i64
  br label %247

247:                                              ; preds = %245, %219
  %248 = phi i64 [ %210, %219 ], [ %231, %245 ]
  %249 = phi i64 [ %209, %219 ], [ %246, %245 ]
  %250 = add i64 %248, 120259084288
  %251 = ashr exact i64 %250, 32
  %252 = add i64 %213, %251
  %253 = inttoptr i64 %252 to i32*
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = lshr i32 %254, 9
  %256 = and i32 %3, -2147483393
  %257 = shl nuw nsw i32 %255, 8
  %258 = or i32 %257, %256
  %259 = bitcast %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #9
  %260 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %194, i64* %260, align 8
  %261 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %262 = load i64, i64* %2, align 8
  call void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1149"* nonnull %261, i64 %249, i64 %196, i64 %262, i32 %258)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #9
  br label %263

263:                                              ; preds = %238, %247, %148, %133, %140, %147
  ret void
}

declare i64* @_ZN2v88internal7Factory15NewPropertyCellENS0_6HandleINS0_4NameEEENS0_15PropertyDetailsENS2_INS0_6ObjectEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i32, i64*, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal12PropertyCell21PrepareForAndSetValueEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS4_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i64, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
declare void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1149"*, i64, i64, i64, i32) local_unnamed_addr #4 align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject18JSObjectShortPrintEPNS0_12StringStreamE(%"class.v8::internal::JSObject"* nocapture readonly, %"class.v8::internal::StringStream"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"class.v8::internal::StringStream::FmtElm"], align 16
  %4 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = alloca %"class.v8::internal::Object", align 8
  %9 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  switch i16 %19, label %184 [
    i16 1085, label %20
    i16 1058, label %66
    i16 1083, label %76
    i16 1084, label %77
    i16 1102, label %78
    i16 1072, label %102
    i16 1073, label %102
    i16 1071, label %102
    i16 1070, label %102
    i16 1066, label %102
    i16 1067, label %102
    i16 1064, label %102
    i16 1068, label %102
    i16 1065, label %102
    i16 1062, label %102
    i16 1063, label %102
    i16 1069, label %102
    i16 1061, label %102
    i16 1060, label %102
    i16 1059, label %102
    i16 1052, label %181
    i16 1053, label %182
    i16 1054, label %183
  ]

20:                                               ; preds = %2
  %21 = add i64 %10, 11
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %11, %24
  %26 = and i64 %24, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %20
  %29 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %30 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %29, i64 0, i32 0, i32 1
  %33 = load i8, i8* %32, align 8, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %29, i64 0, i32 1, i64 0
  br label %45

37:                                               ; preds = %31, %28
  %38 = and i64 %25, -262144
  %39 = or i64 %38, 16
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 16
  %42 = add i64 %41, -41416
  %43 = inttoptr i64 %42 to %"class.v8::internal::Isolate"*
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %45

45:                                               ; preds = %35, %37
  %46 = phi i64* [ %44, %37 ], [ %36, %35 ]
  %47 = getelementptr inbounds i64, i64* %46, i64 4
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %23, %49
  br i1 %50, label %61, label %54

51:                                               ; preds = %20
  %52 = ashr i32 %23, 1
  %53 = sitofp i32 %52 to double
  br label %58

54:                                               ; preds = %45
  %55 = add i64 %25, 3
  %56 = inttoptr i64 %55 to double*
  %57 = load double, double* %56, align 1
  br label %58

58:                                               ; preds = %51, %54
  %59 = phi double [ %53, %51 ], [ %57, %54 ]
  %60 = fptoui double %59 to i32
  br label %61

61:                                               ; preds = %45, %58
  %62 = phi i32 [ %60, %58 ], [ 0, %45 ]
  %63 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  %64 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %65 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i32*
  store i32 %62, i32* %65, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i64 13, %"class.v8::internal::StringStream::FmtElm"* nonnull %64, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  br label %375

66:                                               ; preds = %2
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i64 16, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %67 = add i64 %10, 11
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %11, %70
  %72 = inttoptr i64 %71 to i8*
  %73 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %75 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8**
  store i8* %72, i8** %75, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i64 26, %"class.v8::internal::StringStream::FmtElm"* nonnull %74, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #9
  br label %375

76:                                               ; preds = %2
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i64 11, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %375

77:                                               ; preds = %2
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i64 11, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %375

78:                                               ; preds = %2
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i64 9, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %79 = load i64, i64* %9, align 8
  %80 = and i64 %79, -4294967296
  %81 = add i64 %79, 15
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = add i64 %85, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %80, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i16*
  %93 = load atomic i16, i16* %92 monotonic, align 2
  %94 = icmp ult i16 %93, 64
  br i1 %94, label %95, label %101

95:                                               ; preds = %78
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %96 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #9
  %97 = load i32, i32* %82, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %80, %98
  %100 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %99, i64* %100, align 8
  call void @_ZN2v88internal6String16StringShortPrintEPNS0_12StringStreamE(%"class.v8::internal::String"* nonnull %5, %"class.v8::internal::StringStream"* %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #9
  br label %101

101:                                              ; preds = %95, %78
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %375

102:                                              ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %103 = bitcast %"class.v8::internal::SharedFunctionInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #9
  %104 = add i64 %10, 11
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %11, %107
  %109 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %108, i64* %109, align 8
  %110 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #9
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %102
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i64 12, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %114 = call i64 @strlen(i8* %110) #16
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* %110, i64 %114, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %116

115:                                              ; preds = %102
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i64 11, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %116

116:                                              ; preds = %115, %113
  %117 = load i8, i8* @_ZN2v88internal21FLAG_trace_file_namesE, align 1, !range !5
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %170, label %119

119:                                              ; preds = %116
  %120 = load atomic i32, i32* %105 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %11, %121
  %123 = add i64 %122, 15
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 acquire, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %11, %126
  %128 = add i64 %127, -1
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %11, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = icmp eq i16 %135, 100
  br i1 %136, label %137, label %143

137:                                              ; preds = %119
  %138 = add i64 %127, 11
  %139 = inttoptr i64 %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %11, %141
  br label %143

143:                                              ; preds = %119, %137
  %144 = phi i64 [ %142, %137 ], [ %127, %119 ]
  %145 = and i64 %144, -4294967296
  %146 = add i64 %144, 7
  %147 = inttoptr i64 %146 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = zext i32 %148 to i64
  %150 = or i64 %145, %149
  %151 = and i64 %149, 1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %170, label %153

153:                                              ; preds = %143
  %154 = add i64 %150, -1
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %145, %157
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i16*
  %161 = load atomic i16, i16* %160 monotonic, align 2
  %162 = icmp ult i16 %161, 64
  br i1 %162, label %163, label %170

163:                                              ; preds = %153
  %164 = add i64 %150, 7
  %165 = inttoptr i64 %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %163
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i64 2, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %169 = call zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringE(%"class.v8::internal::StringStream"* %1, i64 %150) #9
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %170

170:                                              ; preds = %143, %153, %168, %163, %116
  %171 = load atomic i32, i32* %105 monotonic, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %11, %172
  %174 = inttoptr i64 %173 to i8*
  %175 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #9
  %176 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %177 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8**
  store i8* %174, i8** %177, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i64 11, %"class.v8::internal::StringStream::FmtElm"* nonnull %176, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #9
  %178 = call zeroext i1 @_ZN2v88internal12StringStream3PutEc(%"class.v8::internal::StringStream"* %1, i8 signext 62) #9
  %179 = icmp eq i8* %110, null
  br i1 %179, label %375, label %180

180:                                              ; preds = %170
  call void @_ZdaPv(i8* nonnull %110) #15
  br label %375

181:                                              ; preds = %2
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), i64 13, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %375

182:                                              ; preds = %2
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i64 0, i64 0), i64 23, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %375

183:                                              ; preds = %2
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0), i64 19, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %375

184:                                              ; preds = %2
  %185 = load atomic i32, i32* %13 monotonic, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %11, %186
  %188 = and i64 %10, -262144
  %189 = or i64 %188, 16
  %190 = inttoptr i64 %189 to %"class.v8::internal::Heap"**
  %191 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %190, align 16
  %192 = add i64 %187, 19
  %193 = inttoptr i64 %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i64
  %196 = or i64 %11, %195
  %197 = and i64 %195, 1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %269, label %199

199:                                              ; preds = %184
  %200 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %201 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %200, null
  %202 = and i64 %187, -262144
  %203 = or i64 %202, 16
  %204 = inttoptr i64 %203 to i64*
  br i1 %201, label %234, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %200, i64 0, i32 0, i32 1
  %207 = load i8, i8* %206, align 8, !range !5
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %200, i64 0, i32 1, i64 10
  %211 = load i64, i64* %210, align 8
  %212 = trunc i64 %211 to i32
  br label %255

213:                                              ; preds = %205
  %214 = load i64, i64* %204, align 16
  %215 = add i64 %214, -41416
  %216 = inttoptr i64 %215 to %"class.v8::internal::Isolate"*
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %216, i64 0, i32 0, i32 7, i32 0, i64 10
  %218 = load i64, i64* %217, align 8
  %219 = trunc i64 %218 to i32
  br label %220

220:                                              ; preds = %226, %213
  %221 = phi i64 [ %231, %226 ], [ %196, %213 ]
  %222 = add i64 %221, -1
  %223 = inttoptr i64 %222 to i32*
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = icmp eq i32 %224, %219
  br i1 %225, label %226, label %269

226:                                              ; preds = %220
  %227 = add i64 %221, 19
  %228 = inttoptr i64 %227 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i64
  %231 = or i64 %11, %230
  %232 = and i64 %230, 1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %269, label %220

234:                                              ; preds = %199
  %235 = load i64, i64* %204, align 16
  %236 = add i64 %235, -41416
  %237 = inttoptr i64 %236 to %"class.v8::internal::Isolate"*
  %238 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %237, i64 0, i32 0, i32 7, i32 0, i64 10
  %239 = load i64, i64* %238, align 8
  %240 = trunc i64 %239 to i32
  br label %241

241:                                              ; preds = %247, %234
  %242 = phi i64 [ %252, %247 ], [ %196, %234 ]
  %243 = add i64 %242, -1
  %244 = inttoptr i64 %243 to i32*
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = icmp eq i32 %245, %240
  br i1 %246, label %247, label %269

247:                                              ; preds = %241
  %248 = add i64 %242, 19
  %249 = inttoptr i64 %248 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i64
  %252 = or i64 %11, %251
  %253 = and i64 %251, 1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %269, label %241

255:                                              ; preds = %261, %209
  %256 = phi i64 [ %266, %261 ], [ %196, %209 ]
  %257 = add i64 %256, -1
  %258 = inttoptr i64 %257 to i32*
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = icmp eq i32 %259, %212
  br i1 %260, label %261, label %269

261:                                              ; preds = %255
  %262 = add i64 %256, 19
  %263 = inttoptr i64 %262 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = zext i32 %264 to i64
  %266 = or i64 %11, %265
  %267 = and i64 %265, 1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %255

269:                                              ; preds = %255, %261, %220, %226, %241, %247, %184
  %270 = phi i64 [ %196, %184 ], [ %252, %247 ], [ %242, %241 ], [ %221, %220 ], [ %231, %226 ], [ %256, %255 ], [ %266, %261 ]
  %271 = and i64 %270, 1
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %281, label %273

273:                                              ; preds = %269
  %274 = tail call zeroext i1 @_ZNK2v88internal4Heap8ContainsENS0_10HeapObjectE(%"class.v8::internal::Heap"* %191, i64 %270) #9
  br i1 %274, label %275, label %280

275:                                              ; preds = %273
  %276 = load i64, i64* %9, align 8
  %277 = and i64 %276, -4294967296
  %278 = add i64 %276, -1
  %279 = inttoptr i64 %278 to i32*
  br label %281

280:                                              ; preds = %273
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i64 0, i64 0), i64 25, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %351

281:                                              ; preds = %275, %269
  %282 = phi i32* [ %279, %275 ], [ %13, %269 ]
  %283 = phi i64 [ %277, %275 ], [ %11, %269 ]
  %284 = load atomic i32, i32* %282 monotonic, align 4
  %285 = zext i32 %284 to i64
  %286 = or i64 %283, %285
  %287 = add i64 %286, 7
  %288 = inttoptr i64 %287 to i16*
  %289 = load atomic i16, i16* %288 monotonic, align 2
  %290 = icmp eq i16 %289, 190
  br i1 %272, label %346, label %291

291:                                              ; preds = %281
  %292 = and i64 %270, -4294967296
  %293 = add i64 %270, -1
  %294 = inttoptr i64 %293 to i32*
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = zext i32 %295 to i64
  %297 = or i64 %292, %296
  %298 = add i64 %297, 7
  %299 = inttoptr i64 %298 to i16*
  %300 = load atomic i16, i16* %299 monotonic, align 2
  %301 = add i16 %300, -1059
  %302 = icmp ult i16 %301, 15
  br i1 %302, label %303, label %337

303:                                              ; preds = %291
  %304 = add i64 %270, 11
  %305 = inttoptr i64 %304 to i32*
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = zext i32 %306 to i64
  %308 = or i64 %292, %307
  %309 = tail call zeroext i1 @_ZNK2v88internal4Heap8ContainsENS0_10HeapObjectE(%"class.v8::internal::Heap"* %191, i64 %308) #9
  br i1 %309, label %311, label %310

310:                                              ; preds = %303
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i64 0, i64 0), i64 35, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %346

311:                                              ; preds = %303
  %312 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %312) #9
  %313 = load atomic i32, i32* %305 monotonic, align 4
  %314 = zext i32 %313 to i64
  %315 = or i64 %292, %314
  %316 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %315, i64* %316, align 8
  %317 = call i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %312) #9
  %318 = add i64 %317, 7
  %319 = inttoptr i64 %318 to i32*
  %320 = load i32, i32* %319, align 4
  %321 = icmp sgt i32 %320, 0
  br i1 %321, label %322, label %346

322:                                              ; preds = %311
  %323 = select i1 %290, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0)
  %324 = select i1 %290, i64 14, i64 1
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* %323, i64 %324, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %325 = call zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringE(%"class.v8::internal::StringStream"* %1, i64 %317) #9
  %326 = add i64 %187, 11
  %327 = inttoptr i64 %326 to i32*
  %328 = load atomic i32, i32* %327 acquire, align 4
  %329 = and i32 %328, 16777216
  %330 = icmp eq i32 %329, 0
  %331 = select i1 %330, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0)
  %332 = bitcast [2 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %332) #9
  %333 = getelementptr inbounds [2 x %"class.v8::internal::StringStream::FmtElm"], [2 x %"class.v8::internal::StringStream::FmtElm"]* %3, i64 0, i64 0
  %334 = bitcast [2 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i8**
  store i8* %331, i8** %334, align 16
  %335 = getelementptr inbounds [2 x %"class.v8::internal::StringStream::FmtElm"], [2 x %"class.v8::internal::StringStream::FmtElm"]* %3, i64 0, i64 1
  %336 = bitcast %"class.v8::internal::StringStream::FmtElm"* %335 to i64*
  store i64 %187, i64* %336, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i64 11, %"class.v8::internal::StringStream::FmtElm"* nonnull %333, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %332) #9
  br label %351

337:                                              ; preds = %291
  %338 = load atomic i32, i32* %294 monotonic, align 4
  %339 = zext i32 %338 to i64
  %340 = or i64 %292, %339
  %341 = add i64 %340, 7
  %342 = inttoptr i64 %341 to i16*
  %343 = load atomic i16, i16* %342 monotonic, align 2
  %344 = icmp eq i16 %343, 83
  br i1 %344, label %345, label %346

345:                                              ; preds = %337
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i64 0, i64 0), i64 14, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %351

346:                                              ; preds = %281, %311, %337, %310
  %347 = select i1 %290, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29, i64 0, i64 0)
  %348 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %348) #9
  %349 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %350 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8**
  store i8* %347, i8** %350, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i64 11, %"class.v8::internal::StringStream::FmtElm"* nonnull %349, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %348) #9
  br label %351

351:                                              ; preds = %322, %346, %345, %280
  %352 = load i64, i64* %9, align 8
  %353 = and i64 %352, -4294967296
  %354 = add i64 %352, -1
  %355 = inttoptr i64 %354 to i32*
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = zext i32 %356 to i64
  %358 = or i64 %353, %357
  %359 = add i64 %358, 7
  %360 = inttoptr i64 %359 to i16*
  %361 = load atomic i16, i16* %360 monotonic, align 2
  %362 = icmp eq i16 %361, 1041
  br i1 %362, label %363, label %373

363:                                              ; preds = %351
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i64 9, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %364 = bitcast %"class.v8::internal::Object"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %364) #9
  %365 = load i64, i64* %9, align 8
  %366 = and i64 %365, -4294967296
  %367 = add i64 %365, 11
  %368 = inttoptr i64 %367 to i32*
  %369 = load i32, i32* %368, align 4
  %370 = zext i32 %369 to i64
  %371 = or i64 %366, %370
  %372 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %8, i64 0, i32 0, i32 0
  store i64 %371, i64* %372, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEPNS0_12StringStreamE(%"class.v8::internal::Object"* nonnull %8, %"class.v8::internal::StringStream"* %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %364) #9
  br label %373

373:                                              ; preds = %363, %351
  %374 = call zeroext i1 @_ZN2v88internal12StringStream3PutEc(%"class.v8::internal::StringStream"* %1, i8 signext 62) #9
  br label %375

375:                                              ; preds = %180, %170, %373, %183, %182, %181, %101, %77, %76, %66, %61
  ret void
}

declare void @_ZN2v88internal6String16StringShortPrintEPNS0_12StringStreamE(%"class.v8::internal::String"*, %"class.v8::internal::StringStream"*) local_unnamed_addr #2

declare i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringE(%"class.v8::internal::StringStream"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal12StringStream3PutEc(%"class.v8::internal::StringStream"*, i8 signext) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal4Heap8ContainsENS0_10HeapObjectE(%"class.v8::internal::Heap"*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.v8::internal::ScopeInfo", align 8
  %3 = alloca %"class.v8::internal::ScopeInfo", align 8
  %4 = alloca %"class.v8::internal::ScopeInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 7
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = and i64 %11, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %1
  %16 = add i64 %12, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %7, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 178
  br i1 %24, label %25, label %29

25:                                               ; preds = %15
  %26 = bitcast %"class.v8::internal::ScopeInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %27, align 8
  %28 = call zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br i1 %28, label %53, label %31

29:                                               ; preds = %1, %15
  %30 = icmp eq i32 %10, 0
  br i1 %30, label %31, label %53

31:                                               ; preds = %29, %25
  %32 = load i64, i64* %5, align 8
  %33 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %34 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !5
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 1, i64 0
  br label %49

41:                                               ; preds = %35, %31
  %42 = and i64 %32, -262144
  %43 = or i64 %42, 16
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = add i64 %45, -41416
  %47 = inttoptr i64 %46 to %"class.v8::internal::Isolate"*
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %49

49:                                               ; preds = %39, %41
  %50 = phi i64* [ %48, %41 ], [ %40, %39 ]
  %51 = getelementptr inbounds i64, i64* %50, i64 9
  %52 = load i64, i64* %51, align 8
  br label %103

53:                                               ; preds = %29, %25
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, -4294967296
  %56 = add i64 %54, 7
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 acquire, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = and i64 %59, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %103, label %63

63:                                               ; preds = %53
  %64 = add i64 %60, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %55, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp eq i16 %71, 178
  br i1 %72, label %73, label %103

73:                                               ; preds = %63
  %74 = bitcast %"class.v8::internal::ScopeInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #9
  %75 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %75, align 8
  %76 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15HasFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #9
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::internal::ScopeInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #9
  %79 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %79, align 8
  %80 = call i64 @_ZNK2v88internal9ScopeInfo12FunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #9
  br label %103

81:                                               ; preds = %73
  %82 = load i64, i64* %5, align 8
  %83 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %84 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 0, i32 1
  %87 = load i8, i8* %86, align 8, !range !5
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 1, i64 0
  br label %99

91:                                               ; preds = %85, %81
  %92 = and i64 %82, -262144
  %93 = or i64 %92, 16
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 16
  %96 = add i64 %95, -41416
  %97 = inttoptr i64 %96 to %"class.v8::internal::Isolate"*
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %99

99:                                               ; preds = %89, %91
  %100 = phi i64* [ %98, %91 ], [ %90, %89 ]
  %101 = getelementptr inbounds i64, i64* %100, i64 9
  %102 = load i64, i64* %101, align 8
  br label %103

103:                                              ; preds = %53, %77, %99, %63, %49
  %104 = phi i64 [ %52, %49 ], [ %80, %77 ], [ %102, %99 ], [ %60, %63 ], [ %60, %53 ]
  ret i64 %104
}

declare void @_ZNK2v88internal6Object10ShortPrintEPNS0_12StringStreamE(%"class.v8::internal::Object"*, %"class.v8::internal::StringStream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject23PrintElementsTransitionEP8_IO_FILENS0_6HandleIS1_EENS0_12ElementsKindENS4_INS0_14FixedArrayBaseEEES6_S8_(%struct._IO_FILE*, i64*, i8 zeroext, i64*, i8 zeroext, i64*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::OFStream", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef", align 8
  %11 = icmp eq i8 %2, %4
  br i1 %11, label %48, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.v8::internal::OFStream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %13) #9
  call void @_ZN2v88internal8OFStreamC1EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %7, %struct._IO_FILE* %0) #9
  %14 = bitcast %"class.v8::internal::OFStream"* %7 to %"class.std::__1::basic_ostream"*
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.34, i64 0, i64 0), i64 21) #9
  %16 = call i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext %2) #9
  %17 = call i64 @strlen(i8* %16) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* %16, i64 %17) #9
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i64 4) #9
  %20 = call i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext %4) #9
  %21 = call i64 @strlen(i8* %20) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* %20, i64 %21) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), i64 5) #9
  %24 = load i64, i64* %1, align 8
  %25 = and i64 %24, -262144
  %26 = or i64 %25, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  call void @_ZN2v88internal15JavaScriptFrame8PrintTopEPNS0_7IsolateEP8_IO_FILEbb(%"class.v8::internal::Isolate"* %30, %struct._IO_FILE* %0, i1 zeroext false, i1 zeroext true) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0)) #9
  %31 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %32 = load i64, i64* %1, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %34, %struct._IO_FILE* %0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0)) #9
  %35 = bitcast %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = load i64, i64* %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %38, %struct._IO_FILE* %0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #9
  %39 = bitcast %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = load i64, i64* %5, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %42, %struct._IO_FILE* %0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)) #9
  %43 = bitcast %"class.v8::internal::OFStream"* %7 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %7, i64 0, i32 2
  %45 = bitcast %"class.std::__1::basic_ios.base"* %44 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %7, i64 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %46) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #9
  %47 = bitcast %"class.std::__1::basic_ios.base"* %44 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %47) #9
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %13) #9
  br label %48

48:                                               ; preds = %6, %12
  ret void
}

declare void @_ZN2v88internal8OFStreamC1EP8_IO_FILE(%"class.v8::internal::OFStream"*, %struct._IO_FILE*) unnamed_addr #2

declare i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal15JavaScriptFrame8PrintTopEPNS0_7IsolateEP8_IO_FILEbb(%"class.v8::internal::Isolate"*, %struct._IO_FILE*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"*, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #9
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #9
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject22PrintInstanceMigrationEP8_IO_FILENS0_3MapES4_(%"class.v8::internal::JSObject"* nocapture readonly, %struct._IO_FILE*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = add i64 %3, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2097152
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %4
  tail call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41, i64 0, i64 0)) #9
  br label %130

13:                                               ; preds = %4
  tail call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i64 0, i64 0)) #9
  %14 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %2, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, 4294967295
  %28 = icmp eq i64 %27, 0
  tail call void @llvm.assume(i1 %28) #9
  %29 = zext i32 %26 to i64
  %30 = or i64 %23, %29
  %31 = add i64 %3, 23
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %23, %34
  %36 = add i64 %2, 11
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 acquire, align 4
  %39 = lshr i32 %38, 10
  %40 = and i32 %39, 1023
  %41 = zext i32 %40 to i64
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %13
  %44 = bitcast %"class.v8::internal::String"* %5 to i8*
  %45 = add i64 %30, -1
  %46 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.v8::internal::String"* %6 to i8*
  %48 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %59

49:                                               ; preds = %123, %13
  %50 = add i64 %2, 10
  %51 = inttoptr i64 %50 to i8*
  %52 = load i8, i8* %51, align 1
  %53 = lshr i8 %52, 2
  %54 = add i64 %3, 10
  %55 = inttoptr i64 %54 to i8*
  %56 = load i8, i8* %55, align 1
  %57 = lshr i8 %56, 2
  %58 = icmp eq i8 %53, %57
  br i1 %58, label %129, label %126

59:                                               ; preds = %43, %123
  %60 = phi i64 [ 0, %43 ], [ %124, %123 ]
  %61 = mul nuw nsw i64 %60, 51539607552
  %62 = add nuw nsw i64 %61, 68719476736
  %63 = lshr exact i64 %62, 32
  %64 = or i64 %63, 3
  %65 = add i64 %64, %30
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = lshr i32 %67, 7
  %69 = trunc i32 %68 to i8
  %70 = and i8 %69, 7
  %71 = add i64 %64, %35
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = lshr i32 %73, 7
  %75 = trunc i32 %74 to i8
  %76 = and i8 %75, 7
  %77 = icmp eq i8 %70, %76
  br i1 %77, label %96, label %78

78:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  %79 = add i64 %45, %63
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %23, %82
  store i64 %83, i64* %46, align 8
  call void @_ZN2v88internal6String7PrintOnEP8_IO_FILE(%"class.v8::internal::String"* nonnull %5, %struct._IO_FILE* %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  %84 = icmp ult i8 %70, 6
  br i1 %84, label %86, label %85

85:                                               ; preds = %78
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

86:                                               ; preds = %78
  %87 = icmp ult i8 %76, 6
  br i1 %87, label %89, label %88

88:                                               ; preds = %86
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

89:                                               ; preds = %86
  %90 = zext i8 %70 to i64
  %91 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %90
  %92 = load i8*, i8** %91, align 8
  %93 = zext i8 %76 to i64
  %94 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %93
  %95 = load i8*, i8** %94, align 8
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i8* %92, i8* nonnull %95) #9
  br label %123

96:                                               ; preds = %59
  %97 = load atomic i32, i32* %66 monotonic, align 4
  %98 = and i32 %97, 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %123, label %100

100:                                              ; preds = %96
  %101 = load atomic i32, i32* %72 monotonic, align 4
  %102 = and i32 %101, 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %123

104:                                              ; preds = %100
  %105 = add i64 %45, %63
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %23, %108
  %110 = add i64 %109, -1
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %23, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = icmp ult i16 %117, 64
  br i1 %118, label %119, label %120

119:                                              ; preds = %104
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  store i64 %109, i64* %48, align 8
  call void @_ZN2v88internal6String7PrintOnEP8_IO_FILE(%"class.v8::internal::String"* nonnull %6, %struct._IO_FILE* %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %122

120:                                              ; preds = %104
  %121 = inttoptr i64 %109 to i8*
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i64 0, i64 0), i8* %121) #9
  br label %122

122:                                              ; preds = %120, %119
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #9
  br label %123

123:                                              ; preds = %96, %100, %122, %89
  %124 = add nuw nsw i64 %60, 1
  %125 = icmp eq i64 %124, %41
  br i1 %125, label %49, label %59

126:                                              ; preds = %49
  %127 = zext i8 %53 to i32
  %128 = zext i8 %57 to i32
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0), i32 %127, i32 %128) #9
  br label %129

129:                                              ; preds = %49, %126
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)) #9
  br label %130

130:                                              ; preds = %129, %12
  ret void
}

declare void @_ZN2v88internal6String7PrintOnEP8_IO_FILE(%"class.v8::internal::String"*, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject21IsUnmodifiedApiObjectENS0_14FullObjectSlotE(i64) local_unnamed_addr #0 align 2 {
  %2 = inttoptr i64 %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %244, label %6

6:                                                ; preds = %1
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp ugt i16 %15, 188
  br i1 %16, label %17, label %244

17:                                               ; preds = %6
  %18 = load atomic i32, i32* %9 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %7, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  switch i16 %23, label %244 [
    i16 1056, label %24
    i16 1040, label %24
  ]

24:                                               ; preds = %17, %17
  %25 = load atomic i32, i32* %9 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %7, %26
  %28 = add i64 %27, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %7, %31
  %33 = and i64 %31, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %105, label %35

35:                                               ; preds = %24
  %36 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %37 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %36, null
  %38 = and i64 %27, -262144
  %39 = or i64 %38, 16
  %40 = inttoptr i64 %39 to i64*
  br i1 %37, label %70, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %36, i64 0, i32 0, i32 1
  %43 = load i8, i8* %42, align 8, !range !5
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %36, i64 0, i32 1, i64 10
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  br label %91

49:                                               ; preds = %41
  %50 = load i64, i64* %40, align 16
  %51 = add i64 %50, -41416
  %52 = inttoptr i64 %51 to %"class.v8::internal::Isolate"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 7, i32 0, i64 10
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %62, %49
  %57 = phi i64 [ %67, %62 ], [ %32, %49 ]
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %62, label %105

62:                                               ; preds = %56
  %63 = add i64 %57, 19
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %7, %66
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %105, label %56

70:                                               ; preds = %35
  %71 = load i64, i64* %40, align 16
  %72 = add i64 %71, -41416
  %73 = inttoptr i64 %72 to %"class.v8::internal::Isolate"*
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 0, i32 7, i32 0, i64 10
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  br label %77

77:                                               ; preds = %83, %70
  %78 = phi i64 [ %88, %83 ], [ %32, %70 ]
  %79 = add i64 %78, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = icmp eq i32 %81, %76
  br i1 %82, label %83, label %105

83:                                               ; preds = %77
  %84 = add i64 %78, 19
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %7, %87
  %89 = and i64 %87, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %105, label %77

91:                                               ; preds = %97, %45
  %92 = phi i64 [ %102, %97 ], [ %32, %45 ]
  %93 = add i64 %92, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = icmp eq i32 %95, %48
  br i1 %96, label %97, label %105

97:                                               ; preds = %91
  %98 = add i64 %92, 19
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %7, %101
  %103 = and i64 %101, 1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %91

105:                                              ; preds = %91, %97, %56, %62, %77, %83, %24
  %106 = phi i64 [ %32, %24 ], [ %88, %83 ], [ %78, %77 ], [ %57, %56 ], [ %67, %62 ], [ %92, %91 ], [ %102, %97 ]
  %107 = and i64 %106, 1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %244, label %109

109:                                              ; preds = %105
  %110 = and i64 %106, -4294967296
  %111 = add i64 %106, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %110, %114
  %116 = add i64 %115, 7
  %117 = inttoptr i64 %116 to i16*
  %118 = load atomic i16, i16* %117 monotonic, align 2
  %119 = add i16 %118, -1059
  %120 = icmp ult i16 %119, 15
  br i1 %120, label %121, label %244

121:                                              ; preds = %109
  %122 = add i64 %3, 7
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %7, %125
  %127 = add i64 %126, 3
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 2
  br i1 %130, label %131, label %244

131:                                              ; preds = %121
  %132 = add i64 %3, 3
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %7, %135
  %137 = and i64 %135, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %131
  %140 = ashr i32 %134, 1
  br label %183

141:                                              ; preds = %131
  %142 = add i64 %136, -1
  %143 = inttoptr i64 %142 to i32*
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = zext i32 %144 to i64
  %146 = or i64 %7, %145
  %147 = add i64 %146, 7
  %148 = inttoptr i64 %147 to i16*
  %149 = load atomic i16, i16* %148 monotonic, align 2
  %150 = icmp eq i16 %149, 176
  br i1 %150, label %151, label %157

151:                                              ; preds = %141
  %152 = add i64 %136, 3
  %153 = inttoptr i64 %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = lshr i32 %154, 11
  %156 = and i32 %155, 1048575
  br label %183

157:                                              ; preds = %141
  %158 = load atomic i32, i32* %143 monotonic, align 4
  %159 = zext i32 %158 to i64
  %160 = or i64 %7, %159
  %161 = add i64 %160, 7
  %162 = inttoptr i64 %161 to i16*
  %163 = load atomic i16, i16* %162 monotonic, align 2
  %164 = icmp eq i16 %163, 123
  br i1 %164, label %165, label %170

165:                                              ; preds = %157
  %166 = add i64 %136, 23
  %167 = inttoptr i64 %166 to i32*
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = ashr i32 %168, 1
  br label %183

170:                                              ; preds = %157
  %171 = load atomic i32, i32* %143 monotonic, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %7, %172
  %174 = add i64 %173, 7
  %175 = inttoptr i64 %174 to i16*
  %176 = load atomic i16, i16* %175 monotonic, align 2
  %177 = icmp eq i16 %176, 122
  br i1 %177, label %178, label %186

178:                                              ; preds = %170
  %179 = add i64 %136, 23
  %180 = inttoptr i64 %179 to i32*
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = ashr i32 %181, 1
  br label %183

183:                                              ; preds = %178, %165, %151, %139
  %184 = phi i32 [ %140, %139 ], [ %156, %151 ], [ %169, %165 ], [ %182, %178 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %207

186:                                              ; preds = %183, %170
  %187 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %188 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %187, i64 0, i32 0, i32 1
  %191 = load i8, i8* %190, align 8, !range !5
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %187, i64 0, i32 1, i64 0
  br label %203

195:                                              ; preds = %189, %186
  %196 = and i64 %3, -262144
  %197 = or i64 %196, 16
  %198 = inttoptr i64 %197 to i64*
  %199 = load i64, i64* %198, align 16
  %200 = add i64 %199, -41416
  %201 = inttoptr i64 %200 to %"class.v8::internal::Isolate"*
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %203

203:                                              ; preds = %195, %193
  %204 = phi i64* [ %202, %195 ], [ %194, %193 ]
  %205 = getelementptr inbounds i64, i64* %204, i64 4
  %206 = load i64, i64* %205, align 8
  br label %210

207:                                              ; preds = %183
  %208 = sext i32 %184 to i64
  %209 = shl nsw i64 %208, 1
  br label %210

210:                                              ; preds = %203, %207
  %211 = phi i64 [ %206, %203 ], [ %209, %207 ]
  %212 = and i64 %211, 1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %244, label %214

214:                                              ; preds = %210
  %215 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %216 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %215, null
  br i1 %216, label %223, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %215, i64 0, i32 0, i32 1
  %219 = load i8, i8* %218, align 8, !range !5
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %215, i64 0, i32 1, i64 0
  br label %231

223:                                              ; preds = %217, %214
  %224 = and i64 %211, -262144
  %225 = or i64 %224, 16
  %226 = inttoptr i64 %225 to i64*
  %227 = load i64, i64* %226, align 16
  %228 = add i64 %227, -41416
  %229 = inttoptr i64 %228 to %"class.v8::internal::Isolate"*
  %230 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %229, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %231

231:                                              ; preds = %221, %223
  %232 = phi i64* [ %230, %223 ], [ %222, %221 ]
  %233 = getelementptr inbounds i64, i64* %232, i64 4
  %234 = load i64, i64* %233, align 8
  %235 = trunc i64 %211 to i32
  %236 = trunc i64 %234 to i32
  %237 = icmp eq i32 %235, %236
  br i1 %237, label %238, label %244

238:                                              ; preds = %231
  %239 = add i64 %106, 27
  %240 = inttoptr i64 %239 to i32*
  %241 = load atomic i32, i32* %240 acquire, align 4
  %242 = load atomic i32, i32* %9 monotonic, align 4
  %243 = icmp eq i32 %241, %242
  br label %244

244:                                              ; preds = %17, %210, %105, %6, %109, %231, %121, %238, %1
  %245 = phi i1 [ false, %1 ], [ false, %6 ], [ false, %17 ], [ false, %109 ], [ %243, %238 ], [ false, %121 ], [ false, %231 ], [ false, %105 ], [ false, %210 ]
  ret i1 %245
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject21IsDroppableApiWrapperEv(%"class.v8::internal::JSObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 1056
  %14 = icmp eq i16 %12, 1040
  %15 = or i1 %13, %14
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject31UpdatePrototypeUserRegistrationENS0_6HandleINS0_3MapEEES4_PNS0_7IsolateE(i64*, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN2v88internal8JSObject23UnregisterPrototypeUserENS0_6HandleINS0_3MapEEEPNS0_7IsolateE(i64* %0, %"class.v8::internal::Isolate"* %2)
  %5 = load i64, i64* %1, align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 35
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %5, 35
  %14 = inttoptr i64 %13 to i32*
  store atomic volatile i32 %10, i32* %14 release, align 4
  %15 = and i64 %11, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %3
  %18 = and i64 %5, -262144
  %19 = or i64 %18, 8
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 262144
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = or i64 %18, 16
  %26 = inttoptr i64 %25 to %"class.v8::internal::Heap"**
  %27 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %27, i64 %5, i64 %13, i64 %12) #9
  br label %28

28:                                               ; preds = %24, %17
  %29 = and i64 %12, -262144
  %30 = or i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 24
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = load i64, i64* %20, align 8
  %37 = and i64 %36, 24
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %5, i64 %13, i64 %12) #9
  br label %40

40:                                               ; preds = %39, %35, %28, %3
  %41 = load i64, i64* %0, align 8
  %42 = add i64 %41, 35
  %43 = inttoptr i64 %42 to i32*
  store atomic volatile i32 0, i32* %43 release, align 4
  %44 = load i8, i8* @_ZN2v88internal26FLAG_trace_prototype_usersE, align 1, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %40
  %47 = load i64, i64* %1, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, 35
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = inttoptr i64 %53 to i8*
  %55 = bitcast i64* %0 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = inttoptr i64 %47 to i8*
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.46, i64 0, i64 0), i8* %54, i8* %56, i8* %57) #9
  br label %58

58:                                               ; preds = %40, %46
  br i1 %4, label %59, label %83

59:                                               ; preds = %58
  %60 = load i64, i64* %1, align 8
  %61 = and i64 %60, -4294967296
  %62 = add i64 %60, 35
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = and i64 %65, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %82, label %69

69:                                               ; preds = %59
  %70 = add i64 %66, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %61, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = icmp eq i16 %77, 110
  br i1 %78, label %79, label %82

79:                                               ; preds = %69
  %80 = add i64 %66, 15
  %81 = inttoptr i64 %80 to i32*
  store atomic volatile i32 -2, i32* %81 monotonic, align 4
  br label %82

82:                                               ; preds = %59, %79, %69
  tail call void @_ZN2v88internal8JSObject25LazyRegisterPrototypeUserENS0_6HandleINS0_3MapEEEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %83

83:                                               ; preds = %82, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject23UnregisterPrototypeUserENS0_6HandleINS0_3MapEEEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 35
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = and i64 %8, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %189, label %12

12:                                               ; preds = %2
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %4, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 110
  br i1 %21, label %22, label %189

22:                                               ; preds = %12
  %23 = add i64 %3, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %4, %26
  %28 = add i64 %27, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %4, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp ugt i16 %35, 188
  br i1 %36, label %55, label %37

37:                                               ; preds = %22
  %38 = add i64 %9, 7
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %37
  %45 = or i64 %4, %41
  %46 = add i64 %45, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %4, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = icmp eq i16 %53, 184
  br label %189

55:                                               ; preds = %22
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %27) #9
  br label %74

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #9
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64* [ %68, %67 ], [ %63, %61 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = add i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  store i64* %73, i64** %62, align 8
  store i64 %27, i64* %70, align 8
  br label %74

74:                                               ; preds = %59, %69
  %75 = phi i64* [ %60, %59 ], [ %70, %69 ]
  %76 = tail call i64* @_ZN2v88internal3Map24GetOrCreatePrototypeInfoENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %0, %"class.v8::internal::Isolate"* %1) #9
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 15
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = ashr i32 %80, 1
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %189, label %83

83:                                               ; preds = %74
  %84 = load i64, i64* %75, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 35
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %85, %94
  %96 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %97 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %83
  %99 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %96, i64 %95) #9
  %100 = load i64, i64* %99, align 8
  br label %114

101:                                              ; preds = %83
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %105 = load i64*, i64** %104, align 8
  %106 = icmp eq i64* %103, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %101
  %108 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #9
  br label %109

109:                                              ; preds = %107, %101
  %110 = phi i64* [ %108, %107 ], [ %103, %101 ]
  %111 = ptrtoint i64* %110 to i64
  %112 = add i64 %111, 8
  %113 = inttoptr i64 %112 to i64*
  store i64* %113, i64** %102, align 8
  store i64 %95, i64* %110, align 8
  br label %114

114:                                              ; preds = %98, %109
  %115 = phi i64 [ %100, %98 ], [ %95, %109 ]
  %116 = and i64 %115, -4294967296
  %117 = add i64 %115, 7
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %116, %120
  %122 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %123 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %122, null
  br i1 %123, label %127, label %124

124:                                              ; preds = %114
  %125 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %122, i64 %121) #9
  %126 = load i64, i64* %125, align 8
  br label %140

127:                                              ; preds = %114
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %129 = load i64*, i64** %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %129, %131
  br i1 %132, label %133, label %135

133:                                              ; preds = %127
  %134 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #9
  br label %135

135:                                              ; preds = %133, %127
  %136 = phi i64* [ %134, %133 ], [ %129, %127 ]
  %137 = ptrtoint i64* %136 to i64
  %138 = add i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  store i64* %139, i64** %128, align 8
  store i64 %121, i64* %136, align 8
  br label %140

140:                                              ; preds = %124, %135
  %141 = phi i64 [ %126, %124 ], [ %121, %135 ]
  %142 = and i64 %141, -4294967296
  %143 = add i64 %141, 11
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %142, %146
  %148 = shl i32 %81, 2
  %149 = sext i32 %148 to i64
  %150 = add i64 %143, %149
  %151 = inttoptr i64 %150 to i32*
  store atomic volatile i32 %145, i32* %151 monotonic, align 4
  %152 = and i64 %146, 1
  %153 = icmp ne i64 %152, 0
  %154 = icmp ne i32 %145, 3
  %155 = and i1 %154, %153
  br i1 %155, label %156, label %180

156:                                              ; preds = %140
  %157 = and i64 %141, -262144
  %158 = or i64 %157, 8
  %159 = inttoptr i64 %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = and i64 %160, 262144
  %162 = icmp eq i64 %161, 0
  %163 = and i64 %147, -3
  br i1 %162, label %168, label %164

164:                                              ; preds = %156
  %165 = or i64 %157, 16
  %166 = inttoptr i64 %165 to %"class.v8::internal::Heap"**
  %167 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %166, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %167, i64 %141, i64 %150, i64 %163) #9
  br label %168

168:                                              ; preds = %156, %164
  %169 = and i64 %147, -262144
  %170 = or i64 %169, 8
  %171 = inttoptr i64 %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = and i64 %172, 24
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %180, label %175

175:                                              ; preds = %168
  %176 = load i64, i64* %159, align 8
  %177 = and i64 %176, 24
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %175
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %141, i64 %150, i64 %163) #9
  br label %180

180:                                              ; preds = %140, %168, %175, %179
  %181 = and i32 %80, -2
  store atomic volatile i32 %181, i32* %144 monotonic, align 4
  %182 = load i8, i8* @_ZN2v88internal26FLAG_trace_prototype_usersE, align 1, !range !5
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %189, label %184

184:                                              ; preds = %180
  %185 = bitcast i64* %0 to i8**
  %186 = load i8*, i8** %185, align 8
  %187 = bitcast i64* %75 to i8**
  %188 = load i8*, i8** %187, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.59, i64 0, i64 0), i8* %186, i8* %188) #9
  br label %189

189:                                              ; preds = %2, %74, %180, %184, %44, %37, %12
  %190 = phi i1 [ false, %12 ], [ false, %37 ], [ %54, %44 ], [ false, %74 ], [ true, %180 ], [ true, %184 ], [ false, %2 ]
  ret i1 %190
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject25LazyRegisterPrototypeUserENS0_6HandleINS0_3MapEEEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %5 = alloca i32, align 4
  %6 = tail call i64* @_ZN2v88internal3Map24GetOrCreatePrototypeInfoENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %0, %"class.v8::internal::Isolate"* %1) #9
  %7 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = load i64, i64* %0, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %3, i64 0, i32 0
  %14 = call i64 @_ZNK2v88internal3Map24GetPrototypeChainRootMapEPNS0_7IsolateE(%"class.v8::internal::Map"* nonnull %13, %"class.v8::internal::Isolate"* %1) #9
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, 15
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %23 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %2
  %26 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %23, i64 %20) #9
  br label %40

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #9
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi i64* [ %34, %33 ], [ %29, %27 ]
  %37 = ptrtoint i64* %36 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  store i64* %39, i64** %28, align 8
  store i64 %20, i64* %36, align 8
  br label %40

40:                                               ; preds = %25, %35
  %41 = phi i64* [ %26, %25 ], [ %36, %35 ]
  store i64* %41, i64** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %42 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 3
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 4
  %44 = load i64, i64* %41, align 8
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 0, i32 7, i32 0, i64 6
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %44 to i32
  %49 = trunc i64 %47 to i32
  %50 = icmp eq i32 %48, %49
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %43, align 4
  %52 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 6
  store i32 0, i32* %52, align 8
  br i1 %50, label %228, label %53

53:                                               ; preds = %40
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %57 = ptrtoint %"class.v8::internal::Heap"* %56 to i64
  %58 = add i64 %57, -41416
  %59 = inttoptr i64 %58 to %"class.v8::internal::Isolate"*
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 0, i32 7, i32 0, i64 120
  %61 = bitcast i32* %5 to i8*
  br label %62

62:                                               ; preds = %53, %224
  %63 = phi i64* [ %0, %53 ], [ %225, %224 ]
  %64 = phi i64* [ %6, %53 ], [ %87, %224 ]
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 15
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp ugt i32 %68, -3
  br i1 %69, label %70, label %228

70:                                               ; preds = %62
  %71 = load i64*, i64** %21, align 8
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %70
  %76 = and i64 %72, -4294967296
  %77 = add i64 %72, -1
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %76, %80
  %82 = add i64 %81, 7
  %83 = inttoptr i64 %82 to i16*
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = icmp eq i16 %84, 188
  br i1 %85, label %228, label %86

86:                                               ; preds = %70, %75
  %87 = call i64* @_ZN2v88internal3Map24GetOrCreatePrototypeInfoENS0_6HandleINS0_8JSObjectEEEPNS0_7IsolateE(i64* %71, %"class.v8::internal::Isolate"* %1) #9
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, -4294967296
  %90 = add i64 %88, 7
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %89, %93
  %95 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %96 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %86
  %98 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %95, i64 %94) #9
  %99 = load i64, i64* %98, align 8
  br label %111

100:                                              ; preds = %86
  %101 = load i64*, i64** %54, align 8
  %102 = load i64*, i64** %55, align 8
  %103 = icmp eq i64* %101, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #9
  br label %106

106:                                              ; preds = %104, %100
  %107 = phi i64* [ %105, %104 ], [ %101, %100 ]
  %108 = ptrtoint i64* %107 to i64
  %109 = add i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  store i64* %110, i64** %54, align 8
  store i64 %94, i64* %107, align 8
  br label %111

111:                                              ; preds = %97, %106
  %112 = phi i64 [ %99, %97 ], [ %94, %106 ]
  %113 = phi i64* [ %98, %97 ], [ %107, %106 ]
  %114 = and i64 %112, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %133

116:                                              ; preds = %111
  %117 = load i64, i64* %60, align 8
  %118 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %119 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %116
  %121 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %118, i64 %117) #9
  br label %133

122:                                              ; preds = %116
  %123 = load i64*, i64** %54, align 8
  %124 = load i64*, i64** %55, align 8
  %125 = icmp eq i64* %123, %124
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  %127 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #9
  br label %128

128:                                              ; preds = %126, %122
  %129 = phi i64* [ %127, %126 ], [ %123, %122 ]
  %130 = ptrtoint i64* %129 to i64
  %131 = add i64 %130, 8
  %132 = inttoptr i64 %131 to i64*
  store i64* %132, i64** %54, align 8
  store i64 %117, i64* %129, align 8
  br label %133

133:                                              ; preds = %111, %128, %120
  %134 = phi i64* [ %121, %120 ], [ %129, %128 ], [ %113, %111 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #9
  store i32 0, i32* %5, align 4
  %135 = call i64* @_ZN2v88internal14PrototypeUsers3AddEPNS0_7IsolateENS0_6HandleINS0_13WeakArrayListEEENS4_INS0_3MapEEEPi(%"class.v8::internal::Isolate"* %1, i64* %134, i64* %63, i32* nonnull %5) #9
  %136 = load i64, i64* %64, align 8
  %137 = load i32, i32* %5, align 4
  %138 = shl i32 %137, 1
  %139 = add i64 %136, 15
  %140 = inttoptr i64 %139 to i32*
  store atomic volatile i32 %138, i32* %140 monotonic, align 4
  %141 = icmp eq i64* %113, %135
  br i1 %141, label %186, label %142

142:                                              ; preds = %133
  %143 = icmp eq i64* %113, null
  %144 = icmp eq i64* %135, null
  %145 = or i1 %143, %144
  br i1 %145, label %146, label %149

146:                                              ; preds = %142
  %147 = load i64, i64* %135, align 8
  %148 = trunc i64 %147 to i32
  br label %155

149:                                              ; preds = %142
  %150 = load i64, i64* %113, align 8
  %151 = load i64, i64* %135, align 8
  %152 = trunc i64 %150 to i32
  %153 = trunc i64 %151 to i32
  %154 = icmp eq i32 %152, %153
  br i1 %154, label %186, label %155

155:                                              ; preds = %146, %149
  %156 = phi i32 [ %148, %146 ], [ %153, %149 ]
  %157 = phi i64 [ %147, %146 ], [ %151, %149 ]
  %158 = load i64, i64* %87, align 8
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i32*
  store atomic volatile i32 %156, i32* %160 monotonic, align 4
  %161 = and i64 %157, 1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %186, label %163

163:                                              ; preds = %155
  %164 = and i64 %158, -262144
  %165 = or i64 %164, 8
  %166 = inttoptr i64 %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = and i64 %167, 262144
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %174, label %170

170:                                              ; preds = %163
  %171 = or i64 %164, 16
  %172 = inttoptr i64 %171 to %"class.v8::internal::Heap"**
  %173 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %172, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %173, i64 %158, i64 %159, i64 %157) #9
  br label %174

174:                                              ; preds = %170, %163
  %175 = and i64 %157, -262144
  %176 = or i64 %175, 8
  %177 = inttoptr i64 %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = and i64 %178, 24
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %186, label %181

181:                                              ; preds = %174
  %182 = load i64, i64* %166, align 8
  %183 = and i64 %182, 24
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %181
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %158, i64 %159, i64 %157) #9
  br label %186

186:                                              ; preds = %133, %185, %181, %174, %155, %149
  %187 = load i8, i8* @_ZN2v88internal26FLAG_trace_prototype_usersE, align 1, !range !5
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %201, label %189

189:                                              ; preds = %186
  %190 = bitcast i64* %63 to i8**
  %191 = load i8*, i8** %190, align 8
  %192 = load i64, i64* %71, align 8
  %193 = inttoptr i64 %192 to i8*
  %194 = and i64 %192, -4294967296
  %195 = add i64 %192, -1
  %196 = inttoptr i64 %195 to i32*
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = zext i32 %197 to i64
  %199 = or i64 %194, %198
  %200 = inttoptr i64 %199 to i8*
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.58, i64 0, i64 0), i8* %191, i8* %193, i8* %200) #9
  br label %201

201:                                              ; preds = %186, %189
  %202 = load i64, i64* %71, align 8
  %203 = and i64 %202, -4294967296
  %204 = add i64 %202, -1
  %205 = inttoptr i64 %204 to i32*
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = zext i32 %206 to i64
  %208 = or i64 %203, %207
  %209 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %210 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %201
  %212 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %209, i64 %208) #9
  br label %224

213:                                              ; preds = %201
  %214 = load i64*, i64** %54, align 8
  %215 = load i64*, i64** %55, align 8
  %216 = icmp eq i64* %214, %215
  br i1 %216, label %217, label %219

217:                                              ; preds = %213
  %218 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #9
  br label %219

219:                                              ; preds = %217, %213
  %220 = phi i64* [ %218, %217 ], [ %214, %213 ]
  %221 = ptrtoint i64* %220 to i64
  %222 = add i64 %221, 8
  %223 = inttoptr i64 %222 to i64*
  store i64* %223, i64** %54, align 8
  store i64 %208, i64* %220, align 8
  br label %224

224:                                              ; preds = %219, %211
  %225 = phi i64* [ %212, %211 ], [ %220, %219 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #9
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %4)
  %226 = load i8, i8* %43, align 4
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %62, label %228

228:                                              ; preds = %62, %75, %224, %40
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject15NotifyMapChangeENS0_6HandleINS0_3MapEEES4_PNS0_7IsolateE(i64*, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %0, align 8
  %5 = add i64 %4, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = and i32 %7, 1048576
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = load i64, i64* %0, align 8
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %11) #9
  tail call void @_ZN2v88internal8JSObject31UpdatePrototypeUserRegistrationENS0_6HandleINS0_3MapEEES4_PNS0_7IsolateE(i64* %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %12

12:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Representation", align 1
  %6 = alloca %"class.v8::internal::Representation", align 1
  %7 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::Representation", align 1
  %15 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %16, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i64 %18, 4294967295
  %23 = icmp eq i64 %22, 0
  tail call void @llvm.assume(i1 %23) #9
  %24 = load i64, i64* %2, align 8
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %21, %25
  br i1 %26, label %1879, label %27

27:                                               ; preds = %4
  %28 = load atomic i32, i32* %20 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %18, %29
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %27
  %35 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %30) #9
  %36 = load i64, i64* %35, align 8
  br label %50

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %41 = load i64*, i64** %40, align 8
  %42 = icmp eq i64* %39, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %45

45:                                               ; preds = %43, %37
  %46 = phi i64* [ %44, %43 ], [ %39, %37 ]
  %47 = ptrtoint i64* %46 to i64
  %48 = add i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  store i64* %49, i64** %38, align 8
  store i64 %30, i64* %46, align 8
  br label %50

50:                                               ; preds = %34, %45
  %51 = phi i64 [ %36, %34 ], [ %30, %45 ]
  %52 = phi i64* [ %35, %34 ], [ %46, %45 ]
  %53 = add i64 %51, 11
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 acquire, align 4
  %56 = and i32 %55, 1048576
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %50
  %59 = load i64, i64* %52, align 8
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %59) #9
  tail call void @_ZN2v88internal8JSObject31UpdatePrototypeUserRegistrationENS0_6HandleINS0_3MapEEES4_PNS0_7IsolateE(i64* %52, i64* %2, %"class.v8::internal::Isolate"* %0) #9
  br label %60

60:                                               ; preds = %50, %58
  %61 = load i64, i64* %52, align 8
  %62 = add i64 %61, 11
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2097152
  %66 = icmp eq i32 %65, 0
  %67 = load i64, i64* %2, align 8
  %68 = add i64 %67, 11
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2097152
  %72 = icmp ne i32 %71, 0
  br i1 %66, label %95, label %73

73:                                               ; preds = %60
  br i1 %72, label %75, label %74, !prof !4

74:                                               ; preds = %73
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.47, i64 0, i64 0)) #14
  unreachable

75:                                               ; preds = %73
  %76 = load i64, i64* %1, align 8
  %77 = add i64 %76, -1
  %78 = inttoptr i64 %77 to i32*
  %79 = trunc i64 %67 to i32
  store atomic volatile i32 %79, i32* %78 release, align 4
  %80 = icmp eq i32 %79, 0
  %81 = and i64 %67, 1
  %82 = icmp eq i64 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %1879, label %84

84:                                               ; preds = %75
  %85 = and i64 %76, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 262144
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %1879, label %91

91:                                               ; preds = %84
  %92 = or i64 %85, 16
  %93 = inttoptr i64 %92 to %"class.v8::internal::Heap"**
  %94 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %93, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %94, i64 %76, i64 0, i64 %67) #9
  br label %1879

95:                                               ; preds = %60
  br i1 %72, label %1269, label %96

96:                                               ; preds = %95
  %97 = load i64, i64* %1, align 8
  %98 = and i64 %97, -4294967296
  %99 = add i64 %97, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %98, %102
  %104 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %105 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %96
  %107 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %104, i64 %103) #9
  br label %121

108:                                              ; preds = %96
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %110, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %108
  %115 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %116

116:                                              ; preds = %114, %108
  %117 = phi i64* [ %115, %114 ], [ %110, %108 ]
  %118 = ptrtoint i64* %117 to i64
  %119 = add i64 %118, 8
  %120 = inttoptr i64 %119 to i64*
  store i64* %120, i64** %109, align 8
  store i64 %103, i64* %117, align 8
  br label %121

121:                                              ; preds = %116, %106
  %122 = phi i64* [ %107, %106 ], [ %117, %116 ]
  %123 = load i64, i64* %2, align 8
  %124 = load i64, i64* %17, align 8
  %125 = add i64 %123, 19
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = and i64 %124, 4294967295
  %129 = icmp eq i64 %128, 0
  tail call void @llvm.assume(i1 %129) #9
  %130 = zext i32 %127 to i64
  %131 = or i64 %124, %130
  %132 = and i64 %130, 1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %121
  %135 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br label %162

136:                                              ; preds = %121
  %137 = add i64 %131, -1
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %141 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %140, null
  br i1 %141, label %148, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %140, i64 0, i32 0, i32 1
  %144 = load i8, i8* %143, align 8, !range !5
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %140, i64 0, i32 1, i64 0
  br label %156

148:                                              ; preds = %142, %136
  %149 = and i64 %123, -262144
  %150 = or i64 %149, 16
  %151 = inttoptr i64 %150 to i64*
  %152 = load i64, i64* %151, align 16
  %153 = add i64 %152, -41416
  %154 = inttoptr i64 %153 to %"class.v8::internal::Isolate"*
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %154, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %156

156:                                              ; preds = %148, %146
  %157 = phi i64* [ %155, %148 ], [ %147, %146 ]
  %158 = getelementptr inbounds i64, i64* %157, i64 10
  %159 = load i64, i64* %158, align 8
  %160 = trunc i64 %159 to i32
  %161 = icmp eq i32 %139, %160
  br i1 %161, label %183, label %162

162:                                              ; preds = %156, %134
  %163 = phi %"class.v8::internal::SoleReadOnlyHeap"* [ %135, %134 ], [ %140, %156 ]
  %164 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %163, null
  br i1 %164, label %171, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %163, i64 0, i32 0, i32 1
  %167 = load i8, i8* %166, align 8, !range !5
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %163, i64 0, i32 1, i64 0
  br label %179

171:                                              ; preds = %165, %162
  %172 = and i64 %123, -262144
  %173 = or i64 %172, 16
  %174 = inttoptr i64 %173 to i64*
  %175 = load i64, i64* %174, align 16
  %176 = add i64 %175, -41416
  %177 = inttoptr i64 %176 to %"class.v8::internal::Isolate"*
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %177, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %179

179:                                              ; preds = %171, %169
  %180 = phi i64* [ %178, %171 ], [ %170, %169 ]
  %181 = getelementptr inbounds i64, i64* %180, i64 4
  %182 = load i64, i64* %181, align 8
  br label %183

183:                                              ; preds = %179, %156
  %184 = phi i64 [ %182, %179 ], [ %131, %156 ]
  %185 = load i64, i64* %122, align 8
  %186 = trunc i64 %184 to i32
  %187 = trunc i64 %185 to i32
  %188 = icmp eq i32 %186, %187
  br i1 %188, label %189, label %598

189:                                              ; preds = %183
  %190 = add i64 %185, 11
  %191 = inttoptr i64 %190 to i32*
  %192 = load atomic i32, i32* %191 acquire, align 4
  %193 = load i64, i64* %2, align 8
  %194 = add i64 %193, 11
  %195 = inttoptr i64 %194 to i32*
  %196 = load atomic i32, i32* %195 acquire, align 4
  %197 = xor i32 %196, %192
  %198 = and i32 %197, 1047552
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %221

200:                                              ; preds = %189
  %201 = load i64, i64* %1, align 8
  %202 = load i64, i64* %2, align 8
  %203 = add i64 %201, -1
  %204 = inttoptr i64 %203 to i32*
  %205 = trunc i64 %202 to i32
  store atomic volatile i32 %205, i32* %204 release, align 4
  %206 = icmp eq i32 %205, 0
  %207 = and i64 %202, 1
  %208 = icmp eq i64 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %1256, label %210

210:                                              ; preds = %200
  %211 = and i64 %201, -262144
  %212 = or i64 %211, 8
  %213 = inttoptr i64 %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = and i64 %214, 262144
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %1256, label %217

217:                                              ; preds = %210
  %218 = or i64 %211, 16
  %219 = inttoptr i64 %218 to %"class.v8::internal::Heap"**
  %220 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %219, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %220, i64 %201, i64 0, i64 %202) #9
  br label %1256

221:                                              ; preds = %189
  %222 = load i64, i64* %2, align 8
  %223 = load i64, i64* %17, align 8
  %224 = add i64 %222, 23
  %225 = inttoptr i64 %224 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = and i64 %223, 4294967295
  %228 = icmp eq i64 %227, 0
  tail call void @llvm.assume(i1 %228) #9
  %229 = zext i32 %226 to i64
  %230 = or i64 %223, %229
  %231 = add i64 %222, 11
  %232 = inttoptr i64 %231 to i32*
  %233 = load atomic i32, i32* %232 acquire, align 4
  %234 = lshr i32 %233, 10
  %235 = and i32 %234, 1023
  %236 = add nsw i32 %235, -1
  %237 = sext i32 %236 to i64
  %238 = mul nsw i64 %237, 51539607552
  %239 = add nsw i64 %238, 68719476736
  %240 = ashr exact i64 %239, 32
  %241 = or i64 %240, 3
  %242 = add i64 %241, %230
  %243 = inttoptr i64 %242 to i32*
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %268, label %247

247:                                              ; preds = %221
  %248 = load i64, i64* %1, align 8
  %249 = load i64, i64* %2, align 8
  %250 = add i64 %248, -1
  %251 = inttoptr i64 %250 to i32*
  %252 = trunc i64 %249 to i32
  store atomic volatile i32 %252, i32* %251 release, align 4
  %253 = icmp eq i32 %252, 0
  %254 = and i64 %249, 1
  %255 = icmp eq i64 %254, 0
  %256 = or i1 %253, %255
  br i1 %256, label %1256, label %257

257:                                              ; preds = %247
  %258 = and i64 %248, -262144
  %259 = or i64 %258, 8
  %260 = inttoptr i64 %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = and i64 %261, 262144
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %1256, label %264

264:                                              ; preds = %257
  %265 = or i64 %258, 16
  %266 = inttoptr i64 %265 to %"class.v8::internal::Heap"**
  %267 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %266, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %267, i64 %248, i64 0, i64 %249) #9
  br label %1256

268:                                              ; preds = %221
  %269 = load i64, i64* %17, align 8
  %270 = load i64, i64* %2, align 8
  %271 = add i64 %270, 11
  %272 = inttoptr i64 %271 to i32*
  %273 = load atomic i32, i32* %272 acquire, align 4
  %274 = lshr i32 %273, 10
  %275 = and i32 %274, 1023
  %276 = add nsw i32 %275, -1
  %277 = sext i32 %276 to i64
  %278 = add i64 %270, 23
  %279 = inttoptr i64 %278 to i32*
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i64 %269, 4294967295
  %282 = icmp eq i64 %281, 0
  tail call void @llvm.assume(i1 %282) #9
  %283 = zext i32 %280 to i64
  %284 = or i64 %269, %283
  %285 = mul nsw i64 %277, 51539607552
  %286 = add nsw i64 %285, 68719476736
  %287 = ashr exact i64 %286, 32
  %288 = or i64 %287, 3
  %289 = add i64 %288, %284
  %290 = inttoptr i64 %289 to i32*
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = ashr i32 %291, 1
  %293 = lshr i32 %292, 19
  %294 = and i32 %293, 1023
  %295 = lshr i32 %292, 6
  %296 = trunc i32 %295 to i8
  %297 = and i8 %296, 7
  %298 = add i64 %270, 3
  %299 = inttoptr i64 %298 to i8*
  %300 = load atomic i8, i8* %299 monotonic, align 1
  %301 = zext i8 %300 to i32
  %302 = add i64 %270, 4
  %303 = inttoptr i64 %302 to i8*
  %304 = load atomic i8, i8* %303 monotonic, align 1
  %305 = zext i8 %304 to i32
  %306 = sub nsw i32 %301, %305
  %307 = icmp slt i32 %294, %306
  br i1 %307, label %308, label %316

308:                                              ; preds = %268
  %309 = load atomic i8, i8* %303 monotonic, align 1
  %310 = zext i8 %309 to i64
  %311 = shl nuw nsw i64 %310, 28
  %312 = load atomic i8, i8* %303 monotonic, align 1
  %313 = zext i8 %312 to i32
  %314 = add nuw nsw i32 %294, %313
  %315 = shl nuw nsw i32 %314, 2
  br label %320

316:                                              ; preds = %268
  %317 = sub nsw i32 %294, %306
  %318 = shl nsw i32 %317, 2
  %319 = add nsw i32 %318, 8
  br label %320

320:                                              ; preds = %316, %308
  %321 = phi i32 [ %315, %308 ], [ %319, %316 ]
  %322 = phi i64 [ %311, %308 ], [ 536870912, %316 ]
  %323 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %323) #9
  store i8 %297, i8* %323, align 1
  %324 = icmp ult i8 %297, 5
  br i1 %324, label %327, label %325

325:                                              ; preds = %320
  %326 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %5) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* %326) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

327:                                              ; preds = %320
  %328 = zext i8 %297 to i64
  %329 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal8JSObject17SlowReverseLookupENS0_6ObjectE, i64 0, i64 %328
  %330 = load i64, i64* %329, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %323) #9
  %331 = zext i1 %307 to i64
  %332 = shl nuw nsw i64 %331, 13
  %333 = sext i32 %321 to i64
  %334 = sext i32 %306 to i64
  %335 = shl nsw i64 %334, 16
  %336 = or i64 %332, %335
  %337 = or i64 %336, %333
  %338 = or i64 %337, %322
  %339 = or i64 %330, %338
  %340 = and i64 %337, 8192
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %411

342:                                              ; preds = %327
  %343 = lshr i32 %321, 2
  %344 = and i32 %343, 2047
  %345 = lshr i64 %338, 28
  %346 = trunc i64 %345 to i32
  %347 = and i32 %346, 31
  %348 = sub nsw i32 %344, %347
  %349 = load i64, i64* %1, align 8
  %350 = load i64, i64* %17, align 8
  %351 = add i64 %349, 3
  %352 = inttoptr i64 %351 to i32*
  %353 = load i32, i32* %352, align 4
  %354 = and i64 %350, 4294967295
  %355 = icmp eq i64 %354, 0
  tail call void @llvm.assume(i1 %355) #9
  %356 = zext i32 %353 to i64
  %357 = or i64 %350, %356
  %358 = and i64 %356, 1
  %359 = icmp eq i64 %358, 0
  %360 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %359, label %383, label %361

361:                                              ; preds = %342
  %362 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %360, null
  br i1 %362, label %369, label %363

363:                                              ; preds = %361
  %364 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %360, i64 0, i32 0, i32 1
  %365 = load i8, i8* %364, align 8, !range !5
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %369, label %367

367:                                              ; preds = %363
  %368 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %360, i64 0, i32 1, i64 0
  br label %377

369:                                              ; preds = %363, %361
  %370 = and i64 %349, -262144
  %371 = or i64 %370, 16
  %372 = inttoptr i64 %371 to i64*
  %373 = load i64, i64* %372, align 16
  %374 = add i64 %373, -41416
  %375 = inttoptr i64 %374 to %"class.v8::internal::Isolate"*
  %376 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %375, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %377

377:                                              ; preds = %369, %367
  %378 = phi i64* [ %376, %369 ], [ %368, %367 ]
  %379 = getelementptr inbounds i64, i64* %378, i64 29
  %380 = load i64, i64* %379, align 8
  %381 = trunc i64 %380 to i32
  %382 = icmp eq i32 %353, %381
  br i1 %382, label %383, label %403

383:                                              ; preds = %377, %342
  %384 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %360, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %383
  %386 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %360, i64 0, i32 0, i32 1
  %387 = load i8, i8* %386, align 8, !range !5
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %391, label %389

389:                                              ; preds = %385
  %390 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %360, i64 0, i32 1, i64 0
  br label %399

391:                                              ; preds = %385, %383
  %392 = and i64 %349, -262144
  %393 = or i64 %392, 16
  %394 = inttoptr i64 %393 to i64*
  %395 = load i64, i64* %394, align 16
  %396 = add i64 %395, -41416
  %397 = inttoptr i64 %396 to %"class.v8::internal::Isolate"*
  %398 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %397, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %399

399:                                              ; preds = %391, %389
  %400 = phi i64* [ %398, %391 ], [ %390, %389 ]
  %401 = getelementptr inbounds i64, i64* %400, i64 106
  %402 = load i64, i64* %401, align 8
  br label %403

403:                                              ; preds = %399, %377
  %404 = phi i64 [ %402, %399 ], [ %357, %377 ]
  %405 = add i64 %404, 3
  %406 = inttoptr i64 %405 to i32*
  %407 = load i32, i32* %406, align 4
  %408 = lshr i32 %407, 1
  %409 = and i32 %408, 1023
  %410 = icmp slt i32 %348, %409
  br i1 %410, label %411, label %446

411:                                              ; preds = %403, %327
  %412 = and i64 %339, 49152
  %413 = icmp eq i64 %412, 16384
  br i1 %413, label %414, label %425

414:                                              ; preds = %411
  %415 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %416 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %415) #9
  %417 = load i64, i64* %416, align 8
  %418 = add i64 %417, 3
  %419 = inttoptr i64 %418 to i64*
  store i64 -2251799814209537, i64* %419, align 1
  %420 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %420) #9
  %421 = load i64, i64* %1, align 8
  %422 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %7, i64 0, i32 0
  %424 = load i64, i64* %416, align 8
  call void @_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::JSObject"* nonnull %423, i64 %339, i64 %424, i32 4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %420) #9
  br label %425

425:                                              ; preds = %414, %411
  %426 = load i64, i64* %1, align 8
  %427 = load i64, i64* %2, align 8
  %428 = add i64 %426, -1
  %429 = inttoptr i64 %428 to i32*
  %430 = trunc i64 %427 to i32
  store atomic volatile i32 %430, i32* %429 release, align 4
  %431 = icmp eq i32 %430, 0
  %432 = and i64 %427, 1
  %433 = icmp eq i64 %432, 0
  %434 = or i1 %431, %433
  br i1 %434, label %1256, label %435

435:                                              ; preds = %425
  %436 = and i64 %426, -262144
  %437 = or i64 %436, 8
  %438 = inttoptr i64 %437 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = and i64 %439, 262144
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %1256, label %442

442:                                              ; preds = %435
  %443 = or i64 %436, 16
  %444 = inttoptr i64 %443 to %"class.v8::internal::Heap"**
  %445 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %444, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %445, i64 %426, i64 0, i64 %427) #9
  br label %1256

446:                                              ; preds = %403
  %447 = load i64, i64* %2, align 8
  %448 = add i64 %447, 5
  %449 = inttoptr i64 %448 to i8*
  %450 = load atomic i8, i8* %449 monotonic, align 1
  %451 = zext i8 %450 to i32
  %452 = icmp ugt i8 %450, 2
  br i1 %452, label %453, label %459

453:                                              ; preds = %446
  %454 = add i64 %447, 3
  %455 = inttoptr i64 %454 to i8*
  %456 = load atomic i8, i8* %455 monotonic, align 1
  %457 = zext i8 %456 to i32
  %458 = sub nsw i32 %457, %451
  br label %459

459:                                              ; preds = %453, %446
  %460 = phi i32 [ %458, %453 ], [ %451, %446 ]
  %461 = add nsw i32 %460, 1
  br i1 %359, label %484, label %462

462:                                              ; preds = %459
  %463 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %360, null
  br i1 %463, label %470, label %464

464:                                              ; preds = %462
  %465 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %360, i64 0, i32 0, i32 1
  %466 = load i8, i8* %465, align 8, !range !5
  %467 = icmp eq i8 %466, 0
  br i1 %467, label %470, label %468

468:                                              ; preds = %464
  %469 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %360, i64 0, i32 1, i64 0
  br label %478

470:                                              ; preds = %464, %462
  %471 = and i64 %349, -262144
  %472 = or i64 %471, 16
  %473 = inttoptr i64 %472 to i64*
  %474 = load i64, i64* %473, align 16
  %475 = add i64 %474, -41416
  %476 = inttoptr i64 %475 to %"class.v8::internal::Isolate"*
  %477 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %476, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %478

478:                                              ; preds = %470, %468
  %479 = phi i64* [ %477, %470 ], [ %469, %468 ]
  %480 = getelementptr inbounds i64, i64* %479, i64 29
  %481 = load i64, i64* %480, align 8
  %482 = trunc i64 %481 to i32
  %483 = icmp eq i32 %353, %482
  br i1 %483, label %484, label %504

484:                                              ; preds = %478, %459
  %485 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %360, null
  br i1 %485, label %492, label %486

486:                                              ; preds = %484
  %487 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %360, i64 0, i32 0, i32 1
  %488 = load i8, i8* %487, align 8, !range !5
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %492, label %490

490:                                              ; preds = %486
  %491 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %360, i64 0, i32 1, i64 0
  br label %500

492:                                              ; preds = %486, %484
  %493 = and i64 %349, -262144
  %494 = or i64 %493, 16
  %495 = inttoptr i64 %494 to i64*
  %496 = load i64, i64* %495, align 16
  %497 = add i64 %496, -41416
  %498 = inttoptr i64 %497 to %"class.v8::internal::Isolate"*
  %499 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %498, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %500

500:                                              ; preds = %492, %490
  %501 = phi i64* [ %499, %492 ], [ %491, %490 ]
  %502 = getelementptr inbounds i64, i64* %501, i64 106
  %503 = load i64, i64* %502, align 8
  br label %504

504:                                              ; preds = %500, %478
  %505 = phi i64 [ %503, %500 ], [ %357, %478 ]
  %506 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %507 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %506, null
  br i1 %507, label %510, label %508

508:                                              ; preds = %504
  %509 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %506, i64 %505) #9
  br label %523

510:                                              ; preds = %504
  %511 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %512 = load i64*, i64** %511, align 8
  %513 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %514 = load i64*, i64** %513, align 8
  %515 = icmp eq i64* %512, %514
  br i1 %515, label %516, label %518

516:                                              ; preds = %510
  %517 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %518

518:                                              ; preds = %516, %510
  %519 = phi i64* [ %517, %516 ], [ %512, %510 ]
  %520 = ptrtoint i64* %519 to i64
  %521 = add i64 %520, 8
  %522 = inttoptr i64 %521 to i64*
  store i64* %522, i64** %511, align 8
  store i64 %505, i64* %519, align 8
  br label %523

523:                                              ; preds = %518, %508
  %524 = phi i64* [ %509, %508 ], [ %519, %518 ]
  %525 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %526 = tail call i64* @_ZN2v88internal7Factory24CopyPropertyArrayAndGrowENS0_6HandleINS0_13PropertyArrayEEEi(%"class.v8::internal::Factory"* %525, i64* %524, i32 %461) #9
  %527 = and i32 %244, 896
  %528 = icmp eq i32 %527, 256
  br i1 %528, label %529, label %535

529:                                              ; preds = %523
  %530 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %531 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %530) #9
  %532 = load i64, i64* %531, align 8
  %533 = add i64 %532, 3
  %534 = inttoptr i64 %533 to i64*
  store i64 -2251799814209537, i64* %534, align 1
  br label %537

535:                                              ; preds = %523
  %536 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 3
  br label %537

537:                                              ; preds = %535, %529
  %538 = phi i64* [ %531, %529 ], [ %536, %535 ]
  %539 = load i64, i64* %526, align 8
  %540 = load i64, i64* %538, align 8
  %541 = shl nsw i32 %348, 2
  %542 = add nsw i32 %541, 7
  %543 = sext i32 %542 to i64
  %544 = add i64 %539, %543
  %545 = inttoptr i64 %544 to i32*
  %546 = trunc i64 %540 to i32
  store atomic volatile i32 %546, i32* %545 monotonic, align 4
  %547 = and i64 %540, 1
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %572, label %549

549:                                              ; preds = %537
  %550 = and i64 %539, -262144
  %551 = or i64 %550, 8
  %552 = inttoptr i64 %551 to i64*
  %553 = load i64, i64* %552, align 8
  %554 = and i64 %553, 262144
  %555 = icmp eq i64 %554, 0
  br i1 %555, label %560, label %556

556:                                              ; preds = %549
  %557 = or i64 %550, 16
  %558 = inttoptr i64 %557 to %"class.v8::internal::Heap"**
  %559 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %558, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %559, i64 %539, i64 %544, i64 %540) #9
  br label %560

560:                                              ; preds = %556, %549
  %561 = and i64 %540, -262144
  %562 = or i64 %561, 8
  %563 = inttoptr i64 %562 to i64*
  %564 = load i64, i64* %563, align 8
  %565 = and i64 %564, 24
  %566 = icmp eq i64 %565, 0
  br i1 %566, label %572, label %567

567:                                              ; preds = %560
  %568 = load i64, i64* %552, align 8
  %569 = and i64 %568, 24
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %572

571:                                              ; preds = %567
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %539, i64 %544, i64 %540) #9
  br label %572

572:                                              ; preds = %571, %567, %560, %537
  %573 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %573) #9
  %574 = load i64, i64* %1, align 8
  %575 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %574, i64* %575, align 8
  %576 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0
  %577 = load i64, i64* %526, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %576, i64 %577) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %573) #9
  %578 = load i64, i64* %1, align 8
  %579 = load i64, i64* %2, align 8
  %580 = add i64 %578, -1
  %581 = inttoptr i64 %580 to i32*
  %582 = trunc i64 %579 to i32
  store atomic volatile i32 %582, i32* %581 release, align 4
  %583 = icmp eq i32 %582, 0
  %584 = and i64 %579, 1
  %585 = icmp eq i64 %584, 0
  %586 = or i1 %583, %585
  br i1 %586, label %1256, label %587

587:                                              ; preds = %572
  %588 = and i64 %578, -262144
  %589 = or i64 %588, 8
  %590 = inttoptr i64 %589 to i64*
  %591 = load i64, i64* %590, align 8
  %592 = and i64 %591, 262144
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %1256, label %594

594:                                              ; preds = %587
  %595 = or i64 %588, 16
  %596 = inttoptr i64 %595 to %"class.v8::internal::Heap"**
  %597 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %596, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %597, i64 %578, i64 0, i64 %579) #9
  br label %1256

598:                                              ; preds = %183
  %599 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %599) #9
  %600 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %600) #9
  %601 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %123, i64* %601, align 8
  %602 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %10, i64 0, i32 0
  %603 = call i32 @_ZNK2v88internal3Map14NumberOfFieldsEv(%"class.v8::internal::Map"* nonnull %602) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %600) #9
  %604 = load i64, i64* %2, align 8
  %605 = add i64 %604, 3
  %606 = inttoptr i64 %605 to i8*
  %607 = load atomic i8, i8* %606 monotonic, align 1
  %608 = zext i8 %607 to i32
  %609 = add i64 %604, 4
  %610 = inttoptr i64 %609 to i8*
  %611 = load atomic i8, i8* %610 monotonic, align 1
  %612 = zext i8 %611 to i32
  %613 = sub nsw i32 %608, %612
  %614 = add i64 %604, 5
  %615 = inttoptr i64 %614 to i8*
  %616 = load atomic i8, i8* %615 monotonic, align 1
  %617 = zext i8 %616 to i32
  %618 = icmp ugt i8 %616, 2
  br i1 %618, label %619, label %623

619:                                              ; preds = %598
  %620 = load atomic i8, i8* %606 monotonic, align 1
  %621 = zext i8 %620 to i32
  %622 = sub nsw i32 %621, %617
  br label %623

623:                                              ; preds = %619, %598
  %624 = phi i32 [ %622, %619 ], [ %617, %598 ]
  %625 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %625) #9
  %626 = load i64, i64* %122, align 8
  %627 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %626, i64* %627, align 8
  %628 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %11, i64 0, i32 0
  %629 = call zeroext i1 @_ZNK2v88internal3Map22InstancesNeedRewritingES1_iiiPi(%"class.v8::internal::Map"* nonnull %628, i64 %604, i32 %603, i32 %613, i32 %624, i32* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %625) #9
  br i1 %629, label %651, label %630

630:                                              ; preds = %623
  %631 = load i64, i64* %1, align 8
  %632 = load i64, i64* %2, align 8
  %633 = add i64 %631, -1
  %634 = inttoptr i64 %633 to i32*
  %635 = trunc i64 %632 to i32
  store atomic volatile i32 %635, i32* %634 release, align 4
  %636 = icmp eq i32 %635, 0
  %637 = and i64 %632, 1
  %638 = icmp eq i64 %637, 0
  %639 = or i1 %636, %638
  br i1 %639, label %1255, label %640

640:                                              ; preds = %630
  %641 = and i64 %631, -262144
  %642 = or i64 %641, 8
  %643 = inttoptr i64 %642 to i64*
  %644 = load i64, i64* %643, align 8
  %645 = and i64 %644, 262144
  %646 = icmp eq i64 %645, 0
  br i1 %646, label %1255, label %647

647:                                              ; preds = %640
  %648 = or i64 %641, 16
  %649 = inttoptr i64 %648 to %"class.v8::internal::Heap"**
  %650 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %649, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %650, i64 %631, i64 0, i64 %632) #9
  br label %1255

651:                                              ; preds = %623
  %652 = sub i32 %603, %613
  %653 = add i32 %652, %624
  %654 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %655 = call i64* @_ZN2v88internal7Factory16NewPropertyArrayEi(%"class.v8::internal::Factory"* %654, i32 %653) #9
  %656 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %657 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %656, i32 %613, i8 zeroext 0) #9
  %658 = load i64, i64* %122, align 8
  %659 = load i64, i64* %17, align 8
  %660 = add i64 %658, 23
  %661 = inttoptr i64 %660 to i32*
  %662 = load i32, i32* %661, align 4
  %663 = and i64 %659, 4294967295
  %664 = icmp eq i64 %663, 0
  call void @llvm.assume(i1 %664) #9
  %665 = zext i32 %662 to i64
  %666 = or i64 %659, %665
  %667 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %668 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %667, null
  br i1 %668, label %671, label %669

669:                                              ; preds = %651
  %670 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %667, i64 %666) #9
  br label %684

671:                                              ; preds = %651
  %672 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %673 = load i64*, i64** %672, align 8
  %674 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %675 = load i64*, i64** %674, align 8
  %676 = icmp eq i64* %673, %675
  br i1 %676, label %677, label %679

677:                                              ; preds = %671
  %678 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %679

679:                                              ; preds = %677, %671
  %680 = phi i64* [ %678, %677 ], [ %673, %671 ]
  %681 = ptrtoint i64* %680 to i64
  %682 = add i64 %681, 8
  %683 = inttoptr i64 %682 to i64*
  store i64* %683, i64** %672, align 8
  store i64 %666, i64* %680, align 8
  br label %684

684:                                              ; preds = %679, %669
  %685 = phi i64* [ %670, %669 ], [ %680, %679 ]
  %686 = load i64, i64* %2, align 8
  %687 = load i64, i64* %17, align 8
  %688 = add i64 %686, 23
  %689 = inttoptr i64 %688 to i32*
  %690 = load i32, i32* %689, align 4
  %691 = and i64 %687, 4294967295
  %692 = icmp eq i64 %691, 0
  call void @llvm.assume(i1 %692) #9
  %693 = zext i32 %690 to i64
  %694 = or i64 %687, %693
  %695 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %696 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %695, null
  br i1 %696, label %699, label %697

697:                                              ; preds = %684
  %698 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %695, i64 %694) #9
  br label %712

699:                                              ; preds = %684
  %700 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %701 = load i64*, i64** %700, align 8
  %702 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %703 = load i64*, i64** %702, align 8
  %704 = icmp eq i64* %701, %703
  br i1 %704, label %705, label %707

705:                                              ; preds = %699
  %706 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %707

707:                                              ; preds = %705, %699
  %708 = phi i64* [ %706, %705 ], [ %701, %699 ]
  %709 = ptrtoint i64* %708 to i64
  %710 = add i64 %709, 8
  %711 = inttoptr i64 %710 to i64*
  store i64* %711, i64** %700, align 8
  store i64 %694, i64* %708, align 8
  br label %712

712:                                              ; preds = %707, %697
  %713 = phi i64* [ %698, %697 ], [ %708, %707 ]
  %714 = load i64, i64* %122, align 8
  %715 = add i64 %714, 11
  %716 = inttoptr i64 %715 to i32*
  %717 = load atomic i32, i32* %716 acquire, align 4
  %718 = lshr i32 %717, 10
  %719 = and i32 %718, 1023
  %720 = load i64, i64* %2, align 8
  %721 = add i64 %720, 11
  %722 = inttoptr i64 %721 to i32*
  %723 = load atomic i32, i32* %722 acquire, align 4
  %724 = lshr i32 %723, 10
  %725 = and i32 %724, 1023
  %726 = zext i32 %719 to i64
  %727 = icmp eq i32 %719, 0
  br i1 %727, label %734, label %728

728:                                              ; preds = %712
  %729 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 3
  %730 = ptrtoint i64* %729 to i64
  %731 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %732 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %733 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %6, i64 0, i32 0
  br label %739

734:                                              ; preds = %1038, %712
  %735 = zext i32 %725 to i64
  %736 = icmp eq i32 %719, %725
  br i1 %736, label %1041, label %737

737:                                              ; preds = %734
  %738 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 3
  br label %1051

739:                                              ; preds = %1038, %728
  %740 = phi i64 [ 0, %728 ], [ %1039, %1038 ]
  %741 = load i64, i64* %713, align 8
  %742 = mul nuw nsw i64 %740, 51539607552
  %743 = add nuw nsw i64 %742, 68719476736
  %744 = lshr exact i64 %743, 32
  %745 = or i64 %744, 3
  %746 = add i64 %745, %741
  %747 = inttoptr i64 %746 to i32*
  %748 = load atomic i32, i32* %747 monotonic, align 4
  %749 = and i32 %748, 4
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %1038

751:                                              ; preds = %739
  %752 = lshr i32 %748, 7
  %753 = load i64, i64* %685, align 8
  %754 = add i64 %753, %745
  %755 = inttoptr i64 %754 to i32*
  %756 = load atomic i32, i32* %755 monotonic, align 4
  %757 = trunc i32 %752 to i8
  %758 = and i8 %757, 7
  %759 = and i32 %756, 4
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %798, label %761

761:                                              ; preds = %751
  %762 = and i32 %756, 2
  %763 = icmp eq i32 %762, 0
  br i1 %763, label %772, label %764

764:                                              ; preds = %761
  %765 = icmp eq i8 %758, 2
  br i1 %765, label %766, label %958

766:                                              ; preds = %764
  %767 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %656) #9
  %768 = load i64, i64* %767, align 8
  %769 = add i64 %768, 3
  %770 = inttoptr i64 %769 to i64*
  store i64 -2251799814209537, i64* %770, align 1
  %771 = ptrtoint i64* %767 to i64
  br label %958

772:                                              ; preds = %761
  %773 = load i64, i64* %17, align 8
  %774 = add nuw nsw i64 %744, 7
  %775 = add i64 %774, %753
  %776 = inttoptr i64 %775 to i32*
  %777 = load atomic i32, i32* %776 monotonic, align 4
  %778 = and i64 %773, 4294967295
  %779 = icmp eq i64 %778, 0
  call void @llvm.assume(i1 %779) #9
  %780 = zext i32 %777 to i64
  %781 = or i64 %773, %780
  %782 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %783 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %782, null
  br i1 %783, label %787, label %784

784:                                              ; preds = %772
  %785 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %782, i64 %781) #9
  %786 = ptrtoint i64* %785 to i64
  br label %958

787:                                              ; preds = %772
  %788 = load i64*, i64** %731, align 8
  %789 = load i64*, i64** %732, align 8
  %790 = icmp eq i64* %788, %789
  br i1 %790, label %791, label %793

791:                                              ; preds = %787
  %792 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %793

793:                                              ; preds = %791, %787
  %794 = phi i64* [ %792, %791 ], [ %788, %787 ]
  %795 = ptrtoint i64* %794 to i64
  %796 = add i64 %795, 8
  %797 = inttoptr i64 %796 to i64*
  store i64* %797, i64** %731, align 8
  store i64 %781, i64* %794, align 8
  br label %958

798:                                              ; preds = %751
  %799 = load i64, i64* %17, align 8
  %800 = load i64, i64* %122, align 8
  %801 = add i64 %800, 23
  %802 = inttoptr i64 %801 to i32*
  %803 = load atomic i32, i32* %802 monotonic, align 4
  %804 = and i64 %799, 4294967295
  %805 = icmp eq i64 %804, 0
  call void @llvm.assume(i1 %805) #9
  %806 = zext i32 %803 to i64
  %807 = or i64 %799, %806
  %808 = add i64 %807, %745
  %809 = inttoptr i64 %808 to i32*
  %810 = load atomic i32, i32* %809 monotonic, align 4
  %811 = ashr i32 %810, 1
  %812 = lshr i32 %811, 19
  %813 = and i32 %812, 1023
  %814 = lshr i32 %811, 6
  %815 = trunc i32 %814 to i8
  %816 = and i8 %815, 7
  %817 = add i64 %800, 3
  %818 = inttoptr i64 %817 to i8*
  %819 = load atomic i8, i8* %818 monotonic, align 1
  %820 = zext i8 %819 to i32
  %821 = add i64 %800, 4
  %822 = inttoptr i64 %821 to i8*
  %823 = load atomic i8, i8* %822 monotonic, align 1
  %824 = zext i8 %823 to i32
  %825 = sub nsw i32 %820, %824
  %826 = icmp slt i32 %813, %825
  br i1 %826, label %827, label %835

827:                                              ; preds = %798
  %828 = load atomic i8, i8* %822 monotonic, align 1
  %829 = zext i8 %828 to i64
  %830 = shl nuw nsw i64 %829, 28
  %831 = load atomic i8, i8* %822 monotonic, align 1
  %832 = zext i8 %831 to i32
  %833 = add nuw nsw i32 %813, %832
  %834 = shl nuw nsw i32 %833, 2
  br label %839

835:                                              ; preds = %798
  %836 = sub nsw i32 %813, %825
  %837 = shl nsw i32 %836, 2
  %838 = add nsw i32 %837, 8
  br label %839

839:                                              ; preds = %835, %827
  %840 = phi i32 [ %834, %827 ], [ %838, %835 ]
  %841 = phi i64 [ %830, %827 ], [ 536870912, %835 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %733) #9
  store i8 %816, i8* %733, align 1
  %842 = icmp ult i8 %816, 5
  br i1 %842, label %845, label %843

843:                                              ; preds = %839
  %844 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %6) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* %844) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

845:                                              ; preds = %839
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %733) #9
  %846 = zext i1 %826 to i64
  %847 = shl nuw nsw i64 %846, 13
  %848 = sext i32 %840 to i64
  %849 = sext i32 %825 to i64
  %850 = shl nsw i64 %849, 16
  %851 = or i64 %847, %850
  %852 = or i64 %851, %848
  %853 = or i64 %852, %841
  %854 = load i64, i64* %1, align 8
  %855 = and i64 %852, 8192
  %856 = icmp eq i64 %855, 0
  br i1 %856, label %862, label %857

857:                                              ; preds = %845
  %858 = and i64 %848, 8191
  %859 = add nsw i64 %858, -1
  %860 = add i64 %859, %854
  %861 = inttoptr i64 %860 to i32*
  br label %923

862:                                              ; preds = %845
  %863 = add i64 %854, 3
  %864 = inttoptr i64 %863 to i32*
  %865 = load i32, i32* %864, align 4
  %866 = zext i32 %865 to i64
  %867 = or i64 %799, %866
  %868 = and i64 %866, 1
  %869 = icmp eq i64 %868, 0
  %870 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %869, label %893, label %871

871:                                              ; preds = %862
  %872 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %870, null
  br i1 %872, label %879, label %873

873:                                              ; preds = %871
  %874 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %870, i64 0, i32 0, i32 1
  %875 = load i8, i8* %874, align 8, !range !5
  %876 = icmp eq i8 %875, 0
  br i1 %876, label %879, label %877

877:                                              ; preds = %873
  %878 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %870, i64 0, i32 1, i64 0
  br label %887

879:                                              ; preds = %873, %871
  %880 = and i64 %854, -262144
  %881 = or i64 %880, 16
  %882 = inttoptr i64 %881 to i64*
  %883 = load i64, i64* %882, align 16
  %884 = add i64 %883, -41416
  %885 = inttoptr i64 %884 to %"class.v8::internal::Isolate"*
  %886 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %885, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %887

887:                                              ; preds = %879, %877
  %888 = phi i64* [ %886, %879 ], [ %878, %877 ]
  %889 = getelementptr inbounds i64, i64* %888, i64 29
  %890 = load i64, i64* %889, align 8
  %891 = trunc i64 %890 to i32
  %892 = icmp eq i32 %865, %891
  br i1 %892, label %893, label %913

893:                                              ; preds = %887, %862
  %894 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %870, null
  br i1 %894, label %901, label %895

895:                                              ; preds = %893
  %896 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %870, i64 0, i32 0, i32 1
  %897 = load i8, i8* %896, align 8, !range !5
  %898 = icmp eq i8 %897, 0
  br i1 %898, label %901, label %899

899:                                              ; preds = %895
  %900 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %870, i64 0, i32 1, i64 0
  br label %909

901:                                              ; preds = %895, %893
  %902 = and i64 %854, -262144
  %903 = or i64 %902, 16
  %904 = inttoptr i64 %903 to i64*
  %905 = load i64, i64* %904, align 16
  %906 = add i64 %905, -41416
  %907 = inttoptr i64 %906 to %"class.v8::internal::Isolate"*
  %908 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %907, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %909

909:                                              ; preds = %901, %899
  %910 = phi i64* [ %908, %901 ], [ %900, %899 ]
  %911 = getelementptr inbounds i64, i64* %910, i64 106
  %912 = load i64, i64* %911, align 8
  br label %913

913:                                              ; preds = %909, %887
  %914 = phi i64 [ %912, %909 ], [ %867, %887 ]
  %915 = lshr i64 %853, 26
  %916 = and i64 %915, 124
  %917 = and i64 %848, 8188
  %918 = add nuw nsw i64 %917, 7
  %919 = sub nsw i64 %918, %916
  %920 = add i64 %919, %914
  %921 = inttoptr i64 %920 to i32*
  %922 = load atomic i32, i32* %921 monotonic, align 4
  br label %923

923:                                              ; preds = %913, %857
  %924 = phi i32* [ %861, %857 ], [ %921, %913 ]
  %925 = load i32, i32* %924, align 4
  %926 = zext i32 %925 to i64
  %927 = or i64 %799, %926
  %928 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %929 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %928, null
  br i1 %929, label %933, label %930

930:                                              ; preds = %923
  %931 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %928, i64 %927) #9
  %932 = ptrtoint i64* %931 to i64
  br label %944

933:                                              ; preds = %923
  %934 = load i64*, i64** %731, align 8
  %935 = load i64*, i64** %732, align 8
  %936 = icmp eq i64* %934, %935
  br i1 %936, label %937, label %939

937:                                              ; preds = %933
  %938 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %939

939:                                              ; preds = %937, %933
  %940 = phi i64* [ %938, %937 ], [ %934, %933 ]
  %941 = ptrtoint i64* %940 to i64
  %942 = add i64 %941, 8
  %943 = inttoptr i64 %942 to i64*
  store i64* %943, i64** %731, align 8
  store i64 %927, i64* %940, align 8
  br label %944

944:                                              ; preds = %939, %930
  %945 = phi i64 [ %932, %930 ], [ %941, %939 ]
  %946 = phi i64* [ %931, %930 ], [ %940, %939 ]
  %947 = and i32 %756, 896
  %948 = icmp eq i32 %947, 256
  %949 = icmp eq i8 %758, 2
  br i1 %948, label %954, label %950

950:                                              ; preds = %944
  br i1 %949, label %951, label %958

951:                                              ; preds = %950
  %952 = call i64* @_ZN2v88internal6Object13NewStorageForEPNS0_7IsolateENS0_6HandleIS1_EENS0_14RepresentationE(%"class.v8::internal::Isolate"* %0, i64* %946, i8 2) #9
  %953 = ptrtoint i64* %952 to i64
  br label %958

954:                                              ; preds = %944
  br i1 %949, label %958, label %955

955:                                              ; preds = %954
  %956 = call i64* @_ZN2v88internal6Object11WrapForReadEPNS0_7IsolateENS0_6HandleIS1_EENS0_14RepresentationE(%"class.v8::internal::Isolate"* %0, i64* %946, i8 2) #9
  %957 = ptrtoint i64* %956 to i64
  br label %958

958:                                              ; preds = %955, %954, %951, %950, %793, %784, %766, %764
  %959 = phi i64 [ %771, %766 ], [ %945, %954 ], [ %957, %955 ], [ %953, %951 ], [ %945, %950 ], [ %730, %764 ], [ %786, %784 ], [ %795, %793 ]
  %960 = load i64, i64* %713, align 8
  %961 = add i64 %960, %745
  %962 = inttoptr i64 %961 to i32*
  %963 = load atomic i32, i32* %962 monotonic, align 4
  %964 = lshr i32 %963, 20
  %965 = and i32 %964, 1023
  %966 = icmp slt i32 %965, %613
  br i1 %966, label %967, label %1002

967:                                              ; preds = %958
  %968 = load i64, i64* %657, align 8
  %969 = inttoptr i64 %959 to i64*
  %970 = load i64, i64* %969, align 8
  %971 = shl nuw nsw i32 %965, 2
  %972 = add nuw nsw i32 %971, 7
  %973 = zext i32 %972 to i64
  %974 = add i64 %968, %973
  %975 = inttoptr i64 %974 to i32*
  %976 = trunc i64 %970 to i32
  store atomic volatile i32 %976, i32* %975 monotonic, align 4
  %977 = and i64 %970, 1
  %978 = icmp eq i64 %977, 0
  br i1 %978, label %1038, label %979

979:                                              ; preds = %967
  %980 = and i64 %968, -262144
  %981 = or i64 %980, 8
  %982 = inttoptr i64 %981 to i64*
  %983 = load i64, i64* %982, align 8
  %984 = and i64 %983, 262144
  %985 = icmp eq i64 %984, 0
  br i1 %985, label %990, label %986

986:                                              ; preds = %979
  %987 = or i64 %980, 16
  %988 = inttoptr i64 %987 to %"class.v8::internal::Heap"**
  %989 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %988, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %989, i64 %968, i64 %974, i64 %970) #9
  br label %990

990:                                              ; preds = %986, %979
  %991 = and i64 %970, -262144
  %992 = or i64 %991, 8
  %993 = inttoptr i64 %992 to i64*
  %994 = load i64, i64* %993, align 8
  %995 = and i64 %994, 24
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %1038, label %997

997:                                              ; preds = %990
  %998 = load i64, i64* %982, align 8
  %999 = and i64 %998, 24
  %1000 = icmp eq i64 %999, 0
  br i1 %1000, label %1001, label %1038

1001:                                             ; preds = %997
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %968, i64 %974, i64 %970) #9
  br label %1038

1002:                                             ; preds = %958
  %1003 = load i64, i64* %655, align 8
  %1004 = sub nsw i32 %965, %613
  %1005 = inttoptr i64 %959 to i64*
  %1006 = load i64, i64* %1005, align 8
  %1007 = shl nsw i32 %1004, 2
  %1008 = add nsw i32 %1007, 7
  %1009 = sext i32 %1008 to i64
  %1010 = add i64 %1003, %1009
  %1011 = inttoptr i64 %1010 to i32*
  %1012 = trunc i64 %1006 to i32
  store atomic volatile i32 %1012, i32* %1011 monotonic, align 4
  %1013 = and i64 %1006, 1
  %1014 = icmp eq i64 %1013, 0
  br i1 %1014, label %1038, label %1015

1015:                                             ; preds = %1002
  %1016 = and i64 %1003, -262144
  %1017 = or i64 %1016, 8
  %1018 = inttoptr i64 %1017 to i64*
  %1019 = load i64, i64* %1018, align 8
  %1020 = and i64 %1019, 262144
  %1021 = icmp eq i64 %1020, 0
  br i1 %1021, label %1026, label %1022

1022:                                             ; preds = %1015
  %1023 = or i64 %1016, 16
  %1024 = inttoptr i64 %1023 to %"class.v8::internal::Heap"**
  %1025 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1024, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1025, i64 %1003, i64 %1010, i64 %1006) #9
  br label %1026

1026:                                             ; preds = %1022, %1015
  %1027 = and i64 %1006, -262144
  %1028 = or i64 %1027, 8
  %1029 = inttoptr i64 %1028 to i64*
  %1030 = load i64, i64* %1029, align 8
  %1031 = and i64 %1030, 24
  %1032 = icmp eq i64 %1031, 0
  br i1 %1032, label %1038, label %1033

1033:                                             ; preds = %1026
  %1034 = load i64, i64* %1018, align 8
  %1035 = and i64 %1034, 24
  %1036 = icmp eq i64 %1035, 0
  br i1 %1036, label %1037, label %1038

1037:                                             ; preds = %1033
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1003, i64 %1010, i64 %1006) #9
  br label %1038

1038:                                             ; preds = %1037, %1033, %1026, %1002, %1001, %997, %990, %967, %739
  %1039 = add nuw nsw i64 %740, 1
  %1040 = icmp eq i64 %1039, %726
  br i1 %1040, label %734, label %739

1041:                                             ; preds = %1150, %734
  %1042 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %1043 = icmp slt i32 %603, %613
  %1044 = select i1 %1043, i32 %603, i32 %613
  %1045 = icmp sgt i32 %1044, 0
  br i1 %1045, label %1046, label %1153

1046:                                             ; preds = %1041
  %1047 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %12 to i8*
  %1048 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1049 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %12, i64 0, i32 0
  %1050 = sext i32 %1044 to i64
  br label %1173

1051:                                             ; preds = %1150, %737
  %1052 = phi i64 [ %726, %737 ], [ %1151, %1150 ]
  %1053 = load i64, i64* %713, align 8
  %1054 = mul i64 %1052, 51539607552
  %1055 = add i64 %1054, 68719476736
  %1056 = ashr exact i64 %1055, 32
  %1057 = or i64 %1056, 3
  %1058 = add i64 %1057, %1053
  %1059 = inttoptr i64 %1058 to i32*
  %1060 = load atomic i32, i32* %1059 monotonic, align 4
  %1061 = and i32 %1060, 4
  %1062 = icmp eq i32 %1061, 0
  br i1 %1062, label %1063, label %1150

1063:                                             ; preds = %1051
  %1064 = and i32 %1060, 896
  %1065 = icmp eq i32 %1064, 256
  br i1 %1065, label %1066, label %1074

1066:                                             ; preds = %1063
  %1067 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %656) #9
  %1068 = load i64, i64* %1067, align 8
  %1069 = add i64 %1068, 3
  %1070 = inttoptr i64 %1069 to i64*
  store i64 -2251799814209537, i64* %1070, align 1
  %1071 = load i64, i64* %713, align 8
  %1072 = add i64 %1071, %1057
  %1073 = inttoptr i64 %1072 to i32*
  br label %1074

1074:                                             ; preds = %1066, %1063
  %1075 = phi i32* [ %1059, %1063 ], [ %1073, %1066 ]
  %1076 = phi i64* [ %738, %1063 ], [ %1067, %1066 ]
  %1077 = load atomic i32, i32* %1075 monotonic, align 4
  %1078 = lshr i32 %1077, 20
  %1079 = and i32 %1078, 1023
  %1080 = icmp slt i32 %1079, %613
  br i1 %1080, label %1081, label %1115

1081:                                             ; preds = %1074
  %1082 = load i64, i64* %657, align 8
  %1083 = load i64, i64* %1076, align 8
  %1084 = shl nuw nsw i32 %1079, 2
  %1085 = add nuw nsw i32 %1084, 7
  %1086 = zext i32 %1085 to i64
  %1087 = add i64 %1082, %1086
  %1088 = inttoptr i64 %1087 to i32*
  %1089 = trunc i64 %1083 to i32
  store atomic volatile i32 %1089, i32* %1088 monotonic, align 4
  %1090 = and i64 %1083, 1
  %1091 = icmp eq i64 %1090, 0
  br i1 %1091, label %1150, label %1092

1092:                                             ; preds = %1081
  %1093 = and i64 %1082, -262144
  %1094 = or i64 %1093, 8
  %1095 = inttoptr i64 %1094 to i64*
  %1096 = load i64, i64* %1095, align 8
  %1097 = and i64 %1096, 262144
  %1098 = icmp eq i64 %1097, 0
  br i1 %1098, label %1103, label %1099

1099:                                             ; preds = %1092
  %1100 = or i64 %1093, 16
  %1101 = inttoptr i64 %1100 to %"class.v8::internal::Heap"**
  %1102 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1101, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1102, i64 %1082, i64 %1087, i64 %1083) #9
  br label %1103

1103:                                             ; preds = %1099, %1092
  %1104 = and i64 %1083, -262144
  %1105 = or i64 %1104, 8
  %1106 = inttoptr i64 %1105 to i64*
  %1107 = load i64, i64* %1106, align 8
  %1108 = and i64 %1107, 24
  %1109 = icmp eq i64 %1108, 0
  br i1 %1109, label %1150, label %1110

1110:                                             ; preds = %1103
  %1111 = load i64, i64* %1095, align 8
  %1112 = and i64 %1111, 24
  %1113 = icmp eq i64 %1112, 0
  br i1 %1113, label %1114, label %1150

1114:                                             ; preds = %1110
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1082, i64 %1087, i64 %1083) #9
  br label %1150

1115:                                             ; preds = %1074
  %1116 = load i64, i64* %655, align 8
  %1117 = sub nsw i32 %1079, %613
  %1118 = load i64, i64* %1076, align 8
  %1119 = shl nsw i32 %1117, 2
  %1120 = add nsw i32 %1119, 7
  %1121 = sext i32 %1120 to i64
  %1122 = add i64 %1116, %1121
  %1123 = inttoptr i64 %1122 to i32*
  %1124 = trunc i64 %1118 to i32
  store atomic volatile i32 %1124, i32* %1123 monotonic, align 4
  %1125 = and i64 %1118, 1
  %1126 = icmp eq i64 %1125, 0
  br i1 %1126, label %1150, label %1127

1127:                                             ; preds = %1115
  %1128 = and i64 %1116, -262144
  %1129 = or i64 %1128, 8
  %1130 = inttoptr i64 %1129 to i64*
  %1131 = load i64, i64* %1130, align 8
  %1132 = and i64 %1131, 262144
  %1133 = icmp eq i64 %1132, 0
  br i1 %1133, label %1138, label %1134

1134:                                             ; preds = %1127
  %1135 = or i64 %1128, 16
  %1136 = inttoptr i64 %1135 to %"class.v8::internal::Heap"**
  %1137 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1136, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1137, i64 %1116, i64 %1122, i64 %1118) #9
  br label %1138

1138:                                             ; preds = %1134, %1127
  %1139 = and i64 %1118, -262144
  %1140 = or i64 %1139, 8
  %1141 = inttoptr i64 %1140 to i64*
  %1142 = load i64, i64* %1141, align 8
  %1143 = and i64 %1142, 24
  %1144 = icmp eq i64 %1143, 0
  br i1 %1144, label %1150, label %1145

1145:                                             ; preds = %1138
  %1146 = load i64, i64* %1130, align 8
  %1147 = and i64 %1146, 24
  %1148 = icmp eq i64 %1147, 0
  br i1 %1148, label %1149, label %1150

1149:                                             ; preds = %1145
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1116, i64 %1122, i64 %1118) #9
  br label %1150

1150:                                             ; preds = %1149, %1145, %1138, %1115, %1114, %1110, %1103, %1081, %1051
  %1151 = add i64 %1052, 1
  %1152 = icmp eq i64 %1151, %735
  br i1 %1152, label %1041, label %1051

1153:                                             ; preds = %1201, %1041
  %1154 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1154) #9
  %1155 = load i64, i64* %1, align 8
  %1156 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1155, i64* %1156, align 8
  %1157 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0
  %1158 = load i64, i64* %655, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %1157, i64 %1158) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1154) #9
  %1159 = load i64, i64* %122, align 8
  %1160 = add i64 %1159, 3
  %1161 = inttoptr i64 %1160 to i8*
  %1162 = load atomic i8, i8* %1161 monotonic, align 1
  %1163 = zext i8 %1162 to i32
  %1164 = shl nuw nsw i32 %1163, 2
  %1165 = load i64, i64* %2, align 8
  %1166 = add i64 %1165, 3
  %1167 = inttoptr i64 %1166 to i8*
  %1168 = load atomic i8, i8* %1167 monotonic, align 1
  %1169 = zext i8 %1168 to i32
  %1170 = shl nuw nsw i32 %1169, 2
  %1171 = sub nsw i32 %1164, %1170
  %1172 = icmp sgt i32 %1171, 0
  br i1 %1172, label %1227, label %1234

1173:                                             ; preds = %1201, %1046
  %1174 = phi i64 [ 0, %1046 ], [ %1225, %1201 ]
  %1175 = load i64, i64* %2, align 8
  %1176 = add i64 %1175, 3
  %1177 = inttoptr i64 %1176 to i8*
  %1178 = load atomic i8, i8* %1177 monotonic, align 1
  %1179 = zext i8 %1178 to i32
  %1180 = add i64 %1175, 4
  %1181 = inttoptr i64 %1180 to i8*
  %1182 = load atomic i8, i8* %1181 monotonic, align 1
  %1183 = zext i8 %1182 to i32
  %1184 = sub nsw i32 %1179, %1183
  %1185 = sext i32 %1184 to i64
  %1186 = icmp slt i64 %1174, %1185
  br i1 %1186, label %1187, label %1196

1187:                                             ; preds = %1173
  %1188 = load atomic i8, i8* %1181 monotonic, align 1
  %1189 = zext i8 %1188 to i64
  %1190 = shl nuw nsw i64 %1189, 28
  %1191 = load atomic i8, i8* %1181 monotonic, align 1
  %1192 = zext i8 %1191 to i32
  %1193 = trunc i64 %1174 to i32
  %1194 = add nuw nsw i32 %1192, %1193
  %1195 = shl nsw i32 %1194, 2
  br label %1201

1196:                                             ; preds = %1173
  %1197 = trunc i64 %1174 to i32
  %1198 = sub nsw i32 %1197, %1184
  %1199 = shl i32 %1198, 2
  %1200 = add nsw i32 %1199, 8
  br label %1201

1201:                                             ; preds = %1196, %1187
  %1202 = phi i32 [ %1193, %1187 ], [ %1197, %1196 ]
  %1203 = phi i32 [ %1195, %1187 ], [ %1200, %1196 ]
  %1204 = phi i64 [ %1190, %1187 ], [ 536870912, %1196 ]
  %1205 = zext i1 %1186 to i64
  %1206 = shl nuw nsw i64 %1205, 13
  %1207 = sext i32 %1203 to i64
  %1208 = shl nsw i64 %1185, 16
  %1209 = or i64 %1206, %1208
  %1210 = or i64 %1209, %1207
  %1211 = or i64 %1210, %1204
  %1212 = load i64, i64* %657, align 8
  %1213 = load i64, i64* %17, align 8
  %1214 = shl i32 %1202, 2
  %1215 = sext i32 %1214 to i64
  %1216 = add nsw i64 %1215, 7
  %1217 = add i64 %1216, %1212
  %1218 = inttoptr i64 %1217 to i32*
  %1219 = load atomic i32, i32* %1218 monotonic, align 4
  %1220 = and i64 %1213, 4294967295
  %1221 = icmp eq i64 %1220, 0
  call void @llvm.assume(i1 %1221) #9
  %1222 = zext i32 %1219 to i64
  %1223 = or i64 %1213, %1222
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1047) #9
  %1224 = load i64, i64* %1, align 8
  store i64 %1224, i64* %1048, align 8
  call void @_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::JSObject"* nonnull %1049, i64 %1211, i64 %1223, i32 4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1047) #9
  %1225 = add nuw nsw i64 %1174, 1
  %1226 = icmp slt i64 %1225, %1050
  br i1 %1226, label %1173, label %1153

1227:                                             ; preds = %1153
  %1228 = load i64, i64* %1, align 8
  %1229 = zext i32 %1170 to i64
  %1230 = add nsw i64 %1229, -1
  %1231 = add i64 %1230, %1228
  %1232 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1042, i64 %1231, i32 %1171, i32 0) #9
  %1233 = load i64, i64* %2, align 8
  br label %1234

1234:                                             ; preds = %1227, %1153
  %1235 = phi i64 [ %1233, %1227 ], [ %1165, %1153 ]
  %1236 = load i64, i64* %1, align 8
  %1237 = add i64 %1236, -1
  %1238 = inttoptr i64 %1237 to i32*
  %1239 = trunc i64 %1235 to i32
  store atomic volatile i32 %1239, i32* %1238 release, align 4
  %1240 = icmp eq i32 %1239, 0
  %1241 = and i64 %1235, 1
  %1242 = icmp eq i64 %1241, 0
  %1243 = or i1 %1240, %1242
  br i1 %1243, label %1255, label %1244

1244:                                             ; preds = %1234
  %1245 = and i64 %1236, -262144
  %1246 = or i64 %1245, 8
  %1247 = inttoptr i64 %1246 to i64*
  %1248 = load i64, i64* %1247, align 8
  %1249 = and i64 %1248, 262144
  %1250 = icmp eq i64 %1249, 0
  br i1 %1250, label %1255, label %1251

1251:                                             ; preds = %1244
  %1252 = or i64 %1245, 16
  %1253 = inttoptr i64 %1252 to %"class.v8::internal::Heap"**
  %1254 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1253, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1254, i64 %1236, i64 0, i64 %1235) #9
  br label %1255

1255:                                             ; preds = %1251, %1244, %1234, %647, %640, %630
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %599) #9
  br label %1256

1256:                                             ; preds = %200, %210, %217, %247, %257, %264, %425, %435, %442, %572, %587, %594, %1255
  %1257 = load i64, i64* %52, align 8
  %1258 = add i64 %1257, 11
  %1259 = inttoptr i64 %1258 to i32*
  %1260 = load atomic i32, i32* %1259 acquire, align 4
  %1261 = and i32 %1260, 1048576
  %1262 = icmp eq i32 %1261, 0
  br i1 %1262, label %1879, label %1263

1263:                                             ; preds = %1256
  %1264 = load i64, i64* %52, align 8
  %1265 = add i64 %1264, 11
  %1266 = inttoptr i64 %1265 to i32*
  %1267 = load atomic i32, i32* %1266 monotonic, align 4
  %1268 = and i32 %1267, -4194305
  store atomic volatile i32 %1268, i32* %1266 monotonic, align 4
  br label %1879

1269:                                             ; preds = %95
  %1270 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %1271 = bitcast %"struct.v8::internal::HandleScopeData"* %1270 to i64*
  %1272 = load i64, i64* %1271, align 8
  %1273 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %1274 = load i64*, i64** %1273, align 8
  %1275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %1276 = load i32, i32* %1275, align 8
  %1277 = add nsw i32 %1276, 1
  store i32 %1277, i32* %1275, align 8
  %1278 = load i64, i64* %1, align 8
  %1279 = load i64, i64* %17, align 8
  %1280 = add i64 %1278, -1
  %1281 = inttoptr i64 %1280 to i32*
  %1282 = load atomic i32, i32* %1281 monotonic, align 4
  %1283 = and i64 %1279, 4294967295
  %1284 = icmp eq i64 %1283, 0
  tail call void @llvm.assume(i1 %1284) #9
  %1285 = zext i32 %1282 to i64
  %1286 = or i64 %1279, %1285
  %1287 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %1288 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1287, null
  %1289 = inttoptr i64 %1272 to i64*
  br i1 %1288, label %1293, label %1290

1290:                                             ; preds = %1269
  %1291 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1287, i64 %1286) #9
  %1292 = load i64, i64* %1291, align 8
  br label %1303

1293:                                             ; preds = %1269
  %1294 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %1295 = icmp eq i64* %1274, %1289
  br i1 %1295, label %1296, label %1298

1296:                                             ; preds = %1293
  %1297 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %1298

1298:                                             ; preds = %1296, %1293
  %1299 = phi i64* [ %1297, %1296 ], [ %1289, %1293 ]
  %1300 = ptrtoint i64* %1299 to i64
  %1301 = add i64 %1300, 8
  %1302 = inttoptr i64 %1301 to i64*
  store i64* %1302, i64** %1294, align 8
  store i64 %1286, i64* %1299, align 8
  br label %1303

1303:                                             ; preds = %1298, %1290
  %1304 = phi i64 [ %1292, %1290 ], [ %1286, %1298 ]
  %1305 = phi i64* [ %1291, %1290 ], [ %1299, %1298 ]
  %1306 = add i64 %1304, 11
  %1307 = inttoptr i64 %1306 to i32*
  %1308 = load atomic i32, i32* %1307 acquire, align 4
  %1309 = lshr i32 %1308, 10
  %1310 = and i32 %1309, 1023
  %1311 = icmp sgt i32 %3, 0
  %1312 = select i1 %1311, i32 %3, i32 2
  %1313 = add nsw i32 %1310, %1312
  %1314 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %1315 = tail call i64* @_ZN2v88internal7Factory17NewNameDictionaryEi(%"class.v8::internal::Factory"* %1314, i32 %1313) #9
  %1316 = load i64, i64* %1305, align 8
  %1317 = load i64, i64* %17, align 8
  %1318 = add i64 %1316, 23
  %1319 = inttoptr i64 %1318 to i32*
  %1320 = load i32, i32* %1319, align 4
  %1321 = and i64 %1317, 4294967295
  %1322 = icmp eq i64 %1321, 0
  tail call void @llvm.assume(i1 %1322) #9
  %1323 = zext i32 %1320 to i64
  %1324 = or i64 %1317, %1323
  %1325 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %1326 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1325, null
  br i1 %1326, label %1329, label %1327

1327:                                             ; preds = %1303
  %1328 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1325, i64 %1324) #9
  br label %1341

1329:                                             ; preds = %1303
  %1330 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %1331 = load i64*, i64** %1330, align 8
  %1332 = load i64*, i64** %1273, align 8
  %1333 = icmp eq i64* %1331, %1332
  br i1 %1333, label %1334, label %1336

1334:                                             ; preds = %1329
  %1335 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %1336

1336:                                             ; preds = %1334, %1329
  %1337 = phi i64* [ %1335, %1334 ], [ %1331, %1329 ]
  %1338 = ptrtoint i64* %1337 to i64
  %1339 = add i64 %1338, 8
  %1340 = inttoptr i64 %1339 to i64*
  store i64* %1340, i64** %1330, align 8
  store i64 %1324, i64* %1337, align 8
  br label %1341

1341:                                             ; preds = %1336, %1327
  %1342 = phi i64* [ %1328, %1327 ], [ %1337, %1336 ]
  %1343 = zext i32 %1310 to i64
  %1344 = icmp eq i32 %1310, 0
  br i1 %1344, label %1349, label %1345

1345:                                             ; preds = %1341
  %1346 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %1347 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %14, i64 0, i32 0
  %1348 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  br label %1370

1349:                                             ; preds = %1684, %1341
  %1350 = phi i64* [ %1315, %1341 ], [ %1687, %1684 ]
  %1351 = load i64, i64* %1350, align 8
  %1352 = shl nuw nsw i32 %1310, 1
  %1353 = add nuw nsw i32 %1352, 2
  %1354 = add i64 %1351, 19
  %1355 = inttoptr i64 %1354 to i32*
  store atomic volatile i32 %1353, i32* %1355 monotonic, align 4
  %1356 = load i64, i64* %1305, align 8
  %1357 = add i64 %1356, 3
  %1358 = inttoptr i64 %1357 to i8*
  %1359 = load atomic i8, i8* %1358 monotonic, align 1
  %1360 = zext i8 %1359 to i32
  %1361 = shl nuw nsw i32 %1360, 2
  %1362 = load i64, i64* %2, align 8
  %1363 = add i64 %1362, 3
  %1364 = inttoptr i64 %1363 to i8*
  %1365 = load atomic i8, i8* %1364 monotonic, align 1
  %1366 = zext i8 %1365 to i32
  %1367 = shl nuw nsw i32 %1366, 2
  %1368 = sub nsw i32 %1361, %1367
  %1369 = icmp sgt i32 %1368, 0
  br i1 %1369, label %1690, label %1698

1370:                                             ; preds = %1684, %1345
  %1371 = phi i64* [ %1315, %1345 ], [ %1687, %1684 ]
  %1372 = phi i64 [ 0, %1345 ], [ %1688, %1684 ]
  %1373 = load i64, i64* %1342, align 8
  %1374 = mul nuw nsw i64 %1372, 51539607552
  %1375 = add nuw nsw i64 %1374, 68719476736
  %1376 = lshr exact i64 %1375, 32
  %1377 = or i64 %1376, 3
  %1378 = add i64 %1377, %1373
  %1379 = inttoptr i64 %1378 to i32*
  %1380 = load atomic i32, i32* %1379 monotonic, align 4
  %1381 = lshr i32 %1380, 1
  %1382 = load i64, i64* %17, align 8
  %1383 = add i64 %1373, -1
  %1384 = add i64 %1383, %1376
  %1385 = inttoptr i64 %1384 to i32*
  %1386 = load atomic i32, i32* %1385 monotonic, align 4
  %1387 = and i64 %1382, 4294967295
  %1388 = icmp eq i64 %1387, 0
  tail call void @llvm.assume(i1 %1388) #9
  %1389 = zext i32 %1386 to i64
  %1390 = or i64 %1382, %1389
  %1391 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %1392 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1391, null
  br i1 %1392, label %1395, label %1393

1393:                                             ; preds = %1370
  %1394 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1391, i64 %1390) #9
  br label %1406

1395:                                             ; preds = %1370
  %1396 = load i64*, i64** %1346, align 8
  %1397 = load i64*, i64** %1273, align 8
  %1398 = icmp eq i64* %1396, %1397
  br i1 %1398, label %1399, label %1401

1399:                                             ; preds = %1395
  %1400 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %1401

1401:                                             ; preds = %1399, %1395
  %1402 = phi i64* [ %1400, %1399 ], [ %1396, %1395 ]
  %1403 = ptrtoint i64* %1402 to i64
  %1404 = add i64 %1403, 8
  %1405 = inttoptr i64 %1404 to i64*
  store i64* %1405, i64** %1346, align 8
  store i64 %1390, i64* %1402, align 8
  br label %1406

1406:                                             ; preds = %1401, %1393
  %1407 = phi i64* [ %1394, %1393 ], [ %1402, %1401 ]
  %1408 = and i32 %1380, 4
  %1409 = icmp eq i32 %1408, 0
  br i1 %1409, label %1410, label %1658

1410:                                             ; preds = %1406
  %1411 = load i64, i64* %17, align 8
  %1412 = load i64, i64* %1305, align 8
  %1413 = add i64 %1412, 23
  %1414 = inttoptr i64 %1413 to i32*
  %1415 = load atomic i32, i32* %1414 monotonic, align 4
  %1416 = and i64 %1411, 4294967295
  %1417 = icmp eq i64 %1416, 0
  tail call void @llvm.assume(i1 %1417) #9
  %1418 = zext i32 %1415 to i64
  %1419 = or i64 %1411, %1418
  %1420 = add i64 %1419, %1377
  %1421 = inttoptr i64 %1420 to i32*
  %1422 = load atomic i32, i32* %1421 monotonic, align 4
  %1423 = ashr i32 %1422, 1
  %1424 = lshr i32 %1423, 19
  %1425 = and i32 %1424, 1023
  %1426 = lshr i32 %1423, 6
  %1427 = trunc i32 %1426 to i8
  %1428 = and i8 %1427, 7
  %1429 = add i64 %1412, 3
  %1430 = inttoptr i64 %1429 to i8*
  %1431 = load atomic i8, i8* %1430 monotonic, align 1
  %1432 = zext i8 %1431 to i32
  %1433 = add i64 %1412, 4
  %1434 = inttoptr i64 %1433 to i8*
  %1435 = load atomic i8, i8* %1434 monotonic, align 1
  %1436 = zext i8 %1435 to i32
  %1437 = sub nsw i32 %1432, %1436
  %1438 = icmp slt i32 %1425, %1437
  br i1 %1438, label %1439, label %1447

1439:                                             ; preds = %1410
  %1440 = load atomic i8, i8* %1434 monotonic, align 1
  %1441 = zext i8 %1440 to i64
  %1442 = shl nuw nsw i64 %1441, 28
  %1443 = load atomic i8, i8* %1434 monotonic, align 1
  %1444 = zext i8 %1443 to i32
  %1445 = add nuw nsw i32 %1425, %1444
  %1446 = shl nuw nsw i32 %1445, 2
  br label %1451

1447:                                             ; preds = %1410
  %1448 = sub nsw i32 %1425, %1437
  %1449 = shl nsw i32 %1448, 2
  %1450 = add nsw i32 %1449, 8
  br label %1451

1451:                                             ; preds = %1447, %1439
  %1452 = phi i32 [ %1446, %1439 ], [ %1450, %1447 ]
  %1453 = phi i64 [ %1442, %1439 ], [ 536870912, %1447 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1347) #9
  store i8 %1428, i8* %1347, align 1
  %1454 = icmp ult i8 %1428, 5
  br i1 %1454, label %1457, label %1455

1455:                                             ; preds = %1451
  %1456 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %14) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* %1456) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

1457:                                             ; preds = %1451
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1347) #9
  %1458 = zext i1 %1438 to i64
  %1459 = shl nuw nsw i64 %1458, 13
  %1460 = sext i32 %1452 to i64
  %1461 = sext i32 %1437 to i64
  %1462 = shl nsw i64 %1461, 16
  %1463 = or i64 %1459, %1462
  %1464 = or i64 %1463, %1460
  %1465 = or i64 %1464, %1453
  %1466 = and i32 %1380, 2
  %1467 = icmp eq i32 %1466, 0
  %1468 = load i64, i64* %1, align 8
  %1469 = and i64 %1464, 8192
  %1470 = icmp eq i64 %1469, 0
  br i1 %1467, label %1471, label %1571

1471:                                             ; preds = %1457
  br i1 %1470, label %1477, label %1472

1472:                                             ; preds = %1471
  %1473 = and i64 %1460, 8191
  %1474 = add i64 %1468, -1
  %1475 = add i64 %1474, %1473
  %1476 = inttoptr i64 %1475 to i32*
  br label %1538

1477:                                             ; preds = %1471
  %1478 = add i64 %1468, 3
  %1479 = inttoptr i64 %1478 to i32*
  %1480 = load i32, i32* %1479, align 4
  %1481 = zext i32 %1480 to i64
  %1482 = or i64 %1411, %1481
  %1483 = and i64 %1481, 1
  %1484 = icmp eq i64 %1483, 0
  %1485 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %1484, label %1508, label %1486

1486:                                             ; preds = %1477
  %1487 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1485, null
  br i1 %1487, label %1494, label %1488

1488:                                             ; preds = %1486
  %1489 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1485, i64 0, i32 0, i32 1
  %1490 = load i8, i8* %1489, align 8, !range !5
  %1491 = icmp eq i8 %1490, 0
  br i1 %1491, label %1494, label %1492

1492:                                             ; preds = %1488
  %1493 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1485, i64 0, i32 1, i64 0
  br label %1502

1494:                                             ; preds = %1488, %1486
  %1495 = and i64 %1468, -262144
  %1496 = or i64 %1495, 16
  %1497 = inttoptr i64 %1496 to i64*
  %1498 = load i64, i64* %1497, align 16
  %1499 = add i64 %1498, -41416
  %1500 = inttoptr i64 %1499 to %"class.v8::internal::Isolate"*
  %1501 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1500, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1502

1502:                                             ; preds = %1494, %1492
  %1503 = phi i64* [ %1501, %1494 ], [ %1493, %1492 ]
  %1504 = getelementptr inbounds i64, i64* %1503, i64 29
  %1505 = load i64, i64* %1504, align 8
  %1506 = trunc i64 %1505 to i32
  %1507 = icmp eq i32 %1480, %1506
  br i1 %1507, label %1508, label %1528

1508:                                             ; preds = %1502, %1477
  %1509 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1485, null
  br i1 %1509, label %1516, label %1510

1510:                                             ; preds = %1508
  %1511 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1485, i64 0, i32 0, i32 1
  %1512 = load i8, i8* %1511, align 8, !range !5
  %1513 = icmp eq i8 %1512, 0
  br i1 %1513, label %1516, label %1514

1514:                                             ; preds = %1510
  %1515 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1485, i64 0, i32 1, i64 0
  br label %1524

1516:                                             ; preds = %1510, %1508
  %1517 = and i64 %1468, -262144
  %1518 = or i64 %1517, 16
  %1519 = inttoptr i64 %1518 to i64*
  %1520 = load i64, i64* %1519, align 16
  %1521 = add i64 %1520, -41416
  %1522 = inttoptr i64 %1521 to %"class.v8::internal::Isolate"*
  %1523 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1522, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1524

1524:                                             ; preds = %1516, %1514
  %1525 = phi i64* [ %1523, %1516 ], [ %1515, %1514 ]
  %1526 = getelementptr inbounds i64, i64* %1525, i64 106
  %1527 = load i64, i64* %1526, align 8
  br label %1528

1528:                                             ; preds = %1524, %1502
  %1529 = phi i64 [ %1527, %1524 ], [ %1482, %1502 ]
  %1530 = lshr i64 %1465, 26
  %1531 = and i64 %1530, 124
  %1532 = and i64 %1460, 8188
  %1533 = add nuw nsw i64 %1532, 7
  %1534 = sub nsw i64 %1533, %1531
  %1535 = add i64 %1534, %1529
  %1536 = inttoptr i64 %1535 to i32*
  %1537 = load atomic i32, i32* %1536 monotonic, align 4
  br label %1538

1538:                                             ; preds = %1528, %1472
  %1539 = phi i32* [ %1476, %1472 ], [ %1536, %1528 ]
  %1540 = load i32, i32* %1539, align 4
  %1541 = zext i32 %1540 to i64
  %1542 = or i64 %1411, %1541
  %1543 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %1544 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1543, null
  br i1 %1544, label %1547, label %1545

1545:                                             ; preds = %1538
  %1546 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1543, i64 %1542) #9
  br label %1558

1547:                                             ; preds = %1538
  %1548 = load i64*, i64** %1346, align 8
  %1549 = load i64*, i64** %1273, align 8
  %1550 = icmp eq i64* %1548, %1549
  br i1 %1550, label %1551, label %1553

1551:                                             ; preds = %1547
  %1552 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %1553

1553:                                             ; preds = %1551, %1547
  %1554 = phi i64* [ %1552, %1551 ], [ %1548, %1547 ]
  %1555 = ptrtoint i64* %1554 to i64
  %1556 = add i64 %1555, 8
  %1557 = inttoptr i64 %1556 to i64*
  store i64* %1557, i64** %1346, align 8
  store i64 %1542, i64* %1554, align 8
  br label %1558

1558:                                             ; preds = %1553, %1545
  %1559 = phi i64* [ %1546, %1545 ], [ %1554, %1553 ]
  %1560 = and i32 %1380, 896
  %1561 = icmp eq i32 %1560, 256
  br i1 %1561, label %1562, label %1684

1562:                                             ; preds = %1558
  %1563 = load i64, i64* %1559, align 8
  %1564 = add i64 %1563, 3
  %1565 = inttoptr i64 %1564 to i64*
  %1566 = load i64, i64* %1565, align 1
  %1567 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %1348) #9
  %1568 = load i64, i64* %1567, align 8
  %1569 = add i64 %1568, 3
  %1570 = inttoptr i64 %1569 to i64*
  store i64 %1566, i64* %1570, align 1
  br label %1684

1571:                                             ; preds = %1457
  br i1 %1470, label %1577, label %1572

1572:                                             ; preds = %1571
  %1573 = and i64 %1460, 8191
  %1574 = add i64 %1468, -1
  %1575 = add i64 %1574, %1573
  %1576 = inttoptr i64 %1575 to i32*
  br label %1638

1577:                                             ; preds = %1571
  %1578 = add i64 %1468, 3
  %1579 = inttoptr i64 %1578 to i32*
  %1580 = load i32, i32* %1579, align 4
  %1581 = zext i32 %1580 to i64
  %1582 = or i64 %1411, %1581
  %1583 = and i64 %1581, 1
  %1584 = icmp eq i64 %1583, 0
  %1585 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %1584, label %1608, label %1586

1586:                                             ; preds = %1577
  %1587 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1585, null
  br i1 %1587, label %1594, label %1588

1588:                                             ; preds = %1586
  %1589 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1585, i64 0, i32 0, i32 1
  %1590 = load i8, i8* %1589, align 8, !range !5
  %1591 = icmp eq i8 %1590, 0
  br i1 %1591, label %1594, label %1592

1592:                                             ; preds = %1588
  %1593 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1585, i64 0, i32 1, i64 0
  br label %1602

1594:                                             ; preds = %1588, %1586
  %1595 = and i64 %1468, -262144
  %1596 = or i64 %1595, 16
  %1597 = inttoptr i64 %1596 to i64*
  %1598 = load i64, i64* %1597, align 16
  %1599 = add i64 %1598, -41416
  %1600 = inttoptr i64 %1599 to %"class.v8::internal::Isolate"*
  %1601 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1600, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1602

1602:                                             ; preds = %1594, %1592
  %1603 = phi i64* [ %1601, %1594 ], [ %1593, %1592 ]
  %1604 = getelementptr inbounds i64, i64* %1603, i64 29
  %1605 = load i64, i64* %1604, align 8
  %1606 = trunc i64 %1605 to i32
  %1607 = icmp eq i32 %1580, %1606
  br i1 %1607, label %1608, label %1628

1608:                                             ; preds = %1602, %1577
  %1609 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1585, null
  br i1 %1609, label %1616, label %1610

1610:                                             ; preds = %1608
  %1611 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1585, i64 0, i32 0, i32 1
  %1612 = load i8, i8* %1611, align 8, !range !5
  %1613 = icmp eq i8 %1612, 0
  br i1 %1613, label %1616, label %1614

1614:                                             ; preds = %1610
  %1615 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1585, i64 0, i32 1, i64 0
  br label %1624

1616:                                             ; preds = %1610, %1608
  %1617 = and i64 %1468, -262144
  %1618 = or i64 %1617, 16
  %1619 = inttoptr i64 %1618 to i64*
  %1620 = load i64, i64* %1619, align 16
  %1621 = add i64 %1620, -41416
  %1622 = inttoptr i64 %1621 to %"class.v8::internal::Isolate"*
  %1623 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1622, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1624

1624:                                             ; preds = %1616, %1614
  %1625 = phi i64* [ %1623, %1616 ], [ %1615, %1614 ]
  %1626 = getelementptr inbounds i64, i64* %1625, i64 106
  %1627 = load i64, i64* %1626, align 8
  br label %1628

1628:                                             ; preds = %1624, %1602
  %1629 = phi i64 [ %1627, %1624 ], [ %1582, %1602 ]
  %1630 = lshr i64 %1465, 26
  %1631 = and i64 %1630, 124
  %1632 = and i64 %1460, 8188
  %1633 = add nuw nsw i64 %1632, 7
  %1634 = sub nsw i64 %1633, %1631
  %1635 = add i64 %1634, %1629
  %1636 = inttoptr i64 %1635 to i32*
  %1637 = load atomic i32, i32* %1636 monotonic, align 4
  br label %1638

1638:                                             ; preds = %1628, %1572
  %1639 = phi i32* [ %1576, %1572 ], [ %1636, %1628 ]
  %1640 = load i32, i32* %1639, align 4
  %1641 = zext i32 %1640 to i64
  %1642 = or i64 %1411, %1641
  %1643 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %1644 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1643, null
  br i1 %1644, label %1647, label %1645

1645:                                             ; preds = %1638
  %1646 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1643, i64 %1642) #9
  br label %1684

1647:                                             ; preds = %1638
  %1648 = load i64*, i64** %1346, align 8
  %1649 = load i64*, i64** %1273, align 8
  %1650 = icmp eq i64* %1648, %1649
  br i1 %1650, label %1651, label %1653

1651:                                             ; preds = %1647
  %1652 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %1653

1653:                                             ; preds = %1651, %1647
  %1654 = phi i64* [ %1652, %1651 ], [ %1648, %1647 ]
  %1655 = ptrtoint i64* %1654 to i64
  %1656 = add i64 %1655, 8
  %1657 = inttoptr i64 %1656 to i64*
  store i64* %1657, i64** %1346, align 8
  store i64 %1642, i64* %1654, align 8
  br label %1684

1658:                                             ; preds = %1406
  %1659 = load i64, i64* %1342, align 8
  %1660 = load i64, i64* %17, align 8
  %1661 = add nuw nsw i64 %1376, 7
  %1662 = add i64 %1661, %1659
  %1663 = inttoptr i64 %1662 to i32*
  %1664 = load atomic i32, i32* %1663 monotonic, align 4
  %1665 = and i64 %1660, 4294967295
  %1666 = icmp eq i64 %1665, 0
  tail call void @llvm.assume(i1 %1666) #9
  %1667 = zext i32 %1664 to i64
  %1668 = or i64 %1660, %1667
  %1669 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %1670 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1669, null
  br i1 %1670, label %1673, label %1671

1671:                                             ; preds = %1658
  %1672 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1669, i64 %1668) #9
  br label %1684

1673:                                             ; preds = %1658
  %1674 = load i64*, i64** %1346, align 8
  %1675 = load i64*, i64** %1273, align 8
  %1676 = icmp eq i64* %1674, %1675
  br i1 %1676, label %1677, label %1679

1677:                                             ; preds = %1673
  %1678 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %1679

1679:                                             ; preds = %1677, %1673
  %1680 = phi i64* [ %1678, %1677 ], [ %1674, %1673 ]
  %1681 = ptrtoint i64* %1680 to i64
  %1682 = add i64 %1681, 8
  %1683 = inttoptr i64 %1682 to i64*
  store i64* %1683, i64** %1346, align 8
  store i64 %1668, i64* %1680, align 8
  br label %1684

1684:                                             ; preds = %1679, %1671, %1653, %1645, %1562, %1558
  %1685 = phi i64* [ %1567, %1562 ], [ %1559, %1558 ], [ %1646, %1645 ], [ %1654, %1653 ], [ %1672, %1671 ], [ %1680, %1679 ]
  %1686 = and i32 %1381, 57
  %1687 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1371, i64* %1407, i64* %1685, i32 %1686, %"class.v8::internal::InternalIndex"* null) #9
  %1688 = add nuw nsw i64 %1372, 1
  %1689 = icmp eq i64 %1688, %1343
  br i1 %1689, label %1349, label %1370

1690:                                             ; preds = %1349
  %1691 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %1692 = load i64, i64* %1, align 8
  %1693 = zext i32 %1367 to i64
  %1694 = add nsw i64 %1693, -1
  %1695 = add i64 %1694, %1692
  %1696 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1691, i64 %1695, i32 %1368, i32 0) #9
  %1697 = load i64, i64* %2, align 8
  br label %1698

1698:                                             ; preds = %1690, %1349
  %1699 = phi i64 [ %1697, %1690 ], [ %1362, %1349 ]
  %1700 = load i64, i64* %1, align 8
  %1701 = add i64 %1700, -1
  %1702 = inttoptr i64 %1701 to i32*
  %1703 = trunc i64 %1699 to i32
  store atomic volatile i32 %1703, i32* %1702 release, align 4
  %1704 = icmp eq i32 %1703, 0
  %1705 = and i64 %1699, 1
  %1706 = icmp eq i64 %1705, 0
  %1707 = or i1 %1704, %1706
  br i1 %1707, label %1719, label %1708

1708:                                             ; preds = %1698
  %1709 = and i64 %1700, -262144
  %1710 = or i64 %1709, 8
  %1711 = inttoptr i64 %1710 to i64*
  %1712 = load i64, i64* %1711, align 8
  %1713 = and i64 %1712, 262144
  %1714 = icmp eq i64 %1713, 0
  br i1 %1714, label %1719, label %1715

1715:                                             ; preds = %1708
  %1716 = or i64 %1709, 16
  %1717 = inttoptr i64 %1716 to %"class.v8::internal::Heap"**
  %1718 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1717, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1718, i64 %1700, i64 0, i64 %1699) #9
  br label %1719

1719:                                             ; preds = %1715, %1708, %1698
  %1720 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1720) #9
  %1721 = load i64, i64* %1, align 8
  %1722 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1721, i64* %1722, align 8
  %1723 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %15, i64 0, i32 0, i32 0, i32 0
  %1724 = load i64, i64* %1350, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %1723, i64 %1724) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1720) #9
  %1725 = load i64, i64* %2, align 8
  %1726 = add i64 %1725, 3
  %1727 = inttoptr i64 %1726 to i8*
  %1728 = load atomic i8, i8* %1727 monotonic, align 1
  %1729 = zext i8 %1728 to i32
  %1730 = add i64 %1725, 4
  %1731 = inttoptr i64 %1730 to i8*
  %1732 = load atomic i8, i8* %1731 monotonic, align 1
  %1733 = zext i8 %1732 to i32
  %1734 = sub nsw i32 %1729, %1733
  %1735 = icmp sgt i32 %1734, 0
  br i1 %1735, label %1736, label %1846

1736:                                             ; preds = %1719, %1844
  %1737 = phi i64 [ %1845, %1844 ], [ %1725, %1719 ]
  %1738 = phi i32 [ %1842, %1844 ], [ 0, %1719 ]
  %1739 = add i64 %1737, 3
  %1740 = inttoptr i64 %1739 to i8*
  %1741 = load atomic i8, i8* %1740 monotonic, align 1
  %1742 = zext i8 %1741 to i32
  %1743 = add i64 %1737, 4
  %1744 = inttoptr i64 %1743 to i8*
  %1745 = load atomic i8, i8* %1744 monotonic, align 1
  %1746 = zext i8 %1745 to i32
  %1747 = sub nsw i32 %1742, %1746
  %1748 = icmp slt i32 %1738, %1747
  br i1 %1748, label %1749, label %1757

1749:                                             ; preds = %1736
  %1750 = load atomic i8, i8* %1744 monotonic, align 1
  %1751 = zext i8 %1750 to i64
  %1752 = shl nuw nsw i64 %1751, 28
  %1753 = load atomic i8, i8* %1744 monotonic, align 1
  %1754 = zext i8 %1753 to i32
  %1755 = add nuw nsw i32 %1738, %1754
  %1756 = shl nsw i32 %1755, 2
  br label %1761

1757:                                             ; preds = %1736
  %1758 = sub nsw i32 %1738, %1747
  %1759 = shl i32 %1758, 2
  %1760 = add nsw i32 %1759, 8
  br label %1761

1761:                                             ; preds = %1757, %1749
  %1762 = phi i32 [ %1756, %1749 ], [ %1760, %1757 ]
  %1763 = phi i64 [ %1752, %1749 ], [ 536870912, %1757 ]
  %1764 = zext i1 %1748 to i64
  %1765 = shl nuw nsw i64 %1764, 13
  %1766 = sext i32 %1762 to i64
  %1767 = sext i32 %1747 to i64
  %1768 = shl nsw i64 %1767, 16
  %1769 = or i64 %1765, %1768
  %1770 = or i64 %1769, %1766
  %1771 = or i64 %1770, %1763
  %1772 = load i64, i64* %1, align 8
  %1773 = and i64 %1770, 8192
  %1774 = icmp eq i64 %1773, 0
  br i1 %1774, label %1779, label %1775

1775:                                             ; preds = %1761
  %1776 = and i64 %1766, 8191
  %1777 = add nsw i64 %1776, -1
  %1778 = add i64 %1777, %1772
  br label %1839

1779:                                             ; preds = %1761
  %1780 = and i64 %1772, -4294967296
  %1781 = add i64 %1772, 3
  %1782 = inttoptr i64 %1781 to i32*
  %1783 = load i32, i32* %1782, align 4
  %1784 = zext i32 %1783 to i64
  %1785 = or i64 %1780, %1784
  %1786 = and i64 %1784, 1
  %1787 = icmp eq i64 %1786, 0
  %1788 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %1787, label %1811, label %1789

1789:                                             ; preds = %1779
  %1790 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1788, null
  br i1 %1790, label %1797, label %1791

1791:                                             ; preds = %1789
  %1792 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1788, i64 0, i32 0, i32 1
  %1793 = load i8, i8* %1792, align 8, !range !5
  %1794 = icmp eq i8 %1793, 0
  br i1 %1794, label %1797, label %1795

1795:                                             ; preds = %1791
  %1796 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1788, i64 0, i32 1, i64 0
  br label %1805

1797:                                             ; preds = %1791, %1789
  %1798 = and i64 %1772, -262144
  %1799 = or i64 %1798, 16
  %1800 = inttoptr i64 %1799 to i64*
  %1801 = load i64, i64* %1800, align 16
  %1802 = add i64 %1801, -41416
  %1803 = inttoptr i64 %1802 to %"class.v8::internal::Isolate"*
  %1804 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1803, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1805

1805:                                             ; preds = %1797, %1795
  %1806 = phi i64* [ %1804, %1797 ], [ %1796, %1795 ]
  %1807 = getelementptr inbounds i64, i64* %1806, i64 29
  %1808 = load i64, i64* %1807, align 8
  %1809 = trunc i64 %1808 to i32
  %1810 = icmp eq i32 %1783, %1809
  br i1 %1810, label %1811, label %1831

1811:                                             ; preds = %1805, %1779
  %1812 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1788, null
  br i1 %1812, label %1819, label %1813

1813:                                             ; preds = %1811
  %1814 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1788, i64 0, i32 0, i32 1
  %1815 = load i8, i8* %1814, align 8, !range !5
  %1816 = icmp eq i8 %1815, 0
  br i1 %1816, label %1819, label %1817

1817:                                             ; preds = %1813
  %1818 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1788, i64 0, i32 1, i64 0
  br label %1827

1819:                                             ; preds = %1813, %1811
  %1820 = and i64 %1772, -262144
  %1821 = or i64 %1820, 16
  %1822 = inttoptr i64 %1821 to i64*
  %1823 = load i64, i64* %1822, align 16
  %1824 = add i64 %1823, -41416
  %1825 = inttoptr i64 %1824 to %"class.v8::internal::Isolate"*
  %1826 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1825, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1827

1827:                                             ; preds = %1819, %1817
  %1828 = phi i64* [ %1826, %1819 ], [ %1818, %1817 ]
  %1829 = getelementptr inbounds i64, i64* %1828, i64 106
  %1830 = load i64, i64* %1829, align 8
  br label %1831

1831:                                             ; preds = %1827, %1805
  %1832 = phi i64 [ %1830, %1827 ], [ %1785, %1805 ]
  %1833 = lshr i64 %1771, 26
  %1834 = and i64 %1833, 124
  %1835 = and i64 %1766, 8188
  %1836 = add nuw nsw i64 %1835, 7
  %1837 = sub nsw i64 %1836, %1834
  %1838 = add i64 %1837, %1832
  br label %1839

1839:                                             ; preds = %1831, %1775
  %1840 = phi i64 [ %1838, %1831 ], [ %1778, %1775 ]
  %1841 = inttoptr i64 %1840 to i32*
  store atomic volatile i32 0, i32* %1841 monotonic, align 4
  %1842 = add nuw nsw i32 %1738, 1
  %1843 = icmp eq i32 %1842, %1734
  br i1 %1843, label %1846, label %1844

1844:                                             ; preds = %1839
  %1845 = load i64, i64* %2, align 8
  br label %1736

1846:                                             ; preds = %1839, %1719
  %1847 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %1848 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %1847, align 8
  %1849 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1848, i64 0, i32 135, i32 1
  %1850 = load i8, i8* %1849, align 8, !range !5
  %1851 = icmp eq i8 %1850, 0
  br i1 %1851, label %1855, label %1852

1852:                                             ; preds = %1846
  %1853 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1848, i64 0, i32 135, i32 0, i32 2
  %1854 = load i32*, i32** %1853, align 8
  br label %1859

1855:                                             ; preds = %1846
  store i8 1, i8* %1849, align 8
  %1856 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1848, i64 0, i32 135, i32 0
  %1857 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %1856) #9
  %1858 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %1848, i64 0, i32 135, i32 0, i32 2
  store i32* %1857, i32** %1858, align 8
  br label %1859

1859:                                             ; preds = %1855, %1852
  %1860 = phi i32* [ %1854, %1852 ], [ %1857, %1855 ]
  %1861 = icmp eq i32* %1860, null
  br i1 %1861, label %1865, label %1862

1862:                                             ; preds = %1859
  %1863 = load i32, i32* %1860, align 4
  %1864 = add nsw i32 %1863, 1
  store i32 %1864, i32* %1860, align 4
  br label %1865

1865:                                             ; preds = %1862, %1859
  %1866 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %1866, label %1879, label %1867

1867:                                             ; preds = %1865
  %1868 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1270, i64 0, i32 0
  %1869 = load i64*, i64** %1868, align 8
  store i64 %1272, i64* %1271, align 8
  %1870 = load i32, i32* %1275, align 8
  %1871 = add nsw i32 %1870, -1
  store i32 %1871, i32* %1275, align 8
  %1872 = load i64*, i64** %1273, align 8
  %1873 = icmp eq i64* %1872, %1274
  br i1 %1873, label %1876, label %1874

1874:                                             ; preds = %1867
  store i64* %1274, i64** %1273, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #9
  %1875 = load i64*, i64** %1868, align 8
  br label %1876

1876:                                             ; preds = %1874, %1867
  %1877 = phi i64* [ %1875, %1874 ], [ %1289, %1867 ]
  %1878 = phi i64* [ %1274, %1874 ], [ %1869, %1867 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1877, i64* %1878) #9
  br label %1879

1879:                                             ; preds = %1256, %1263, %75, %84, %91, %1865, %1876, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject17ForceSetPrototypeEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10HeapObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 %10) #9
  br label %29

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %24

24:                                               ; preds = %22, %16
  %25 = phi i64* [ %23, %22 ], [ %18, %16 ]
  %26 = ptrtoint i64* %25 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  store i64* %28, i64** %17, align 8
  store i64 %10, i64* %25, align 8
  br label %29

29:                                               ; preds = %14, %24
  %30 = phi i64* [ %15, %14 ], [ %25, %24 ]
  %31 = tail call i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %30, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0)) #9
  tail call void @_ZN2v88internal3Map12SetPrototypeEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10HeapObjectEEEb(%"class.v8::internal::Isolate"* %0, i64* %31, i64* %2, i1 zeroext true) #9
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %31, i32 0)
  ret void
}

declare i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #2

declare void @_ZN2v88internal3Map12SetPrototypeEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10HeapObjectEEEb(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject26SetPropertyWithInterceptorEPNS0_14LookupIteratorENS_5MaybeINS0_11ShouldThrowEEENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator"*, i64, i64*) local_unnamed_addr #0 align 2 {
  %4 = tail call i64* @_ZNK2v88internal14LookupIterator14GetInterceptorEv(%"class.v8::internal::LookupIterator"* %0)
  %5 = tail call fastcc i16 @_ZN2v88internal12_GLOBAL__N_134SetPropertyWithInterceptorInternalEPNS0_14LookupIteratorENS0_6HandleINS0_15InterceptorInfoEEENS_5MaybeINS0_11ShouldThrowEEENS4_INS0_6ObjectEEE(%"class.v8::internal::LookupIterator"* %0, i64* %4, i64 %1, i64* %2)
  ret i16 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject24GetElementsTransitionMapENS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = and i64 %3, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %9) #9
  br label %34

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %9, i64* %30, align 8
  br label %34

34:                                               ; preds = %19, %29
  %35 = phi i64* [ %20, %19 ], [ %30, %29 ]
  %36 = load i64, i64* %0, align 8
  %37 = and i64 %36, -262144
  %38 = or i64 %37, 16
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 16
  %41 = add i64 %40, -41416
  %42 = inttoptr i64 %41 to %"class.v8::internal::Isolate"*
  %43 = tail call i64* @_ZN2v88internal3Map20TransitionElementsToEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %42, i64* %35, i8 zeroext %1) #9
  ret i64* %43
}

declare i64* @_ZN2v88internal3Map20TransitionElementsToEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject21AllocateStorageForMapENS0_6HandleIS1_EENS2_INS0_3MapEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Representation", align 1
  %4 = alloca %"class.v8::internal::MapUpdater", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %8 = load i64, i64* %0, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 10
  %16 = inttoptr i64 %15 to i8*
  %17 = load i8, i8* %16, align 1
  %18 = lshr i8 %17, 2
  %19 = load i64, i64* %1, align 8
  %20 = add i64 %19, 10
  %21 = inttoptr i64 %20 to i8*
  %22 = load i8, i8* %21, align 1
  %23 = lshr i8 %22, 2
  %24 = and i64 %8, -262144
  %25 = or i64 %24, 16
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 16
  %28 = add i64 %27, -41416
  %29 = inttoptr i64 %28 to %"class.v8::internal::Isolate"*
  %30 = icmp eq i8 %23, %18
  br i1 %30, label %44, label %31

31:                                               ; preds = %2
  %32 = tail call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %23, i8 zeroext %18) #9
  %33 = select i1 %32, i8 %18, i8 %23
  %34 = icmp eq i8 %18, 12
  %35 = select i1 %34, i8 12, i8 %33
  %36 = icmp eq i8 %35, 12
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = tail call i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64* %0)
  br label %40

39:                                               ; preds = %31
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext %35)
  br label %40

40:                                               ; preds = %39, %37
  %41 = bitcast %"class.v8::internal::MapUpdater"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %41) #9
  call void @_ZN2v88internal10MapUpdaterC1EPNS0_7IsolateENS0_6HandleINS0_3MapEEE(%"class.v8::internal::MapUpdater"* nonnull %4, %"class.v8::internal::Isolate"* %29, i64* %1) #9
  %42 = call i64* @_ZN2v88internal10MapUpdater23ReconfigureElementsKindENS0_12ElementsKindE(%"class.v8::internal::MapUpdater"* nonnull %4, i8 zeroext %35) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %41) #9
  %43 = load i64, i64* %42, align 8
  br label %44

44:                                               ; preds = %2, %40
  %45 = phi i64 [ %19, %2 ], [ %43, %40 ]
  %46 = phi i64* [ %1, %2 ], [ %42, %40 ]
  %47 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %45, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0
  %50 = call i32 @_ZNK2v88internal3Map14NumberOfFieldsEv(%"class.v8::internal::Map"* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  %51 = load i64, i64* %46, align 8
  %52 = add i64 %51, 3
  %53 = inttoptr i64 %52 to i8*
  %54 = load atomic i8, i8* %53 monotonic, align 1
  %55 = zext i8 %54 to i32
  %56 = add i64 %51, 4
  %57 = inttoptr i64 %56 to i8*
  %58 = load atomic i8, i8* %57 monotonic, align 1
  %59 = zext i8 %58 to i32
  %60 = sub nsw i32 %55, %59
  %61 = add i64 %51, 5
  %62 = inttoptr i64 %61 to i8*
  %63 = load atomic i8, i8* %62 monotonic, align 1
  %64 = zext i8 %63 to i32
  %65 = icmp ugt i8 %63, 2
  br i1 %65, label %66, label %70

66:                                               ; preds = %44
  %67 = load atomic i8, i8* %53 monotonic, align 1
  %68 = zext i8 %67 to i32
  %69 = sub nsw i32 %68, %64
  br label %70

70:                                               ; preds = %44, %66
  %71 = phi i32 [ %69, %66 ], [ %64, %44 ]
  %72 = sub i32 %50, %60
  %73 = add i32 %72, %71
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 4
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %51, 23
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = and i64 %75, 4294967295
  %80 = icmp eq i64 %79, 0
  call void @llvm.assume(i1 %80) #9
  %81 = zext i32 %78 to i64
  %82 = or i64 %75, %81
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 4
  %84 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %83, align 8
  %85 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %70
  %87 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %84, i64 %82) #9
  br label %101

88:                                               ; preds = %70
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 1
  %92 = load i64*, i64** %91, align 8
  %93 = icmp eq i64* %90, %92
  br i1 %93, label %94, label %96

94:                                               ; preds = %88
  %95 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #9
  br label %96

96:                                               ; preds = %94, %88
  %97 = phi i64* [ %95, %94 ], [ %90, %88 ]
  %98 = ptrtoint i64* %97 to i64
  %99 = add i64 %98, 8
  %100 = inttoptr i64 %99 to i64*
  store i64* %100, i64** %89, align 8
  store i64 %82, i64* %97, align 8
  br label %101

101:                                              ; preds = %86, %96
  %102 = phi i64* [ %87, %86 ], [ %97, %96 ]
  %103 = inttoptr i64 %28 to %"class.v8::internal::Factory"*
  %104 = inttoptr i64 %28 to %"class.v8::internal::FactoryBase"*
  %105 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %104, i32 %60, i8 zeroext 0) #9
  %106 = call i64* @_ZN2v88internal7Factory16NewPropertyArrayEi(%"class.v8::internal::Factory"* %103, i32 %73) #9
  %107 = load i64, i64* %46, align 8
  %108 = add i64 %107, 11
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 acquire, align 4
  %111 = lshr i32 %110, 10
  %112 = and i32 %111, 1023
  %113 = zext i32 %112 to i64
  %114 = icmp eq i32 %112, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %101
  %116 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %3, i64 0, i32 0
  br label %129

117:                                              ; preds = %277, %101
  %118 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #9
  %119 = load i64, i64* %0, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %122 = load i64, i64* %106, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %121, i64 %122)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #9
  %123 = icmp sgt i32 %60, 0
  br i1 %123, label %124, label %280

124:                                              ; preds = %117
  %125 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %7 to i8*
  %126 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %7, i64 0, i32 0
  %128 = zext i32 %60 to i64
  br label %302

129:                                              ; preds = %115, %277
  %130 = phi i64 [ 0, %115 ], [ %278, %277 ]
  %131 = load i64, i64* %102, align 8
  %132 = mul nuw nsw i64 %130, 51539607552
  %133 = add nuw nsw i64 %132, 68719476736
  %134 = lshr exact i64 %133, 32
  %135 = or i64 %134, 3
  %136 = add i64 %131, %135
  %137 = inttoptr i64 %136 to i32*
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 896
  %140 = icmp eq i32 %139, 256
  br i1 %140, label %141, label %277

141:                                              ; preds = %129
  %142 = load i64, i64* %46, align 8
  %143 = and i64 %142, -4294967296
  %144 = add i64 %142, 23
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %143, %147
  %149 = add i64 %148, %135
  %150 = inttoptr i64 %149 to i32*
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = ashr i32 %151, 1
  %153 = lshr i32 %152, 19
  %154 = and i32 %153, 1023
  %155 = lshr i32 %152, 6
  %156 = trunc i32 %155 to i8
  %157 = and i8 %156, 7
  %158 = add i64 %142, 3
  %159 = inttoptr i64 %158 to i8*
  %160 = load atomic i8, i8* %159 monotonic, align 1
  %161 = zext i8 %160 to i32
  %162 = add i64 %142, 4
  %163 = inttoptr i64 %162 to i8*
  %164 = load atomic i8, i8* %163 monotonic, align 1
  %165 = zext i8 %164 to i32
  %166 = sub nsw i32 %161, %165
  %167 = icmp slt i32 %154, %166
  br i1 %167, label %168, label %176

168:                                              ; preds = %141
  %169 = load atomic i8, i8* %163 monotonic, align 1
  %170 = zext i8 %169 to i64
  %171 = shl nuw nsw i64 %170, 28
  %172 = load atomic i8, i8* %163 monotonic, align 1
  %173 = zext i8 %172 to i32
  %174 = add nuw nsw i32 %154, %173
  %175 = shl nuw nsw i32 %174, 2
  br label %180

176:                                              ; preds = %141
  %177 = sub nsw i32 %154, %166
  %178 = shl nsw i32 %177, 2
  %179 = add nsw i32 %178, 8
  br label %180

180:                                              ; preds = %176, %168
  %181 = phi i32 [ %175, %168 ], [ %179, %176 ]
  %182 = phi i64 [ %171, %168 ], [ 536870912, %176 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %116) #9
  store i8 %157, i8* %116, align 1
  %183 = icmp ult i8 %157, 5
  br i1 %183, label %186, label %184

184:                                              ; preds = %180
  %185 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %3) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* %185) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

186:                                              ; preds = %180
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %116) #9
  %187 = zext i1 %167 to i64
  %188 = shl nuw nsw i64 %187, 13
  %189 = sext i32 %181 to i64
  %190 = sext i32 %166 to i64
  %191 = shl nsw i64 %190, 16
  %192 = or i64 %188, %191
  %193 = or i64 %192, %189
  %194 = or i64 %193, %182
  %195 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %104) #9
  %196 = load i64, i64* %195, align 8
  %197 = add i64 %196, 3
  %198 = inttoptr i64 %197 to i64*
  store i64 -2251799814209537, i64* %198, align 1
  %199 = and i64 %193, 8192
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %239, label %201

201:                                              ; preds = %186
  %202 = load i64, i64* %105, align 8
  %203 = load i64, i64* %195, align 8
  %204 = lshr i64 %194, 26
  %205 = trunc i64 %204 to i32
  %206 = and i32 %205, 124
  %207 = and i32 %181, 8188
  %208 = add nuw nsw i32 %207, 7
  %209 = sub nsw i32 %208, %206
  %210 = sext i32 %209 to i64
  %211 = add i64 %202, %210
  %212 = inttoptr i64 %211 to i32*
  %213 = trunc i64 %203 to i32
  store atomic volatile i32 %213, i32* %212 monotonic, align 4
  %214 = and i64 %203, 1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %277, label %216

216:                                              ; preds = %201
  %217 = and i64 %202, -262144
  %218 = or i64 %217, 8
  %219 = inttoptr i64 %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = and i64 %220, 262144
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %227, label %223

223:                                              ; preds = %216
  %224 = or i64 %217, 16
  %225 = inttoptr i64 %224 to %"class.v8::internal::Heap"**
  %226 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %225, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %226, i64 %202, i64 %211, i64 %203) #9
  br label %227

227:                                              ; preds = %223, %216
  %228 = and i64 %203, -262144
  %229 = or i64 %228, 8
  %230 = inttoptr i64 %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = and i64 %231, 24
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %277, label %234

234:                                              ; preds = %227
  %235 = load i64, i64* %219, align 8
  %236 = and i64 %235, 24
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %277

238:                                              ; preds = %234
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %202, i64 %211, i64 %203) #9
  br label %277

239:                                              ; preds = %186
  %240 = load i64, i64* %106, align 8
  %241 = load i64, i64* %195, align 8
  %242 = lshr i64 %194, 26
  %243 = trunc i64 %242 to i32
  %244 = and i32 %243, 124
  %245 = and i32 %181, 8188
  %246 = add nuw nsw i32 %245, 7
  %247 = sub nsw i32 %246, %244
  %248 = sext i32 %247 to i64
  %249 = add i64 %240, %248
  %250 = inttoptr i64 %249 to i32*
  %251 = trunc i64 %241 to i32
  store atomic volatile i32 %251, i32* %250 monotonic, align 4
  %252 = and i64 %241, 1
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %277, label %254

254:                                              ; preds = %239
  %255 = and i64 %240, -262144
  %256 = or i64 %255, 8
  %257 = inttoptr i64 %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = and i64 %258, 262144
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %265, label %261

261:                                              ; preds = %254
  %262 = or i64 %255, 16
  %263 = inttoptr i64 %262 to %"class.v8::internal::Heap"**
  %264 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %263, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %264, i64 %240, i64 %249, i64 %241) #9
  br label %265

265:                                              ; preds = %261, %254
  %266 = and i64 %241, -262144
  %267 = or i64 %266, 8
  %268 = inttoptr i64 %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = and i64 %269, 24
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %277, label %272

272:                                              ; preds = %265
  %273 = load i64, i64* %257, align 8
  %274 = and i64 %273, 24
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %272
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %240, i64 %249, i64 %241) #9
  br label %277

277:                                              ; preds = %129, %201, %227, %234, %238, %239, %265, %272, %276
  %278 = add nuw nsw i64 %130, 1
  %279 = icmp eq i64 %278, %113
  br i1 %279, label %117, label %129

280:                                              ; preds = %330, %117
  %281 = load i64, i64* %0, align 8
  %282 = load i64, i64* %46, align 8
  %283 = add i64 %281, -1
  %284 = inttoptr i64 %283 to i32*
  %285 = trunc i64 %282 to i32
  store atomic volatile i32 %285, i32* %284 release, align 4
  %286 = icmp eq i32 %285, 0
  %287 = and i64 %282, 1
  %288 = icmp eq i64 %287, 0
  %289 = or i1 %286, %288
  br i1 %289, label %301, label %290

290:                                              ; preds = %280
  %291 = and i64 %281, -262144
  %292 = or i64 %291, 8
  %293 = inttoptr i64 %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = and i64 %294, 262144
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %301, label %297

297:                                              ; preds = %290
  %298 = or i64 %291, 16
  %299 = inttoptr i64 %298 to %"class.v8::internal::Heap"**
  %300 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %299, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %300, i64 %281, i64 0, i64 %282) #9
  br label %301

301:                                              ; preds = %280, %290, %297
  ret void

302:                                              ; preds = %330, %124
  %303 = phi i64 [ 0, %124 ], [ %350, %330 ]
  %304 = load i64, i64* %46, align 8
  %305 = add i64 %304, 3
  %306 = inttoptr i64 %305 to i8*
  %307 = load atomic i8, i8* %306 monotonic, align 1
  %308 = zext i8 %307 to i32
  %309 = add i64 %304, 4
  %310 = inttoptr i64 %309 to i8*
  %311 = load atomic i8, i8* %310 monotonic, align 1
  %312 = zext i8 %311 to i32
  %313 = sub nsw i32 %308, %312
  %314 = sext i32 %313 to i64
  %315 = icmp slt i64 %303, %314
  br i1 %315, label %316, label %325

316:                                              ; preds = %302
  %317 = load atomic i8, i8* %310 monotonic, align 1
  %318 = zext i8 %317 to i64
  %319 = shl nuw nsw i64 %318, 28
  %320 = load atomic i8, i8* %310 monotonic, align 1
  %321 = zext i8 %320 to i32
  %322 = trunc i64 %303 to i32
  %323 = add nuw nsw i32 %322, %321
  %324 = shl nsw i32 %323, 2
  br label %330

325:                                              ; preds = %302
  %326 = trunc i64 %303 to i32
  %327 = sub nsw i32 %326, %313
  %328 = shl i32 %327, 2
  %329 = add nsw i32 %328, 8
  br label %330

330:                                              ; preds = %316, %325
  %331 = phi i32 [ %324, %316 ], [ %329, %325 ]
  %332 = phi i64 [ %319, %316 ], [ 536870912, %325 ]
  %333 = zext i1 %315 to i64
  %334 = shl nuw nsw i64 %333, 13
  %335 = sext i32 %331 to i64
  %336 = shl nsw i64 %314, 16
  %337 = or i64 %334, %336
  %338 = or i64 %337, %335
  %339 = or i64 %338, %332
  %340 = load i64, i64* %105, align 8
  %341 = and i64 %340, -4294967296
  %342 = shl i64 %303, 2
  %343 = add nuw nsw i64 %342, 7
  %344 = add i64 %343, %340
  %345 = inttoptr i64 %344 to i32*
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = zext i32 %346 to i64
  %348 = or i64 %341, %347
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #9
  %349 = load i64, i64* %0, align 8
  store i64 %349, i64* %126, align 8
  call void @_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::JSObject"* nonnull %127, i64 %339, i64 %348, i32 4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #9
  %350 = add nuw nsw i64 %303, 1
  %351 = icmp eq i64 %350, %128
  br i1 %351, label %280, label %302
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = and i64 %2, -262144
  %4 = or i64 %3, 16
  %5 = inttoptr i64 %4 to i64*
  %6 = load i64, i64* %5, align 16
  %7 = add i64 %6, -41416
  %8 = inttoptr i64 %7 to %"class.v8::internal::Isolate"*
  %9 = and i64 %2, -4294967296
  %10 = add i64 %2, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 10
  %16 = inttoptr i64 %15 to i8*
  %17 = load i8, i8* %16, align 1
  %18 = lshr i8 %17, 2
  %19 = add nsw i8 %18, -13
  %20 = icmp ult i8 %19, 2
  %21 = add i64 %2, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %9, %24
  br i1 %20, label %26, label %32

26:                                               ; preds = %1
  %27 = add i64 %25, 11
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %9, %30
  br label %32

32:                                               ; preds = %26, %1
  %33 = phi i64 [ %31, %26 ], [ %25, %1 ]
  %34 = and i64 %33, -4294967296
  %35 = add i64 %33, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %34, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = icmp eq i16 %42, 124
  br i1 %43, label %44, label %63

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %33) #9
  br label %257

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #9
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %33, i64* %59, align 8
  br label %257

63:                                               ; preds = %32
  %64 = load atomic i32, i32* %11 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %9, %65
  %67 = add i64 %66, 10
  %68 = inttoptr i64 %67 to i8*
  %69 = load i8, i8* %68, align 1
  %70 = lshr i8 %69, 2
  %71 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %72 = zext i8 %70 to i64
  %73 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %71, i64 %72
  %74 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %73, align 8
  %75 = bitcast %"class.v8::internal::ElementsAccessor"* %74 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %76 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %75, align 8
  %77 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %76, i64 22
  %78 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %77, align 8
  %79 = tail call i64* %78(%"class.v8::internal::ElementsAccessor"* %74, i64* %0) #9
  %80 = load i64, i64* %0, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  br i1 %20, label %164, label %87

87:                                               ; preds = %63
  %88 = add i64 %86, 10
  %89 = inttoptr i64 %88 to i8*
  %90 = load i8, i8* %89, align 1
  %91 = and i8 %90, -4
  %92 = icmp eq i8 %91, 60
  %93 = select i1 %92, i8 16, i8 12
  %94 = load atomic i32, i32* %83 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %81, %95
  %97 = and i64 %80, -262144
  %98 = or i64 %97, 16
  %99 = inttoptr i64 %98 to i64*
  %100 = load i64, i64* %99, align 16
  %101 = add i64 %100, -41416
  %102 = inttoptr i64 %101 to %"class.v8::internal::Isolate"*
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 31, i32 4
  %104 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %103, align 8
  %105 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %87
  %107 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %104, i64 %96) #9
  br label %121

108:                                              ; preds = %87
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 31, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 31, i32 1
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %110, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %108
  %115 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %102) #9
  br label %116

116:                                              ; preds = %114, %108
  %117 = phi i64* [ %115, %114 ], [ %110, %108 ]
  %118 = ptrtoint i64* %117 to i64
  %119 = add i64 %118, 8
  %120 = inttoptr i64 %119 to i64*
  store i64* %120, i64** %109, align 8
  store i64 %96, i64* %117, align 8
  br label %121

121:                                              ; preds = %106, %116
  %122 = phi i64* [ %107, %106 ], [ %117, %116 ]
  %123 = load i64, i64* %0, align 8
  %124 = and i64 %123, -262144
  %125 = or i64 %124, 16
  %126 = inttoptr i64 %125 to i64*
  %127 = load i64, i64* %126, align 16
  %128 = add i64 %127, -41416
  %129 = inttoptr i64 %128 to %"class.v8::internal::Isolate"*
  %130 = tail call i64* @_ZN2v88internal3Map20TransitionElementsToEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %129, i64* %122, i8 zeroext %93) #9
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %8, i64* %0, i64* %130, i32 0)
  %131 = load i64, i64* %0, align 8
  %132 = load i64, i64* %79, align 8
  %133 = add i64 %131, 7
  %134 = inttoptr i64 %133 to i32*
  %135 = trunc i64 %132 to i32
  store atomic volatile i32 %135, i32* %134 monotonic, align 4
  %136 = and i64 %132, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %149, label %138

138:                                              ; preds = %121
  %139 = and i64 %131, -262144
  %140 = or i64 %139, 8
  %141 = inttoptr i64 %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = and i64 %142, 262144
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %149, label %145

145:                                              ; preds = %138
  %146 = or i64 %139, 16
  %147 = inttoptr i64 %146 to %"class.v8::internal::Heap"**
  %148 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %147, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %148, i64 %131, i64 %133, i64 %132) #9
  br label %149

149:                                              ; preds = %145, %138, %121
  %150 = and i64 %132, -262144
  %151 = or i64 %150, 8
  %152 = inttoptr i64 %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = and i64 %153, 24
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %238, label %156

156:                                              ; preds = %149
  %157 = and i64 %131, -262144
  %158 = or i64 %157, 8
  %159 = inttoptr i64 %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = and i64 %160, 24
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %238

163:                                              ; preds = %156
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %131, i64 %133, i64 %132) #9
  br label %238

164:                                              ; preds = %63
  %165 = and i64 %80, -262144
  %166 = or i64 %165, 16
  %167 = inttoptr i64 %166 to i64*
  %168 = load i64, i64* %167, align 16
  %169 = add i64 %168, -41416
  %170 = inttoptr i64 %169 to %"class.v8::internal::Isolate"*
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %170, i64 0, i32 31, i32 4
  %172 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %171, align 8
  %173 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %172, i64 %86) #9
  br label %189

176:                                              ; preds = %164
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %170, i64 0, i32 31, i32 0
  %178 = load i64*, i64** %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %170, i64 0, i32 31, i32 1
  %180 = load i64*, i64** %179, align 8
  %181 = icmp eq i64* %178, %180
  br i1 %181, label %182, label %184

182:                                              ; preds = %176
  %183 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %170) #9
  br label %184

184:                                              ; preds = %182, %176
  %185 = phi i64* [ %183, %182 ], [ %178, %176 ]
  %186 = ptrtoint i64* %185 to i64
  %187 = add i64 %186, 8
  %188 = inttoptr i64 %187 to i64*
  store i64* %188, i64** %177, align 8
  store i64 %86, i64* %185, align 8
  br label %189

189:                                              ; preds = %174, %184
  %190 = phi i64* [ %175, %174 ], [ %185, %184 ]
  %191 = load i64, i64* %0, align 8
  %192 = and i64 %191, -262144
  %193 = or i64 %192, 16
  %194 = inttoptr i64 %193 to i64*
  %195 = load i64, i64* %194, align 16
  %196 = add i64 %195, -41416
  %197 = inttoptr i64 %196 to %"class.v8::internal::Isolate"*
  %198 = tail call i64* @_ZN2v88internal3Map20TransitionElementsToEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %197, i64* %190, i8 zeroext 14) #9
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %8, i64* %0, i64* %198, i32 0)
  %199 = load i64, i64* %0, align 8
  %200 = and i64 %199, -4294967296
  %201 = add i64 %199, 7
  %202 = inttoptr i64 %201 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i64
  %205 = or i64 %200, %204
  %206 = load i64, i64* %79, align 8
  %207 = add i64 %205, 11
  %208 = inttoptr i64 %207 to i32*
  %209 = trunc i64 %206 to i32
  store atomic volatile i32 %209, i32* %208 monotonic, align 4
  %210 = and i64 %206, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %223, label %212

212:                                              ; preds = %189
  %213 = and i64 %205, -262144
  %214 = or i64 %213, 8
  %215 = inttoptr i64 %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = and i64 %216, 262144
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %223, label %219

219:                                              ; preds = %212
  %220 = or i64 %213, 16
  %221 = inttoptr i64 %220 to %"class.v8::internal::Heap"**
  %222 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %221, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %222, i64 %205, i64 %207, i64 %206) #9
  br label %223

223:                                              ; preds = %219, %212, %189
  %224 = and i64 %206, -262144
  %225 = or i64 %224, 8
  %226 = inttoptr i64 %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = and i64 %227, 24
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %238, label %230

230:                                              ; preds = %223
  %231 = and i64 %205, -262144
  %232 = or i64 %231, 8
  %233 = inttoptr i64 %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = and i64 %234, 24
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %230
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %205, i64 %207, i64 %206) #9
  br label %238

238:                                              ; preds = %237, %230, %223, %163, %156, %149
  %239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 14, i32 0
  %240 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %239, align 8
  %241 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %240, i64 0, i32 136, i32 1
  %242 = load i8, i8* %241, align 8, !range !5
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %247, label %244

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %240, i64 0, i32 136, i32 0, i32 2
  %246 = load i32*, i32** %245, align 8
  br label %251

247:                                              ; preds = %238
  store i8 1, i8* %241, align 8
  %248 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %240, i64 0, i32 136, i32 0
  %249 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %248) #9
  %250 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %240, i64 0, i32 136, i32 0, i32 2
  store i32* %249, i32** %250, align 8
  br label %251

251:                                              ; preds = %247, %244
  %252 = phi i32* [ %246, %244 ], [ %249, %247 ]
  %253 = icmp eq i32* %252, null
  br i1 %253, label %257, label %254

254:                                              ; preds = %251
  %255 = load i32, i32* %252, align 4
  %256 = add nsw i32 %255, 1
  store i32 %256, i32* %252, align 4
  br label %257

257:                                              ; preds = %58, %48, %254, %251
  %258 = phi i64* [ %79, %251 ], [ %79, %254 ], [ %59, %58 ], [ %49, %48 ]
  ret i64* %258
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 10
  %11 = inttoptr i64 %10 to i8*
  %12 = load i8, i8* %11, align 1
  %13 = lshr i8 %12, 2
  %14 = and i8 %12, 4
  %15 = icmp ne i8 %14, 0
  %16 = icmp ult i8 %12, 24
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %22

18:                                               ; preds = %2
  switch i8 %1, label %21 [
    i8 0, label %22
    i8 4, label %19
    i8 2, label %20
    i8 6, label %25
  ]

19:                                               ; preds = %18
  br label %22

20:                                               ; preds = %18
  br label %22

21:                                               ; preds = %18
  br label %22

22:                                               ; preds = %21, %20, %19, %18, %2
  %23 = phi i8 [ %1, %2 ], [ 5, %19 ], [ 3, %20 ], [ %1, %21 ], [ 1, %18 ]
  %24 = icmp eq i8 %13, %23
  br i1 %24, label %102, label %25

25:                                               ; preds = %18, %22
  %26 = phi i8 [ %23, %22 ], [ 7, %18 ]
  %27 = tail call zeroext i1 @_ZN2v88internal8JSObject20UpdateAllocationSiteILNS0_24AllocationSiteUpdateModeE0EEEbNS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext %26)
  %28 = load i64, i64* %0, align 8
  %29 = and i64 %28, -262144
  %30 = or i64 %29, 16
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = and i64 %28, -4294967296
  %36 = add i64 %28, 7
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %35, %39
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 29
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %38, %43
  br i1 %44, label %51, label %45

45:                                               ; preds = %25
  %46 = and i8 %12, -8
  %47 = icmp eq i8 %46, 16
  %48 = and i8 %26, -2
  %49 = icmp eq i8 %48, 4
  %50 = xor i1 %47, %49
  br i1 %50, label %85, label %51

51:                                               ; preds = %25, %45
  %52 = add i64 %28, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %35, %55
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %51
  %61 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %56) #9
  br label %75

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %34) #9
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi i64* [ %69, %68 ], [ %64, %62 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %63, align 8
  store i64 %56, i64* %71, align 8
  br label %75

75:                                               ; preds = %60, %70
  %76 = phi i64* [ %61, %60 ], [ %71, %70 ]
  %77 = load i64, i64* %0, align 8
  %78 = and i64 %77, -262144
  %79 = or i64 %78, 16
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 16
  %82 = add i64 %81, -41416
  %83 = inttoptr i64 %82 to %"class.v8::internal::Isolate"*
  %84 = tail call i64* @_ZN2v88internal3Map20TransitionElementsToEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %83, i64* %76, i8 zeroext %26) #9
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %34, i64* %0, i64* %84, i32 0)
  br label %102

85:                                               ; preds = %45
  %86 = add i64 %40, 3
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = ashr i32 %88, 1
  %90 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %91 = zext i8 %26 to i64
  %92 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %90, i64 %91
  %93 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %92, align 8
  %94 = bitcast %"class.v8::internal::ElementsAccessor"* %93 to i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)***
  %95 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)**, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*** %94, align 8
  %96 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %95, i64 14
  %97 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %96, align 8
  %98 = tail call i16 %97(%"class.v8::internal::ElementsAccessor"* %93, i64* %0, i32 %89) #9
  %99 = trunc i16 %98 to i8
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %85
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.61, i64 0, i64 0)) #14
  unreachable

102:                                              ; preds = %75, %85, %22
  ret void
}

declare void @_ZN2v88internal10MapUpdaterC1EPNS0_7IsolateENS0_6HandleINS0_3MapEEE(%"class.v8::internal::MapUpdater"*, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #2

declare i64* @_ZN2v88internal10MapUpdater23ReconfigureElementsKindENS0_12ElementsKindE(%"class.v8::internal::MapUpdater"*, i8 zeroext) local_unnamed_addr #2

declare i32 @_ZNK2v88internal3Map14NumberOfFieldsEv(%"class.v8::internal::Map"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory16NewPropertyArrayEi(%"class.v8::internal::Factory"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::JSObject"*, i64, i64, i32) local_unnamed_addr #4 comdat align 2 {
  %5 = and i64 %1, 8192
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %51, label %7

7:                                                ; preds = %4
  %8 = and i64 %1, 8191
  %9 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %8, -1
  %12 = add i64 %10, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %2 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  switch i32 %3, label %31 [
    i32 0, label %140
    i32 4, label %15
  ]

15:                                               ; preds = %7
  %16 = load i64, i64* %9, align 8
  %17 = add i64 %16, %11
  %18 = and i64 %2, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %140, label %20

20:                                               ; preds = %15
  %21 = and i64 %16, -262144
  %22 = or i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 262144
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %20
  %28 = or i64 %21, 16
  %29 = inttoptr i64 %28 to %"class.v8::internal::Heap"**
  %30 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %29, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %30, i64 %16, i64 %17, i64 %2) #9
  br label %34

31:                                               ; preds = %7
  %32 = and i64 %2, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %140, label %34

34:                                               ; preds = %20, %27, %31
  %35 = load i64, i64* %9, align 8
  %36 = add i64 %35, %11
  %37 = and i64 %2, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %140, label %43

43:                                               ; preds = %34
  %44 = and i64 %35, -262144
  %45 = or i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 24
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %140

50:                                               ; preds = %43
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %35, i64 %36, i64 %2) #9
  br label %140

51:                                               ; preds = %4
  %52 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, -4294967296
  %55 = add i64 %53, 3
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %54, %58
  %60 = and i64 %58, 1
  %61 = icmp eq i64 %60, 0
  %62 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %61, label %85, label %63

63:                                               ; preds = %51
  %64 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %62, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 0, i32 1
  %67 = load i8, i8* %66, align 8, !range !5
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 1, i64 0
  br label %79

71:                                               ; preds = %65, %63
  %72 = and i64 %53, -262144
  %73 = or i64 %72, 16
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 16
  %76 = add i64 %75, -41416
  %77 = inttoptr i64 %76 to %"class.v8::internal::Isolate"*
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %79

79:                                               ; preds = %71, %69
  %80 = phi i64* [ %78, %71 ], [ %70, %69 ]
  %81 = getelementptr inbounds i64, i64* %80, i64 29
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %82 to i32
  %84 = icmp eq i32 %57, %83
  br i1 %84, label %85, label %105

85:                                               ; preds = %79, %51
  %86 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %62, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 0, i32 1
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 1, i64 0
  br label %101

93:                                               ; preds = %87, %85
  %94 = and i64 %53, -262144
  %95 = or i64 %94, 16
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 16
  %98 = add i64 %97, -41416
  %99 = inttoptr i64 %98 to %"class.v8::internal::Isolate"*
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %101

101:                                              ; preds = %93, %91
  %102 = phi i64* [ %100, %93 ], [ %92, %91 ]
  %103 = getelementptr inbounds i64, i64* %102, i64 106
  %104 = load i64, i64* %103, align 8
  br label %105

105:                                              ; preds = %79, %101
  %106 = phi i64 [ %104, %101 ], [ %59, %79 ]
  %107 = lshr i64 %1, 26
  %108 = and i64 %107, 124
  %109 = and i64 %1, 8188
  %110 = add nuw nsw i64 %109, 7
  %111 = sub nsw i64 %110, %108
  %112 = add i64 %111, %106
  %113 = inttoptr i64 %112 to i32*
  %114 = trunc i64 %2 to i32
  store atomic volatile i32 %114, i32* %113 monotonic, align 4
  %115 = and i64 %2, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %140, label %117

117:                                              ; preds = %105
  %118 = and i64 %106, -262144
  %119 = or i64 %118, 8
  %120 = inttoptr i64 %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, 262144
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %117
  %125 = or i64 %118, 16
  %126 = inttoptr i64 %125 to %"class.v8::internal::Heap"**
  %127 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %126, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %127, i64 %106, i64 %112, i64 %2) #9
  br label %128

128:                                              ; preds = %124, %117
  %129 = and i64 %2, -262144
  %130 = or i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, 24
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %128
  %136 = load i64, i64* %120, align 8
  %137 = and i64 %136, 24
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %135
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %106, i64 %112, i64 %2) #9
  br label %140

140:                                              ; preds = %139, %135, %128, %105, %50, %43, %34, %31, %15, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject15MigrateInstanceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 %10) #9
  br label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %24

24:                                               ; preds = %22, %16
  %25 = phi i64* [ %23, %22 ], [ %18, %16 ]
  %26 = ptrtoint i64* %25 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  store i64* %28, i64** %17, align 8
  store i64 %10, i64* %25, align 8
  br label %29

29:                                               ; preds = %14, %24
  %30 = phi i64* [ %15, %14 ], [ %25, %24 ]
  %31 = tail call i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %30) #9
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = or i32 %35, 67108864
  store atomic volatile i32 %36, i32* %34 monotonic, align 4
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %31, i32 0)
  %37 = load i8, i8* @_ZN2v88internal20FLAG_trace_migrationE, align 1, !range !5
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %29
  %40 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  %41 = load i64, i64* %1, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %3, i64 0, i32 0
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %45 = load i64, i64* %30, align 8
  %46 = load i64, i64* %31, align 8
  call void @_ZN2v88internal8JSObject22PrintInstanceMigrationEP8_IO_FILENS0_3MapES4_(%"class.v8::internal::JSObject"* nonnull %43, %struct._IO_FILE* %44, i64 %45, i64 %46)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %47

47:                                               ; preds = %29, %39
  ret void
}

declare i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject18TryMigrateInstanceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 %10) #9
  br label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %24

24:                                               ; preds = %22, %16
  %25 = phi i64* [ %23, %22 ], [ %18, %16 ]
  %26 = ptrtoint i64* %25 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  store i64* %28, i64** %17, align 8
  store i64 %10, i64* %25, align 8
  br label %29

29:                                               ; preds = %14, %24
  %30 = phi i64* [ %15, %14 ], [ %25, %24 ]
  %31 = tail call i64* @_ZN2v88internal3Map9TryUpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %30) #9
  %32 = icmp eq i64* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %29
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %0, i64* %1, i64* nonnull %31, i32 0)
  %34 = load i8, i8* @_ZN2v88internal20FLAG_trace_migrationE, align 1, !range !5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %33
  %37 = load i64, i64* %30, align 8
  %38 = load i64, i64* %1, align 8
  %39 = add i64 %38, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = trunc i64 %37 to i32
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %53, label %44

44:                                               ; preds = %36
  %45 = and i64 %38, -4294967296
  %46 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %38, i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %3, i64 0, i32 0
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %50 = load atomic i32, i32* %40 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %45, %51
  call void @_ZN2v88internal8JSObject22PrintInstanceMigrationEP8_IO_FILENS0_3MapES4_(%"class.v8::internal::JSObject"* nonnull %48, %struct._IO_FILE* %49, i64 %37, i64 %52)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %53

53:                                               ; preds = %36, %33, %29, %44
  %54 = phi i1 [ true, %44 ], [ true, %36 ], [ false, %29 ], [ true, %33 ]
  ret i1 %54
}

declare i64* @_ZN2v88internal3Map9TryUpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #9
  %8 = ptrtoint i64* %1 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 0
  %10 = icmp eq i64* %2, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %5
  %12 = load i64, i64* null, align 536870912
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  br label %29

15:                                               ; preds = %5
  %16 = load i64, i64* %2, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %16, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i64 %18, 4294967295
  %23 = icmp eq i64 %22, 0
  tail call void @llvm.assume(i1 %23) #9
  %24 = zext i32 %21 to i64
  %25 = or i64 %18, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  br label %29

29:                                               ; preds = %11, %15
  %30 = phi i32* [ %14, %11 ], [ %20, %15 ]
  %31 = phi i64 [ %12, %11 ], [ %16, %15 ]
  store i32 0, i32* %9, align 8
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  store i32 4, i32* %32, align 4
  %33 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 2
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 3
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 4, i32 0
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 6, i32 0, i32 0
  store i64* %2, i64** %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 10
  %42 = bitcast %"class.v8::internal::Handle.1138"* %41 to i64*
  store i64 %8, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 11
  %44 = bitcast i64* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 16, i1 false) #9
  %45 = and i64 %31, -4294967296
  %46 = load atomic i32, i32* %30 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %45, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = and i16 %51, -32
  %53 = icmp eq i16 %52, 32
  br i1 %53, label %54, label %58

54:                                               ; preds = %29
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %56 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %55, align 8
  %57 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %56, %"class.v8::internal::Isolate"* %0, i64* %2) #9
  br label %58

58:                                               ; preds = %29, %54
  %59 = phi i64* [ %57, %54 ], [ %2, %29 ]
  store i64* %59, i64** %37, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %6) #9
  %60 = load i32, i32* %32, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63, !prof !6

62:                                               ; preds = %58
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.49, i64 0, i64 0)) #14
  unreachable

63:                                               ; preds = %58
  %64 = call i16 @_ZN2v88internal6Object15AddDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"* nonnull %6, i64* %3, i32 %4, i64 1, i32 1) #9
  %65 = trunc i16 %64 to i8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %68, !prof !6

67:                                               ; preds = %63
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.50, i64 0, i64 0)) #14
  unreachable

68:                                               ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #9
  ret void
}

declare i16 @_ZN2v88internal6Object15AddDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"*, i64*, i32, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EEPKcNS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i8*, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Vector.1230", align 8
  %7 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %8 = bitcast %"class.v8::internal::Vector.1230"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = tail call i64 @strlen(i8* %2) #16
  %10 = getelementptr inbounds %"class.v8::internal::Vector.1230", %"class.v8::internal::Vector.1230"* %6, i64 0, i32 0
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Vector.1230", %"class.v8::internal::Vector.1230"* %6, i64 0, i32 1
  store i64 %9, i64* %11, align 8
  %12 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %7, %"class.v8::internal::Vector.1230"* nonnull dereferenceable(16) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %12, i64* %3, i32 %4)
  ret void
}

declare void @_ZN2v88internal14LookupIterator24TransitionToAccessorPairENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator23ReconfigureDataPropertyENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"*, i64*, i32) local_unnamed_addr #2

declare i16 @_ZN2v88internal6Object28RedefineIncompatiblePropertyEPNS0_7IsolateENS0_6HandleIS1_EES5_NS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64) local_unnamed_addr #2

declare i16 @_ZN2v88internal6Object15SetDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EE(%"class.v8::internal::LookupIterator"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject30SetOwnPropertyIgnoreAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #9
  %7 = load i64, i64* %0, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = ptrtoint i64* %0 to i64
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %16 = icmp eq i64* %1, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %4
  %18 = load i64, i64* null, align 536870912
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  br label %42

21:                                               ; preds = %4
  %22 = load i64, i64* %1, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i64 %24, 4294967295
  %29 = icmp eq i64 %28, 0
  tail call void @llvm.assume(i1 %29) #9
  %30 = zext i32 %27 to i64
  %31 = or i64 %24, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = icmp eq i16 %34, 64
  br i1 %35, label %36, label %42

36:                                               ; preds = %21
  %37 = add i64 %22, 7
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %17, %36, %21
  %43 = phi i32* [ %20, %17 ], [ %26, %36 ], [ %26, %21 ]
  %44 = phi i64 [ %18, %17 ], [ %22, %36 ], [ %22, %21 ]
  br label %45

45:                                               ; preds = %42, %36
  %46 = phi i32* [ %43, %42 ], [ %26, %36 ]
  %47 = phi i64 [ %44, %42 ], [ %22, %36 ]
  %48 = phi i32 [ 1, %42 ], [ 0, %36 ]
  store i32 %48, i32* %15, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  store i32 4, i32* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  store i64* %1, i64** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  store i64* %0, i64** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %59 = bitcast %"class.v8::internal::Handle.1138"* %58 to i64*
  store i64 %14, i64* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %61 = bitcast i64* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 -1, i64 16, i1 false) #9
  %62 = and i64 %47, -4294967296
  %63 = load atomic i32, i32* %46 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %62, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = and i16 %68, -32
  %70 = icmp eq i16 %69, 32
  br i1 %70, label %71, label %75

71:                                               ; preds = %45
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 5, i32 0, i32 0, i32 0
  %73 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %72, align 8
  %74 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %73, %"class.v8::internal::Isolate"* %13, i64* %1) #9
  br label %75

75:                                               ; preds = %45, %71
  %76 = phi i64* [ %74, %71 ], [ %1, %45 ]
  store i64* %76, i64** %54, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #9
  %77 = call i16 @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"* nonnull %5, i64* %2, i32 %3, i64 1, i32 1) #9
  %78 = trunc i16 %77 to i8
  %79 = icmp eq i8 %78, 0
  %80 = select i1 %79, i64* null, i64* %2
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #9
  ret i64* %80
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject29SetOwnElementIgnoreAttributesENS0_6HandleIS1_EEmNS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64*, i64, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %13) #9
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %12, i64* %0, i64* null, i64 %1, i64* %0, i32 1) #9
  %14 = call i16 @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"* nonnull %5, i64* %2, i32 %3, i64 1, i32 1) #9
  %15 = trunc i16 %14 to i8
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i64* null, i64* %2
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %13) #9
  ret i64* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject39DefinePropertyOrElementIgnoreAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = load i64, i64* %0, align 8
  %9 = and i64 %8, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = bitcast %"class.v8::internal::LookupIterator::Key"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = ptrtoint i64* %1 to i64
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %17, align 8
  %18 = load i64, i64* %1, align 8
  %19 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 1
  %20 = and i64 %18, -4294967296
  %21 = add i64 %18, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = icmp ult i16 %28, 64
  %30 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  br i1 %29, label %31, label %45

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %18, i64* %32, align 8
  %33 = add i64 %18, 3
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, -536870910
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %31
  %39 = lshr i32 %35, 2
  %40 = and i32 %39, 16777215
  %41 = zext i32 %40 to i64
  store i64 %41, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %53

42:                                               ; preds = %31
  %43 = and i32 %35, 3
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %45, label %46

45:                                               ; preds = %42, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %55

46:                                               ; preds = %42
  %47 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %5, i64* %19) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  %49 = load i64, i64* %1, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, -1
  %52 = inttoptr i64 %51 to i32*
  br label %55

53:                                               ; preds = %46, %38
  %54 = bitcast %"class.v8::internal::LookupIterator::Key"* %6 to i64*
  store i64 %16, i64* %54, align 8
  br label %72

55:                                               ; preds = %48, %45
  %56 = phi i32* [ %52, %48 ], [ %22, %45 ]
  %57 = phi i64 [ %50, %48 ], [ %20, %45 ]
  store i64 -1, i64* %19, align 8
  %58 = load atomic i32, i32* %56 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %57, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = and i16 %63, -32
  %65 = icmp eq i16 %64, 32
  br i1 %65, label %66, label %70

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 5, i32 0, i32 0, i32 0
  %68 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %67, align 8
  %69 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %68, %"class.v8::internal::Isolate"* %14, i64* %1) #9
  br label %70

70:                                               ; preds = %66, %55
  %71 = phi i64* [ %69, %66 ], [ %1, %55 ]
  store i64* %71, i64** %17, align 8
  br label %72

72:                                               ; preds = %53, %70
  %73 = phi i64* [ %1, %53 ], [ %71, %70 ]
  %74 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %74) #9
  %75 = load i64, i64* %19, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::Isolate"* %14, i64* %0, i64* %73, i64 %75, i64* %0, i32 1) #9
  %76 = call i16 @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %2, i32 %3, i64 1, i32 1) #9
  %77 = trunc i16 %76 to i8
  %78 = icmp eq i8 %77, 0
  %79 = select i1 %78, i64* null, i64* %2
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %74) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  ret i64* %79
}

declare i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"*, i64*, i8 zeroext, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject17MigrateSlowToFastENS0_6HandleIS1_EEiPKc(i64*, i32, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Descriptor", align 8
  %6 = alloca %"class.v8::internal::Descriptor", align 8
  %7 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %8 = alloca %"class.v8::internal::Descriptor", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %13 = load i64, i64* %0, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 11
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2097152
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %617, label %25

25:                                               ; preds = %3
  %26 = and i64 %13, -262144
  %27 = or i64 %26, 16
  %28 = inttoptr i64 %27 to i64*
  %29 = load i64, i64* %28, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = inttoptr i64 %30 to %"class.v8::internal::Factory"*
  %33 = add i64 %13, 3
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %14, %36
  %38 = and i64 %36, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %55

40:                                               ; preds = %25
  %41 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %42 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %41, i64 0, i32 0, i32 1
  %45 = load i8, i8* %44, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %41, i64 0, i32 1, i64 0
  br label %51

49:                                               ; preds = %43, %40
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi i64* [ %50, %49 ], [ %48, %47 ]
  %53 = getelementptr inbounds i64, i64* %52, i64 115
  %54 = load i64, i64* %53, align 8
  br label %55

55:                                               ; preds = %25, %51
  %56 = phi i64 [ %54, %51 ], [ %37, %25 ]
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %56) #9
  %62 = load i64, i64* %61, align 8
  br label %76

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 31, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 31, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %31) #9
  br label %71

71:                                               ; preds = %69, %63
  %72 = phi i64* [ %70, %69 ], [ %65, %63 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %64, align 8
  store i64 %56, i64* %72, align 8
  br label %76

76:                                               ; preds = %60, %71
  %77 = phi i64 [ %62, %60 ], [ %56, %71 ]
  %78 = phi i64* [ %61, %60 ], [ %72, %71 ]
  %79 = add i64 %77, 7
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = ashr i32 %81, 1
  %83 = icmp sgt i32 %81, 2041
  br i1 %83, label %617, label %84

84:                                               ; preds = %76
  %85 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE16IterationIndicesEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"* %31, i64* %78) #9
  %86 = load i64, i64* %78, align 8
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = ashr i32 %89, 1
  %91 = icmp sgt i32 %89, 1
  br i1 %91, label %92, label %95

92:                                               ; preds = %84
  %93 = load i64, i64* %85, align 8
  %94 = sext i32 %90 to i64
  br label %141

95:                                               ; preds = %141, %84
  %96 = phi i32 [ 0, %84 ], [ %162, %141 ]
  %97 = load i64, i64* %0, align 8
  %98 = and i64 %97, -4294967296
  %99 = add i64 %97, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %98, %102
  %104 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %105 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %95
  %107 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %104, i64 %103) #9
  %108 = load i64, i64* %107, align 8
  br label %122

109:                                              ; preds = %95
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 31, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 31, i32 1
  %113 = load i64*, i64** %112, align 8
  %114 = icmp eq i64* %111, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %31) #9
  br label %117

117:                                              ; preds = %115, %109
  %118 = phi i64* [ %116, %115 ], [ %111, %109 ]
  %119 = ptrtoint i64* %118 to i64
  %120 = add i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  store i64* %121, i64** %110, align 8
  store i64 %103, i64* %118, align 8
  br label %122

122:                                              ; preds = %106, %117
  %123 = phi i64 [ %108, %106 ], [ %103, %117 ]
  %124 = phi i64* [ %107, %106 ], [ %118, %117 ]
  %125 = add i64 %123, 3
  %126 = inttoptr i64 %125 to i8*
  %127 = load atomic i8, i8* %126 monotonic, align 1
  %128 = zext i8 %127 to i32
  %129 = add i64 %123, 4
  %130 = inttoptr i64 %129 to i8*
  %131 = load atomic i8, i8* %130 monotonic, align 1
  %132 = zext i8 %131 to i32
  %133 = sub nsw i32 %128, %132
  %134 = tail call i64* @_ZN2v88internal3Map19CopyDropDescriptorsEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %31, i64* %124) #9
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, 9
  %137 = inttoptr i64 %136 to i8*
  %138 = load atomic i8, i8* %137 monotonic, align 1
  %139 = and i8 %138, 4
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %165, label %169

141:                                              ; preds = %92, %141
  %142 = phi i64 [ 0, %92 ], [ %163, %141 ]
  %143 = phi i32 [ 0, %92 ], [ %162, %141 ]
  %144 = trunc i64 %142 to i32
  %145 = shl i32 %144, 2
  %146 = sext i32 %145 to i64
  %147 = add nsw i64 %146, 7
  %148 = add i64 %147, %93
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = ashr i32 %150, 1
  %152 = sext i32 %151 to i64
  %153 = mul i64 %152, 51539607552
  %154 = add i64 %153, 120259084288
  %155 = ashr exact i64 %154, 32
  %156 = add i64 %87, %155
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = lshr i32 %158, 1
  %160 = and i32 %159, 1
  %161 = xor i32 %160, 1
  %162 = add nuw nsw i32 %161, %143
  %163 = add nuw nsw i64 %142, 1
  %164 = icmp slt i64 %163, %94
  br i1 %164, label %141, label %95

165:                                              ; preds = %122
  %166 = load atomic i8, i8* %137 monotonic, align 1
  %167 = and i8 %166, 32
  %168 = icmp ne i8 %167, 0
  br label %169

169:                                              ; preds = %122, %165
  %170 = phi i1 [ true, %122 ], [ %168, %165 ]
  %171 = add i64 %135, 11
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, -268435457
  %175 = zext i1 %170 to i32
  %176 = shl nuw nsw i32 %175, 28
  %177 = or i32 %174, %176
  store atomic volatile i32 %177, i32* %172 monotonic, align 4
  %178 = load i64, i64* %134, align 8
  %179 = add i64 %178, 11
  %180 = inttoptr i64 %179 to i32*
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, -35651585
  store atomic volatile i32 %182, i32* %180 monotonic, align 4
  %183 = load i64, i64* %124, align 8
  %184 = add i64 %183, 11
  %185 = inttoptr i64 %184 to i32*
  %186 = load atomic i32, i32* %185 acquire, align 4
  %187 = and i32 %186, 1048576
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %169
  %190 = load i64, i64* %124, align 8
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %190) #9
  tail call void @_ZN2v88internal8JSObject31UpdatePrototypeUserRegistrationENS0_6HandleINS0_3MapEEES4_PNS0_7IsolateE(i64* %124, i64* %134, %"class.v8::internal::Isolate"* %31) #9
  br label %191

191:                                              ; preds = %169, %189
  %192 = icmp eq i32 %82, 0
  br i1 %192, label %193, label %264

193:                                              ; preds = %191
  %194 = load i64, i64* %134, align 8
  %195 = add i64 %194, 7
  %196 = inttoptr i64 %195 to i16*
  %197 = load atomic i16, i16* %196 monotonic, align 2
  %198 = icmp ugt i16 %197, 188
  br i1 %198, label %205, label %199

199:                                              ; preds = %193
  %200 = icmp eq i32 %133, 0
  br i1 %200, label %202, label %201, !prof !4

201:                                              ; preds = %199
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.86, i64 0, i64 0)) #14
  unreachable

202:                                              ; preds = %199
  %203 = add i64 %194, 5
  %204 = inttoptr i64 %203 to i8*
  store atomic volatile i8 0, i8* %204 monotonic, align 1
  br label %228

205:                                              ; preds = %193
  %206 = icmp sgt i32 %133, -1
  br i1 %206, label %208, label %207, !prof !4

207:                                              ; preds = %205
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i64 0, i64 0)) #14
  unreachable

208:                                              ; preds = %205
  %209 = add i64 %194, 3
  %210 = inttoptr i64 %209 to i8*
  %211 = load atomic i8, i8* %210 monotonic, align 1
  %212 = zext i8 %211 to i32
  %213 = add i64 %194, 4
  %214 = inttoptr i64 %213 to i8*
  %215 = load atomic i8, i8* %214 monotonic, align 1
  %216 = zext i8 %215 to i32
  %217 = load atomic i8, i8* %214 monotonic, align 1
  %218 = zext i8 %217 to i32
  %219 = sub nsw i32 %212, %133
  %220 = sub nsw i32 %219, %216
  %221 = add nsw i32 %220, %218
  %222 = icmp ult i32 %221, 256
  br i1 %222, label %224, label %223, !prof !4

223:                                              ; preds = %208
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.88, i64 0, i64 0)) #14
  unreachable

224:                                              ; preds = %208
  %225 = add i64 %194, 5
  %226 = inttoptr i64 %225 to i8*
  %227 = trunc i32 %221 to i8
  store atomic volatile i8 %227, i8* %226 monotonic, align 1
  br label %228

228:                                              ; preds = %202, %224
  %229 = load i64, i64* %0, align 8
  %230 = load i64, i64* %134, align 8
  %231 = add i64 %229, -1
  %232 = inttoptr i64 %231 to i32*
  %233 = trunc i64 %230 to i32
  store atomic volatile i32 %233, i32* %232 release, align 4
  %234 = icmp eq i32 %233, 0
  %235 = and i64 %230, 1
  %236 = icmp eq i64 %235, 0
  %237 = or i1 %234, %236
  br i1 %237, label %249, label %238

238:                                              ; preds = %228
  %239 = and i64 %229, -262144
  %240 = or i64 %239, 8
  %241 = inttoptr i64 %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = and i64 %242, 262144
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %249, label %245

245:                                              ; preds = %238
  %246 = or i64 %239, 16
  %247 = inttoptr i64 %246 to %"class.v8::internal::Heap"**
  %248 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %247, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %248, i64 %229, i64 0, i64 %230) #9
  br label %249

249:                                              ; preds = %228, %238, %245
  %250 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #9
  %251 = load i64, i64* %0, align 8
  %252 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 29
  %255 = load i64, i64* %254, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %253, i64 %255)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #9
  %256 = load i8, i8* @_ZN2v88internal13FLAG_log_mapsE, align 1, !range !5
  %257 = icmp eq i8 %256, 0
  %258 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1
  %259 = icmp eq i8 %258, 0
  %260 = or i1 %257, %259
  br i1 %260, label %617, label %261

261:                                              ; preds = %249
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 21
  %263 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %262, align 8
  tail call void @_ZN2v88internal6Logger8MapEventEPKcNS0_6HandleINS0_3MapEEES6_S3_NS4_INS0_10HeapObjectEEE(%"class.v8::internal::Logger"* %263, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51, i64 0, i64 0), i64* %124, i64* %134, i8* %2, i64* null) #9
  br label %617

264:                                              ; preds = %191
  %265 = tail call i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_7IsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %31, i32 %82, i32 0, i8 zeroext 0) #9
  %266 = add nsw i32 %96, %1
  %267 = sub i32 %266, %133
  %268 = icmp slt i32 %267, 0
  %269 = sub nsw i32 %133, %96
  %270 = select i1 %268, i32 0, i32 %267
  %271 = select i1 %268, i32 %269, i32 %1
  %272 = tail call i64* @_ZN2v88internal7Factory16NewPropertyArrayEi(%"class.v8::internal::Factory"* %32, i32 %270) #9
  %273 = load i64, i64* %124, align 8
  %274 = add i64 %273, 10
  %275 = inttoptr i64 %274 to i8*
  %276 = load i8, i8* %275, align 1
  br i1 %91, label %277, label %299

277:                                              ; preds = %264
  %278 = and i8 %276, -4
  %279 = icmp eq i8 %278, 12
  %280 = icmp ugt i8 %276, 23
  %281 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 31, i32 0
  %282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 31, i32 1
  %283 = bitcast %"class.v8::internal::Descriptor"* %5 to i8*
  %284 = bitcast %"class.v8::internal::Descriptor"* %8 to i8*
  %285 = or i1 %280, %279
  %286 = zext i1 %285 to i32
  %287 = bitcast %"class.v8::internal::Descriptor"* %6 to i8*
  %288 = bitcast %"class.v8::internal::MaybeObjectHandle"* %7 to i8*
  %289 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %7, i64 0, i32 0
  %290 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %7, i64 0, i32 1, i32 0
  %291 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %5, i64 0, i32 2, i32 0
  %292 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %9 to i8*
  %293 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %9, i64 0, i32 0
  %295 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %5, i64 0, i32 0, i32 0, i32 0
  %296 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %5, i64 0, i32 1, i32 0
  %297 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %5, i64 0, i32 1, i32 1, i32 0
  %298 = sext i32 %90 to i64
  br label %315

299:                                              ; preds = %536, %264
  %300 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #9
  %301 = load i64, i64* %265, align 8
  %302 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %10, i64 0, i32 0
  call void @_ZN2v88internal15DescriptorArray4SortEv(%"class.v8::internal::DescriptorArray"* nonnull %303) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #9
  %304 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #9
  %305 = load i64, i64* %134, align 8
  %306 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %11, i64 0, i32 0
  %308 = load i64, i64* %265, align 8
  %309 = add i64 %308, 5
  %310 = inttoptr i64 %309 to i16*
  %311 = load atomic i16, i16* %310 monotonic, align 2
  %312 = sext i16 %311 to i32
  call void @_ZN2v88internal3Map22SetInstanceDescriptorsEPNS0_7IsolateENS0_15DescriptorArrayEi(%"class.v8::internal::Map"* nonnull %307, %"class.v8::internal::Isolate"* %31, i64 %308, i32 %312) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #9
  %313 = icmp slt i32 %267, 1
  %314 = load i64, i64* %134, align 8
  br i1 %313, label %540, label %574

315:                                              ; preds = %277, %536
  %316 = phi i64 [ 0, %277 ], [ %520, %536 ]
  %317 = phi i32 [ 0, %277 ], [ %518, %536 ]
  %318 = load i64, i64* %85, align 8
  %319 = trunc i64 %316 to i32
  %320 = shl i32 %319, 2
  %321 = sext i32 %320 to i64
  %322 = add nsw i64 %321, 7
  %323 = add i64 %322, %318
  %324 = inttoptr i64 %323 to i32*
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = ashr i32 %325, 1
  %327 = sext i32 %326 to i64
  %328 = load i64, i64* %78, align 8
  %329 = and i64 %328, -4294967296
  %330 = mul i64 %327, 51539607552
  %331 = add i64 %330, 85899345920
  %332 = ashr exact i64 %331, 32
  %333 = add i64 %328, 7
  %334 = add i64 %333, %332
  %335 = inttoptr i64 %334 to i32*
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = zext i32 %336 to i64
  %338 = or i64 %329, %337
  %339 = add i64 %330, 103079215104
  %340 = ashr exact i64 %339, 32
  %341 = add i64 %333, %340
  %342 = inttoptr i64 %341 to i32*
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = zext i32 %343 to i64
  %345 = or i64 %329, %344
  %346 = add i64 %330, 120259084288
  %347 = ashr exact i64 %346, 32
  %348 = add i64 %333, %347
  %349 = inttoptr i64 %348 to i32*
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = ashr i32 %350, 1
  %352 = add i64 %338, -1
  %353 = inttoptr i64 %352 to i32*
  %354 = load atomic i32, i32* %353 monotonic, align 4
  %355 = zext i32 %354 to i64
  %356 = or i64 %329, %355
  %357 = add i64 %356, 7
  %358 = inttoptr i64 %357 to i16*
  %359 = load atomic i16, i16* %358 monotonic, align 2
  %360 = and i16 %359, -32
  %361 = icmp eq i16 %360, 32
  br i1 %361, label %362, label %363, !prof !6

362:                                              ; preds = %315
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.52, i64 0, i64 0)) #14
  unreachable

363:                                              ; preds = %315
  %364 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %365 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %364, null
  br i1 %365, label %371, label %366

366:                                              ; preds = %363
  %367 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %364, i64 %338) #9
  %368 = load i64, i64* %367, align 8
  %369 = add i64 %368, -1
  %370 = inttoptr i64 %369 to i32*
  br label %382

371:                                              ; preds = %363
  %372 = load i64*, i64** %281, align 8
  %373 = load i64*, i64** %282, align 8
  %374 = icmp eq i64* %372, %373
  br i1 %374, label %375, label %377

375:                                              ; preds = %371
  %376 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %31) #9
  br label %377

377:                                              ; preds = %375, %371
  %378 = phi i64* [ %376, %375 ], [ %372, %371 ]
  %379 = ptrtoint i64* %378 to i64
  %380 = add i64 %379, 8
  %381 = inttoptr i64 %380 to i64*
  store i64* %381, i64** %281, align 8
  store i64 %338, i64* %378, align 8
  br label %382

382:                                              ; preds = %366, %377
  %383 = phi i32* [ %370, %366 ], [ %353, %377 ]
  %384 = phi i64 [ %368, %366 ], [ %338, %377 ]
  %385 = phi i64* [ %367, %366 ], [ %378, %377 ]
  %386 = and i64 %384, -4294967296
  %387 = load atomic i32, i32* %383 monotonic, align 4
  %388 = zext i32 %387 to i64
  %389 = or i64 %386, %388
  %390 = add i64 %389, 7
  %391 = inttoptr i64 %390 to i16*
  %392 = load atomic i16, i16* %391 monotonic, align 2
  %393 = icmp eq i16 %392, 64
  br i1 %393, label %394, label %406

394:                                              ; preds = %382
  %395 = add i64 %384, 7
  %396 = inttoptr i64 %395 to i32*
  %397 = load i32, i32* %396, align 4
  %398 = and i32 %397, 8
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %406, label %400

400:                                              ; preds = %394
  %401 = load i64, i64* %134, align 8
  %402 = add i64 %401, 11
  %403 = inttoptr i64 %402 to i32*
  %404 = load atomic i32, i32* %403 monotonic, align 4
  %405 = or i32 %404, 268435456
  store atomic volatile i32 %405, i32* %403 monotonic, align 4
  br label %406

406:                                              ; preds = %394, %382, %400
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %283) #9
  call void @_ZN2v88internal10DescriptorC1Ev(%"class.v8::internal::Descriptor"* nonnull %5) #9
  %407 = and i32 %350, 2
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %413

409:                                              ; preds = %406
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %287) #9
  %410 = lshr i32 %351, 3
  %411 = and i32 %410, 7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %288) #9
  %412 = call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %31) #9
  store i32 1, i32* %289, align 8
  store i64* %412, i64** %290, align 8
  call void @_ZN2v88internal10Descriptor9DataFieldENS0_6HandleINS0_4NameEEEiNS0_18PropertyAttributesENS0_17PropertyConstnessENS0_14RepresentationERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Descriptor"* nonnull sret %6, i64* %385, i32 %317, i32 %411, i32 %286, i8 4, %"class.v8::internal::MaybeObjectHandle"* nonnull dereferenceable(16) %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %283, i8* nonnull align 8 %287, i64 28, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %288) #9
  br label %433

413:                                              ; preds = %406
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %284) #9
  %414 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %415 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %414, null
  br i1 %415, label %418, label %416

416:                                              ; preds = %413
  %417 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %414, i64 %345) #9
  br label %429

418:                                              ; preds = %413
  %419 = load i64*, i64** %281, align 8
  %420 = load i64*, i64** %282, align 8
  %421 = icmp eq i64* %419, %420
  br i1 %421, label %422, label %424

422:                                              ; preds = %418
  %423 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %31) #9
  br label %424

424:                                              ; preds = %422, %418
  %425 = phi i64* [ %423, %422 ], [ %419, %418 ]
  %426 = ptrtoint i64* %425 to i64
  %427 = add i64 %426, 8
  %428 = inttoptr i64 %427 to i64*
  store i64* %428, i64** %281, align 8
  store i64 %345, i64* %425, align 8
  br label %429

429:                                              ; preds = %416, %424
  %430 = phi i64* [ %417, %416 ], [ %425, %424 ]
  %431 = lshr i32 %351, 3
  %432 = and i32 %431, 7
  call void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %8, i64* %385, i64* %430, i32 %432) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %283, i8* nonnull align 8 %284, i64 28, i1 false)
  br label %433

433:                                              ; preds = %429, %409
  %434 = phi i8* [ %284, %429 ], [ %287, %409 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %434) #9
  %435 = load i32, i32* %291, align 8
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %517

438:                                              ; preds = %433
  %439 = icmp slt i32 %317, %133
  br i1 %439, label %440, label %482

440:                                              ; preds = %438
  %441 = load i64, i64* %0, align 8
  %442 = and i64 %441, -4294967296
  %443 = add i64 %441, -1
  %444 = inttoptr i64 %443 to i32*
  %445 = load atomic i32, i32* %444 monotonic, align 4
  %446 = zext i32 %445 to i64
  %447 = or i64 %442, %446
  %448 = add i64 %447, 4
  %449 = inttoptr i64 %448 to i8*
  %450 = load atomic i8, i8* %449 monotonic, align 1
  %451 = zext i8 %450 to i32
  %452 = add nsw i32 %317, %451
  %453 = shl nsw i32 %452, 2
  %454 = sext i32 %453 to i64
  %455 = add i64 %443, %454
  %456 = inttoptr i64 %455 to i32*
  store atomic volatile i32 %343, i32* %456 monotonic, align 4
  %457 = and i64 %344, 1
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %515, label %459

459:                                              ; preds = %440
  %460 = and i64 %441, -262144
  %461 = or i64 %460, 8
  %462 = inttoptr i64 %461 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = and i64 %463, 262144
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %470, label %466

466:                                              ; preds = %459
  %467 = or i64 %460, 16
  %468 = inttoptr i64 %467 to %"class.v8::internal::Heap"**
  %469 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %468, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %469, i64 %441, i64 %455, i64 %345) #9
  br label %470

470:                                              ; preds = %466, %459
  %471 = and i64 %345, -262144
  %472 = or i64 %471, 8
  %473 = inttoptr i64 %472 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = and i64 %474, 24
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %515, label %477

477:                                              ; preds = %470
  %478 = load i64, i64* %462, align 8
  %479 = and i64 %478, 24
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %515

481:                                              ; preds = %477
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %441, i64 %455, i64 %345) #9
  br label %515

482:                                              ; preds = %438
  %483 = sub nsw i32 %317, %133
  %484 = load i64, i64* %272, align 8
  %485 = shl i32 %483, 2
  %486 = sext i32 %485 to i64
  %487 = add nsw i64 %486, 7
  %488 = add i64 %487, %484
  %489 = inttoptr i64 %488 to i32*
  store atomic volatile i32 %343, i32* %489 monotonic, align 4
  %490 = and i64 %344, 1
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %515, label %492

492:                                              ; preds = %482
  %493 = and i64 %484, -262144
  %494 = or i64 %493, 8
  %495 = inttoptr i64 %494 to i64*
  %496 = load i64, i64* %495, align 8
  %497 = and i64 %496, 262144
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %503, label %499

499:                                              ; preds = %492
  %500 = or i64 %493, 16
  %501 = inttoptr i64 %500 to %"class.v8::internal::Heap"**
  %502 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %501, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %502, i64 %484, i64 %488, i64 %345) #9
  br label %503

503:                                              ; preds = %499, %492
  %504 = and i64 %345, -262144
  %505 = or i64 %504, 8
  %506 = inttoptr i64 %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = and i64 %507, 24
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %515, label %510

510:                                              ; preds = %503
  %511 = load i64, i64* %495, align 8
  %512 = and i64 %511, 24
  %513 = icmp eq i64 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %510
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %484, i64 %488, i64 %345) #9
  br label %515

515:                                              ; preds = %514, %510, %503, %482, %481, %477, %470, %440
  %516 = add nsw i32 %317, 1
  br label %517

517:                                              ; preds = %515, %433
  %518 = phi i32 [ %516, %515 ], [ %317, %433 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292) #9
  %519 = load i64, i64* %265, align 8
  store i64 %519, i64* %293, align 8
  %520 = add nuw nsw i64 %316, 1
  %521 = load i64*, i64** %295, align 8
  %522 = load i64, i64* %521, align 8
  %523 = load i32, i32* %296, align 8
  %524 = load i64*, i64** %297, align 8
  %525 = icmp eq i32 %523, 0
  %526 = icmp eq i64* %524, null
  br i1 %525, label %527, label %532

527:                                              ; preds = %517
  br i1 %526, label %528, label %529, !prof !6

528:                                              ; preds = %527
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.89, i64 0, i64 0)) #14
  unreachable

529:                                              ; preds = %527
  %530 = load i64, i64* %524, align 8
  %531 = or i64 %530, 2
  br label %536

532:                                              ; preds = %517
  br i1 %526, label %533, label %534, !prof !6

533:                                              ; preds = %532
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.89, i64 0, i64 0)) #14
  unreachable

534:                                              ; preds = %532
  %535 = load i64, i64* %524, align 8
  br label %536

536:                                              ; preds = %529, %534
  %537 = phi i64 [ %531, %529 ], [ %535, %534 ]
  %538 = load i32, i32* %291, align 8
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %294, i64 %316, i64 %522, i64 %537, i32 %538) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %283) #9
  %539 = icmp slt i64 %520, %298
  br i1 %539, label %315, label %299

540:                                              ; preds = %299
  %541 = add i64 %314, 7
  %542 = inttoptr i64 %541 to i16*
  %543 = load atomic i16, i16* %542 monotonic, align 2
  %544 = icmp ugt i16 %543, 188
  br i1 %544, label %551, label %545

545:                                              ; preds = %540
  %546 = icmp eq i32 %271, 0
  br i1 %546, label %548, label %547, !prof !4

547:                                              ; preds = %545
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.86, i64 0, i64 0)) #14
  unreachable

548:                                              ; preds = %545
  %549 = add i64 %314, 5
  %550 = inttoptr i64 %549 to i8*
  store atomic volatile i8 0, i8* %550 monotonic, align 1
  br label %581

551:                                              ; preds = %540
  %552 = icmp sgt i32 %271, -1
  br i1 %552, label %554, label %553, !prof !4

553:                                              ; preds = %551
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i64 0, i64 0)) #14
  unreachable

554:                                              ; preds = %551
  %555 = add i64 %314, 3
  %556 = inttoptr i64 %555 to i8*
  %557 = load atomic i8, i8* %556 monotonic, align 1
  %558 = zext i8 %557 to i32
  %559 = add i64 %314, 4
  %560 = inttoptr i64 %559 to i8*
  %561 = load atomic i8, i8* %560 monotonic, align 1
  %562 = zext i8 %561 to i32
  %563 = load atomic i8, i8* %560 monotonic, align 1
  %564 = zext i8 %563 to i32
  %565 = sub nsw i32 %558, %271
  %566 = sub i32 %565, %562
  %567 = add i32 %566, %564
  %568 = icmp ult i32 %567, 256
  br i1 %568, label %570, label %569, !prof !4

569:                                              ; preds = %554
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.88, i64 0, i64 0)) #14
  unreachable

570:                                              ; preds = %554
  %571 = add i64 %314, 5
  %572 = inttoptr i64 %571 to i8*
  %573 = trunc i32 %567 to i8
  store atomic volatile i8 %573, i8* %572 monotonic, align 1
  br label %581

574:                                              ; preds = %299
  %575 = icmp ult i32 %271, 3
  br i1 %575, label %577, label %576, !prof !4

576:                                              ; preds = %574
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.90, i64 0, i64 0)) #14
  unreachable

577:                                              ; preds = %574
  %578 = add i64 %314, 5
  %579 = inttoptr i64 %578 to i8*
  %580 = trunc i32 %271 to i8
  store atomic volatile i8 %580, i8* %579 monotonic, align 1
  br label %581

581:                                              ; preds = %570, %548, %577
  %582 = load i8, i8* @_ZN2v88internal13FLAG_log_mapsE, align 1, !range !5
  %583 = icmp eq i8 %582, 0
  %584 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1
  %585 = icmp eq i8 %584, 0
  %586 = or i1 %583, %585
  br i1 %586, label %590, label %587

587:                                              ; preds = %581
  %588 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 21
  %589 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %588, align 8
  call void @_ZN2v88internal6Logger8MapEventEPKcNS0_6HandleINS0_3MapEEES6_S3_NS4_INS0_10HeapObjectEEE(%"class.v8::internal::Logger"* %589, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51, i64 0, i64 0), i64* %124, i64* %134, i8* %2, i64* null) #9
  br label %590

590:                                              ; preds = %581, %587
  %591 = load i64, i64* %0, align 8
  %592 = load i64, i64* %134, align 8
  %593 = add i64 %591, -1
  %594 = inttoptr i64 %593 to i32*
  %595 = trunc i64 %592 to i32
  store atomic volatile i32 %595, i32* %594 release, align 4
  %596 = icmp eq i32 %595, 0
  %597 = and i64 %592, 1
  %598 = icmp eq i64 %597, 0
  %599 = or i1 %596, %598
  br i1 %599, label %611, label %600

600:                                              ; preds = %590
  %601 = and i64 %591, -262144
  %602 = or i64 %601, 8
  %603 = inttoptr i64 %602 to i64*
  %604 = load i64, i64* %603, align 8
  %605 = and i64 %604, 262144
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %611, label %607

607:                                              ; preds = %600
  %608 = or i64 %601, 16
  %609 = inttoptr i64 %608 to %"class.v8::internal::Heap"**
  %610 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %609, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %610, i64 %591, i64 0, i64 %592) #9
  br label %611

611:                                              ; preds = %590, %600, %607
  %612 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %612) #9
  %613 = load i64, i64* %0, align 8
  %614 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %613, i64* %614, align 8
  %615 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0
  %616 = load i64, i64* %272, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %615, i64 %616)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %612) #9
  br label %617

617:                                              ; preds = %76, %261, %249, %611, %3
  ret void
}

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE16IterationIndicesEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map19CopyDropDescriptorsEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal6Logger8MapEventEPKcNS0_6HandleINS0_3MapEEES6_S3_NS4_INS0_10HeapObjectEEE(%"class.v8::internal::Logger"*, i8*, i64*, i64*, i8*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_7IsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i32, i32, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal10DescriptorC1Ev(%"class.v8::internal::Descriptor"*) unnamed_addr #2

declare void @_ZN2v88internal10Descriptor9DataFieldENS0_6HandleINS0_4NameEEEiNS0_18PropertyAttributesENS0_17PropertyConstnessENS0_14RepresentationERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Descriptor"* sret, i64*, i32, i32, i32, i8, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16)) local_unnamed_addr #2

declare i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* sret, i64*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal15DescriptorArray4SortEv(%"class.v8::internal::DescriptorArray"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject19RequireSlowElementsENS0_16NumberDictionaryE(%"class.v8::internal::JSObject"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = add i64 %1, 19
  %4 = inttoptr i64 %3 to i32*
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = and i32 %5, 3
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  store atomic volatile i32 2, i32* %4 monotonic, align 4
  %9 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 11
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 acquire, align 4
  %20 = and i32 %19, 1048576
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %8
  %23 = load i64, i64* %9, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %29) #9
  br label %30

30:                                               ; preds = %8, %2, %22
  ret void
}

declare i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"*, %"class.v8::internal::Isolate"*, i64, i64, i64, i64) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments18CallIndexedDeleterENS0_6HandleINS0_15InterceptorInfoEEEj(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %7 = alloca %"class.v8::PropertyCallbackInfo.1255", align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %9 = bitcast i64* %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #9
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14, !prof !4

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 14, i32 0
  %18 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %18, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallStats"** %15, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallTimer"* %16, i32 163) #9
  br label %20

20:                                               ; preds = %3, %14
  %21 = load i64, i64* %1, align 8
  %22 = add i64 %21, 19
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = and i64 %21, -4294967296
  %28 = zext i32 %24 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 3
  %31 = inttoptr i64 %30 to void (i32, %"class.v8::PropertyCallbackInfo.1255"*)**
  %32 = load void (i32, %"class.v8::PropertyCallbackInfo.1255"*)*, void (i32, %"class.v8::PropertyCallbackInfo.1255"*)** %31, align 1
  br label %33

33:                                               ; preds = %20, %26
  %34 = phi void (i32, %"class.v8::PropertyCallbackInfo.1255"*)* [ %32, %26 ], [ null, %20 ]
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 108
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %40 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %39, align 8
  %41 = call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %40, i64* null, i64* null, i32 0) #9
  br i1 %41, label %42, label %165

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 22
  %44 = load i32, i32* %43, align 8
  store i32 6, i32* %43, align 8
  %45 = bitcast %"class.v8::internal::ExternalCallbackScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = ptrtoint void (i32, %"class.v8::PropertyCallbackInfo.1255"*)* %34 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 1
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 21
  %51 = bitcast %"class.v8::internal::ExternalCallbackScope"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.v8::internal::ExternalCallbackScope"** %49 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %6, %"class.v8::internal::ExternalCallbackScope"** %50, align 8
  %54 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %55 = inttoptr i64 %54 to i8*
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %42
  %58 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %59 = bitcast %"class.v8::TracingController"* %58 to i8* (%"class.v8::TracingController"*, i8*)***
  %60 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %59, align 8
  %61 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %60, i64 2
  %62 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %61, align 8
  %63 = call i8* %62(%"class.v8::TracingController"* %58, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %64 = ptrtoint i8* %63 to i64
  store atomic volatile i64 %64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %65

65:                                               ; preds = %57, %42
  %66 = phi i8* [ %55, %42 ], [ %63, %57 ]
  %67 = load atomic i8, i8* %66 monotonic, align 1
  %68 = and i8 %67, 5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %97, label %70

70:                                               ; preds = %65
  %71 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #9
  %72 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 0, i64 16, i1 false) #9
  %73 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %74 = bitcast %"class.v8::TracingController"* %73 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %75 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %75, i64 3
  %77 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %76, align 8
  %78 = call i64 %77(%"class.v8::TracingController"* %73, i8 signext 66, i8* %66, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %72, i32 0) #9
  %79 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %80 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  %81 = icmp eq %"class.v8::ConvertableToTraceFormat"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %70
  %83 = bitcast %"class.v8::ConvertableToTraceFormat"* %80 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %84 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %84, i64 1
  %86 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %85, align 8
  call void %86(%"class.v8::ConvertableToTraceFormat"* nonnull %80) #9
  br label %87

87:                                               ; preds = %82, %70
  %88 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  %90 = icmp eq %"class.v8::ConvertableToTraceFormat"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.v8::ConvertableToTraceFormat"* %89 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %93 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %93, i64 1
  %95 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %94, align 8
  call void %95(%"class.v8::ConvertableToTraceFormat"* nonnull %89) #9
  br label %96

96:                                               ; preds = %91, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #9
  br label %97

97:                                               ; preds = %65, %96
  %98 = bitcast %"class.v8::PropertyCallbackInfo.1255"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %100 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1255", %"class.v8::PropertyCallbackInfo.1255"* %7, i64 0, i32 0
  store i64* %99, i64** %100, align 8
  %101 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 21
  %105 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %107 = load i64, i64* %106, align 8
  call void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"* %105, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.91, i64 0, i64 0), i64 %107, i32 %2) #9
  br label %108

108:                                              ; preds = %97, %103
  call void %34(i32 %2, %"class.v8::PropertyCallbackInfo.1255"* nonnull dereferenceable(8) %7) #9
  %109 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %112 = load i64, i64* %111, align 8
  %113 = trunc i64 %110 to i32
  %114 = trunc i64 %112 to i32
  %115 = icmp eq i32 %113, %114
  %116 = select i1 %115, i64* null, i64* %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  %117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %118 = load i64, i64* %53, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %117, i64 0, i32 0, i32 9, i32 21
  %120 = bitcast %"class.v8::internal::ExternalCallbackScope"** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %122 = inttoptr i64 %121 to i8*
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %124, label %132

124:                                              ; preds = %108
  %125 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %126 = bitcast %"class.v8::TracingController"* %125 to i8* (%"class.v8::TracingController"*, i8*)***
  %127 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %126, align 8
  %128 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %127, i64 2
  %129 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %128, align 8
  %130 = call i8* %129(%"class.v8::TracingController"* %125, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %131 = ptrtoint i8* %130 to i64
  store atomic volatile i64 %131, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %132

132:                                              ; preds = %124, %108
  %133 = phi i8* [ %122, %108 ], [ %130, %124 ]
  %134 = load atomic i8, i8* %133 monotonic, align 1
  %135 = and i8 %134, 5
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %164, label %137

137:                                              ; preds = %132
  %138 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #9
  %139 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %138, i8 0, i64 16, i1 false) #9
  %140 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %141 = bitcast %"class.v8::TracingController"* %140 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %142 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %141, align 8
  %143 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %142, i64 3
  %144 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %143, align 8
  %145 = call i64 %144(%"class.v8::TracingController"* %140, i8 signext 69, i8* %133, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %139, i32 0) #9
  %146 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %147 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %146, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %146, align 8
  %148 = icmp eq %"class.v8::ConvertableToTraceFormat"* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %137
  %150 = bitcast %"class.v8::ConvertableToTraceFormat"* %147 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %151 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %151, i64 1
  %153 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %152, align 8
  call void %153(%"class.v8::ConvertableToTraceFormat"* nonnull %147) #9
  br label %154

154:                                              ; preds = %149, %137
  %155 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %155, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %155, align 16
  %157 = icmp eq %"class.v8::ConvertableToTraceFormat"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.v8::ConvertableToTraceFormat"* %156 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %160 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %160, i64 1
  %162 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %161, align 8
  call void %162(%"class.v8::ConvertableToTraceFormat"* nonnull %156) #9
  br label %163

163:                                              ; preds = %158, %154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #9
  br label %164

164:                                              ; preds = %132, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  store i32 %44, i32* %43, align 8
  br label %165

165:                                              ; preds = %38, %164
  %166 = phi i64* [ %116, %164 ], [ null, %38 ]
  %167 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %168 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %167, align 8
  %169 = icmp eq %"class.v8::internal::RuntimeCallStats"* %168, null
  br i1 %169, label %172, label %170, !prof !4

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %168, %"class.v8::internal::RuntimeCallTimer"* %171) #9
  br label %172

172:                                              ; preds = %165, %170
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  ret i64* %166
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments16CallNamedDeleterENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEE(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i64*) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %7 = alloca %"class.v8::PropertyCallbackInfo.1255", align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %9 = bitcast i64* %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #9
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14, !prof !4

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 14, i32 0
  %18 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %18, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallStats"** %15, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallTimer"* %16, i32 183) #9
  br label %20

20:                                               ; preds = %3, %14
  %21 = load i64, i64* %1, align 8
  %22 = add i64 %21, 19
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = and i64 %21, -4294967296
  %28 = zext i32 %24 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 3
  %31 = inttoptr i64 %30 to void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1255"*)**
  %32 = load void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1255"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1255"*)** %31, align 1
  br label %33

33:                                               ; preds = %20, %26
  %34 = phi void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1255"*)* [ %32, %26 ], [ null, %20 ]
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 108
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %40 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %39, align 8
  %41 = call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %40, i64* null, i64* null, i32 0) #9
  br i1 %41, label %42, label %167

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 22
  %44 = load i32, i32* %43, align 8
  store i32 6, i32* %43, align 8
  %45 = bitcast %"class.v8::internal::ExternalCallbackScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = ptrtoint void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1255"*)* %34 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 1
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 21
  %51 = bitcast %"class.v8::internal::ExternalCallbackScope"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.v8::internal::ExternalCallbackScope"** %49 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %6, %"class.v8::internal::ExternalCallbackScope"** %50, align 8
  %54 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %55 = inttoptr i64 %54 to i8*
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %42
  %58 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %59 = bitcast %"class.v8::TracingController"* %58 to i8* (%"class.v8::TracingController"*, i8*)***
  %60 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %59, align 8
  %61 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %60, i64 2
  %62 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %61, align 8
  %63 = call i8* %62(%"class.v8::TracingController"* %58, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %64 = ptrtoint i8* %63 to i64
  store atomic volatile i64 %64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %65

65:                                               ; preds = %57, %42
  %66 = phi i8* [ %55, %42 ], [ %63, %57 ]
  %67 = load atomic i8, i8* %66 monotonic, align 1
  %68 = and i8 %67, 5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %97, label %70

70:                                               ; preds = %65
  %71 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #9
  %72 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 0, i64 16, i1 false) #9
  %73 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %74 = bitcast %"class.v8::TracingController"* %73 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %75 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %75, i64 3
  %77 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %76, align 8
  %78 = call i64 %77(%"class.v8::TracingController"* %73, i8 signext 66, i8* %66, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %72, i32 0) #9
  %79 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %80 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  %81 = icmp eq %"class.v8::ConvertableToTraceFormat"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %70
  %83 = bitcast %"class.v8::ConvertableToTraceFormat"* %80 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %84 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %84, i64 1
  %86 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %85, align 8
  call void %86(%"class.v8::ConvertableToTraceFormat"* nonnull %80) #9
  br label %87

87:                                               ; preds = %82, %70
  %88 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  %90 = icmp eq %"class.v8::ConvertableToTraceFormat"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.v8::ConvertableToTraceFormat"* %89 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %93 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %93, i64 1
  %95 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %94, align 8
  call void %95(%"class.v8::ConvertableToTraceFormat"* nonnull %89) #9
  br label %96

96:                                               ; preds = %91, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #9
  br label %97

97:                                               ; preds = %65, %96
  %98 = bitcast %"class.v8::PropertyCallbackInfo.1255"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %100 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1255", %"class.v8::PropertyCallbackInfo.1255"* %7, i64 0, i32 0
  store i64* %99, i64** %100, align 8
  %101 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 21
  %105 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %107 = load i64, i64* %106, align 8
  %108 = load i64, i64* %2, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %105, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.92, i64 0, i64 0), i64 %107, i64 %108) #9
  br label %109

109:                                              ; preds = %97, %103
  %110 = bitcast i64* %2 to %"class.v8::Name"*
  call void %34(%"class.v8::Name"* %110, %"class.v8::PropertyCallbackInfo.1255"* nonnull dereferenceable(8) %7) #9
  %111 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %114 = load i64, i64* %113, align 8
  %115 = trunc i64 %112 to i32
  %116 = trunc i64 %114 to i32
  %117 = icmp eq i32 %115, %116
  %118 = select i1 %117, i64* null, i64* %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  %119 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %120 = load i64, i64* %53, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %119, i64 0, i32 0, i32 9, i32 21
  %122 = bitcast %"class.v8::internal::ExternalCallbackScope"** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %124 = inttoptr i64 %123 to i8*
  %125 = icmp eq i64 %123, 0
  br i1 %125, label %126, label %134

126:                                              ; preds = %109
  %127 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %128 = bitcast %"class.v8::TracingController"* %127 to i8* (%"class.v8::TracingController"*, i8*)***
  %129 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %128, align 8
  %130 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %129, i64 2
  %131 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %130, align 8
  %132 = call i8* %131(%"class.v8::TracingController"* %127, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %133 = ptrtoint i8* %132 to i64
  store atomic volatile i64 %133, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %134

134:                                              ; preds = %126, %109
  %135 = phi i8* [ %124, %109 ], [ %132, %126 ]
  %136 = load atomic i8, i8* %135 monotonic, align 1
  %137 = and i8 %136, 5
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %166, label %139

139:                                              ; preds = %134
  %140 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #9
  %141 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %140, i8 0, i64 16, i1 false) #9
  %142 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %143 = bitcast %"class.v8::TracingController"* %142 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %144 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %143, align 8
  %145 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %144, i64 3
  %146 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %145, align 8
  %147 = call i64 %146(%"class.v8::TracingController"* %142, i8 signext 69, i8* %135, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %141, i32 0) #9
  %148 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %149 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %148, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %148, align 8
  %150 = icmp eq %"class.v8::ConvertableToTraceFormat"* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %139
  %152 = bitcast %"class.v8::ConvertableToTraceFormat"* %149 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %153 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %153, i64 1
  %155 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %154, align 8
  call void %155(%"class.v8::ConvertableToTraceFormat"* nonnull %149) #9
  br label %156

156:                                              ; preds = %151, %139
  %157 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %157, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %157, align 16
  %159 = icmp eq %"class.v8::ConvertableToTraceFormat"* %158, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %156
  %161 = bitcast %"class.v8::ConvertableToTraceFormat"* %158 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %162 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %162, i64 1
  %164 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %163, align 8
  call void %164(%"class.v8::ConvertableToTraceFormat"* nonnull %158) #9
  br label %165

165:                                              ; preds = %160, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #9
  br label %166

166:                                              ; preds = %134, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  store i32 %44, i32* %43, align 8
  br label %167

167:                                              ; preds = %38, %166
  %168 = phi i64* [ %118, %166 ], [ null, %38 ]
  %169 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %170 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %169, align 8
  %171 = icmp eq %"class.v8::internal::RuntimeCallStats"* %170, null
  br i1 %171, label %174, label %172, !prof !4

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %170, %"class.v8::internal::RuntimeCallTimer"* %173) #9
  br label %174

174:                                              ; preds = %167, %172
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  ret i64* %168
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE0EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE(i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %4 = alloca %"class.v8::internal::Context", align 8
  %5 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %6 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %7 = load i64, i64* %0, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = and i64 %7, -4294967296
  %15 = add i64 %7, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 190
  br i1 %23, label %24, label %44

24:                                               ; preds = %2
  %25 = bitcast %"class.v8::internal::Context"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %30 = bitcast %"class.v8::internal::PrototypeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #9
  %31 = load i64, i64* %10, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %33, %"class.v8::internal::Isolate"** %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 1, i32 0, i32 0
  store i64 %7, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 3
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 4
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 6
  store i32 0, i32* %39, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %3) #9
  %40 = load i64, i64* %35, align 8
  %41 = trunc i64 %40 to i32
  %42 = trunc i64 %29 to i32
  %43 = icmp eq i32 %41, %42
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #9
  br i1 %43, label %94, label %53

44:                                               ; preds = %2
  %45 = load atomic i32, i32* %16 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %14, %46
  %48 = add i64 %47, 9
  %49 = inttoptr i64 %48 to i8*
  %50 = load atomic i8, i8* %49 monotonic, align 1
  %51 = and i8 %50, 32
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %94, label %53

53:                                               ; preds = %24, %44
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  %60 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %55) #9
  br label %74

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64* [ %68, %67 ], [ %63, %61 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = add i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  store i64* %73, i64** %62, align 8
  store i64 %55, i64* %70, align 8
  br label %74

74:                                               ; preds = %59, %69
  %75 = phi i64* [ %60, %59 ], [ %70, %69 ]
  %76 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %13, i64* %75, i64* %0) #9
  br i1 %76, label %94, label %77

77:                                               ; preds = %74
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %13, i64* %0) #9
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 5
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = trunc i64 %79 to i32
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  %86 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %13) #9
  br label %699

87:                                               ; preds = %77
  %88 = icmp eq i32 %1, 1
  br i1 %88, label %699, label %89

89:                                               ; preds = %87
  %90 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %91 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %90, i32 81, i64* null, i64* null, i64* null) #9
  %92 = load i64, i64* %91, align 8
  %93 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %92, %"class.v8::internal::MessageLocation"* null) #9
  br label %699

94:                                               ; preds = %24, %44, %74
  %95 = load i64, i64* %0, align 8
  %96 = and i64 %95, -4294967296
  %97 = add i64 %95, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %96, %100
  %102 = add i64 %101, 11
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 134217728
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %699, label %107

107:                                              ; preds = %94
  %108 = load atomic i32, i32* %98 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %96, %109
  %111 = add i64 %110, 10
  %112 = inttoptr i64 %111 to i8*
  %113 = load i8, i8* %112, align 1
  %114 = lshr i8 %113, 2
  %115 = and i8 %114, 62
  switch i8 %115, label %116 [
    i8 10, label %699
    i8 8, label %699
  ]

116:                                              ; preds = %107
  %117 = load atomic i32, i32* %98 monotonic, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %96, %118
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i16*
  %122 = load atomic i16, i16* %121 monotonic, align 2
  %123 = icmp eq i16 %122, 190
  br i1 %123, label %124, label %142

124:                                              ; preds = %116
  %125 = bitcast %"class.v8::internal::PrototypeIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %125) #9
  %126 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 2, i32 0, i32 0
  store i64* %0, i64** %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 3
  store i32 0, i32* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 4
  store i8 0, i8* %130, align 4
  %131 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %5, i64 0, i32 6
  store i32 0, i32* %131, align 8
  %132 = icmp eq i64* %0, null
  br i1 %132, label %133, label %134, !prof !6

133:                                              ; preds = %124
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #14
  unreachable

134:                                              ; preds = %124
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %5) #9
  %135 = load i8, i8* %130, align 4, !range !5
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = load i64*, i64** %128, align 8
  %139 = call i16 @_ZN2v88internal8JSObject31PreventExtensionsWithTransitionILNS0_18PropertyAttributesE0EEENS_5MaybeIbEENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %138, i32 %1)
  br label %140

140:                                              ; preds = %134, %137
  %141 = phi i16 [ %139, %137 ], [ 257, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %125) #9
  br label %699

142:                                              ; preds = %116
  %143 = load atomic i32, i32* %98 monotonic, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %96, %144
  %146 = add i64 %145, 9
  %147 = inttoptr i64 %146 to i8*
  %148 = load atomic i8, i8* %147 monotonic, align 1
  %149 = and i8 %148, 4
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %160

151:                                              ; preds = %142
  %152 = load atomic i32, i32* %98 monotonic, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %96, %153
  %155 = add i64 %154, 9
  %156 = inttoptr i64 %155 to i8*
  %157 = load atomic i8, i8* %156 monotonic, align 1
  %158 = and i8 %157, 8
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %167, label %160

160:                                              ; preds = %151, %142
  %161 = icmp eq i32 %1, 1
  br i1 %161, label %699, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %164 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %163, i32 31, i64* null, i64* null, i64* null) #9
  %165 = load i64, i64* %164, align 8
  %166 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %165, %"class.v8::internal::MessageLocation"* null) #9
  br label %699

167:                                              ; preds = %151
  %168 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %169 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %168, i64 4048
  %170 = bitcast %"class.v8::internal::Factory"* %169 to i64*
  %171 = load atomic i32, i32* %98 monotonic, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %96, %172
  %174 = add i64 %173, 10
  %175 = inttoptr i64 %174 to i8*
  %176 = load i8, i8* %175, align 1
  %177 = lshr i8 %176, 2
  %178 = icmp ult i8 %176, 24
  br i1 %178, label %179, label %188

179:                                              ; preds = %167
  %180 = lshr i8 51, %177
  %181 = and i8 %180, 1
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %188, label %183

183:                                              ; preds = %179
  %184 = zext i8 %177 to i48
  %185 = shl nuw nsw i48 %184, 3
  %186 = lshr i48 3307158504194, %185
  %187 = trunc i48 %186 to i8
  call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext %187)
  br label %188

188:                                              ; preds = %179, %167, %183
  %189 = load i64, i64* %0, align 8
  %190 = and i64 %189, -4294967296
  %191 = add i64 %189, -1
  %192 = inttoptr i64 %191 to i32*
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = zext i32 %193 to i64
  %195 = or i64 %190, %194
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %197 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %196, align 8
  %198 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %197, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %188
  %200 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %197, i64 %195) #9
  br label %214

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %203 = load i64*, i64** %202, align 8
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %205 = load i64*, i64** %204, align 8
  %206 = icmp eq i64* %203, %205
  br i1 %206, label %207, label %209

207:                                              ; preds = %201
  %208 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %209

209:                                              ; preds = %207, %201
  %210 = phi i64* [ %208, %207 ], [ %203, %201 ]
  %211 = ptrtoint i64* %210 to i64
  %212 = add i64 %211, 8
  %213 = inttoptr i64 %212 to i64*
  store i64* %213, i64** %202, align 8
  store i64 %195, i64* %210, align 8
  br label %214

214:                                              ; preds = %199, %209
  %215 = phi i64* [ %200, %199 ], [ %210, %209 ]
  %216 = call i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %13, i64* %215) #9
  %217 = bitcast %"class.v8::internal::TransitionsAccessor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %217) #9
  %218 = ptrtoint i64* %216 to i64
  %219 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %219, align 8
  %220 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 1
  %221 = bitcast %"class.v8::internal::Handle.1175"* %220 to i64*
  store i64 %218, i64* %221, align 8
  %222 = load i64, i64* %216, align 8
  %223 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 5
  store i8 0, i8* %225, align 4
  %226 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 4
  %227 = load i64, i64* %226, align 8
  %228 = add i64 %222, 35
  %229 = inttoptr i64 %228 to i32*
  %230 = load atomic i32, i32* %229 acquire, align 4
  %231 = and i64 %227, 4294967295
  %232 = icmp eq i64 %231, 0
  call void @llvm.assume(i1 %232) #9
  %233 = zext i32 %230 to i64
  %234 = or i64 %227, %233
  store i64 %234, i64* %224, align 8
  %235 = and i64 %233, 1
  %236 = icmp eq i64 %235, 0
  %237 = icmp eq i32 %230, 3
  %238 = or i1 %237, %236
  br i1 %238, label %239, label %241

239:                                              ; preds = %214
  %240 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  store i32 1, i32* %240, align 8
  br label %269

241:                                              ; preds = %214
  %242 = and i64 %233, 3
  switch i64 %242, label %268 [
    i64 3, label %243
    i64 1, label %245
  ]

243:                                              ; preds = %241
  %244 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  store i32 3, i32* %244, align 8
  br label %269

245:                                              ; preds = %241
  %246 = add i64 %234, -1
  %247 = inttoptr i64 %246 to i32*
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = zext i32 %248 to i64
  %250 = or i64 %227, %249
  %251 = add i64 %250, 7
  %252 = inttoptr i64 %251 to i16*
  %253 = load atomic i16, i16* %252 monotonic, align 2
  %254 = icmp eq i16 %253, 160
  br i1 %254, label %255, label %257

255:                                              ; preds = %245
  %256 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  store i32 4, i32* %256, align 8
  br label %269

257:                                              ; preds = %245
  %258 = load atomic i32, i32* %247 monotonic, align 4
  %259 = zext i32 %258 to i64
  %260 = or i64 %227, %259
  %261 = add i64 %260, 7
  %262 = inttoptr i64 %261 to i16*
  %263 = load atomic i16, i16* %262 monotonic, align 2
  %264 = icmp eq i16 %263, 110
  %265 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %6, i64 0, i32 4
  br i1 %264, label %266, label %267

266:                                              ; preds = %257
  store i32 0, i32* %265, align 8
  br label %269

267:                                              ; preds = %257
  store i32 2, i32* %265, align 8
  br label %269

268:                                              ; preds = %241
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

269:                                              ; preds = %239, %243, %255, %266, %267
  %270 = load i64, i64* %170, align 8
  %271 = call i64 @_ZN2v88internal19TransitionsAccessor13SearchSpecialENS0_6SymbolE(%"class.v8::internal::TransitionsAccessor"* nonnull %6, i64 %270) #9
  %272 = trunc i64 %271 to i32
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %375, label %274

274:                                              ; preds = %269
  %275 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %196, align 8
  %276 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %275, null
  br i1 %276, label %280, label %277

277:                                              ; preds = %274
  %278 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %275, i64 %271) #9
  %279 = load i64, i64* %278, align 8
  br label %293

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %282 = load i64*, i64** %281, align 8
  %283 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %284 = load i64*, i64** %283, align 8
  %285 = icmp eq i64* %282, %284
  br i1 %285, label %286, label %288

286:                                              ; preds = %280
  %287 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %288

288:                                              ; preds = %286, %280
  %289 = phi i64* [ %287, %286 ], [ %282, %280 ]
  %290 = ptrtoint i64* %289 to i64
  %291 = add i64 %290, 8
  %292 = inttoptr i64 %291 to i64*
  store i64* %292, i64** %281, align 8
  store i64 %271, i64* %289, align 8
  br label %293

293:                                              ; preds = %277, %288
  %294 = phi i64 [ %279, %277 ], [ %271, %288 ]
  %295 = phi i64* [ %278, %277 ], [ %289, %288 ]
  %296 = add i64 %294, 10
  %297 = inttoptr i64 %296 to i8*
  %298 = load i8, i8* %297, align 1
  %299 = lshr i8 %298, 2
  %300 = add nsw i8 %299, -6
  %301 = icmp ult i8 %300, 6
  br i1 %301, label %582, label %302

302:                                              ; preds = %293
  %303 = load i64, i64* %0, align 8
  %304 = and i64 %303, -4294967296
  %305 = add i64 %303, -1
  %306 = inttoptr i64 %305 to i32*
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = zext i32 %307 to i64
  %309 = or i64 %304, %308
  %310 = add i64 %309, 10
  %311 = inttoptr i64 %310 to i8*
  %312 = load i8, i8* %311, align 1
  %313 = lshr i8 %312, 2
  %314 = add nsw i8 %313, -17
  %315 = icmp ult i8 %314, 11
  br i1 %315, label %582, label %316

316:                                              ; preds = %302
  %317 = load atomic i32, i32* %306 monotonic, align 4
  %318 = zext i32 %317 to i64
  %319 = or i64 %304, %318
  %320 = add i64 %319, 10
  %321 = inttoptr i64 %320 to i8*
  %322 = load i8, i8* %321, align 1
  %323 = and i8 %322, -4
  %324 = icmp eq i8 %323, 48
  br i1 %324, label %582, label %325

325:                                              ; preds = %316
  %326 = load atomic i32, i32* %306 monotonic, align 4
  %327 = zext i32 %326 to i64
  %328 = or i64 %304, %327
  %329 = add i64 %328, 10
  %330 = inttoptr i64 %329 to i8*
  %331 = load i8, i8* %330, align 1
  %332 = and i8 %331, -4
  %333 = icmp eq i8 %332, 64
  br i1 %333, label %582, label %334

334:                                              ; preds = %325
  %335 = load atomic i32, i32* %306 monotonic, align 4
  %336 = zext i32 %335 to i64
  %337 = or i64 %304, %336
  %338 = add i64 %337, 7
  %339 = inttoptr i64 %338 to i16*
  %340 = load atomic i16, i16* %339 monotonic, align 2
  %341 = icmp eq i16 %340, 1085
  br i1 %341, label %342, label %344

342:                                              ; preds = %334
  %343 = add i64 %303, 11
  br label %351

344:                                              ; preds = %334
  %345 = add i64 %303, 7
  %346 = inttoptr i64 %345 to i32*
  %347 = load i32, i32* %346, align 4
  %348 = zext i32 %347 to i64
  %349 = or i64 %304, %348
  %350 = add i64 %349, 3
  br label %351

351:                                              ; preds = %344, %342
  %352 = phi i64 [ %343, %342 ], [ %350, %344 ]
  %353 = inttoptr i64 %352 to i32*
  %354 = load i32, i32* %353, align 4
  %355 = icmp ult i32 %354, 2
  br i1 %355, label %356, label %358

356:                                              ; preds = %351
  %357 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %582

358:                                              ; preds = %351
  %359 = load atomic i32, i32* %306 monotonic, align 4
  %360 = zext i32 %359 to i64
  %361 = or i64 %304, %360
  %362 = add i64 %361, 10
  %363 = inttoptr i64 %362 to i8*
  %364 = load i8, i8* %363, align 1
  %365 = lshr i8 %364, 2
  %366 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %367 = zext i8 %365 to i64
  %368 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %366, i64 %367
  %369 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %368, align 8
  %370 = bitcast %"class.v8::internal::ElementsAccessor"* %369 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %371 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %370, align 8
  %372 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %371, i64 22
  %373 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %372, align 8
  %374 = call i64* %373(%"class.v8::internal::ElementsAccessor"* %369, i64* %0) #9
  br label %582

375:                                              ; preds = %269
  %376 = call zeroext i1 @_ZN2v88internal19TransitionsAccessor22CanHaveMoreTransitionsEv(%"class.v8::internal::TransitionsAccessor"* nonnull %6) #9
  br i1 %376, label %377, label %459

377:                                              ; preds = %375
  %378 = call i64* @_ZN2v88internal3Map24CopyForPreventExtensionsEPNS0_7IsolateENS0_6HandleIS1_EENS0_18PropertyAttributesENS4_INS0_6SymbolEEEPKcb(%"class.v8::internal::Isolate"* %13, i64* %216, i32 0, i64* %170, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0), i1 zeroext false) #9
  %379 = load i64, i64* %378, align 8
  %380 = add i64 %379, 10
  %381 = inttoptr i64 %380 to i8*
  %382 = load i8, i8* %381, align 1
  %383 = lshr i8 %382, 2
  %384 = add nsw i8 %383, -6
  %385 = icmp ult i8 %384, 6
  br i1 %385, label %582, label %386

386:                                              ; preds = %377
  %387 = load i64, i64* %0, align 8
  %388 = and i64 %387, -4294967296
  %389 = add i64 %387, -1
  %390 = inttoptr i64 %389 to i32*
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = zext i32 %391 to i64
  %393 = or i64 %388, %392
  %394 = add i64 %393, 10
  %395 = inttoptr i64 %394 to i8*
  %396 = load i8, i8* %395, align 1
  %397 = lshr i8 %396, 2
  %398 = add nsw i8 %397, -17
  %399 = icmp ult i8 %398, 11
  br i1 %399, label %582, label %400

400:                                              ; preds = %386
  %401 = load atomic i32, i32* %390 monotonic, align 4
  %402 = zext i32 %401 to i64
  %403 = or i64 %388, %402
  %404 = add i64 %403, 10
  %405 = inttoptr i64 %404 to i8*
  %406 = load i8, i8* %405, align 1
  %407 = and i8 %406, -4
  %408 = icmp eq i8 %407, 48
  br i1 %408, label %582, label %409

409:                                              ; preds = %400
  %410 = load atomic i32, i32* %390 monotonic, align 4
  %411 = zext i32 %410 to i64
  %412 = or i64 %388, %411
  %413 = add i64 %412, 10
  %414 = inttoptr i64 %413 to i8*
  %415 = load i8, i8* %414, align 1
  %416 = and i8 %415, -4
  %417 = icmp eq i8 %416, 64
  br i1 %417, label %582, label %418

418:                                              ; preds = %409
  %419 = load atomic i32, i32* %390 monotonic, align 4
  %420 = zext i32 %419 to i64
  %421 = or i64 %388, %420
  %422 = add i64 %421, 7
  %423 = inttoptr i64 %422 to i16*
  %424 = load atomic i16, i16* %423 monotonic, align 2
  %425 = icmp eq i16 %424, 1085
  br i1 %425, label %426, label %428

426:                                              ; preds = %418
  %427 = add i64 %387, 11
  br label %435

428:                                              ; preds = %418
  %429 = add i64 %387, 7
  %430 = inttoptr i64 %429 to i32*
  %431 = load i32, i32* %430, align 4
  %432 = zext i32 %431 to i64
  %433 = or i64 %388, %432
  %434 = add i64 %433, 3
  br label %435

435:                                              ; preds = %428, %426
  %436 = phi i64 [ %427, %426 ], [ %434, %428 ]
  %437 = inttoptr i64 %436 to i32*
  %438 = load i32, i32* %437, align 4
  %439 = icmp ult i32 %438, 2
  br i1 %439, label %440, label %442

440:                                              ; preds = %435
  %441 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %582

442:                                              ; preds = %435
  %443 = load atomic i32, i32* %390 monotonic, align 4
  %444 = zext i32 %443 to i64
  %445 = or i64 %388, %444
  %446 = add i64 %445, 10
  %447 = inttoptr i64 %446 to i8*
  %448 = load i8, i8* %447, align 1
  %449 = lshr i8 %448, 2
  %450 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %451 = zext i8 %449 to i64
  %452 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %450, i64 %451
  %453 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %452, align 8
  %454 = bitcast %"class.v8::internal::ElementsAccessor"* %453 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %455 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %454, align 8
  %456 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %455, i64 22
  %457 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %456, align 8
  %458 = call i64* %457(%"class.v8::internal::ElementsAccessor"* %453, i64* %0) #9
  br label %582

459:                                              ; preds = %375
  call void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"* %13, i64* %0, i32 0, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.97, i64 0, i64 0))
  %460 = load i64, i64* %0, align 8
  %461 = and i64 %460, -4294967296
  %462 = add i64 %460, -1
  %463 = inttoptr i64 %462 to i32*
  %464 = load atomic i32, i32* %463 monotonic, align 4
  %465 = zext i32 %464 to i64
  %466 = or i64 %461, %465
  %467 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %196, align 8
  %468 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %467, null
  br i1 %468, label %471, label %469

469:                                              ; preds = %459
  %470 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %467, i64 %466) #9
  br label %484

471:                                              ; preds = %459
  %472 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %473 = load i64*, i64** %472, align 8
  %474 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %475 = load i64*, i64** %474, align 8
  %476 = icmp eq i64* %473, %475
  br i1 %476, label %477, label %479

477:                                              ; preds = %471
  %478 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %479

479:                                              ; preds = %477, %471
  %480 = phi i64* [ %478, %477 ], [ %473, %471 ]
  %481 = ptrtoint i64* %480 to i64
  %482 = add i64 %481, 8
  %483 = inttoptr i64 %482 to i64*
  store i64* %483, i64** %472, align 8
  store i64 %466, i64* %480, align 8
  br label %484

484:                                              ; preds = %469, %479
  %485 = phi i64* [ %470, %469 ], [ %480, %479 ]
  %486 = call i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %13, i64* %485, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.98, i64 0, i64 0)) #9
  %487 = load i64, i64* %486, align 8
  %488 = add i64 %487, 11
  %489 = inttoptr i64 %488 to i32*
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, -134217729
  store atomic volatile i32 %491, i32* %489 monotonic, align 4
  %492 = load i64, i64* %0, align 8
  %493 = and i64 %492, -4294967296
  %494 = add i64 %492, -1
  %495 = inttoptr i64 %494 to i32*
  %496 = load atomic i32, i32* %495 monotonic, align 4
  %497 = zext i32 %496 to i64
  %498 = or i64 %493, %497
  %499 = add i64 %498, 10
  %500 = inttoptr i64 %499 to i8*
  %501 = load i8, i8* %500, align 1
  %502 = lshr i8 %501, 2
  %503 = add nsw i8 %502, -17
  %504 = icmp ult i8 %503, 11
  br i1 %504, label %582, label %505

505:                                              ; preds = %484
  %506 = load atomic i32, i32* %495 monotonic, align 4
  %507 = zext i32 %506 to i64
  %508 = or i64 %493, %507
  %509 = add i64 %508, 10
  %510 = inttoptr i64 %509 to i8*
  %511 = load i8, i8* %510, align 1
  %512 = and i8 %511, -4
  %513 = icmp eq i8 %512, 48
  br i1 %513, label %582, label %514

514:                                              ; preds = %505
  %515 = load atomic i32, i32* %495 monotonic, align 4
  %516 = zext i32 %515 to i64
  %517 = or i64 %493, %516
  %518 = add i64 %517, 10
  %519 = inttoptr i64 %518 to i8*
  %520 = load i8, i8* %519, align 1
  %521 = and i8 %520, -4
  %522 = icmp eq i8 %521, 64
  br i1 %522, label %582, label %523

523:                                              ; preds = %514
  %524 = load atomic i32, i32* %495 monotonic, align 4
  %525 = zext i32 %524 to i64
  %526 = or i64 %493, %525
  %527 = add i64 %526, 7
  %528 = inttoptr i64 %527 to i16*
  %529 = load atomic i16, i16* %528 monotonic, align 2
  %530 = icmp eq i16 %529, 1085
  br i1 %530, label %531, label %533

531:                                              ; preds = %523
  %532 = add i64 %492, 11
  br label %540

533:                                              ; preds = %523
  %534 = add i64 %492, 7
  %535 = inttoptr i64 %534 to i32*
  %536 = load i32, i32* %535, align 4
  %537 = zext i32 %536 to i64
  %538 = or i64 %493, %537
  %539 = add i64 %538, 3
  br label %540

540:                                              ; preds = %533, %531
  %541 = phi i64 [ %532, %531 ], [ %539, %533 ]
  %542 = inttoptr i64 %541 to i32*
  %543 = load i32, i32* %542, align 4
  %544 = icmp ult i32 %543, 2
  br i1 %544, label %545, label %547

545:                                              ; preds = %540
  %546 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %564

547:                                              ; preds = %540
  %548 = load atomic i32, i32* %495 monotonic, align 4
  %549 = zext i32 %548 to i64
  %550 = or i64 %493, %549
  %551 = add i64 %550, 10
  %552 = inttoptr i64 %551 to i8*
  %553 = load i8, i8* %552, align 1
  %554 = lshr i8 %553, 2
  %555 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %556 = zext i8 %554 to i64
  %557 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %555, i64 %556
  %558 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %557, align 8
  %559 = bitcast %"class.v8::internal::ElementsAccessor"* %558 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %560 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %559, align 8
  %561 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %560, i64 22
  %562 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %561, align 8
  %563 = call i64* %562(%"class.v8::internal::ElementsAccessor"* %558, i64* %0) #9
  br label %564

564:                                              ; preds = %545, %547
  %565 = phi i64* [ %546, %545 ], [ %563, %547 ]
  %566 = icmp eq i64* %565, null
  br i1 %566, label %582, label %567

567:                                              ; preds = %564
  %568 = load i64, i64* %216, align 8
  %569 = add i64 %568, 10
  %570 = inttoptr i64 %569 to i8*
  %571 = load i8, i8* %570, align 1
  %572 = lshr i8 %571, 2
  %573 = add nsw i8 %572, -15
  %574 = icmp ult i8 %573, 2
  %575 = select i1 %574, i8 64, i8 48
  %576 = load i64, i64* %486, align 8
  %577 = add i64 %576, 10
  %578 = inttoptr i64 %577 to i8*
  %579 = load i8, i8* %578, align 1
  %580 = and i8 %579, 3
  %581 = or i8 %575, %580
  store i8 %581, i8* %578, align 1
  br label %582

582:                                              ; preds = %564, %567, %514, %505, %484, %377, %386, %400, %409, %440, %442, %293, %302, %316, %325, %356, %358
  %583 = phi i64* [ %295, %358 ], [ %295, %356 ], [ %295, %325 ], [ %295, %316 ], [ %295, %302 ], [ %295, %293 ], [ %378, %442 ], [ %378, %440 ], [ %378, %409 ], [ %378, %400 ], [ %378, %386 ], [ %378, %377 ], [ %486, %484 ], [ %486, %505 ], [ %486, %514 ], [ %486, %567 ], [ %486, %564 ]
  %584 = phi i64* [ %374, %358 ], [ %357, %356 ], [ null, %325 ], [ null, %316 ], [ null, %302 ], [ null, %293 ], [ %458, %442 ], [ %441, %440 ], [ null, %409 ], [ null, %400 ], [ null, %386 ], [ null, %377 ], [ null, %484 ], [ null, %505 ], [ null, %514 ], [ %565, %567 ], [ null, %564 ]
  call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %13, i64* %0, i64* %583, i32 0)
  %585 = load i64, i64* %0, align 8
  %586 = and i64 %585, -4294967296
  %587 = add i64 %585, -1
  %588 = inttoptr i64 %587 to i32*
  %589 = load atomic i32, i32* %588 monotonic, align 4
  %590 = zext i32 %589 to i64
  %591 = or i64 %586, %590
  %592 = add i64 %591, 10
  %593 = inttoptr i64 %592 to i8*
  %594 = load i8, i8* %593, align 1
  %595 = lshr i8 %594, 2
  %596 = add nsw i8 %595, -6
  %597 = icmp ult i8 %596, 6
  br i1 %597, label %698, label %598

598:                                              ; preds = %582
  %599 = load atomic i32, i32* %588 monotonic, align 4
  %600 = zext i32 %599 to i64
  %601 = or i64 %586, %600
  %602 = add i64 %601, 10
  %603 = inttoptr i64 %602 to i8*
  %604 = load i8, i8* %603, align 1
  %605 = lshr i8 %604, 2
  %606 = add nsw i8 %605, -17
  %607 = icmp ult i8 %606, 11
  br i1 %607, label %698, label %608

608:                                              ; preds = %598
  %609 = icmp eq i64* %584, null
  br i1 %609, label %643, label %610

610:                                              ; preds = %608
  %611 = load i64, i64* %584, align 8
  %612 = add i64 %585, 7
  %613 = inttoptr i64 %612 to i32*
  %614 = trunc i64 %611 to i32
  store atomic volatile i32 %614, i32* %613 monotonic, align 4
  %615 = and i64 %611, 1
  %616 = icmp eq i64 %615, 0
  br i1 %616, label %628, label %617

617:                                              ; preds = %610
  %618 = and i64 %585, -262144
  %619 = or i64 %618, 8
  %620 = inttoptr i64 %619 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = and i64 %621, 262144
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %628, label %624

624:                                              ; preds = %617
  %625 = or i64 %618, 16
  %626 = inttoptr i64 %625 to %"class.v8::internal::Heap"**
  %627 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %626, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %627, i64 %585, i64 %612, i64 %611) #9
  br label %628

628:                                              ; preds = %624, %617, %610
  %629 = and i64 %611, -262144
  %630 = or i64 %629, 8
  %631 = inttoptr i64 %630 to i64*
  %632 = load i64, i64* %631, align 8
  %633 = and i64 %632, 24
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %643, label %635

635:                                              ; preds = %628
  %636 = and i64 %585, -262144
  %637 = or i64 %636, 8
  %638 = inttoptr i64 %637 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = and i64 %639, 24
  %641 = icmp eq i64 %640, 0
  br i1 %641, label %642, label %643

642:                                              ; preds = %635
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %585, i64 %612, i64 %611) #9
  br label %643

643:                                              ; preds = %642, %635, %628, %608
  %644 = load i64, i64* %0, align 8
  %645 = and i64 %644, -4294967296
  %646 = add i64 %644, 7
  %647 = inttoptr i64 %646 to i32*
  %648 = load i32, i32* %647, align 4
  %649 = zext i32 %648 to i64
  %650 = or i64 %645, %649
  %651 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 111
  %652 = load i64, i64* %651, align 8
  %653 = trunc i64 %652 to i32
  %654 = icmp eq i32 %648, %653
  br i1 %654, label %698, label %655

655:                                              ; preds = %643
  %656 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %196, align 8
  %657 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %656, null
  br i1 %657, label %661, label %658

658:                                              ; preds = %655
  %659 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %656, i64 %650) #9
  %660 = load i64, i64* %659, align 8
  br label %674

661:                                              ; preds = %655
  %662 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %663 = load i64*, i64** %662, align 8
  %664 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %665 = load i64*, i64** %664, align 8
  %666 = icmp eq i64* %663, %665
  br i1 %666, label %667, label %669

667:                                              ; preds = %661
  %668 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #9
  br label %669

669:                                              ; preds = %667, %661
  %670 = phi i64* [ %668, %667 ], [ %663, %661 ]
  %671 = ptrtoint i64* %670 to i64
  %672 = add i64 %671, 8
  %673 = inttoptr i64 %672 to i64*
  store i64* %673, i64** %662, align 8
  store i64 %650, i64* %670, align 8
  br label %674

674:                                              ; preds = %658, %669
  %675 = phi i64 [ %660, %658 ], [ %650, %669 ]
  %676 = load i64, i64* %0, align 8
  %677 = add i64 %675, 19
  %678 = inttoptr i64 %677 to i32*
  %679 = load atomic i32, i32* %678 monotonic, align 4
  %680 = and i32 %679, 3
  %681 = icmp eq i32 %680, 2
  br i1 %681, label %698, label %682

682:                                              ; preds = %674
  store atomic volatile i32 2, i32* %678 monotonic, align 4
  %683 = and i64 %676, -4294967296
  %684 = add i64 %676, -1
  %685 = inttoptr i64 %684 to i32*
  %686 = load atomic i32, i32* %685 monotonic, align 4
  %687 = zext i32 %686 to i64
  %688 = or i64 %683, %687
  %689 = add i64 %688, 11
  %690 = inttoptr i64 %689 to i32*
  %691 = load atomic i32, i32* %690 acquire, align 4
  %692 = and i32 %691, 1048576
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %698, label %694

694:                                              ; preds = %682
  %695 = load atomic i32, i32* %685 monotonic, align 4
  %696 = zext i32 %695 to i64
  %697 = or i64 %683, %696
  call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %697) #9
  br label %698

698:                                              ; preds = %643, %674, %682, %694, %598, %582
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %217) #9
  br label %699

699:                                              ; preds = %94, %107, %107, %160, %87, %85, %162, %698, %140, %89
  %700 = phi i16 [ 0, %89 ], [ 0, %85 ], [ %141, %140 ], [ 257, %698 ], [ 0, %162 ], [ 1, %87 ], [ 257, %94 ], [ 1, %160 ], [ 257, %107 ], [ 257, %107 ]
  ret i16 %700
}

declare zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal23CreateElementDictionaryEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 10
  %11 = inttoptr i64 %10 to i8*
  %12 = load i8, i8* %11, align 1
  %13 = lshr i8 %12, 2
  %14 = add nsw i8 %13, -17
  %15 = icmp ult i8 %14, 11
  br i1 %15, label %75, label %16

16:                                               ; preds = %2
  %17 = load atomic i32, i32* %6 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  %20 = add i64 %19, 10
  %21 = inttoptr i64 %20 to i8*
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, -4
  %24 = icmp eq i8 %23, 48
  br i1 %24, label %75, label %25

25:                                               ; preds = %16
  %26 = load atomic i32, i32* %6 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %4, %27
  %29 = add i64 %28, 10
  %30 = inttoptr i64 %29 to i8*
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, -4
  %33 = icmp eq i8 %32, 64
  br i1 %33, label %75, label %34

34:                                               ; preds = %25
  %35 = load atomic i32, i32* %6 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %4, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 1085
  br i1 %41, label %42, label %44

42:                                               ; preds = %34
  %43 = add i64 %3, 11
  br label %51

44:                                               ; preds = %34
  %45 = add i64 %3, 7
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %4, %48
  %50 = add i64 %49, 3
  br label %51

51:                                               ; preds = %44, %42
  %52 = phi i64 [ %43, %42 ], [ %50, %44 ]
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp ult i32 %54, 2
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 111
  br label %75

58:                                               ; preds = %51
  %59 = load atomic i32, i32* %6 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %4, %60
  %62 = add i64 %61, 10
  %63 = inttoptr i64 %62 to i8*
  %64 = load i8, i8* %63, align 1
  %65 = lshr i8 %64, 2
  %66 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %67 = zext i8 %65 to i64
  %68 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %66, i64 %67
  %69 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %68, align 8
  %70 = bitcast %"class.v8::internal::ElementsAccessor"* %69 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*)***
  %71 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*** %70, align 8
  %72 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %71, i64 22
  %73 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*)** %72, align 8
  %74 = tail call i64* %73(%"class.v8::internal::ElementsAccessor"* %69, i64* %1) #9
  br label %75

75:                                               ; preds = %2, %16, %56, %58, %25
  %76 = phi i64* [ null, %25 ], [ %57, %56 ], [ %74, %58 ], [ null, %16 ], [ null, %2 ]
  ret i64* %76
}

declare i64* @_ZN2v88internal6Object11WrapForReadEPNS0_7IsolateENS0_6HandleIS1_EENS0_14RepresentationE(%"class.v8::internal::Isolate"*, i64*, i8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject20DictionaryPropertyAtENS0_6HandleIS1_EENS0_13InternalIndexE(i64*, i64) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = and i64 %3, -4294967296
  %11 = add i64 %3, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = and i64 %14, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %2
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !5
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %29

27:                                               ; preds = %21, %18
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i64* [ %28, %27 ], [ %26, %25 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 115
  %32 = load i64, i64* %31, align 8
  br label %33

33:                                               ; preds = %2, %29
  %34 = phi i64 [ %32, %29 ], [ %15, %2 ]
  %35 = and i64 %34, -4294967296
  %36 = mul i64 %1, 51539607552
  %37 = add i64 %36, 103079215104
  %38 = ashr exact i64 %37, 32
  %39 = add nsw i64 %38, 7
  %40 = add i64 %39, %34
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %35, %43
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %33
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %44) #9
  br label %63

50:                                               ; preds = %33
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #9
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %44, i64* %59, align 8
  br label %63

63:                                               ; preds = %48, %58
  %64 = phi i64* [ %49, %48 ], [ %59, %58 ]
  ret i64* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject21HasEnumerableElementsEv(%"class.v8::internal::JSObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::JSTypedArray", align 8
  %3 = alloca %"class.v8::internal::NumberDictionary", align 8
  %4 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 10
  %13 = inttoptr i64 %12 to i8*
  %14 = load i8, i8* %13, align 1
  %15 = lshr i8 %14, 2
  switch i8 %15, label %172 [
    i8 0, label %16
    i8 2, label %16
    i8 10, label %16
    i8 8, label %16
    i8 6, label %16
    i8 4, label %16
    i8 1, label %38
    i8 11, label %38
    i8 9, label %38
    i8 7, label %38
    i8 3, label %38
    i8 5, label %86
    i8 17, label %130
    i8 18, label %130
    i8 19, label %130
    i8 20, label %130
    i8 21, label %130
    i8 22, label %130
    i8 23, label %130
    i8 24, label %130
    i8 25, label %130
    i8 26, label %130
    i8 27, label %130
    i8 28, label %135
    i8 29, label %135
    i8 30, label %135
    i8 31, label %135
    i8 32, label %135
    i8 33, label %135
    i8 34, label %135
    i8 35, label %135
    i8 36, label %135
    i8 37, label %135
    i8 38, label %135
    i8 12, label %140
    i8 13, label %173
    i8 14, label %173
    i8 15, label %151
    i8 16, label %151
    i8 39, label %171
  ]

16:                                               ; preds = %1, %1, %1, %1, %1, %1
  %17 = load atomic i32, i32* %8 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 1085
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = add i64 %5, 11
  br label %33

26:                                               ; preds = %16
  %27 = add i64 %5, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %6, %30
  %32 = add i64 %31, 3
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i64 [ %25, %24 ], [ %32, %26 ]
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 1
  br label %173

38:                                               ; preds = %1, %1, %1, %1, %1
  %39 = add i64 %5, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %6, %42
  %44 = load atomic i32, i32* %8 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %6, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp eq i16 %49, 1085
  %51 = add i64 %5, 11
  %52 = add i64 %43, 3
  %53 = select i1 %50, i64 %51, i64 %52
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i64 %5, -262144
  %57 = or i64 %56, 16
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = add i64 %59, -41416
  %61 = inttoptr i64 %60 to %"class.v8::internal::Isolate"*
  %62 = icmp sgt i32 %55, 1
  br i1 %62, label %63, label %173

63:                                               ; preds = %38
  %64 = lshr i32 %55, 1
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 0, i32 4
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %43, 7
  %68 = and i64 %66, 4294967295
  %69 = icmp eq i64 %68, 0
  tail call void @llvm.assume(i1 %69) #9
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 0, i32 7, i32 0, i64 5
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  %73 = zext i32 %64 to i64
  br label %76

74:                                               ; preds = %76
  %75 = icmp ult i64 %85, %73
  br i1 %75, label %76, label %173

76:                                               ; preds = %63, %74
  %77 = phi i64 [ 0, %63 ], [ %85, %74 ]
  %78 = trunc i64 %77 to i32
  %79 = shl i32 %78, 2
  %80 = sext i32 %79 to i64
  %81 = add i64 %67, %80
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = icmp eq i32 %83, %72
  %85 = add nuw nsw i64 %77, 1
  br i1 %84, label %74, label %173

86:                                               ; preds = %1
  %87 = load atomic i32, i32* %8 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %6, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = icmp eq i16 %92, 1085
  br i1 %93, label %94, label %96

94:                                               ; preds = %86
  %95 = add i64 %5, 11
  br label %103

96:                                               ; preds = %86
  %97 = add i64 %5, 7
  %98 = inttoptr i64 %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %6, %100
  %102 = add i64 %101, 3
  br label %103

103:                                              ; preds = %96, %94
  %104 = phi i64 [ %95, %94 ], [ %102, %96 ]
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = ashr i32 %106, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %173, label %109

109:                                              ; preds = %103
  %110 = add i64 %5, 7
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %6, %113
  %115 = icmp sgt i32 %106, 1
  br i1 %115, label %116, label %173

116:                                              ; preds = %109
  %117 = sext i32 %107 to i64
  br label %120

118:                                              ; preds = %120
  %119 = icmp slt i64 %129, %117
  br i1 %119, label %120, label %173

120:                                              ; preds = %116, %118
  %121 = phi i64 [ 0, %116 ], [ %129, %118 ]
  %122 = shl i64 %121, 3
  %123 = and i64 %122, 4294967288
  %124 = or i64 %123, 7
  %125 = add i64 %114, %124
  %126 = inttoptr i64 %125 to i64*
  %127 = load i64, i64* %126, align 1
  %128 = icmp eq i64 %127, -2251799814209537
  %129 = add nuw nsw i64 %121, 1
  br i1 %128, label %118, label %173

130:                                              ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %131 = add i64 %5, 31
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132, align 1
  %134 = icmp ne i64 %133, 0
  br label %173

135:                                              ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %136 = bitcast %"class.v8::internal::JSTypedArray"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #9
  %137 = getelementptr inbounds %"class.v8::internal::JSTypedArray", %"class.v8::internal::JSTypedArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %137, align 8
  %138 = call i64 @_ZNK2v88internal12JSTypedArray9GetLengthEv(%"class.v8::internal::JSTypedArray"* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #9
  %139 = icmp ne i64 %138, 0
  br label %173

140:                                              ; preds = %1
  %141 = bitcast %"class.v8::internal::NumberDictionary"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #9
  %142 = add i64 %5, 7
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  %146 = or i64 %6, %145
  %147 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %3, i64 0, i32 0
  %149 = call i32 @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary"* nonnull %148) #9
  %150 = icmp sgt i32 %149, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #9
  br label %173

151:                                              ; preds = %1, %1
  %152 = add i64 %5, 11
  %153 = inttoptr i64 %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %6, %155
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %173, label %161

161:                                              ; preds = %151
  %162 = add i64 %5, 7
  %163 = inttoptr i64 %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i64
  %166 = or i64 %6, %165
  %167 = add i64 %166, 3
  %168 = inttoptr i64 %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = icmp sgt i32 %169, 1
  br label %173

171:                                              ; preds = %1
  br label %173

172:                                              ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

173:                                              ; preds = %118, %120, %74, %76, %109, %38, %151, %1, %1, %103, %171, %161, %140, %135, %130, %33
  %174 = phi i1 [ false, %171 ], [ %170, %161 ], [ %150, %140 ], [ %139, %135 ], [ %134, %130 ], [ %37, %33 ], [ false, %103 ], [ true, %1 ], [ true, %1 ], [ true, %151 ], [ false, %38 ], [ false, %109 ], [ false, %74 ], [ true, %76 ], [ false, %118 ], [ true, %120 ]
  ret i1 %174
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal12JSTypedArray9GetLengthEv(%"class.v8::internal::JSTypedArray"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.v8::internal::JSArrayBuffer", align 8
  %3 = getelementptr inbounds %"class.v8::internal::JSTypedArray", %"class.v8::internal::JSTypedArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 43
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %78

16:                                               ; preds = %1
  %17 = add i64 %4, 51
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %53, label %22

22:                                               ; preds = %16
  %23 = and i32 %19, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = add i64 %10, 11
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 1
  %29 = tail call i64 @_ZNK2v88internal12JSTypedArray12element_sizeEv(%"class.v8::internal::JSTypedArray"* %0) #9
  %30 = udiv i64 %28, %29
  br label %78

31:                                               ; preds = %22
  %32 = bitcast %"class.v8::internal::JSArrayBuffer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  %33 = getelementptr inbounds %"class.v8::internal::JSArrayBuffer", %"class.v8::internal::JSArrayBuffer"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %33, align 8
  %34 = call { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal13JSArrayBuffer15GetBackingStoreEv(%"class.v8::internal::JSArrayBuffer"* nonnull %2) #9
  %35 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %34, 0
  %36 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %34, 1
  %37 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i64, i64* %37 seq_cst, align 8
  %39 = call i64 @_ZNK2v88internal12JSTypedArray12element_sizeEv(%"class.v8::internal::JSTypedArray"* %0) #9
  %40 = udiv i64 %38, %39
  %41 = icmp eq %"class.std::__1::__shared_weak_count"* %36, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %36, i64 0, i32 0, i32 1
  %44 = atomicrmw add i64* %43, i64 -1 acq_rel
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %36, i64 0, i32 0
  %48 = bitcast %"class.std::__1::__shared_weak_count"* %36 to void (%"class.std::__1::__shared_count"*)***
  %49 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, i64 2
  %51 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %50, align 8
  call void %51(%"class.std::__1::__shared_count"* %47) #9
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %36) #9
  br label %52

52:                                               ; preds = %31, %42, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %78

53:                                               ; preds = %16
  %54 = add i64 %4, 31
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 1
  %57 = and i32 %19, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %77, label %59

59:                                               ; preds = %53
  %60 = add i64 %4, 15
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 1
  %63 = tail call i64 @_ZNK2v88internal12JSTypedArray12element_sizeEv(%"class.v8::internal::JSTypedArray"* %0) #9
  %64 = mul i64 %63, %56
  %65 = add i64 %64, %62
  %66 = load i64, i64* %3, align 8
  %67 = and i64 %66, -4294967296
  %68 = add i64 %66, 11
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %67, %71
  %73 = add i64 %72, 11
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 1
  %76 = icmp ugt i64 %65, %75
  br i1 %76, label %78, label %77

77:                                               ; preds = %53, %59
  br label %78

78:                                               ; preds = %1, %77, %59, %52, %25
  %79 = phi i64 [ %30, %25 ], [ %40, %52 ], [ 0, %1 ], [ %56, %77 ], [ 0, %59 ]
  ret i64 %79
}

declare i32 @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject14DefineAccessorENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEES7_NS0_18PropertyAttributesE(i64*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %8 = alloca %"class.v8::internal::LookupIterator", align 8
  %9 = load i64, i64* %0, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = bitcast %"class.v8::internal::LookupIterator::Key"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = ptrtoint i64* %1 to i64
  %18 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %7, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %18, align 8
  %19 = load i64, i64* %1, align 8
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %7, i64 0, i32 1
  %21 = and i64 %19, -4294967296
  %22 = add i64 %19, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp ult i16 %29, 64
  %31 = bitcast %"class.v8::internal::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  br i1 %30, label %32, label %46

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %19, i64* %33, align 8
  %34 = add i64 %19, 3
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, -536870910
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = lshr i32 %36, 2
  %41 = and i32 %40, 16777215
  %42 = zext i32 %41 to i64
  store i64 %42, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %54

43:                                               ; preds = %32
  %44 = and i32 %36, 3
  %45 = icmp eq i32 %44, 2
  br i1 %45, label %46, label %47

46:                                               ; preds = %43, %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %56

47:                                               ; preds = %43
  %48 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %6, i64* %20) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br i1 %48, label %54, label %49

49:                                               ; preds = %47
  %50 = load i64, i64* %1, align 8
  %51 = and i64 %50, -4294967296
  %52 = add i64 %50, -1
  %53 = inttoptr i64 %52 to i32*
  br label %56

54:                                               ; preds = %47, %39
  %55 = bitcast %"class.v8::internal::LookupIterator::Key"* %7 to i64*
  store i64 %17, i64* %55, align 8
  br label %73

56:                                               ; preds = %49, %46
  %57 = phi i32* [ %53, %49 ], [ %23, %46 ]
  %58 = phi i64 [ %51, %49 ], [ %21, %46 ]
  store i64 -1, i64* %20, align 8
  %59 = load atomic i32, i32* %57 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %58, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = and i16 %64, -32
  %66 = icmp eq i16 %65, 32
  br i1 %66, label %67, label %71

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 5, i32 0, i32 0, i32 0
  %69 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %68, align 8
  %70 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %69, %"class.v8::internal::Isolate"* %15, i64* %1) #9
  br label %71

71:                                               ; preds = %67, %56
  %72 = phi i64* [ %70, %67 ], [ %1, %56 ]
  store i64* %72, i64** %18, align 8
  br label %73

73:                                               ; preds = %54, %71
  %74 = phi i64* [ %1, %54 ], [ %72, %71 ]
  %75 = bitcast %"class.v8::internal::LookupIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %75) #9
  %76 = load i64, i64* %20, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %8, %"class.v8::internal::Isolate"* %15, i64* %0, i64* %74, i64 %76, i64* %0, i32 0) #9
  %77 = call i64* @_ZN2v88internal8JSObject14DefineAccessorEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEES6_NS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* nonnull %8, i64* %2, i64* %3, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %75) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  ret i64* %77
}

declare void @_ZN2v88internal14LookupIterator28TransitionToAccessorPropertyENS0_6HandleINS0_6ObjectEEES4_NS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal8JSObject11SetAccessorENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_12AccessorInfoEEENS0_18PropertyAttributesE(i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = load i64, i64* %0, align 8
  %9 = and i64 %8, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = bitcast %"class.v8::internal::LookupIterator::Key"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = ptrtoint i64* %1 to i64
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %17, align 8
  %18 = load i64, i64* %1, align 8
  %19 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %6, i64 0, i32 1
  %20 = and i64 %18, -4294967296
  %21 = add i64 %18, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = icmp ult i16 %28, 64
  %30 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  br i1 %29, label %31, label %45

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %18, i64* %32, align 8
  %33 = add i64 %18, 3
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, -536870910
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %31
  %39 = lshr i32 %35, 2
  %40 = and i32 %39, 16777215
  %41 = zext i32 %40 to i64
  store i64 %41, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %53

42:                                               ; preds = %31
  %43 = and i32 %35, 3
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %45, label %46

45:                                               ; preds = %42, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %55

46:                                               ; preds = %42
  %47 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %5, i64* %19) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  %49 = load i64, i64* %1, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, -1
  %52 = inttoptr i64 %51 to i32*
  br label %55

53:                                               ; preds = %46, %38
  %54 = bitcast %"class.v8::internal::LookupIterator::Key"* %6 to i64*
  store i64 %16, i64* %54, align 8
  br label %72

55:                                               ; preds = %48, %45
  %56 = phi i32* [ %52, %48 ], [ %22, %45 ]
  %57 = phi i64 [ %50, %48 ], [ %20, %45 ]
  store i64 -1, i64* %19, align 8
  %58 = load atomic i32, i32* %56 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %57, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = and i16 %63, -32
  %65 = icmp eq i16 %64, 32
  br i1 %65, label %66, label %70

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 5, i32 0, i32 0, i32 0
  %68 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %67, align 8
  %69 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %68, %"class.v8::internal::Isolate"* %14, i64* %1) #9
  br label %70

70:                                               ; preds = %66, %55
  %71 = phi i64* [ %69, %66 ], [ %1, %55 ]
  store i64* %71, i64** %17, align 8
  br label %72

72:                                               ; preds = %53, %70
  %73 = phi i64* [ %1, %53 ], [ %71, %70 ]
  %74 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %74) #9
  %75 = load i64, i64* %19, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::Isolate"* %14, i64* %0, i64* %73, i64 %75, i64* %0, i32 0) #9
  %76 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %98

79:                                               ; preds = %72
  %80 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* nonnull %7) #9
  br i1 %80, label %97, label %81

81:                                               ; preds = %79
  call void @_ZN2v88internal7Isolate23ReportFailedAccessCheckENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %14, i64* %0) #9
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 5
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = trunc i64 %85 to i32
  %87 = trunc i64 %83 to i32
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %81
  %90 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %14) #9
  br label %143

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 5
  %93 = bitcast %"class.v8::internal::Isolate"** %92 to %"class.v8::internal::Factory"**
  %94 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %94, i64 160
  %96 = ptrtoint %"class.v8::internal::Factory"* %95 to i64
  br label %143

97:                                               ; preds = %79
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* nonnull %7) #9
  br label %98

98:                                               ; preds = %97, %72
  %99 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 11
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, -1
  br i1 %101, label %122, label %102

102:                                              ; preds = %98
  %103 = load i64, i64* %0, align 8
  %104 = and i64 %103, -4294967296
  %105 = add i64 %103, -1
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %104, %108
  %110 = add i64 %109, 10
  %111 = inttoptr i64 %110 to i8*
  %112 = load i8, i8* %111, align 1
  %113 = lshr i8 %112, 2
  %114 = add nsw i8 %113, -17
  %115 = icmp ult i8 %114, 11
  br i1 %115, label %116, label %122

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 5
  %118 = bitcast %"class.v8::internal::Isolate"** %117 to %"class.v8::internal::Factory"**
  %119 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %119, i64 160
  %121 = ptrtoint %"class.v8::internal::Factory"* %120 to i64
  br label %143

122:                                              ; preds = %98, %102
  %123 = call i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %7)
  %124 = trunc i64 %123 to i8
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %127, !prof !6

126:                                              ; preds = %122
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i64 0, i64 0)) #14
  unreachable

127:                                              ; preds = %122
  %128 = load i32, i32* %76, align 4
  %129 = icmp eq i32 %128, 4
  br i1 %129, label %141, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 4, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = and i32 %132, 32
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %141, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 5
  %137 = bitcast %"class.v8::internal::Isolate"** %136 to %"class.v8::internal::Factory"**
  %138 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %138, i64 160
  %140 = ptrtoint %"class.v8::internal::Factory"* %139 to i64
  br label %143

141:                                              ; preds = %127, %130
  call void @_ZN2v88internal14LookupIterator24TransitionToAccessorPairENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %2, i32 %3) #9
  %142 = ptrtoint i64* %0 to i64
  br label %143

143:                                              ; preds = %89, %141, %135, %116, %91
  %144 = phi i64 [ %121, %116 ], [ %142, %141 ], [ %140, %135 ], [ 0, %89 ], [ %96, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %74) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  %145 = inttoptr i64 %144 to i64*
  ret i64* %145
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8JSObject17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::JSObject"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Representation", align 1
  %4 = alloca %"class.v8::internal::GlobalDictionary", align 8
  %5 = alloca %"class.v8::internal::NameDictionary", align 8
  %6 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 11
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2097152
  %18 = icmp eq i32 %17, 0
  %19 = load atomic i32, i32* %10 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %8, %20
  br i1 %18, label %22, label %283

22:                                               ; preds = %2
  %23 = add i64 %21, 23
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %8, %26
  %28 = and i64 %1, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %22
  %31 = and i64 %1, -4294967296
  %32 = add i64 %1, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp eq i16 %39, 66
  br label %41

41:                                               ; preds = %22, %30
  %42 = phi i1 [ %40, %30 ], [ true, %22 ]
  %43 = load atomic i32, i32* %10 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %8, %44
  %46 = add i64 %45, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 acquire, align 4
  %49 = lshr i32 %48, 10
  %50 = and i32 %49, 1023
  %51 = zext i32 %50 to i64
  %52 = icmp eq i32 %50, 0
  br i1 %52, label %261, label %53

53:                                               ; preds = %41
  %54 = trunc i64 %1 to i32
  %55 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %3, i64 0, i32 0
  %56 = add i64 %1, 3
  %57 = inttoptr i64 %56 to double*
  %58 = ashr i32 %54, 1
  %59 = sitofp i32 %58 to double
  br label %60

60:                                               ; preds = %53, %258
  %61 = phi i64 [ 0, %53 ], [ %259, %258 ]
  %62 = mul nuw nsw i64 %61, 51539607552
  %63 = add nuw nsw i64 %62, 68719476736
  %64 = lshr exact i64 %63, 32
  %65 = or i64 %64, 3
  %66 = add i64 %65, %27
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %243

71:                                               ; preds = %60
  %72 = load i64, i64* %6, align 8
  %73 = and i64 %72, -4294967296
  %74 = add i64 %72, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %73, %77
  %79 = add i64 %78, 23
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %73, %82
  %84 = add i64 %83, %65
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = ashr i32 %86, 1
  %88 = lshr i32 %87, 19
  %89 = and i32 %88, 1023
  %90 = lshr i32 %87, 6
  %91 = trunc i32 %90 to i8
  %92 = and i8 %91, 7
  %93 = add i64 %78, 3
  %94 = inttoptr i64 %93 to i8*
  %95 = load atomic i8, i8* %94 monotonic, align 1
  %96 = zext i8 %95 to i32
  %97 = add i64 %78, 4
  %98 = inttoptr i64 %97 to i8*
  %99 = load atomic i8, i8* %98 monotonic, align 1
  %100 = zext i8 %99 to i32
  %101 = sub nsw i32 %96, %100
  %102 = icmp slt i32 %89, %101
  br i1 %102, label %103, label %111

103:                                              ; preds = %71
  %104 = load atomic i8, i8* %98 monotonic, align 1
  %105 = zext i8 %104 to i64
  %106 = shl nuw nsw i64 %105, 28
  %107 = load atomic i8, i8* %98 monotonic, align 1
  %108 = zext i8 %107 to i32
  %109 = add nuw nsw i32 %89, %108
  %110 = shl nuw nsw i32 %109, 2
  br label %115

111:                                              ; preds = %71
  %112 = sub nsw i32 %89, %101
  %113 = shl nsw i32 %112, 2
  %114 = add nsw i32 %113, 8
  br label %115

115:                                              ; preds = %111, %103
  %116 = phi i32 [ %110, %103 ], [ %114, %111 ]
  %117 = phi i64 [ %106, %103 ], [ 536870912, %111 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55) #9
  store i8 %92, i8* %55, align 1
  %118 = icmp ult i8 %92, 5
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %3) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* %120) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

121:                                              ; preds = %115
  %122 = zext i8 %92 to i64
  %123 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal8JSObject17SlowReverseLookupENS0_6ObjectE, i64 0, i64 %122
  %124 = load i64, i64* %123, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55) #9
  %125 = zext i1 %102 to i64
  %126 = shl nuw nsw i64 %125, 13
  %127 = sext i32 %116 to i64
  %128 = sext i32 %101 to i64
  %129 = shl nsw i64 %128, 16
  %130 = or i64 %126, %129
  %131 = or i64 %130, %127
  %132 = or i64 %131, %117
  %133 = and i64 %131, 8192
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %121
  %136 = and i64 %127, 8191
  %137 = add nsw i64 %136, -1
  %138 = add i64 %137, %72
  %139 = inttoptr i64 %138 to i32*
  br label %201

140:                                              ; preds = %121
  %141 = add i64 %72, 3
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %73, %144
  %146 = and i64 %144, 1
  %147 = icmp eq i64 %146, 0
  %148 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %147, label %171, label %149

149:                                              ; preds = %140
  %150 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %148, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %148, i64 0, i32 0, i32 1
  %153 = load i8, i8* %152, align 8, !range !5
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %148, i64 0, i32 1, i64 0
  br label %165

157:                                              ; preds = %151, %149
  %158 = and i64 %72, -262144
  %159 = or i64 %158, 16
  %160 = inttoptr i64 %159 to i64*
  %161 = load i64, i64* %160, align 16
  %162 = add i64 %161, -41416
  %163 = inttoptr i64 %162 to %"class.v8::internal::Isolate"*
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %163, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %165

165:                                              ; preds = %157, %155
  %166 = phi i64* [ %164, %157 ], [ %156, %155 ]
  %167 = getelementptr inbounds i64, i64* %166, i64 29
  %168 = load i64, i64* %167, align 8
  %169 = trunc i64 %168 to i32
  %170 = icmp eq i32 %143, %169
  br i1 %170, label %171, label %191

171:                                              ; preds = %165, %140
  %172 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %148, null
  br i1 %172, label %179, label %173

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %148, i64 0, i32 0, i32 1
  %175 = load i8, i8* %174, align 8, !range !5
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %179, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %148, i64 0, i32 1, i64 0
  br label %187

179:                                              ; preds = %173, %171
  %180 = and i64 %72, -262144
  %181 = or i64 %180, 16
  %182 = inttoptr i64 %181 to i64*
  %183 = load i64, i64* %182, align 16
  %184 = add i64 %183, -41416
  %185 = inttoptr i64 %184 to %"class.v8::internal::Isolate"*
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %185, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %187

187:                                              ; preds = %179, %177
  %188 = phi i64* [ %186, %179 ], [ %178, %177 ]
  %189 = getelementptr inbounds i64, i64* %188, i64 106
  %190 = load i64, i64* %189, align 8
  br label %191

191:                                              ; preds = %187, %165
  %192 = phi i64 [ %190, %187 ], [ %145, %165 ]
  %193 = lshr i64 %132, 26
  %194 = and i64 %193, 124
  %195 = and i64 %127, 8188
  %196 = add nuw nsw i64 %195, 7
  %197 = sub nsw i64 %196, %194
  %198 = add i64 %197, %192
  %199 = inttoptr i64 %198 to i32*
  %200 = load atomic i32, i32* %199 monotonic, align 4
  br label %201

201:                                              ; preds = %135, %191
  %202 = phi i32* [ %139, %135 ], [ %199, %191 ]
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i64
  %205 = or i64 %73, %204
  %206 = and i64 %127, 49152
  %207 = or i64 %124, %206
  %208 = icmp eq i64 %207, 16384
  br i1 %208, label %209, label %234

209:                                              ; preds = %201
  br i1 %42, label %210, label %258

210:                                              ; preds = %209
  %211 = and i64 %204, 1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %210
  %214 = ashr i32 %203, 1
  %215 = sitofp i32 %214 to double
  br label %220

216:                                              ; preds = %210
  %217 = add i64 %205, 3
  %218 = inttoptr i64 %217 to double*
  %219 = load double, double* %218, align 1
  br label %220

220:                                              ; preds = %213, %216
  %221 = phi double [ %215, %213 ], [ %219, %216 ]
  br i1 %29, label %224, label %222

222:                                              ; preds = %220
  %223 = load double, double* %57, align 1
  br label %224

224:                                              ; preds = %220, %222
  %225 = phi double [ %223, %222 ], [ %59, %220 ]
  %226 = fcmp oeq double %221, %225
  br i1 %226, label %227, label %258

227:                                              ; preds = %224
  %228 = add i64 %64, %27
  %229 = add i64 %228, -1
  %230 = inttoptr i64 %229 to i32*
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = zext i32 %231 to i64
  %233 = or i64 %8, %232
  br label %333

234:                                              ; preds = %201
  %235 = icmp eq i32 %203, %54
  br i1 %235, label %236, label %258

236:                                              ; preds = %234
  %237 = add i64 %64, %27
  %238 = add i64 %237, -1
  %239 = inttoptr i64 %238 to i32*
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = zext i32 %240 to i64
  %242 = or i64 %8, %241
  br label %333

243:                                              ; preds = %60
  %244 = and i32 %68, 2
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %258

246:                                              ; preds = %243
  %247 = add i64 %64, %27
  %248 = add i64 %247, 7
  %249 = inttoptr i64 %248 to i32*
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = icmp eq i32 %250, %54
  br i1 %251, label %252, label %258

252:                                              ; preds = %246
  %253 = add i64 %247, -1
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = zext i32 %255 to i64
  %257 = or i64 %8, %256
  br label %333

258:                                              ; preds = %224, %209, %234, %243, %246
  %259 = add nuw nsw i64 %61, 1
  %260 = icmp eq i64 %259, %51
  br i1 %260, label %261, label %60

261:                                              ; preds = %258, %41
  %262 = load i64, i64* %6, align 8
  %263 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %264 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %263, null
  br i1 %264, label %271, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %263, i64 0, i32 0, i32 1
  %267 = load i8, i8* %266, align 8, !range !5
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %271, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %263, i64 0, i32 1, i64 0
  br label %279

271:                                              ; preds = %265, %261
  %272 = and i64 %262, -262144
  %273 = or i64 %272, 16
  %274 = inttoptr i64 %273 to i64*
  %275 = load i64, i64* %274, align 16
  %276 = add i64 %275, -41416
  %277 = inttoptr i64 %276 to %"class.v8::internal::Isolate"*
  %278 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %277, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %279

279:                                              ; preds = %269, %271
  %280 = phi i64* [ %278, %271 ], [ %270, %269 ]
  %281 = getelementptr inbounds i64, i64* %280, i64 4
  %282 = load i64, i64* %281, align 8
  br label %333

283:                                              ; preds = %2
  %284 = add i64 %21, 7
  %285 = inttoptr i64 %284 to i16*
  %286 = load atomic i16, i16* %285 monotonic, align 2
  %287 = icmp eq i16 %286, 189
  br i1 %287, label %288, label %298

288:                                              ; preds = %283
  %289 = bitcast %"class.v8::internal::GlobalDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289) #9
  %290 = add i64 %7, 3
  %291 = inttoptr i64 %290 to i32*
  %292 = load atomic i32, i32* %291 acquire, align 4
  %293 = zext i32 %292 to i64
  %294 = or i64 %8, %293
  %295 = getelementptr inbounds %"class.v8::internal::GlobalDictionary", %"class.v8::internal::GlobalDictionary"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::GlobalDictionary", %"class.v8::internal::GlobalDictionary"* %4, i64 0, i32 0, i32 0
  %297 = call i64 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::Dictionary.1146"* nonnull %296, i64 %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289) #9
  br label %333

298:                                              ; preds = %283
  %299 = bitcast %"class.v8::internal::NameDictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %299) #9
  %300 = add i64 %7, 3
  %301 = inttoptr i64 %300 to i32*
  %302 = load i32, i32* %301, align 4
  %303 = zext i32 %302 to i64
  %304 = or i64 %8, %303
  %305 = and i64 %303, 1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %328

307:                                              ; preds = %298
  %308 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %309 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %308, null
  br i1 %309, label %316, label %310

310:                                              ; preds = %307
  %311 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %308, i64 0, i32 0, i32 1
  %312 = load i8, i8* %311, align 8, !range !5
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %308, i64 0, i32 1, i64 0
  br label %324

316:                                              ; preds = %310, %307
  %317 = and i64 %7, -262144
  %318 = or i64 %317, 16
  %319 = inttoptr i64 %318 to i64*
  %320 = load i64, i64* %319, align 16
  %321 = add i64 %320, -41416
  %322 = inttoptr i64 %321 to %"class.v8::internal::Isolate"*
  %323 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %322, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %324

324:                                              ; preds = %316, %314
  %325 = phi i64* [ %323, %316 ], [ %315, %314 ]
  %326 = getelementptr inbounds i64, i64* %325, i64 115
  %327 = load i64, i64* %326, align 8
  br label %328

328:                                              ; preds = %298, %324
  %329 = phi i64 [ %327, %324 ], [ %304, %298 ]
  %330 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %329, i64* %330, align 8
  %331 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %5, i64 0, i32 0, i32 0
  %332 = call i64 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::Dictionary.1149"* nonnull %331, i64 %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %299) #9
  br label %333

333:                                              ; preds = %236, %227, %252, %279, %328, %288
  %334 = phi i64 [ %297, %288 ], [ %332, %328 ], [ %282, %279 ], [ %242, %236 ], [ %233, %227 ], [ %257, %252 ]
  ret i64 %334
}

declare i64 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::Dictionary.1146"*, i64) local_unnamed_addr #2

declare i64 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::Dictionary.1149"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject35PrototypeRegistryCompactionCallbackENS0_10HeapObjectEii(i64, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = and i64 %0, -4294967296
  %5 = add i64 %0, 35
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = shl i32 %2, 1
  %11 = add i64 %9, 15
  %12 = inttoptr i64 %11 to i32*
  store atomic volatile i32 %10, i32* %12 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject18MakePrototypesFastENS0_6HandleINS0_6ObjectEEENS0_12WhereToStartEPNS0_7IsolateE(i64*, i32, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %109, label %8

8:                                                ; preds = %3
  %9 = and i64 %5, -4294967296
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp ugt i16 %17, 185
  br i1 %18, label %19, label %109

19:                                               ; preds = %8
  %20 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2, i32 0, i32 0
  store i64* %0, i64** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 3
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 4
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 6
  store i32 0, i32* %26, align 8
  %27 = icmp eq i64* %0, null
  br i1 %27, label %28, label %29, !prof !6

28:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #14
  unreachable

29:                                               ; preds = %19
  %30 = icmp eq i32 %1, 1
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #9
  %32 = load i8, i8* %25, align 4, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %108

34:                                               ; preds = %29, %31
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  br label %38

38:                                               ; preds = %34, %105
  %39 = load i64*, i64** %23, align 8
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %108, label %43

43:                                               ; preds = %38
  %44 = and i64 %40, -4294967296
  %45 = add i64 %40, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = icmp ugt i16 %52, 188
  br i1 %53, label %54, label %108

54:                                               ; preds = %43
  %55 = load atomic i32, i32* %46 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %44, %56
  %58 = add i64 %57, 11
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = and i32 %60, 1048576
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %105, label %63

63:                                               ; preds = %54
  %64 = add i64 %57, 35
  %65 = inttoptr i64 %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %44, %67
  %69 = and i64 %67, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %87, label %71

71:                                               ; preds = %63
  %72 = add i64 %68, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %44, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = icmp eq i16 %79, 110
  br i1 %80, label %81, label %87

81:                                               ; preds = %71
  %82 = add i64 %68, 23
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %108

87:                                               ; preds = %81, %63, %71
  %88 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %89 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %88, i64 %57) #9
  br label %103

92:                                               ; preds = %87
  %93 = load i64*, i64** %36, align 8
  %94 = load i64*, i64** %37, align 8
  %95 = icmp eq i64* %93, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #9
  br label %98

98:                                               ; preds = %96, %92
  %99 = phi i64* [ %97, %96 ], [ %93, %92 ]
  %100 = ptrtoint i64* %99 to i64
  %101 = add i64 %100, 8
  %102 = inttoptr i64 %101 to i64*
  store i64* %102, i64** %36, align 8
  store i64 %57, i64* %99, align 8
  br label %103

103:                                              ; preds = %90, %98
  %104 = phi i64* [ %91, %90 ], [ %99, %98 ]
  call void @_ZN2v88internal3Map27SetShouldBeFastPrototypeMapENS0_6HandleIS1_EEbPNS0_7IsolateE(i64* %104, i1 zeroext true, %"class.v8::internal::Isolate"* %2) #9
  call void @_ZN2v88internal8JSObject19OptimizeAsPrototypeENS0_6HandleIS1_EEb(i64* %39, i1 zeroext true)
  br label %105

105:                                              ; preds = %54, %103
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %4)
  %106 = load i8, i8* %25, align 4, !range !5
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %38, label %108

108:                                              ; preds = %43, %38, %105, %81, %31
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #9
  br label %109

109:                                              ; preds = %3, %8, %108
  ret void
}

declare void @_ZN2v88internal3Map27SetShouldBeFastPrototypeMapENS0_6HandleIS1_EEbPNS0_7IsolateE(i64*, i1 zeroext, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject19OptimizeAsPrototypeENS0_6HandleIS1_EEb(i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = and i64 %3, -4294967296
  %11 = add i64 %3, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 189
  br i1 %19, label %354, label %20

20:                                               ; preds = %2
  br i1 %1, label %21, label %89

21:                                               ; preds = %20
  %22 = load atomic i32, i32* %12 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %10, %23
  %25 = add i64 %24, 11
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2097152
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %89

30:                                               ; preds = %21
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %10, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp eq i16 %36, 190
  br i1 %37, label %89, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 11
  %40 = load %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::Bootstrapper"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Bootstrapper", %"class.v8::internal::Bootstrapper"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %89

44:                                               ; preds = %38
  %45 = load atomic i32, i32* %12 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %10, %46
  %48 = add i64 %47, 11
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 acquire, align 4
  %51 = and i32 %50, 1048576
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %84, label %53

53:                                               ; preds = %44
  %54 = load i64, i64* %0, align 8
  %55 = and i64 %54, -4294967296
  %56 = add i64 %54, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = add i64 %60, 35
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %55, %64
  %66 = and i64 %64, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %84, label %68

68:                                               ; preds = %53
  %69 = add i64 %65, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %55, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp eq i16 %76, 110
  br i1 %77, label %78, label %84

78:                                               ; preds = %68
  %79 = add i64 %65, 23
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %53, %68, %44, %78
  tail call void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"* %9, i64* %0, i32 1, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0))
  %85 = load i64, i64* %0, align 8
  %86 = and i64 %85, -4294967296
  %87 = add i64 %85, -1
  %88 = inttoptr i64 %87 to i32*
  br label %89

89:                                               ; preds = %38, %30, %21, %84, %78, %20
  %90 = phi i32* [ %12, %38 ], [ %12, %30 ], [ %12, %21 ], [ %88, %84 ], [ %57, %78 ], [ %12, %20 ]
  %91 = phi i64 [ %10, %38 ], [ %10, %30 ], [ %10, %21 ], [ %86, %84 ], [ %55, %78 ], [ %10, %20 ]
  %92 = load atomic i32, i32* %90 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %91, %93
  %95 = add i64 %94, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 acquire, align 4
  %98 = and i32 %97, 1048576
  %99 = icmp eq i32 %98, 0
  %100 = load i64, i64* %0, align 8
  %101 = and i64 %100, -4294967296
  %102 = add i64 %100, -1
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %101, %105
  br i1 %99, label %141, label %107

107:                                              ; preds = %89
  %108 = add i64 %106, 35
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %101, %111
  %113 = and i64 %111, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %354, label %115

115:                                              ; preds = %107
  %116 = add i64 %112, -1
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %101, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load atomic i16, i16* %122 monotonic, align 2
  %124 = icmp eq i16 %123, 110
  br i1 %124, label %125, label %354

125:                                              ; preds = %115
  %126 = add i64 %112, 23
  %127 = inttoptr i64 %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %354, label %131

131:                                              ; preds = %125
  %132 = load atomic i32, i32* %103 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %101, %133
  %135 = add i64 %134, 11
  %136 = inttoptr i64 %135 to i32*
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2097152
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %354, label %140

140:                                              ; preds = %131
  tail call void @_ZN2v88internal8JSObject17MigrateSlowToFastENS0_6HandleIS1_EEiPKc(i64* %0, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i64 0, i64 0))
  br label %354

141:                                              ; preds = %89
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %143 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %142, align 8
  %144 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %143, i64 %106) #9
  br label %160

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %151 = load i64*, i64** %150, align 8
  %152 = icmp eq i64* %149, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #9
  br label %155

155:                                              ; preds = %153, %147
  %156 = phi i64* [ %154, %153 ], [ %149, %147 ]
  %157 = ptrtoint i64* %156 to i64
  %158 = add i64 %157, 8
  %159 = inttoptr i64 %158 to i64*
  store i64* %159, i64** %148, align 8
  store i64 %106, i64* %156, align 8
  br label %160

160:                                              ; preds = %145, %155
  %161 = phi i64* [ %146, %145 ], [ %156, %155 ]
  %162 = tail call i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %9, i64* %161, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0)) #9
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 11
  %165 = inttoptr i64 %164 to i32*
  %166 = load atomic i32, i32* %165 acquire, align 4
  %167 = or i32 %166, 1048576
  store atomic volatile i32 %167, i32* %165 release, align 4
  %168 = load i64, i64* %162, align 8
  %169 = and i64 %168, -4294967296
  %170 = add i64 %168, 19
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %169, %173
  %175 = and i64 %173, 1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %247, label %177

177:                                              ; preds = %160
  %178 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %179 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %178, null
  %180 = and i64 %168, -262144
  %181 = or i64 %180, 16
  %182 = inttoptr i64 %181 to i64*
  br i1 %179, label %212, label %183

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %178, i64 0, i32 0, i32 1
  %185 = load i8, i8* %184, align 8, !range !5
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %178, i64 0, i32 1, i64 10
  %189 = load i64, i64* %188, align 8
  %190 = trunc i64 %189 to i32
  br label %233

191:                                              ; preds = %183
  %192 = load i64, i64* %182, align 16
  %193 = add i64 %192, -41416
  %194 = inttoptr i64 %193 to %"class.v8::internal::Isolate"*
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %194, i64 0, i32 0, i32 7, i32 0, i64 10
  %196 = load i64, i64* %195, align 8
  %197 = trunc i64 %196 to i32
  br label %198

198:                                              ; preds = %204, %191
  %199 = phi i64 [ %209, %204 ], [ %174, %191 ]
  %200 = add i64 %199, -1
  %201 = inttoptr i64 %200 to i32*
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = icmp eq i32 %202, %197
  br i1 %203, label %204, label %247

204:                                              ; preds = %198
  %205 = add i64 %199, 19
  %206 = inttoptr i64 %205 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i64
  %209 = or i64 %169, %208
  %210 = and i64 %208, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %247, label %198

212:                                              ; preds = %177
  %213 = load i64, i64* %182, align 16
  %214 = add i64 %213, -41416
  %215 = inttoptr i64 %214 to %"class.v8::internal::Isolate"*
  %216 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %215, i64 0, i32 0, i32 7, i32 0, i64 10
  %217 = load i64, i64* %216, align 8
  %218 = trunc i64 %217 to i32
  br label %219

219:                                              ; preds = %225, %212
  %220 = phi i64 [ %230, %225 ], [ %174, %212 ]
  %221 = add i64 %220, -1
  %222 = inttoptr i64 %221 to i32*
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = icmp eq i32 %223, %218
  br i1 %224, label %225, label %247

225:                                              ; preds = %219
  %226 = add i64 %220, 19
  %227 = inttoptr i64 %226 to i32*
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i64
  %230 = or i64 %169, %229
  %231 = and i64 %229, 1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %247, label %219

233:                                              ; preds = %239, %187
  %234 = phi i64 [ %244, %239 ], [ %174, %187 ]
  %235 = add i64 %234, -1
  %236 = inttoptr i64 %235 to i32*
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = icmp eq i32 %237, %190
  br i1 %238, label %239, label %247

239:                                              ; preds = %233
  %240 = add i64 %234, 19
  %241 = inttoptr i64 %240 to i32*
  %242 = load i32, i32* %241, align 4
  %243 = zext i32 %242 to i64
  %244 = or i64 %169, %243
  %245 = and i64 %243, 1
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %233

247:                                              ; preds = %233, %239, %198, %204, %219, %225, %160
  %248 = phi i64 [ %174, %160 ], [ %230, %225 ], [ %220, %219 ], [ %199, %198 ], [ %209, %204 ], [ %234, %233 ], [ %244, %239 ]
  %249 = and i64 %248, 1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %353, label %251

251:                                              ; preds = %247
  %252 = and i64 %248, -4294967296
  %253 = add i64 %248, -1
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = zext i32 %255 to i64
  %257 = or i64 %252, %256
  %258 = add i64 %257, 7
  %259 = inttoptr i64 %258 to i16*
  %260 = load atomic i16, i16* %259 monotonic, align 2
  %261 = add i16 %260, -1059
  %262 = icmp ult i16 %261, 15
  br i1 %262, label %263, label %353

263:                                              ; preds = %251
  %264 = add i64 %248, 11
  %265 = inttoptr i64 %264 to i32*
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = zext i32 %266 to i64
  %268 = or i64 %252, %267
  %269 = add i64 %268, 3
  %270 = inttoptr i64 %269 to i32*
  %271 = load atomic i32, i32* %270 acquire, align 4
  %272 = zext i32 %271 to i64
  %273 = and i64 %272, 1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %286, label %275

275:                                              ; preds = %263
  %276 = or i64 %252, %272
  %277 = add i64 %276, -1
  %278 = inttoptr i64 %277 to i32*
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = zext i32 %279 to i64
  %281 = or i64 %252, %280
  %282 = add i64 %281, 7
  %283 = inttoptr i64 %282 to i16*
  %284 = load atomic i16, i16* %283 monotonic, align 2
  %285 = icmp eq i16 %284, 83
  br i1 %285, label %353, label %286

286:                                              ; preds = %263, %275
  %287 = add i64 %248, 15
  %288 = inttoptr i64 %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = zext i32 %289 to i64
  %291 = or i64 %252, %290
  %292 = add i64 %291, -1
  %293 = inttoptr i64 %292 to i32*
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = zext i32 %294 to i64
  %296 = or i64 %252, %295
  %297 = add i64 %296, 19
  %298 = inttoptr i64 %297 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = zext i32 %299 to i64
  %301 = or i64 %252, %300
  %302 = add i64 %301, 571
  %303 = inttoptr i64 %302 to i32*
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = zext i32 %304 to i64
  %306 = or i64 %252, %305
  %307 = load i64, i64* %162, align 8
  %308 = and i64 %307, -4294967296
  %309 = add i64 %307, 19
  %310 = inttoptr i64 %309 to i32*
  %311 = load i32, i32* %310, align 4
  %312 = zext i32 %311 to i64
  %313 = and i64 %312, 1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %327, label %315

315:                                              ; preds = %286
  %316 = or i64 %308, %312
  %317 = add i64 %316, -1
  %318 = inttoptr i64 %317 to i32*
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = zext i32 %319 to i64
  %321 = or i64 %308, %320
  %322 = add i64 %321, 7
  %323 = inttoptr i64 %322 to i16*
  %324 = load atomic i16, i16* %323 monotonic, align 2
  %325 = icmp eq i16 %324, 172
  br i1 %325, label %326, label %327, !prof !6

326:                                              ; preds = %315
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.93, i64 0, i64 0)) #14
  unreachable

327:                                              ; preds = %286, %315
  store atomic volatile i32 %304, i32* %310 monotonic, align 4
  %328 = and i64 %305, 1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %353, label %330

330:                                              ; preds = %327
  %331 = and i64 %307, -262144
  %332 = or i64 %331, 8
  %333 = inttoptr i64 %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = and i64 %334, 262144
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %341, label %337

337:                                              ; preds = %330
  %338 = or i64 %331, 16
  %339 = inttoptr i64 %338 to %"class.v8::internal::Heap"**
  %340 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %339, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %340, i64 %307, i64 %309, i64 %306) #9
  br label %341

341:                                              ; preds = %337, %330
  %342 = and i64 %306, -262144
  %343 = or i64 %342, 8
  %344 = inttoptr i64 %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = and i64 %345, 24
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %353, label %348

348:                                              ; preds = %341
  %349 = load i64, i64* %333, align 8
  %350 = and i64 %349, 24
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %348
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %307, i64 %309, i64 %306) #9
  br label %353

353:                                              ; preds = %247, %275, %327, %341, %348, %352, %251
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %9, i64* %0, i64* %162, i32 0)
  br label %354

354:                                              ; preds = %125, %107, %115, %353, %140, %131, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::Handle.969", %"class.v8::internal::Handle.969"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 188
  br i1 %21, label %22, label %47

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 6
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %7, align 8
  br label %104

28:                                               ; preds = %1
  %29 = load i64, i64* %4, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 188
  br i1 %39, label %40, label %47

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %41, align 4
  %42 = bitcast %"class.v8::internal::PrototypeIterator"* %0 to %"class.v8::internal::Factory"**
  %43 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %43, i64 176
  %45 = ptrtoint %"class.v8::internal::Factory"* %44 to i64
  %46 = bitcast %"class.v8::internal::Handle.969"* %2 to i64*
  store i64 %45, i64* %46, align 8
  br label %104

47:                                               ; preds = %6, %11, %28
  %48 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %50 = select i1 %5, i64* %49, i64* %4
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, -4294967296
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %52, %61
  %63 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 7, i32 0, i64 6
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %60, %67
  br i1 %68, label %79, label %69

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = add i64 %57, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp ne i16 %76, 190
  %78 = zext i1 %77 to i8
  br label %79

79:                                               ; preds = %73, %69, %47
  %80 = phi i8 [ 1, %47 ], [ 0, %69 ], [ %78, %73 ]
  %81 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %80, i8* %81, align 4
  br i1 %5, label %82, label %83

82:                                               ; preds = %79
  store i64 %62, i64* %49, align 8
  br label %104

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 4
  %85 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %84, align 8
  %86 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %85, i64 %62) #9
  br label %102

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 1
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %91, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %64) #9
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i64* [ %96, %95 ], [ %91, %89 ]
  %99 = ptrtoint i64* %98 to i64
  %100 = add i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  store i64* %101, i64** %90, align 8
  store i64 %62, i64* %98, align 8
  br label %102

102:                                              ; preds = %97, %87
  %103 = phi i64* [ %88, %87 ], [ %98, %97 ]
  store i64* %103, i64** %48, align 8
  br label %104

104:                                              ; preds = %102, %82, %40, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject21ReoptimizeIfPrototypeENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = and i64 %2, -4294967296
  %4 = add i64 %2, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = add i64 %8, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = and i32 %11, 1048576
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %46, label %14

14:                                               ; preds = %1
  %15 = load i64, i64* %0, align 8
  %16 = and i64 %15, -4294967296
  %17 = add i64 %15, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 35
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %16, %25
  %27 = and i64 %25, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %14
  %30 = add i64 %26, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %16, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 110
  br i1 %38, label %39, label %46

39:                                               ; preds = %29
  %40 = add i64 %26, 23
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %39
  tail call void @_ZN2v88internal8JSObject19OptimizeAsPrototypeENS0_6HandleIS1_EEb(i64* %0, i1 zeroext true)
  br label %46

46:                                               ; preds = %39, %1, %14, %29, %45
  ret void
}

declare i64* @_ZN2v88internal3Map24GetOrCreatePrototypeInfoENS0_6HandleIS1_EEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map24GetOrCreatePrototypeInfoENS0_6HandleINS0_8JSObjectEEEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal14PrototypeUsers3AddEPNS0_7IsolateENS0_6HandleINS0_13WeakArrayListEEENS4_INS0_3MapEEEPi(%"class.v8::internal::Isolate"*, i64*, i64*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64) unnamed_addr #0 {
  %2 = trunc i64 %0 to i32
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %136, label %7

4:                                                ; preds = %129
  %5 = trunc i64 %131 to i32
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %136, label %7

7:                                                ; preds = %1, %4
  %8 = phi i64 [ %131, %4 ], [ %0, %1 ]
  %9 = load i8, i8* @_ZN2v88internal26FLAG_trace_prototype_usersE, align 1, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = inttoptr i64 %8 to i8*
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.94, i64 0, i64 0), i8* %12) #9
  br label %13

13:                                               ; preds = %11, %7
  %14 = and i64 %8, -4294967296
  %15 = add i64 %8, 31
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = and i64 %18, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %13
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %14, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 161
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = add i64 %19, 3
  %34 = inttoptr i64 %33 to i32*
  store atomic volatile i32 2, i32* %34 monotonic, align 4
  br label %35

35:                                               ; preds = %32, %22, %13
  %36 = add i64 %8, 35
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %14, %39
  %41 = and i64 %39, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %136, label %43

43:                                               ; preds = %35
  %44 = add i64 %40, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %14, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = icmp eq i16 %51, 110
  br i1 %52, label %53, label %61

53:                                               ; preds = %43
  %54 = add i64 %40, 11
  %55 = inttoptr i64 %54 to i32*
  store atomic volatile i32 0, i32* %55 monotonic, align 4
  %56 = load i32, i32* %37, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %14, %57
  %59 = and i64 %57, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %136, label %61

61:                                               ; preds = %43, %53
  %62 = phi i64 [ %58, %53 ], [ %40, %43 ]
  %63 = add i64 %62, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %14, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp eq i16 %70, 110
  br i1 %71, label %72, label %136

72:                                               ; preds = %61
  %73 = add i64 %62, 7
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %14, %76
  %78 = and i64 %76, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %136, label %80

80:                                               ; preds = %72
  %81 = add i64 %77, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %14, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp eq i16 %88, 184
  br i1 %89, label %90, label %136

90:                                               ; preds = %80
  %91 = add i64 %77, 7
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, 3
  br i1 %94, label %95, label %136

95:                                               ; preds = %90
  %96 = add i64 %77, 11
  br label %97

97:                                               ; preds = %95, %129
  %98 = phi i32 [ %93, %95 ], [ %130, %129 ]
  %99 = phi i64 [ 1, %95 ], [ %132, %129 ]
  %100 = phi i64 [ 0, %95 ], [ %131, %129 ]
  %101 = trunc i64 %99 to i32
  %102 = shl i32 %101, 2
  %103 = sext i32 %102 to i64
  %104 = add i64 %96, %103
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 3
  %110 = icmp ne i32 %106, 3
  %111 = and i1 %110, %109
  br i1 %111, label %112, label %129

112:                                              ; preds = %97
  %113 = and i64 %107, 4294967293
  %114 = or i64 %113, %14
  %115 = add i64 %114, -1
  %116 = inttoptr i64 %115 to i32*
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %14, %118
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i16*
  %122 = load atomic i16, i16* %121 monotonic, align 2
  %123 = icmp eq i16 %122, 172
  br i1 %123, label %124, label %129

124:                                              ; preds = %112
  %125 = trunc i64 %100 to i32
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_133InvalidatePrototypeChainsInternalENS0_3MapE(i64 %114)
  %128 = load i32, i32* %92, align 4
  br label %129

129:                                              ; preds = %97, %124, %127, %112
  %130 = phi i32 [ %128, %127 ], [ %98, %112 ], [ %98, %124 ], [ %98, %97 ]
  %131 = phi i64 [ %100, %127 ], [ %100, %112 ], [ %114, %124 ], [ %100, %97 ]
  %132 = add nuw nsw i64 %99, 1
  %133 = ashr i32 %130, 1
  %134 = sext i32 %133 to i64
  %135 = icmp slt i64 %132, %134
  br i1 %135, label %97, label %4

136:                                              ; preds = %35, %4, %61, %80, %53, %72, %90, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject31InvalidatePrototypeValidityCellENS0_14JSGlobalObjectE(i64) local_unnamed_addr #0 align 2 {
  %2 = and i64 %0, -4294967296
  %3 = add i64 %0, -1
  %4 = inttoptr i64 %3 to i32*
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = zext i32 %5 to i64
  %7 = or i64 %2, %6
  %8 = load i8, i8* @_ZN2v88internal26FLAG_trace_prototype_usersE, align 1, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = inttoptr i64 %7 to i8*
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.94, i64 0, i64 0), i8* %11) #9
  br label %12

12:                                               ; preds = %10, %1
  %13 = add i64 %7, 31
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %2, %16
  %18 = and i64 %16, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %12
  %21 = add i64 %17, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %2, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = icmp eq i16 %28, 161
  br i1 %29, label %30, label %33

30:                                               ; preds = %20
  %31 = add i64 %17, 3
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 2, i32* %32 monotonic, align 4
  br label %33

33:                                               ; preds = %30, %20, %12
  %34 = add i64 %7, 35
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %2, %37
  %39 = and i64 %37, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %33
  %42 = add i64 %38, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %2, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp eq i16 %49, 110
  br i1 %50, label %51, label %54

51:                                               ; preds = %41
  %52 = add i64 %38, 11
  %53 = inttoptr i64 %52 to i32*
  store atomic volatile i32 0, i32* %53 monotonic, align 4
  br label %54

54:                                               ; preds = %33, %41, %51
  ret void
}

declare i64* @_ZN2v88internal3Map21TransitionToPrototypeEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10HeapObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject17SetImmutableProtoENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = and i64 %2, -4294967296
  %4 = add i64 %2, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = and i64 %2, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 4
  %16 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %17 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %1
  %19 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %16, i64 %8) #9
  %20 = load i64, i64* %19, align 8
  br label %34

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %14) #9
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %8, i64* %30, align 8
  br label %34

34:                                               ; preds = %18, %29
  %35 = phi i64 [ %20, %18 ], [ %8, %29 ]
  %36 = phi i64* [ %19, %18 ], [ %30, %29 ]
  %37 = add i64 %35, 10
  %38 = inttoptr i64 %37 to i8*
  %39 = load i8, i8* %38, align 1
  %40 = and i8 %39, 2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %71

42:                                               ; preds = %34
  %43 = load i64, i64* %0, align 8
  %44 = and i64 %43, -262144
  %45 = or i64 %44, 16
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 16
  %48 = add i64 %47, -41416
  %49 = inttoptr i64 %48 to %"class.v8::internal::Isolate"*
  %50 = tail call i64* @_ZN2v88internal3Map26TransitionToImmutableProtoEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %49, i64* %36) #9
  %51 = load i64, i64* %0, align 8
  %52 = load i64, i64* %50, align 8
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = trunc i64 %52 to i32
  store atomic volatile i32 %55, i32* %54 release, align 4
  %56 = icmp eq i32 %55, 0
  %57 = and i64 %52, 1
  %58 = icmp eq i64 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %71, label %60

60:                                               ; preds = %42
  %61 = and i64 %51, -262144
  %62 = or i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 262144
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %60
  %68 = or i64 %61, 16
  %69 = inttoptr i64 %68 to %"class.v8::internal::Heap"**
  %70 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %69, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %70, i64 %51, i64 0, i64 %52) #9
  br label %71

71:                                               ; preds = %34, %67, %60, %42
  ret void
}

declare i64* @_ZN2v88internal3Map26TransitionToImmutableProtoEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EEPNS0_9ArgumentsILNS0_13ArgumentsTypeE1EEEjNS0_18EnsureElementsModeE(i64*, %"class.v8::internal::Arguments"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Arguments", %"class.v8::internal::Arguments"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Arguments", %"class.v8::internal::Arguments"* %1, i64 0, i32 1
  %8 = bitcast i64** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = mul i64 %6, -8
  %11 = add i64 %10, 8
  %12 = add i64 %11, %9
  tail call void @_ZN2v88internal8JSObject24EnsureCanContainElementsINS0_14FullObjectSlotEEEvNS0_6HandleIS1_EET_jNS0_18EnsureElementsModeE(i64* %0, i64 %12, i32 %2, i32 %3)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject24EnsureCanContainElementsINS0_14FullObjectSlotEEEvNS0_6HandleIS1_EET_jNS0_18EnsureElementsModeE(i64*, i64, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 10
  %13 = inttoptr i64 %12 to i8*
  %14 = load i8, i8* %13, align 1
  %15 = lshr i8 %14, 2
  %16 = icmp eq i8 %15, 3
  br i1 %16, label %131, label %17

17:                                               ; preds = %4
  %18 = icmp ult i8 %14, 24
  %19 = and i8 %14, 4
  %20 = icmp ne i8 %19, 0
  %21 = and i1 %18, %20
  %22 = zext i1 %21 to i8
  %23 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %24 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 1, i64 0
  br label %39

31:                                               ; preds = %25, %17
  %32 = and i64 %5, -262144
  %33 = or i64 %32, 16
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = add i64 %35, -41416
  %37 = inttoptr i64 %36 to %"class.v8::internal::Isolate"*
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %39

39:                                               ; preds = %29, %31
  %40 = phi i64* [ %38, %31 ], [ %30, %29 ]
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %131, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds i64, i64* %40, i64 5
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %3, 2
  br i1 %46, label %47, label %95

47:                                               ; preds = %42, %89
  %48 = phi i8 [ %91, %89 ], [ %15, %42 ]
  %49 = phi i8 [ %90, %89 ], [ %22, %42 ]
  %50 = phi i32 [ %92, %89 ], [ 0, %42 ]
  %51 = phi i64 [ %93, %89 ], [ %1, %42 ]
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %54, %45
  br i1 %55, label %78, label %56

56:                                               ; preds = %47
  %57 = and i64 %53, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %89, label %59

59:                                               ; preds = %56
  %60 = and i64 %53, -4294967296
  %61 = add i64 %53, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 66
  br i1 %69, label %73, label %70

70:                                               ; preds = %59
  %71 = and i8 %49, 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %89, label %127

73:                                               ; preds = %59
  %74 = icmp ult i8 %48, 2
  br i1 %74, label %75, label %89

75:                                               ; preds = %73
  %76 = and i8 %49, 1
  %77 = or i8 %76, 4
  br label %89

78:                                               ; preds = %47
  %79 = icmp ult i8 %48, 7
  br i1 %79, label %80, label %89

80:                                               ; preds = %78
  %81 = lshr i8 85, %48
  %82 = and i8 %81, 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = zext i8 %48 to i56
  %86 = shl nuw nsw i56 %85, 3
  %87 = lshr i56 1971445840412929, %86
  %88 = trunc i56 %87 to i8
  br label %89

89:                                               ; preds = %80, %78, %84, %75, %73, %70, %56
  %90 = phi i8 [ %49, %56 ], [ %49, %73 ], [ %49, %75 ], [ %49, %70 ], [ 1, %84 ], [ 1, %80 ], [ 1, %78 ]
  %91 = phi i8 [ %48, %56 ], [ %48, %73 ], [ %77, %75 ], [ 2, %70 ], [ %88, %84 ], [ %48, %80 ], [ %48, %78 ]
  %92 = add nuw i32 %50, 1
  %93 = add i64 %51, 8
  %94 = icmp eq i32 %92, %2
  br i1 %94, label %127, label %47

95:                                               ; preds = %42, %121
  %96 = phi i8 [ %123, %121 ], [ %15, %42 ]
  %97 = phi i8 [ %122, %121 ], [ %22, %42 ]
  %98 = phi i32 [ %124, %121 ], [ 0, %42 ]
  %99 = phi i64 [ %125, %121 ], [ %1, %42 ]
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = trunc i64 %101 to i32
  %103 = icmp eq i32 %102, %45
  br i1 %103, label %104, label %106

104:                                              ; preds = %95
  %105 = icmp ult i8 %96, 7
  br i1 %105, label %112, label %121

106:                                              ; preds = %95
  %107 = and i64 %101, 1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %121, label %109

109:                                              ; preds = %106
  %110 = and i8 %97, 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %121, label %127

112:                                              ; preds = %104
  %113 = lshr i8 85, %96
  %114 = and i8 %113, 1
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %112
  %117 = zext i8 %96 to i56
  %118 = shl nuw nsw i56 %117, 3
  %119 = lshr i56 1971445840412929, %118
  %120 = trunc i56 %119 to i8
  br label %121

121:                                              ; preds = %112, %104, %116, %106, %109
  %122 = phi i8 [ %97, %106 ], [ %97, %109 ], [ 1, %116 ], [ 1, %112 ], [ 1, %104 ]
  %123 = phi i8 [ %96, %106 ], [ 2, %109 ], [ %120, %116 ], [ %96, %112 ], [ %96, %104 ]
  %124 = add nuw i32 %98, 1
  %125 = add i64 %99, 8
  %126 = icmp eq i32 %124, %2
  br i1 %126, label %127, label %95

127:                                              ; preds = %109, %121, %70, %89
  %128 = phi i8 [ 3, %70 ], [ %91, %89 ], [ 3, %109 ], [ %123, %121 ]
  %129 = icmp eq i8 %128, %15
  br i1 %129, label %131, label %130

130:                                              ; preds = %127
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext %128)
  br label %131

131:                                              ; preds = %39, %4, %127, %130
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal8JSObject16ValidateElementsES1_(i64) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject26WouldConvertToSlowElementsEj(%"class.v8::internal::JSObject"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JSObject", align 8
  %4 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 10
  %13 = inttoptr i64 %12 to i8*
  %14 = load i8, i8* %13, align 1
  %15 = icmp ult i8 %14, 24
  br i1 %15, label %16, label %61

16:                                               ; preds = %2
  %17 = add i64 %5, 7
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %6, %20
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = ashr i32 %24, 1
  %26 = bitcast %"class.v8::internal::JSObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %27, align 8
  %28 = icmp ugt i32 %25, %1
  br i1 %28, label %59, label %29

29:                                               ; preds = %16
  %30 = sub i32 %1, %25
  %31 = icmp ugt i32 %30, 1023
  br i1 %31, label %59, label %32

32:                                               ; preds = %29
  %33 = add i32 %1, 1
  %34 = lshr i32 %33, 1
  %35 = add i32 %1, 17
  %36 = add i32 %35, %34
  %37 = icmp ult i32 %36, 501
  br i1 %37, label %59, label %38

38:                                               ; preds = %32
  %39 = icmp ugt i32 %36, 5000
  %40 = and i64 %5, 1
  %41 = icmp eq i64 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = and i64 %5, -262144
  %45 = or i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 24
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %43, %38
  %51 = call i32 @_ZN2v88internal8JSObject20GetFastElementsUsageEv(%"class.v8::internal::JSObject"* nonnull %3) #9
  %52 = ashr i32 %51, 1
  %53 = add nsw i32 %52, %51
  %54 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %53) #9
  %55 = icmp sgt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = mul i32 %56, 9
  %58 = icmp ule i32 %57, %36
  br label %59

59:                                               ; preds = %16, %29, %32, %43, %50
  %60 = phi i1 [ %58, %50 ], [ true, %29 ], [ false, %43 ], [ false, %32 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  br label %61

61:                                               ; preds = %2, %59
  %62 = phi i1 [ %60, %59 ], [ false, %2 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject14AddDataElementENS0_6HandleIS1_EEjNS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64*, i32, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::JSObject", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %6, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #9
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 1085
  br i1 %25, label %26, label %62

26:                                               ; preds = %4
  %27 = and i64 %6, -4294967296
  %28 = add i64 %6, 11
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = and i64 %31, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %26
  %36 = icmp slt i32 %30, 0
  br i1 %36, label %61, label %37, !prof !2

37:                                               ; preds = %35
  %38 = lshr i32 %30, 1
  br label %62

39:                                               ; preds = %26
  %40 = add i64 %32, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %27, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = icmp eq i16 %47, 66
  br i1 %48, label %49, label %61, !prof !3

49:                                               ; preds = %39
  %50 = add i64 %32, 3
  %51 = inttoptr i64 %50 to double*
  %52 = load double, double* %51, align 1
  %53 = fadd double %52, 0x4330000000000000
  %54 = bitcast double %53 to i64
  %55 = and i64 %54, -4294967296
  %56 = icmp eq i64 %55, 4841369599423283200
  br i1 %56, label %57, label %61, !prof !3

57:                                               ; preds = %49
  %58 = trunc i64 %54 to i32
  %59 = uitofp i32 %58 to double
  %60 = fcmp oeq double %52, %59
  br i1 %60, label %62, label %61, !prof !4

61:                                               ; preds = %49, %39, %35, %57
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.60, i64 0, i64 0)) #14
  unreachable

62:                                               ; preds = %37, %57, %4
  %63 = phi i32 [ %58, %57 ], [ 0, %4 ], [ %38, %37 ]
  %64 = load atomic i32, i32* %16 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %14, %65
  %67 = add i64 %66, 10
  %68 = inttoptr i64 %67 to i8*
  %69 = load i8, i8* %68, align 1
  %70 = lshr i8 %69, 2
  %71 = add i64 %6, 7
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %14, %74
  %76 = add nsw i8 %70, -13
  %77 = icmp ult i8 %76, 2
  br i1 %77, label %78, label %84

78:                                               ; preds = %62
  %79 = add i64 %75, 11
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %14, %82
  br label %88

84:                                               ; preds = %62
  %85 = add nsw i8 %70, -15
  %86 = icmp ult i8 %85, 2
  %87 = select i1 %86, i8 16, i8 12
  br label %88

88:                                               ; preds = %84, %78
  %89 = phi i64 [ %83, %78 ], [ %75, %84 ]
  %90 = phi i8 [ 14, %78 ], [ %87, %84 ]
  %91 = icmp eq i32 %3, 0
  br i1 %91, label %92, label %326

92:                                               ; preds = %88
  %93 = add i64 %89, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %14, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = icmp eq i16 %100, 124
  br i1 %101, label %102, label %284

102:                                              ; preds = %92
  %103 = add i64 %89, 19
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 3
  %107 = icmp eq i32 %106, 2
  %108 = icmp ugt i32 %1, 1073741822
  %109 = or i1 %108, %107
  br i1 %109, label %326, label %110

110:                                              ; preds = %102
  %111 = and i64 %6, -4294967296
  %112 = load atomic i32, i32* %16 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %111, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = icmp eq i16 %117, 1085
  br i1 %118, label %119, label %127

119:                                              ; preds = %110
  %120 = add i64 %6, 11
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %326

125:                                              ; preds = %119
  %126 = ashr i32 %122, 1
  br label %143

127:                                              ; preds = %110
  %128 = load atomic i32, i32* %16 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %111, %129
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = icmp eq i16 %133, 1055
  br i1 %134, label %326, label %135

135:                                              ; preds = %127
  %136 = load atomic i32, i32* %104 monotonic, align 4
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = ashr i32 %136, 1
  %140 = lshr i32 %139, 1
  %141 = add nuw i32 %140, 1
  %142 = select i1 %138, i32 %141, i32 1
  br label %143

143:                                              ; preds = %125, %135
  %144 = phi i32 [ %142, %135 ], [ %126, %125 ]
  %145 = add nuw nsw i32 %1, 1
  %146 = icmp ult i32 %145, %144
  %147 = select i1 %146, i32 %144, i32 %145
  %148 = add i64 %89, 15
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = ashr i32 %150, 1
  %152 = mul i32 %151, 6
  %153 = icmp ult i32 %152, %147
  br i1 %153, label %326, label %154

154:                                              ; preds = %143
  %155 = load atomic i32, i32* %16 monotonic, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %111, %156
  %158 = add i64 %157, 7
  %159 = inttoptr i64 %158 to i16*
  %160 = load atomic i16, i16* %159 monotonic, align 2
  switch i16 %160, label %326 [
    i16 1085, label %161
    i16 1041, label %161
    i16 1055, label %161
  ]

161:                                              ; preds = %154, %154, %154
  %162 = load atomic i32, i32* %16 monotonic, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %111, %163
  %165 = add i64 %164, 10
  %166 = inttoptr i64 %165 to i8*
  %167 = load i8, i8* %166, align 1
  %168 = lshr i8 %167, 2
  %169 = add nsw i8 %168, -13
  %170 = icmp ult i8 %169, 2
  br i1 %170, label %326, label %171

171:                                              ; preds = %161
  %172 = load atomic i32, i32* %16 monotonic, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %111, %173
  %175 = add i64 %174, 10
  %176 = inttoptr i64 %175 to i8*
  %177 = load i8, i8* %176, align 1
  %178 = lshr i8 %177, 2
  %179 = add nsw i8 %178, -15
  %180 = icmp ult i8 %179, 2
  br i1 %180, label %326, label %181

181:                                              ; preds = %171
  %182 = or i64 %111, %74
  %183 = add i64 %182, 15
  %184 = inttoptr i64 %183 to i32*
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = ashr i32 %185, 1
  %187 = sext i32 %186 to i64
  %188 = icmp eq i32 %186, 0
  br i1 %188, label %326, label %189

189:                                              ; preds = %181
  %190 = add i64 %182, 7
  %191 = load i8, i8* @_ZN2v88internal24FLAG_unbox_double_arraysE, align 1
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %237

193:                                              ; preds = %189, %234
  %194 = phi i64 [ %235, %234 ], [ 0, %189 ]
  %195 = mul i64 %194, 51539607552
  %196 = add i64 %195, 68719476736
  %197 = ashr exact i64 %196, 32
  %198 = add i64 %197, %190
  %199 = inttoptr i64 %198 to i32*
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = zext i32 %200 to i64
  %202 = and i64 %201, 1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %215, label %204

204:                                              ; preds = %193
  %205 = or i64 %111, %201
  %206 = add i64 %205, -1
  %207 = inttoptr i64 %206 to i32*
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = zext i32 %208 to i64
  %210 = or i64 %111, %209
  %211 = add i64 %210, 7
  %212 = inttoptr i64 %211 to i16*
  %213 = load atomic i16, i16* %212 monotonic, align 2
  %214 = icmp eq i16 %213, 66
  br i1 %214, label %215, label %234

215:                                              ; preds = %204, %193
  %216 = add i64 %195, 85899345920
  %217 = ashr exact i64 %216, 32
  %218 = add i64 %217, %190
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %234, label %223

223:                                              ; preds = %215
  %224 = zext i32 %220 to i64
  %225 = or i64 %111, %224
  %226 = add i64 %225, -1
  %227 = inttoptr i64 %226 to i32*
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = zext i32 %228 to i64
  %230 = or i64 %111, %229
  %231 = add i64 %230, 7
  %232 = inttoptr i64 %231 to i16*
  %233 = load atomic i16, i16* %232 monotonic, align 2
  br label %326

234:                                              ; preds = %215, %204
  %235 = add i64 %194, 1
  %236 = icmp eq i64 %235, %187
  br i1 %236, label %326, label %193

237:                                              ; preds = %189, %280
  %238 = phi i8 [ %281, %280 ], [ 1, %189 ]
  %239 = phi i64 [ %282, %280 ], [ 0, %189 ]
  %240 = mul i64 %239, 51539607552
  %241 = add i64 %240, 68719476736
  %242 = ashr exact i64 %241, 32
  %243 = add i64 %242, %190
  %244 = inttoptr i64 %243 to i32*
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = zext i32 %245 to i64
  %247 = and i64 %246, 1
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %260, label %249

249:                                              ; preds = %237
  %250 = or i64 %111, %246
  %251 = add i64 %250, -1
  %252 = inttoptr i64 %251 to i32*
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = zext i32 %253 to i64
  %255 = or i64 %111, %254
  %256 = add i64 %255, 7
  %257 = inttoptr i64 %256 to i16*
  %258 = load atomic i16, i16* %257 monotonic, align 2
  %259 = icmp eq i16 %258, 66
  br i1 %259, label %260, label %280

260:                                              ; preds = %249, %237
  %261 = add i64 %240, 85899345920
  %262 = ashr exact i64 %261, 32
  %263 = add i64 %262, %190
  %264 = inttoptr i64 %263 to i32*
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = zext i32 %265 to i64
  %267 = and i64 %266, 1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %280, label %269

269:                                              ; preds = %260
  %270 = or i64 %111, %266
  %271 = add i64 %270, -1
  %272 = inttoptr i64 %271 to i32*
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = zext i32 %273 to i64
  %275 = or i64 %111, %274
  %276 = add i64 %275, 7
  %277 = inttoptr i64 %276 to i16*
  %278 = load atomic i16, i16* %277 monotonic, align 2
  %279 = icmp eq i16 %278, 66
  br i1 %279, label %280, label %326

280:                                              ; preds = %269, %260, %249
  %281 = phi i8 [ %238, %249 ], [ %238, %260 ], [ 5, %269 ]
  %282 = add i64 %239, 1
  %283 = icmp eq i64 %282, %187
  br i1 %283, label %326, label %237

284:                                              ; preds = %92
  %285 = add i64 %89, 3
  %286 = inttoptr i64 %285 to i32*
  %287 = load i32, i32* %286, align 4
  %288 = ashr i32 %287, 1
  %289 = bitcast %"class.v8::internal::JSObject"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289)
  %290 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %290, align 8
  %291 = icmp ugt i32 %288, %1
  br i1 %291, label %313, label %292

292:                                              ; preds = %284
  %293 = sub i32 %1, %288
  %294 = icmp ugt i32 %293, 1023
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289)
  br label %324

296:                                              ; preds = %292
  %297 = add i32 %1, 1
  %298 = lshr i32 %297, 1
  %299 = add i32 %1, 17
  %300 = add i32 %299, %298
  %301 = icmp ult i32 %300, 501
  br i1 %301, label %313, label %302

302:                                              ; preds = %296
  %303 = icmp ugt i32 %300, 5000
  %304 = and i64 %6, 1
  %305 = icmp eq i64 %304, 0
  %306 = or i1 %303, %305
  br i1 %306, label %315, label %307

307:                                              ; preds = %302
  %308 = or i64 %7, 8
  %309 = inttoptr i64 %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = and i64 %310, 24
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %315, label %313

313:                                              ; preds = %307, %296, %284
  %314 = phi i32 [ %288, %284 ], [ %300, %307 ], [ %300, %296 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289)
  br label %326

315:                                              ; preds = %302, %307
  %316 = call i32 @_ZN2v88internal8JSObject20GetFastElementsUsageEv(%"class.v8::internal::JSObject"* nonnull %5) #9
  %317 = ashr i32 %316, 1
  %318 = add nsw i32 %317, %316
  %319 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %318) #9
  %320 = icmp sgt i32 %319, 4
  %321 = select i1 %320, i32 %319, i32 4
  %322 = mul i32 %321, 9
  %323 = icmp ugt i32 %322, %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289)
  br i1 %323, label %326, label %324

324:                                              ; preds = %315, %295
  %325 = phi i32 [ 0, %295 ], [ %300, %315 ]
  br label %326

326:                                              ; preds = %280, %269, %234, %143, %315, %119, %127, %102, %324, %313, %223, %181, %171, %161, %154, %88
  %327 = phi i32 [ %147, %143 ], [ 0, %88 ], [ %147, %154 ], [ %147, %161 ], [ %147, %171 ], [ %147, %181 ], [ %147, %223 ], [ %325, %324 ], [ %300, %315 ], [ %314, %313 ], [ 0, %102 ], [ 0, %127 ], [ 0, %119 ], [ %147, %234 ], [ %147, %269 ], [ %147, %280 ]
  %328 = phi i8 [ %90, %143 ], [ %90, %88 ], [ 3, %154 ], [ 13, %161 ], [ 15, %171 ], [ 1, %181 ], [ 3, %223 ], [ %90, %324 ], [ %70, %315 ], [ %70, %313 ], [ %90, %102 ], [ %90, %127 ], [ %90, %119 ], [ 1, %234 ], [ %281, %280 ], [ 3, %269 ]
  %329 = load i64, i64* %2, align 8
  %330 = load i64, i64* %13, align 8
  %331 = and i64 %329, 1
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %346, label %333

333:                                              ; preds = %326
  %334 = add i64 %329, -1
  %335 = inttoptr i64 %334 to i32*
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i64 %330, 4294967295
  %338 = icmp eq i64 %337, 0
  tail call void @llvm.assume(i1 %338) #9
  %339 = zext i32 %336 to i64
  %340 = or i64 %330, %339
  %341 = add i64 %340, 7
  %342 = inttoptr i64 %341 to i16*
  %343 = load atomic i16, i16* %342 monotonic, align 2
  %344 = icmp eq i16 %343, 66
  %345 = select i1 %344, i8 4, i8 2
  br label %346

346:                                              ; preds = %326, %333
  %347 = phi i8 [ %345, %333 ], [ 0, %326 ]
  %348 = and i8 %328, 1
  %349 = icmp ne i8 %348, 0
  %350 = icmp ult i8 %328, 6
  %351 = and i1 %350, %349
  br i1 %351, label %367, label %352

352:                                              ; preds = %346
  %353 = load i64, i64* %0, align 8
  %354 = add i64 %353, -1
  %355 = inttoptr i64 %354 to i32*
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i64 %330, 4294967295
  %358 = icmp eq i64 %357, 0
  tail call void @llvm.assume(i1 %358) #9
  %359 = zext i32 %356 to i64
  %360 = or i64 %330, %359
  %361 = add i64 %360, 7
  %362 = inttoptr i64 %361 to i16*
  %363 = load atomic i16, i16* %362 monotonic, align 2
  %364 = icmp ne i16 %363, 1085
  %365 = icmp ult i32 %63, %1
  %366 = or i1 %365, %364
  br i1 %366, label %367, label %377

367:                                              ; preds = %352, %346
  switch i8 %347, label %370 [
    i8 0, label %371
    i8 4, label %368
    i8 2, label %369
  ]

368:                                              ; preds = %367
  br label %371

369:                                              ; preds = %367
  br label %371

370:                                              ; preds = %367
  br label %371

371:                                              ; preds = %367, %368, %369, %370
  %372 = phi i8 [ 5, %368 ], [ 3, %369 ], [ %347, %370 ], [ 1, %367 ]
  switch i8 %328, label %376 [
    i8 0, label %377
    i8 4, label %373
    i8 2, label %374
    i8 6, label %375
  ]

373:                                              ; preds = %371
  br label %377

374:                                              ; preds = %371
  br label %377

375:                                              ; preds = %371
  br label %377

376:                                              ; preds = %371
  br label %377

377:                                              ; preds = %352, %376, %375, %374, %373, %371
  %378 = phi i8 [ %372, %371 ], [ %372, %373 ], [ %372, %374 ], [ %372, %375 ], [ %372, %376 ], [ %347, %352 ]
  %379 = phi i8 [ 1, %371 ], [ 5, %373 ], [ 3, %374 ], [ 7, %375 ], [ %328, %376 ], [ %328, %352 ]
  %380 = tail call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %379, i8 zeroext %378) #9
  %381 = select i1 %380, i8 %378, i8 %379
  %382 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %383 = zext i8 %381 to i64
  %384 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %382, i64 %383
  %385 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %384, align 8
  %386 = bitcast %"class.v8::internal::ElementsAccessor"* %385 to i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32, i64*, i32, i32)***
  %387 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32, i64*, i32, i32)**, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32, i64*, i32, i32)*** %386, align 8
  %388 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32, i64*, i32, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32, i64*, i32, i32)** %387, i64 17
  %389 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32, i64*, i32, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32, i64*, i32, i32)** %388, align 8
  %390 = tail call i16 %389(%"class.v8::internal::ElementsAccessor"* %385, i64* %0, i32 %1, i64* %2, i32 %3, i32 %327) #9
  %391 = trunc i16 %390 to i8
  %392 = icmp eq i8 %391, 0
  br i1 %392, label %475, label %393

393:                                              ; preds = %377
  %394 = load i64, i64* %0, align 8
  %395 = load i64, i64* %13, align 8
  %396 = add i64 %394, -1
  %397 = inttoptr i64 %396 to i32*
  %398 = load atomic i32, i32* %397 monotonic, align 4
  %399 = and i64 %395, 4294967295
  %400 = icmp eq i64 %399, 0
  tail call void @llvm.assume(i1 %400) #9
  %401 = zext i32 %398 to i64
  %402 = or i64 %395, %401
  %403 = add i64 %402, 7
  %404 = inttoptr i64 %403 to i16*
  %405 = load atomic i16, i16* %404 monotonic, align 2
  %406 = icmp ne i16 %405, 1085
  %407 = icmp ugt i32 %63, %1
  %408 = or i1 %407, %406
  br i1 %408, label %475, label %409

409:                                              ; preds = %393
  %410 = inttoptr i64 %11 to %"class.v8::internal::FactoryBase"*
  %411 = add i32 %1, 1
  %412 = icmp ult i32 %411, 1073741824
  br i1 %412, label %413, label %437

413:                                              ; preds = %409
  %414 = sext i32 %411 to i64
  %415 = shl nsw i64 %414, 1
  %416 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %410, i64 45608
  %417 = bitcast %"class.v8::internal::FactoryBase"* %416 to %"class.v8::internal::CanonicalHandleScope"**
  %418 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %417, align 8
  %419 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %418, null
  br i1 %419, label %422, label %420

420:                                              ; preds = %413
  %421 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %418, i64 %415) #9
  br label %443

422:                                              ; preds = %413
  %423 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %410, i64 45584
  %424 = bitcast %"class.v8::internal::FactoryBase"* %423 to i64**
  %425 = load i64*, i64** %424, align 8
  %426 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %410, i64 45592
  %427 = bitcast %"class.v8::internal::FactoryBase"* %426 to i64**
  %428 = load i64*, i64** %427, align 8
  %429 = icmp eq i64* %425, %428
  br i1 %429, label %430, label %432

430:                                              ; preds = %422
  %431 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #9
  br label %432

432:                                              ; preds = %430, %422
  %433 = phi i64* [ %431, %430 ], [ %425, %422 ]
  %434 = ptrtoint i64* %433 to i64
  %435 = add i64 %434, 8
  %436 = inttoptr i64 %435 to i64*
  store i64* %436, i64** %424, align 8
  store i64 %415, i64* %433, align 8
  br label %443

437:                                              ; preds = %409
  %438 = uitofp i32 %411 to double
  %439 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %410) #9
  %440 = load i64, i64* %439, align 8
  %441 = add i64 %440, 3
  %442 = inttoptr i64 %441 to double*
  store double %438, double* %442, align 1
  br label %443

443:                                              ; preds = %420, %432, %437
  %444 = phi i64* [ %439, %437 ], [ %421, %420 ], [ %433, %432 ]
  %445 = load i64, i64* %0, align 8
  %446 = load i64, i64* %444, align 8
  %447 = add i64 %445, 11
  %448 = inttoptr i64 %447 to i32*
  %449 = trunc i64 %446 to i32
  store atomic volatile i32 %449, i32* %448 monotonic, align 4
  %450 = and i64 %446, 1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %475, label %452

452:                                              ; preds = %443
  %453 = and i64 %445, -262144
  %454 = or i64 %453, 8
  %455 = inttoptr i64 %454 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = and i64 %456, 262144
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %463, label %459

459:                                              ; preds = %452
  %460 = or i64 %453, 16
  %461 = inttoptr i64 %460 to %"class.v8::internal::Heap"**
  %462 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %461, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %462, i64 %445, i64 %447, i64 %446) #9
  br label %463

463:                                              ; preds = %459, %452
  %464 = and i64 %446, -262144
  %465 = or i64 %464, 8
  %466 = inttoptr i64 %465 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = and i64 %467, 24
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %475, label %470

470:                                              ; preds = %463
  %471 = load i64, i64* %455, align 8
  %472 = and i64 %471, 24
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %474, label %475

474:                                              ; preds = %470
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %445, i64 %447, i64 %446) #9
  br label %475

475:                                              ; preds = %393, %443, %463, %470, %474, %377
  %476 = phi i16 [ 0, %377 ], [ 257, %393 ], [ 257, %474 ], [ 257, %470 ], [ 257, %463 ], [ 257, %443 ]
  ret i16 %476
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8JSObject20GetFastElementsUsageEv(%"class.v8::internal::JSObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %3, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  %15 = add i64 %14, 10
  %16 = inttoptr i64 %15 to i8*
  %17 = load i8, i8* %16, align 1
  %18 = lshr i8 %17, 2
  switch i8 %18, label %125 [
    i8 0, label %19
    i8 4, label %19
    i8 2, label %19
    i8 10, label %19
    i8 8, label %19
    i8 6, label %19
    i8 13, label %37
    i8 1, label %43
    i8 3, label %43
    i8 11, label %43
    i8 9, label %43
    i8 7, label %43
    i8 15, label %43
    i8 5, label %89
    i8 14, label %124
    i8 16, label %124
    i8 12, label %124
    i8 39, label %124
    i8 17, label %124
    i8 18, label %124
    i8 19, label %124
    i8 20, label %124
    i8 21, label %124
    i8 22, label %124
    i8 23, label %124
    i8 24, label %124
    i8 25, label %124
    i8 26, label %124
    i8 27, label %124
    i8 28, label %124
    i8 29, label %124
    i8 30, label %124
    i8 31, label %124
    i8 32, label %124
    i8 33, label %124
    i8 34, label %124
    i8 35, label %124
    i8 36, label %124
    i8 37, label %124
    i8 38, label %124
  ]

19:                                               ; preds = %1, %1, %1, %1, %1, %1
  %20 = load atomic i32, i32* %11 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %4, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 1085
  br i1 %26, label %27, label %32

27:                                               ; preds = %19
  %28 = add i64 %3, 11
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = ashr i32 %30, 1
  br label %125

32:                                               ; preds = %19
  %33 = add i64 %9, 3
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 1
  br label %125

37:                                               ; preds = %1
  %38 = add i64 %9, 11
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %4, %41
  br label %43

43:                                               ; preds = %1, %1, %1, %1, %1, %1, %37
  %44 = phi i64 [ %9, %1 ], [ %9, %1 ], [ %9, %1 ], [ %9, %1 ], [ %9, %1 ], [ %9, %1 ], [ %42, %37 ]
  %45 = and i64 %3, -262144
  %46 = or i64 %45, 16
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = add i64 %48, -41416
  %50 = inttoptr i64 %49 to %"class.v8::internal::Isolate"*
  %51 = load atomic i32, i32* %11 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %4, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = icmp eq i16 %56, 1085
  %58 = add i64 %3, 11
  %59 = add i64 %44, 3
  %60 = select i1 %57, i64 %58, i64 %59
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %125

64:                                               ; preds = %43
  %65 = lshr i32 %62, 1
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 0, i32 4
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %44, 7
  %69 = and i64 %67, 4294967295
  %70 = icmp eq i64 %69, 0
  tail call void @llvm.assume(i1 %70) #9
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 0, i32 7, i32 0, i64 5
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = zext i32 %65 to i64
  br label %75

75:                                               ; preds = %75, %64
  %76 = phi i64 [ 0, %64 ], [ %87, %75 ]
  %77 = phi i32 [ 0, %64 ], [ %86, %75 ]
  %78 = trunc i64 %76 to i32
  %79 = shl i32 %78, 2
  %80 = sext i32 %79 to i64
  %81 = add i64 %68, %80
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = icmp ne i32 %83, %73
  %85 = zext i1 %84 to i32
  %86 = add nuw nsw i32 %77, %85
  %87 = add nuw nsw i64 %76, 1
  %88 = icmp ult i64 %87, %74
  br i1 %88, label %75, label %125

89:                                               ; preds = %1
  %90 = add i64 %9, 3
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = icmp ult i32 %92, 2
  br i1 %93, label %125, label %94

94:                                               ; preds = %89
  %95 = load atomic i32, i32* %11 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %4, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = icmp eq i16 %100, 1085
  %102 = add i64 %3, 11
  %103 = select i1 %101, i64 %102, i64 %90
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 1
  br i1 %106, label %107, label %125

107:                                              ; preds = %94
  %108 = lshr i32 %105, 1
  %109 = zext i32 %108 to i64
  br label %110

110:                                              ; preds = %110, %107
  %111 = phi i64 [ 0, %107 ], [ %122, %110 ]
  %112 = phi i32 [ 0, %107 ], [ %121, %110 ]
  %113 = shl i64 %111, 3
  %114 = and i64 %113, 4294967288
  %115 = or i64 %114, 7
  %116 = add i64 %115, %9
  %117 = inttoptr i64 %116 to i64*
  %118 = load i64, i64* %117, align 1
  %119 = icmp ne i64 %118, -2251799814209537
  %120 = zext i1 %119 to i32
  %121 = add nuw nsw i32 %112, %120
  %122 = add nuw nsw i64 %111, 1
  %123 = icmp ult i64 %122, %109
  br i1 %123, label %110, label %125

124:                                              ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

125:                                              ; preds = %110, %75, %94, %43, %27, %32, %1, %89
  %126 = phi i32 [ 0, %89 ], [ 0, %1 ], [ %31, %27 ], [ %36, %32 ], [ 0, %43 ], [ 0, %94 ], [ %86, %75 ], [ %121, %110 ]
  ret i32 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject20HasRealNamedPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = ptrtoint i64* %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 1
  %18 = and i64 %16, -4294967296
  %19 = add i64 %16, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  %28 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  br i1 %27, label %29, label %43

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %30, align 8
  %31 = add i64 %16, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, -536870910
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = lshr i32 %33, 2
  %38 = and i32 %37, 16777215
  %39 = zext i32 %38 to i64
  store i64 %39, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %51

40:                                               ; preds = %29
  %41 = and i32 %33, 3
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %53

44:                                               ; preds = %40
  %45 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %3, i64* %17) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = load i64, i64* %1, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, -1
  %50 = inttoptr i64 %49 to i32*
  br label %53

51:                                               ; preds = %44, %36
  %52 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i64*
  store i64 %14, i64* %52, align 8
  br label %70

53:                                               ; preds = %46, %43
  %54 = phi i32* [ %50, %46 ], [ %20, %43 ]
  %55 = phi i64 [ %48, %46 ], [ %18, %43 ]
  store i64 -1, i64* %17, align 8
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, -32
  %63 = icmp eq i16 %62, 32
  br i1 %63, label %64, label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %65, align 8
  %67 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %66, %"class.v8::internal::Isolate"* %12, i64* %1) #9
  br label %68

68:                                               ; preds = %64, %53
  %69 = phi i64* [ %67, %64 ], [ %1, %53 ]
  store i64* %69, i64** %15, align 8
  br label %70

70:                                               ; preds = %51, %68
  %71 = phi i64* [ %1, %51 ], [ %69, %68 ]
  %72 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %72) #9
  %73 = load i64, i64* %17, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %12, i64* %0, i64* %71, i64 %73, i64* %0, i32 0) #9
  %74 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %72) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  ret i16 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject22HasRealElementPropertyENS0_6HandleIS1_EEj(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %11) #9
  %12 = zext i32 %1 to i64
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %3, %"class.v8::internal::Isolate"* %10, i64* %0, i64* null, i64 %12, i64* %0, i32 0) #9
  %13 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %11) #9
  ret i16 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal8JSObject28HasRealNamedCallbackPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = ptrtoint i64* %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 1
  %18 = and i64 %16, -4294967296
  %19 = add i64 %16, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  %28 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  br i1 %27, label %29, label %43

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %30, align 8
  %31 = add i64 %16, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, -536870910
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = lshr i32 %33, 2
  %38 = and i32 %37, 16777215
  %39 = zext i32 %38 to i64
  store i64 %39, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %51

40:                                               ; preds = %29
  %41 = and i32 %33, 3
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %53

44:                                               ; preds = %40
  %45 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %3, i64* %17) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = load i64, i64* %1, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, -1
  %50 = inttoptr i64 %49 to i32*
  br label %53

51:                                               ; preds = %44, %36
  %52 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i64*
  store i64 %14, i64* %52, align 8
  br label %70

53:                                               ; preds = %46, %43
  %54 = phi i32* [ %50, %46 ], [ %20, %43 ]
  %55 = phi i64 [ %48, %46 ], [ %18, %43 ]
  store i64 -1, i64* %17, align 8
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, -32
  %63 = icmp eq i16 %62, 32
  br i1 %63, label %64, label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %65, align 8
  %67 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %66, %"class.v8::internal::Isolate"* %12, i64* %1) #9
  br label %68

68:                                               ; preds = %64, %53
  %69 = phi i64* [ %67, %64 ], [ %1, %53 ]
  store i64* %69, i64** %15, align 8
  br label %70

70:                                               ; preds = %51, %68
  %71 = phi i64* [ %1, %51 ], [ %69, %68 ]
  %72 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %72) #9
  %73 = load i64, i64* %17, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %12, i64* %0, i64* %71, i64 %73, i64* %0, i32 0) #9
  %74 = call i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %5)
  %75 = trunc i64 %74 to i8
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %84, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 5
  %81 = zext i1 %80 to i16
  %82 = shl nuw nsw i16 %81, 8
  %83 = or i16 %82, 1
  br label %84

84:                                               ; preds = %70, %77
  %85 = phi i16 [ %83, %77 ], [ 0, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %72) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  ret i16 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8JSObject12IsApiWrapperEv(%"class.v8::internal::JSObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  switch i16 %12, label %13 [
    i16 1056, label %14
    i16 1086, label %14
    i16 1079, label %14
    i16 189, label %14
    i16 190, label %14
    i16 1040, label %14
    i16 1080, label %14
  ]

13:                                               ; preds = %1
  br label %14

14:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %13
  %15 = phi i1 [ true, %1 ], [ false, %13 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %15
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal13JSGlobalProxy10IsDetachedEv(%"class.v8::internal::JSGlobalProxy"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSGlobalProxy", %"class.v8::internal::JSGlobalProxy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i64 %3, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 6
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %6, %15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14JSGlobalObject22InvalidatePropertyCellENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = and i64 %3, -4294967296
  %11 = add i64 %3, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = load i8, i8* @_ZN2v88internal26FLAG_trace_prototype_usersE, align 1, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  %19 = inttoptr i64 %15 to i8*
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.94, i64 0, i64 0), i8* %19) #9
  br label %20

20:                                               ; preds = %18, %2
  %21 = add i64 %15, 31
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %10, %24
  %26 = and i64 %24, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %20
  %29 = add i64 %25, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %10, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp eq i16 %36, 161
  br i1 %37, label %38, label %41

38:                                               ; preds = %28
  %39 = add i64 %25, 3
  %40 = inttoptr i64 %39 to i32*
  store atomic volatile i32 2, i32* %40 monotonic, align 4
  br label %41

41:                                               ; preds = %38, %28, %20
  %42 = add i64 %15, 35
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %10, %45
  %47 = and i64 %45, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %41
  %50 = add i64 %46, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %10, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp eq i16 %57, 110
  br i1 %58, label %59, label %62

59:                                               ; preds = %49
  %60 = add i64 %46, 11
  %61 = inttoptr i64 %60 to i32*
  store atomic volatile i32 0, i32* %61 monotonic, align 4
  br label %62

62:                                               ; preds = %41, %49, %59
  %63 = load i64, i64* %0, align 8
  %64 = and i64 %63, -4294967296
  %65 = add i64 %63, 3
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 acquire, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %64, %68
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %71 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %70, align 8
  %72 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %62
  %74 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %71, i64 %69) #9
  %75 = load i64, i64* %74, align 8
  br label %89

76:                                               ; preds = %62
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %78, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #9
  br label %84

84:                                               ; preds = %82, %76
  %85 = phi i64* [ %83, %82 ], [ %78, %76 ]
  %86 = ptrtoint i64* %85 to i64
  %87 = add i64 %86, 8
  %88 = inttoptr i64 %87 to i64*
  store i64* %88, i64** %77, align 8
  store i64 %69, i64* %85, align 8
  br label %89

89:                                               ; preds = %73, %84
  %90 = phi i64 [ %75, %73 ], [ %69, %84 ]
  %91 = phi i64* [ %74, %73 ], [ %85, %84 ]
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 4
  %93 = load i64, i64* %92, align 8
  %94 = load i64, i64* %1, align 8
  %95 = add i64 %94, 3
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = lshr i32 %97, 2
  %99 = add i64 %90, 15
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = ashr i32 %101, 1
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 4
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 5
  %106 = load i64, i64* %105, align 8
  %107 = add nsw i32 %102, -1
  %108 = and i32 %107, %98
  %109 = shl nuw i32 %108, 2
  %110 = add i32 %109, 20
  %111 = sext i32 %110 to i64
  %112 = add i64 %90, 7
  %113 = add i64 %112, %111
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = trunc i64 %104 to i32
  %117 = icmp eq i32 %115, %116
  br i1 %117, label %208, label %118

118:                                              ; preds = %89
  %119 = trunc i64 %106 to i32
  %120 = trunc i64 %94 to i32
  br label %121

121:                                              ; preds = %133, %118
  %122 = phi i32 [ %115, %118 ], [ %142, %133 ]
  %123 = phi i32 [ %108, %118 ], [ %136, %133 ]
  %124 = phi i32 [ 1, %118 ], [ %134, %133 ]
  %125 = icmp eq i32 %122, %119
  br i1 %125, label %133, label %126

126:                                              ; preds = %121
  %127 = zext i32 %122 to i64
  %128 = or i64 %93, %127
  %129 = add i64 %128, 3
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, %120
  br i1 %132, label %144, label %133

133:                                              ; preds = %126, %121
  %134 = add i32 %124, 1
  %135 = add i32 %124, %123
  %136 = and i32 %135, %107
  %137 = shl i32 %136, 2
  %138 = add i32 %137, 20
  %139 = sext i32 %138 to i64
  %140 = add i64 %112, %139
  %141 = inttoptr i64 %140 to i32*
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = icmp eq i32 %142, %116
  br i1 %143, label %208, label %121

144:                                              ; preds = %126
  %145 = zext i32 %123 to i64
  %146 = and i64 %90, -4294967296
  %147 = shl i32 %123, 2
  %148 = add i32 %147, 20
  %149 = sext i32 %148 to i64
  %150 = add i64 %112, %149
  %151 = inttoptr i64 %150 to i32*
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %146, %153
  %155 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %70, align 8
  %156 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %155, null
  br i1 %156, label %160, label %157

157:                                              ; preds = %144
  %158 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %155, i64 %154) #9
  %159 = load i64, i64* %158, align 8
  br label %173

160:                                              ; preds = %144
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %162 = load i64*, i64** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %162, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %160
  %167 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #9
  br label %168

168:                                              ; preds = %166, %160
  %169 = phi i64* [ %167, %166 ], [ %162, %160 ]
  %170 = ptrtoint i64* %169 to i64
  %171 = add i64 %170, 8
  %172 = inttoptr i64 %171 to i64*
  store i64* %172, i64** %161, align 8
  store i64 %154, i64* %169, align 8
  br label %173

173:                                              ; preds = %157, %168
  %174 = phi i64 [ %159, %157 ], [ %154, %168 ]
  %175 = phi i64* [ %158, %157 ], [ %169, %168 ]
  %176 = and i64 %174, -4294967296
  %177 = add i64 %174, 11
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %176, %180
  %182 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %70, align 8
  %183 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %173
  %185 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %182, i64 %181) #9
  br label %199

186:                                              ; preds = %173
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %188 = load i64*, i64** %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %190 = load i64*, i64** %189, align 8
  %191 = icmp eq i64* %188, %190
  br i1 %191, label %192, label %194

192:                                              ; preds = %186
  %193 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #9
  br label %194

194:                                              ; preds = %192, %186
  %195 = phi i64* [ %193, %192 ], [ %188, %186 ]
  %196 = ptrtoint i64* %195 to i64
  %197 = add i64 %196, 8
  %198 = inttoptr i64 %197 to i64*
  store i64* %198, i64** %187, align 8
  store i64 %181, i64* %195, align 8
  br label %199

199:                                              ; preds = %184, %194
  %200 = phi i64* [ %185, %184 ], [ %195, %194 ]
  %201 = load i64, i64* %175, align 8
  %202 = add i64 %201, 7
  %203 = inttoptr i64 %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = ashr i32 %204, 1
  %206 = and i32 %205, -193
  %207 = tail call i64* @_ZN2v88internal12PropertyCell25InvalidateAndReplaceEntryEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS0_15PropertyDetailsENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %9, i64* %91, i64 %145, i32 %206, i64* %200) #9
  br label %208

208:                                              ; preds = %133, %89, %199
  ret void
}

declare i64* @_ZN2v88internal12PropertyCell25InvalidateAndReplaceEntryEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS0_15PropertyDetailsENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64, i32, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6JSDate3NewENS0_6HandleINS0_10JSFunctionEEENS2_INS0_10JSReceiverEEEd(i64*, i64*, double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef", align 8
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = tail call i64* @_ZN2v88internal8JSObject3NewENS0_6HandleINS0_10JSFunctionEEENS2_INS0_10JSReceiverEEENS2_INS0_14AllocationSiteEEE(i64* %0, i64* %1, i64* null)
  %12 = icmp eq i64* %11, null
  br i1 %12, label %86, label %13

13:                                               ; preds = %3
  %14 = fcmp oge double %2, -8.640000e+15
  %15 = fcmp ole double %2, 8.640000e+15
  %16 = and i1 %14, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = inttoptr i64 %10 to %"class.v8::internal::FactoryBase"*
  br label %70

19:                                               ; preds = %13
  %20 = fcmp uno double %2, 0.000000e+00
  br i1 %20, label %31, label %21

21:                                               ; preds = %19
  %22 = tail call double @llvm.fabs.f64(double %2) #17
  %23 = fcmp ueq double %22, 0x7FF0000000000000
  br i1 %23, label %31, label %24

24:                                               ; preds = %21
  %25 = fcmp oeq double %2, 0.000000e+00
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = fcmp oge double %2, 0.000000e+00
  %28 = tail call double @llvm.floor.f64(double %2) #9
  %29 = tail call double @llvm.ceil.f64(double %2) #9
  %30 = select i1 %27, double %28, double %29
  br label %31

31:                                               ; preds = %26, %24, %21, %19
  %32 = phi double [ %30, %26 ], [ 0.000000e+00, %19 ], [ %2, %21 ], [ 0.000000e+00, %24 ]
  %33 = fadd double %32, 0.000000e+00
  %34 = inttoptr i64 %10 to %"class.v8::internal::FactoryBase"*
  %35 = fcmp ult double %33, 0xC1D0000000000000
  %36 = fcmp ugt double %33, 0x41CFFFFFFF800000
  %37 = or i1 %36, %35
  %38 = bitcast double %33 to i64
  %39 = icmp eq i64 %38, -9223372036854775808
  %40 = or i1 %37, %39
  br i1 %40, label %70, label %41

41:                                               ; preds = %31
  %42 = fptosi double %33 to i32
  %43 = sitofp i32 %42 to double
  %44 = fcmp oeq double %33, %43
  br i1 %44, label %45, label %70

45:                                               ; preds = %41
  %46 = sext i32 %42 to i64
  %47 = shl nsw i64 %46, 1
  %48 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %49 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %34, i64 45608
  %50 = bitcast %"class.v8::internal::FactoryBase"* %49 to %"class.v8::internal::CanonicalHandleScope"**
  %51 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %50, align 8
  %52 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  %54 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %51, i64 %47) #9
  br label %77

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %34, i64 45584
  %57 = bitcast %"class.v8::internal::FactoryBase"* %56 to i64**
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %34, i64 45592
  %60 = bitcast %"class.v8::internal::FactoryBase"* %59 to i64**
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %58, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %55
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #9
  br label %65

65:                                               ; preds = %63, %55
  %66 = phi i64* [ %64, %63 ], [ %58, %55 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %57, align 8
  store i64 %47, i64* %66, align 8
  br label %77

70:                                               ; preds = %17, %41, %31
  %71 = phi %"class.v8::internal::FactoryBase"* [ %18, %17 ], [ %34, %41 ], [ %34, %31 ]
  %72 = phi double [ 0x7FF8000000000000, %17 ], [ %33, %41 ], [ %33, %31 ]
  %73 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %71) #9
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 3
  %76 = inttoptr i64 %75 to double*
  store double %72, double* %76, align 1
  br label %77

77:                                               ; preds = %53, %65, %70
  %78 = phi double [ %72, %70 ], [ %33, %53 ], [ %33, %65 ]
  %79 = phi i64* [ %73, %70 ], [ %54, %53 ], [ %66, %65 ]
  %80 = bitcast %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  %81 = load i64, i64* %11, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef"* %4, i64 0, i32 0
  %84 = load i64, i64* %79, align 8
  %85 = fcmp uno double %78, 0.000000e+00
  call void @_ZN2v88internal6JSDate8SetValueENS0_6ObjectEb(%"class.v8::internal::JSDate"* nonnull %83, i64 %84, i1 zeroext %85)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  br label %86

86:                                               ; preds = %3, %77
  ret i64* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6JSDate8SetValueENS0_6ObjectEb(%"class.v8::internal::JSDate"* nocapture readonly, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::JSDate", %"class.v8::internal::JSDate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = trunc i64 %1 to i32
  store atomic volatile i32 %8, i32* %7 monotonic, align 4
  %9 = load i64, i64* %4, align 8
  %10 = add i64 %9, 11
  %11 = and i64 %1, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %43, label %13

13:                                               ; preds = %3
  %14 = and i64 %9, -262144
  %15 = or i64 %14, 8
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 262144
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %13
  %21 = or i64 %14, 16
  %22 = inttoptr i64 %21 to %"class.v8::internal::Heap"**
  %23 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %22, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %23, i64 %9, i64 %10, i64 %1) #9
  %24 = load i64, i64* %4, align 8
  %25 = add i64 %24, 11
  br label %26

26:                                               ; preds = %20, %13
  %27 = phi i64 [ %25, %20 ], [ %10, %13 ]
  %28 = phi i64 [ %24, %20 ], [ %9, %13 ]
  %29 = and i64 %1, -262144
  %30 = or i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 24
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %26
  %36 = and i64 %28, -262144
  %37 = or i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 24
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %35
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %28, i64 %27, i64 %1) #9
  br label %43

43:                                               ; preds = %3, %26, %35, %42
  %44 = load i64, i64* %4, align 8
  br i1 %2, label %45, label %89

45:                                               ; preds = %43
  %46 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %47 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %46, i64 0, i32 0, i32 1
  %50 = load i8, i8* %49, align 8, !range !5
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %46, i64 0, i32 1, i64 0
  br label %62

54:                                               ; preds = %48, %45
  %55 = and i64 %44, -262144
  %56 = or i64 %55, 16
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 16
  %59 = add i64 %58, -41416
  %60 = inttoptr i64 %59 to %"class.v8::internal::Isolate"*
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %62

62:                                               ; preds = %52, %54
  %63 = phi i64* [ %61, %54 ], [ %53, %52 ]
  %64 = getelementptr inbounds i64, i64* %63, i64 121
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %44, 43
  %67 = inttoptr i64 %66 to i32*
  %68 = trunc i64 %65 to i32
  store atomic volatile i32 %68, i32* %67 monotonic, align 4
  %69 = load i64, i64* %4, align 8
  %70 = add i64 %69, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %68, i32* %71 monotonic, align 4
  %72 = load i64, i64* %4, align 8
  %73 = add i64 %72, 19
  %74 = inttoptr i64 %73 to i32*
  store atomic volatile i32 %68, i32* %74 monotonic, align 4
  %75 = load i64, i64* %4, align 8
  %76 = add i64 %75, 23
  %77 = inttoptr i64 %76 to i32*
  store atomic volatile i32 %68, i32* %77 monotonic, align 4
  %78 = load i64, i64* %4, align 8
  %79 = add i64 %78, 31
  %80 = inttoptr i64 %79 to i32*
  store atomic volatile i32 %68, i32* %80 monotonic, align 4
  %81 = load i64, i64* %4, align 8
  %82 = add i64 %81, 35
  %83 = inttoptr i64 %82 to i32*
  store atomic volatile i32 %68, i32* %83 monotonic, align 4
  %84 = load i64, i64* %4, align 8
  %85 = add i64 %84, 39
  %86 = inttoptr i64 %85 to i32*
  store atomic volatile i32 %68, i32* %86 monotonic, align 4
  %87 = load i64, i64* %4, align 8
  %88 = add i64 %87, 27
  br label %91

89:                                               ; preds = %43
  %90 = add i64 %44, 43
  br label %91

91:                                               ; preds = %89, %62
  %92 = phi i64 [ %90, %89 ], [ %88, %62 ]
  %93 = phi i32 [ -2, %89 ], [ %68, %62 ]
  %94 = inttoptr i64 %92 to i32*
  store atomic volatile i32 %93, i32* %94 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN2v88internal6JSDate16CurrentTimeValueEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN2v88internal30FLAG_log_internal_timer_eventsE, align 1, !range !5
  %3 = icmp eq i8 %2, 0
  %4 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1
  %5 = icmp eq i8 %4, 0
  %6 = or i1 %3, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 21
  %9 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %8, align 8
  tail call void @_ZN2v88internal6Logger16CurrentTimeEventEv(%"class.v8::internal::Logger"* %9) #9
  br label %10

10:                                               ; preds = %1, %7
  %11 = load i8, i8* @_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE, align 1, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %10
  %14 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #9
  %15 = bitcast %"class.v8::Platform"* %14 to double (%"class.v8::Platform"*)***
  %16 = load double (%"class.v8::Platform"*)**, double (%"class.v8::Platform"*)*** %15, align 8
  %17 = getelementptr inbounds double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %16, i64 14
  %18 = load double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %17, align 8
  %19 = tail call double %18(%"class.v8::Platform"* %14) #9
  %20 = tail call double @llvm.floor.f64(double %19)
  br label %21

21:                                               ; preds = %10, %13
  %22 = phi double [ %20, %13 ], [ 4.200000e+00, %10 ]
  ret double %22
}

declare void @_ZN2v88internal6Logger16CurrentTimeEventEv(%"class.v8::internal::Logger"*) local_unnamed_addr #2

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #7

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal6JSDate8GetFieldEPNS0_7IsolateEmm(%"class.v8::internal::Isolate"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %5 = alloca %"class.v8::internal::JSDate", align 8
  %6 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %4, %"class.v8::internal::Isolate"* %0) #9
  %7 = bitcast %"class.v8::internal::JSDate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.v8::internal::JSDate", %"class.v8::internal::JSDate"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = trunc i64 %2 to i32
  %10 = ashr i32 %9, 1
  %11 = call i64 @_ZN2v88internal6JSDate10DoGetFieldEPNS0_7IsolateENS1_10FieldIndexE(%"class.v8::internal::JSDate"* nonnull %5, %"class.v8::internal::Isolate"* %0, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret i64 %11
}

declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal6JSDate10DoGetFieldEPNS0_7IsolateENS1_10FieldIndexE(%"class.v8::internal::JSDate"*, %"class.v8::internal::Isolate"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 45
  %5 = load %"class.v8::internal::DateCache"*, %"class.v8::internal::DateCache"** %4, align 8
  %6 = icmp slt i32 %2, 8
  br i1 %6, label %7, label %104

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::JSDate", %"class.v8::internal::JSDate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 43
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.v8::internal::DateCache", %"class.v8::internal::DateCache"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp ne i32 %12, %15
  %17 = and i32 %12, 1
  %18 = icmp eq i32 %17, 0
  %19 = and i1 %18, %16
  br i1 %19, label %20, label %46

20:                                               ; preds = %7
  %21 = add i64 %9, 11
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = ashr i32 %23, 1
  %29 = sitofp i32 %28 to double
  br label %36

30:                                               ; preds = %20
  %31 = and i64 %9, -4294967296
  %32 = or i64 %31, %24
  %33 = add i64 %32, 3
  %34 = inttoptr i64 %33 to double*
  %35 = load double, double* %34, align 1
  br label %36

36:                                               ; preds = %27, %30
  %37 = phi double [ %29, %27 ], [ %35, %30 ]
  %38 = fptosi double %37 to i64
  %39 = bitcast %"class.v8::internal::DateCache"* %5 to i32 (%"class.v8::internal::DateCache"*, i64, i1)***
  %40 = load i32 (%"class.v8::internal::DateCache"*, i64, i1)**, i32 (%"class.v8::internal::DateCache"*, i64, i1)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.v8::internal::DateCache"*, i64, i1)*, i32 (%"class.v8::internal::DateCache"*, i64, i1)** %40, i64 3
  %42 = load i32 (%"class.v8::internal::DateCache"*, i64, i1)*, i32 (%"class.v8::internal::DateCache"*, i64, i1)** %41, align 8
  %43 = tail call i32 %42(%"class.v8::internal::DateCache"* %5, i64 %38, i1 zeroext true) #9
  %44 = sext i32 %43 to i64
  %45 = add nsw i64 %44, %38
  tail call void @_ZN2v88internal6JSDate15SetCachedFieldsElPNS0_9DateCacheE(%"class.v8::internal::JSDate"* %0, i64 %45, %"class.v8::internal::DateCache"* %5)
  br label %46

46:                                               ; preds = %7, %36
  switch i32 %2, label %103 [
    i32 1, label %47
    i32 2, label %55
    i32 3, label %63
    i32 4, label %71
    i32 5, label %79
    i32 6, label %87
    i32 7, label %95
  ]

47:                                               ; preds = %46
  %48 = load i64, i64* %8, align 8
  %49 = and i64 %48, -4294967296
  %50 = add i64 %48, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  br label %188

55:                                               ; preds = %46
  %56 = load i64, i64* %8, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 19
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  br label %188

63:                                               ; preds = %46
  %64 = load i64, i64* %8, align 8
  %65 = and i64 %64, -4294967296
  %66 = add i64 %64, 23
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  br label %188

71:                                               ; preds = %46
  %72 = load i64, i64* %8, align 8
  %73 = and i64 %72, -4294967296
  %74 = add i64 %72, 27
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %73, %77
  br label %188

79:                                               ; preds = %46
  %80 = load i64, i64* %8, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, 31
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  br label %188

87:                                               ; preds = %46
  %88 = load i64, i64* %8, align 8
  %89 = and i64 %88, -4294967296
  %90 = add i64 %88, 35
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %89, %93
  br label %188

95:                                               ; preds = %46
  %96 = load i64, i64* %8, align 8
  %97 = and i64 %96, -4294967296
  %98 = add i64 %96, 39
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %97, %101
  br label %188

103:                                              ; preds = %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

104:                                              ; preds = %3
  %105 = icmp sgt i32 %2, 10
  %106 = getelementptr inbounds %"class.v8::internal::JSDate", %"class.v8::internal::JSDate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, -4294967296
  %109 = add i64 %107, 11
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %108, %112
  %114 = and i64 %112, 1
  %115 = icmp eq i64 %114, 0
  br i1 %105, label %116, label %127

116:                                              ; preds = %104
  br i1 %115, label %117, label %120

117:                                              ; preds = %116
  %118 = ashr i32 %111, 1
  %119 = sitofp i32 %118 to double
  br label %124

120:                                              ; preds = %116
  %121 = add i64 %113, 3
  %122 = inttoptr i64 %121 to double*
  %123 = load double, double* %122, align 1
  br label %124

124:                                              ; preds = %117, %120
  %125 = phi double [ %119, %117 ], [ %123, %120 ]
  %126 = tail call i64 @_ZN2v88internal6JSDate11GetUTCFieldENS1_10FieldIndexEdPNS0_9DateCacheE(%"class.v8::internal::JSDate"* %0, i32 %2, double %125, %"class.v8::internal::DateCache"* %5)
  br label %188

127:                                              ; preds = %104
  br i1 %115, label %128, label %131

128:                                              ; preds = %127
  %129 = ashr i32 %111, 1
  %130 = sitofp i32 %129 to double
  br label %157

131:                                              ; preds = %127
  %132 = add i64 %113, 3
  %133 = inttoptr i64 %132 to double*
  %134 = load double, double* %133, align 1
  %135 = fcmp uno double %134, 0.000000e+00
  br i1 %135, label %136, label %157

136:                                              ; preds = %131
  %137 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %138 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %137, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %137, i64 0, i32 0, i32 1
  %141 = load i8, i8* %140, align 8, !range !5
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %145, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %137, i64 0, i32 1, i64 0
  br label %153

145:                                              ; preds = %139, %136
  %146 = and i64 %107, -262144
  %147 = or i64 %146, 16
  %148 = inttoptr i64 %147 to i64*
  %149 = load i64, i64* %148, align 16
  %150 = add i64 %149, -41416
  %151 = inttoptr i64 %150 to %"class.v8::internal::Isolate"*
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %151, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %153

153:                                              ; preds = %143, %145
  %154 = phi i64* [ %152, %145 ], [ %144, %143 ]
  %155 = getelementptr inbounds i64, i64* %154, i64 121
  %156 = load i64, i64* %155, align 8
  br label %188

157:                                              ; preds = %128, %131
  %158 = phi double [ %130, %128 ], [ %134, %131 ]
  %159 = fptosi double %158 to i64
  %160 = bitcast %"class.v8::internal::DateCache"* %5 to i32 (%"class.v8::internal::DateCache"*, i64, i1)***
  %161 = load i32 (%"class.v8::internal::DateCache"*, i64, i1)**, i32 (%"class.v8::internal::DateCache"*, i64, i1)*** %160, align 8
  %162 = getelementptr inbounds i32 (%"class.v8::internal::DateCache"*, i64, i1)*, i32 (%"class.v8::internal::DateCache"*, i64, i1)** %161, i64 3
  %163 = load i32 (%"class.v8::internal::DateCache"*, i64, i1)*, i32 (%"class.v8::internal::DateCache"*, i64, i1)** %162, align 8
  %164 = tail call i32 %163(%"class.v8::internal::DateCache"* %5, i64 %159, i1 zeroext true) #9
  %165 = sext i32 %164 to i64
  %166 = add nsw i64 %165, %159
  %167 = icmp slt i64 %166, 0
  %168 = add nsw i64 %166, -86399999
  %169 = select i1 %167, i64 %168, i64 %166
  %170 = sdiv i64 %169, 86400000
  %171 = icmp eq i32 %2, 9
  %172 = shl i64 %170, 32
  br i1 %171, label %173, label %175

173:                                              ; preds = %157
  %174 = ashr exact i64 %172, 31
  br label %188

175:                                              ; preds = %157
  %176 = ashr exact i64 %172, 32
  %177 = mul nsw i64 %176, -86400000
  %178 = add i64 %177, %166
  %179 = icmp eq i32 %2, 8
  br i1 %179, label %180, label %185

180:                                              ; preds = %175
  %181 = trunc i64 %178 to i32
  %182 = srem i32 %181, 1000
  %183 = sext i32 %182 to i64
  %184 = shl nsw i64 %183, 1
  br label %188

185:                                              ; preds = %175
  %186 = shl i64 %178, 32
  %187 = ashr exact i64 %186, 31
  br label %188

188:                                              ; preds = %47, %55, %63, %71, %79, %87, %95, %153, %180, %185, %173, %124
  %189 = phi i64 [ %126, %124 ], [ %156, %153 ], [ %174, %173 ], [ %184, %180 ], [ %187, %185 ], [ %102, %95 ], [ %94, %87 ], [ %86, %79 ], [ %78, %71 ], [ %70, %63 ], [ %62, %55 ], [ %54, %47 ]
  ret i64 %189
}

; Function Attrs: nounwind
declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"*) unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6JSDate15SetCachedFieldsElPNS0_9DateCacheE(%"class.v8::internal::JSDate"*, i64, %"class.v8::internal::DateCache"*) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = icmp slt i64 %1, 0
  %8 = add nsw i64 %1, -86399999
  %9 = select i1 %7, i64 %8, i64 %1
  %10 = sdiv i64 %9, 86400000
  %11 = trunc i64 %10 to i32
  %12 = shl i64 %10, 32
  %13 = ashr exact i64 %12, 32
  %14 = mul nsw i64 %13, -86400000
  %15 = add i64 %14, %1
  %16 = trunc i64 %15 to i32
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #9
  %18 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #9
  %19 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  call void @_ZN2v88internal9DateCache20YearMonthDayFromDaysEiPiS2_S2_(%"class.v8::internal::DateCache"* %2, i32 %11, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6) #9
  %20 = add nsw i32 %11, 4
  %21 = srem i32 %20, 7
  %22 = icmp sgt i32 %21, -1
  %23 = sdiv i32 %16, 3600000
  %24 = sdiv i32 %16, 60000
  %25 = srem i32 %24, 60
  %26 = sdiv i32 %16, 1000
  %27 = srem i32 %26, 60
  %28 = getelementptr inbounds %"class.v8::internal::DateCache", %"class.v8::internal::DateCache"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::JSDate", %"class.v8::internal::JSDate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 43
  %33 = inttoptr i64 %32 to i32*
  %34 = trunc i64 %29 to i32
  store atomic volatile i32 %34, i32* %33 monotonic, align 4
  %35 = load i64, i64* %30, align 8
  %36 = add i64 %35, 43
  %37 = and i64 %29, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %70, label %39

39:                                               ; preds = %3
  %40 = and i64 %35, -262144
  %41 = or i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 262144
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %39
  %47 = or i64 %40, 16
  %48 = inttoptr i64 %47 to %"class.v8::internal::Heap"**
  %49 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %48, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %49, i64 %35, i64 %36, i64 %29) #9
  %50 = load i64, i64* %30, align 8
  %51 = add i64 %50, 43
  br label %52

52:                                               ; preds = %46, %39
  %53 = phi i64 [ %51, %46 ], [ %36, %39 ]
  %54 = phi i64 [ %50, %46 ], [ %35, %39 ]
  %55 = and i64 %29, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 24
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %70, label %61

61:                                               ; preds = %52
  %62 = and i64 %54, -262144
  %63 = or i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 24
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %54, i64 %53, i64 %29) #9
  %69 = load i64, i64* %30, align 8
  br label %70

70:                                               ; preds = %3, %52, %61, %68
  %71 = phi i64 [ %35, %3 ], [ %54, %52 ], [ %54, %61 ], [ %69, %68 ]
  %72 = load i32, i32* %4, align 4
  %73 = shl i32 %72, 1
  %74 = add i64 %71, 15
  %75 = inttoptr i64 %74 to i32*
  store atomic volatile i32 %73, i32* %75 monotonic, align 4
  %76 = load i32, i32* %5, align 4
  %77 = shl i32 %76, 1
  %78 = load i64, i64* %30, align 8
  %79 = add i64 %78, 19
  %80 = inttoptr i64 %79 to i32*
  store atomic volatile i32 %77, i32* %80 monotonic, align 4
  %81 = load i32, i32* %6, align 4
  %82 = shl i32 %81, 1
  %83 = load i64, i64* %30, align 8
  %84 = add i64 %83, 23
  %85 = inttoptr i64 %84 to i32*
  store atomic volatile i32 %82, i32* %85 monotonic, align 4
  %86 = shl nsw i32 %21, 1
  %87 = add nsw i32 %86, 14
  %88 = select i1 %22, i32 %86, i32 %87
  %89 = load i64, i64* %30, align 8
  %90 = add i64 %89, 27
  %91 = inttoptr i64 %90 to i32*
  store atomic volatile i32 %88, i32* %91 monotonic, align 4
  %92 = shl nsw i32 %23, 1
  %93 = load i64, i64* %30, align 8
  %94 = add i64 %93, 31
  %95 = inttoptr i64 %94 to i32*
  store atomic volatile i32 %92, i32* %95 monotonic, align 4
  %96 = shl nsw i32 %25, 1
  %97 = load i64, i64* %30, align 8
  %98 = add i64 %97, 35
  %99 = inttoptr i64 %98 to i32*
  store atomic volatile i32 %96, i32* %99 monotonic, align 4
  %100 = shl nsw i32 %27, 1
  %101 = load i64, i64* %30, align 8
  %102 = add i64 %101, 39
  %103 = inttoptr i64 %102 to i32*
  store atomic volatile i32 %100, i32* %103 monotonic, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal6JSDate11GetUTCFieldENS1_10FieldIndexEdPNS0_9DateCacheE(%"class.v8::internal::JSDate"* nocapture readonly, i32, double, %"class.v8::internal::DateCache"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = fcmp uno double %2, 0.000000e+00
  br i1 %8, label %9, label %32

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::JSDate", %"class.v8::internal::JSDate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %13 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 1, i64 0
  br label %28

20:                                               ; preds = %14, %9
  %21 = and i64 %11, -262144
  %22 = or i64 %21, 16
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = add i64 %24, -41416
  %26 = inttoptr i64 %25 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %28

28:                                               ; preds = %18, %20
  %29 = phi i64* [ %27, %20 ], [ %19, %18 ]
  %30 = getelementptr inbounds i64, i64* %29, i64 121
  %31 = load i64, i64* %30, align 8
  br label %102

32:                                               ; preds = %4
  %33 = fptosi double %2 to i64
  %34 = icmp eq i32 %1, 21
  br i1 %34, label %35, label %44

35:                                               ; preds = %32
  %36 = bitcast %"class.v8::internal::DateCache"* %3 to i32 (%"class.v8::internal::DateCache"*, i64, i1)***
  %37 = load i32 (%"class.v8::internal::DateCache"*, i64, i1)**, i32 (%"class.v8::internal::DateCache"*, i64, i1)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.v8::internal::DateCache"*, i64, i1)*, i32 (%"class.v8::internal::DateCache"*, i64, i1)** %37, i64 3
  %39 = load i32 (%"class.v8::internal::DateCache"*, i64, i1)*, i32 (%"class.v8::internal::DateCache"*, i64, i1)** %38, align 8
  %40 = tail call i32 %39(%"class.v8::internal::DateCache"* %3, i64 %33, i1 zeroext true) #9
  %41 = sdiv i32 %40, -60000
  %42 = sext i32 %41 to i64
  %43 = shl nsw i64 %42, 1
  br label %102

44:                                               ; preds = %32
  %45 = icmp slt i64 %33, 0
  %46 = add nsw i64 %33, -86399999
  %47 = select i1 %45, i64 %46, i64 %33
  %48 = sdiv i64 %47, 86400000
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %1, 14
  br i1 %50, label %51, label %59

51:                                               ; preds = %44
  %52 = add nsw i32 %49, 4
  %53 = srem i32 %52, 7
  %54 = icmp sgt i32 %53, -1
  %55 = add nsw i32 %53, 7
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = sext i32 %56 to i64
  %58 = shl nsw i64 %57, 1
  br label %102

59:                                               ; preds = %44
  %60 = icmp slt i32 %1, 14
  br i1 %60, label %61, label %72

61:                                               ; preds = %59
  %62 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #9
  %63 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #9
  %64 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #9
  call void @_ZN2v88internal9DateCache20YearMonthDayFromDaysEiPiS2_S2_(%"class.v8::internal::DateCache"* %3, i32 %49, i32* nonnull %5, i32* nonnull %6, i32* nonnull %7) #9
  switch i32 %1, label %66 [
    i32 11, label %67
    i32 12, label %65
  ]

65:                                               ; preds = %61
  br label %67

66:                                               ; preds = %61
  br label %67

67:                                               ; preds = %61, %66, %65
  %68 = phi i32* [ %6, %65 ], [ %7, %66 ], [ %5, %61 ]
  %69 = load i32, i32* %68, align 4
  %70 = sext i32 %69 to i64
  %71 = shl nsw i64 %70, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #9
  br label %102

72:                                               ; preds = %59
  %73 = shl i64 %48, 32
  %74 = ashr exact i64 %73, 32
  %75 = mul nsw i64 %74, -86400000
  %76 = add i64 %75, %33
  %77 = trunc i64 %76 to i32
  switch i32 %1, label %101 [
    i32 15, label %78
    i32 16, label %82
    i32 17, label %87
    i32 18, label %92
    i32 19, label %96
    i32 20, label %98
  ]

78:                                               ; preds = %72
  %79 = sdiv i32 %77, 3600000
  %80 = sext i32 %79 to i64
  %81 = shl nsw i64 %80, 1
  br label %102

82:                                               ; preds = %72
  %83 = sdiv i32 %77, 60000
  %84 = srem i32 %83, 60
  %85 = sext i32 %84 to i64
  %86 = shl nsw i64 %85, 1
  br label %102

87:                                               ; preds = %72
  %88 = sdiv i32 %77, 1000
  %89 = srem i32 %88, 60
  %90 = sext i32 %89 to i64
  %91 = shl nsw i64 %90, 1
  br label %102

92:                                               ; preds = %72
  %93 = srem i32 %77, 1000
  %94 = sext i32 %93 to i64
  %95 = shl nsw i64 %94, 1
  br label %102

96:                                               ; preds = %72
  %97 = ashr exact i64 %73, 31
  br label %102

98:                                               ; preds = %72
  %99 = shl i64 %76, 32
  %100 = ashr exact i64 %99, 31
  br label %102

101:                                              ; preds = %72
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #14
  unreachable

102:                                              ; preds = %35, %78, %82, %87, %92, %96, %98, %67, %51, %28
  %103 = phi i64 [ %31, %28 ], [ %43, %35 ], [ %58, %51 ], [ %71, %67 ], [ %100, %98 ], [ %97, %96 ], [ %95, %92 ], [ %91, %87 ], [ %86, %82 ], [ %81, %78 ]
  ret i64 %103
}

declare void @_ZN2v88internal9DateCache20YearMonthDayFromDaysEiPiS2_S2_(%"class.v8::internal::DateCache"*, i32, i32*, i32*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6JSDate8SetValueENS0_6HandleIS1_EEd(i64*, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::FactoryBase"*
  %11 = fcmp ult double %1, 0xC1D0000000000000
  %12 = fcmp ugt double %1, 0x41CFFFFFFF800000
  %13 = or i1 %12, %11
  %14 = bitcast double %1 to i64
  %15 = icmp eq i64 %14, -9223372036854775808
  %16 = or i1 %13, %15
  br i1 %16, label %46, label %17

17:                                               ; preds = %2
  %18 = fptosi double %1 to i32
  %19 = sitofp i32 %18 to double
  %20 = fcmp oeq double %19, %1
  br i1 %20, label %21, label %46

21:                                               ; preds = %17
  %22 = sext i32 %18 to i64
  %23 = shl nsw i64 %22, 1
  %24 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %10, i64 45608
  %26 = bitcast %"class.v8::internal::FactoryBase"* %25 to %"class.v8::internal::CanonicalHandleScope"**
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %21
  %30 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %23) #9
  br label %51

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %10, i64 45584
  %33 = bitcast %"class.v8::internal::FactoryBase"* %32 to i64**
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %10, i64 45592
  %36 = bitcast %"class.v8::internal::FactoryBase"* %35 to i64**
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %34, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %31
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %24) #9
  br label %41

41:                                               ; preds = %39, %31
  %42 = phi i64* [ %40, %39 ], [ %34, %31 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %33, align 8
  store i64 %23, i64* %42, align 8
  br label %51

46:                                               ; preds = %17, %2
  %47 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %10) #9
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 3
  %50 = inttoptr i64 %49 to double*
  store double %1, double* %50, align 1
  br label %51

51:                                               ; preds = %29, %41, %46
  %52 = phi i64* [ %47, %46 ], [ %30, %29 ], [ %42, %41 ]
  %53 = fcmp uno double %1, 0.000000e+00
  %54 = bitcast %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #9
  %55 = load i64, i64* %0, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSDate>::ObjectRef"* %3, i64 0, i32 0
  %58 = load i64, i64* %52, align 8
  call void @_ZN2v88internal6JSDate8SetValueENS0_6ObjectEb(%"class.v8::internal::JSDate"* nonnull %57, i64 %58, i1 zeroext %53)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  ret i64* %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15JSMessageObject30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::AbstractCode", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 27
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %11 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !5
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 1, i64 0
  br label %28

18:                                               ; preds = %12, %2
  %19 = and i32 %9, -262144
  %20 = zext i32 %19 to i64
  %21 = or i64 %6, %20
  %22 = or i64 %21, 16
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = add i64 %24, -41416
  %26 = inttoptr i64 %25 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %28

28:                                               ; preds = %16, %18
  %29 = phi i64* [ %27, %18 ], [ %17, %16 ]
  %30 = getelementptr inbounds i64, i64* %29, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %9, %32
  br i1 %33, label %151, label %34

34:                                               ; preds = %28
  %35 = zext i32 %9 to i64
  %36 = or i64 %6, %35
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %36) #9
  br label %55

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %44, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i64* [ %49, %48 ], [ %44, %42 ]
  %52 = ptrtoint i64* %51 to i64
  %53 = add i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  store i64* %54, i64** %43, align 8
  store i64 %36, i64* %51, align 8
  br label %55

55:                                               ; preds = %40, %50
  %56 = phi i64* [ %41, %40 ], [ %51, %50 ]
  tail call void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %56) #9
  %57 = bitcast %"class.v8::internal::AbstractCode"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  %58 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  %59 = load i64, i64* %56, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %4, i64 0, i32 0
  %62 = and i64 %59, -4294967296
  %63 = add i64 %59, 3
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 acquire, align 4
  %66 = zext i32 %65 to i64
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %98, label %69

69:                                               ; preds = %55
  %70 = or i64 %62, %66
  %71 = add i64 %70, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %62, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp eq i16 %78, 133
  br i1 %79, label %96, label %80

80:                                               ; preds = %69
  %81 = load atomic i32, i32* %72 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %62, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 105
  br i1 %87, label %96, label %88

88:                                               ; preds = %80
  %89 = load atomic i32, i32* %72 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %62, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = icmp eq i16 %94, 94
  br i1 %95, label %96, label %98

96:                                               ; preds = %88, %80, %69
  %97 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %61, %"class.v8::internal::Isolate"* %0) #9
  br label %100

98:                                               ; preds = %88, %55
  %99 = call i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %61) #9
  br label %100

100:                                              ; preds = %96, %98
  %101 = phi i64 [ %97, %96 ], [ %99, %98 ]
  %102 = getelementptr inbounds %"class.v8::internal::AbstractCode", %"class.v8::internal::AbstractCode"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %101, i64* %102, align 8
  %103 = load i64, i64* %1, align 8
  %104 = add i64 %103, 31
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = ashr i32 %106, 1
  %108 = call i32 @_ZN2v88internal12AbstractCode14SourcePositionEi(%"class.v8::internal::AbstractCode"* nonnull %3, i32 %107) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  %109 = load i64, i64* %1, align 8
  %110 = shl i32 %108, 1
  %111 = add i64 %109, 35
  %112 = inttoptr i64 %111 to i32*
  store atomic volatile i32 %110, i32* %112 monotonic, align 4
  %113 = load i64, i64* %1, align 8
  %114 = add i32 %110, 2
  %115 = add i64 %113, 39
  %116 = inttoptr i64 %115 to i32*
  store atomic volatile i32 %114, i32* %116 monotonic, align 4
  %117 = load i64, i64* %1, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %117, 27
  %121 = inttoptr i64 %120 to i32*
  %122 = trunc i64 %119 to i32
  store atomic volatile i32 %122, i32* %121 monotonic, align 4
  %123 = and i64 %119, 1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %136, label %125

125:                                              ; preds = %100
  %126 = and i64 %117, -262144
  %127 = or i64 %126, 8
  %128 = inttoptr i64 %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = and i64 %129, 262144
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %136, label %132

132:                                              ; preds = %125
  %133 = or i64 %126, 16
  %134 = inttoptr i64 %133 to %"class.v8::internal::Heap"**
  %135 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %134, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %135, i64 %117, i64 %120, i64 %119) #9
  br label %136

136:                                              ; preds = %132, %125, %100
  %137 = and i64 %119, -262144
  %138 = or i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 24
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %151, label %143

143:                                              ; preds = %136
  %144 = and i64 %117, -262144
  %145 = or i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = and i64 %147, 24
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %143
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %117, i64 %120, i64 %119) #9
  br label %151

151:                                              ; preds = %150, %143, %136, %28
  ret void
}

declare void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i32 @_ZN2v88internal12AbstractCode14SourcePositionEi(%"class.v8::internal::AbstractCode"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal15JSMessageObject13GetLineNumberEv(%"class.v8::internal::JSMessageObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %3 = getelementptr inbounds %"class.v8::internal::JSMessageObject", %"class.v8::internal::JSMessageObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 35
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, -3
  br i1 %8, label %53, label %9

9:                                                ; preds = %1
  %10 = and i64 %4, -4294967296
  %11 = add i64 %4, 19
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = and i64 %4, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 4
  %23 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %9
  %26 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %23, i64 %15) #9
  br label %40

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 1
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #9
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi i64* [ %34, %33 ], [ %29, %27 ]
  %37 = ptrtoint i64* %36 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  store i64* %39, i64** %28, align 8
  store i64 %15, i64* %36, align 8
  br label %40

40:                                               ; preds = %25, %35
  %41 = phi i64* [ %26, %25 ], [ %36, %35 ]
  %42 = bitcast %"struct.v8::internal::Script::PositionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 -1, i64 16, i1 false) #9
  %43 = load i64, i64* %3, align 8
  %44 = add i64 %43, 35
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = ashr i32 %46, 1
  %48 = call zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64* %41, i32 %47, %"struct.v8::internal::Script::PositionInfo"* nonnull %2, i32 1) #9
  %49 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, 1
  %52 = select i1 %48, i32 %51, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #9
  br label %53

53:                                               ; preds = %1, %40
  %54 = phi i32 [ %52, %40 ], [ 0, %1 ]
  ret i32 %54
}

declare zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64*, i32, %"struct.v8::internal::Script::PositionInfo"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal15JSMessageObject15GetColumnNumberEv(%"class.v8::internal::JSMessageObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %3 = getelementptr inbounds %"class.v8::internal::JSMessageObject", %"class.v8::internal::JSMessageObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 35
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, -3
  br i1 %8, label %52, label %9

9:                                                ; preds = %1
  %10 = and i64 %4, -4294967296
  %11 = add i64 %4, 19
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = and i64 %4, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 4
  %23 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %9
  %26 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %23, i64 %15) #9
  br label %40

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 1
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #9
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi i64* [ %34, %33 ], [ %29, %27 ]
  %37 = ptrtoint i64* %36 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  store i64* %39, i64** %28, align 8
  store i64 %15, i64* %36, align 8
  br label %40

40:                                               ; preds = %25, %35
  %41 = phi i64* [ %26, %25 ], [ %36, %35 ]
  %42 = bitcast %"struct.v8::internal::Script::PositionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 -1, i64 16, i1 false) #9
  %43 = load i64, i64* %3, align 8
  %44 = add i64 %43, 35
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = ashr i32 %46, 1
  %48 = call zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64* %41, i32 %47, %"struct.v8::internal::Script::PositionInfo"* nonnull %2, i32 1) #9
  %49 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = select i1 %48, i32 %50, i32 -1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #9
  br label %52

52:                                               ; preds = %1, %40
  %53 = phi i32 [ %51, %40 ], [ -1, %1 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal15JSMessageObject9GetSourceEv(%"class.v8::internal::JSMessageObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSMessageObject", %"class.v8::internal::JSMessageObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  %15 = and i64 %13, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %64, label %17

17:                                               ; preds = %1
  %18 = add i64 %14, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %4, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp ult i16 %25, 64
  br i1 %26, label %27, label %64

27:                                               ; preds = %17
  %28 = load atomic i32, i32* %19 acquire, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %4, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = and i16 %33, 7
  %35 = icmp eq i16 %34, 2
  br i1 %35, label %36, label %64

36:                                               ; preds = %27
  %37 = load atomic i32, i32* %19 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %4, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = and i16 %42, 8
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %36
  %46 = add i64 %14, 11
  %47 = inttoptr i64 %46 to %"class.v8::String::ExternalOneByteStringResource"**
  %48 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %47, align 1
  %49 = icmp eq %"class.v8::String::ExternalOneByteStringResource"* %48, null
  br i1 %49, label %80, label %64

50:                                               ; preds = %36
  %51 = load atomic i32, i32* %19 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %4, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = and i16 %56, 8
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %50
  %60 = add i64 %14, 11
  %61 = inttoptr i64 %60 to %"class.v8::String::ExternalStringResource"**
  %62 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %61, align 1
  %63 = icmp eq %"class.v8::String::ExternalStringResource"* %62, null
  br i1 %63, label %80, label %64

64:                                               ; preds = %59, %45, %1, %50, %27, %17
  %65 = load i32, i32* %11, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %4, %66
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %64
  %71 = add i64 %67, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %4, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp ult i16 %78, 64
  br i1 %79, label %90, label %80

80:                                               ; preds = %59, %45, %64, %70
  %81 = load i64, i64* %2, align 8
  %82 = and i64 %81, -262144
  %83 = or i64 %82, 16
  %84 = inttoptr i64 %83 to i64*
  %85 = load i64, i64* %84, align 16
  %86 = add i64 %85, -41416
  %87 = inttoptr i64 %86 to %"class.v8::internal::Isolate"*
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 0, i32 7, i32 0, i64 9
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %70, %80
  %91 = phi i64 [ %89, %80 ], [ %67, %70 ]
  ret i64 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal15JSMessageObject13GetSourceLineEv(%"class.v8::internal::JSMessageObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %3 = getelementptr inbounds %"class.v8::internal::JSMessageObject", %"class.v8::internal::JSMessageObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = and i64 %4, -4294967296
  %12 = add i64 %4, 19
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %18 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %19 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %1
  %21 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %18, i64 %16) #9
  %22 = load i64, i64* %21, align 8
  br label %36

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #9
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %16, i64* %32, align 8
  br label %36

36:                                               ; preds = %20, %31
  %37 = phi i64 [ %22, %20 ], [ %16, %31 ]
  %38 = phi i64* [ %21, %20 ], [ %32, %31 ]
  %39 = add i64 %37, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, -2
  %43 = icmp eq i32 %42, 6
  br i1 %43, label %44, label %48

44:                                               ; preds = %36
  %45 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %46 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %45, i64 200
  %47 = bitcast %"class.v8::internal::Factory"* %46 to i64*
  br label %103

48:                                               ; preds = %36
  %49 = bitcast %"struct.v8::internal::Script::PositionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %49, i8 -1, i64 16, i1 false) #9
  %50 = load i64, i64* %3, align 8
  %51 = add i64 %50, 35
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = ashr i32 %53, 1
  %55 = call zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64* %38, i32 %54, %"struct.v8::internal::Script::PositionInfo"* nonnull %2, i32 1) #9
  br i1 %55, label %60, label %56

56:                                               ; preds = %48
  %57 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %58 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %57, i64 200
  %59 = bitcast %"class.v8::internal::Factory"* %58 to i64*
  br label %101

60:                                               ; preds = %48
  %61 = load i64, i64* %38, align 8
  %62 = and i64 %61, -4294967296
  %63 = add i64 %61, 3
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %60
  %71 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %67) #9
  br label %85

72:                                               ; preds = %60
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #9
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %67, i64* %81, align 8
  br label %85

85:                                               ; preds = %70, %80
  %86 = phi i64* [ %71, %70 ], [ %81, %80 ]
  %87 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %88 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %89, 0
  br i1 %92, label %93, label %99

93:                                               ; preds = %85
  %94 = load i64, i64* %86, align 8
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %91
  br i1 %98, label %101, label %99

99:                                               ; preds = %93, %85
  %100 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %87, i64* %86, i32 %89, i32 %91) #9
  br label %101

101:                                              ; preds = %99, %93, %56
  %102 = phi i64* [ %59, %56 ], [ %100, %99 ], [ %86, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #9
  br label %103

103:                                              ; preds = %101, %44
  %104 = phi i64* [ %47, %44 ], [ %102, %101 ]
  ret i64* %104
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #9

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #4 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #9
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1138"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1137"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #9
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1137"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #9
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1137"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1137"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #9
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #9
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal17PrototypeIterator9HasAccessEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %3 = alloca %"class.v8::internal::Context", align 8
  %4 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 190
  br i1 %16, label %17, label %43

17:                                               ; preds = %1
  %18 = bitcast %"class.v8::internal::Context"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = and i64 %6, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %29 = bitcast %"class.v8::internal::PrototypeIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #9
  %30 = load i64, i64* %21, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %32, %"class.v8::internal::Isolate"** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 1, i32 0, i32 0
  store i64 %6, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 3
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 4
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 6
  store i32 0, i32* %38, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %2) #9
  %39 = load i64, i64* %34, align 8
  %40 = trunc i64 %39 to i32
  %41 = trunc i64 %28 to i32
  %42 = icmp eq i32 %40, %41
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #9
  br i1 %42, label %79, label %52

43:                                               ; preds = %1
  %44 = load atomic i32, i32* %9 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %7, %45
  %47 = add i64 %46, 9
  %48 = inttoptr i64 %47 to i8*
  %49 = load atomic i8, i8* %48 monotonic, align 1
  %50 = and i8 %49, 32
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %17, %43
  %53 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %54 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %52
  %61 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %56) #9
  br label %75

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 31, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 31, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %54) #9
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi i64* [ %69, %68 ], [ %64, %62 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %63, align 8
  store i64 %56, i64* %71, align 8
  br label %75

75:                                               ; preds = %60, %70
  %76 = phi i64* [ %61, %60 ], [ %71, %70 ]
  %77 = load i64*, i64** %4, align 8
  %78 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %54, i64* %76, i64* %77) #9
  br label %79

79:                                               ; preds = %17, %43, %75
  %80 = phi i1 [ %78, %75 ], [ true, %43 ], [ true, %17 ]
  ret i1 %80
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::Handle.969", %"class.v8::internal::Handle.969"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = load i64, i64* %4, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 188
  br i1 %17, label %75, label %18

18:                                               ; preds = %1, %6
  %19 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = select i1 %5, i64* %20, i64* %4
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, -4294967296
  %24 = add i64 %22, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 15
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %23, %32
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %35 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 7, i32 0, i64 6
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %31, %38
  br i1 %39, label %50, label %40

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = add i64 %28, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = icmp ne i16 %47, 190
  %49 = zext i1 %48 to i8
  br label %50

50:                                               ; preds = %44, %40, %18
  %51 = phi i8 [ 1, %18 ], [ 0, %40 ], [ %49, %44 ]
  %52 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %51, i8* %52, align 4
  br i1 %5, label %53, label %54

53:                                               ; preds = %50
  store i64 %33, i64* %20, align 8
  br label %107

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 31, i32 4
  %56 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %55, align 8
  %57 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %56, i64 %33) #9
  br label %73

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 31, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 31, i32 1
  %64 = load i64*, i64** %63, align 8
  %65 = icmp eq i64* %62, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %60
  %67 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %35) #9
  br label %68

68:                                               ; preds = %66, %60
  %69 = phi i64* [ %67, %66 ], [ %62, %60 ]
  %70 = ptrtoint i64* %69 to i64
  %71 = add i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  store i64* %72, i64** %61, align 8
  store i64 %33, i64* %69, align 8
  br label %73

73:                                               ; preds = %68, %58
  %74 = phi i64* [ %59, %58 ], [ %69, %68 ]
  store i64* %74, i64** %19, align 8
  br label %107

75:                                               ; preds = %6
  %76 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 6
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = icmp sgt i32 %77, 102399
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %82 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %83 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %82) #9
  br label %107

84:                                               ; preds = %75
  %85 = tail call i64* @_ZN2v88internal7JSProxy12GetPrototypeENS0_6HandleIS1_EE(i64* nonnull %4) #9
  %86 = icmp eq i64* %85, null
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  store i64* null, i64** %3, align 8
  br label %107

88:                                               ; preds = %84
  %89 = ptrtoint i64* %85 to i64
  %90 = bitcast %"class.v8::internal::Handle.969"* %2 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %104, label %94

94:                                               ; preds = %88
  %95 = load i64, i64* %85, align 8
  %96 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 6
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %95 to i32
  %101 = trunc i64 %99 to i32
  %102 = icmp eq i32 %100, %101
  %103 = zext i1 %102 to i8
  br label %104

104:                                              ; preds = %94, %88
  %105 = phi i8 [ 1, %88 ], [ %103, %94 ]
  %106 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %105, i8* %106, align 4
  br label %107

107:                                              ; preds = %104, %87, %73, %53, %80
  %108 = phi i1 [ false, %80 ], [ true, %53 ], [ true, %73 ], [ true, %104 ], [ false, %87 ]
  ret i1 %108
}

declare i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7JSProxy12GetPrototypeENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare i16 @_ZN2v88internal6Object11SetPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i32, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal18SharedFunctionInfo9DebugNameENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator23InternalUpdateProtectorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1230"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare i64* @_ZN2v88internal6Object20ConvertToPropertyKeyEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator15RestartInternalILb1EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator15RestartInternalILb0EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN2v818PropertyDescriptorC1Ev(%"class.v8::PropertyDescriptor"*) unnamed_addr #2

declare void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEES3_(%"class.v8::PropertyDescriptor"*, %"class.v8::Value"*, %"class.v8::Value"*) unnamed_addr #2

declare void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEEb(%"class.v8::PropertyDescriptor"*, %"class.v8::Value"*, i1 zeroext) unnamed_addr #2

declare void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEE(%"class.v8::PropertyDescriptor"*, %"class.v8::Value"*) unnamed_addr #2

declare void @_ZN2v818PropertyDescriptor14set_enumerableEb(%"class.v8::PropertyDescriptor"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v818PropertyDescriptor16set_configurableEb(%"class.v8::PropertyDescriptor"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments18CallIndexedDefinerENS0_6HandleINS0_15InterceptorInfoEEEjRKNS_18PropertyDescriptorE(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i32, %"class.v8::PropertyDescriptor"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %8 = alloca %"class.v8::PropertyCallbackInfo", align 8
  %9 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %10 = bitcast i64* %9 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 40, i1 false) #9
  %13 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15, !prof !4

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 14, i32 0
  %19 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %19, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %20, %"class.v8::internal::RuntimeCallStats"** %16, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %20, %"class.v8::internal::RuntimeCallTimer"* %17, i32 162) #9
  br label %21

21:                                               ; preds = %4, %15
  %22 = load i64, i64* %1, align 8
  %23 = add i64 %22, 27
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %21
  %28 = and i64 %22, -4294967296
  %29 = zext i32 %25 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 3
  %32 = inttoptr i64 %31 to void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)**
  %33 = load void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)** %32, align 1
  br label %34

34:                                               ; preds = %21, %27
  %35 = phi void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)* [ %33, %27 ], [ null, %21 ]
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 108
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 32
  br i1 %38, label %162, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 22
  %41 = load i32, i32* %40, align 8
  store i32 6, i32* %40, align 8
  %42 = bitcast %"class.v8::internal::ExternalCallbackScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #9
  %43 = ptrtoint void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)* %35 to i64
  %44 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 1
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 2
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 21
  %48 = bitcast %"class.v8::internal::ExternalCallbackScope"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.v8::internal::ExternalCallbackScope"** %46 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %7, %"class.v8::internal::ExternalCallbackScope"** %47, align 8
  %51 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %52 = inttoptr i64 %51 to i8*
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %39
  %55 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %56 = bitcast %"class.v8::TracingController"* %55 to i8* (%"class.v8::TracingController"*, i8*)***
  %57 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %57, i64 2
  %59 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %58, align 8
  %60 = call i8* %59(%"class.v8::TracingController"* %55, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %61 = ptrtoint i8* %60 to i64
  store atomic volatile i64 %61, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %62

62:                                               ; preds = %54, %39
  %63 = phi i8* [ %52, %39 ], [ %60, %54 ]
  %64 = load atomic i8, i8* %63 monotonic, align 1
  %65 = and i8 %64, 5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %94, label %67

67:                                               ; preds = %62
  %68 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  %69 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 0, i64 16, i1 false) #9
  %70 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %71 = bitcast %"class.v8::TracingController"* %70 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %72 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %72, i64 3
  %74 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %73, align 8
  %75 = call i64 %74(%"class.v8::TracingController"* %70, i8 signext 66, i8* %63, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %69, i32 0) #9
  %76 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %77 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %76, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %76, align 8
  %78 = icmp eq %"class.v8::ConvertableToTraceFormat"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %67
  %80 = bitcast %"class.v8::ConvertableToTraceFormat"* %77 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %81 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %81, i64 1
  %83 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %82, align 8
  call void %83(%"class.v8::ConvertableToTraceFormat"* nonnull %77) #9
  br label %84

84:                                               ; preds = %79, %67
  %85 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %85, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %85, align 16
  %87 = icmp eq %"class.v8::ConvertableToTraceFormat"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = bitcast %"class.v8::ConvertableToTraceFormat"* %86 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %90 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %90, i64 1
  %92 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %91, align 8
  call void %92(%"class.v8::ConvertableToTraceFormat"* nonnull %86) #9
  br label %93

93:                                               ; preds = %88, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  br label %94

94:                                               ; preds = %62, %93
  %95 = bitcast %"class.v8::PropertyCallbackInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #9
  %96 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %97 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %8, i64 0, i32 0
  store i64* %96, i64** %97, align 8
  %98 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 21
  %102 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %104 = load i64, i64* %103, align 8
  call void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"* %102, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i64 %104, i32 %2) #9
  br label %105

105:                                              ; preds = %94, %100
  call void %35(i32 %2, %"class.v8::PropertyDescriptor"* dereferenceable(8) %3, %"class.v8::PropertyCallbackInfo"* nonnull dereferenceable(8) %8) #9
  %106 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 5
  %109 = load i64, i64* %108, align 8
  %110 = trunc i64 %107 to i32
  %111 = trunc i64 %109 to i32
  %112 = icmp eq i32 %110, %111
  %113 = select i1 %112, i64* null, i64* %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #9
  %114 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %44, align 8
  %115 = load i64, i64* %50, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %114, i64 0, i32 0, i32 9, i32 21
  %117 = bitcast %"class.v8::internal::ExternalCallbackScope"** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %119 = inttoptr i64 %118 to i8*
  %120 = icmp eq i64 %118, 0
  br i1 %120, label %121, label %129

121:                                              ; preds = %105
  %122 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %123 = bitcast %"class.v8::TracingController"* %122 to i8* (%"class.v8::TracingController"*, i8*)***
  %124 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %123, align 8
  %125 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %124, i64 2
  %126 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %125, align 8
  %127 = call i8* %126(%"class.v8::TracingController"* %122, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %128 = ptrtoint i8* %127 to i64
  store atomic volatile i64 %128, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %129

129:                                              ; preds = %121, %105
  %130 = phi i8* [ %119, %105 ], [ %127, %121 ]
  %131 = load atomic i8, i8* %130 monotonic, align 1
  %132 = and i8 %131, 5
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %161, label %134

134:                                              ; preds = %129
  %135 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #9
  %136 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %135, i8 0, i64 16, i1 false) #9
  %137 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %138 = bitcast %"class.v8::TracingController"* %137 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %139 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %138, align 8
  %140 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %139, i64 3
  %141 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %140, align 8
  %142 = call i64 %141(%"class.v8::TracingController"* %137, i8 signext 69, i8* %130, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %136, i32 0) #9
  %143 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %144 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %143, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %143, align 8
  %145 = icmp eq %"class.v8::ConvertableToTraceFormat"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %134
  %147 = bitcast %"class.v8::ConvertableToTraceFormat"* %144 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %148 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %148, i64 1
  %150 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %149, align 8
  call void %150(%"class.v8::ConvertableToTraceFormat"* nonnull %144) #9
  br label %151

151:                                              ; preds = %146, %134
  %152 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %152, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %152, align 16
  %154 = icmp eq %"class.v8::ConvertableToTraceFormat"* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %151
  %156 = bitcast %"class.v8::ConvertableToTraceFormat"* %153 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %157 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %157, i64 1
  %159 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %158, align 8
  call void %159(%"class.v8::ConvertableToTraceFormat"* nonnull %153) #9
  br label %160

160:                                              ; preds = %155, %151
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #9
  br label %161

161:                                              ; preds = %129, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #9
  store i32 %41, i32* %40, align 8
  br label %162

162:                                              ; preds = %34, %161
  %163 = phi i64* [ %113, %161 ], [ null, %34 ]
  %164 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %165 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %164, align 8
  %166 = icmp eq %"class.v8::internal::RuntimeCallStats"* %165, null
  br i1 %166, label %169, label %167, !prof !4

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %165, %"class.v8::internal::RuntimeCallTimer"* %168) #9
  br label %169

169:                                              ; preds = %162, %167
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  ret i64* %163
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments16CallNamedDefinerENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEERKNS_18PropertyDescriptorE(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i64*, %"class.v8::PropertyDescriptor"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %8 = alloca %"class.v8::PropertyCallbackInfo", align 8
  %9 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %10 = bitcast i64* %9 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 40, i1 false) #9
  %13 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15, !prof !4

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 14, i32 0
  %19 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %19, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %20, %"class.v8::internal::RuntimeCallStats"** %16, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %20, %"class.v8::internal::RuntimeCallTimer"* %17, i32 182) #9
  br label %21

21:                                               ; preds = %4, %15
  %22 = load i64, i64* %1, align 8
  %23 = add i64 %22, 27
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %21
  %28 = and i64 %22, -4294967296
  %29 = zext i32 %25 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 3
  %32 = inttoptr i64 %31 to void (%"class.v8::Name"*, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)**
  %33 = load void (%"class.v8::Name"*, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)** %32, align 1
  br label %34

34:                                               ; preds = %21, %27
  %35 = phi void (%"class.v8::Name"*, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)* [ %33, %27 ], [ null, %21 ]
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 108
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 32
  br i1 %38, label %164, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 22
  %41 = load i32, i32* %40, align 8
  store i32 6, i32* %40, align 8
  %42 = bitcast %"class.v8::internal::ExternalCallbackScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #9
  %43 = ptrtoint void (%"class.v8::Name"*, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)* %35 to i64
  %44 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 1
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 2
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 21
  %48 = bitcast %"class.v8::internal::ExternalCallbackScope"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.v8::internal::ExternalCallbackScope"** %46 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %7, %"class.v8::internal::ExternalCallbackScope"** %47, align 8
  %51 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %52 = inttoptr i64 %51 to i8*
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %39
  %55 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %56 = bitcast %"class.v8::TracingController"* %55 to i8* (%"class.v8::TracingController"*, i8*)***
  %57 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %57, i64 2
  %59 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %58, align 8
  %60 = call i8* %59(%"class.v8::TracingController"* %55, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %61 = ptrtoint i8* %60 to i64
  store atomic volatile i64 %61, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %62

62:                                               ; preds = %54, %39
  %63 = phi i8* [ %52, %39 ], [ %60, %54 ]
  %64 = load atomic i8, i8* %63 monotonic, align 1
  %65 = and i8 %64, 5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %94, label %67

67:                                               ; preds = %62
  %68 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  %69 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 0, i64 16, i1 false) #9
  %70 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %71 = bitcast %"class.v8::TracingController"* %70 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %72 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %72, i64 3
  %74 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %73, align 8
  %75 = call i64 %74(%"class.v8::TracingController"* %70, i8 signext 66, i8* %63, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %69, i32 0) #9
  %76 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %77 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %76, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %76, align 8
  %78 = icmp eq %"class.v8::ConvertableToTraceFormat"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %67
  %80 = bitcast %"class.v8::ConvertableToTraceFormat"* %77 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %81 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %81, i64 1
  %83 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %82, align 8
  call void %83(%"class.v8::ConvertableToTraceFormat"* nonnull %77) #9
  br label %84

84:                                               ; preds = %79, %67
  %85 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %85, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %85, align 16
  %87 = icmp eq %"class.v8::ConvertableToTraceFormat"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = bitcast %"class.v8::ConvertableToTraceFormat"* %86 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %90 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %90, i64 1
  %92 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %91, align 8
  call void %92(%"class.v8::ConvertableToTraceFormat"* nonnull %86) #9
  br label %93

93:                                               ; preds = %88, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  br label %94

94:                                               ; preds = %62, %93
  %95 = bitcast %"class.v8::PropertyCallbackInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #9
  %96 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %97 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %8, i64 0, i32 0
  store i64* %96, i64** %97, align 8
  %98 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 21
  %102 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %104 = load i64, i64* %103, align 8
  %105 = load i64, i64* %2, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %102, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66, i64 0, i64 0), i64 %104, i64 %105) #9
  br label %106

106:                                              ; preds = %94, %100
  %107 = bitcast i64* %2 to %"class.v8::Name"*
  call void %35(%"class.v8::Name"* %107, %"class.v8::PropertyDescriptor"* dereferenceable(8) %3, %"class.v8::PropertyCallbackInfo"* nonnull dereferenceable(8) %8) #9
  %108 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 5
  %111 = load i64, i64* %110, align 8
  %112 = trunc i64 %109 to i32
  %113 = trunc i64 %111 to i32
  %114 = icmp eq i32 %112, %113
  %115 = select i1 %114, i64* null, i64* %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #9
  %116 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %44, align 8
  %117 = load i64, i64* %50, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %116, i64 0, i32 0, i32 9, i32 21
  %119 = bitcast %"class.v8::internal::ExternalCallbackScope"** %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %121 = inttoptr i64 %120 to i8*
  %122 = icmp eq i64 %120, 0
  br i1 %122, label %123, label %131

123:                                              ; preds = %106
  %124 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %125 = bitcast %"class.v8::TracingController"* %124 to i8* (%"class.v8::TracingController"*, i8*)***
  %126 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %125, align 8
  %127 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %126, i64 2
  %128 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %127, align 8
  %129 = call i8* %128(%"class.v8::TracingController"* %124, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %130 = ptrtoint i8* %129 to i64
  store atomic volatile i64 %130, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %131

131:                                              ; preds = %123, %106
  %132 = phi i8* [ %121, %106 ], [ %129, %123 ]
  %133 = load atomic i8, i8* %132 monotonic, align 1
  %134 = and i8 %133, 5
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %163, label %136

136:                                              ; preds = %131
  %137 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #9
  %138 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %137, i8 0, i64 16, i1 false) #9
  %139 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %140 = bitcast %"class.v8::TracingController"* %139 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %141 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %140, align 8
  %142 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %141, i64 3
  %143 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %142, align 8
  %144 = call i64 %143(%"class.v8::TracingController"* %139, i8 signext 69, i8* %132, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %138, i32 0) #9
  %145 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %146 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %145, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %145, align 8
  %147 = icmp eq %"class.v8::ConvertableToTraceFormat"* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %136
  %149 = bitcast %"class.v8::ConvertableToTraceFormat"* %146 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %150 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %150, i64 1
  %152 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %151, align 8
  call void %152(%"class.v8::ConvertableToTraceFormat"* nonnull %146) #9
  br label %153

153:                                              ; preds = %148, %136
  %154 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %154, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %154, align 16
  %156 = icmp eq %"class.v8::ConvertableToTraceFormat"* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %153
  %158 = bitcast %"class.v8::ConvertableToTraceFormat"* %155 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %159 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %159, i64 1
  %161 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %160, align 8
  call void %161(%"class.v8::ConvertableToTraceFormat"* nonnull %155) #9
  br label %162

162:                                              ; preds = %157, %153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #9
  br label %163

163:                                              ; preds = %131, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #9
  store i32 %41, i32* %40, align 8
  br label %164

164:                                              ; preds = %34, %163
  %165 = phi i64* [ %115, %163 ], [ null, %34 ]
  %166 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %167 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %166, align 8
  %168 = icmp eq %"class.v8::internal::RuntimeCallStats"* %167, null
  br i1 %168, label %171, label %169, !prof !4

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %167, %"class.v8::internal::RuntimeCallTimer"* %170) #9
  br label %171

171:                                              ; preds = %164, %169
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  ret i64* %165
}

; Function Attrs: nounwind
declare void @_ZN2v818PropertyDescriptorD1Ev(%"class.v8::PropertyDescriptor"*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"*, i8*, i64, i32) local_unnamed_addr #2

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

declare void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"*, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal3Map21GetIndexedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i64 %1, 4294967295
  %9 = icmp eq i64 %8, 0
  tail call void @llvm.assume(i1 %9) #9
  %10 = zext i32 %7 to i64
  %11 = or i64 %10, %1
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %84, label %14

14:                                               ; preds = %2
  %15 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %16 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %15, null
  %17 = and i64 %4, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  br i1 %16, label %49, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 1, i64 10
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  br label %70

28:                                               ; preds = %20
  %29 = load i64, i64* %19, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 10
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %41, %28
  %36 = phi i64 [ %46, %41 ], [ %11, %28 ]
  %37 = add i64 %36, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = icmp eq i32 %39, %34
  br i1 %40, label %41, label %84

41:                                               ; preds = %35
  %42 = add i64 %36, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %45, %1
  %47 = and i64 %45, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %84, label %35

49:                                               ; preds = %14
  %50 = load i64, i64* %19, align 16
  %51 = add i64 %50, -41416
  %52 = inttoptr i64 %51 to %"class.v8::internal::Isolate"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 7, i32 0, i64 10
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %62, %49
  %57 = phi i64 [ %67, %62 ], [ %11, %49 ]
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %62, label %84

62:                                               ; preds = %56
  %63 = add i64 %57, 19
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %66, %1
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %84, label %56

70:                                               ; preds = %76, %24
  %71 = phi i64 [ %81, %76 ], [ %11, %24 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %27
  br i1 %75, label %76, label %84

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %80, %1
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %76, %70, %41, %35, %62, %56, %2
  %85 = phi i64 [ %11, %2 ], [ %67, %62 ], [ %57, %56 ], [ %36, %35 ], [ %46, %41 ], [ %71, %70 ], [ %81, %76 ]
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %84
  %89 = add i64 %85, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %92, %1
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = add i16 %96, -1059
  %98 = icmp ult i16 %97, 15
  br i1 %98, label %99, label %111

99:                                               ; preds = %88
  %100 = add i64 %85, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i64 %85, -4294967296
  %104 = zext i32 %102 to i64
  %105 = or i64 %103, %104
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 acquire, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %103, %109
  br label %111

111:                                              ; preds = %84, %88, %99
  %112 = phi i64 [ %110, %99 ], [ %85, %88 ], [ %85, %84 ]
  %113 = add i64 %112, 35
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 acquire, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %116, %1
  %118 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %119 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 0, i32 1
  %122 = load i8, i8* %121, align 8, !range !5
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 1, i64 0
  br label %134

126:                                              ; preds = %120, %111
  %127 = and i64 %112, -262144
  %128 = or i64 %127, 16
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 16
  %131 = add i64 %130, -41416
  %132 = inttoptr i64 %131 to %"class.v8::internal::Isolate"*
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %134

134:                                              ; preds = %126, %124
  %135 = phi i64* [ %133, %126 ], [ %125, %124 ]
  %136 = getelementptr inbounds i64, i64* %135, i64 4
  %137 = load i64, i64* %136, align 8
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %115, %138
  br i1 %139, label %146, label %140

140:                                              ; preds = %134
  %141 = add i64 %117, 19
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %144, %1
  br label %146

146:                                              ; preds = %134, %140
  %147 = phi i64 [ %145, %140 ], [ %137, %134 ]
  ret i64 %147
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i64 %1, 4294967295
  %9 = icmp eq i64 %8, 0
  tail call void @llvm.assume(i1 %9) #9
  %10 = zext i32 %7 to i64
  %11 = or i64 %10, %1
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %84, label %14

14:                                               ; preds = %2
  %15 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %16 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %15, null
  %17 = and i64 %4, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  br i1 %16, label %49, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 1, i64 10
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  br label %70

28:                                               ; preds = %20
  %29 = load i64, i64* %19, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 10
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %41, %28
  %36 = phi i64 [ %46, %41 ], [ %11, %28 ]
  %37 = add i64 %36, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = icmp eq i32 %39, %34
  br i1 %40, label %41, label %84

41:                                               ; preds = %35
  %42 = add i64 %36, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %45, %1
  %47 = and i64 %45, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %84, label %35

49:                                               ; preds = %14
  %50 = load i64, i64* %19, align 16
  %51 = add i64 %50, -41416
  %52 = inttoptr i64 %51 to %"class.v8::internal::Isolate"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 7, i32 0, i64 10
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %62, %49
  %57 = phi i64 [ %67, %62 ], [ %11, %49 ]
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %62, label %84

62:                                               ; preds = %56
  %63 = add i64 %57, 19
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %66, %1
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %84, label %56

70:                                               ; preds = %76, %24
  %71 = phi i64 [ %81, %76 ], [ %11, %24 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %27
  br i1 %75, label %76, label %84

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %80, %1
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %76, %70, %41, %35, %62, %56, %2
  %85 = phi i64 [ %11, %2 ], [ %67, %62 ], [ %57, %56 ], [ %36, %35 ], [ %46, %41 ], [ %71, %70 ], [ %81, %76 ]
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %84
  %89 = add i64 %85, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %92, %1
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = add i16 %96, -1059
  %98 = icmp ult i16 %97, 15
  br i1 %98, label %99, label %111

99:                                               ; preds = %88
  %100 = add i64 %85, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i64 %85, -4294967296
  %104 = zext i32 %102 to i64
  %105 = or i64 %103, %104
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 acquire, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %103, %109
  br label %111

111:                                              ; preds = %84, %88, %99
  %112 = phi i64 [ %110, %99 ], [ %85, %88 ], [ %85, %84 ]
  %113 = add i64 %112, 35
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 acquire, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %116, %1
  %118 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %119 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 0, i32 1
  %122 = load i8, i8* %121, align 8, !range !5
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 1, i64 0
  br label %134

126:                                              ; preds = %120, %111
  %127 = and i64 %112, -262144
  %128 = or i64 %127, 16
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 16
  %131 = add i64 %130, -41416
  %132 = inttoptr i64 %131 to %"class.v8::internal::Isolate"*
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %134

134:                                              ; preds = %126, %124
  %135 = phi i64* [ %133, %126 ], [ %125, %124 ]
  %136 = getelementptr inbounds i64, i64* %135, i64 4
  %137 = load i64, i64* %136, align 8
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %115, %138
  br i1 %139, label %146, label %140

140:                                              ; preds = %134
  %141 = add i64 %117, 15
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %144, %1
  br label %146

146:                                              ; preds = %134, %140
  %147 = phi i64 [ %145, %140 ], [ %137, %134 ]
  ret i64 %147
}

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments30BasicCallIndexedGetterCallbackEPFvjRKNS_20PropertyCallbackInfoINS_5ValueEEEEjNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"*, void (i32, %"class.v8::PropertyCallbackInfo"*)*, i32, i64*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %6 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %7 = alloca %"class.v8::PropertyCallbackInfo", align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %9 = bitcast i64* %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 108
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 32
  br i1 %13, label %14, label %18

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %16 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %15, align 8
  %17 = tail call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %16, i64* %3, i64* null, i32 1) #9
  br i1 %17, label %18, label %133

18:                                               ; preds = %14, %4
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 22
  %20 = load i32, i32* %19, align 8
  store i32 6, i32* %19, align 8
  %21 = bitcast %"class.v8::internal::ExternalCallbackScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = ptrtoint void (i32, %"class.v8::PropertyCallbackInfo"*)* %1 to i64
  %23 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 2
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 21
  %27 = bitcast %"class.v8::internal::ExternalCallbackScope"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.v8::internal::ExternalCallbackScope"** %25 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %6, %"class.v8::internal::ExternalCallbackScope"** %26, align 8
  %30 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %31 = inttoptr i64 %30 to i8*
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %18
  %34 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %35 = bitcast %"class.v8::TracingController"* %34 to i8* (%"class.v8::TracingController"*, i8*)***
  %36 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %35, align 8
  %37 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %36, i64 2
  %38 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %37, align 8
  %39 = call i8* %38(%"class.v8::TracingController"* %34, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  store atomic volatile i64 %40, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %41

41:                                               ; preds = %33, %18
  %42 = phi i8* [ %31, %18 ], [ %39, %33 ]
  %43 = load atomic i8, i8* %42 monotonic, align 1
  %44 = and i8 %43, 5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %41
  %47 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9
  %48 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 0, i64 16, i1 false) #9
  %49 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %50 = bitcast %"class.v8::TracingController"* %49 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %51 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %51, i64 3
  %53 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %52, align 8
  %54 = call i64 %53(%"class.v8::TracingController"* %49, i8 signext 66, i8* %42, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %48, i32 0) #9
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %56 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %55, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %55, align 8
  %57 = icmp eq %"class.v8::ConvertableToTraceFormat"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %46
  %59 = bitcast %"class.v8::ConvertableToTraceFormat"* %56 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, i64 1
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, align 8
  call void %62(%"class.v8::ConvertableToTraceFormat"* nonnull %56) #9
  br label %63

63:                                               ; preds = %58, %46
  %64 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %64, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %64, align 16
  %66 = icmp eq %"class.v8::ConvertableToTraceFormat"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.v8::ConvertableToTraceFormat"* %65 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %69 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %69, i64 1
  %71 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %70, align 8
  call void %71(%"class.v8::ConvertableToTraceFormat"* nonnull %65) #9
  br label %72

72:                                               ; preds = %67, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9
  br label %73

73:                                               ; preds = %41, %72
  %74 = bitcast %"class.v8::PropertyCallbackInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #9
  %75 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %76 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %7, i64 0, i32 0
  store i64* %75, i64** %76, align 8
  call void %1(i32 %2, %"class.v8::PropertyCallbackInfo"* nonnull dereferenceable(8) %7) #9
  %77 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %80 = load i64, i64* %79, align 8
  %81 = trunc i64 %78 to i32
  %82 = trunc i64 %80 to i32
  %83 = icmp eq i32 %81, %82
  %84 = select i1 %83, i64* null, i64* %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #9
  %85 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %23, align 8
  %86 = load i64, i64* %29, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %85, i64 0, i32 0, i32 9, i32 21
  %88 = bitcast %"class.v8::internal::ExternalCallbackScope"** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %90 = inttoptr i64 %89 to i8*
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %92, label %100

92:                                               ; preds = %73
  %93 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %94 = bitcast %"class.v8::TracingController"* %93 to i8* (%"class.v8::TracingController"*, i8*)***
  %95 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %94, align 8
  %96 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %95, i64 2
  %97 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %96, align 8
  %98 = call i8* %97(%"class.v8::TracingController"* %93, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %99 = ptrtoint i8* %98 to i64
  store atomic volatile i64 %99, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %100

100:                                              ; preds = %92, %73
  %101 = phi i8* [ %90, %73 ], [ %98, %92 ]
  %102 = load atomic i8, i8* %101 monotonic, align 1
  %103 = and i8 %102, 5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %132, label %105

105:                                              ; preds = %100
  %106 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #9
  %107 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %106, i8 0, i64 16, i1 false) #9
  %108 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %109 = bitcast %"class.v8::TracingController"* %108 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %110 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %109, align 8
  %111 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %110, i64 3
  %112 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %111, align 8
  %113 = call i64 %112(%"class.v8::TracingController"* %108, i8 signext 69, i8* %101, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %107, i32 0) #9
  %114 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %115 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %114, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %114, align 8
  %116 = icmp eq %"class.v8::ConvertableToTraceFormat"* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %105
  %118 = bitcast %"class.v8::ConvertableToTraceFormat"* %115 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %119 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %119, i64 1
  %121 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %120, align 8
  call void %121(%"class.v8::ConvertableToTraceFormat"* nonnull %115) #9
  br label %122

122:                                              ; preds = %117, %105
  %123 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %123, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %123, align 16
  %125 = icmp eq %"class.v8::ConvertableToTraceFormat"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.v8::ConvertableToTraceFormat"* %124 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %128 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %128, i64 1
  %130 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %129, align 8
  call void %130(%"class.v8::ConvertableToTraceFormat"* nonnull %124) #9
  br label %131

131:                                              ; preds = %126, %122
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #9
  br label %132

132:                                              ; preds = %100, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  store i32 %20, i32* %19, align 8
  br label %133

133:                                              ; preds = %14, %132
  %134 = phi i64* [ %84, %132 ], [ null, %14 ]
  ret i64* %134
}

declare zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments28BasicCallNamedGetterCallbackEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEENS0_6HandleINS0_4NameEEENSC_INS0_6ObjectEEESG_(%"class.v8::internal::PropertyCallbackArguments"*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, i64*, i64*, i64*) local_unnamed_addr #4 comdat align 2 {
  %6 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %7 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %8 = alloca %"class.v8::PropertyCallbackInfo", align 8
  %9 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %10 = bitcast i64* %9 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 108
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 32
  br i1 %14, label %15, label %19

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 68
  %17 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %16, align 8
  %18 = tail call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %17, i64* %3, i64* %4, i32 1) #9
  br i1 %18, label %19, label %135

19:                                               ; preds = %15, %5
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 22
  %21 = load i32, i32* %20, align 8
  store i32 6, i32* %20, align 8
  %22 = bitcast %"class.v8::internal::ExternalCallbackScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  %23 = ptrtoint void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* %1 to i64
  %24 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 1
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 2
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 21
  %28 = bitcast %"class.v8::internal::ExternalCallbackScope"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.v8::internal::ExternalCallbackScope"** %26 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %7, %"class.v8::internal::ExternalCallbackScope"** %27, align 8
  %31 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %32 = inttoptr i64 %31 to i8*
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %19
  %35 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %36 = bitcast %"class.v8::TracingController"* %35 to i8* (%"class.v8::TracingController"*, i8*)***
  %37 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %36, align 8
  %38 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %37, i64 2
  %39 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %38, align 8
  %40 = call i8* %39(%"class.v8::TracingController"* %35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %41 = ptrtoint i8* %40 to i64
  store atomic volatile i64 %41, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %42

42:                                               ; preds = %34, %19
  %43 = phi i8* [ %32, %19 ], [ %40, %34 ]
  %44 = load atomic i8, i8* %43 monotonic, align 1
  %45 = and i8 %44, 5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %42
  %48 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #9
  %49 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 0, i64 16, i1 false) #9
  %50 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %51 = bitcast %"class.v8::TracingController"* %50 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %52 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %52, i64 3
  %54 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %53, align 8
  %55 = call i64 %54(%"class.v8::TracingController"* %50, i8 signext 66, i8* %43, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %49, i32 0) #9
  %56 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %57 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %56, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %56, align 8
  %58 = icmp eq %"class.v8::ConvertableToTraceFormat"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %47
  %60 = bitcast %"class.v8::ConvertableToTraceFormat"* %57 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, i64 1
  %63 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %62, align 8
  call void %63(%"class.v8::ConvertableToTraceFormat"* nonnull %57) #9
  br label %64

64:                                               ; preds = %59, %47
  %65 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %65, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %65, align 16
  %67 = icmp eq %"class.v8::ConvertableToTraceFormat"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.v8::ConvertableToTraceFormat"* %66 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %70 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %70, i64 1
  %72 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %71, align 8
  call void %72(%"class.v8::ConvertableToTraceFormat"* nonnull %66) #9
  br label %73

73:                                               ; preds = %68, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #9
  br label %74

74:                                               ; preds = %42, %73
  %75 = bitcast %"class.v8::PropertyCallbackInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9
  %76 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %77 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %8, i64 0, i32 0
  store i64* %76, i64** %77, align 8
  %78 = bitcast i64* %2 to %"class.v8::Name"*
  call void %1(%"class.v8::Name"* %78, %"class.v8::PropertyCallbackInfo"* nonnull dereferenceable(8) %8) #9
  %79 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 5
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %80 to i32
  %84 = trunc i64 %82 to i32
  %85 = icmp eq i32 %83, %84
  %86 = select i1 %85, i64* null, i64* %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9
  %87 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %88 = load i64, i64* %30, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 0, i32 9, i32 21
  %90 = bitcast %"class.v8::internal::ExternalCallbackScope"** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %92 = inttoptr i64 %91 to i8*
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %94, label %102

94:                                               ; preds = %74
  %95 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %96 = bitcast %"class.v8::TracingController"* %95 to i8* (%"class.v8::TracingController"*, i8*)***
  %97 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %97, i64 2
  %99 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %98, align 8
  %100 = call i8* %99(%"class.v8::TracingController"* %95, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %101 = ptrtoint i8* %100 to i64
  store atomic volatile i64 %101, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %102

102:                                              ; preds = %94, %74
  %103 = phi i8* [ %92, %74 ], [ %100, %94 ]
  %104 = load atomic i8, i8* %103 monotonic, align 1
  %105 = and i8 %104, 5
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %134, label %107

107:                                              ; preds = %102
  %108 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #9
  %109 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %108, i8 0, i64 16, i1 false) #9
  %110 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %111 = bitcast %"class.v8::TracingController"* %110 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %112 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %111, align 8
  %113 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %112, i64 3
  %114 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %113, align 8
  %115 = call i64 %114(%"class.v8::TracingController"* %110, i8 signext 69, i8* %103, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %109, i32 0) #9
  %116 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %117 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %116, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %116, align 8
  %118 = icmp eq %"class.v8::ConvertableToTraceFormat"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %107
  %120 = bitcast %"class.v8::ConvertableToTraceFormat"* %117 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %121 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %121, i64 1
  %123 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %122, align 8
  call void %123(%"class.v8::ConvertableToTraceFormat"* nonnull %117) #9
  br label %124

124:                                              ; preds = %119, %107
  %125 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %125, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %125, align 16
  %127 = icmp eq %"class.v8::ConvertableToTraceFormat"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.v8::ConvertableToTraceFormat"* %126 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %130 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %130, i64 1
  %132 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %131, align 8
  call void %132(%"class.v8::ConvertableToTraceFormat"* nonnull %126) #9
  br label %133

133:                                              ; preds = %128, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #9
  br label %134

134:                                              ; preds = %102, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  store i32 %21, i32* %20, align 8
  br label %135

135:                                              ; preds = %15, %134
  %136 = phi i64* [ %86, %134 ], [ null, %15 ]
  ret i64* %136
}

declare void @_ZN2v85Utils16ReportApiFailureEPKcS2_(i8*, i8*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i64*) local_unnamed_addr #2

declare i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments16CallIndexedQueryENS0_6HandleINS0_15InterceptorInfoEEEj(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %7 = alloca %"class.v8::PropertyCallbackInfo.1245", align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %9 = bitcast i64* %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #9
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14, !prof !4

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 14, i32 0
  %18 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %18, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallStats"** %15, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallTimer"* %16, i32 167) #9
  br label %20

20:                                               ; preds = %3, %14
  %21 = load i64, i64* %1, align 8
  %22 = add i64 %21, 11
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = and i64 %21, -4294967296
  %28 = zext i32 %24 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 3
  %31 = inttoptr i64 %30 to void (i32, %"class.v8::PropertyCallbackInfo.1245"*)**
  %32 = load void (i32, %"class.v8::PropertyCallbackInfo.1245"*)*, void (i32, %"class.v8::PropertyCallbackInfo.1245"*)** %31, align 1
  br label %33

33:                                               ; preds = %20, %26
  %34 = phi void (i32, %"class.v8::PropertyCallbackInfo.1245"*)* [ %32, %26 ], [ null, %20 ]
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 108
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %40 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %39, align 8
  %41 = call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %40, i64* %1, i64* null, i32 0) #9
  br i1 %41, label %42, label %165

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 22
  %44 = load i32, i32* %43, align 8
  store i32 6, i32* %43, align 8
  %45 = bitcast %"class.v8::internal::ExternalCallbackScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = ptrtoint void (i32, %"class.v8::PropertyCallbackInfo.1245"*)* %34 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 1
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 21
  %51 = bitcast %"class.v8::internal::ExternalCallbackScope"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.v8::internal::ExternalCallbackScope"** %49 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %6, %"class.v8::internal::ExternalCallbackScope"** %50, align 8
  %54 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %55 = inttoptr i64 %54 to i8*
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %42
  %58 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %59 = bitcast %"class.v8::TracingController"* %58 to i8* (%"class.v8::TracingController"*, i8*)***
  %60 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %59, align 8
  %61 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %60, i64 2
  %62 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %61, align 8
  %63 = call i8* %62(%"class.v8::TracingController"* %58, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %64 = ptrtoint i8* %63 to i64
  store atomic volatile i64 %64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %65

65:                                               ; preds = %57, %42
  %66 = phi i8* [ %55, %42 ], [ %63, %57 ]
  %67 = load atomic i8, i8* %66 monotonic, align 1
  %68 = and i8 %67, 5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %97, label %70

70:                                               ; preds = %65
  %71 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #9
  %72 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 0, i64 16, i1 false) #9
  %73 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %74 = bitcast %"class.v8::TracingController"* %73 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %75 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %75, i64 3
  %77 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %76, align 8
  %78 = call i64 %77(%"class.v8::TracingController"* %73, i8 signext 66, i8* %66, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %72, i32 0) #9
  %79 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %80 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  %81 = icmp eq %"class.v8::ConvertableToTraceFormat"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %70
  %83 = bitcast %"class.v8::ConvertableToTraceFormat"* %80 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %84 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %84, i64 1
  %86 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %85, align 8
  call void %86(%"class.v8::ConvertableToTraceFormat"* nonnull %80) #9
  br label %87

87:                                               ; preds = %82, %70
  %88 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  %90 = icmp eq %"class.v8::ConvertableToTraceFormat"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.v8::ConvertableToTraceFormat"* %89 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %93 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %93, i64 1
  %95 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %94, align 8
  call void %95(%"class.v8::ConvertableToTraceFormat"* nonnull %89) #9
  br label %96

96:                                               ; preds = %91, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #9
  br label %97

97:                                               ; preds = %65, %96
  %98 = bitcast %"class.v8::PropertyCallbackInfo.1245"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %100 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1245", %"class.v8::PropertyCallbackInfo.1245"* %7, i64 0, i32 0
  store i64* %99, i64** %100, align 8
  %101 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 21
  %105 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %107 = load i64, i64* %106, align 8
  call void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"* %105, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.76, i64 0, i64 0), i64 %107, i32 %2) #9
  br label %108

108:                                              ; preds = %97, %103
  call void %34(i32 %2, %"class.v8::PropertyCallbackInfo.1245"* nonnull dereferenceable(8) %7) #9
  %109 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %112 = load i64, i64* %111, align 8
  %113 = trunc i64 %110 to i32
  %114 = trunc i64 %112 to i32
  %115 = icmp eq i32 %113, %114
  %116 = select i1 %115, i64* null, i64* %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  %117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %118 = load i64, i64* %53, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %117, i64 0, i32 0, i32 9, i32 21
  %120 = bitcast %"class.v8::internal::ExternalCallbackScope"** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %122 = inttoptr i64 %121 to i8*
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %124, label %132

124:                                              ; preds = %108
  %125 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %126 = bitcast %"class.v8::TracingController"* %125 to i8* (%"class.v8::TracingController"*, i8*)***
  %127 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %126, align 8
  %128 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %127, i64 2
  %129 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %128, align 8
  %130 = call i8* %129(%"class.v8::TracingController"* %125, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %131 = ptrtoint i8* %130 to i64
  store atomic volatile i64 %131, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %132

132:                                              ; preds = %124, %108
  %133 = phi i8* [ %122, %108 ], [ %130, %124 ]
  %134 = load atomic i8, i8* %133 monotonic, align 1
  %135 = and i8 %134, 5
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %164, label %137

137:                                              ; preds = %132
  %138 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #9
  %139 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %138, i8 0, i64 16, i1 false) #9
  %140 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %141 = bitcast %"class.v8::TracingController"* %140 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %142 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %141, align 8
  %143 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %142, i64 3
  %144 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %143, align 8
  %145 = call i64 %144(%"class.v8::TracingController"* %140, i8 signext 69, i8* %133, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %139, i32 0) #9
  %146 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %147 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %146, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %146, align 8
  %148 = icmp eq %"class.v8::ConvertableToTraceFormat"* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %137
  %150 = bitcast %"class.v8::ConvertableToTraceFormat"* %147 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %151 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %151, i64 1
  %153 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %152, align 8
  call void %153(%"class.v8::ConvertableToTraceFormat"* nonnull %147) #9
  br label %154

154:                                              ; preds = %149, %137
  %155 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %155, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %155, align 16
  %157 = icmp eq %"class.v8::ConvertableToTraceFormat"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.v8::ConvertableToTraceFormat"* %156 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %160 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %160, i64 1
  %162 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %161, align 8
  call void %162(%"class.v8::ConvertableToTraceFormat"* nonnull %156) #9
  br label %163

163:                                              ; preds = %158, %154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #9
  br label %164

164:                                              ; preds = %132, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  store i32 %44, i32* %43, align 8
  br label %165

165:                                              ; preds = %38, %164
  %166 = phi i64* [ %116, %164 ], [ null, %38 ]
  %167 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %168 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %167, align 8
  %169 = icmp eq %"class.v8::internal::RuntimeCallStats"* %168, null
  br i1 %169, label %172, label %170, !prof !4

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %168, %"class.v8::internal::RuntimeCallTimer"* %171) #9
  br label %172

172:                                              ; preds = %165, %170
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  ret i64* %166
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments14CallNamedQueryENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEE(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i64*) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %7 = alloca %"class.v8::PropertyCallbackInfo.1245", align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %9 = bitcast i64* %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #9
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14, !prof !4

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 14, i32 0
  %18 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %18, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallStats"** %15, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallTimer"* %16, i32 187) #9
  br label %20

20:                                               ; preds = %3, %14
  %21 = load i64, i64* %1, align 8
  %22 = add i64 %21, 11
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = and i64 %21, -4294967296
  %28 = zext i32 %24 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 3
  %31 = inttoptr i64 %30 to void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1245"*)**
  %32 = load void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1245"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1245"*)** %31, align 1
  br label %33

33:                                               ; preds = %20, %26
  %34 = phi void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1245"*)* [ %32, %26 ], [ null, %20 ]
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 108
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %40 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %39, align 8
  %41 = call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %40, i64* %1, i64* null, i32 0) #9
  br i1 %41, label %42, label %167

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 22
  %44 = load i32, i32* %43, align 8
  store i32 6, i32* %43, align 8
  %45 = bitcast %"class.v8::internal::ExternalCallbackScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = ptrtoint void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo.1245"*)* %34 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 1
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 21
  %51 = bitcast %"class.v8::internal::ExternalCallbackScope"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.v8::internal::ExternalCallbackScope"** %49 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %6, %"class.v8::internal::ExternalCallbackScope"** %50, align 8
  %54 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %55 = inttoptr i64 %54 to i8*
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %42
  %58 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %59 = bitcast %"class.v8::TracingController"* %58 to i8* (%"class.v8::TracingController"*, i8*)***
  %60 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %59, align 8
  %61 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %60, i64 2
  %62 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %61, align 8
  %63 = call i8* %62(%"class.v8::TracingController"* %58, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %64 = ptrtoint i8* %63 to i64
  store atomic volatile i64 %64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %65

65:                                               ; preds = %57, %42
  %66 = phi i8* [ %55, %42 ], [ %63, %57 ]
  %67 = load atomic i8, i8* %66 monotonic, align 1
  %68 = and i8 %67, 5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %97, label %70

70:                                               ; preds = %65
  %71 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #9
  %72 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 0, i64 16, i1 false) #9
  %73 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %74 = bitcast %"class.v8::TracingController"* %73 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %75 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %75, i64 3
  %77 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %76, align 8
  %78 = call i64 %77(%"class.v8::TracingController"* %73, i8 signext 66, i8* %66, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %72, i32 0) #9
  %79 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %80 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  %81 = icmp eq %"class.v8::ConvertableToTraceFormat"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %70
  %83 = bitcast %"class.v8::ConvertableToTraceFormat"* %80 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %84 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %84, i64 1
  %86 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %85, align 8
  call void %86(%"class.v8::ConvertableToTraceFormat"* nonnull %80) #9
  br label %87

87:                                               ; preds = %82, %70
  %88 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  %90 = icmp eq %"class.v8::ConvertableToTraceFormat"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.v8::ConvertableToTraceFormat"* %89 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %93 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %93, i64 1
  %95 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %94, align 8
  call void %95(%"class.v8::ConvertableToTraceFormat"* nonnull %89) #9
  br label %96

96:                                               ; preds = %91, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #9
  br label %97

97:                                               ; preds = %65, %96
  %98 = bitcast %"class.v8::PropertyCallbackInfo.1245"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %100 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1245", %"class.v8::PropertyCallbackInfo.1245"* %7, i64 0, i32 0
  store i64* %99, i64** %100, align 8
  %101 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 21
  %105 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %107 = load i64, i64* %106, align 8
  %108 = load i64, i64* %2, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %105, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.77, i64 0, i64 0), i64 %107, i64 %108) #9
  br label %109

109:                                              ; preds = %97, %103
  %110 = bitcast i64* %2 to %"class.v8::Name"*
  call void %34(%"class.v8::Name"* %110, %"class.v8::PropertyCallbackInfo.1245"* nonnull dereferenceable(8) %7) #9
  %111 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %114 = load i64, i64* %113, align 8
  %115 = trunc i64 %112 to i32
  %116 = trunc i64 %114 to i32
  %117 = icmp eq i32 %115, %116
  %118 = select i1 %117, i64* null, i64* %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  %119 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %120 = load i64, i64* %53, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %119, i64 0, i32 0, i32 9, i32 21
  %122 = bitcast %"class.v8::internal::ExternalCallbackScope"** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %124 = inttoptr i64 %123 to i8*
  %125 = icmp eq i64 %123, 0
  br i1 %125, label %126, label %134

126:                                              ; preds = %109
  %127 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %128 = bitcast %"class.v8::TracingController"* %127 to i8* (%"class.v8::TracingController"*, i8*)***
  %129 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %128, align 8
  %130 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %129, i64 2
  %131 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %130, align 8
  %132 = call i8* %131(%"class.v8::TracingController"* %127, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %133 = ptrtoint i8* %132 to i64
  store atomic volatile i64 %133, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %134

134:                                              ; preds = %126, %109
  %135 = phi i8* [ %124, %109 ], [ %132, %126 ]
  %136 = load atomic i8, i8* %135 monotonic, align 1
  %137 = and i8 %136, 5
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %166, label %139

139:                                              ; preds = %134
  %140 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #9
  %141 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %140, i8 0, i64 16, i1 false) #9
  %142 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %143 = bitcast %"class.v8::TracingController"* %142 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %144 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %143, align 8
  %145 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %144, i64 3
  %146 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %145, align 8
  %147 = call i64 %146(%"class.v8::TracingController"* %142, i8 signext 69, i8* %135, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %141, i32 0) #9
  %148 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %149 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %148, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %148, align 8
  %150 = icmp eq %"class.v8::ConvertableToTraceFormat"* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %139
  %152 = bitcast %"class.v8::ConvertableToTraceFormat"* %149 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %153 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %153, i64 1
  %155 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %154, align 8
  call void %155(%"class.v8::ConvertableToTraceFormat"* nonnull %149) #9
  br label %156

156:                                              ; preds = %151, %139
  %157 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %157, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %157, align 16
  %159 = icmp eq %"class.v8::ConvertableToTraceFormat"* %158, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %156
  %161 = bitcast %"class.v8::ConvertableToTraceFormat"* %158 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %162 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %162, i64 1
  %164 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %163, align 8
  call void %164(%"class.v8::ConvertableToTraceFormat"* nonnull %158) #9
  br label %165

165:                                              ; preds = %160, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #9
  br label %166

166:                                              ; preds = %134, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  store i32 %44, i32* %43, align 8
  br label %167

167:                                              ; preds = %38, %166
  %168 = phi i64* [ %118, %166 ], [ null, %38 ]
  %169 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %170 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %169, align 8
  %171 = icmp eq %"class.v8::internal::RuntimeCallStats"* %170, null
  br i1 %171, label %174, label %172, !prof !4

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %170, %"class.v8::internal::RuntimeCallTimer"* %173) #9
  br label %174

174:                                              ; preds = %167, %172
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  ret i64* %168
}

declare zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"*, i32*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments17CallIndexedSetterENS0_6HandleINS0_15InterceptorInfoEEEjNS2_INS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i32, i64*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %8 = alloca %"class.v8::PropertyCallbackInfo", align 8
  %9 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %10 = bitcast i64* %9 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 40, i1 false) #9
  %13 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15, !prof !4

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 14, i32 0
  %19 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %19, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %20, %"class.v8::internal::RuntimeCallStats"** %16, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %20, %"class.v8::internal::RuntimeCallTimer"* %17, i32 168) #9
  br label %21

21:                                               ; preds = %4, %15
  %22 = load i64, i64* %1, align 8
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %21
  %28 = and i64 %22, -4294967296
  %29 = zext i32 %25 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 3
  %32 = inttoptr i64 %31 to void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)**
  %33 = load void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)** %32, align 1
  br label %34

34:                                               ; preds = %21, %27
  %35 = phi void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)* [ %33, %27 ], [ null, %21 ]
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 108
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 32
  br i1 %38, label %163, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 22
  %41 = load i32, i32* %40, align 8
  store i32 6, i32* %40, align 8
  %42 = bitcast %"class.v8::internal::ExternalCallbackScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #9
  %43 = ptrtoint void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)* %35 to i64
  %44 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 1
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 2
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 21
  %48 = bitcast %"class.v8::internal::ExternalCallbackScope"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.v8::internal::ExternalCallbackScope"** %46 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %7, %"class.v8::internal::ExternalCallbackScope"** %47, align 8
  %51 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %52 = inttoptr i64 %51 to i8*
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %39
  %55 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %56 = bitcast %"class.v8::TracingController"* %55 to i8* (%"class.v8::TracingController"*, i8*)***
  %57 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %57, i64 2
  %59 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %58, align 8
  %60 = call i8* %59(%"class.v8::TracingController"* %55, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %61 = ptrtoint i8* %60 to i64
  store atomic volatile i64 %61, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %62

62:                                               ; preds = %54, %39
  %63 = phi i8* [ %52, %39 ], [ %60, %54 ]
  %64 = load atomic i8, i8* %63 monotonic, align 1
  %65 = and i8 %64, 5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %94, label %67

67:                                               ; preds = %62
  %68 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  %69 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 0, i64 16, i1 false) #9
  %70 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %71 = bitcast %"class.v8::TracingController"* %70 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %72 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %72, i64 3
  %74 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %73, align 8
  %75 = call i64 %74(%"class.v8::TracingController"* %70, i8 signext 66, i8* %63, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %69, i32 0) #9
  %76 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %77 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %76, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %76, align 8
  %78 = icmp eq %"class.v8::ConvertableToTraceFormat"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %67
  %80 = bitcast %"class.v8::ConvertableToTraceFormat"* %77 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %81 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %81, i64 1
  %83 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %82, align 8
  call void %83(%"class.v8::ConvertableToTraceFormat"* nonnull %77) #9
  br label %84

84:                                               ; preds = %79, %67
  %85 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %85, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %85, align 16
  %87 = icmp eq %"class.v8::ConvertableToTraceFormat"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = bitcast %"class.v8::ConvertableToTraceFormat"* %86 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %90 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %90, i64 1
  %92 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %91, align 8
  call void %92(%"class.v8::ConvertableToTraceFormat"* nonnull %86) #9
  br label %93

93:                                               ; preds = %88, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  br label %94

94:                                               ; preds = %62, %93
  %95 = bitcast %"class.v8::PropertyCallbackInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #9
  %96 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %97 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %8, i64 0, i32 0
  store i64* %96, i64** %97, align 8
  %98 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 21
  %102 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %104 = load i64, i64* %103, align 8
  call void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"* %102, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.78, i64 0, i64 0), i64 %104, i32 %2) #9
  br label %105

105:                                              ; preds = %94, %100
  %106 = bitcast i64* %3 to %"class.v8::Value"*
  call void %35(i32 %2, %"class.v8::Value"* %106, %"class.v8::PropertyCallbackInfo"* nonnull dereferenceable(8) %8) #9
  %107 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 5
  %110 = load i64, i64* %109, align 8
  %111 = trunc i64 %108 to i32
  %112 = trunc i64 %110 to i32
  %113 = icmp eq i32 %111, %112
  %114 = select i1 %113, i64* null, i64* %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #9
  %115 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %44, align 8
  %116 = load i64, i64* %50, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 0, i32 9, i32 21
  %118 = bitcast %"class.v8::internal::ExternalCallbackScope"** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %120 = inttoptr i64 %119 to i8*
  %121 = icmp eq i64 %119, 0
  br i1 %121, label %122, label %130

122:                                              ; preds = %105
  %123 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %124 = bitcast %"class.v8::TracingController"* %123 to i8* (%"class.v8::TracingController"*, i8*)***
  %125 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %125, i64 2
  %127 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %126, align 8
  %128 = call i8* %127(%"class.v8::TracingController"* %123, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %129 = ptrtoint i8* %128 to i64
  store atomic volatile i64 %129, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %130

130:                                              ; preds = %122, %105
  %131 = phi i8* [ %120, %105 ], [ %128, %122 ]
  %132 = load atomic i8, i8* %131 monotonic, align 1
  %133 = and i8 %132, 5
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %162, label %135

135:                                              ; preds = %130
  %136 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #9
  %137 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %136, i8 0, i64 16, i1 false) #9
  %138 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %139 = bitcast %"class.v8::TracingController"* %138 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %140 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %139, align 8
  %141 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %140, i64 3
  %142 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %141, align 8
  %143 = call i64 %142(%"class.v8::TracingController"* %138, i8 signext 69, i8* %131, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %137, i32 0) #9
  %144 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %145 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %144, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %144, align 8
  %146 = icmp eq %"class.v8::ConvertableToTraceFormat"* %145, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %135
  %148 = bitcast %"class.v8::ConvertableToTraceFormat"* %145 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %149 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %149, i64 1
  %151 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %150, align 8
  call void %151(%"class.v8::ConvertableToTraceFormat"* nonnull %145) #9
  br label %152

152:                                              ; preds = %147, %135
  %153 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %153, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %153, align 16
  %155 = icmp eq %"class.v8::ConvertableToTraceFormat"* %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %152
  %157 = bitcast %"class.v8::ConvertableToTraceFormat"* %154 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %158 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %158, i64 1
  %160 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %159, align 8
  call void %160(%"class.v8::ConvertableToTraceFormat"* nonnull %154) #9
  br label %161

161:                                              ; preds = %156, %152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #9
  br label %162

162:                                              ; preds = %130, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #9
  store i32 %41, i32* %40, align 8
  br label %163

163:                                              ; preds = %34, %162
  %164 = phi i64* [ %114, %162 ], [ null, %34 ]
  %165 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %166 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %165, align 8
  %167 = icmp eq %"class.v8::internal::RuntimeCallStats"* %166, null
  br i1 %167, label %170, label %168, !prof !4

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %166, %"class.v8::internal::RuntimeCallTimer"* %169) #9
  br label %170

170:                                              ; preds = %163, %168
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  ret i64* %164
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments15CallNamedSetterENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEENS2_INS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i64*, i64*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca [2 x %"class.std::__1::unique_ptr.1237"], align 16
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %8 = alloca %"class.v8::PropertyCallbackInfo", align 8
  %9 = load i64, i64* %1, align 8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %4
  %15 = and i64 %9, -4294967296
  %16 = zext i32 %12 to i64
  %17 = or i64 %15, %16
  %18 = add i64 %17, 3
  %19 = inttoptr i64 %18 to void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)**
  %20 = load void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)** %19, align 1
  br label %21

21:                                               ; preds = %4, %14
  %22 = phi void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)* [ %20, %14 ], [ null, %4 ]
  %23 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %24 = bitcast i64* %23 to %"class.v8::internal::Isolate"**
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 40, i1 false) #9
  %27 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1225", %"struct.std::__1::atomic.1225"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %35, label %29, !prof !4

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 14, i32 0
  %33 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %33, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %34, %"class.v8::internal::RuntimeCallStats"** %30, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %34, %"class.v8::internal::RuntimeCallTimer"* %31, i32 188) #9
  br label %35

35:                                               ; preds = %21, %29
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 108
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 32
  br i1 %38, label %165, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 9, i32 22
  %41 = load i32, i32* %40, align 8
  store i32 6, i32* %40, align 8
  %42 = bitcast %"class.v8::internal::ExternalCallbackScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #9
  %43 = ptrtoint void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)* %22 to i64
  %44 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %25, %"class.v8::internal::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 1
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 2
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 9, i32 21
  %48 = bitcast %"class.v8::internal::ExternalCallbackScope"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.v8::internal::ExternalCallbackScope"** %46 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %7, %"class.v8::internal::ExternalCallbackScope"** %47, align 8
  %51 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %52 = inttoptr i64 %51 to i8*
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %39
  %55 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %56 = bitcast %"class.v8::TracingController"* %55 to i8* (%"class.v8::TracingController"*, i8*)***
  %57 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %57, i64 2
  %59 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %58, align 8
  %60 = call i8* %59(%"class.v8::TracingController"* %55, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %61 = ptrtoint i8* %60 to i64
  store atomic volatile i64 %61, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %62

62:                                               ; preds = %54, %39
  %63 = phi i8* [ %52, %39 ], [ %60, %54 ]
  %64 = load atomic i8, i8* %63 monotonic, align 1
  %65 = and i8 %64, 5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %94, label %67

67:                                               ; preds = %62
  %68 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  %69 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 0, i64 16, i1 false) #9
  %70 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %71 = bitcast %"class.v8::TracingController"* %70 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %72 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %72, i64 3
  %74 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %73, align 8
  %75 = call i64 %74(%"class.v8::TracingController"* %70, i8 signext 66, i8* %63, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %69, i32 0) #9
  %76 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %77 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %76, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %76, align 8
  %78 = icmp eq %"class.v8::ConvertableToTraceFormat"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %67
  %80 = bitcast %"class.v8::ConvertableToTraceFormat"* %77 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %81 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %81, i64 1
  %83 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %82, align 8
  call void %83(%"class.v8::ConvertableToTraceFormat"* nonnull %77) #9
  br label %84

84:                                               ; preds = %79, %67
  %85 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %85, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %85, align 16
  %87 = icmp eq %"class.v8::ConvertableToTraceFormat"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = bitcast %"class.v8::ConvertableToTraceFormat"* %86 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %90 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %90, i64 1
  %92 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %91, align 8
  call void %92(%"class.v8::ConvertableToTraceFormat"* nonnull %86) #9
  br label %93

93:                                               ; preds = %88, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  br label %94

94:                                               ; preds = %62, %93
  %95 = bitcast %"class.v8::PropertyCallbackInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #9
  %96 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %97 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %8, i64 0, i32 0
  store i64* %96, i64** %97, align 8
  %98 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !5
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 21
  %102 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %104 = load i64, i64* %103, align 8
  %105 = load i64, i64* %2, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %102, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.79, i64 0, i64 0), i64 %104, i64 %105) #9
  br label %106

106:                                              ; preds = %94, %100
  %107 = bitcast i64* %2 to %"class.v8::Name"*
  %108 = bitcast i64* %3 to %"class.v8::Value"*
  call void %22(%"class.v8::Name"* %107, %"class.v8::Value"* %108, %"class.v8::PropertyCallbackInfo"* nonnull dereferenceable(8) %8) #9
  %109 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 5
  %112 = load i64, i64* %111, align 8
  %113 = trunc i64 %110 to i32
  %114 = trunc i64 %112 to i32
  %115 = icmp eq i32 %113, %114
  %116 = select i1 %115, i64* null, i64* %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #9
  %117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %44, align 8
  %118 = load i64, i64* %50, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %117, i64 0, i32 0, i32 9, i32 21
  %120 = bitcast %"class.v8::internal::ExternalCallbackScope"** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %122 = inttoptr i64 %121 to i8*
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %124, label %132

124:                                              ; preds = %106
  %125 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %126 = bitcast %"class.v8::TracingController"* %125 to i8* (%"class.v8::TracingController"*, i8*)***
  %127 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %126, align 8
  %128 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %127, i64 2
  %129 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %128, align 8
  %130 = call i8* %129(%"class.v8::TracingController"* %125, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %131 = ptrtoint i8* %130 to i64
  store atomic volatile i64 %131, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %132

132:                                              ; preds = %124, %106
  %133 = phi i8* [ %122, %106 ], [ %130, %124 ]
  %134 = load atomic i8, i8* %133 monotonic, align 1
  %135 = and i8 %134, 5
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %164, label %137

137:                                              ; preds = %132
  %138 = bitcast [2 x %"class.std::__1::unique_ptr.1237"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #9
  %139 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %138, i8 0, i64 16, i1 false) #9
  %140 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #9
  %141 = bitcast %"class.v8::TracingController"* %140 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)***
  %142 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*** %141, align 8
  %143 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %142, i64 3
  %144 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1237"*, i32)** %143, align 8
  %145 = call i64 %144(%"class.v8::TracingController"* %140, i8 signext 69, i8* %133, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1237"* nonnull %139, i32 0) #9
  %146 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %147 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %146, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %146, align 8
  %148 = icmp eq %"class.v8::ConvertableToTraceFormat"* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %137
  %150 = bitcast %"class.v8::ConvertableToTraceFormat"* %147 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %151 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %151, i64 1
  %153 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %152, align 8
  call void %153(%"class.v8::ConvertableToTraceFormat"* nonnull %147) #9
  br label %154

154:                                              ; preds = %149, %137
  %155 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1237"], [2 x %"class.std::__1::unique_ptr.1237"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %155, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %155, align 16
  %157 = icmp eq %"class.v8::ConvertableToTraceFormat"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.v8::ConvertableToTraceFormat"* %156 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %160 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %160, i64 1
  %162 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %161, align 8
  call void %162(%"class.v8::ConvertableToTraceFormat"* nonnull %156) #9
  br label %163

163:                                              ; preds = %158, %154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #9
  br label %164

164:                                              ; preds = %132, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #9
  store i32 %41, i32* %40, align 8
  br label %165

165:                                              ; preds = %35, %164
  %166 = phi i64* [ %116, %164 ], [ null, %35 ]
  %167 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %168 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %167, align 8
  %169 = icmp eq %"class.v8::internal::RuntimeCallStats"* %168, null
  br i1 %169, label %172, label %170, !prof !4

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %168, %"class.v8::internal::RuntimeCallTimer"* %171) #9
  br label %172

172:                                              ; preds = %165, %170
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #9
  ret i64* %166
}

declare void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"*, i8*, i64, %"class.v8::internal::StringStream::FmtElm"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal9ScopeInfo15HasFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #2

declare i64 @_ZNK2v88internal9ScopeInfo12FunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #9
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #9
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #9
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #9
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #9
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #9
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #9
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #9
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #8

declare i64* @_ZN2v88internal7Factory24CopyPropertyArrayAndGrowENS0_6HandleINS0_13PropertyArrayEEEi(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal3Map22InstancesNeedRewritingES1_iiiPi(%"class.v8::internal::Map"*, i64, i32, i32, i32, i32*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object13NewStorageForEPNS0_7IsolateENS0_6HandleIS1_EENS0_14RepresentationE(%"class.v8::internal::Isolate"*, i64*, i8) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"*, i64, i32, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory17NewNameDictionaryEi(%"class.v8::internal::Factory"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"*, i64, i64, i64, i32) local_unnamed_addr #4 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = mul i64 %1, 51539607552
  %9 = add i64 %8, 68719476736
  %10 = ashr exact i64 %9, 32
  %11 = add nsw i64 %10, -1
  %12 = add i64 %7, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %2 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  %15 = load i64, i64* %6, align 8
  %16 = add i64 %15, %11
  %17 = and i64 %2, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %32, label %19

19:                                               ; preds = %5
  %20 = and i64 %15, -262144
  %21 = or i64 %20, 8
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 262144
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = or i64 %20, 16
  %28 = inttoptr i64 %27 to %"class.v8::internal::Heap"**
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %29, i64 %15, i64 %16, i64 %2) #9
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, %11
  br label %32

32:                                               ; preds = %26, %19, %5
  %33 = phi i64 [ %16, %5 ], [ %16, %19 ], [ %31, %26 ]
  %34 = phi i64 [ %15, %5 ], [ %15, %19 ], [ %30, %26 ]
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %32
  %42 = and i64 %34, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %34, i64 %33, i64 %2) #9
  %49 = load i64, i64* %6, align 8
  br label %50

50:                                               ; preds = %32, %41, %48
  %51 = phi i64 [ %34, %32 ], [ %34, %41 ], [ %49, %48 ]
  %52 = shl i32 %4, 1
  %53 = or i64 %10, 3
  %54 = add i64 %51, %53
  %55 = inttoptr i64 %54 to i32*
  store atomic volatile i32 %52, i32* %55 monotonic, align 4
  %56 = load i64, i64* %6, align 8
  %57 = ashr exact i64 %8, 32
  %58 = add nsw i64 %57, 23
  %59 = add i64 %56, %58
  %60 = inttoptr i64 %59 to i32*
  %61 = trunc i64 %3 to i32
  store atomic volatile i32 %61, i32* %60 monotonic, align 4
  %62 = load i64, i64* %6, align 8
  %63 = add i64 %62, %58
  %64 = and i64 %3, 1
  %65 = icmp ne i64 %64, 0
  %66 = icmp ne i32 %61, 3
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %99

68:                                               ; preds = %50
  %69 = and i64 %62, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 262144
  %74 = icmp eq i64 %73, 0
  %75 = and i64 %3, -3
  br i1 %74, label %82, label %76

76:                                               ; preds = %68
  %77 = or i64 %69, 16
  %78 = inttoptr i64 %77 to %"class.v8::internal::Heap"**
  %79 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %78, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %79, i64 %62, i64 %63, i64 %75) #9
  %80 = load i64, i64* %6, align 8
  %81 = add i64 %80, %58
  br label %82

82:                                               ; preds = %76, %68
  %83 = phi i64 [ %81, %76 ], [ %63, %68 ]
  %84 = phi i64 [ %80, %76 ], [ %62, %68 ]
  %85 = and i64 %3, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 24
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %82
  %92 = and i64 %84, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 24
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %91
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %84, i64 %83, i64 %75) #9
  br label %99

99:                                               ; preds = %50, %82, %91, %98
  ret void
}

declare void @_ZN2v88internal3Map22SetInstanceDescriptorsEPNS0_7IsolateENS0_15DescriptorArrayEi(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable21PostGarbageCollectionEv(%"class.v8::internal::Relocatable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD2Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD0Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Relocatable"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE(%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_128TestPropertiesIntegrityLevelENS0_8JSObjectENS0_18PropertyAttributesE(i64, i32) unnamed_addr #13 {
  %3 = and i64 %0, -4294967296
  %4 = add i64 %0, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = add i64 %8, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2097152
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %106

14:                                               ; preds = %2
  %15 = load atomic i32, i32* %5 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %3, %16
  %18 = add i64 %17, 23
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %3, %21
  %23 = add i64 %17, 11
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = lshr i32 %25, 10
  %27 = and i32 %26, 1023
  %28 = zext i32 %27 to i64
  %29 = icmp eq i32 %27, 0
  br i1 %29, label %264, label %30

30:                                               ; preds = %14
  %31 = add i64 %22, -1
  %32 = icmp eq i32 %1, 5
  br i1 %32, label %68, label %33

33:                                               ; preds = %30, %65
  %34 = phi i64 [ %66, %65 ], [ 0, %30 ]
  %35 = mul nuw nsw i64 %34, 51539607552
  %36 = add nuw nsw i64 %35, 68719476736
  %37 = lshr exact i64 %36, 32
  %38 = add i64 %37, %31
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %3, %41
  %43 = add i64 %42, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %3, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp eq i16 %50, 64
  br i1 %51, label %52, label %58

52:                                               ; preds = %33
  %53 = add i64 %42, 7
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %52, %33
  %59 = or i64 %37, 3
  %60 = add i64 %59, %22
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 64
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %264, label %65

65:                                               ; preds = %58, %52
  %66 = add nuw nsw i64 %34, 1
  %67 = icmp eq i64 %66, %28
  br i1 %67, label %264, label %33

68:                                               ; preds = %30, %103
  %69 = phi i64 [ %104, %103 ], [ 0, %30 ]
  %70 = mul nuw nsw i64 %69, 51539607552
  %71 = add nuw nsw i64 %70, 68719476736
  %72 = lshr exact i64 %71, 32
  %73 = add i64 %72, %31
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %3, %76
  %78 = add i64 %77, -1
  %79 = inttoptr i64 %78 to i32*
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %3, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = icmp eq i16 %85, 64
  br i1 %86, label %87, label %93

87:                                               ; preds = %68
  %88 = add i64 %77, 7
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %103

93:                                               ; preds = %87, %68
  %94 = or i64 %72, 3
  %95 = add i64 %94, %22
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 64
  %99 = icmp ne i32 %98, 0
  %100 = and i32 %97, 18
  %101 = icmp ne i32 %100, 0
  %102 = and i1 %99, %101
  br i1 %102, label %103, label %264

103:                                              ; preds = %93, %87
  %104 = add nuw nsw i64 %69, 1
  %105 = icmp eq i64 %104, %28
  br i1 %105, label %264, label %68

106:                                              ; preds = %2
  %107 = add i64 %0, 3
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = and i64 %110, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %106
  %114 = or i64 %3, %110
  %115 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br label %137

116:                                              ; preds = %106
  %117 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %118 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %117, null
  br i1 %118, label %125, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %117, i64 0, i32 0, i32 1
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %117, i64 0, i32 1, i64 0
  br label %133

125:                                              ; preds = %119, %116
  %126 = and i64 %0, -262144
  %127 = or i64 %126, 16
  %128 = inttoptr i64 %127 to i64*
  %129 = load i64, i64* %128, align 16
  %130 = add i64 %129, -41416
  %131 = inttoptr i64 %130 to %"class.v8::internal::Isolate"*
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %131, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %133

133:                                              ; preds = %125, %123
  %134 = phi i64* [ %132, %125 ], [ %124, %123 ]
  %135 = getelementptr inbounds i64, i64* %134, i64 115
  %136 = load i64, i64* %135, align 8
  br label %137

137:                                              ; preds = %113, %133
  %138 = phi %"class.v8::internal::SoleReadOnlyHeap"* [ %117, %133 ], [ %115, %113 ]
  %139 = phi i64 [ %136, %133 ], [ %114, %113 ]
  %140 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %138, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %138, i64 0, i32 0, i32 1
  %143 = load i8, i8* %142, align 8, !range !5
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %138, i64 0, i32 1, i64 0
  br label %155

147:                                              ; preds = %141, %137
  %148 = and i64 %0, -262144
  %149 = or i64 %148, 16
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 16
  %152 = add i64 %151, -41416
  %153 = inttoptr i64 %152 to %"class.v8::internal::Isolate"*
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %153, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %155

155:                                              ; preds = %145, %147
  %156 = phi i64* [ %154, %147 ], [ %146, %145 ]
  %157 = add i64 %139, 15
  %158 = inttoptr i64 %157 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = ashr i32 %159, 1
  %161 = sext i32 %160 to i64
  %162 = icmp eq i32 %160, 0
  br i1 %162, label %264, label %163

163:                                              ; preds = %155
  %164 = and i64 %139, -4294967296
  %165 = add i64 %139, 7
  %166 = getelementptr inbounds i64, i64* %156, i64 4
  %167 = load i64, i64* %166, align 8
  %168 = trunc i64 %167 to i32
  %169 = getelementptr inbounds i64, i64* %156, i64 5
  %170 = icmp eq i32 %1, 5
  br i1 %170, label %216, label %171

171:                                              ; preds = %163, %213
  %172 = phi i64 [ %214, %213 ], [ 0, %163 ]
  %173 = mul i64 %172, 51539607552
  %174 = add i64 %173, 85899345920
  %175 = ashr exact i64 %174, 32
  %176 = add i64 %175, %165
  %177 = inttoptr i64 %176 to i32*
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = zext i32 %178 to i64
  %180 = or i64 %164, %179
  %181 = icmp eq i32 %178, %168
  br i1 %181, label %213, label %182

182:                                              ; preds = %171
  %183 = load i64, i64* %169, align 8
  %184 = trunc i64 %183 to i32
  %185 = icmp eq i32 %178, %184
  br i1 %185, label %213, label %186

186:                                              ; preds = %182
  %187 = and i64 %179, 1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %205, label %189

189:                                              ; preds = %186
  %190 = add i64 %180, -1
  %191 = inttoptr i64 %190 to i32*
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = zext i32 %192 to i64
  %194 = or i64 %164, %193
  %195 = add i64 %194, 7
  %196 = inttoptr i64 %195 to i16*
  %197 = load atomic i16, i16* %196 monotonic, align 2
  %198 = icmp eq i16 %197, 64
  br i1 %198, label %199, label %205

199:                                              ; preds = %189
  %200 = add i64 %180, 7
  %201 = inttoptr i64 %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %213

205:                                              ; preds = %199, %189, %186
  %206 = add i64 %173, 120259084288
  %207 = ashr exact i64 %206, 32
  %208 = add i64 %207, %165
  %209 = inttoptr i64 %208 to i32*
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 64
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %264, label %213

213:                                              ; preds = %205, %199, %182, %171
  %214 = add i64 %172, 1
  %215 = icmp eq i64 %214, %161
  br i1 %215, label %264, label %171

216:                                              ; preds = %163, %261
  %217 = phi i64 [ %262, %261 ], [ 0, %163 ]
  %218 = mul i64 %217, 51539607552
  %219 = add i64 %218, 85899345920
  %220 = ashr exact i64 %219, 32
  %221 = add i64 %220, %165
  %222 = inttoptr i64 %221 to i32*
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = zext i32 %223 to i64
  %225 = or i64 %164, %224
  %226 = icmp eq i32 %223, %168
  br i1 %226, label %261, label %227

227:                                              ; preds = %216
  %228 = load i64, i64* %169, align 8
  %229 = trunc i64 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %261, label %231

231:                                              ; preds = %227
  %232 = and i64 %224, 1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %250, label %234

234:                                              ; preds = %231
  %235 = add i64 %225, -1
  %236 = inttoptr i64 %235 to i32*
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = zext i32 %237 to i64
  %239 = or i64 %164, %238
  %240 = add i64 %239, 7
  %241 = inttoptr i64 %240 to i16*
  %242 = load atomic i16, i16* %241 monotonic, align 2
  %243 = icmp eq i16 %242, 64
  br i1 %243, label %244, label %250

244:                                              ; preds = %234
  %245 = add i64 %225, 7
  %246 = inttoptr i64 %245 to i32*
  %247 = load i32, i32* %246, align 4
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %261

250:                                              ; preds = %244, %234, %231
  %251 = add i64 %218, 120259084288
  %252 = ashr exact i64 %251, 32
  %253 = add i64 %252, %165
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 64
  %257 = icmp ne i32 %256, 0
  %258 = and i32 %255, 18
  %259 = icmp ne i32 %258, 0
  %260 = and i1 %257, %259
  br i1 %260, label %261, label %264

261:                                              ; preds = %250, %244, %227, %216
  %262 = add i64 %217, 1
  %263 = icmp eq i64 %262, %161
  br i1 %263, label %264, label %216

264:                                              ; preds = %213, %205, %261, %250, %65, %58, %103, %93, %155, %14
  %265 = phi i1 [ true, %14 ], [ true, %155 ], [ false, %93 ], [ true, %103 ], [ false, %58 ], [ true, %65 ], [ false, %250 ], [ true, %261 ], [ false, %205 ], [ true, %213 ]
  ret i1 %265
}

declare i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"*) local_unnamed_addr #2

declare i64 @_ZNK2v88internal12JSTypedArray12element_sizeEv(%"class.v8::internal::JSTypedArray"*) local_unnamed_addr #2

declare { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal13JSArrayBuffer15GetBackingStoreEv(%"class.v8::internal::JSArrayBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #8

declare i64 @_ZNK2v88internal3Map24GetPrototypeChainRootMapEPNS0_7IsolateE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal7Isolate37UpdateNoElementsProtectorOnSetElementENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

declare i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"*, i64*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #15
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #9
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #12

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal19TransitionsAccessor13SearchSpecialENS0_6SymbolE(%"class.v8::internal::TransitionsAccessor"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal19TransitionsAccessor22CanHaveMoreTransitionsEv(%"class.v8::internal::TransitionsAccessor"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map24CopyForPreventExtensionsEPNS0_7IsolateENS0_6HandleIS1_EENS0_18PropertyAttributesENS4_INS0_6SymbolEEEPKcb(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i8*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_16GlobalDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::DependentCode", align 8
  %6 = load i64, i64* %2, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = sext i32 %10 to i64
  %12 = icmp eq i32 %10, 0
  br i1 %12, label %135, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds i64, i64* %1, i64 4
  %15 = getelementptr inbounds i64, i64* %1, i64 5
  %16 = and i32 %3, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i32 %3, -2
  %19 = bitcast %"class.v8::internal::DependentCode"* %5 to i8*
  %20 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %17, label %21, label %23

21:                                               ; preds = %13
  %22 = shl i32 %3, 3
  br label %136

23:                                               ; preds = %13, %133
  %24 = phi i64 [ %134, %133 ], [ %6, %13 ]
  %25 = phi i64 [ %131, %133 ], [ 0, %13 ]
  %26 = and i64 %24, -4294967296
  %27 = trunc i64 %25 to i32
  %28 = shl i32 %27, 2
  %29 = add i32 %28, 20
  %30 = sext i32 %29 to i64
  %31 = add nsw i64 %30, 7
  %32 = add i64 %31, %24
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %26, %35
  %37 = load i64, i64* %14, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %34, %38
  br i1 %39, label %130, label %40

40:                                               ; preds = %23
  %41 = load i64, i64* %15, align 8
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %34, %42
  br i1 %43, label %130, label %44

44:                                               ; preds = %40
  %45 = add i64 %36, 3
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %26, %48
  %50 = and i64 %48, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %44
  %53 = add i64 %49, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %26, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = icmp eq i16 %60, 64
  br i1 %61, label %62, label %68

62:                                               ; preds = %52
  %63 = add i64 %49, 7
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %130

68:                                               ; preds = %62, %52, %44
  %69 = load atomic i32, i32* %33 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %26, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = ashr i32 %74, 1
  %76 = and i32 %74, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %100, label %78

78:                                               ; preds = %68
  %79 = load atomic i32, i32* %33 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %26, %80
  %82 = add i64 %81, 11
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %78
  %89 = or i64 %26, %85
  %90 = add i64 %89, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %26, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = icmp eq i16 %97, 87
  %99 = select i1 %98, i32 %18, i32 %3
  br label %100

100:                                              ; preds = %68, %88, %78
  %101 = phi i32 [ %3, %68 ], [ %3, %78 ], [ %99, %88 ]
  %102 = and i32 %75, -57
  %103 = shl i32 %101, 3
  %104 = and i32 %75, 56
  %105 = or i32 %103, %104
  %106 = or i32 %105, %102
  %107 = load atomic i32, i32* %33 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %26, %108
  %110 = add i64 %109, 7
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = lshr i32 %112, 1
  %114 = xor i32 %113, %106
  %115 = and i32 %114, 192
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %203, !prof !4

117:                                              ; preds = %100
  %118 = shl i32 %106, 1
  store atomic volatile i32 %118, i32* %111 release, align 4
  %119 = and i32 %112, 16
  %120 = icmp eq i32 %119, 0
  %121 = and i32 %105, 8
  %122 = icmp ne i32 %121, 0
  %123 = and i1 %122, %120
  br i1 %123, label %124, label %130

124:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %125 = add i64 %109, 15
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %26, %128
  store i64 %129, i64* %20, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %5, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %130

130:                                              ; preds = %124, %117, %62, %40, %23
  %131 = add i64 %25, 1
  %132 = icmp eq i64 %131, %11
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  %134 = load i64, i64* %2, align 8
  br label %23

135:                                              ; preds = %130, %217, %4
  ret void

136:                                              ; preds = %220, %21
  %137 = phi i64 [ %221, %220 ], [ %6, %21 ]
  %138 = phi i64 [ %218, %220 ], [ 0, %21 ]
  %139 = and i64 %137, -4294967296
  %140 = trunc i64 %138 to i32
  %141 = shl i32 %140, 2
  %142 = add i32 %141, 20
  %143 = sext i32 %142 to i64
  %144 = add nsw i64 %143, 7
  %145 = add i64 %144, %137
  %146 = inttoptr i64 %145 to i32*
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = zext i32 %147 to i64
  %149 = or i64 %139, %148
  %150 = load i64, i64* %14, align 8
  %151 = trunc i64 %150 to i32
  %152 = icmp eq i32 %147, %151
  br i1 %152, label %217, label %153

153:                                              ; preds = %136
  %154 = load i64, i64* %15, align 8
  %155 = trunc i64 %154 to i32
  %156 = icmp eq i32 %147, %155
  br i1 %156, label %217, label %157

157:                                              ; preds = %153
  %158 = add i64 %149, 3
  %159 = inttoptr i64 %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i64
  %162 = or i64 %139, %161
  %163 = and i64 %161, 1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %157
  %166 = add i64 %162, -1
  %167 = inttoptr i64 %166 to i32*
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = zext i32 %168 to i64
  %170 = or i64 %139, %169
  %171 = add i64 %170, 7
  %172 = inttoptr i64 %171 to i16*
  %173 = load atomic i16, i16* %172 monotonic, align 2
  %174 = icmp eq i16 %173, 64
  br i1 %174, label %175, label %181

175:                                              ; preds = %165
  %176 = add i64 %162, 7
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %217

181:                                              ; preds = %157, %165, %175
  %182 = load atomic i32, i32* %146 monotonic, align 4
  %183 = zext i32 %182 to i64
  %184 = or i64 %139, %183
  %185 = add i64 %184, 7
  %186 = inttoptr i64 %185 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = ashr i32 %187, 1
  %189 = and i32 %188, -57
  %190 = and i32 %188, 56
  %191 = or i32 %22, %190
  %192 = or i32 %191, %189
  %193 = load atomic i32, i32* %146 monotonic, align 4
  %194 = zext i32 %193 to i64
  %195 = or i64 %139, %194
  %196 = add i64 %195, 7
  %197 = inttoptr i64 %196 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = lshr i32 %198, 1
  %200 = xor i32 %199, %192
  %201 = and i32 %200, 192
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %204, label %203, !prof !4

203:                                              ; preds = %100, %181
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.100, i64 0, i64 0)) #14
  unreachable

204:                                              ; preds = %181
  %205 = shl i32 %192, 1
  store atomic volatile i32 %205, i32* %197 release, align 4
  %206 = and i32 %198, 16
  %207 = icmp eq i32 %206, 0
  %208 = and i32 %191, 8
  %209 = icmp ne i32 %208, 0
  %210 = and i1 %209, %207
  br i1 %210, label %211, label %217

211:                                              ; preds = %204
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %212 = add i64 %195, 15
  %213 = inttoptr i64 %212 to i32*
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = or i64 %139, %215
  store i64 %216, i64* %20, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %5, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %217

217:                                              ; preds = %175, %136, %153, %211, %204
  %218 = add i64 %138, 1
  %219 = icmp eq i64 %218, %11
  br i1 %219, label %135, label %220

220:                                              ; preds = %217
  %221 = load i64, i64* %2, align 8
  br label %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject27ApplyAttributesToDictionaryINS0_14NameDictionaryEEEvPNS0_7IsolateENS0_13ReadOnlyRootsENS0_6HandleIT_EENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = load i64, i64* %2, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = sext i32 %9 to i64
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %98, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds i64, i64* %1, i64 4
  %14 = getelementptr inbounds i64, i64* %1, i64 5
  %15 = and i32 %3, 1
  %16 = icmp eq i32 %15, 0
  %17 = and i32 %3, -2
  br i1 %16, label %18, label %20

18:                                               ; preds = %12
  %19 = shl i32 %3, 4
  br label %99

20:                                               ; preds = %12, %96
  %21 = phi i64 [ %97, %96 ], [ %5, %12 ]
  %22 = phi i64 [ %94, %96 ], [ 0, %12 ]
  %23 = and i64 %21, -4294967296
  %24 = mul i64 %22, 51539607552
  %25 = add i64 %24, 85899345920
  %26 = ashr exact i64 %25, 32
  %27 = add i64 %21, 7
  %28 = add i64 %27, %26
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %23, %31
  %33 = load i64, i64* %13, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %30, %34
  br i1 %35, label %93, label %36

36:                                               ; preds = %20
  %37 = load i64, i64* %14, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %30, %38
  br i1 %39, label %93, label %40

40:                                               ; preds = %36
  %41 = and i64 %31, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %59, label %43

43:                                               ; preds = %40
  %44 = add i64 %32, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %23, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = icmp eq i16 %51, 64
  br i1 %52, label %53, label %59

53:                                               ; preds = %43
  %54 = add i64 %32, 7
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %93

59:                                               ; preds = %53, %43, %40
  %60 = add i64 %24, 120259084288
  %61 = ashr exact i64 %60, 32
  %62 = add i64 %27, %61
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, -2
  %66 = and i32 %64, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %89, label %68

68:                                               ; preds = %59
  %69 = add i64 %24, 103079215104
  %70 = ashr exact i64 %69, 32
  %71 = add i64 %27, %70
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %89, label %77

77:                                               ; preds = %68
  %78 = or i64 %23, %74
  %79 = add i64 %78, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %23, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 87
  %88 = select i1 %87, i32 %17, i32 %3
  br label %89

89:                                               ; preds = %59, %77, %68
  %90 = phi i32 [ %3, %59 ], [ %3, %68 ], [ %88, %77 ]
  %91 = shl i32 %90, 4
  %92 = or i32 %65, %91
  store atomic volatile i32 %92, i32* %63 monotonic, align 4
  br label %93

93:                                               ; preds = %89, %53, %36, %20
  %94 = add i64 %22, 1
  %95 = icmp eq i64 %94, %10
  br i1 %95, label %98, label %96

96:                                               ; preds = %93
  %97 = load i64, i64* %2, align 8
  br label %20

98:                                               ; preds = %93, %146, %4
  ret void

99:                                               ; preds = %149, %18
  %100 = phi i64 [ %150, %149 ], [ %5, %18 ]
  %101 = phi i64 [ %147, %149 ], [ 0, %18 ]
  %102 = and i64 %100, -4294967296
  %103 = mul i64 %101, 51539607552
  %104 = add i64 %103, 85899345920
  %105 = ashr exact i64 %104, 32
  %106 = add i64 %100, 7
  %107 = add i64 %106, %105
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %102, %110
  %112 = load i64, i64* %13, align 8
  %113 = trunc i64 %112 to i32
  %114 = icmp eq i32 %109, %113
  br i1 %114, label %146, label %115

115:                                              ; preds = %99
  %116 = load i64, i64* %14, align 8
  %117 = trunc i64 %116 to i32
  %118 = icmp eq i32 %109, %117
  br i1 %118, label %146, label %119

119:                                              ; preds = %115
  %120 = and i64 %110, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119
  %123 = add i64 %111, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %102, %126
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i16*
  %130 = load atomic i16, i16* %129 monotonic, align 2
  %131 = icmp eq i16 %130, 64
  br i1 %131, label %132, label %138

132:                                              ; preds = %122
  %133 = add i64 %111, 7
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %146

138:                                              ; preds = %119, %122, %132
  %139 = add i64 %103, 120259084288
  %140 = ashr exact i64 %139, 32
  %141 = add i64 %106, %140
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, -2
  %145 = or i32 %144, %19
  store atomic volatile i32 %145, i32* %142 monotonic, align 4
  br label %146

146:                                              ; preds = %132, %99, %115, %138
  %147 = add i64 %101, 1
  %148 = icmp eq i64 %147, %10
  br i1 %148, label %98, label %149

149:                                              ; preds = %146
  %150 = load i64, i64* %2, align 8
  br label %99
}

declare void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"*, i32) local_unnamed_addr #2

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal14AllocationSite8IsNestedEv(%"class.v8::internal::AllocationSite"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 100
  br i1 %19, label %20, label %55

20:                                               ; preds = %2
  %21 = load i64, i64* %3, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %22, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %22, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 133
  br i1 %41, label %42, label %55

42:                                               ; preds = %20
  %43 = load i64, i64* %3, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 15
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %44, %53
  br label %120

55:                                               ; preds = %2, %20
  %56 = load i64, i64* %3, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 3
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %114, label %65

65:                                               ; preds = %55
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %57, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 133
  br i1 %74, label %120, label %75

75:                                               ; preds = %65
  %76 = load atomic i32, i32* %67 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %57, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 94
  br i1 %82, label %83, label %114

83:                                               ; preds = %75
  %84 = load i64, i64* %3, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, 3
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 acquire, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %85, %94
  %96 = and i64 %94, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %83
  %99 = add i64 %95, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %85, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp eq i16 %106, 133
  br i1 %107, label %120, label %108

108:                                              ; preds = %98, %83
  %109 = add i64 %95, 3
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %85, %112
  br label %120

114:                                              ; preds = %75, %55
  %115 = add i64 %62, 3
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %57, %118
  br label %120

120:                                              ; preds = %114, %108, %98, %65, %42
  %121 = phi i64 [ %54, %42 ], [ %119, %114 ], [ %62, %65 ], [ %113, %108 ], [ %95, %98 ]
  ret i64 %121
}

declare i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1073205, i32 2146410443}
!3 = !{!"branch_weights", i32 2146410443, i32 1073205}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
