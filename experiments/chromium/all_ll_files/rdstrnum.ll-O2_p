; ModuleID = '../../third_party/nasm/asm/rdstrnum.c'
source_filename = "../../third_party/nasm/asm/rdstrnum.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@globalbits = external local_unnamed_addr global i32, align 4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @readstrnum(i8* nocapture readonly, i32, i8* nocapture) local_unnamed_addr #0 {
  store i8 0, i8* %2, align 1
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds i8, i8* %0, i64 %4
  %6 = load i32, i32* @globalbits, align 4
  %7 = icmp eq i32 %6, 64
  %8 = icmp sgt i32 %1, 0
  br i1 %7, label %15, label %9

9:                                                ; preds = %3
  br i1 %8, label %10, label %80

10:                                               ; preds = %9
  %11 = and i32 %1, 1
  %12 = icmp eq i32 %1, 1
  br i1 %12, label %64, label %13

13:                                               ; preds = %10
  %14 = sub i32 %1, %11
  br label %34

15:                                               ; preds = %3
  br i1 %8, label %16, label %80

16:                                               ; preds = %15
  %17 = and i32 %1, 1
  %18 = icmp eq i32 %1, 1
  br i1 %18, label %50, label %19

19:                                               ; preds = %16
  %20 = sub i32 %1, %17
  br label %21

21:                                               ; preds = %83, %19
  %22 = phi i64 [ 0, %19 ], [ %88, %83 ]
  %23 = phi i8* [ %5, %19 ], [ %85, %83 ]
  %24 = phi i32 [ %20, %19 ], [ %89, %83 ]
  %25 = icmp ugt i64 %22, 72057594037927935
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  store i8 1, i8* %2, align 1
  br label %27

27:                                               ; preds = %26, %21
  %28 = shl i64 %22, 8
  %29 = getelementptr inbounds i8, i8* %23, i64 -1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = or i64 %28, %31
  %33 = icmp ugt i64 %32, 72057594037927935
  br i1 %33, label %82, label %83

34:                                               ; preds = %92, %13
  %35 = phi i64 [ 0, %13 ], [ %97, %92 ]
  %36 = phi i8* [ %5, %13 ], [ %94, %92 ]
  %37 = phi i32 [ %14, %13 ], [ %98, %92 ]
  %38 = and i64 %35, 4278190080
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  store i8 1, i8* %2, align 1
  br label %41

41:                                               ; preds = %34, %40
  %42 = shl nsw i64 %35, 8
  %43 = and i64 %42, 16776960
  %44 = getelementptr inbounds i8, i8* %36, i64 -1
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = or i64 %43, %46
  %48 = and i64 %35, 16711680
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %92, label %91

50:                                               ; preds = %83, %16
  %51 = phi i64 [ undef, %16 ], [ %88, %83 ]
  %52 = phi i64 [ 0, %16 ], [ %88, %83 ]
  %53 = phi i8* [ %5, %16 ], [ %85, %83 ]
  %54 = icmp eq i32 %17, 0
  br i1 %54, label %80, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %52, 72057594037927935
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  store i8 1, i8* %2, align 1
  br label %58

58:                                               ; preds = %55, %57
  %59 = shl i64 %52, 8
  %60 = getelementptr inbounds i8, i8* %53, i64 -1
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = or i64 %59, %62
  br label %80

64:                                               ; preds = %92, %10
  %65 = phi i64 [ undef, %10 ], [ %97, %92 ]
  %66 = phi i64 [ 0, %10 ], [ %97, %92 ]
  %67 = phi i8* [ %5, %10 ], [ %94, %92 ]
  %68 = icmp eq i32 %11, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %64
  %70 = and i64 %66, 4278190080
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  store i8 1, i8* %2, align 1
  br label %73

73:                                               ; preds = %69, %72
  %74 = shl nsw i64 %66, 8
  %75 = and i64 %74, 4294967040
  %76 = getelementptr inbounds i8, i8* %67, i64 -1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = or i64 %75, %78
  br label %80

80:                                               ; preds = %73, %64, %58, %50, %9, %15
  %81 = phi i64 [ 0, %15 ], [ 0, %9 ], [ %51, %50 ], [ %63, %58 ], [ %65, %64 ], [ %79, %73 ]
  ret i64 %81

82:                                               ; preds = %27
  store i8 1, i8* %2, align 1
  br label %83

83:                                               ; preds = %82, %27
  %84 = shl i64 %32, 8
  %85 = getelementptr inbounds i8, i8* %23, i64 -2
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i64
  %88 = or i64 %84, %87
  %89 = add i32 %24, -2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %50, label %21

91:                                               ; preds = %41
  store i8 1, i8* %2, align 1
  br label %92

92:                                               ; preds = %91, %41
  %93 = shl nuw nsw i64 %47, 8
  %94 = getelementptr inbounds i8, i8* %36, i64 -2
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = or i64 %93, %96
  %98 = add i32 %37, -2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %64, label %34
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
