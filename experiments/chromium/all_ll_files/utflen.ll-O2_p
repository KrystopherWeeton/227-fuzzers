; ModuleID = '../../third_party/utf/src/utf/utflen.c'
source_filename = "../../third_party/utf/src/utf/utflen.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@utftab = external local_unnamed_addr constant [64 x i8], align 16

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @utfnlen(i8*, i64) local_unnamed_addr #0 {
  %3 = load i8, i8* %0, align 1
  %4 = icmp eq i8 %3, 0
  %5 = icmp eq i64 %1, 0
  %6 = or i1 %5, %4
  br i1 %6, label %71, label %7

7:                                                ; preds = %2, %60
  %8 = phi i8 [ %67, %60 ], [ %3, %2 ]
  %9 = phi i64 [ %66, %60 ], [ 0, %2 ]
  %10 = phi i64 [ %65, %60 ], [ %1, %2 ]
  %11 = phi i8* [ %61, %60 ], [ %0, %2 ]
  %12 = getelementptr inbounds i8, i8* %11, i64 1
  %13 = zext i8 %8 to i32
  %14 = and i32 %13, 192
  %15 = icmp eq i32 %14, 192
  br i1 %15, label %16, label %60

16:                                               ; preds = %7
  %17 = and i32 %13, 63
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* @utftab, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %60, label %23

23:                                               ; preds = %16
  %24 = icmp eq i64 %10, 1
  br i1 %24, label %71, label %25

25:                                               ; preds = %23
  %26 = load i8, i8* %12, align 1
  %27 = sext i8 %26 to i32
  %28 = and i32 %27, 192
  %29 = icmp eq i32 %28, 128
  br i1 %29, label %30, label %60

30:                                               ; preds = %25
  %31 = lshr i32 255, %21
  %32 = and i32 %31, 255
  %33 = and i32 %31, %13
  %34 = shl nuw nsw i32 %33, 6
  %35 = getelementptr inbounds i8, i8* %11, i64 2
  %36 = and i32 %27, 63
  %37 = or i32 %36, %34
  %38 = icmp ugt i32 %37, %32
  br i1 %38, label %39, label %60

39:                                               ; preds = %30
  %40 = zext i8 %20 to i64
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %10, i64 %40
  %43 = trunc i64 %42 to i32
  %44 = icmp sgt i32 %43, 2
  br i1 %44, label %45, label %56

45:                                               ; preds = %39, %51
  %46 = phi i8 [ %53, %51 ], [ 2, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %35, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = and i8 %48, -64
  %50 = icmp eq i8 %49, -128
  br i1 %50, label %51, label %60

51:                                               ; preds = %45
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = add i8 %46, 1
  %54 = zext i8 %53 to i32
  %55 = icmp slt i32 %54, %43
  br i1 %55, label %45, label %56

56:                                               ; preds = %51, %39
  %57 = phi i8* [ %35, %39 ], [ %52, %51 ]
  %58 = phi i8 [ 2, %39 ], [ %53, %51 ]
  %59 = icmp ult i8 %58, %20
  br i1 %59, label %71, label %60

60:                                               ; preds = %45, %30, %25, %7, %56, %16
  %61 = phi i8* [ %12, %7 ], [ %12, %16 ], [ %12, %25 ], [ %35, %30 ], [ %57, %56 ], [ %47, %45 ]
  %62 = ptrtoint i8* %61 to i64
  %63 = ptrtoint i8* %11 to i64
  %64 = add i64 %10, %63
  %65 = sub i64 %64, %62
  %66 = add i64 %9, 1
  %67 = load i8, i8* %61, align 1
  %68 = icmp eq i8 %67, 0
  %69 = icmp eq i64 %65, 0
  %70 = or i1 %69, %68
  br i1 %70, label %71, label %7

71:                                               ; preds = %23, %56, %60, %2
  %72 = phi i64 [ 0, %2 ], [ %66, %60 ], [ %9, %56 ], [ %9, %23 ]
  ret i64 %72
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @utflen(i8*) local_unnamed_addr #0 {
  %2 = load i8, i8* %0, align 1
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %68, label %4

4:                                                ; preds = %1, %57
  %5 = phi i8 [ %64, %57 ], [ %2, %1 ]
  %6 = phi i64 [ %63, %57 ], [ 0, %1 ]
  %7 = phi i64 [ %62, %57 ], [ -1, %1 ]
  %8 = phi i8* [ %58, %57 ], [ %0, %1 ]
  %9 = getelementptr inbounds i8, i8* %8, i64 1
  %10 = zext i8 %5 to i32
  %11 = and i32 %10, 192
  %12 = icmp eq i32 %11, 192
  br i1 %12, label %13, label %57

13:                                               ; preds = %4
  %14 = and i32 %10, 63
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [64 x i8], [64 x i8]* @utftab, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = icmp eq i8 %17, 0
  br i1 %19, label %57, label %20

20:                                               ; preds = %13
  %21 = icmp eq i64 %7, 1
  br i1 %21, label %68, label %22

22:                                               ; preds = %20
  %23 = load i8, i8* %9, align 1
  %24 = sext i8 %23 to i32
  %25 = and i32 %24, 192
  %26 = icmp eq i32 %25, 128
  br i1 %26, label %27, label %57

27:                                               ; preds = %22
  %28 = lshr i32 255, %18
  %29 = and i32 %28, 255
  %30 = and i32 %28, %10
  %31 = shl nuw nsw i32 %30, 6
  %32 = getelementptr inbounds i8, i8* %8, i64 2
  %33 = and i32 %24, 63
  %34 = or i32 %33, %31
  %35 = icmp ugt i32 %34, %29
  br i1 %35, label %36, label %57

36:                                               ; preds = %27
  %37 = zext i8 %17 to i64
  %38 = icmp ult i64 %7, %37
  %39 = select i1 %38, i64 %7, i64 %37
  %40 = trunc i64 %39 to i32
  %41 = icmp sgt i32 %40, 2
  br i1 %41, label %42, label %53

42:                                               ; preds = %36, %48
  %43 = phi i8 [ %50, %48 ], [ 2, %36 ]
  %44 = phi i8* [ %49, %48 ], [ %32, %36 ]
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, -64
  %47 = icmp eq i8 %46, -128
  br i1 %47, label %48, label %57

48:                                               ; preds = %42
  %49 = getelementptr inbounds i8, i8* %44, i64 1
  %50 = add i8 %43, 1
  %51 = zext i8 %50 to i32
  %52 = icmp slt i32 %51, %40
  br i1 %52, label %42, label %53

53:                                               ; preds = %48, %36
  %54 = phi i8* [ %32, %36 ], [ %49, %48 ]
  %55 = phi i8 [ 2, %36 ], [ %50, %48 ]
  %56 = icmp ult i8 %55, %17
  br i1 %56, label %68, label %57

57:                                               ; preds = %42, %53, %27, %22, %13, %4
  %58 = phi i8* [ %9, %4 ], [ %9, %13 ], [ %9, %22 ], [ %32, %27 ], [ %54, %53 ], [ %44, %42 ]
  %59 = ptrtoint i8* %58 to i64
  %60 = ptrtoint i8* %8 to i64
  %61 = add i64 %7, %60
  %62 = sub i64 %61, %59
  %63 = add i64 %6, 1
  %64 = load i8, i8* %58, align 1
  %65 = icmp eq i8 %64, 0
  %66 = icmp eq i64 %62, 0
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %4

68:                                               ; preds = %20, %53, %57, %1
  %69 = phi i64 [ 0, %1 ], [ %6, %20 ], [ %6, %53 ], [ %63, %57 ]
  ret i64 %69
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
