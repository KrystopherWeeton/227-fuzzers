; ModuleID = '../../components/viz/service/display_embedder/software_output_device_x11.cc'
source_filename = "../../components/viz/service/display_embedder/software_output_device_x11.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::SoftwareOutputDeviceX11" = type { %"class.viz::SoftwareOutputDevice", %"class.ui::X11SoftwareBitmapPresenter" }
%"class.viz::SoftwareOutputDevice" = type { i32 (...)**, %class.scoped_refptr, %"class.viz::SoftwareOutputDeviceClient"*, %"class.gfx::Size", %"class.gfx::Rect", %class.sk_sp, %"class.std::__1::unique_ptr" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.viz::SoftwareOutputDeviceClient" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::VSyncProvider"* }
%"class.gfx::VSyncProvider" = type opaque
%"class.ui::X11SoftwareBitmapPresenter" = type { i32, %"class.x11::Connection"*, i32, i32, i32, i8, i8, %"class.std::__1::unique_ptr.265", i8, %class.sk_sp, %"class.gfx::Size" }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.182", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.195", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.241", %"class.base::circular_deque", %"class.base::ObserverList.247", %"class.x11::Event"*, %"class.base::circular_deque.251", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.264" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.188" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.185" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.188" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.189", i64, i32, [4 x i8] }>
%"class.base::LinkedList.189" = type { %"class.base::LinkNode.190" }
%"class.base::LinkNode.190" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.206", %"class.std::__1::vector.213" }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.208" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.215" }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.217" }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.234" }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.236" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.247" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.248", i64, i32, [4 x i8] }>
%"class.base::LinkedList.248" = type { %"class.base::LinkNode.249" }
%"class.base::LinkNode.249" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.251" = type { %"class.base::internal::VectorBuffer.252", i64, i64 }
%"class.base::internal::VectorBuffer.252" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.255, %"class.std::__1::unique_ptr.257" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.254", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.254" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.255 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.256", [4 x i8] }>
%"class.base::RefCountedThreadSafe.256" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.263 }
%union.anon.263 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.264" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.ui::XShmImagePool"* }
%"class.ui::XShmImagePool" = type { %"class.x11::EventObserver", %"class.x11::Connection"*, %"struct.x11::Drawable", i32, i32, i8, i8, %"class.gfx::Size", i64, %"class.std::__1::vector.268", i64, %"class.std::__1::list" }
%"class.x11::EventObserver" = type { i32 (...)** }
%"struct.x11::Drawable" = type { i32 }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"*, %"class.std::__1::__compressed_pair.298" }
%"struct.ui::XShmImagePool::FrameState" = type { i32, i32, i8*, i8, %class.SkBitmap, %"class.std::__1::unique_ptr.278" }
%class.SkBitmap = type { %class.sk_sp.270, %class.SkPixmap, %class.sk_sp.277 }
%class.sk_sp.270 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.271, i32, i32 }
%class.sk_sp.271 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.272" }
%"struct.std::__1::atomic.272" = type { %"struct.std::__1::__atomic_base.273" }
%"struct.std::__1::__atomic_base.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__cxx_atomic_impl.275" }
%"struct.std::__1::__cxx_atomic_impl.275" = type { %"struct.std::__1::__cxx_atomic_base_impl.276" }
%"struct.std::__1::__cxx_atomic_base_impl.276" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.277 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %class.SkCanvas* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.281, [384 x i64], %class.sk_sp.282, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.283", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.289" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.281 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.282 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.ui::XShmImagePool::FrameState"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.303" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { i64 }
%"class.base::OnceCallback.311" = type { %"class.base::internal::CallbackBase" }

$_ZN3viz20SoftwareOutputDevice17DiscardBackbufferEv = comdat any

$_ZN3viz20SoftwareOutputDevice16EnsureBackbufferEv = comdat any

@_ZTVN3viz23SoftwareOutputDeviceX11E = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::SoftwareOutputDeviceX11"*)* @_ZN3viz23SoftwareOutputDeviceX11D2Ev to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputDeviceX11"*)* @_ZN3viz23SoftwareOutputDeviceX11D0Ev to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputDeviceX11"*, %"class.gfx::Size"*, float)* @_ZN3viz23SoftwareOutputDeviceX116ResizeERKN3gfx4SizeEf to i8*), i8* bitcast (%class.SkCanvas* (%"class.viz::SoftwareOutputDeviceX11"*, %"class.gfx::Rect"*)* @_ZN3viz23SoftwareOutputDeviceX1110BeginPaintERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputDeviceX11"*)* @_ZN3viz23SoftwareOutputDeviceX118EndPaintEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputDevice"*)* @_ZN3viz20SoftwareOutputDevice17DiscardBackbufferEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputDevice"*)* @_ZN3viz20SoftwareOutputDevice16EnsureBackbufferEv to i8*), i8* bitcast (%"class.gfx::VSyncProvider"* (%"class.viz::SoftwareOutputDevice"*)* @_ZN3viz20SoftwareOutputDevice16GetVSyncProviderEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputDeviceX11"*, %"class.base::OnceCallback.311"*)* @_ZN3viz23SoftwareOutputDeviceX1113OnSwapBuffersEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE to i8*), i8* bitcast (i32 (%"class.viz::SoftwareOutputDeviceX11"*)* @_ZNK3viz23SoftwareOutputDeviceX1116MaxFramesPendingEv to i8*)] }, align 8

@_ZN3viz23SoftwareOutputDeviceX11C1Ej = hidden unnamed_addr alias void (%"class.viz::SoftwareOutputDeviceX11"*, i32), void (%"class.viz::SoftwareOutputDeviceX11"*, i32)* @_ZN3viz23SoftwareOutputDeviceX11C2Ej
@_ZN3viz23SoftwareOutputDeviceX11D1Ev = hidden unnamed_addr alias void (%"class.viz::SoftwareOutputDeviceX11"*), void (%"class.viz::SoftwareOutputDeviceX11"*)* @_ZN3viz23SoftwareOutputDeviceX11D2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23SoftwareOutputDeviceX11C2Ej(%"class.viz::SoftwareOutputDeviceX11"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0
  tail call void @_ZN3viz20SoftwareOutputDeviceC2Ev(%"class.viz::SoftwareOutputDevice"* %3) #5
  %4 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3viz23SoftwareOutputDeviceX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 1
  %6 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #5
  tail call void @_ZN2ui26X11SoftwareBitmapPresenterC1EPN3x1110ConnectionEjb(%"class.ui::X11SoftwareBitmapPresenter"* %5, %"class.x11::Connection"* %6, i32 %1, i1 zeroext true) #5
  ret void
}

declare void @_ZN3viz20SoftwareOutputDeviceC2Ev(%"class.viz::SoftwareOutputDevice"*) unnamed_addr #1

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

declare void @_ZN2ui26X11SoftwareBitmapPresenterC1EPN3x1110ConnectionEjb(%"class.ui::X11SoftwareBitmapPresenter"*, %"class.x11::Connection"*, i32, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23SoftwareOutputDeviceX11D2Ev(%"class.viz::SoftwareOutputDeviceX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3viz23SoftwareOutputDeviceX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 1
  tail call void @_ZN2ui26X11SoftwareBitmapPresenterD1Ev(%"class.ui::X11SoftwareBitmapPresenter"* %3) #5
  %4 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0
  tail call void @_ZN3viz20SoftwareOutputDeviceD2Ev(%"class.viz::SoftwareOutputDevice"* %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui26X11SoftwareBitmapPresenterD1Ev(%"class.ui::X11SoftwareBitmapPresenter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz20SoftwareOutputDeviceD2Ev(%"class.viz::SoftwareOutputDevice"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23SoftwareOutputDeviceX11D0Ev(%"class.viz::SoftwareOutputDeviceX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3viz23SoftwareOutputDeviceX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 1
  tail call void @_ZN2ui26X11SoftwareBitmapPresenterD1Ev(%"class.ui::X11SoftwareBitmapPresenter"* %3) #5
  %4 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0
  tail call void @_ZN3viz20SoftwareOutputDeviceD2Ev(%"class.viz::SoftwareOutputDevice"* %4) #5
  %5 = bitcast %"class.viz::SoftwareOutputDeviceX11"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23SoftwareOutputDeviceX116ResizeERKN3gfx4SizeEf(%"class.viz::SoftwareOutputDeviceX11"*, %"class.gfx::Size"* dereferenceable(8), float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0, i32 3
  %5 = bitcast %"class.gfx::Size"* %1 to i64*
  %6 = bitcast %"class.gfx::Size"* %4 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 1
  tail call void @_ZN2ui26X11SoftwareBitmapPresenter6ResizeERKN3gfx4SizeE(%"class.ui::X11SoftwareBitmapPresenter"* %8, %"class.gfx::Size"* dereferenceable(8) %1) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN2ui26X11SoftwareBitmapPresenter6ResizeERKN3gfx4SizeE(%"class.ui::X11SoftwareBitmapPresenter"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN3viz23SoftwareOutputDeviceX1110BeginPaintERKN3gfx4RectE(%"class.viz::SoftwareOutputDeviceX11"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0, i32 4
  %4 = bitcast %"class.gfx::Rect"* %3 to i8*
  %5 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 16, i1 false)
  %6 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 1
  %7 = tail call %class.SkCanvas* @_ZN2ui26X11SoftwareBitmapPresenter11GetSkCanvasEv(%"class.ui::X11SoftwareBitmapPresenter"* %6) #5
  ret %class.SkCanvas* %7
}

declare %class.SkCanvas* @_ZN2ui26X11SoftwareBitmapPresenter11GetSkCanvasEv(%"class.ui::X11SoftwareBitmapPresenter"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23SoftwareOutputDeviceX118EndPaintEv(%"class.viz::SoftwareOutputDeviceX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0
  tail call void @_ZN3viz20SoftwareOutputDevice8EndPaintEv(%"class.viz::SoftwareOutputDevice"* %2) #5
  %3 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 0, i32 4
  tail call void @_ZN2ui26X11SoftwareBitmapPresenter8EndPaintERKN3gfx4RectE(%"class.ui::X11SoftwareBitmapPresenter"* %3, %"class.gfx::Rect"* dereferenceable(16) %4) #5
  ret void
}

declare void @_ZN3viz20SoftwareOutputDevice8EndPaintEv(%"class.viz::SoftwareOutputDevice"*) unnamed_addr #1

declare void @_ZN2ui26X11SoftwareBitmapPresenter8EndPaintERKN3gfx4RectE(%"class.ui::X11SoftwareBitmapPresenter"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23SoftwareOutputDeviceX1113OnSwapBuffersEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE(%"class.viz::SoftwareOutputDeviceX11"*, %"class.base::OnceCallback.311"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.311", align 8
  %4 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::OnceCallback.311", %"class.base::OnceCallback.311"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback.311"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback.311"* %3 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  call void @_ZN2ui26X11SoftwareBitmapPresenter13OnSwapBuffersEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE(%"class.ui::X11SoftwareBitmapPresenter"* %4, %"class.base::OnceCallback.311"* nonnull %3) #5
  %9 = getelementptr inbounds %"class.base::OnceCallback.311", %"class.base::OnceCallback.311"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #5
  ret void
}

declare void @_ZN2ui26X11SoftwareBitmapPresenter13OnSwapBuffersEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE(%"class.ui::X11SoftwareBitmapPresenter"*, %"class.base::OnceCallback.311"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3viz23SoftwareOutputDeviceX1116MaxFramesPendingEv(%"class.viz::SoftwareOutputDeviceX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareOutputDeviceX11", %"class.viz::SoftwareOutputDeviceX11"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK2ui26X11SoftwareBitmapPresenter16MaxFramesPendingEv(%"class.ui::X11SoftwareBitmapPresenter"* %2) #5
  ret i32 %3
}

declare i32 @_ZNK2ui26X11SoftwareBitmapPresenter16MaxFramesPendingEv(%"class.ui::X11SoftwareBitmapPresenter"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz20SoftwareOutputDevice17DiscardBackbufferEv(%"class.viz::SoftwareOutputDevice"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz20SoftwareOutputDevice16EnsureBackbufferEv(%"class.viz::SoftwareOutputDevice"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.gfx::VSyncProvider"* @_ZN3viz20SoftwareOutputDevice16GetVSyncProviderEv(%"class.viz::SoftwareOutputDevice"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
