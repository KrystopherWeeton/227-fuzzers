; ModuleID = '../../net/base/scheme_host_port_matcher.cc'
source_filename = "../../net/base/scheme_host_port_matcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::SchemeHostPortMatcher" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::SchemeHostPortMatcherRule"* }
%"class.net::SchemeHostPortMatcherRule" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__wrap_iter" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::allocator.7"* }
%"class.std::__1::allocator.7" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.11" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.GURL* }

$_ZNSt3__16vectorINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_ = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZN3net21SchemeHostPortMatcher27kParseRuleListDelimiterListE = hidden local_unnamed_addr constant [3 x i8] c",;\00", align 1
@_ZN3net21SchemeHostPortMatcher23kPrintRuleListDelimiterE = hidden local_unnamed_addr constant i8 59, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SchemeHostPortMatcher13FromRawStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::SchemeHostPortMatcher"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.base::StringTokenizerT", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.net::SchemeHostPortMatcher"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = bitcast %"class.base::StringTokenizerT"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 96, i1 false)
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 2, i8* %12, align 1
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  store i16 15148, i16* %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 2
  store i8 0, i8* %14, align 2
  %15 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 3, i32 0
  %19 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 4
  %20 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5
  %23 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #9
  %24 = load i8, i8* %21, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %31 = zext i8 %24 to i64
  %32 = select i1 %25, i8* %27, i8* %30
  %33 = select i1 %25, i64 %29, i64 %31
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  store i8* %32, i8** %15, align 8
  store i8* %32, i8** %16, align 8
  store i8* %32, i8** %17, align 8
  store i8* %34, i8** %18, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %10, i64 24, i1 false) #9
  %36 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 6
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 7
  store i8 1, i8* %37, align 4
  %38 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 9
  store i32 0, i32* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  %39 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast i8** %17 to i64*
  %44 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr"** %6 to i64*
  br label %48

48:                                               ; preds = %88, %2
  %49 = phi i32 [ %91, %88 ], [ 0, %2 ]
  %50 = phi i64 [ %90, %88 ], [ 0, %2 ]
  %51 = phi i8 [ %89, %88 ], [ 0, %2 ]
  %52 = icmp slt i8 %51, 0
  %53 = zext i8 %51 to i64
  %54 = select i1 %52, i64 %50, i64 %53
  %55 = icmp eq i64 %54, 0
  %56 = icmp eq i32 %49, 0
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %48
  %59 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #9
  br i1 %59, label %62, label %92

60:                                               ; preds = %48
  %61 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #9
  br i1 %61, label %62, label %92

62:                                               ; preds = %58, %60
  %63 = load i8*, i8** %16, align 8
  %64 = load i64, i64* %43, align 8
  %65 = ptrtoint i8* %63 to i64
  %66 = sub i64 %64, %65
  %67 = call %"class.net::SchemeHostPortMatcherRule"* @_ZN3net25SchemeHostPortMatcherRule22FromUntrimmedRawStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %63, i64 %66) #9
  %68 = ptrtoint %"class.net::SchemeHostPortMatcherRule"* %67 to i64
  %69 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %67, null
  br i1 %69, label %88, label %70

70:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  store %"class.net::SchemeHostPortMatcherRule"* %67, %"class.net::SchemeHostPortMatcherRule"** %45, align 8
  %71 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %72 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %73 = icmp ult %"class.std::__1::unique_ptr"* %71, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %45, align 8
  %75 = bitcast %"class.std::__1::unique_ptr"* %71 to i64*
  store i64 %68, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 1
  %77 = ptrtoint %"class.std::__1::unique_ptr"* %76 to i64
  store i64 %77, i64* %47, align 8
  br label %79

78:                                               ; preds = %70
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %46, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #9
  br label %79

79:                                               ; preds = %78, %74
  %80 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %45, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %45, align 8
  %81 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.net::SchemeHostPortMatcherRule"* %80 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %84 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %84, i64 1
  %86 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %85, align 8
  call void %86(%"class.net::SchemeHostPortMatcherRule"* nonnull %80) #9
  br label %87

87:                                               ; preds = %82, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br label %88

88:                                               ; preds = %62, %87
  %89 = load i8, i8* %41, align 1
  %90 = load i64, i64* %42, align 8
  %91 = load i32, i32* %36, align 8
  br label %48

92:                                               ; preds = %58, %60
  %93 = load i8, i8* %41, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #10
  br label %98

98:                                               ; preds = %95, %92
  %99 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #10
  br label %106

106:                                              ; preds = %98, %103
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %9) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.net::SchemeHostPortMatcherRule"* @_ZN3net25SchemeHostPortMatcherRule22FromUntrimmedRawStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SchemeHostPortMatcher13AddAsLastRuleENSt3__110unique_ptrINS_25SchemeHostPortMatcherRuleENS1_14default_deleteIS3_EEEE(%"class.net::SchemeHostPortMatcher"*, %"class.net::SchemeHostPortMatcherRule"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.net::SchemeHostPortMatcherRule"* %1, %"class.net::SchemeHostPortMatcherRule"** %4, align 8
  %5 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp ult %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = ptrtoint %"class.net::SchemeHostPortMatcherRule"* %1 to i64
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 1
  %14 = ptrtoint %"class.std::__1::unique_ptr"* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %17, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #9
  br label %18

18:                                               ; preds = %10, %16
  %19 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %4, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %4, align 8
  %20 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.net::SchemeHostPortMatcherRule"* %19 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %23 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %23, i64 1
  %25 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %24, align 8
  call void %25(%"class.net::SchemeHostPortMatcherRule"* nonnull %19) #9
  br label %26

26:                                               ; preds = %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SchemeHostPortMatcher14AddAsFirstRuleENSt3__110unique_ptrINS_25SchemeHostPortMatcherRuleENS1_14default_deleteIS3_EEEE(%"class.net::SchemeHostPortMatcher"*, %"class.net::SchemeHostPortMatcherRule"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.net::SchemeHostPortMatcherRule"* %1, %"class.net::SchemeHostPortMatcherRule"** %4, align 8
  %5 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = call %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_(%"class.std::__1::vector"* %5, %"class.std::__1::unique_ptr"* %7, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3)
  %9 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %4, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %4, align 8
  %10 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.net::SchemeHostPortMatcherRule"* %9 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %13 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %13, i64 1
  %15 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %14, align 8
  call void %15(%"class.net::SchemeHostPortMatcherRule"* nonnull %9) #9
  br label %16

16:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr"* %10 to i64
  br i1 %11, label %14, label %150

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %382

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %"class.net::SchemeHostPortMatcherRule"** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !2

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %85

60:                                               ; preds = %85, %55
  %61 = phi %"class.std::__1::unique_ptr"* [ %58, %55 ], [ %135, %85 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %137, label %66

66:                                               ; preds = %63, %83
  %67 = phi %"class.std::__1::unique_ptr"* [ %70, %83 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr"* [ %69, %83 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %75, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.net::SchemeHostPortMatcherRule"* %75 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %80 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %80, i64 1
  %82 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %81, align 8
  tail call void %82(%"class.net::SchemeHostPortMatcherRule"* nonnull %75) #9
  br label %83

83:                                               ; preds = %78, %66
  %84 = icmp eq %"class.std::__1::unique_ptr"* %69, %1
  br i1 %84, label %137, label %66

85:                                               ; preds = %55, %85
  %86 = phi %"class.std::__1::unique_ptr"* [ %135, %85 ], [ %56, %55 ]
  %87 = phi %"class.std::__1::unique_ptr"* [ %134, %85 ], [ %57, %55 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 1
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %94, align 8
  %97 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 2
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 2
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %100, align 8
  %103 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 3
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 3
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 4
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %112, align 8
  %115 = bitcast %"class.std::__1::unique_ptr"* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 5
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %118, align 8
  %121 = bitcast %"class.std::__1::unique_ptr"* %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 6
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 6
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %126 = load i64, i64* %125, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %124, align 8
  %127 = bitcast %"class.std::__1::unique_ptr"* %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 7
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 7
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %131 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %130, align 8
  %133 = bitcast %"class.std::__1::unique_ptr"* %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 8
  %136 = icmp ult %"class.std::__1::unique_ptr"* %134, %8
  br i1 %136, label %85, label %60

137:                                              ; preds = %83, %63
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %138, align 8
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %141, align 8
  %143 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %140, i64* %143, align 8
  %144 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %142, null
  br i1 %144, label %382, label %145

145:                                              ; preds = %137
  %146 = bitcast %"class.net::SchemeHostPortMatcherRule"* %142 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %147 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %147, i64 1
  %149 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %148, align 8
  tail call void %149(%"class.net::SchemeHostPortMatcherRule"* nonnull %142) #9
  br label %382

150:                                              ; preds = %3
  %151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %152 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %152) #9
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %155 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %156 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %158 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %159 = bitcast %"class.std::__1::vector"* %0 to i64*
  %160 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 40, i1 false)
  %161 = load i64, i64* %159, align 8
  %162 = sub i64 %12, %161
  %163 = ashr exact i64 %162, 3
  %164 = add nsw i64 %163, 1
  %165 = icmp ugt i64 %164, 2305843009213693951
  br i1 %165, label %166, label %168

166:                                              ; preds = %150
  %167 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #11
  unreachable

168:                                              ; preds = %150
  %169 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  %170 = sub i64 %13, %161
  %171 = ashr exact i64 %170, 3
  %172 = icmp ult i64 %171, 1152921504606846975
  br i1 %172, label %177, label %173

173:                                              ; preds = %168
  %174 = sub i64 %4, %161
  %175 = ashr exact i64 %174, 3
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %156, align 8
  %176 = bitcast %"class.std::__1::allocator.7"** %157 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %151, %"class.std::__1::__compressed_pair.4"** %176, align 8
  br label %188

177:                                              ; preds = %168
  %178 = ashr exact i64 %170, 2
  %179 = icmp ult i64 %178, %164
  %180 = select i1 %179, i64 %164, i64 %178
  %181 = sub i64 %4, %161
  %182 = ashr exact i64 %181, 3
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %156, align 8
  %183 = bitcast %"class.std::__1::allocator.7"** %157 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %151, %"class.std::__1::__compressed_pair.4"** %183, align 8
  %184 = icmp eq i64 %180, 0
  br i1 %184, label %194, label %185

185:                                              ; preds = %177
  %186 = icmp ugt i64 %180, 2305843009213693951
  br i1 %186, label %187, label %188

187:                                              ; preds = %185
  tail call void @abort() #11
  unreachable

188:                                              ; preds = %173, %185
  %189 = phi i64 [ 2305843009213693951, %173 ], [ %180, %185 ]
  %190 = phi i64 [ %175, %173 ], [ %182, %185 ]
  %191 = shl i64 %189, 3
  %192 = tail call i8* @_Znwm(i64 %191) #10
  %193 = bitcast i8* %192 to %"class.std::__1::unique_ptr"*
  br label %194

194:                                              ; preds = %177, %188
  %195 = phi i64 [ %190, %188 ], [ %182, %177 ]
  %196 = phi i64 [ %189, %188 ], [ 0, %177 ]
  %197 = phi %"class.std::__1::unique_ptr"* [ %193, %188 ], [ null, %177 ]
  store %"class.std::__1::unique_ptr"* %197, %"class.std::__1::unique_ptr"** %153, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 %195
  store %"class.std::__1::unique_ptr"* %198, %"class.std::__1::unique_ptr"** %155, align 8
  store %"class.std::__1::unique_ptr"* %198, %"class.std::__1::unique_ptr"** %154, align 8
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 %196
  store %"class.std::__1::unique_ptr"* %199, %"class.std::__1::unique_ptr"** %156, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.std::__1::unique_ptr"* dereferenceable(8) %2)
  %200 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %201 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %202 = icmp eq %"class.std::__1::unique_ptr"* %201, %1
  br i1 %202, label %267, label %203

203:                                              ; preds = %194
  %204 = ptrtoint %"class.std::__1::unique_ptr"* %201 to i64
  %205 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %206 = ptrtoint %"class.net::SchemeHostPortMatcherRule"** %205 to i64
  %207 = sub i64 %206, %204
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = and i64 %209, 3
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %226, label %212

212:                                              ; preds = %203, %212
  %213 = phi %"class.std::__1::unique_ptr"* [ %223, %212 ], [ %200, %203 ]
  %214 = phi %"class.std::__1::unique_ptr"* [ %217, %212 ], [ %1, %203 ]
  %215 = phi i64 [ %224, %212 ], [ %210, %203 ]
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %213, i64 -1
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %214, i64 -1
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %217, i64 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.std::__1::unique_ptr"* %217 to i64*
  %220 = load i64, i64* %219, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %218, align 8
  %221 = bitcast %"class.std::__1::unique_ptr"* %216 to i64*
  store i64 %220, i64* %221, align 8
  %222 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 -1
  store %"class.std::__1::unique_ptr"* %223, %"class.std::__1::unique_ptr"** %154, align 8
  %224 = add i64 %215, -1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %212, !llvm.loop !4

226:                                              ; preds = %212, %203
  %227 = phi %"class.std::__1::unique_ptr"* [ undef, %203 ], [ %223, %212 ]
  %228 = phi %"class.std::__1::unique_ptr"* [ %200, %203 ], [ %223, %212 ]
  %229 = phi %"class.std::__1::unique_ptr"* [ %1, %203 ], [ %217, %212 ]
  %230 = icmp ult i64 %207, 24
  br i1 %230, label %267, label %231

231:                                              ; preds = %226, %231
  %232 = phi %"class.std::__1::unique_ptr"* [ %265, %231 ], [ %228, %226 ]
  %233 = phi %"class.std::__1::unique_ptr"* [ %259, %231 ], [ %229, %226 ]
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %232, i64 -1
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %233, i64 -1
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %235, i64 0, i32 0, i32 0, i32 0
  %237 = bitcast %"class.std::__1::unique_ptr"* %235 to i64*
  %238 = load i64, i64* %237, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %236, align 8
  %239 = bitcast %"class.std::__1::unique_ptr"* %234 to i64*
  store i64 %238, i64* %239, align 8
  %240 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %240, i64 -1
  store %"class.std::__1::unique_ptr"* %241, %"class.std::__1::unique_ptr"** %154, align 8
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %240, i64 -2
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %233, i64 -2
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %243, i64 0, i32 0, i32 0, i32 0
  %245 = bitcast %"class.std::__1::unique_ptr"* %243 to i64*
  %246 = load i64, i64* %245, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %244, align 8
  %247 = bitcast %"class.std::__1::unique_ptr"* %242 to i64*
  store i64 %246, i64* %247, align 8
  %248 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %248, i64 -1
  store %"class.std::__1::unique_ptr"* %249, %"class.std::__1::unique_ptr"** %154, align 8
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %248, i64 -2
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %233, i64 -3
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %251, i64 0, i32 0, i32 0, i32 0
  %253 = bitcast %"class.std::__1::unique_ptr"* %251 to i64*
  %254 = load i64, i64* %253, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %252, align 8
  %255 = bitcast %"class.std::__1::unique_ptr"* %250 to i64*
  store i64 %254, i64* %255, align 8
  %256 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %256, i64 -1
  store %"class.std::__1::unique_ptr"* %257, %"class.std::__1::unique_ptr"** %154, align 8
  %258 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %256, i64 -2
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %233, i64 -4
  %260 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %259, i64 0, i32 0, i32 0, i32 0
  %261 = bitcast %"class.std::__1::unique_ptr"* %259 to i64*
  %262 = load i64, i64* %261, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %260, align 8
  %263 = bitcast %"class.std::__1::unique_ptr"* %258 to i64*
  store i64 %262, i64* %263, align 8
  %264 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %264, i64 -1
  store %"class.std::__1::unique_ptr"* %265, %"class.std::__1::unique_ptr"** %154, align 8
  %266 = icmp eq %"class.std::__1::unique_ptr"* %259, %201
  br i1 %266, label %267, label %231

267:                                              ; preds = %226, %231, %194
  %268 = phi %"class.std::__1::unique_ptr"* [ %200, %194 ], [ %227, %226 ], [ %265, %231 ]
  %269 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %270 = icmp eq %"class.std::__1::unique_ptr"* %269, %1
  br i1 %270, label %271, label %277

271:                                              ; preds = %267
  %272 = ptrtoint %"class.std::__1::unique_ptr"* %269 to i64
  %273 = ptrtoint %"class.std::__1::unique_ptr"* %268 to i64
  %274 = bitcast %"class.std::__1::unique_ptr"** %154 to i64*
  %275 = bitcast %"class.std::__1::unique_ptr"** %155 to i64*
  %276 = load i64, i64* %275, align 8
  br label %346

277:                                              ; preds = %267
  %278 = bitcast %"class.std::__1::unique_ptr"** %155 to i64**
  %279 = load i64*, i64** %278, align 8
  %280 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %269, i64 -1, i32 0, i32 0, i32 0
  %281 = ptrtoint %"class.net::SchemeHostPortMatcherRule"** %280 to i64
  %282 = sub i64 %281, %4
  %283 = lshr i64 %282, 3
  %284 = add nuw nsw i64 %283, 1
  %285 = and i64 %284, 3
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %302, label %287

287:                                              ; preds = %277, %287
  %288 = phi i64* [ %297, %287 ], [ %279, %277 ]
  %289 = phi %"class.std::__1::unique_ptr"* [ %294, %287 ], [ %1, %277 ]
  %290 = phi i64 [ %298, %287 ], [ %285, %277 ]
  %291 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %289, i64 0, i32 0, i32 0, i32 0
  %292 = bitcast %"class.std::__1::unique_ptr"* %289 to i64*
  %293 = load i64, i64* %292, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %291, align 8
  store i64 %293, i64* %288, align 8
  %294 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %289, i64 1
  %295 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %155, align 8
  %296 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %295, i64 1
  store %"class.std::__1::unique_ptr"* %296, %"class.std::__1::unique_ptr"** %155, align 8
  %297 = bitcast %"class.std::__1::unique_ptr"* %296 to i64*
  %298 = add i64 %290, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %287, !llvm.loop !5

300:                                              ; preds = %287
  %301 = bitcast %"class.std::__1::unique_ptr"* %296 to i64*
  br label %302

302:                                              ; preds = %277, %300
  %303 = phi %"class.std::__1::unique_ptr"* [ undef, %277 ], [ %296, %300 ]
  %304 = phi i64* [ %279, %277 ], [ %301, %300 ]
  %305 = phi %"class.std::__1::unique_ptr"* [ %1, %277 ], [ %294, %300 ]
  %306 = icmp ult i64 %282, 24
  br i1 %306, label %339, label %307

307:                                              ; preds = %302, %307
  %308 = phi i64* [ %338, %307 ], [ %304, %302 ]
  %309 = phi %"class.std::__1::unique_ptr"* [ %334, %307 ], [ %305, %302 ]
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %309, i64 0, i32 0, i32 0, i32 0
  %311 = bitcast %"class.std::__1::unique_ptr"* %309 to i64*
  %312 = load i64, i64* %311, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %310, align 8
  store i64 %312, i64* %308, align 8
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %309, i64 1
  %314 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %155, align 8
  %315 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %314, i64 1
  store %"class.std::__1::unique_ptr"* %315, %"class.std::__1::unique_ptr"** %155, align 8
  %316 = bitcast %"class.std::__1::unique_ptr"* %315 to i64*
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %313, i64 0, i32 0, i32 0, i32 0
  %318 = bitcast %"class.std::__1::unique_ptr"* %313 to i64*
  %319 = load i64, i64* %318, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %317, align 8
  store i64 %319, i64* %316, align 8
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %309, i64 2
  %321 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %155, align 8
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %321, i64 1
  store %"class.std::__1::unique_ptr"* %322, %"class.std::__1::unique_ptr"** %155, align 8
  %323 = bitcast %"class.std::__1::unique_ptr"* %322 to i64*
  %324 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 0, i32 0, i32 0, i32 0
  %325 = bitcast %"class.std::__1::unique_ptr"* %320 to i64*
  %326 = load i64, i64* %325, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %324, align 8
  store i64 %326, i64* %323, align 8
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %309, i64 3
  %328 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %155, align 8
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %328, i64 1
  store %"class.std::__1::unique_ptr"* %329, %"class.std::__1::unique_ptr"** %155, align 8
  %330 = bitcast %"class.std::__1::unique_ptr"* %329 to i64*
  %331 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %327, i64 0, i32 0, i32 0, i32 0
  %332 = bitcast %"class.std::__1::unique_ptr"* %327 to i64*
  %333 = load i64, i64* %332, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %331, align 8
  store i64 %333, i64* %330, align 8
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %309, i64 4
  %335 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %155, align 8
  %336 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %335, i64 1
  store %"class.std::__1::unique_ptr"* %336, %"class.std::__1::unique_ptr"** %155, align 8
  %337 = icmp eq %"class.std::__1::unique_ptr"* %334, %269
  %338 = bitcast %"class.std::__1::unique_ptr"* %336 to i64*
  br i1 %337, label %339, label %307

339:                                              ; preds = %307, %302
  %340 = phi %"class.std::__1::unique_ptr"* [ %303, %302 ], [ %336, %307 ]
  %341 = ptrtoint %"class.std::__1::unique_ptr"* %340 to i64
  %342 = bitcast %"class.std::__1::unique_ptr"** %154 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = load i64, i64* %158, align 8
  %345 = bitcast %"class.std::__1::unique_ptr"** %155 to i64*
  br label %346

346:                                              ; preds = %271, %339
  %347 = phi i64* [ %275, %271 ], [ %345, %339 ]
  %348 = phi i64 [ %276, %271 ], [ %341, %339 ]
  %349 = phi i64 [ %272, %271 ], [ %344, %339 ]
  %350 = phi i64* [ %274, %271 ], [ %342, %339 ]
  %351 = phi i64 [ %273, %271 ], [ %343, %339 ]
  %352 = load i64, i64* %159, align 8
  store i64 %351, i64* %159, align 8
  store i64 %352, i64* %350, align 8
  store i64 %348, i64* %158, align 8
  store i64 %349, i64* %347, align 8
  %353 = load i64, i64* %169, align 8
  %354 = bitcast %"class.std::__1::unique_ptr"** %156 to i64*
  %355 = load i64, i64* %354, align 8
  store i64 %355, i64* %169, align 8
  store i64 %353, i64* %354, align 8
  %356 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %352, i64* %356, align 8
  %357 = inttoptr i64 %352 to %"class.std::__1::unique_ptr"*
  %358 = inttoptr i64 %349 to %"class.std::__1::unique_ptr"*
  %359 = icmp eq %"class.std::__1::unique_ptr"* %358, %357
  br i1 %359, label %376, label %360

360:                                              ; preds = %346, %371
  %361 = phi %"class.std::__1::unique_ptr"* [ %372, %371 ], [ %358, %346 ]
  %362 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %361, i64 -1
  store %"class.std::__1::unique_ptr"* %362, %"class.std::__1::unique_ptr"** %155, align 8
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %362, i64 0, i32 0, i32 0, i32 0
  %364 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %363, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %363, align 8
  %365 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %364, null
  br i1 %365, label %371, label %366

366:                                              ; preds = %360
  %367 = bitcast %"class.net::SchemeHostPortMatcherRule"* %364 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %368 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %367, align 8
  %369 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %368, i64 1
  %370 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %369, align 8
  call void %370(%"class.net::SchemeHostPortMatcherRule"* nonnull %364) #9
  br label %371

371:                                              ; preds = %366, %360
  %372 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %155, align 8
  %373 = icmp eq %"class.std::__1::unique_ptr"* %372, %357
  br i1 %373, label %374, label %360

374:                                              ; preds = %371
  %375 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %153, align 8
  br label %376

376:                                              ; preds = %374, %346
  %377 = phi %"class.std::__1::unique_ptr"* [ %375, %374 ], [ %357, %346 ]
  %378 = icmp eq %"class.std::__1::unique_ptr"* %377, null
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = bitcast %"class.std::__1::unique_ptr"* %377 to i8*
  call void @_ZdlPv(i8* %380) #10
  br label %381

381:                                              ; preds = %376, %379
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %152) #9
  br label %382

382:                                              ; preds = %145, %137, %16, %381
  %383 = phi %"class.std::__1::unique_ptr"* [ %1, %16 ], [ %200, %381 ], [ %1, %137 ], [ %1, %145 ]
  ret %"class.std::__1::unique_ptr"* %383
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SchemeHostPortMatcher11ReplaceRuleEmNSt3__110unique_ptrINS_25SchemeHostPortMatcherRuleENS1_14default_deleteIS3_EEEE(%"class.net::SchemeHostPortMatcher"* nocapture readonly, i64, %"class.net::SchemeHostPortMatcherRule"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.net::SchemeHostPortMatcherRule"* %2 to i64
  %5 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 %1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %4, i64* %10, align 8
  %11 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %9, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.net::SchemeHostPortMatcherRule"* %9 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %14 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %14, i64 1
  %16 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %15, align 8
  tail call void %16(%"class.net::SchemeHostPortMatcherRule"* nonnull %9) #9
  br label %17

17:                                               ; preds = %12, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net21SchemeHostPortMatcher8IncludesERK4GURL(%"class.net::SchemeHostPortMatcher"* nocapture readonly, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  br label %6

6:                                                ; preds = %10, %2
  %7 = phi %"class.std::__1::unique_ptr"* [ %4, %2 ], [ %11, %10 ]
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %7, %8
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 -1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %12, align 8
  %14 = bitcast %"class.net::SchemeHostPortMatcherRule"* %13 to i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)***
  %15 = load i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)**, i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)*, i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)** %15, i64 2
  %17 = load i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)*, i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)** %16, align 8
  %18 = tail call i32 %17(%"class.net::SchemeHostPortMatcherRule"* %13, %class.GURL* dereferenceable(120) %1) #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %6, label %20

20:                                               ; preds = %6, %10
  %21 = phi i32 [ %18, %10 ], [ 0, %6 ]
  %22 = icmp eq i32 %21, 1
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net21SchemeHostPortMatcher8EvaluateERK4GURL(%"class.net::SchemeHostPortMatcher"* nocapture readonly, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  br label %6

6:                                                ; preds = %10, %2
  %7 = phi %"class.std::__1::unique_ptr"* [ %4, %2 ], [ %11, %10 ]
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %7, %8
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 -1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %12, align 8
  %14 = bitcast %"class.net::SchemeHostPortMatcherRule"* %13 to i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)***
  %15 = load i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)**, i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)*, i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)** %15, i64 2
  %17 = load i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)*, i32 (%"class.net::SchemeHostPortMatcherRule"*, %class.GURL*)** %16, align 8
  %18 = tail call i32 %17(%"class.net::SchemeHostPortMatcherRule"* %13, %class.GURL* dereferenceable(120) %1) #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %6, label %20

20:                                               ; preds = %6, %10
  %21 = phi i32 [ %18, %10 ], [ 0, %6 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net21SchemeHostPortMatcher8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::SchemeHostPortMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #9
  %5 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %17

16:                                               ; preds = %37, %2
  ret void

17:                                               ; preds = %10, %37
  %18 = phi %"class.std::__1::unique_ptr"* [ %6, %10 ], [ %38, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %19, align 8
  %21 = bitcast %"class.net::SchemeHostPortMatcherRule"* %20 to void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)***
  %22 = load void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)** %22, i64 3
  %24 = load void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)** %23, align 8
  call void %24(%"class.std::__1::basic_string"* nonnull sret %3, %"class.net::SchemeHostPortMatcherRule"* %20) #9
  %25 = load i8, i8* %13, align 1
  %26 = icmp slt i8 %25, 0
  %27 = load i8*, i8** %14, align 8
  %28 = load i64, i64* %15, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i8* %27, i8* %11
  %31 = select i1 %26, i64 %28, i64 %29
  %32 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %30, i64 %31) #9
  %33 = load i8, i8* %13, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %17
  %36 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %17, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 59) #9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr"* %38, %8
  br i1 %39, label %16, label %17
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SchemeHostPortMatcher5ClearEv(%"class.net::SchemeHostPortMatcher"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::unique_ptr"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %10, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %10, align 8
  %12 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.net::SchemeHostPortMatcherRule"* %11 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %15 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %15, i64 1
  %17 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %16, align 8
  tail call void %17(%"class.net::SchemeHostPortMatcherRule"* nonnull %11) #9
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::unique_ptr"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::unique_ptr"* %3, %"class.std::__1::unique_ptr"** %4, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::__wrap_iter"* %3 to i64*
  %6 = bitcast %"class.std::__1::__wrap_iter"* %4 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %3, i64 0, i32 0
  %9 = inttoptr i64 %7 to i8*
  %10 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  br label %18

17:                                               ; preds = %34, %1
  store i8 1, i8* %2, align 4
  br label %61

18:                                               ; preds = %13, %34
  %19 = phi i8* [ %9, %13 ], [ %36, %34 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %8, align 8
  %21 = load i8, i8* %19, align 1
  %22 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %21, i64 0) #9
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %16, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i8*, i8** %15, align 8
  %29 = load i8, i8* %28, align 1
  switch i8 %29, label %30 [
    i8 32, label %34
    i8 13, label %34
    i8 10, label %34
    i8 9, label %34
    i8 12, label %34
  ]

30:                                               ; preds = %27, %24
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = icmp eq i8* %31, %32
  br i1 %33, label %61, label %39

34:                                               ; preds = %27, %27, %27, %27, %27, %18
  %35 = load i64, i64* %5, align 8
  store i64 %35, i64* %6, align 8
  %36 = inttoptr i64 %35 to i8*
  %37 = load i8*, i8** %10, align 8
  %38 = icmp eq i8* %37, %36
  br i1 %38, label %17, label %18

39:                                               ; preds = %30, %52
  %40 = phi i8* [ %53, %52 ], [ %31, %30 ]
  %41 = load i8, i8* %40, align 1
  %42 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %41, i64 0) #9
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %44, label %61

44:                                               ; preds = %39
  %45 = load i8*, i8** %8, align 8
  %46 = load i32, i32* %16, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = load i8, i8* %45, align 1
  %50 = add i8 %49, -9
  %51 = icmp ult i8 %50, 24
  br i1 %51, label %56, label %52

52:                                               ; preds = %56, %48, %44
  %53 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %53, i8** %8, align 8
  %54 = load i8*, i8** %10, align 8
  %55 = icmp eq i8* %53, %54
  br i1 %55, label %61, label %39

56:                                               ; preds = %48
  %57 = zext i8 %50 to i32
  %58 = lshr i32 8388635, %57
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %52, label %61

61:                                               ; preds = %17, %30, %52, %39, %56
  %62 = phi i1 [ true, %56 ], [ false, %17 ], [ true, %30 ], [ true, %52 ], [ true, %39 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::__wrap_iter"* %28 to i64*
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %28, i64 0, i32 0
  %34 = load i8, i8* %27, align 4, !range !6
  %35 = icmp eq i8 %34, 0
  br label %36

36:                                               ; preds = %113, %22
  %37 = phi i8* [ %5, %22 ], [ %106, %113 ]
  %38 = phi i64 [ %23, %22 ], [ %118, %113 ]
  %39 = phi i8* [ %24, %22 ], [ %114, %113 ]
  %40 = phi i1 [ %35, %22 ], [ false, %113 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %113 ]
  %42 = phi i8 [ 0, %22 ], [ %109, %113 ]
  %43 = phi i8 [ 0, %22 ], [ %110, %113 ]
  br i1 %40, label %105, label %44

44:                                               ; preds = %36
  store i8 0, i8* %27, align 4
  store i64 %38, i64* %29, align 8
  %45 = inttoptr i64 %38 to i8*
  %46 = icmp eq i8* %37, %45
  br i1 %46, label %91, label %47

47:                                               ; preds = %44, %76
  %48 = phi i8* [ %77, %76 ], [ %37, %44 ]
  %49 = phi i8* [ %82, %76 ], [ %39, %44 ]
  %50 = phi i8* [ %82, %76 ], [ %45, %44 ]
  %51 = phi i8 [ %81, %76 ], [ %43, %44 ]
  %52 = phi i8 [ %80, %76 ], [ %42, %44 ]
  %53 = phi i8 [ %79, %76 ], [ %41, %44 ]
  %54 = load i8, i8* %50, align 1
  %55 = icmp eq i8 %51, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %47
  %57 = icmp eq i8 %52, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %56
  %59 = icmp eq i8 %54, 92
  br i1 %59, label %76, label %60

60:                                               ; preds = %58
  %61 = icmp eq i8 %53, %54
  %62 = select i1 %61, i8 0, i8 %51
  br label %76

63:                                               ; preds = %47
  %64 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %30, i8 signext %54, i64 0) #9
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %66, label %84

66:                                               ; preds = %63
  %67 = load i32, i32* %31, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  switch i8 %54, label %70 [
    i8 32, label %84
    i8 13, label %84
    i8 10, label %84
    i8 9, label %84
    i8 12, label %84
  ]

70:                                               ; preds = %69, %66
  %71 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %32, i8 signext %54, i64 0) #9
  %72 = icmp ne i64 %71, -1
  %73 = zext i1 %72 to i8
  %74 = load i8*, i8** %26, align 8
  %75 = load i8*, i8** %4, align 8
  br label %76

76:                                               ; preds = %60, %70, %56, %58
  %77 = phi i8* [ %48, %58 ], [ %48, %56 ], [ %75, %70 ], [ %48, %60 ]
  %78 = phi i8* [ %49, %58 ], [ %49, %56 ], [ %74, %70 ], [ %49, %60 ]
  %79 = phi i8 [ %53, %58 ], [ %53, %56 ], [ %54, %70 ], [ %53, %60 ]
  %80 = phi i8 [ 1, %58 ], [ 0, %56 ], [ %52, %70 ], [ 0, %60 ]
  %81 = phi i8 [ %51, %58 ], [ %51, %56 ], [ %73, %70 ], [ %62, %60 ]
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %82, i8** %26, align 8
  %83 = icmp eq i8* %82, %77
  br i1 %83, label %84, label %47

84:                                               ; preds = %76, %69, %69, %69, %69, %69, %63
  %85 = phi i8 [ %53, %63 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %79, %76 ]
  %86 = phi i8 [ %52, %63 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %80, %76 ]
  %87 = phi i8 [ 0, %63 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ %81, %76 ]
  %88 = load i8*, i8** %33, align 8
  %89 = load i8*, i8** %26, align 8
  %90 = ptrtoint i8* %89 to i64
  br label %91

91:                                               ; preds = %84, %44
  %92 = phi i64 [ %38, %44 ], [ %90, %84 ]
  %93 = phi i8* [ %39, %44 ], [ %89, %84 ]
  %94 = phi i8* [ %37, %44 ], [ %88, %84 ]
  %95 = phi i8 [ %41, %44 ], [ %85, %84 ]
  %96 = phi i8 [ %42, %44 ], [ %86, %84 ]
  %97 = phi i8 [ %43, %44 ], [ %87, %84 ]
  %98 = icmp eq i8* %94, %93
  br i1 %98, label %99, label %119

99:                                               ; preds = %91
  %100 = load i32, i32* %25, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %119

103:                                              ; preds = %99
  %104 = load i8*, i8** %4, align 8
  br label %105

105:                                              ; preds = %103, %36
  %106 = phi i8* [ %37, %36 ], [ %104, %103 ]
  %107 = phi i64 [ %38, %36 ], [ %92, %103 ]
  %108 = phi i8 [ %41, %36 ], [ %95, %103 ]
  %109 = phi i8 [ %42, %36 ], [ %96, %103 ]
  %110 = phi i8 [ %43, %36 ], [ %97, %103 ]
  store i8 1, i8* %27, align 4
  store i64 %107, i64* %29, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = icmp eq i8* %106, %111
  br i1 %112, label %119, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds i8, i8* %111, i64 1
  store i8* %114, i8** %26, align 8
  %115 = load i32, i32* %25, align 8
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = ptrtoint i8* %114 to i64
  br i1 %117, label %36, label %119

119:                                              ; preds = %91, %113, %105, %99
  %120 = phi i1 [ true, %99 ], [ true, %91 ], [ false, %105 ], [ true, %113 ]
  ret i1 %120
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %6 to i64
  br i1 %7, label %9, label %185

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr"* %13 to i64
  br i1 %14, label %16, label %49

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr"* %11, %4
  br i1 %23, label %45, label %24

24:                                               ; preds = %16, %39
  %25 = phi %"class.std::__1::unique_ptr"* [ %41, %39 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr"* [ %40, %39 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %31, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.net::SchemeHostPortMatcherRule"* %31 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %36 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %36, i64 1
  %38 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %37, align 8
  tail call void %38(%"class.net::SchemeHostPortMatcherRule"* nonnull %31) #9
  br label %39

39:                                               ; preds = %34, %24
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr"* %40, %4
  br i1 %42, label %43, label %24

43:                                               ; preds = %39
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  br label %45

45:                                               ; preds = %43, %16
  %46 = phi %"class.std::__1::unique_ptr"* [ %4, %16 ], [ %44, %43 ]
  %47 = phi %"class.std::__1::unique_ptr"* [ %22, %16 ], [ %41, %43 ]
  store %"class.std::__1::unique_ptr"* %47, %"class.std::__1::unique_ptr"** %3, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %21
  store %"class.std::__1::unique_ptr"* %48, %"class.std::__1::unique_ptr"** %10, align 8
  br label %185

49:                                               ; preds = %9
  %50 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  %51 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %52 = sub i64 %8, %15
  %53 = ashr exact i64 %52, 2
  %54 = icmp eq i64 %52, 0
  %55 = select i1 %54, i64 1, i64 %53
  %56 = icmp ugt i64 %55, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %49
  tail call void @abort() #11
  unreachable

58:                                               ; preds = %49
  %59 = lshr i64 %55, 2
  %60 = shl i64 %55, 3
  %61 = tail call i8* @_Znwm(i64 %60) #10
  %62 = bitcast i8* %61 to %"class.std::__1::unique_ptr"*
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 %59
  %65 = ptrtoint %"class.std::__1::unique_ptr"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 %55
  %67 = ptrtoint %"class.std::__1::unique_ptr"* %66 to i64
  %68 = ptrtoint %"class.std::__1::unique_ptr"* %11 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr"* %4 to i64
  %70 = sub i64 %69, %68
  %71 = ashr exact i64 %70, 3
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 %71
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %160, label %74

74:                                               ; preds = %58
  %75 = add i64 %70, -8
  %76 = lshr i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 7
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %74, %80
  %81 = phi %"class.std::__1::unique_ptr"* [ %89, %80 ], [ %64, %74 ]
  %82 = phi i64 [ %90, %80 ], [ %65, %74 ]
  %83 = phi %"class.std::__1::unique_ptr"* [ %91, %80 ], [ %11, %74 ]
  %84 = phi i64 [ %92, %80 ], [ %78, %74 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %85, align 8
  %88 = inttoptr i64 %82 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 1
  %90 = ptrtoint %"class.std::__1::unique_ptr"* %89 to i64
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 1
  %92 = add i64 %84, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %80, !llvm.loop !7

94:                                               ; preds = %80
  %95 = ptrtoint %"class.std::__1::unique_ptr"* %89 to i64
  br label %96

96:                                               ; preds = %74, %94
  %97 = phi %"class.std::__1::unique_ptr"* [ %64, %74 ], [ %89, %94 ]
  %98 = phi i64 [ %65, %74 ], [ %95, %94 ]
  %99 = phi %"class.std::__1::unique_ptr"* [ %11, %74 ], [ %91, %94 ]
  %100 = icmp ult i64 %75, 56
  br i1 %100, label %155, label %101

101:                                              ; preds = %96, %101
  %102 = phi %"class.std::__1::unique_ptr"* [ %151, %101 ], [ %97, %96 ]
  %103 = phi i64 [ %152, %101 ], [ %98, %96 ]
  %104 = phi %"class.std::__1::unique_ptr"* [ %153, %101 ], [ %99, %96 ]
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %105, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 2
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 2
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 3
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 3
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 4
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 4
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 5
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 5
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %135, align 8
  %138 = bitcast %"class.std::__1::unique_ptr"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 6
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 6
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr"* %139 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 7
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 7
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %147, align 8
  %150 = bitcast %"class.std::__1::unique_ptr"* %145 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 8
  %152 = ptrtoint %"class.std::__1::unique_ptr"* %151 to i64
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 8
  %154 = icmp eq %"class.std::__1::unique_ptr"* %72, %151
  br i1 %154, label %155, label %101

155:                                              ; preds = %101, %96
  %156 = ptrtoint %"class.std::__1::unique_ptr"* %72 to i64
  %157 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %158 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %159 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %160

160:                                              ; preds = %58, %155
  %161 = phi %"class.std::__1::unique_ptr"* [ %159, %155 ], [ %4, %58 ]
  %162 = phi %"class.std::__1::unique_ptr"* [ %158, %155 ], [ %11, %58 ]
  %163 = phi %"class.std::__1::unique_ptr"* [ %157, %155 ], [ %13, %58 ]
  %164 = phi i64 [ %156, %155 ], [ %65, %58 ]
  store i64 %63, i64* %51, align 8
  %165 = bitcast %"class.std::__1::unique_ptr"** %10 to i64*
  store i64 %65, i64* %165, align 8
  %166 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  store i64 %164, i64* %166, align 8
  store i64 %67, i64* %50, align 8
  %167 = icmp eq %"class.std::__1::unique_ptr"* %161, %162
  br i1 %167, label %181, label %168

168:                                              ; preds = %160, %179
  %169 = phi %"class.std::__1::unique_ptr"* [ %170, %179 ], [ %161, %160 ]
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 -1
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %171, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %171, align 8
  %173 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %168
  %175 = bitcast %"class.net::SchemeHostPortMatcherRule"* %172 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %176 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %176, i64 1
  %178 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %177, align 8
  tail call void %178(%"class.net::SchemeHostPortMatcherRule"* nonnull %172) #9
  br label %179

179:                                              ; preds = %174, %168
  %180 = icmp eq %"class.std::__1::unique_ptr"* %170, %162
  br i1 %180, label %181, label %168

181:                                              ; preds = %179, %160
  %182 = icmp eq %"class.std::__1::unique_ptr"* %163, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.std::__1::unique_ptr"* %163 to i8*
  tail call void @_ZdlPv(i8* %184) #10
  br label %185

185:                                              ; preds = %183, %181, %45, %2
  %186 = bitcast %"class.std::__1::unique_ptr"** %3 to i64**
  %187 = load i64*, i64** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %190 = load i64, i64* %189, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %188, align 8
  store i64 %190, i64* %187, align 8
  %191 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %191, i64 1
  store %"class.std::__1::unique_ptr"* %192, %"class.std::__1::unique_ptr"** %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3net25SchemeHostPortMatcherRuleENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.net::SchemeHostPortMatcherRule"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !8

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %142, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %142, align 8
  %144 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.net::SchemeHostPortMatcherRule"* %143 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %147 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %147, i64 1
  %149 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %148, align 8
  tail call void %149(%"class.net::SchemeHostPortMatcherRule"* nonnull %143) #9
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = !{i8 0, i8 2}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
