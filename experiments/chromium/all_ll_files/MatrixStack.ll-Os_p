; ModuleID = '../../third_party/swiftshader/src/OpenGL/common/MatrixStack.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/common/MatrixStack.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sw::MatrixStack" = type { i32, i32, %"struct.sw::Matrix"* }
%"struct.sw::Matrix" = type { [4 x [4 x float]] }

@_ZN2sw11MatrixStackC1Ei = hidden unnamed_addr alias void (%"class.sw::MatrixStack"*, i32), void (%"class.sw::MatrixStack"*, i32)* @_ZN2sw11MatrixStackC2Ei
@_ZN2sw11MatrixStackD1Ev = hidden unnamed_addr alias void (%"class.sw::MatrixStack"*), void (%"class.sw::MatrixStack"*)* @_ZN2sw11MatrixStackD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStackC2Ei(%"class.sw::MatrixStack"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 64)
  %5 = extractvalue { i64, i1 } %4, 1
  %6 = extractvalue { i64, i1 } %4, 0
  %7 = select i1 %5, i64 -1, i64 %6
  %8 = tail call i8* @_Znam(i64 %7) #9
  %9 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %10 = bitcast %"struct.sw::Matrix"** %9 to i8**
  store i8* %8, i8** %10, align 8
  %11 = bitcast i8* %8 to i32*
  store i32 1065353216, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %8, i64 4
  %13 = getelementptr inbounds i8, i8* %8, i64 20
  %14 = bitcast i8* %13 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false)
  store i32 1065353216, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 24
  %16 = getelementptr inbounds i8, i8* %8, i64 40
  %17 = bitcast i8* %16 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 16, i1 false)
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %8, i64 44
  %19 = getelementptr inbounds i8, i8* %8, i64 60
  %20 = bitcast i8* %19 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 16, i1 false)
  store i32 1065353216, i32* %20, align 4
  %21 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 1
  store i32 %1, i32* %22, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStackD2Ev(%"class.sw::MatrixStack"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %3 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %2, align 8
  %4 = icmp eq %"struct.sw::Matrix"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.sw::Matrix"* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #9
  br label %7

7:                                                ; preds = %5, %1
  store %"struct.sw::Matrix"* null, %"struct.sw::Matrix"** %2, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack8identityEv(%"class.sw::MatrixStack"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %3 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %2, align 8
  %4 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6
  %8 = bitcast %"struct.sw::Matrix"* %7 to i32*
  store i32 1065353216, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 0, i64 1
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 1, i64 1
  %11 = bitcast float* %10 to i32*
  %12 = bitcast float* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false)
  store i32 1065353216, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 1, i64 2
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 2, i64 2
  %15 = bitcast float* %14 to i32*
  %16 = bitcast float* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false)
  store i32 1065353216, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 2, i64 3
  %18 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 3, i64 3
  %19 = bitcast float* %18 to i32*
  %20 = bitcast float* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 16, i1 false)
  store i32 1065353216, i32* %19, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack4loadERKNS_6MatrixE(%"class.sw::MatrixStack"* nocapture readonly, %"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %4 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %3, align 8
  %5 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7
  %9 = bitcast %"struct.sw::Matrix"* %1 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"struct.sw::Matrix"* %8 to i32*
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 1
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 0, i64 1
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 2
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 0, i64 2
  %21 = bitcast float* %20 to i32*
  store i32 %19, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 3
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 0, i64 3
  %26 = bitcast float* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 1, i64 0
  %31 = bitcast float* %30 to i32*
  store i32 %29, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 1
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 1, i64 1
  %36 = bitcast float* %35 to i32*
  store i32 %34, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 2
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 1, i64 2
  %41 = bitcast float* %40 to i32*
  store i32 %39, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 3
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 1, i64 3
  %46 = bitcast float* %45 to i32*
  store i32 %44, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 2, i64 0
  %51 = bitcast float* %50 to i32*
  store i32 %49, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 1
  %53 = bitcast float* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 2, i64 1
  %56 = bitcast float* %55 to i32*
  store i32 %54, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 2
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 2, i64 2
  %61 = bitcast float* %60 to i32*
  store i32 %59, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 3
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 2, i64 3
  %66 = bitcast float* %65 to i32*
  store i32 %64, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 3, i64 0
  %71 = bitcast float* %70 to i32*
  store i32 %69, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 1
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 3, i64 1
  %76 = bitcast float* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 2
  %78 = bitcast float* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 3, i64 2
  %81 = bitcast float* %80 to i32*
  store i32 %79, i32* %81, align 4
  %82 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 3
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %4, i64 %7, i32 0, i64 3, i64 3
  %86 = bitcast float* %85 to i32*
  store i32 %84, i32* %86, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack4loadEPKf(%"class.sw::MatrixStack"* nocapture readonly, float* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast float* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds float, float* %1, i64 4
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds float, float* %1, i64 8
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds float, float* %1, i64 12
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds float, float* %1, i64 1
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds float, float* %1, i64 5
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds float, float* %1, i64 9
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds float, float* %1, i64 13
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds float, float* %1, i64 2
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds float, float* %1, i64 6
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds float, float* %1, i64 10
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds float, float* %1, i64 14
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds float, float* %1, i64 3
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds float, float* %1, i64 7
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds float, float* %1, i64 11
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds float, float* %1, i64 15
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %51 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %50, align 8
  %52 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54
  %56 = bitcast %"struct.sw::Matrix"* %55 to i32*
  store i32 %4, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 0, i64 1
  %58 = bitcast float* %57 to i32*
  store i32 %7, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 0, i64 2
  %60 = bitcast float* %59 to i32*
  store i32 %10, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 0, i64 3
  %62 = bitcast float* %61 to i32*
  store i32 %13, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 1, i64 0
  %64 = bitcast float* %63 to i32*
  store i32 %16, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 1, i64 1
  %66 = bitcast float* %65 to i32*
  store i32 %19, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 1, i64 2
  %68 = bitcast float* %67 to i32*
  store i32 %22, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 1, i64 3
  %70 = bitcast float* %69 to i32*
  store i32 %25, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 2, i64 0
  %72 = bitcast float* %71 to i32*
  store i32 %28, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 2, i64 1
  %74 = bitcast float* %73 to i32*
  store i32 %31, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 2, i64 2
  %76 = bitcast float* %75 to i32*
  store i32 %34, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 2, i64 3
  %78 = bitcast float* %77 to i32*
  store i32 %37, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 3, i64 0
  %80 = bitcast float* %79 to i32*
  store i32 %40, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 3, i64 1
  %82 = bitcast float* %81 to i32*
  store i32 %43, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 3, i64 2
  %84 = bitcast float* %83 to i32*
  store i32 %46, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %51, i64 %54, i32 0, i64 3, i64 3
  %86 = bitcast float* %85 to i32*
  store i32 %49, i32* %86, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack4loadEPKd(%"class.sw::MatrixStack"* nocapture readonly, double* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load double, double* %1, align 8
  %4 = getelementptr inbounds double, double* %1, i64 4
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds double, double* %1, i64 8
  %7 = load double, double* %6, align 8
  %8 = getelementptr inbounds double, double* %1, i64 12
  %9 = load double, double* %8, align 8
  %10 = insertelement <4 x double> undef, double %3, i32 0
  %11 = insertelement <4 x double> %10, double %5, i32 1
  %12 = insertelement <4 x double> %11, double %7, i32 2
  %13 = insertelement <4 x double> %12, double %9, i32 3
  %14 = fptrunc <4 x double> %13 to <4 x float>
  %15 = getelementptr inbounds double, double* %1, i64 1
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds double, double* %1, i64 5
  %18 = load double, double* %17, align 8
  %19 = getelementptr inbounds double, double* %1, i64 9
  %20 = load double, double* %19, align 8
  %21 = getelementptr inbounds double, double* %1, i64 13
  %22 = load double, double* %21, align 8
  %23 = insertelement <4 x double> undef, double %16, i32 0
  %24 = insertelement <4 x double> %23, double %18, i32 1
  %25 = insertelement <4 x double> %24, double %20, i32 2
  %26 = insertelement <4 x double> %25, double %22, i32 3
  %27 = fptrunc <4 x double> %26 to <4 x float>
  %28 = getelementptr inbounds double, double* %1, i64 2
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds double, double* %1, i64 6
  %31 = load double, double* %30, align 8
  %32 = getelementptr inbounds double, double* %1, i64 10
  %33 = load double, double* %32, align 8
  %34 = getelementptr inbounds double, double* %1, i64 14
  %35 = load double, double* %34, align 8
  %36 = insertelement <4 x double> undef, double %29, i32 0
  %37 = insertelement <4 x double> %36, double %31, i32 1
  %38 = insertelement <4 x double> %37, double %33, i32 2
  %39 = insertelement <4 x double> %38, double %35, i32 3
  %40 = fptrunc <4 x double> %39 to <4 x float>
  %41 = getelementptr inbounds double, double* %1, i64 3
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds double, double* %1, i64 7
  %44 = load double, double* %43, align 8
  %45 = getelementptr inbounds double, double* %1, i64 11
  %46 = load double, double* %45, align 8
  %47 = getelementptr inbounds double, double* %1, i64 15
  %48 = load double, double* %47, align 8
  %49 = insertelement <4 x double> undef, double %42, i32 0
  %50 = insertelement <4 x double> %49, double %44, i32 1
  %51 = insertelement <4 x double> %50, double %46, i32 2
  %52 = insertelement <4 x double> %51, double %48, i32 3
  %53 = fptrunc <4 x double> %52 to <4 x float>
  %54 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %55 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %54, align 8
  %56 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %55, i64 %58, i32 0, i64 0, i64 0
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> %14, <4 x float>* %60, align 4
  %61 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %55, i64 %58, i32 0, i64 1, i64 0
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> %27, <4 x float>* %62, align 4
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %55, i64 %58, i32 0, i64 2, i64 0
  %64 = bitcast float* %63 to <4 x float>*
  store <4 x float> %40, <4 x float>* %64, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %55, i64 %58, i32 0, i64 3, i64 0
  %66 = bitcast float* %65 to <4 x float>*
  store <4 x float> %53, <4 x float>* %66, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack9translateEfff(%"class.sw::MatrixStack"* nocapture readonly, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.sw::Matrix", align 4
  %6 = bitcast %"struct.sw::Matrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10
  call void @_ZN2sw6Matrix9translateEfff(%"struct.sw::Matrix"* nonnull sret %5, float %1, float %2, float %3) #11
  %7 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %8 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %7, align 8
  %9 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 %11
  %13 = call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* %12, %"struct.sw::Matrix"* nonnull dereferenceable(64) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw6Matrix9translateEfff(%"struct.sw::Matrix"* sret, float, float, float) local_unnamed_addr #6

; Function Attrs: optsize
declare dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"*, %"struct.sw::Matrix"* dereferenceable(64)) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack9translateEddd(%"class.sw::MatrixStack"* nocapture readonly, double, double, double) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.sw::Matrix", align 4
  %6 = fptrunc double %1 to float
  %7 = fptrunc double %2 to float
  %8 = fptrunc double %3 to float
  %9 = bitcast %"struct.sw::Matrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #10
  call void @_ZN2sw6Matrix9translateEfff(%"struct.sw::Matrix"* nonnull sret %5, float %6, float %7, float %8) #11
  %10 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %11 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %10, align 8
  %12 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %11, i64 %14
  %16 = call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* %15, %"struct.sw::Matrix"* nonnull dereferenceable(64) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack6rotateEffff(%"class.sw::MatrixStack"* nocapture readonly, float, float, float, float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.sw::Matrix", align 4
  %7 = fmul float %2, %2
  %8 = fmul float %3, %3
  %9 = fadd float %7, %8
  %10 = fmul float %4, %4
  %11 = fadd float %9, %10
  %12 = tail call float @sqrtf(float %11) #11
  %13 = fdiv float 1.000000e+00, %12
  %14 = fmul float %13, %2
  %15 = fmul float %13, %3
  %16 = fmul float %13, %4
  %17 = fmul float %1, 0x3F91DF46A0000000
  %18 = tail call float @cosf(float %17) #11
  %19 = fsub float 1.000000e+00, %18
  %20 = tail call float @sinf(float %17) #11
  %21 = bitcast %"struct.sw::Matrix"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #10
  %22 = fmul float %14, %14
  %23 = fmul float %19, %22
  %24 = fadd float %18, %23
  %25 = fmul float %14, %15
  %26 = fmul float %19, %25
  %27 = fmul float %16, %20
  %28 = fsub float %26, %27
  %29 = fmul float %14, %16
  %30 = fmul float %19, %29
  %31 = fmul float %15, %20
  %32 = fadd float %31, %30
  %33 = fadd float %27, %26
  %34 = fmul float %15, %15
  %35 = fmul float %19, %34
  %36 = fadd float %18, %35
  %37 = fmul float %15, %16
  %38 = fmul float %19, %37
  %39 = fmul float %14, %20
  %40 = fsub float %38, %39
  %41 = fsub float %30, %31
  %42 = fadd float %39, %38
  %43 = fmul float %16, %16
  %44 = fmul float %19, %43
  %45 = fadd float %18, %44
  %46 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 0, i64 0
  store float %24, float* %46, align 4
  %47 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 0, i64 1
  store float %28, float* %47, align 4
  %48 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 0, i64 2
  store float %32, float* %48, align 4
  %49 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 0, i64 3
  store float 0.000000e+00, float* %49, align 4
  %50 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 1, i64 0
  store float %33, float* %50, align 4
  %51 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 1, i64 1
  store float %36, float* %51, align 4
  %52 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 1, i64 2
  store float %40, float* %52, align 4
  %53 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 1, i64 3
  store float 0.000000e+00, float* %53, align 4
  %54 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 2, i64 0
  store float %41, float* %54, align 4
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 2, i64 1
  store float %42, float* %55, align 4
  %56 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 2, i64 2
  store float %45, float* %56, align 4
  %57 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 2, i64 3
  %58 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %6, i64 0, i32 0, i64 3, i64 3
  %59 = bitcast float* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 16, i1 false) #10
  store float 1.000000e+00, float* %58, align 4
  %60 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %61 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %60, align 8
  %62 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %61, i64 %64
  %66 = call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* %65, %"struct.sw::Matrix"* nonnull dereferenceable(64) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack6rotateEdddd(%"class.sw::MatrixStack"* nocapture readonly, double, double, double, double) local_unnamed_addr #0 align 2 {
  %6 = fptrunc double %1 to float
  %7 = fptrunc double %2 to float
  %8 = fptrunc double %3 to float
  %9 = fptrunc double %4 to float
  tail call void @_ZN2sw11MatrixStack6rotateEffff(%"class.sw::MatrixStack"* %0, float %6, float %7, float %8, float %9) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack5scaleEfff(%"class.sw::MatrixStack"* nocapture readonly, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.sw::Matrix", align 4
  %6 = bitcast %"struct.sw::Matrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10
  call void @_ZN2sw6Matrix5scaleEfff(%"struct.sw::Matrix"* nonnull sret %5, float %1, float %2, float %3) #11
  %7 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %8 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %7, align 8
  %9 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 %11
  %13 = call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* %12, %"struct.sw::Matrix"* nonnull dereferenceable(64) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw6Matrix5scaleEfff(%"struct.sw::Matrix"* sret, float, float, float) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack5scaleEddd(%"class.sw::MatrixStack"* nocapture readonly, double, double, double) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.sw::Matrix", align 4
  %6 = fptrunc double %1 to float
  %7 = fptrunc double %2 to float
  %8 = fptrunc double %3 to float
  %9 = bitcast %"struct.sw::Matrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #10
  call void @_ZN2sw6Matrix5scaleEfff(%"struct.sw::Matrix"* nonnull sret %5, float %6, float %7, float %8) #11
  %10 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %11 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %10, align 8
  %12 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %11, i64 %14
  %16 = call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* %15, %"struct.sw::Matrix"* nonnull dereferenceable(64) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack8multiplyEPKf(%"class.sw::MatrixStack"* nocapture readonly, float* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.sw::Matrix", align 4
  %4 = bitcast %"struct.sw::Matrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #10
  %5 = bitcast float* %1 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds float, float* %1, i64 4
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds float, float* %1, i64 8
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds float, float* %1, i64 12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds float, float* %1, i64 1
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds float, float* %1, i64 5
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds float, float* %1, i64 9
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds float, float* %1, i64 13
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds float, float* %1, i64 2
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds float, float* %1, i64 6
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds float, float* %1, i64 10
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds float, float* %1, i64 14
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds float, float* %1, i64 3
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds float, float* %1, i64 7
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds float, float* %1, i64 11
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds float, float* %1, i64 15
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = bitcast %"struct.sw::Matrix"* %3 to i32*
  store i32 %6, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 0, i64 1
  %54 = bitcast float* %53 to i32*
  store i32 %9, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 0, i64 2
  %56 = bitcast float* %55 to i32*
  store i32 %12, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 0, i64 3
  %58 = bitcast float* %57 to i32*
  store i32 %15, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 0
  %60 = bitcast float* %59 to i32*
  store i32 %18, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 1
  %62 = bitcast float* %61 to i32*
  store i32 %21, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 2
  %64 = bitcast float* %63 to i32*
  store i32 %24, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 3
  %66 = bitcast float* %65 to i32*
  store i32 %27, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 0
  %68 = bitcast float* %67 to i32*
  store i32 %30, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 1
  %70 = bitcast float* %69 to i32*
  store i32 %33, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 2
  %72 = bitcast float* %71 to i32*
  store i32 %36, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 3
  %74 = bitcast float* %73 to i32*
  store i32 %39, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 0
  %76 = bitcast float* %75 to i32*
  store i32 %42, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 1
  %78 = bitcast float* %77 to i32*
  store i32 %45, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 2
  %80 = bitcast float* %79 to i32*
  store i32 %48, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 3
  %82 = bitcast float* %81 to i32*
  store i32 %51, i32* %82, align 4
  %83 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %84 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %83, align 8
  %85 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %84, i64 %87
  %89 = call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* %88, %"struct.sw::Matrix"* nonnull dereferenceable(64) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack8multiplyEPKd(%"class.sw::MatrixStack"* nocapture readonly, double* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.sw::Matrix", align 16
  %4 = bitcast %"struct.sw::Matrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #10
  %5 = load double, double* %1, align 8
  %6 = getelementptr inbounds double, double* %1, i64 4
  %7 = load double, double* %6, align 8
  %8 = getelementptr inbounds double, double* %1, i64 8
  %9 = load double, double* %8, align 8
  %10 = getelementptr inbounds double, double* %1, i64 12
  %11 = load double, double* %10, align 8
  %12 = insertelement <4 x double> undef, double %5, i32 0
  %13 = insertelement <4 x double> %12, double %7, i32 1
  %14 = insertelement <4 x double> %13, double %9, i32 2
  %15 = insertelement <4 x double> %14, double %11, i32 3
  %16 = fptrunc <4 x double> %15 to <4 x float>
  %17 = getelementptr inbounds double, double* %1, i64 1
  %18 = load double, double* %17, align 8
  %19 = getelementptr inbounds double, double* %1, i64 5
  %20 = load double, double* %19, align 8
  %21 = getelementptr inbounds double, double* %1, i64 9
  %22 = load double, double* %21, align 8
  %23 = getelementptr inbounds double, double* %1, i64 13
  %24 = load double, double* %23, align 8
  %25 = insertelement <4 x double> undef, double %18, i32 0
  %26 = insertelement <4 x double> %25, double %20, i32 1
  %27 = insertelement <4 x double> %26, double %22, i32 2
  %28 = insertelement <4 x double> %27, double %24, i32 3
  %29 = fptrunc <4 x double> %28 to <4 x float>
  %30 = getelementptr inbounds double, double* %1, i64 2
  %31 = load double, double* %30, align 8
  %32 = getelementptr inbounds double, double* %1, i64 6
  %33 = load double, double* %32, align 8
  %34 = getelementptr inbounds double, double* %1, i64 10
  %35 = load double, double* %34, align 8
  %36 = getelementptr inbounds double, double* %1, i64 14
  %37 = load double, double* %36, align 8
  %38 = insertelement <4 x double> undef, double %31, i32 0
  %39 = insertelement <4 x double> %38, double %33, i32 1
  %40 = insertelement <4 x double> %39, double %35, i32 2
  %41 = insertelement <4 x double> %40, double %37, i32 3
  %42 = fptrunc <4 x double> %41 to <4 x float>
  %43 = getelementptr inbounds double, double* %1, i64 3
  %44 = load double, double* %43, align 8
  %45 = getelementptr inbounds double, double* %1, i64 7
  %46 = load double, double* %45, align 8
  %47 = getelementptr inbounds double, double* %1, i64 11
  %48 = load double, double* %47, align 8
  %49 = getelementptr inbounds double, double* %1, i64 15
  %50 = load double, double* %49, align 8
  %51 = insertelement <4 x double> undef, double %44, i32 0
  %52 = insertelement <4 x double> %51, double %46, i32 1
  %53 = insertelement <4 x double> %52, double %48, i32 2
  %54 = insertelement <4 x double> %53, double %50, i32 3
  %55 = fptrunc <4 x double> %54 to <4 x float>
  %56 = bitcast %"struct.sw::Matrix"* %3 to <4 x float>*
  store <4 x float> %16, <4 x float>* %56, align 16
  %57 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 0
  %58 = bitcast float* %57 to <4 x float>*
  store <4 x float> %29, <4 x float>* %58, align 16
  %59 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 0
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> %42, <4 x float>* %60, align 16
  %61 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 0
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> %55, <4 x float>* %62, align 16
  %63 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %64 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %63, align 8
  %65 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %64, i64 %67
  %69 = call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* %68, %"struct.sw::Matrix"* nonnull dereferenceable(64) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack7frustumEffffff(%"class.sw::MatrixStack"* nocapture readonly, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.sw::Matrix", align 4
  %9 = fadd float %1, %2
  %10 = fsub float %2, %1
  %11 = fdiv float %9, %10
  %12 = fadd float %3, %4
  %13 = fsub float %4, %3
  %14 = fdiv float %12, %13
  %15 = fadd float %5, %6
  %16 = fsub float -0.000000e+00, %15
  %17 = fsub float %6, %5
  %18 = fdiv float %16, %17
  %19 = fmul float %6, -2.000000e+00
  %20 = fmul float %19, %5
  %21 = fdiv float %20, %17
  %22 = bitcast %"struct.sw::Matrix"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #10
  %23 = fmul float %5, 2.000000e+00
  %24 = fdiv float %23, %10
  %25 = fdiv float %23, %13
  %26 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 0, i64 0
  store float %24, float* %26, align 4
  %27 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 0, i64 1
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 0, i64 2
  store float %11, float* %28, align 4
  %29 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 0, i64 3
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 1, i64 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 1, i64 1
  store float %25, float* %31, align 4
  %32 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 1, i64 2
  store float %14, float* %32, align 4
  %33 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 1, i64 3
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 2, i64 0
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 2, i64 1
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 2, i64 2
  store float %18, float* %36, align 4
  %37 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 2, i64 3
  store float %21, float* %37, align 4
  %38 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 3, i64 0
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, float 0.000000e+00>, <4 x float>* %39, align 4
  %40 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %41 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %40, align 8
  %42 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %41, i64 %44
  %46 = call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* %45, %"struct.sw::Matrix"* nonnull dereferenceable(64) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11MatrixStack5orthoEdddddd(%"class.sw::MatrixStack"* nocapture readonly, double, double, double, double, double, double) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.sw::Matrix", align 4
  %9 = fptrunc double %1 to float
  %10 = fptrunc double %2 to float
  %11 = fptrunc double %3 to float
  %12 = fptrunc double %4 to float
  %13 = fptrunc double %5 to float
  %14 = fptrunc double %6 to float
  %15 = fadd float %9, %10
  %16 = fsub float -0.000000e+00, %15
  %17 = fsub float %10, %9
  %18 = fdiv float %16, %17
  %19 = fadd float %11, %12
  %20 = fsub float -0.000000e+00, %19
  %21 = fsub float %12, %11
  %22 = fdiv float %20, %21
  %23 = fadd float %13, %14
  %24 = fsub float -0.000000e+00, %23
  %25 = fsub float %14, %13
  %26 = fdiv float %24, %25
  %27 = bitcast %"struct.sw::Matrix"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27) #10
  %28 = fdiv float 2.000000e+00, %17
  %29 = fdiv float 2.000000e+00, %21
  %30 = fdiv float -2.000000e+00, %25
  %31 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 0, i64 0
  store float %28, float* %31, align 4
  %32 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 0, i64 1
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 0, i64 2
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 0, i64 3
  store float %18, float* %34, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 1, i64 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 1, i64 1
  store float %29, float* %36, align 4
  %37 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 1, i64 2
  store float 0.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 1, i64 3
  store float %22, float* %38, align 4
  %39 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 2, i64 0
  store float 0.000000e+00, float* %39, align 4
  %40 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 2, i64 1
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 2, i64 2
  store float %30, float* %41, align 4
  %42 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 2, i64 3
  store float %26, float* %42, align 4
  %43 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %8, i64 0, i32 0, i64 3, i64 0
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %44, align 4
  %45 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %46 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %45, align 8
  %47 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %46, i64 %49
  %51 = call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* %50, %"struct.sw::Matrix"* nonnull dereferenceable(64) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN2sw11MatrixStack4pushEv(%"class.sw::MatrixStack"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, -1
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %36

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %10 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %9, align 8
  %11 = sext i32 %3 to i64
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %10, i64 %11
  %13 = add nsw i32 %3, 1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %10, i64 %14
  %16 = bitcast %"struct.sw::Matrix"* %12 to <4 x i32>*
  %17 = load <4 x i32>, <4 x i32>* %16, align 4
  %18 = bitcast %"struct.sw::Matrix"* %15 to <4 x i32>*
  store <4 x i32> %17, <4 x i32>* %18, align 4
  %19 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %10, i64 %11, i32 0, i64 1, i64 0
  %20 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %10, i64 %14, i32 0, i64 1, i64 0
  %21 = bitcast float* %19 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4
  %23 = bitcast float* %20 to <4 x i32>*
  store <4 x i32> %22, <4 x i32>* %23, align 4
  %24 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %10, i64 %11, i32 0, i64 2, i64 0
  %25 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %10, i64 %14, i32 0, i64 2, i64 0
  %26 = bitcast float* %24 to <4 x i32>*
  %27 = load <4 x i32>, <4 x i32>* %26, align 4
  %28 = bitcast float* %25 to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %28, align 4
  %29 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %10, i64 %11, i32 0, i64 3, i64 0
  %30 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %10, i64 %14, i32 0, i64 3, i64 0
  %31 = bitcast float* %29 to <4 x i32>*
  %32 = load <4 x i32>, <4 x i32>* %31, align 4
  %33 = bitcast float* %30 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %33, align 4
  %34 = load i32, i32* %2, align 8
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %2, align 8
  br label %36

36:                                               ; preds = %1, %8
  %37 = phi i1 [ true, %8 ], [ false, %1 ]
  ret i1 %37
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN2sw11MatrixStack3popEv(%"class.sw::MatrixStack"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = add nsw i32 %3, -1
  store i32 %6, i32* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ true, %5 ], [ false, %1 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw11MatrixStack7currentEv(%"class.sw::MatrixStack"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %3 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %2, align 8
  %4 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6
  ret %"struct.sw::Matrix"* %7
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw11MatrixStack10isIdentityEv(%"class.sw::MatrixStack"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 2
  %3 = load %"struct.sw::Matrix"*, %"struct.sw::Matrix"** %2, align 8
  %4 = getelementptr inbounds %"class.sw::MatrixStack", %"class.sw::MatrixStack"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 0, i64 0
  %8 = load float, float* %7, align 4
  %9 = fcmp une float %8, 1.000000e+00
  br i1 %9, label %70, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 0, i64 1
  %12 = load float, float* %11, align 4
  %13 = fcmp une float %12, 0.000000e+00
  br i1 %13, label %70, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 0, i64 2
  %16 = load float, float* %15, align 4
  %17 = fcmp une float %16, 0.000000e+00
  br i1 %17, label %70, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 0, i64 3
  %20 = load float, float* %19, align 4
  %21 = fcmp une float %20, 0.000000e+00
  br i1 %21, label %70, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 1, i64 0
  %24 = load float, float* %23, align 4
  %25 = fcmp une float %24, 0.000000e+00
  br i1 %25, label %70, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 1, i64 1
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %28, 1.000000e+00
  br i1 %29, label %70, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 1, i64 2
  %32 = load float, float* %31, align 4
  %33 = fcmp une float %32, 0.000000e+00
  br i1 %33, label %70, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 1, i64 3
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %36, 0.000000e+00
  br i1 %37, label %70, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 2, i64 0
  %40 = load float, float* %39, align 4
  %41 = fcmp une float %40, 0.000000e+00
  br i1 %41, label %70, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 2, i64 1
  %44 = load float, float* %43, align 4
  %45 = fcmp une float %44, 0.000000e+00
  br i1 %45, label %70, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 2, i64 2
  %48 = load float, float* %47, align 4
  %49 = fcmp une float %48, 1.000000e+00
  br i1 %49, label %70, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 2, i64 3
  %52 = load float, float* %51, align 4
  %53 = fcmp une float %52, 0.000000e+00
  br i1 %53, label %70, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 3, i64 0
  %56 = load float, float* %55, align 4
  %57 = fcmp une float %56, 0.000000e+00
  br i1 %57, label %70, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 3, i64 1
  %60 = load float, float* %59, align 4
  %61 = fcmp une float %60, 0.000000e+00
  br i1 %61, label %70, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 3, i64 2
  %64 = load float, float* %63, align 4
  %65 = fcmp une float %64, 0.000000e+00
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 %6, i32 0, i64 3, i64 3
  %68 = load float, float* %67, align 4
  %69 = fcmp oeq float %68, 1.000000e+00
  br label %70

70:                                               ; preds = %66, %62, %58, %54, %50, %46, %42, %38, %34, %30, %26, %22, %18, %14, %10, %1
  %71 = phi i1 [ false, %1 ], [ false, %10 ], [ false, %14 ], [ false, %18 ], [ false, %22 ], [ false, %26 ], [ false, %30 ], [ false, %34 ], [ false, %38 ], [ false, %42 ], [ false, %46 ], [ false, %50 ], [ false, %54 ], [ false, %58 ], [ false, %62 ], [ %69, %66 ]
  ret i1 %71
}

; Function Attrs: nofree nounwind optsize
declare float @sqrtf(float) local_unnamed_addr #8

; Function Attrs: nofree nounwind optsize
declare float @cosf(float) local_unnamed_addr #8

; Function Attrs: nofree nounwind optsize
declare float @sinf(float) local_unnamed_addr #8

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind optsize }
attributes #10 = { nounwind }
attributes #11 = { nounwind optsize }
attributes #12 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
