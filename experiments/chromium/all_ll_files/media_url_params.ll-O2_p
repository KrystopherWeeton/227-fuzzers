; ModuleID = '../../media/base/media_url_params.cc'
source_filename = "../../media/base/media_url_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.media::MediaUrlParams" = type <{ %class.GURL, %class.GURL, %"class.url::Origin", i8, i8, [6 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }

@_ZN5media14MediaUrlParamsC1E4GURLS1_N3url6OriginEbb = hidden unnamed_addr alias void (%"struct.media::MediaUrlParams"*, %class.GURL*, %class.GURL*, %"class.url::Origin"*, i1, i1), void (%"struct.media::MediaUrlParams"*, %class.GURL*, %class.GURL*, %"class.url::Origin"*, i1, i1)* @_ZN5media14MediaUrlParamsC2E4GURLS1_N3url6OriginEbb
@_ZN5media14MediaUrlParamsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.media::MediaUrlParams"*, %"struct.media::MediaUrlParams"*), void (%"struct.media::MediaUrlParams"*, %"struct.media::MediaUrlParams"*)* @_ZN5media14MediaUrlParamsC2ERKS0_
@_ZN5media14MediaUrlParamsD1Ev = hidden unnamed_addr alias void (%"struct.media::MediaUrlParams"*), void (%"struct.media::MediaUrlParams"*)* @_ZN5media14MediaUrlParamsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14MediaUrlParamsC2E4GURLS1_N3url6OriginEbb(%"struct.media::MediaUrlParams"*, %class.GURL*, %class.GURL*, %"class.url::Origin"*, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = zext i1 %4 to i8
  %8 = zext i1 %5 to i8
  %9 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %1) #3
  %10 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %10, %class.GURL* dereferenceable(120) %2) #3
  %11 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 2
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %11, %"class.url::Origin"* dereferenceable(80) %3) #3
  %12 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 3
  store i8 %7, i8* %12, align 8
  %13 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 4
  store i8 %8, i8* %13, align 1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14MediaUrlParamsC2ERKS0_(%"struct.media::MediaUrlParams"*, %"struct.media::MediaUrlParams"* dereferenceable(328)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #3
  %5 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %5, %class.GURL* dereferenceable(120) %6) #3
  %7 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %1, i64 0, i32 2
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %7, %"class.url::Origin"* dereferenceable(80) %8) #3
  %9 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %1, i64 0, i32 3
  %11 = bitcast i8* %10 to i16*
  %12 = bitcast i8* %9 to i16*
  %13 = load i16, i16* %11, align 8
  store i16 %13, i16* %12, align 8
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14MediaUrlParamsD2Ev(%"struct.media::MediaUrlParams"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 2
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %2) #3
  %3 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #3
  %4 = getelementptr inbounds %"struct.media::MediaUrlParams", %"struct.media::MediaUrlParams"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %4) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
