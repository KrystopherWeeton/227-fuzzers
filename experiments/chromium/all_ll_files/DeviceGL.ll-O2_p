; ModuleID = '../../third_party/dawn/src/dawn_native/opengl/DeviceGL.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/opengl/DeviceGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::opengl::Device" = type <{ %"class.dawn_native::DeviceBase", %"struct.dawn_native::opengl::OpenGLFunctions", %"class.std::__1::queue", %"struct.std::__1::array.107", [4 x i8] }>
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr.25", %class.Ref.29, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.31", %class.Ref.37, %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %class.Ref.66, %"class.std::__1::unique_ptr.75", i32, %"struct.std::__1::array.81", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91" }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref.29 = type { %class.RefBase.30 }
%class.RefBase.30 = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.37 = type { %class.RefBase.38 }
%class.RefBase.38 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"struct.dawn_native::BindingCounts", %"class.ityp::vector", %"class.std::__1::map" }
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%"struct.dawn_native::BindingCounts" = type { i32, i32, i32, i32, i32, %"class.dawn_native::PerStage" }
%"class.dawn_native::PerStage" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [3 x %"struct.dawn_native::PerStageBindingCounts"] }
%"struct.dawn_native::PerStageBindingCounts" = type { i32, i32, i32, i32, i32 }
%"class.ityp::vector" = type { %"class.std::__1::vector.39" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"*, %"class.std::__1::__compressed_pair.41" }
%"struct.dawn_native::BindingInfo" = type { i32, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%"struct.dawn_native::BufferBindingLayout" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i64 }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::SamplerBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::TextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::StorageTextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.dawn_native::BindingInfo"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.66 = type { %class.RefBase.67 }
%class.RefBase.67 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type { %"class.dawn_native::ObjectBase", %class.SerialQueue }
%class.SerialQueue = type { %class.SerialStorage }
%class.SerialStorage = type { %"class.std::__1::vector.68" }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.70" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array.81" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.82" }
%"struct.std::__1::array.82" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset.83" }
%"class.std::__1::bitset.83" = type { %"class.std::__1::__bitset.84" }
%"class.std::__1::__bitset.84" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"struct.dawn_native::opengl::OpenGLFunctions" = type { %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLVersion", [4 x i8], %"class.std::__1::unordered_set" }
%"struct.dawn_native::opengl::OpenGLFunctionsBase" = type { void (i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (float, float, float, float)*, void (float)*, void (i32)*, void (i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, i32 ()*, i32 (i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i8*)*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i8*)*, void (i32, i32, i32*)*, i32 ()*, void (i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, void (i32, i32)*, void (float, float)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (float, i8)*, void (i32, i32, i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32, i8**)*, void (i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32)*, void ()*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i8**, i32)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, float, i32)*, i8* (i32, i32)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32)*, %struct.__GLsync* (i32, i32)*, i8 (%struct.__GLsync*)*, void (%struct.__GLsync*)*, i32 (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i64*)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void ()*, void ()*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float, float)*, void (i32, i32, float, float, float)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i64, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i8, i8, i8, i8)*, i8 (i32, i32)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i32)*, void (float, float, float, float, float, float, float, float)*, i32 ()*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (float)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (float)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32)*, void (double)*, void (i32)*, void (i32, float)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (double, double)*, void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i64, i64, i8*)*, i8* (i32, i32)*, void (i32, i32, double*)*, void (i32, double)*, void (i32, double*)*, void (i32, i16)*, void (i32, i16*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, i16, i16)*, void (i32, i16*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8, i8, i8, i8)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, i32*)*, void (i32, i16, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32*, i32, i8**, i32, i32*)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i8*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, double*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, double, double)*, void (i32, i32, float*)*, void (i32, i32, double*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i8*, i32, i32)*, void (i32, i32, i8*, i32, i32)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i64*, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, i8 (i32)*, void (i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i32*, i64*, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i16*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*, i32, i8*, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void ()*, void (i32, i8*, i32, i32*, i32*)*, void (i32, i8*, i64, i32, i32)*, void (i32, i32, i8*, i64, i32, i32)*, void (float, float, float)* }
%struct.__GLsync = type opaque
%"struct.dawn_native::opengl::OpenGLVersion" = type { i32, i32, i32 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.103" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"**, %"class.std::__1::__compressed_pair.98" }
%"struct.std::__1::pair.97" = type { %struct.__GLsync*, i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::pair.97"** }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::array.107" = type { [55 x %"struct.dawn_native::opengl::GLFormat"] }
%"struct.dawn_native::opengl::GLFormat" = type { i32, i32, i32, i8, i32 }
%"class.dawn_native::AdapterBase" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%"struct.dawn_native::PCIInfo" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.dawn_native::DeviceDescriptor" = type { %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8** }
%class.Result = type { i64 }
%class.Result.108 = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.112" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.114" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"class.dawn_native::opengl::Queue" = type { %"class.dawn_native::QueueBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.std::__1::basic_string" }
%class.Result.135 = type { i64 }
%"struct.dawn_native::BindGroupDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, %"class.dawn_native::BindGroupLayoutBase"*, i32, %"struct.dawn_native::BindGroupEntry"* }
%"struct.dawn_native::BindGroupEntry" = type { i32, %"class.dawn_native::BufferBase"*, i64, i64, %"class.dawn_native::SamplerBase"*, %"class.dawn_native::TextureViewBase"* }
%"class.dawn_native::BufferBase" = type { %"class.dawn_native::ObjectBase", i64, i32, i32, i8, %"class.std::__1::unique_ptr.122", void (i32, i8*)*, i8*, i64, i32, i64, i64 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.dawn_native::StagingBufferBase"* }
%"class.dawn_native::StagingBufferBase" = type { i32 (...)**, i8*, i64 }
%"class.dawn_native::SamplerBase" = type <{ %"class.dawn_native::CachedObject.base", [3 x i8], i32, i32, i32, i32, i32, i32, float, float, i32, i16, [6 x i8] }>
%"class.dawn_native::TextureViewBase" = type { %"class.dawn_native::ObjectBase", %class.Ref.128, %"struct.dawn_native::Format"*, i32, %"struct.dawn_native::SubresourceRange" }
%class.Ref.128 = type { %class.RefBase.129 }
%class.RefBase.129 = type { %"class.dawn_native::TextureBase"* }
%"class.dawn_native::TextureBase" = type { %"class.dawn_native::ObjectBase", i32, %"struct.dawn_native::Format"*, %"struct.dawn_native::Extent3D", i32, i32, i32, i32, %"class.std::__1::vector.130" }
%"struct.dawn_native::Extent3D" = type { i32, i32, i32 }
%"class.std::__1::vector.130" = type { i64*, i64, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.dawn_native::SubresourceRange" = type { i8, i32, i32, i32, i32 }
%class.Ref.136 = type { %class.RefBase.137 }
%class.RefBase.137 = type { %"class.dawn_native::opengl::BindGroup"* }
%"class.dawn_native::opengl::BindGroup" = type { %"class.dawn_native::BindGroupBase" }
%"class.dawn_native::BindGroupBase" = type { %"class.dawn_native::ObjectBase", %class.Ref.37, %"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" }
%"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" = type { %"class.ityp::span", %"class.ityp::span.138", %"class.ityp::span.142" }
%"class.ityp::span" = type <{ %"struct.dawn_native::BindGroupLayoutBase::BufferBindingData"*, i32, [4 x i8] }>
%"struct.dawn_native::BindGroupLayoutBase::BufferBindingData" = type { i64, i64 }
%"class.ityp::span.138" = type <{ %class.Ref.139*, i32, [4 x i8] }>
%class.Ref.139 = type { %class.RefBase.140 }
%class.RefBase.140 = type { %"class.dawn_native::ObjectBase"* }
%"class.ityp::span.142" = type <{ i64*, i32, [4 x i8] }>
%class.Result.144 = type { i64 }
%"struct.dawn_native::BindGroupLayoutDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, i32, %"struct.dawn_native::BindGroupLayoutEntry"* }
%"struct.dawn_native::BindGroupLayoutEntry" = type { %"struct.dawn_native::ChainedStruct"*, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%"class.dawn_native::opengl::BindGroupLayout" = type { %"class.dawn_native::BindGroupLayoutBase", %class.SlabAllocator }
%class.SlabAllocator = type { %class.SlabAllocatorImpl }
%class.SlabAllocatorImpl = type { i32, i32, i32, i32, i16, i64, %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab" }
%"struct.SlabAllocatorImpl::SentinelSlab" = type { %"struct.SlabAllocatorImpl::Slab.base", [6 x i8] }
%"struct.SlabAllocatorImpl::Slab.base" = type <{ i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*, i16 }>
%"struct.SlabAllocatorImpl::IndexLinkNode" = type { i16, i16 }
%"struct.SlabAllocatorImpl::Slab" = type <{ i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*, i16, [6 x i8] }>
%class.Result.147 = type { i64 }
%"struct.dawn_native::BufferDescriptor" = type <{ %"struct.dawn_native::ChainedStruct"*, i8*, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.dawn_native::opengl::Buffer" = type { %"class.dawn_native::BufferBase", i32, i8* }
%class.Result.150 = type { i64 }
%"class.dawn_native::CommandEncoder" = type opaque
%"struct.dawn_native::CommandBufferDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8* }
%"class.dawn_native::opengl::CommandBuffer" = type { %"class.dawn_native::CommandBufferBase.base", [7 x i8] }
%"class.dawn_native::CommandBufferBase.base" = type <{ %"class.dawn_native::ObjectBase", %"class.dawn_native::CommandIterator", %"struct.dawn_native::CommandBufferResourceUsage", i8 }>
%"class.dawn_native::CommandIterator" = type <{ %"class.std::__1::vector.153", i8*, i64, i32, [4 x i8] }>
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"*, %"class.std::__1::__compressed_pair.155" }
%"struct.dawn_native::BlockDef" = type { i64, i8* }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.dawn_native::BlockDef"* }
%"struct.dawn_native::CommandBufferResourceUsage" = type { %"class.std::__1::vector.160", %"class.std::__1::vector.216", %"class.std::__1::set", %"class.std::__1::set.234", %"class.std::__1::set.249" }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"struct.dawn_native::RenderPassResourceUsage"*, %"struct.dawn_native::RenderPassResourceUsage"*, %"class.std::__1::__compressed_pair.211" }
%"struct.dawn_native::RenderPassResourceUsage" = type { %"struct.dawn_native::SyncScopeResourceUsage", %"class.std::__1::vector.190", %"class.std::__1::vector.204" }
%"struct.dawn_native::SyncScopeResourceUsage" = type { %"class.std::__1::vector.162", %"class.std::__1::vector.169", %"class.std::__1::vector.176", %"class.std::__1::vector.183" }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.dawn_native::BufferBase"**, %"class.dawn_native::BufferBase"**, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.dawn_native::BufferBase"** }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { i32*, i32*, %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { i32* }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"class.dawn_native::TextureBase"**, %"class.dawn_native::TextureBase"**, %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.dawn_native::TextureBase"** }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"class.dawn_native::SubresourceStorage"*, %"class.dawn_native::SubresourceStorage"*, %"class.std::__1::__compressed_pair.185" }
%"class.dawn_native::SubresourceStorage" = type opaque
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.dawn_native::SubresourceStorage"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.dawn_native::QuerySetBase"**, %"class.dawn_native::QuerySetBase"**, %"class.std::__1::__compressed_pair.199" }
%"class.dawn_native::QuerySetBase" = type { %"class.dawn_native::ObjectBase", i32, i32, %"class.std::__1::vector.192", i32, %"class.std::__1::vector.130" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { i32*, i32*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { i32* }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.dawn_native::QuerySetBase"** }
%"class.std::__1::vector.204" = type { %"class.std::__1::__vector_base.205" }
%"class.std::__1::__vector_base.205" = type { %"class.std::__1::vector.130"*, %"class.std::__1::vector.130"*, %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::vector.130"* }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.dawn_native::RenderPassResourceUsage"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.dawn_native::ComputePassResourceUsage"*, %"struct.dawn_native::ComputePassResourceUsage"*, %"class.std::__1::__compressed_pair.244" }
%"struct.dawn_native::ComputePassResourceUsage" = type { %"class.std::__1::vector.218", %"class.std::__1::set", %"class.std::__1::set.234" }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.dawn_native::SyncScopeResourceUsage"*, %"struct.dawn_native::SyncScopeResourceUsage"*, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.dawn_native::SyncScopeResourceUsage"* }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.dawn_native::ComputePassResourceUsage"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.225" }
%"class.std::__1::__tree.225" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.226", %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::set.234" = type { %"class.std::__1::__tree.235" }
%"class.std::__1::__tree.235" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.236", %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::set.249" = type { %"class.std::__1::__tree.250" }
%"class.std::__1::__tree.250" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%class.Result.322 = type { i64 }
%"struct.dawn_native::ComputePipelineDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, %"class.dawn_native::PipelineLayoutBase"*, %"struct.dawn_native::ProgrammableStageDescriptor" }
%"class.dawn_native::PipelineLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"class.ityp::array", %"class.ityp::bitset" }
%"class.ityp::array" = type { %"struct.std::__1::array.259" }
%"struct.std::__1::array.259" = type { [4 x %class.Ref.37] }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.260" }
%"class.std::__1::bitset.260" = type { %"class.std::__1::__bitset.261" }
%"class.std::__1::__bitset.261" = type { i64 }
%"struct.dawn_native::ProgrammableStageDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, %"class.dawn_native::ShaderModuleBase"*, i8* }
%"class.dawn_native::ShaderModuleBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.std::__1::vector.262", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", %"class.std::__1::vector.262", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.302" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.269" }
%"class.std::__1::__hash_table.269" = type <{ %"class.std::__1::unique_ptr.270", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272", %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base.273"** }
%"struct.std::__1::__hash_node_base.273" = type { %"struct.std::__1::__hash_node_base.273"* }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.std::__1::__bucket_list_deallocator.275" }
%"class.std::__1::__bucket_list_deallocator.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.std::__1::__hash_node_base.273" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { i32*, i32*, %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { i32* }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.tint::Program"* }
%"class.tint::Program" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.dawn_native::TintSource"* }
%"class.dawn_native::TintSource" = type opaque
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.dawn_native::OwnedCompilationMessages"* }
%"class.dawn_native::OwnedCompilationMessages" = type { %struct.WGPUCompilationInfo, %"class.std::__1::vector.305", %"class.std::__1::vector.312" }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %struct.WGPUCompilationMessage*, %struct.WGPUCompilationMessage*, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %struct.WGPUCompilationMessage* }
%"class.dawn_native::opengl::ComputePipeline" = type { %"class.dawn_native::ComputePipelineBase", %"class.dawn_native::opengl::PipelineGL" }
%"class.dawn_native::ComputePipelineBase" = type { %"class.dawn_native::PipelineBase" }
%"class.dawn_native::PipelineBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.dawn_native::PerStage.325", %class.Ref.345, %"class.ityp::array.347" }
%"class.dawn_native::PerStage.325" = type { %"struct.std::__1::array.326" }
%"struct.std::__1::array.326" = type { [3 x %"struct.dawn_native::ProgrammableStage"] }
%"struct.dawn_native::ProgrammableStage" = type { %class.Ref.327, %"class.std::__1::basic_string", %"struct.dawn_native::EntryPointMetadata"* }
%class.Ref.327 = type { %class.RefBase.328 }
%class.RefBase.328 = type { %"class.dawn_native::ShaderModuleBase"* }
%"struct.dawn_native::EntryPointMetadata" = type { %"class.ityp::array.329", %"class.std::__1::bitset.340", %"class.ityp::array.342", %"class.ityp::bitset.344", %"struct.dawn_native::Origin3D", i32 }
%"class.ityp::array.329" = type { %"struct.std::__1::array.330" }
%"struct.std::__1::array.330" = type { [4 x %"class.std::__1::map.331"] }
%"class.std::__1::map.331" = type { %"class.std::__1::__tree.332" }
%"class.std::__1::__tree.332" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.333", %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::bitset.340" = type { %"class.std::__1::__bitset.341" }
%"class.std::__1::__bitset.341" = type { i64 }
%"class.ityp::array.342" = type { %"struct.std::__1::array.343" }
%"struct.std::__1::array.343" = type { [4 x i32] }
%"class.ityp::bitset.344" = type { %"class.std::__1::bitset.260" }
%"struct.dawn_native::Origin3D" = type { i32, i32, i32 }
%class.Ref.345 = type { %class.RefBase.346 }
%class.RefBase.346 = type { %"class.dawn_native::PipelineLayoutBase"* }
%"class.ityp::array.347" = type { %"struct.std::__1::array.348" }
%"struct.std::__1::array.348" = type { [4 x %"class.std::__1::vector.349"] }
%"class.std::__1::vector.349" = type { %"class.std::__1::__vector_base.350" }
%"class.std::__1::__vector_base.350" = type { i64*, i64*, %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { i64* }
%"class.dawn_native::opengl::PipelineGL" = type { i32, %"class.std::__1::vector.353", %"class.std::__1::vector.361", %"class.std::__1::vector.262", %class.Ref.368 }
%"class.std::__1::vector.353" = type { %"class.std::__1::__vector_base.354" }
%"class.std::__1::__vector_base.354" = type { %"class.std::__1::vector.355"*, %"class.std::__1::vector.355"*, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::vector.355" = type opaque
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.std::__1::vector.355"* }
%"class.std::__1::vector.361" = type { %"class.std::__1::__vector_base.362" }
%"class.std::__1::__vector_base.362" = type { %"class.std::__1::vector.262"*, %"class.std::__1::vector.262"*, %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.std::__1::vector.262"* }
%class.Ref.368 = type { %class.RefBase.369 }
%class.RefBase.369 = type { %"class.dawn_native::opengl::Sampler"* }
%"class.dawn_native::opengl::Sampler" = type { %"class.dawn_native::SamplerBase.base", i32, i32, [4 x i8] }
%"class.dawn_native::SamplerBase.base" = type <{ %"class.dawn_native::CachedObject.base", [3 x i8], i32, i32, i32, i32, i32, i32, float, float, i32, i16 }>
%class.Result.370 = type { i64 }
%"struct.dawn_native::PipelineLayoutDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, i32, %"class.dawn_native::BindGroupLayoutBase"** }
%"class.dawn_native::opengl::PipelineLayout" = type { %"class.dawn_native::PipelineLayoutBase", %"class.ityp::array.373", i64, i64 }
%"class.ityp::array.373" = type { %"struct.std::__1::array.374" }
%"struct.std::__1::array.374" = type { [4 x %"class.ityp::vector.375"] }
%"class.ityp::vector.375" = type { %"class.std::__1::vector.262" }
%class.Result.376 = type { i64 }
%"struct.dawn_native::QuerySetDescriptor" = type <{ %"struct.dawn_native::ChainedStruct"*, i8*, i32, i32, i32*, i32, [4 x i8] }>
%"class.dawn_native::opengl::QuerySet" = type { %"class.dawn_native::QuerySetBase" }
%class.Result.379 = type { i64 }
%"struct.dawn_native::RenderPipelineDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, %"class.dawn_native::PipelineLayoutBase"*, %"struct.dawn_native::VertexState", %"struct.dawn_native::PrimitiveState", %"struct.dawn_native::DepthStencilState"*, %"struct.dawn_native::MultisampleState", %"struct.dawn_native::FragmentState"* }
%"struct.dawn_native::VertexState" = type { %"struct.dawn_native::ChainedStruct"*, %"class.dawn_native::ShaderModuleBase"*, i8*, i32, %"struct.dawn_native::VertexBufferLayout"* }
%"struct.dawn_native::VertexBufferLayout" = type { i64, i32, i32, %"struct.dawn_native::VertexAttribute"* }
%"struct.dawn_native::VertexAttribute" = type { i32, i64, i32 }
%"struct.dawn_native::PrimitiveState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, i32 }
%"struct.dawn_native::DepthStencilState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i32, %"struct.dawn_native::StencilFaceState", %"struct.dawn_native::StencilFaceState", i32, i32, i32, float, float }
%"struct.dawn_native::StencilFaceState" = type { i32, i32, i32, i32 }
%"struct.dawn_native::MultisampleState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::FragmentState" = type { %"struct.dawn_native::ChainedStruct"*, %"class.dawn_native::ShaderModuleBase"*, i8*, i32, %"struct.dawn_native::ColorTargetState"* }
%"struct.dawn_native::ColorTargetState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8], %"struct.dawn_native::BlendState"*, i32, [4 x i8] }>
%"struct.dawn_native::BlendState" = type { %"struct.dawn_native::BlendComponent", %"struct.dawn_native::BlendComponent" }
%"struct.dawn_native::BlendComponent" = type { i32, i32, i32 }
%"class.dawn_native::opengl::RenderPipeline" = type { %"class.dawn_native::RenderPipelineBase.base", %"class.dawn_native::opengl::PipelineGL", i32, i32, %"class.ityp::array.398" }
%"class.dawn_native::RenderPipelineBase.base" = type <{ %"class.dawn_native::PipelineBase", i32, [4 x i8], %"class.ityp::bitset.382", %"class.ityp::array.383", %"class.ityp::bitset.385", %"class.ityp::array.388", %class.Ref.390, %"class.ityp::array.394", %"class.ityp::array.396", %"struct.dawn_native::PrimitiveState", %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::MultisampleState", i8 }>
%"class.ityp::bitset.382" = type { %"class.std::__1::bitset.340" }
%"class.ityp::array.383" = type { %"struct.std::__1::array.384" }
%"struct.std::__1::array.384" = type { [16 x %"struct.dawn_native::VertexAttributeInfo"] }
%"struct.dawn_native::VertexAttributeInfo" = type { i32, i64, i8, i8 }
%"class.ityp::bitset.385" = type { %"class.std::__1::bitset.386" }
%"class.std::__1::bitset.386" = type { %"class.std::__1::__bitset.387" }
%"class.std::__1::__bitset.387" = type { i64 }
%"class.ityp::array.388" = type { %"struct.std::__1::array.389" }
%"struct.std::__1::array.389" = type { [8 x %"struct.dawn_native::VertexBufferInfo"] }
%"struct.dawn_native::VertexBufferInfo" = type { i64, i32 }
%class.Ref.390 = type { %class.RefBase.391 }
%class.RefBase.391 = type { %"class.dawn_native::AttachmentState"* }
%"class.dawn_native::AttachmentState" = type { %"class.dawn_native::CachedObject.base", %"class.dawn_native::AttachmentStateBlueprint" }
%"class.dawn_native::AttachmentStateBlueprint" = type { %"class.ityp::bitset.344", %"class.ityp::array.392", i32, i32 }
%"class.ityp::array.392" = type { %"struct.std::__1::array.393" }
%"struct.std::__1::array.393" = type { [4 x i32] }
%"class.ityp::array.394" = type { %"struct.std::__1::array.395" }
%"struct.std::__1::array.395" = type { [4 x %"struct.dawn_native::ColorTargetState"] }
%"class.ityp::array.396" = type { %"struct.std::__1::array.397" }
%"struct.std::__1::array.397" = type { [4 x %"struct.dawn_native::BlendState"] }
%"class.ityp::array.398" = type { %"struct.std::__1::array.399" }
%"struct.std::__1::array.399" = type { [8 x %"class.ityp::bitset.382"] }
%class.Result.400 = type { i64 }
%"struct.dawn_native::SamplerDescriptor" = type <{ %"struct.dawn_native::ChainedStruct"*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16, [2 x i8] }>
%class.Result.401 = type { i64 }
%"struct.dawn_native::ShaderModuleDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8* }
%"struct.dawn_native::ShaderModuleParseResult" = type { %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.296", %"class.std::__1::vector.262", %"class.std::__1::unique_ptr.302" }
%class.Result.402 = type { i64 }
%class.Result.403 = type { i64 }
%"struct.dawn_native::SwapChainDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, i32, i32, i32, i32, i32, i64 }
%"class.dawn_native::opengl::SwapChain" = type { %"class.dawn_native::OldSwapChainBase" }
%"class.dawn_native::OldSwapChainBase" = type { %"class.dawn_native::SwapChainBase", %struct.DawnSwapChainImplementation, i32, i32, i32, i32, %class.Ref.128, %class.Ref.407 }
%"class.dawn_native::SwapChainBase" = type { %"class.dawn_native::ObjectBase" }
%struct.DawnSwapChainImplementation = type { void (i8*, i8*)*, void (i8*)*, i8* (i8*, i32, i32, i32, i32)*, i8* (i8*, %struct.DawnSwapChainNextTexture*)*, i8* (i8*)*, i8*, i32 }
%struct.DawnSwapChainNextTexture = type { %union.anon.406 }
%union.anon.406 = type { i8* }
%class.Ref.407 = type { %class.RefBase.408 }
%class.RefBase.408 = type { %"class.dawn_native::TextureViewBase"* }
%class.Result.409 = type { i64 }
%"class.dawn_native::Surface" = type opaque
%"class.dawn_native::NewSwapChainBase" = type { %"class.dawn_native::SwapChainBase", i8, i32, i32, i32, i32, i32, %"class.dawn_native::Surface"*, %class.Ref.407 }
%class.Result.410 = type { i64 }
%"struct.dawn_native::TextureDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, i32, i32, %"struct.dawn_native::Extent3D", i32, i32, i32 }
%"class.dawn_native::opengl::Texture" = type { %"class.dawn_native::TextureBase", i32, i32 }
%class.Result.413 = type { i64 }
%"struct.dawn_native::TextureViewDescriptor" = type <{ %"struct.dawn_native::ChainedStruct"*, i8*, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.dawn_native::opengl::TextureView" = type <{ %"class.dawn_native::TextureViewBase", i32, i32, i8, [7 x i8] }>
%class.Result.416 = type { i32, %"class.std::__1::unique_ptr.109", i64 }
%class.Result.417 = type { i32, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.122" }
%"struct.dawn_native::TextureDataLayout" = type { %"struct.dawn_native::ChainedStruct"*, i64, i32, i32 }
%"struct.dawn_native::TextureCopy" = type <{ %class.Ref.128, i32, %"struct.dawn_native::Origin3D", i8, [7 x i8] }>
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"struct.std::__1::__split_buffer.425" = type { %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"**, %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.99", %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.std::__1::allocator.101"* }
%"class.std::__1::allocator.101" = type { i8 }

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__15dequeINS_4pairIP8__GLsyncmEENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIP8__GLsyncmEENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIP8__GLsyncmEENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIP8__GLsyncmEERNS_9allocatorIS5_EEE10push_frontERKS5_ = comdat any

@.str = private unnamed_addr constant [59 x i8] c"../../third_party/dawn/src/dawn_native/opengl/DeviceGL.cpp\00", align 1
@__func__._ZN11dawn_native6opengl6Device6CreateEPNS_11AdapterBaseEPKNS_16DeviceDescriptorERKNS0_15OpenGLFunctionsE = private unnamed_addr constant [7 x i8] c"Create\00", align 1
@_ZTVN11dawn_native6opengl6DeviceE = hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::opengl::Device"*)* @_ZN11dawn_native6opengl6DeviceD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::opengl::Device"*)* @_ZN11dawn_native6opengl6DeviceD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (void (%class.Result.150*, %"class.dawn_native::opengl::Device"*, %"class.dawn_native::CommandEncoder"*, %"struct.dawn_native::CommandBufferDescriptor"*)* @_ZN11dawn_native6opengl6Device19CreateCommandBufferEPNS_14CommandEncoderEPKNS_23CommandBufferDescriptorE to i8*), i8* bitcast (void (%class.Result.417*, %"class.dawn_native::opengl::Device"*, i64)* @_ZN11dawn_native6opengl6Device19CreateStagingBufferEm to i8*), i8* bitcast (void (%class.Result.108*, %"class.dawn_native::opengl::Device"*, %"class.dawn_native::StagingBufferBase"*, i64, %"class.dawn_native::BufferBase"*, i64, i64)* @_ZN11dawn_native6opengl6Device23CopyFromStagingToBufferEPNS_17StagingBufferBaseEmPNS_10BufferBaseEmm to i8*), i8* bitcast (void (%class.Result.108*, %"class.dawn_native::opengl::Device"*, %"class.dawn_native::StagingBufferBase"*, %"struct.dawn_native::TextureDataLayout"*, %"struct.dawn_native::TextureCopy"*, %"struct.dawn_native::Extent3D"*)* @_ZN11dawn_native6opengl6Device24CopyFromStagingToTextureEPKNS_17StagingBufferBaseERKNS_17TextureDataLayoutEPNS_11TextureCopyERKNS_8Extent3DE to i8*), i8* bitcast (i32 (%"class.dawn_native::opengl::Device"*)* @_ZNK11dawn_native6opengl6Device30GetOptimalBytesPerRowAlignmentEv to i8*), i8* bitcast (i64 (%"class.dawn_native::opengl::Device"*)* @_ZNK11dawn_native6opengl6Device44GetOptimalBufferToTextureCopyOffsetAlignmentEv to i8*), i8* bitcast (float (%"class.dawn_native::opengl::Device"*)* @_ZNK11dawn_native6opengl6Device22GetTimestampPeriodInNSEv to i8*), i8* bitcast (void (%class.Result.135*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BindGroupDescriptor"*)* @_ZN11dawn_native6opengl6Device19CreateBindGroupImplEPKNS_19BindGroupDescriptorE to i8*), i8* bitcast (void (%class.Result.144*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*)* @_ZN11dawn_native6opengl6Device25CreateBindGroupLayoutImplEPKNS_25BindGroupLayoutDescriptorE to i8*), i8* bitcast (void (%class.Result.147*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BufferDescriptor"*)* @_ZN11dawn_native6opengl6Device16CreateBufferImplEPKNS_16BufferDescriptorE to i8*), i8* bitcast (void (%class.Result.322*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ComputePipelineDescriptor"*)* @_ZN11dawn_native6opengl6Device25CreateComputePipelineImplEPKNS_25ComputePipelineDescriptorE to i8*), i8* bitcast (void (%class.Result.370*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::PipelineLayoutDescriptor"*)* @_ZN11dawn_native6opengl6Device24CreatePipelineLayoutImplEPKNS_24PipelineLayoutDescriptorE to i8*), i8* bitcast (void (%class.Result.376*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::QuerySetDescriptor"*)* @_ZN11dawn_native6opengl6Device18CreateQuerySetImplEPKNS_18QuerySetDescriptorE to i8*), i8* bitcast (void (%class.Result.379*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::RenderPipelineDescriptor"*)* @_ZN11dawn_native6opengl6Device24CreateRenderPipelineImplEPKNS_24RenderPipelineDescriptorE to i8*), i8* bitcast (void (%class.Result.400*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::SamplerDescriptor"*)* @_ZN11dawn_native6opengl6Device17CreateSamplerImplEPKNS_17SamplerDescriptorE to i8*), i8* bitcast (void (%class.Result.401*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ShaderModuleDescriptor"*, %"struct.dawn_native::ShaderModuleParseResult"*)* @_ZN11dawn_native6opengl6Device22CreateShaderModuleImplEPKNS_22ShaderModuleDescriptorEPNS_23ShaderModuleParseResultE to i8*), i8* bitcast (void (%class.Result.403*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::SwapChainDescriptor"*)* @_ZN11dawn_native6opengl6Device19CreateSwapChainImplEPKNS_19SwapChainDescriptorE to i8*), i8* bitcast (void (%class.Result.409*, %"class.dawn_native::opengl::Device"*, %"class.dawn_native::Surface"*, %"class.dawn_native::NewSwapChainBase"*, %"struct.dawn_native::SwapChainDescriptor"*)* @_ZN11dawn_native6opengl6Device19CreateSwapChainImplEPNS_7SurfaceEPNS_16NewSwapChainBaseEPKNS_19SwapChainDescriptorE to i8*), i8* bitcast (void (%class.Result.410*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::TextureDescriptor"*)* @_ZN11dawn_native6opengl6Device17CreateTextureImplEPKNS_17TextureDescriptorE to i8*), i8* bitcast (void (%class.Result.413*, %"class.dawn_native::opengl::Device"*, %"class.dawn_native::TextureBase"*, %"struct.dawn_native::TextureViewDescriptor"*)* @_ZN11dawn_native6opengl6Device21CreateTextureViewImplEPNS_11TextureBaseEPKNS_21TextureViewDescriptorE to i8*), i8* bitcast (void (%class.Result.108*, %"class.dawn_native::opengl::Device"*)* @_ZN11dawn_native6opengl6Device8TickImplEv to i8*), i8* bitcast (void (%class.Result.416*, %"class.dawn_native::opengl::Device"*)* @_ZN11dawn_native6opengl6Device30CheckAndUpdateCompletedSerialsEv to i8*), i8* bitcast (void (%"class.dawn_native::opengl::Device"*)* @_ZN11dawn_native6opengl6Device12ShutDownImplEv to i8*), i8* bitcast (void (%class.Result.108*, %"class.dawn_native::opengl::Device"*)* @_ZN11dawn_native6opengl6Device25WaitForIdleForDestructionEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [20 x i8] c"GL_EXT_render_snorm\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"GL_NV_read_depth_stencil\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"GL_OES_sample_variables\00", align 1
@__func__._ZN11dawn_native6opengl6Device19CreateBindGroupImplEPKNS_19BindGroupDescriptorE = private unnamed_addr constant [20 x i8] c"CreateBindGroupImpl\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"New swapchains not implemented.\00", align 1
@__func__._ZN11dawn_native6opengl6Device19CreateSwapChainImplEPNS_7SurfaceEPNS_16NewSwapChainBaseEPKNS_19SwapChainDescriptorE = private unnamed_addr constant [20 x i8] c"CreateSwapChainImpl\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"Unimplemented: \00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"Device unable to create staging buffer.\00", align 1
@__func__._ZN11dawn_native6opengl6Device19CreateStagingBufferEm = private unnamed_addr constant [20 x i8] c"CreateStagingBuffer\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"Device unable to copy from staging buffer.\00", align 1
@__func__._ZN11dawn_native6opengl6Device23CopyFromStagingToBufferEPNS_17StagingBufferBaseEmPNS_10BufferBaseEmm = private unnamed_addr constant [24 x i8] c"CopyFromStagingToBuffer\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"Device unable to copy from staging buffer to texture.\00", align 1
@__func__._ZN11dawn_native6opengl6Device24CopyFromStagingToTextureEPKNS_17StagingBufferBaseERKNS_17TextureDataLayoutEPNS_11TextureCopyERKNS_8Extent3DE = private unnamed_addr constant [25 x i8] c"CopyFromStagingToTexture\00", align 1
@__func__._ZN11dawn_native6opengl6Device25WaitForIdleForDestructionEv = private unnamed_addr constant [26 x i8] c"WaitForIdleForDestruction\00", align 1

@_ZN11dawn_native6opengl6DeviceC1EPNS_11AdapterBaseEPKNS_16DeviceDescriptorERKNS0_15OpenGLFunctionsE = hidden unnamed_addr alias void (%"class.dawn_native::opengl::Device"*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*, %"struct.dawn_native::opengl::OpenGLFunctions"*), void (%"class.dawn_native::opengl::Device"*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*, %"struct.dawn_native::opengl::OpenGLFunctions"*)* @_ZN11dawn_native6opengl6DeviceC2EPNS_11AdapterBaseEPKNS_16DeviceDescriptorERKNS0_15OpenGLFunctionsE
@_ZN11dawn_native6opengl6DeviceD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::opengl::Device"*), void (%"class.dawn_native::opengl::Device"*)* @_ZN11dawn_native6opengl6DeviceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device6CreateEPNS_11AdapterBaseEPKNS_16DeviceDescriptorERKNS0_15OpenGLFunctionsE(%class.Result* noalias nocapture sret, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*, %"struct.dawn_native::opengl::OpenGLFunctions"* nocapture readonly dereferenceable(5664)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::array.107", align 4
  %6 = alloca %class.Result.108, align 8
  %7 = tail call i8* @_Znwm(i64 11632) #12
  %8 = bitcast i8* %7 to %"class.dawn_native::opengl::Device"*
  tail call void @_ZN11dawn_native6opengl6DeviceC2EPNS_11AdapterBaseEPKNS_16DeviceDescriptorERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::Device"* nonnull %8, %"class.dawn_native::AdapterBase"* %1, %"struct.dawn_native::DeviceDescriptor"* %2, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %3)
  %9 = bitcast %class.Result.108* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %class.Result.108, %class.Result.108* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %10, align 8
  tail call void @_ZN11dawn_native6opengl6Device21InitTogglesFromDriverEv(%"class.dawn_native::opengl::Device"* nonnull %8) #13, !noalias !2
  %11 = bitcast %"struct.std::__1::array.107"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1100, i8* nonnull %11) #13, !noalias !2
  call void @_ZN11dawn_native6opengl18BuildGLFormatTableEv(%"struct.std::__1::array.107"* nonnull sret %5) #13, !noalias !2
  %12 = getelementptr inbounds i8, i8* %7, i64 10528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 4 %11, i64 1100, i1 false) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 1100, i8* nonnull %11) #13, !noalias !2
  %13 = bitcast i8* %7 to %"class.dawn_native::DeviceBase"*
  %14 = call i8* @_Znwm(i64 48) #12, !noalias !2
  %15 = bitcast i8* %14 to %"class.dawn_native::opengl::Queue"*
  call void @_ZN11dawn_native6opengl5QueueC1EPNS0_6DeviceE(%"class.dawn_native::opengl::Queue"* nonnull %15, %"class.dawn_native::opengl::Device"* nonnull %8) #13, !noalias !2
  %16 = bitcast i8* %14 to %"class.dawn_native::QueueBase"*
  call void @_ZN11dawn_native10DeviceBase10InitializeEPNS_9QueueBaseE(%class.Result.108* nonnull sret %6, %"class.dawn_native::DeviceBase"* nonnull %13, %"class.dawn_native::QueueBase"* nonnull %16) #13
  %17 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %10, align 8
  %18 = icmp eq %"class.dawn_native::ErrorData"* %17, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %10, align 8
  br i1 %18, label %45, label %19, !prof !5

19:                                               ; preds = %4
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %17, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__func__._ZN11dawn_native6opengl6Device6CreateEPNS_11AdapterBaseEPKNS_16DeviceDescriptorERKNS0_15OpenGLFunctionsE, i64 0, i64 0), i32 42) #13
  %20 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  %21 = bitcast %"class.dawn_native::ErrorData"* %17 to i8*
  %22 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %21, i32 1) #13
  store i64 %22, i64* %20, align 8
  %23 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %10, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %10, align 8
  %24 = icmp eq %"class.dawn_native::ErrorData"* %23, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %23, i64 0, i32 2, i32 0, i32 0
  %27 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %26, align 8
  %28 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %27 to i64
  %31 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %23, i64 0, i32 2, i32 0, i32 1
  %32 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %27 to i8*
  call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %25
  %35 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %23, i64 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %40, %34
  %44 = bitcast %"class.dawn_native::ErrorData"* %23 to i8*
  call void @_ZdlPv(i8* %44) #12
  br label %48

45:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %46 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  %47 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %7, i32 0) #13
  store i64 %47, i64* %46, align 8
  br label %50

48:                                               ; preds = %19, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %49 = bitcast i8* %7 to %class.RefCounted*
  call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* nonnull %49) #13
  br label %50

50:                                               ; preds = %45, %48
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device10InitializeEv(%class.Result.108* noalias sret, %"class.dawn_native::opengl::Device"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array.107", align 4
  tail call void @_ZN11dawn_native6opengl6Device21InitTogglesFromDriverEv(%"class.dawn_native::opengl::Device"* %1)
  %4 = bitcast %"struct.std::__1::array.107"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1100, i8* nonnull %4) #13
  call void @_ZN11dawn_native6opengl18BuildGLFormatTableEv(%"struct.std::__1::array.107"* nonnull sret %3) #13
  %5 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 3
  %6 = bitcast %"struct.std::__1::array.107"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* nonnull align 4 %4, i64 1100, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 1100, i8* nonnull %4) #13
  %7 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 0
  %8 = call i8* @_Znwm(i64 48) #12
  %9 = bitcast i8* %8 to %"class.dawn_native::opengl::Queue"*
  call void @_ZN11dawn_native6opengl5QueueC1EPNS0_6DeviceE(%"class.dawn_native::opengl::Queue"* nonnull %9, %"class.dawn_native::opengl::Device"* %1) #13
  %10 = bitcast i8* %8 to %"class.dawn_native::QueueBase"*
  call void @_ZN11dawn_native10DeviceBase10InitializeEPNS_9QueueBaseE(%class.Result.108* sret %0, %"class.dawn_native::DeviceBase"* %7, %"class.dawn_native::QueueBase"* nonnull %10) #13
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6DeviceC2EPNS_11AdapterBaseEPKNS_16DeviceDescriptorERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::Device"*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*, %"struct.dawn_native::opengl::OpenGLFunctions"* nocapture readonly dereferenceable(5664)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native10DeviceBaseC2EPNS_11AdapterBaseEPKNS_16DeviceDescriptorE(%"class.dawn_native::DeviceBase"* %5, %"class.dawn_native::AdapterBase"* %1, %"struct.dawn_native::DeviceDescriptor"* %2) #13
  %6 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN11dawn_native6opengl6DeviceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 1
  %8 = bitcast %"struct.dawn_native::opengl::OpenGLFunctions"* %7 to i8*
  %9 = bitcast %"struct.dawn_native::opengl::OpenGLFunctions"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 5608, i1 false) #13
  %10 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 1, i32 1
  %11 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %3, i64 0, i32 1
  %12 = bitcast %"struct.dawn_native::opengl::OpenGLVersion"* %10 to i8*
  %13 = bitcast %"struct.dawn_native::opengl::OpenGLVersion"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 12, i1 false) #13
  %14 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 1, i32 3
  %15 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 1, i32 3, i32 0, i32 3
  %17 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %3, i64 0, i32 3, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.21"* %17 to i32*
  %19 = bitcast %"class.std::__1::__compressed_pair.21"* %16 to i32*
  %20 = bitcast %"class.std::__1::unordered_set"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #13
  %21 = load i32, i32* %18, align 8
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %15, i64 %23) #13
  %24 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %3, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %4
  %28 = ptrtoint %"struct.std::__1::__hash_node_base"* %25 to i64
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ %28, %27 ], [ %35, %29 ]
  %31 = inttoptr i64 %30 to %"struct.std::__1::__hash_node"*
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %31, i64 0, i32 2
  %33 = tail call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, %"class.std::__1::basic_string"* dereferenceable(24) %32, %"class.std::__1::basic_string"* dereferenceable(24) %32) #13
  %34 = inttoptr i64 %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %29

37:                                               ; preds = %29, %4
  %38 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 1
  %40 = bitcast %"struct.dawn_native::opengl::GLFormat"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 13, i1 false) #13
  %41 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 2
  %42 = bitcast %"struct.dawn_native::opengl::GLFormat"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 13, i1 false) #13
  %43 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 3
  %44 = bitcast %"struct.dawn_native::opengl::GLFormat"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 13, i1 false) #13
  %45 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 4
  %46 = bitcast %"struct.dawn_native::opengl::GLFormat"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 13, i1 false) #13
  %47 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 5
  %48 = bitcast %"struct.dawn_native::opengl::GLFormat"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 13, i1 false) #13
  %49 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 6
  %50 = bitcast %"struct.dawn_native::opengl::GLFormat"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 13, i1 false) #13
  %51 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 7
  %52 = bitcast %"struct.dawn_native::opengl::GLFormat"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 13, i1 false) #13
  %53 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 8
  %54 = bitcast %"struct.dawn_native::opengl::GLFormat"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 13, i1 false) #13
  %55 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 9
  %56 = bitcast %"struct.dawn_native::opengl::GLFormat"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 13, i1 false) #13
  %57 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 10
  %58 = bitcast %"struct.dawn_native::opengl::GLFormat"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 13, i1 false) #13
  %59 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 11
  %60 = bitcast %"struct.dawn_native::opengl::GLFormat"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 13, i1 false) #13
  %61 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 12
  %62 = bitcast %"struct.dawn_native::opengl::GLFormat"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 13, i1 false) #13
  %63 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 13
  %64 = bitcast %"struct.dawn_native::opengl::GLFormat"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 13, i1 false) #13
  %65 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 14
  %66 = bitcast %"struct.dawn_native::opengl::GLFormat"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 13, i1 false) #13
  %67 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 15
  %68 = bitcast %"struct.dawn_native::opengl::GLFormat"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 13, i1 false) #13
  %69 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 16
  %70 = bitcast %"struct.dawn_native::opengl::GLFormat"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 13, i1 false) #13
  %71 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 17
  %72 = bitcast %"struct.dawn_native::opengl::GLFormat"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 13, i1 false) #13
  %73 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 18
  %74 = bitcast %"struct.dawn_native::opengl::GLFormat"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %74, i8 0, i64 13, i1 false) #13
  %75 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 19
  %76 = bitcast %"struct.dawn_native::opengl::GLFormat"* %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %76, i8 0, i64 13, i1 false) #13
  %77 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 20
  %78 = bitcast %"struct.dawn_native::opengl::GLFormat"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 13, i1 false) #13
  %79 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 21
  %80 = bitcast %"struct.dawn_native::opengl::GLFormat"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 13, i1 false) #13
  %81 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 22
  %82 = bitcast %"struct.dawn_native::opengl::GLFormat"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %82, i8 0, i64 13, i1 false) #13
  %83 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 23
  %84 = bitcast %"struct.dawn_native::opengl::GLFormat"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 0, i64 13, i1 false) #13
  %85 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 24
  %86 = bitcast %"struct.dawn_native::opengl::GLFormat"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 13, i1 false) #13
  %87 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 25
  %88 = bitcast %"struct.dawn_native::opengl::GLFormat"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %88, i8 0, i64 13, i1 false) #13
  %89 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 26
  %90 = bitcast %"struct.dawn_native::opengl::GLFormat"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %90, i8 0, i64 13, i1 false) #13
  %91 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 27
  %92 = bitcast %"struct.dawn_native::opengl::GLFormat"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %92, i8 0, i64 13, i1 false) #13
  %93 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 28
  %94 = bitcast %"struct.dawn_native::opengl::GLFormat"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 13, i1 false) #13
  %95 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 29
  %96 = bitcast %"struct.dawn_native::opengl::GLFormat"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %96, i8 0, i64 13, i1 false) #13
  %97 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 30
  %98 = bitcast %"struct.dawn_native::opengl::GLFormat"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %98, i8 0, i64 13, i1 false) #13
  %99 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 31
  %100 = bitcast %"struct.dawn_native::opengl::GLFormat"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %100, i8 0, i64 13, i1 false) #13
  %101 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 32
  %102 = bitcast %"struct.dawn_native::opengl::GLFormat"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 13, i1 false) #13
  %103 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 33
  %104 = bitcast %"struct.dawn_native::opengl::GLFormat"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %104, i8 0, i64 13, i1 false) #13
  %105 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 34
  %106 = bitcast %"struct.dawn_native::opengl::GLFormat"* %105 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %106, i8 0, i64 13, i1 false) #13
  %107 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 35
  %108 = bitcast %"struct.dawn_native::opengl::GLFormat"* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %108, i8 0, i64 13, i1 false) #13
  %109 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 36
  %110 = bitcast %"struct.dawn_native::opengl::GLFormat"* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %110, i8 0, i64 13, i1 false) #13
  %111 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 37
  %112 = bitcast %"struct.dawn_native::opengl::GLFormat"* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %112, i8 0, i64 13, i1 false) #13
  %113 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 38
  %114 = bitcast %"struct.dawn_native::opengl::GLFormat"* %113 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 13, i1 false) #13
  %115 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 39
  %116 = bitcast %"struct.dawn_native::opengl::GLFormat"* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %116, i8 0, i64 13, i1 false) #13
  %117 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 40
  %118 = bitcast %"struct.dawn_native::opengl::GLFormat"* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 0, i64 13, i1 false) #13
  %119 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 41
  %120 = bitcast %"struct.dawn_native::opengl::GLFormat"* %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %120, i8 0, i64 13, i1 false) #13
  %121 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 42
  %122 = bitcast %"struct.dawn_native::opengl::GLFormat"* %121 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %122, i8 0, i64 13, i1 false) #13
  %123 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 43
  %124 = bitcast %"struct.dawn_native::opengl::GLFormat"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %124, i8 0, i64 13, i1 false) #13
  %125 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 44
  %126 = bitcast %"struct.dawn_native::opengl::GLFormat"* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 13, i1 false) #13
  %127 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 45
  %128 = bitcast %"struct.dawn_native::opengl::GLFormat"* %127 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %128, i8 0, i64 13, i1 false) #13
  %129 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 46
  %130 = bitcast %"struct.dawn_native::opengl::GLFormat"* %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %130, i8 0, i64 13, i1 false) #13
  %131 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 47
  %132 = bitcast %"struct.dawn_native::opengl::GLFormat"* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %132, i8 0, i64 13, i1 false) #13
  %133 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 48
  %134 = bitcast %"struct.dawn_native::opengl::GLFormat"* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %134, i8 0, i64 13, i1 false) #13
  %135 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 49
  %136 = bitcast %"struct.dawn_native::opengl::GLFormat"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %136, i8 0, i64 13, i1 false) #13
  %137 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 50
  %138 = bitcast %"struct.dawn_native::opengl::GLFormat"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %138, i8 0, i64 13, i1 false) #13
  %139 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 51
  %140 = bitcast %"struct.dawn_native::opengl::GLFormat"* %139 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %140, i8 0, i64 13, i1 false) #13
  %141 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 52
  %142 = bitcast %"struct.dawn_native::opengl::GLFormat"* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %142, i8 0, i64 13, i1 false) #13
  %143 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 53
  %144 = bitcast %"struct.dawn_native::opengl::GLFormat"* %143 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %144, i8 0, i64 13, i1 false) #13
  %145 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 54
  %146 = bitcast %"struct.dawn_native::opengl::GLFormat"* %145 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %146, i8 0, i64 13, i1 false) #13
  %147 = bitcast %"class.std::__1::queue"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 61, i1 false)
  ret void
}

declare void @_ZN11dawn_native10DeviceBaseC2EPNS_11AdapterBaseEPKNS_16DeviceDescriptorE(%"class.dawn_native::DeviceBase"*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6DeviceD2Ev(%"class.dawn_native::opengl::Device"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN11dawn_native6opengl6DeviceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native10DeviceBase12ShutDownBaseEv(%"class.dawn_native::DeviceBase"* %3) #13
  %4 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %5 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %4, align 8
  %6 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %5, i64 %8
  %10 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %11 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %10, align 8
  %12 = icmp eq %"struct.std::__1::pair.97"** %11, %5
  %13 = ptrtoint %"struct.std::__1::pair.97"** %11 to i64
  %14 = ptrtoint %"struct.std::__1::pair.97"** %5 to i64
  br i1 %12, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %30

17:                                               ; preds = %1
  %18 = load %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %9, align 8
  %19 = and i64 %7, 255
  %20 = getelementptr inbounds %"struct.std::__1::pair.97", %"struct.std::__1::pair.97"* %18, i64 %19
  %21 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %7
  %24 = lshr i64 %23, 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %5, i64 %24
  %26 = load %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %25, align 8
  %27 = and i64 %23, 255
  %28 = getelementptr inbounds %"struct.std::__1::pair.97", %"struct.std::__1::pair.97"* %26, i64 %27
  %29 = icmp eq %"struct.std::__1::pair.97"* %28, %20
  br i1 %29, label %30, label %36

30:                                               ; preds = %49, %17, %15
  %31 = phi i64* [ %16, %15 ], [ %21, %17 ], [ %21, %49 ]
  store i64 0, i64* %31, align 8
  %32 = bitcast %"struct.std::__1::pair.97"*** %10 to i64*
  %33 = sub i64 %13, %14
  %34 = ashr exact i64 %33, 3
  %35 = icmp ugt i64 %34, 2
  br i1 %35, label %54, label %67

36:                                               ; preds = %17, %49
  %37 = phi %"struct.std::__1::pair.97"* [ %52, %49 ], [ %20, %17 ]
  %38 = phi %"struct.std::__1::pair.97"** [ %51, %49 ], [ %9, %17 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.97", %"struct.std::__1::pair.97"* %37, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.97"* %39 to i64
  %41 = bitcast %"struct.std::__1::pair.97"** %38 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = icmp eq i64 %43, 4096
  br i1 %44, label %45, label %49

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %38, i64 1
  %47 = bitcast %"struct.std::__1::pair.97"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  br label %49

49:                                               ; preds = %45, %36
  %50 = phi i64 [ %48, %45 ], [ %40, %36 ]
  %51 = phi %"struct.std::__1::pair.97"** [ %46, %45 ], [ %38, %36 ]
  %52 = inttoptr i64 %50 to %"struct.std::__1::pair.97"*
  %53 = icmp eq %"struct.std::__1::pair.97"* %28, %52
  br i1 %53, label %30, label %36

54:                                               ; preds = %30, %54
  %55 = phi %"struct.std::__1::pair.97"** [ %59, %54 ], [ %5, %30 ]
  %56 = bitcast %"struct.std::__1::pair.97"** %55 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #12
  %58 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %4, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %58, i64 1
  store %"struct.std::__1::pair.97"** %59, %"struct.std::__1::pair.97"*** %4, align 8
  %60 = load i64, i64* %32, align 8
  %61 = ptrtoint %"struct.std::__1::pair.97"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = icmp ugt i64 %63, 2
  br i1 %64, label %54, label %65

65:                                               ; preds = %54
  %66 = inttoptr i64 %60 to %"struct.std::__1::pair.97"**
  br label %67

67:                                               ; preds = %65, %30
  %68 = phi %"struct.std::__1::pair.97"** [ %11, %30 ], [ %66, %65 ]
  %69 = phi %"struct.std::__1::pair.97"** [ %5, %30 ], [ %59, %65 ]
  %70 = phi i64 [ %34, %30 ], [ %63, %65 ]
  switch i64 %70, label %74 [
    i64 1, label %72
    i64 2, label %71
  ]

71:                                               ; preds = %67
  br label %72

72:                                               ; preds = %67, %71
  %73 = phi i64 [ 256, %71 ], [ 128, %67 ]
  store i64 %73, i64* %6, align 8
  br label %74

74:                                               ; preds = %72, %67
  %75 = icmp eq %"struct.std::__1::pair.97"** %69, %68
  br i1 %75, label %94, label %76

76:                                               ; preds = %74, %76
  %77 = phi %"struct.std::__1::pair.97"** [ %80, %76 ], [ %69, %74 ]
  %78 = bitcast %"struct.std::__1::pair.97"** %77 to i8**
  %79 = load i8*, i8** %78, align 8
  tail call void @_ZdlPv(i8* %79) #12
  %80 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %77, i64 1
  %81 = icmp eq %"struct.std::__1::pair.97"** %80, %68
  br i1 %81, label %82, label %76

82:                                               ; preds = %76
  %83 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %4, align 8
  %84 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %10, align 8
  %85 = icmp eq %"struct.std::__1::pair.97"** %84, %83
  br i1 %85, label %94, label %86

86:                                               ; preds = %82
  %87 = ptrtoint %"struct.std::__1::pair.97"** %83 to i64
  %88 = getelementptr %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %84, i64 -1
  %89 = ptrtoint %"struct.std::__1::pair.97"** %88 to i64
  %90 = sub i64 %89, %87
  %91 = lshr i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = getelementptr %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %84, i64 %92
  store %"struct.std::__1::pair.97"** %93, %"struct.std::__1::pair.97"*** %10, align 8
  br label %94

94:                                               ; preds = %86, %82, %74
  %95 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %96 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %95, align 8
  %97 = icmp eq %"struct.std::__1::pair.97"** %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = bitcast %"struct.std::__1::pair.97"** %96 to i8*
  tail call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %94, %98
  %101 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 1, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %119, label %104

104:                                              ; preds = %100, %116
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %116 ], [ %102, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 2
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %104
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @_ZdlPv(i8* %115) #12
  br label %116

116:                                              ; preds = %113, %104
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  tail call void @_ZdlPv(i8* %117) #12
  %118 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %118, label %119, label %104

119:                                              ; preds = %116, %100
  %120 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %120, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"** %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = bitcast %"struct.std::__1::__hash_node_base"** %121 to i8*
  tail call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %119, %123
  tail call void @_ZN11dawn_native10DeviceBaseD2Ev(%"class.dawn_native::DeviceBase"* %3) #13
  ret void
}

declare void @_ZN11dawn_native10DeviceBase12ShutDownBaseEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11dawn_native10DeviceBaseD2Ev(%"class.dawn_native::DeviceBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6DeviceD0Ev(%"class.dawn_native::opengl::Device"*) unnamed_addr #0 align 2 {
  tail call void @_ZN11dawn_native6opengl6DeviceD2Ev(%"class.dawn_native::opengl::Device"* %0) #13
  %2 = bitcast %"class.dawn_native::opengl::Device"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device21InitTogglesFromDriverEv(%"class.dawn_native::opengl::Device"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions13IsAtLeastGLESEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 3, i32 2) #13
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 3, i32 2) #13
  %6 = xor i1 %5, true
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi i1 [ false, %1 ], [ %6, %4 ]
  %9 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions13IsAtLeastGLESEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 3, i32 2) #13
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 4, i32 2) #13
  %12 = xor i1 %11, true
  br label %13

13:                                               ; preds = %10, %7
  %14 = phi i1 [ false, %7 ], [ %12, %10 ]
  %15 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions13IsAtLeastGLESEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 3, i32 2) #13
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 3, i32 0) #13
  %18 = xor i1 %17, true
  br label %19

19:                                               ; preds = %16, %13
  %20 = phi i1 [ false, %13 ], [ %18, %16 ]
  %21 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 4, i32 4) #13
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #13
  %24 = xor i1 %23, true
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i1 [ false, %19 ], [ %24, %22 ]
  %27 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 3, i32 0) #13
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)) #13
  %30 = xor i1 %29, true
  br label %31

31:                                               ; preds = %28, %25
  %32 = phi i1 [ false, %25 ], [ %30, %28 ]
  %33 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 4, i32 0) #13
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions13IsAtLeastGLESEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 3, i32 2) #13
  br i1 %35, label %39, label %36

36:                                               ; preds = %34
  %37 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #13
  %38 = xor i1 %37, true
  br label %39

39:                                               ; preds = %36, %34, %31
  %40 = phi i1 [ false, %34 ], [ false, %31 ], [ %38, %36 ]
  %41 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native10DeviceBase9SetToggleENS_6ToggleEb(%"class.dawn_native::DeviceBase"* %41, i32 13, i1 zeroext %8) #13
  tail call void @_ZN11dawn_native10DeviceBase9SetToggleENS_6ToggleEb(%"class.dawn_native::DeviceBase"* %41, i32 14, i1 zeroext %14) #13
  tail call void @_ZN11dawn_native10DeviceBase9SetToggleENS_6ToggleEb(%"class.dawn_native::DeviceBase"* %41, i32 15, i1 zeroext %20) #13
  tail call void @_ZN11dawn_native10DeviceBase9SetToggleENS_6ToggleEb(%"class.dawn_native::DeviceBase"* %41, i32 16, i1 zeroext %26) #13
  tail call void @_ZN11dawn_native10DeviceBase9SetToggleENS_6ToggleEb(%"class.dawn_native::DeviceBase"* %41, i32 17, i1 zeroext %32) #13
  tail call void @_ZN11dawn_native10DeviceBase9SetToggleENS_6ToggleEb(%"class.dawn_native::DeviceBase"* %41, i32 18, i1 zeroext %40) #13
  %42 = tail call dereferenceable(12) %"struct.dawn_native::opengl::OpenGLVersion"* @_ZNK11dawn_native6opengl15OpenGLFunctions10GetVersionEv(%"struct.dawn_native::opengl::OpenGLFunctions"* %2) #13
  %43 = tail call zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion4IsESEv(%"struct.dawn_native::opengl::OpenGLVersion"* %42) #13
  tail call void @_ZN11dawn_native10DeviceBase9SetToggleENS_6ToggleEb(%"class.dawn_native::DeviceBase"* %41, i32 25, i1 zeroext %43) #13
  ret void
}

declare void @_ZN11dawn_native6opengl18BuildGLFormatTableEv(%"struct.std::__1::array.107"* sret) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN11dawn_native10DeviceBase10InitializeEPNS_9QueueBaseE(%class.Result.108* sret, %"class.dawn_native::DeviceBase"*, %"class.dawn_native::QueueBase"*) local_unnamed_addr #3

declare void @_ZN11dawn_native6opengl5QueueC1EPNS0_6DeviceE(%"class.dawn_native::opengl::Queue"*, %"class.dawn_native::opengl::Device"*) unnamed_addr #3

declare zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions13IsAtLeastGLESEjj(%"struct.dawn_native::opengl::OpenGLFunctions"*, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"*, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"*, i8*) local_unnamed_addr #3

declare void @_ZN11dawn_native10DeviceBase9SetToggleENS_6ToggleEb(%"class.dawn_native::DeviceBase"*, i32, i1 zeroext) local_unnamed_addr #3

declare dereferenceable(12) %"struct.dawn_native::opengl::OpenGLVersion"* @_ZNK11dawn_native6opengl15OpenGLFunctions10GetVersionEv(%"struct.dawn_native::opengl::OpenGLFunctions"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion4IsESEv(%"struct.dawn_native::opengl::OpenGLVersion"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(20) %"struct.dawn_native::opengl::GLFormat"* @_ZN11dawn_native6opengl6Device11GetGLFormatERKNS_6FormatE(%"class.dawn_native::opengl::Device"* readnone, %"struct.dawn_native::Format"* dereferenceable(84)) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZNK11dawn_native6Format8GetIndexEv(%"struct.dawn_native::Format"* %1) #13
  %4 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 3, i32 0, i64 %3
  ret %"struct.dawn_native::opengl::GLFormat"* %4
}

declare i64 @_ZNK11dawn_native6Format8GetIndexEv(%"struct.dawn_native::Format"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device19CreateBindGroupImplEPKNS_19BindGroupDescriptorE(%class.Result.135* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BindGroupDescriptor"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.Result.108, align 8
  %5 = alloca %class.Ref.136, align 8
  %6 = bitcast %class.Result.108* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %class.Result.108, %class.Result.108* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %7, align 8
  call void @_ZN11dawn_native6opengl29ValidateGLBindGroupDescriptorEPKNS_19BindGroupDescriptorE(%class.Result.108* nonnull sret %4, %"struct.dawn_native::BindGroupDescriptor"* %2) #13
  %8 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %7, align 8
  %9 = icmp eq %"class.dawn_native::ErrorData"* %8, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %7, align 8
  br i1 %9, label %36, label %10, !prof !5

10:                                               ; preds = %3
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native6opengl6Device19CreateBindGroupImplEPKNS_19BindGroupDescriptorE, i64 0, i64 0), i32 115) #13
  %11 = getelementptr inbounds %class.Result.135, %class.Result.135* %0, i64 0, i32 0
  %12 = bitcast %"class.dawn_native::ErrorData"* %8 to i8*
  %13 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %12, i32 1) #13
  store i64 %13, i64* %11, align 8
  %14 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %7, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %7, align 8
  %15 = icmp eq %"class.dawn_native::ErrorData"* %14, null
  br i1 %15, label %47, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %14, i64 0, i32 2, i32 0, i32 0
  %18 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %17, align 8
  %19 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %18 to i64
  %22 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %14, i64 0, i32 2, i32 0, i32 1
  %23 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %18 to i8*
  call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %20, %16
  %26 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %14, i64 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %31, %25
  %35 = bitcast %"class.dawn_native::ErrorData"* %14 to i8*
  call void @_ZdlPv(i8* %35) #12
  br label %47

36:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %37 = bitcast %class.Ref.136* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  call void @_ZN11dawn_native6opengl9BindGroup6CreateEPNS0_6DeviceEPKNS_19BindGroupDescriptorE(%class.Ref.136* nonnull sret %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::BindGroupDescriptor"* %2) #13
  %38 = getelementptr inbounds %class.Result.135, %class.Result.135* %0, i64 0, i32 0
  %39 = getelementptr inbounds %class.Ref.136, %class.Ref.136* %5, i64 0, i32 0, i32 0
  %40 = bitcast %class.Ref.136* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  store %"class.dawn_native::opengl::BindGroup"* null, %"class.dawn_native::opengl::BindGroup"** %39, align 8
  %42 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* %41, i32 0) #13
  store i64 %42, i64* %38, align 8
  %43 = load %"class.dawn_native::opengl::BindGroup"*, %"class.dawn_native::opengl::BindGroup"** %39, align 8
  %44 = icmp eq %"class.dawn_native::opengl::BindGroup"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.dawn_native::opengl::BindGroup", %"class.dawn_native::opengl::BindGroup"* %43, i64 0, i32 0, i32 0, i32 0
  call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* %46) #13
  br label %47

47:                                               ; preds = %45, %36, %34, %10
  %48 = phi i8* [ %6, %10 ], [ %6, %34 ], [ %37, %36 ], [ %37, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  ret void
}

declare void @_ZN11dawn_native6opengl29ValidateGLBindGroupDescriptorEPKNS_19BindGroupDescriptorE(%class.Result.108* sret, %"struct.dawn_native::BindGroupDescriptor"*) local_unnamed_addr #3

declare void @_ZN11dawn_native6opengl9BindGroup6CreateEPNS0_6DeviceEPKNS_19BindGroupDescriptorE(%class.Ref.136* sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BindGroupDescriptor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device25CreateBindGroupLayoutImplEPKNS_25BindGroupLayoutDescriptorE(%class.Result.144* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 328) #12
  %5 = bitcast i8* %4 to %"class.dawn_native::opengl::BindGroupLayout"*
  %6 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 0
  tail call void @_ZN11dawn_native6opengl15BindGroupLayoutC1EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE(%"class.dawn_native::opengl::BindGroupLayout"* nonnull %5, %"class.dawn_native::DeviceBase"* %6, %"struct.dawn_native::BindGroupLayoutDescriptor"* %2) #13
  %7 = getelementptr inbounds %class.Result.144, %class.Result.144* %0, i64 0, i32 0
  %8 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %4, i32 0) #13
  store i64 %8, i64* %7, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl15BindGroupLayoutC1EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE(%"class.dawn_native::opengl::BindGroupLayout"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device16CreateBufferImplEPKNS_16BufferDescriptorE(%class.Result.147* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BufferDescriptor"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 120) #12
  %5 = bitcast i8* %4 to %"class.dawn_native::opengl::Buffer"*
  tail call void @_ZN11dawn_native6opengl6BufferC1EPNS0_6DeviceEPKNS_16BufferDescriptorE(%"class.dawn_native::opengl::Buffer"* nonnull %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::BufferDescriptor"* %2) #13
  %6 = getelementptr inbounds %class.Result.147, %class.Result.147* %0, i64 0, i32 0
  %7 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %4, i32 0) #13
  store i64 %7, i64* %6, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl6BufferC1EPNS0_6DeviceEPKNS_16BufferDescriptorE(%"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BufferDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device19CreateCommandBufferEPNS_14CommandEncoderEPKNS_23CommandBufferDescriptorE(%class.Result.150* noalias nocapture sret, %"class.dawn_native::opengl::Device"* nocapture readnone, %"class.dawn_native::CommandEncoder"*, %"struct.dawn_native::CommandBufferDescriptor"*) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 200) #12
  %6 = bitcast i8* %5 to %"class.dawn_native::opengl::CommandBuffer"*
  tail call void @_ZN11dawn_native6opengl13CommandBufferC1EPNS_14CommandEncoderEPKNS_23CommandBufferDescriptorE(%"class.dawn_native::opengl::CommandBuffer"* nonnull %6, %"class.dawn_native::CommandEncoder"* %2, %"struct.dawn_native::CommandBufferDescriptor"* %3) #13
  %7 = getelementptr inbounds %class.Result.150, %class.Result.150* %0, i64 0, i32 0
  %8 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %5, i32 0) #13
  store i64 %8, i64* %7, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl13CommandBufferC1EPNS_14CommandEncoderEPKNS_23CommandBufferDescriptorE(%"class.dawn_native::opengl::CommandBuffer"*, %"class.dawn_native::CommandEncoder"*, %"struct.dawn_native::CommandBufferDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device25CreateComputePipelineImplEPKNS_25ComputePipelineDescriptorE(%class.Result.322* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ComputePipelineDescriptor"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 360) #12
  %5 = bitcast i8* %4 to %"class.dawn_native::opengl::ComputePipeline"*
  tail call void @_ZN11dawn_native6opengl15ComputePipelineC1EPNS0_6DeviceEPKNS_25ComputePipelineDescriptorE(%"class.dawn_native::opengl::ComputePipeline"* nonnull %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::ComputePipelineDescriptor"* %2) #13
  %6 = getelementptr inbounds %class.Result.322, %class.Result.322* %0, i64 0, i32 0
  %7 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %4, i32 0) #13
  store i64 %7, i64* %6, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl15ComputePipelineC1EPNS0_6DeviceEPKNS_25ComputePipelineDescriptorE(%"class.dawn_native::opengl::ComputePipeline"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ComputePipelineDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device24CreatePipelineLayoutImplEPKNS_24PipelineLayoutDescriptorE(%class.Result.370* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::PipelineLayoutDescriptor"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 200) #12
  %5 = bitcast i8* %4 to %"class.dawn_native::opengl::PipelineLayout"*
  tail call void @_ZN11dawn_native6opengl14PipelineLayoutC1EPNS0_6DeviceEPKNS_24PipelineLayoutDescriptorE(%"class.dawn_native::opengl::PipelineLayout"* nonnull %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::PipelineLayoutDescriptor"* %2) #13
  %6 = getelementptr inbounds %class.Result.370, %class.Result.370* %0, i64 0, i32 0
  %7 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %4, i32 0) #13
  store i64 %7, i64* %6, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl14PipelineLayoutC1EPNS0_6DeviceEPKNS_24PipelineLayoutDescriptorE(%"class.dawn_native::opengl::PipelineLayout"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::PipelineLayoutDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device18CreateQuerySetImplEPKNS_18QuerySetDescriptorE(%class.Result.376* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::QuerySetDescriptor"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 88) #12
  %5 = bitcast i8* %4 to %"class.dawn_native::opengl::QuerySet"*
  tail call void @_ZN11dawn_native6opengl8QuerySetC1EPNS0_6DeviceEPKNS_18QuerySetDescriptorE(%"class.dawn_native::opengl::QuerySet"* nonnull %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::QuerySetDescriptor"* %2) #13
  %6 = getelementptr inbounds %class.Result.376, %class.Result.376* %0, i64 0, i32 0
  %7 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %4, i32 0) #13
  store i64 %7, i64* %6, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl8QuerySetC1EPNS0_6DeviceEPKNS_18QuerySetDescriptorE(%"class.dawn_native::opengl::QuerySet"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::QuerySetDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device24CreateRenderPipelineImplEPKNS_24RenderPipelineDescriptorE(%class.Result.379* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::RenderPipelineDescriptor"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 1328) #12
  %5 = bitcast i8* %4 to %"class.dawn_native::opengl::RenderPipeline"*
  tail call void @_ZN11dawn_native6opengl14RenderPipelineC1EPNS0_6DeviceEPKNS_24RenderPipelineDescriptorE(%"class.dawn_native::opengl::RenderPipeline"* nonnull %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::RenderPipelineDescriptor"* %2) #13
  %6 = getelementptr inbounds %class.Result.379, %class.Result.379* %0, i64 0, i32 0
  %7 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %4, i32 0) #13
  store i64 %7, i64* %6, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl14RenderPipelineC1EPNS0_6DeviceEPKNS_24RenderPipelineDescriptorE(%"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::RenderPipelineDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device17CreateSamplerImplEPKNS_17SamplerDescriptorE(%class.Result.400* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::SamplerDescriptor"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 96) #12
  %5 = bitcast i8* %4 to %"class.dawn_native::opengl::Sampler"*
  tail call void @_ZN11dawn_native6opengl7SamplerC1EPNS0_6DeviceEPKNS_17SamplerDescriptorE(%"class.dawn_native::opengl::Sampler"* nonnull %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::SamplerDescriptor"* %2) #13
  %6 = getelementptr inbounds %class.Result.400, %class.Result.400* %0, i64 0, i32 0
  %7 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %4, i32 0) #13
  store i64 %7, i64* %6, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl7SamplerC1EPNS0_6DeviceEPKNS_17SamplerDescriptorE(%"class.dawn_native::opengl::Sampler"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::SamplerDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device22CreateShaderModuleImplEPKNS_22ShaderModuleDescriptorEPNS_23ShaderModuleParseResultE(%class.Result.401* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ShaderModuleDescriptor"*, %"struct.dawn_native::ShaderModuleParseResult"*) unnamed_addr #0 align 2 {
  %5 = alloca %class.Result.402, align 8
  %6 = bitcast %class.Result.402* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  call void @_ZN11dawn_native6opengl12ShaderModule6CreateEPNS0_6DeviceEPKNS_22ShaderModuleDescriptorEPNS_23ShaderModuleParseResultE(%class.Result.402* nonnull sret %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::ShaderModuleDescriptor"* %2, %"struct.dawn_native::ShaderModuleParseResult"* %3) #13
  %7 = getelementptr inbounds %class.Result.401, %class.Result.401* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.Result.402, %class.Result.402* %5, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

declare void @_ZN11dawn_native6opengl12ShaderModule6CreateEPNS0_6DeviceEPKNS_22ShaderModuleDescriptorEPNS_23ShaderModuleParseResultE(%class.Result.402* sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ShaderModuleDescriptor"*, %"struct.dawn_native::ShaderModuleParseResult"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device19CreateSwapChainImplEPKNS_19SwapChainDescriptorE(%class.Result.403* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::SwapChainDescriptor"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 112) #12
  %5 = bitcast i8* %4 to %"class.dawn_native::opengl::SwapChain"*
  tail call void @_ZN11dawn_native6opengl9SwapChainC1EPNS0_6DeviceEPKNS_19SwapChainDescriptorE(%"class.dawn_native::opengl::SwapChain"* nonnull %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::SwapChainDescriptor"* %2) #13
  %6 = getelementptr inbounds %class.Result.403, %class.Result.403* %0, i64 0, i32 0
  %7 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %4, i32 0) #13
  store i64 %7, i64* %6, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl9SwapChainC1EPNS0_6DeviceEPKNS_19SwapChainDescriptorE(%"class.dawn_native::opengl::SwapChain"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::SwapChainDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device19CreateSwapChainImplEPNS_7SurfaceEPNS_16NewSwapChainBaseEPKNS_19SwapChainDescriptorE(%class.Result.409* noalias nocapture sret, %"class.dawn_native::opengl::Device"* nocapture readnone, %"class.dawn_native::Surface"* nocapture readnone, %"class.dawn_native::NewSwapChainBase"* nocapture readnone, %"struct.dawn_native::SwapChainDescriptor"* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = tail call i8* @_Znwm(i64 32) #12
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %10, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i64 31, i1 false) #13
  %11 = getelementptr inbounds i8, i8* %7, i64 31
  store i8 0, i8* %11, align 1
  %12 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native6opengl6Device19CreateSwapChainImplEPNS_7SurfaceEPNS_16NewSwapChainBaseEPKNS_19SwapChainDescriptorE, i64 0, i64 0), i32 162) #13
  %13 = getelementptr inbounds %class.Result.409, %class.Result.409* %0, i64 0, i32 0
  %14 = bitcast %"class.dawn_native::ErrorData"* %12 to i8*
  %15 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* %14, i32 1) #13
  store i64 %15, i64* %13, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %5
  %21 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %5, %20
  ret void
}

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device17CreateTextureImplEPKNS_17TextureDescriptorE(%class.Result.410* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::TextureDescriptor"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 104) #12
  %5 = bitcast i8* %4 to %"class.dawn_native::opengl::Texture"*
  tail call void @_ZN11dawn_native6opengl7TextureC1EPNS0_6DeviceEPKNS_17TextureDescriptorE(%"class.dawn_native::opengl::Texture"* nonnull %5, %"class.dawn_native::opengl::Device"* %1, %"struct.dawn_native::TextureDescriptor"* %2) #13
  %6 = getelementptr inbounds %class.Result.410, %class.Result.410* %0, i64 0, i32 0
  %7 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %4, i32 0) #13
  store i64 %7, i64* %6, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl7TextureC1EPNS0_6DeviceEPKNS_17TextureDescriptorE(%"class.dawn_native::opengl::Texture"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::TextureDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device21CreateTextureViewImplEPNS_11TextureBaseEPKNS_21TextureViewDescriptorE(%class.Result.413* noalias nocapture sret, %"class.dawn_native::opengl::Device"* nocapture readnone, %"class.dawn_native::TextureBase"*, %"struct.dawn_native::TextureViewDescriptor"*) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 80) #12
  %6 = bitcast i8* %5 to %"class.dawn_native::opengl::TextureView"*
  tail call void @_ZN11dawn_native6opengl11TextureViewC1EPNS_11TextureBaseEPKNS_21TextureViewDescriptorE(%"class.dawn_native::opengl::TextureView"* nonnull %6, %"class.dawn_native::TextureBase"* %2, %"struct.dawn_native::TextureViewDescriptor"* %3) #13
  %7 = getelementptr inbounds %class.Result.413, %class.Result.413* %0, i64 0, i32 0
  %8 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %5, i32 0) #13
  store i64 %8, i64* %7, align 8
  ret void
}

declare void @_ZN11dawn_native6opengl11TextureViewC1EPNS_11TextureBaseEPKNS_21TextureViewDescriptorE(%"class.dawn_native::opengl::TextureView"*, %"class.dawn_native::TextureBase"*, %"struct.dawn_native::TextureViewDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device15SubmitFenceSyncEv(%"class.dawn_native::opengl::Device"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 1, i32 0, i32 212
  %3 = load %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)** %2, align 8
  %4 = tail call %struct.__GLsync* %3(i32 37143, i32 0) #13
  %5 = ptrtoint %struct.__GLsync* %4 to i64
  %6 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native10DeviceBase35IncrementLastSubmittedCommandSerialEv(%"class.dawn_native::DeviceBase"* %6) #13
  %7 = tail call i64 @_ZNK11dawn_native10DeviceBase29GetLastSubmittedCommandSerialEv(%"class.dawn_native::DeviceBase"* %6) #13
  %8 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %"struct.std::__1::pair.97"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::pair.97"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %10, %13
  %15 = icmp eq i64 %14, 0
  %16 = shl i64 %14, 5
  %17 = add i64 %16, -1
  %18 = select i1 %15, i64 0, i64 %17
  %19 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %20
  %24 = icmp eq i64 %18, %23
  %25 = inttoptr i64 %13 to %"struct.std::__1::pair.97"**
  %26 = inttoptr i64 %10 to %"struct.std::__1::pair.97"**
  br i1 %24, label %27, label %34

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__15dequeINS_4pairIP8__GLsyncmEENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %28) #13
  %29 = load i64, i64* %21, align 8
  %30 = load i64, i64* %19, align 8
  %31 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %11, align 8
  %32 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %8, align 8
  %33 = add i64 %30, %29
  br label %34

34:                                               ; preds = %27, %1
  %35 = phi i64 [ %33, %27 ], [ %23, %1 ]
  %36 = phi %"struct.std::__1::pair.97"** [ %32, %27 ], [ %26, %1 ]
  %37 = phi %"struct.std::__1::pair.97"** [ %31, %27 ], [ %25, %1 ]
  %38 = icmp eq %"struct.std::__1::pair.97"** %36, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = lshr i64 %35, 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %37, i64 %40
  %42 = load %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %41, align 8
  %43 = and i64 %35, 255
  %44 = getelementptr inbounds %"struct.std::__1::pair.97", %"struct.std::__1::pair.97"* %42, i64 %43
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.std::__1::pair.97"* [ %44, %39 ], [ null, %34 ]
  %47 = bitcast %"struct.std::__1::pair.97"* %46 to i64*
  store i64 %5, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.97", %"struct.std::__1::pair.97"* %46, i64 0, i32 1
  store i64 %7, i64* %48, align 8
  %49 = load i64, i64* %21, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %21, align 8
  ret void
}

declare void @_ZN11dawn_native10DeviceBase35IncrementLastSubmittedCommandSerialEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #3

declare i64 @_ZNK11dawn_native10DeviceBase29GetLastSubmittedCommandSerialEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native6opengl6Device8TickImplEv(%class.Result.108* noalias nocapture sret, %"class.dawn_native::opengl::Device"* nocapture readnone) unnamed_addr #6 align 2 {
  %3 = bitcast %class.Result.108* %0 to i64*
  store i64 0, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device30CheckAndUpdateCompletedSerialsEv(%class.Result.416* noalias nocapture sret, %"class.dawn_native::opengl::Device"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 1, i32 0, i32 45
  %11 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 1, i32 0, i32 215
  %12 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 1, i32 0, i32 214
  %13 = bitcast %"struct.std::__1::pair.97"*** %7 to i8***
  %14 = load i64, i64* %8, align 8
  %15 = bitcast i64* %8 to <2 x i64>*
  %16 = bitcast i64* %8 to <2 x i64>*
  br label %17

17:                                               ; preds = %6, %51
  %18 = phi i64 [ %14, %6 ], [ %53, %51 ]
  %19 = phi i64 [ 0, %6 ], [ %28, %51 ]
  %20 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %7, align 8
  %21 = lshr i64 %18, 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %20, i64 %21
  %23 = load %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %22, align 8
  %24 = and i64 %18, 255
  %25 = getelementptr inbounds %"struct.std::__1::pair.97", %"struct.std::__1::pair.97"* %23, i64 %24, i32 0
  %26 = load %struct.__GLsync*, %struct.__GLsync** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair.97", %"struct.std::__1::pair.97"* %23, i64 %24, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = tail call zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"* %9, i32 25) #13
  br i1 %29, label %30, label %32

30:                                               ; preds = %17
  %31 = load void ()*, void ()** %10, align 8
  tail call void %31() #13
  br label %32

32:                                               ; preds = %30, %17
  %33 = load i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)** %11, align 8
  %34 = tail call i32 %33(%struct.__GLsync* %26, i32 1, i64 0) #13
  %35 = icmp eq i32 %34, 37147
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = load void (%struct.__GLsync*)*, void (%struct.__GLsync*)** %12, align 8
  tail call void %37(%struct.__GLsync* %26) #13
  %38 = load <2 x i64>, <2 x i64>* %15, align 8
  %39 = add <2 x i64> %38, <i64 1, i64 -1>
  store <2 x i64> %39, <2 x i64>* %16, align 8
  %40 = extractelement <2 x i64> %39, i32 0
  %41 = icmp ult i64 %40, 512
  %42 = extractelement <2 x i64> %39, i32 1
  br i1 %41, label %51, label %43

43:                                               ; preds = %36
  %44 = load i8**, i8*** %13, align 8
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #12
  %46 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %7, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %46, i64 1
  store %"struct.std::__1::pair.97"** %47, %"struct.std::__1::pair.97"*** %7, align 8
  %48 = load i64, i64* %8, align 8
  %49 = add i64 %48, -256
  store i64 %49, i64* %8, align 8
  %50 = load i64, i64* %3, align 8
  br label %51

51:                                               ; preds = %36, %43
  %52 = phi i64 [ %42, %36 ], [ %50, %43 ]
  %53 = phi i64 [ %40, %36 ], [ %49, %43 ]
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %55, label %17

55:                                               ; preds = %51, %32, %2
  %56 = phi i64 [ 0, %2 ], [ %28, %51 ], [ %19, %32 ]
  %57 = getelementptr inbounds %class.Result.416, %class.Result.416* %0, i64 0, i32 0
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %class.Result.416, %class.Result.416* %0, i64 0, i32 1
  %59 = bitcast %"class.std::__1::unique_ptr.109"* %58 to i64*
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %class.Result.416, %class.Result.416* %0, i64 0, i32 2
  store i64 %56, i64* %60, align 8
  ret void
}

declare zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device19CreateStagingBufferEm(%class.Result.417* noalias nocapture sret, %"class.dawn_native::opengl::Device"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 15, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15, i1 false) #13
  %9 = getelementptr inbounds i8, i8* %6, i64 15
  store i8 0, i8* %9, align 1
  %10 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)) #13, !noalias !6
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #13, !noalias !6
  %13 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native6opengl6Device19CreateStagingBufferEm, i64 0, i64 0), i32 213) #13
  %14 = ptrtoint %"class.dawn_native::ErrorData"* %13 to i64
  %15 = getelementptr inbounds %class.Result.417, %class.Result.417* %0, i64 0, i32 0
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %class.Result.417, %class.Result.417* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::unique_ptr.109"* %16 to i64*
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds %class.Result.417, %class.Result.417* %0, i64 0, i32 2
  %19 = bitcast %"class.std::__1::unique_ptr.122"* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %3, %24
  %28 = load i8, i8* %8, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device23CopyFromStagingToBufferEPNS_17StagingBufferBaseEmPNS_10BufferBaseEmm(%class.Result.108* noalias nocapture sret, %"class.dawn_native::opengl::Device"* nocapture readnone, %"class.dawn_native::StagingBufferBase"* nocapture readnone, i64, %"class.dawn_native::BufferBase"* nocapture readnone, i64, i64) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 15, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15, i1 false) #13
  %13 = getelementptr inbounds i8, i8* %10, i64 15
  store i8 0, i8* %13, align 1
  %14 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i64 0, i64 0)) #13, !noalias !9
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %16, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #13, !noalias !9
  %17 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__._ZN11dawn_native6opengl6Device23CopyFromStagingToBufferEPNS_17StagingBufferBaseEmPNS_10BufferBaseEmm, i64 0, i64 0), i32 221) #13
  %18 = ptrtoint %"class.dawn_native::ErrorData"* %17 to i64
  %19 = bitcast %class.Result.108* %0 to i64*
  store i64 %18, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %7, %24
  %28 = load i8, i8* %12, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device24CopyFromStagingToTextureEPKNS_17StagingBufferBaseERKNS_17TextureDataLayoutEPNS_11TextureCopyERKNS_8Extent3DE(%class.Result.108* noalias nocapture sret, %"class.dawn_native::opengl::Device"* nocapture readnone, %"class.dawn_native::StagingBufferBase"* nocapture readnone, %"struct.dawn_native::TextureDataLayout"* nocapture readnone dereferenceable(24), %"struct.dawn_native::TextureCopy"* nocapture readnone, %"struct.dawn_native::Extent3D"* nocapture readnone dereferenceable(12)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 15, i8* %11, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %9, i64 15
  store i8 0, i8* %12, align 1
  %13 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #13, !noalias !12
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %15, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #13, !noalias !12
  %16 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__._ZN11dawn_native6opengl6Device24CopyFromStagingToTextureEPKNS_17StagingBufferBaseERKNS_17TextureDataLayoutEPNS_11TextureCopyERKNS_8Extent3DE, i64 0, i64 0), i32 228) #13
  %17 = ptrtoint %"class.dawn_native::ErrorData"* %16 to i64
  %18 = bitcast %class.Result.108* %0 to i64*
  store i64 %17, i64* %18, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %6, %23
  %27 = load i8, i8* %11, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %26, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device12ShutDownImplEv(%"class.dawn_native::opengl::Device"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl6Device25WaitForIdleForDestructionEv(%class.Result.108* noalias nocapture sret, %"class.dawn_native::opengl::Device"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.Result.108, align 8
  %4 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 1, i32 0, i32 44
  %5 = load void ()*, void ()** %4, align 8
  tail call void %5() #13
  %6 = bitcast %class.Result.108* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %class.Result.108, %class.Result.108* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %7, align 8
  %8 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 0
  call void @_ZN11dawn_native10DeviceBase18CheckPassedSerialsEv(%class.Result.108* nonnull sret %3, %"class.dawn_native::DeviceBase"* %8) #13
  %9 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %7, align 8
  %10 = icmp eq %"class.dawn_native::ErrorData"* %9, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %7, align 8
  br i1 %10, label %37, label %11, !prof !5

11:                                               ; preds = %2
  %12 = ptrtoint %"class.dawn_native::ErrorData"* %9 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__._ZN11dawn_native6opengl6Device25WaitForIdleForDestructionEv, i64 0, i64 0), i32 237) #13
  %13 = bitcast %class.Result.108* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %7, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %7, align 8
  %15 = icmp eq %"class.dawn_native::ErrorData"* %14, null
  br i1 %15, label %36, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %14, i64 0, i32 2, i32 0, i32 0
  %18 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %17, align 8
  %19 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %18 to i64
  %22 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %14, i64 0, i32 2, i32 0, i32 1
  %23 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %18 to i8*
  call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %20, %16
  %26 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %14, i64 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %31, %25
  %35 = bitcast %"class.dawn_native::ErrorData"* %14 to i8*
  call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %11, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  br label %39

37:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %38 = bitcast %class.Result.108* %0 to i64*
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %36, %37
  ret void
}

declare void @_ZN11dawn_native10DeviceBase18CheckPassedSerialsEv(%class.Result.108* sret, %"class.dawn_native::DeviceBase"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK11dawn_native6opengl6Device30GetOptimalBytesPerRowAlignmentEv(%"class.dawn_native::opengl::Device"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK11dawn_native6opengl6Device44GetOptimalBufferToTextureCopyOffsetAlignmentEv(%"class.dawn_native::opengl::Device"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i64 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK11dawn_native6opengl6Device22GetTimestampPeriodInNSEv(%"class.dawn_native::opengl::Device"* nocapture readnone) unnamed_addr #7 align 2 {
  ret float 1.000000e+00
}

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #3

declare void @_ZN10RefCounted7ReleaseEv(%class.RefCounted*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !16

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #13
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #13
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #13
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #13, !range !15
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #13
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #12, !noalias !18
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !18
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #13, !noalias !18
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !18
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !18
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #13, !noalias !18
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !18
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %131, align 8, !noalias !18
  %132 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #13, !range !15
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #13
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #13, !range !15
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base"* %174, %"struct.std::__1::__hash_node_base"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #13, !range !15
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %214
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #10 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIP8__GLsyncmEENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.97"*, align 8
  %3 = alloca %"struct.std::__1::pair.97"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.425", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.97"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %11, i64 1
  store %"struct.std::__1::pair.97"** %14, %"struct.std::__1::pair.97"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.97"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.97"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.97"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.97"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.97"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.97"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.97"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.97"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.97"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.97"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %33, i64 %36
  store %"struct.std::__1::pair.97"** %44, %"struct.std::__1::pair.97"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %43, i64 %32
  store %"struct.std::__1::pair.97"** %45, %"struct.std::__1::pair.97"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.97"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.97"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.97"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.97"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.97"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.97"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.97"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.97"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.97"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.97"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.97"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !21

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.97"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.97"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.97"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.97"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.97"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.97"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.97"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.97"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.97"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.97"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.97"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.97"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.97"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.97"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.97"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.97"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.97"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.97"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.97"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.97"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.97"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.97"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.97"** %70 to i64
  %146 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.97"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.97"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.97"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.97"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.97"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"struct.std::__1::pair.97"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %160, i64 1
  store %"struct.std::__1::pair.97"** %161, %"struct.std::__1::pair.97"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.97"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.97"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.97"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.97"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.97"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.97"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"struct.std::__1::pair.97"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIP8__GLsyncmEENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.97"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.97"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"struct.std::__1::pair.97"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIP8__GLsyncmEENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.97"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.97"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %192, i64 1
  store %"struct.std::__1::pair.97"** %195, %"struct.std::__1::pair.97"*** %167, align 8
  %196 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %164, align 8
  %197 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.97"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.97"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.97"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.97"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.97"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.97"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.97"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.97"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.97"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.97"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %212, i64 %215
  store %"struct.std::__1::pair.97"** %223, %"struct.std::__1::pair.97"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %222, i64 %211
  store %"struct.std::__1::pair.97"** %224, %"struct.std::__1::pair.97"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.97"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.97"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.97"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.97"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.97"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.97"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.97"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.97"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.97"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.97"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !22

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.97"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.97"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.97"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.97"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.97"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.97"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.97"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.97"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.97"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.97"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.97"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.97"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.97"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.97"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.97"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.97"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.97"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.97"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.97"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.97"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.97"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.97"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.97"** %247 to i64
  %323 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.97"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.97"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.97"** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"struct.std::__1::pair.97"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %335, i64 1
  store %"struct.std::__1::pair.97"** %336, %"struct.std::__1::pair.97"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.425"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.425", %"struct.std::__1::__split_buffer.425"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.425", %"struct.std::__1::__split_buffer.425"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.425", %"struct.std::__1::__split_buffer.425"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.425", %"struct.std::__1::__split_buffer.425"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.425"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.97"** null, %"struct.std::__1::pair.97"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.101"** %342 to %"class.std::__1::__compressed_pair.98"**
  store %"class.std::__1::__compressed_pair.98"* %346, %"class.std::__1::__compressed_pair.98"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.97"**
  %355 = bitcast %"struct.std::__1::__split_buffer.425"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %354, i64 %171
  store %"struct.std::__1::pair.97"** %356, %"struct.std::__1::pair.97"*** %340, align 8
  store %"struct.std::__1::pair.97"** %356, %"struct.std::__1::pair.97"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %354, i64 %345
  store %"struct.std::__1::pair.97"** %357, %"struct.std::__1::pair.97"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.97"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.97"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.97"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %356, i64 %370
  store %"struct.std::__1::pair.97"** %371, %"struct.std::__1::pair.97"*** %340, align 8
  store %"struct.std::__1::pair.97"** %371, %"struct.std::__1::pair.97"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.97"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.425"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.97"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.97"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.97"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.97"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.97"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.97"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %164, align 8
  %395 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.97"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.97"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.97"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.97"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.97"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.97"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %406, i64 1
  store %"struct.std::__1::pair.97"** %408, %"struct.std::__1::pair.97"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.97"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.97"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.425"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.97"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.97"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.97"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.97"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.425"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.97"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.97"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.97"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.97"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.97"**
  %442 = icmp eq %"struct.std::__1::pair.97"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.97"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %441, i64 %448
  store %"struct.std::__1::pair.97"** %449, %"struct.std::__1::pair.97"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.97"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIP8__GLsyncmEERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.425"* nonnull %4, %"struct.std::__1::pair.97"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.97"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIP8__GLsyncmEENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.97"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.97"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.97"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.97"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.97"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.97"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.97"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.97"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.97"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.97"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.97"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %23, i64 %26
  store %"struct.std::__1::pair.97"** %34, %"struct.std::__1::pair.97"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %33, i64 %22
  store %"struct.std::__1::pair.97"** %35, %"struct.std::__1::pair.97"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.97"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.97"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.97"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.97"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.97"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.97"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.97"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.97"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.97"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.97"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.97"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !23

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.97"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.97"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.97"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.97"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.97"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.97"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.97"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.97"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.97"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.97"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.97"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.97"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.97"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.97"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.97"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.97"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.97"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.97"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.97"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.97"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.97"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.97"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.97"** %60 to i64
  %136 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.97"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.97"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.97"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.97"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.97"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"struct.std::__1::pair.97"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.97"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %152, i64 1
  store %"struct.std::__1::pair.97"** %153, %"struct.std::__1::pair.97"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIP8__GLsyncmEENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.97"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.97"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.97"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.97"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.97"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.97"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.97"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.97"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.97"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.97"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.97"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.97"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.97"** %36, %"struct.std::__1::pair.97"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %35, i64 %22
  store %"struct.std::__1::pair.97"** %37, %"struct.std::__1::pair.97"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.97"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.97"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.97"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.97"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.97"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.97"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.97"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.97"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.97"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !24

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.97"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.97"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.97"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.97"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.97"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.97"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.97"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.97"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.97"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.97"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.97"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.97"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.97"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.97"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.97"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.97"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.97"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.97"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.97"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.97"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.97"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.97"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.97"** %61 to i64
  %137 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.97"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.97"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.97"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.97"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.97"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.97"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.97"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.97"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %153, i64 -1
  store %"struct.std::__1::pair.97"** %154, %"struct.std::__1::pair.97"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIP8__GLsyncmEERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.425"*, %"struct.std::__1::pair.97"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.425", %"struct.std::__1::__split_buffer.425"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.425", %"struct.std::__1::__split_buffer.425"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.97"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.97"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.425", %"struct.std::__1::__split_buffer.425"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.425", %"struct.std::__1::__split_buffer.425"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.97"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.97"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.97"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.97"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.97"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.97"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.97"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.97"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.97"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.97"** %36, %"struct.std::__1::pair.97"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %35, i64 %22
  store %"struct.std::__1::pair.97"** %37, %"struct.std::__1::pair.97"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.425"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.97"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.97"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.97"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.97"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.97"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.97"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.97"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.97"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.97"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !25

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.97"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.97"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.97"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.97"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.97"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.97"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.97"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.97"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.97"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.97"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.97"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.97"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.97"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.97"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.97"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.97"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.97"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.97"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.97"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.97"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.97"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.97"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.97"** %61 to i64
  %137 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.97"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.97"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.97"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.97"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.97"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.97"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.97"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.97"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.97"**, %"struct.std::__1::pair.97"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.97"*, %"struct.std::__1::pair.97"** %153, i64 -1
  store %"struct.std::__1::pair.97"** %154, %"struct.std::__1::pair.97"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11dawn_native6opengl6Device10InitializeEv: argument 0"}
!4 = distinct !{!4, !"_ZN11dawn_native6opengl6Device10InitializeEv"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!15 = !{i64 0, i64 65}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!21 = distinct !{!21, !17}
!22 = distinct !{!22, !17}
!23 = distinct !{!23, !17}
!24 = distinct !{!24, !17}
!25 = distinct !{!25, !17}
