; ModuleID = '../../crypto/sha2.cc'
source_filename = "../../crypto/sha2.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [32 x i8] }
%"class.crypto::SecureHash" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto10SHA256HashEN4base4spanIKhLm18446744073709551615EEE(%"struct.std::__1::array"* noalias sret, i64, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 -86, i64 32, i1 false)
  %5 = tail call i8* @SHA256(i8* %2, i64 %1, i8* %4) #4
  ret void
}

declare i8* @SHA256(i8*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %5 = tail call %"class.crypto::SecureHash"* @_ZN6crypto10SecureHash6CreateENS0_9AlgorithmE(i32 0) #4
  %6 = bitcast %"class.crypto::SecureHash"* %5 to void (%"class.crypto::SecureHash"*, i8*, i64)***
  %7 = load void (%"class.crypto::SecureHash"*, i8*, i64)**, void (%"class.crypto::SecureHash"*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %7, i64 2
  %9 = load void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %8, align 8
  tail call void %9(%"class.crypto::SecureHash"* %5, i8* %0, i64 %1) #4
  %10 = load void (%"class.crypto::SecureHash"*, i8*, i64)**, void (%"class.crypto::SecureHash"*, i8*, i64)*** %6, align 8
  %11 = getelementptr inbounds void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %10, i64 3
  %12 = load void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %11, align 8
  tail call void %12(%"class.crypto::SecureHash"* %5, i8* %2, i64 %3) #4
  %13 = icmp eq %"class.crypto::SecureHash"* %5, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.crypto::SecureHash"* %5 to void (%"class.crypto::SecureHash"*)***
  %16 = load void (%"class.crypto::SecureHash"*)**, void (%"class.crypto::SecureHash"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.crypto::SecureHash"*)*, void (%"class.crypto::SecureHash"*)** %16, i64 1
  %18 = load void (%"class.crypto::SecureHash"*)*, void (%"class.crypto::SecureHash"*)** %17, align 8
  tail call void %18(%"class.crypto::SecureHash"* nonnull %5) #4
  br label %19

19:                                               ; preds = %4, %14
  ret void
}

declare %"class.crypto::SecureHash"* @_ZN6crypto10SecureHash6CreateENS0_9AlgorithmE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = tail call i8* @_Znwm(i64 48) #5
  store i8* %6, i8** %4, align 8
  %7 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %7, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 33, i1 false)
  %8 = tail call %"class.crypto::SecureHash"* @_ZN6crypto10SecureHash6CreateENS0_9AlgorithmE(i32 0) #4
  %9 = bitcast %"class.crypto::SecureHash"* %8 to void (%"class.crypto::SecureHash"*, i8*, i64)***
  %10 = load void (%"class.crypto::SecureHash"*, i8*, i64)**, void (%"class.crypto::SecureHash"*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %10, i64 2
  %12 = load void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %11, align 8
  tail call void %12(%"class.crypto::SecureHash"* %8, i8* %1, i64 %2) #4
  %13 = load void (%"class.crypto::SecureHash"*, i8*, i64)**, void (%"class.crypto::SecureHash"*, i8*, i64)*** %9, align 8
  %14 = getelementptr inbounds void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %13, i64 3
  %15 = load void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %14, align 8
  tail call void %15(%"class.crypto::SecureHash"* %8, i8* nonnull %6, i64 32) #4
  %16 = icmp eq %"class.crypto::SecureHash"* %8, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.crypto::SecureHash"* %8 to void (%"class.crypto::SecureHash"*)***
  %19 = load void (%"class.crypto::SecureHash"*)**, void (%"class.crypto::SecureHash"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.crypto::SecureHash"*)*, void (%"class.crypto::SecureHash"*)** %19, i64 1
  %21 = load void (%"class.crypto::SecureHash"*)*, void (%"class.crypto::SecureHash"*)** %20, align 8
  tail call void %21(%"class.crypto::SecureHash"* nonnull %8) #4
  br label %22

22:                                               ; preds = %3, %17
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
