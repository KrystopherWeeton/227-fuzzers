; ModuleID = '../../third_party/blink/renderer/platform/bindings/v8_dom_wrapper.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/v8_dom_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::Object" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.170", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.113", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist.44"* }
%"class.blink::Worklist.44" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.116", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.44"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.220" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase.174" }
%"class.blink::MemberBase.174" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.177", %"class.blink::HeapHashMap.186", %"class.std::__1::unique_ptr.196", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.208", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.211" }
%"class.blink::HeapHashMap.177" = type { %"class.WTF::HashMap.180" }
%"class.WTF::HashMap.180" = type { %"class.WTF::HashTable.181" }
%"class.WTF::HashTable.181" = type <{ %"struct.WTF::KeyValuePair.183"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.183" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.186" = type { %"class.WTF::HashMap.189" }
%"class.WTF::HashMap.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.WTF::KeyValuePair.192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.192" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.193" }
%"class.blink::TraceWrapperV8Reference.193" = type { %"class.v8::TracedReference.194" }
%"class.v8::TracedReference.194" = type { %"class.v8::BasicTracedReference.195" }
%"class.v8::BasicTracedReference.195" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.199" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.208" = type { %"class.v8::Persistent.209" }
%"class.v8::Persistent.209" = type { %"class.v8::PersistentBase.210" }
%"class.v8::PersistentBase.210" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.211" = type { %"class.WTF::HashMap.214" }
%"class.WTF::HashMap.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"struct.WTF::KeyValuePair.217"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.217" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.218" }
%"class.blink::Persistent.218" = type { %"class.blink::PersistentBase.219" }
%"class.blink::PersistentBase.219" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::V8WrapperInstantiationScope" = type <{ i8, [7 x i8], %"class.v8::Local.184", %"class.v8::TryCatch", %"struct.blink::WrapperTypeInfo"*, i8, [7 x i8] }>
%"class.v8::Local.184" = type { %"class.v8::Context"* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.227 }
%union.anon.227 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.252", %"class.WTF::HashMap.252", %"class.WTF::HashMap.257", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.286", %"class.blink::Persistent.218", i8, i8, i8, %"class.WTF::Vector.292", %"class.std::__1::unique_ptr.297", %"class.blink::Persistent.303", %"class.blink::Persistent.307", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.234", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", i32, i32 }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.252" = type { %"class.WTF::HashTable.253" }
%"class.WTF::HashTable.253" = type <{ %"struct.WTF::KeyValuePair.256"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.256" = type opaque
%"class.WTF::HashMap.257" = type { %"class.WTF::HashTable.258" }
%"class.WTF::HashTable.258" = type <{ %"struct.WTF::KeyValuePair.261"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.261" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.270", %class.scoped_refptr.277 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.265", i8* }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.269"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.269" = type { %"class.WTF::StringImpl"*, i64 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.278" }
%"struct.std::__1::atomic.278" = type { %"struct.std::__1::__atomic_base.279" }
%"struct.std::__1::__atomic_base.279" = type { %"struct.std::__1::__atomic_base.280" }
%"struct.std::__1::__atomic_base.280" = type { %"struct.std::__1::__cxx_atomic_impl.281" }
%"struct.std::__1::__cxx_atomic_impl.281" = type { %"struct.std::__1::__cxx_atomic_base_impl.282" }
%"struct.std::__1::__cxx_atomic_base_impl.282" = type { i32 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.270" = type { %"class.v8::PersistentValueMapBase.271" }
%"class.v8::PersistentValueMapBase.271" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.272", i8* }
%"class.WTF::HashMap.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.321", %"class.WTF::String", %"class.std::__1::unique_ptr.323" }
%"class.WTF::RefCounted.321" = type { %"class.base::RefCounted.322" }
%"class.base::RefCounted.322" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::String" = type { %class.scoped_refptr.277 }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.337", %"class.WTF::Vector.343", i8, i32 }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.WTF::Vector.329"* }
%"class.WTF::Vector.329" = type { %"class.WTF::VectorBuffer.330" }
%"class.WTF::VectorBuffer.330" = type { %"class.WTF::VectorBufferBase.331" }
%"class.WTF::VectorBufferBase.331" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.343" = type { %"class.WTF::VectorBuffer.344" }
%"class.WTF::VectorBuffer.344" = type { %"class.WTF::VectorBufferBase.331", [32 x i8] }
%class.scoped_refptr.277 = type { %"class.WTF::StringImpl"* }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.303" = type { %"class.blink::PersistentBase.304" }
%"class.blink::PersistentBase.304" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.307" = type { %"class.blink::PersistentBase.308" }
%"class.blink::PersistentBase.308" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.313" }
%"class.WTF::Vector.313" = type { %"class.WTF::VectorBuffer.314" }
%"class.WTF::VectorBuffer.314" = type { %"class.WTF::VectorBufferBase.315" }
%"class.WTF::VectorBufferBase.315" = type { %"struct.std::__1::pair.316"*, i32, i32 }
%"struct.std::__1::pair.316" = type { %"class.blink::UntracedMember", %"class.blink::Member.319" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::ActiveScriptWrappableBase"* }

$_ZN5blink27V8WrapperInstantiationScopeC2EPNS_11ScriptStateEPKNS_15WrapperTypeInfoE = comdat any

$_ZN5blink27V8WrapperInstantiationScopeD2Ev = comdat any

$_ZN3WTF9HashTableIPKN5blink15WrapperTypeInfoENS_12KeyValuePairIS4_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE4findERKS4_ = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

@.str = private unnamed_addr constant [69 x i8] c"../../third_party/blink/renderer/platform/bindings/v8_dom_wrapper.cc\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"!wrapper.IsEmpty()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@.str.2 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZN5blink12V8DOMWrapper13CreateWrapperEPNS_11ScriptStateEPKNS_15WrapperTypeInfoE(%"class.blink::ScriptState"*, %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::WrapperTypeInfo"*, align 8
  %4 = alloca %"class.absl::optional", align 8
  %5 = alloca %"class.blink::V8WrapperInstantiationScope", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #4
  %8 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %8, align 8
  store i8 0, i8* %7, align 8
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %union.anon* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false) #4
  %11 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13, !prof !3

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %14, align 8
  %16 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %15) #4
  %17 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %16, i64 0, i32 3
  %18 = bitcast %"class.base::TickClock"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %16, %"class.blink::RuntimeCallStats"** %20, align 8
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %24 = bitcast i64* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #4
  %25 = bitcast %"class.base::TickClock"** %23 to i64*
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %16, i64 0, i32 2, i64 1
  %27 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %16, i64 0, i32 0
  %28 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %27, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %21, %"class.blink::RuntimeCallCounter"* %26, %"class.blink::RuntimeCallTimer"* %28) #4
  store %"class.blink::RuntimeCallTimer"* %21, %"class.blink::RuntimeCallTimer"** %27, align 8
  store i8 1, i8* %7, align 8
  br label %29

29:                                               ; preds = %2, %13
  %30 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 80, i1 false)
  call void @_ZN5blink27V8WrapperInstantiationScopeC2EPNS_11ScriptStateEPKNS_15WrapperTypeInfoE(%"class.blink::V8WrapperInstantiationScope"* nonnull %5, %"class.blink::ScriptState"* %0, %"struct.blink::WrapperTypeInfo"* %1)
  %31 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %5, i64 0, i32 5
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %80

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %5, i64 0, i32 2, i32 0
  %36 = load %"class.v8::Context"*, %"class.v8::Context"** %35, align 8
  %37 = call %"class.blink::V8PerContextData"* @_ZN5blink16V8PerContextData4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %36) #4
  %38 = icmp eq %"class.blink::V8PerContextData"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %34
  %40 = bitcast %"struct.blink::WrapperTypeInfo"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  store %"struct.blink::WrapperTypeInfo"* %1, %"struct.blink::WrapperTypeInfo"** %3, align 8
  %41 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %37, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::HashMap.180", %"class.WTF::HashMap.180"* %41, i64 0, i32 0
  %43 = call { %"struct.WTF::KeyValuePair.183"*, %"struct.WTF::KeyValuePair.183"* } @_ZN3WTF9HashTableIPKN5blink15WrapperTypeInfoENS_12KeyValuePairIS4_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE4findERKS4_(%"class.WTF::HashTable.181"* %42, %"struct.blink::WrapperTypeInfo"** nonnull dereferenceable(8) %3) #4
  %44 = extractvalue { %"struct.WTF::KeyValuePair.183"*, %"struct.WTF::KeyValuePair.183"* } %43, 0
  %45 = getelementptr inbounds %"class.WTF::HashMap.180", %"class.WTF::HashMap.180"* %41, i64 0, i32 0, i32 0
  %46 = load %"struct.WTF::KeyValuePair.183"*, %"struct.WTF::KeyValuePair.183"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %37, i64 0, i32 1, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.183", %"struct.WTF::KeyValuePair.183"* %46, i64 %49
  %51 = icmp eq %"struct.WTF::KeyValuePair.183"* %44, %50
  br i1 %51, label %57, label %52

52:                                               ; preds = %39
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.183", %"struct.WTF::KeyValuePair.183"* %44, i64 0, i32 1, i32 0, i32 0
  %54 = bitcast %"class.v8::BasicTracedReference"* %53 to %"class.v8::Object"**
  %55 = load %"class.v8::Object"*, %"class.v8::Object"** %54, align 8
  %56 = call %"class.v8::Object"* @_ZN2v86Object5CloneEv(%"class.v8::Object"* %55) #4
  br label %60

57:                                               ; preds = %39
  %58 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %3, align 8
  %59 = call %"class.v8::Object"* @_ZN5blink16V8PerContextData30CreateWrapperFromCacheSlowCaseEPKNS_15WrapperTypeInfoE(%"class.blink::V8PerContextData"* nonnull %37, %"struct.blink::WrapperTypeInfo"* %58) #4
  br label %60

60:                                               ; preds = %52, %57
  %61 = phi %"class.v8::Object"* [ %56, %52 ], [ %59, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  %62 = icmp eq %"class.v8::Object"* %61, null
  br i1 %62, label %63, label %80

63:                                               ; preds = %60
  %64 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #4
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #4
  br label %80

66:                                               ; preds = %34
  %67 = load %"class.v8::Context"*, %"class.v8::Context"** %35, align 8
  %68 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67) #4
  %69 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %68, i64 0, i32 2, i32 0
  %70 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %72 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %71, align 8
  %73 = call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* %1, %"class.v8::Isolate"* %72, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %70) #4
  %74 = bitcast %"class.v8::Template"* %73 to %"class.v8::FunctionTemplate"*
  %75 = call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %74) #4
  %76 = load %"class.v8::Context"*, %"class.v8::Context"** %35, align 8
  %77 = call %"class.v8::Object"* @_ZN2v814ObjectTemplate11NewInstanceENS_5LocalINS_7ContextEEE(%"class.v8::ObjectTemplate"* %75, %"class.v8::Context"* %76) #4
  %78 = icmp eq %"class.v8::Object"* %77, null
  br i1 %78, label %79, label %80, !prof !4

79:                                               ; preds = %66
  call void @_ZN2v82V812ToLocalEmptyEv() #4
  br label %80

80:                                               ; preds = %29, %60, %63, %66, %79
  %81 = phi %"class.v8::Object"* [ null, %29 ], [ %61, %60 ], [ null, %63 ], [ %77, %66 ], [ null, %79 ]
  call void @_ZN5blink27V8WrapperInstantiationScopeD2Ev(%"class.blink::V8WrapperInstantiationScope"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #4
  %82 = load i8, i8* %7, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %85, align 8
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %88 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %87) #4
  %89 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %86, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %88, %"class.blink::RuntimeCallTimer"** %89, align 8
  store i8 0, i8* %7, align 8
  br label %90

90:                                               ; preds = %80, %84
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #4
  ret %"class.v8::Object"* %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27V8WrapperInstantiationScopeC2EPNS_11ScriptStateEPKNS_15WrapperTypeInfoE(%"class.blink::V8WrapperInstantiationScope"*, %"class.blink::ScriptState"*, %"struct.blink::WrapperTypeInfo"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #4
  %9 = getelementptr inbounds %"class.v8::Local.184", %"class.v8::Local.184"* %5, i64 0, i32 0
  store %"class.v8::Context"* %8, %"class.v8::Context"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 3
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  tail call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* %10, %"class.v8::Isolate"* %11) #4
  %12 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 4
  store %"struct.blink::WrapperTypeInfo"* %2, %"struct.blink::WrapperTypeInfo"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 5
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.v8::Context"*, %"class.v8::Context"** %14, align 8
  %16 = icmp eq %"class.v8::Context"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %3
  %18 = bitcast %"class.v8::Local.184"* %5 to i64**
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br label %38

21:                                               ; preds = %3
  %22 = bitcast %"class.blink::ScriptState"* %1 to %"class.v8::internal::Isolate"**
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %24 = bitcast %"class.v8::Context"* %15 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %23, i64 %25) #4
  %27 = bitcast i64* %26 to %"class.v8::Context"*
  %28 = ptrtoint i64* %26 to i64
  %29 = bitcast %"class.v8::Local.184"* %5 to i64**
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %26, null
  %32 = icmp eq i64* %30, null
  %33 = or i1 %31, %32
  br i1 %33, label %38, label %34

34:                                               ; preds = %21
  %35 = load i64, i64* %26, align 8
  %36 = load i64, i64* %30, align 8
  %37 = icmp eq i64 %35, %36
  br i1 %37, label %55, label %44

38:                                               ; preds = %17, %21
  %39 = phi i1 [ %20, %17 ], [ %32, %21 ]
  %40 = phi i1 [ true, %17 ], [ %31, %21 ]
  %41 = phi i64 [ 0, %17 ], [ %28, %21 ]
  %42 = phi %"class.v8::Context"* [ null, %17 ], [ %27, %21 ]
  %43 = and i1 %40, %39
  br i1 %43, label %55, label %44

44:                                               ; preds = %34, %38
  %45 = phi i64 [ %28, %34 ], [ %41, %38 ]
  %46 = phi %"class.v8::Context"* [ %27, %34 ], [ %42, %38 ]
  %47 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %48 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %47) #4
  %49 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %12, align 8
  %50 = tail call zeroext i1 @_ZN5blink26BindingSecurityForPlatform42ShouldAllowWrapperCreationOrThrowExceptionEN2v85LocalINS1_7ContextEEES4_PKNS_15WrapperTypeInfoE(%"class.v8::Context"* %48, %"class.v8::Context"* %46, %"struct.blink::WrapperTypeInfo"* %49) #4
  br i1 %50, label %53, label %51

51:                                               ; preds = %44
  %52 = tail call %"class.v8::Value"* @_ZN2v88TryCatch7ReThrowEv(%"class.v8::TryCatch"* %10) #4
  store i8 1, i8* %13, align 8
  br label %55

53:                                               ; preds = %44
  store i8 1, i8* %4, align 8
  %54 = bitcast %"class.v8::Local.184"* %5 to i64*
  store i64 %45, i64* %54, align 8
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %46) #4
  br label %55

55:                                               ; preds = %34, %38, %53, %51
  ret void
}

declare %"class.blink::V8PerContextData"* @_ZN5blink16V8PerContextData4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v814ObjectTemplate11NewInstanceENS_5LocalINS_7ContextEEE(%"class.v8::ObjectTemplate"*, %"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27V8WrapperInstantiationScopeD2Ev(%"class.blink::V8WrapperInstantiationScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 3
  %7 = tail call %"class.v8::Value"* @_ZN2v88TryCatch7ReThrowEv(%"class.v8::TryCatch"* %6) #4
  br label %26

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.v8::Context"*, %"class.v8::Context"** %9, align 8
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %10) #4
  %11 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 3
  %16 = tail call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %15) #4
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = tail call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* %15) #4
  tail call void @_ZN2v88TryCatch5ResetEv(%"class.v8::TryCatch"* %15) #4
  %19 = load %"class.v8::Context"*, %"class.v8::Context"** %9, align 8
  %20 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %19) #4
  %21 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %20) #4
  %22 = load %"class.v8::Context"*, %"class.v8::Context"** %9, align 8
  %23 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 4
  %24 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %23, align 8
  tail call void @_ZN5blink26BindingSecurityForPlatform31RethrowWrapperCreationExceptionEN2v85LocalINS1_7ContextEEES4_PKNS_15WrapperTypeInfoENS2_INS1_5ValueEEE(%"class.v8::Context"* %21, %"class.v8::Context"* %22, %"struct.blink::WrapperTypeInfo"* %24, %"class.v8::Value"* %18) #4
  %25 = tail call %"class.v8::Value"* @_ZN2v88TryCatch7ReThrowEv(%"class.v8::TryCatch"* %15) #4
  br label %26

26:                                               ; preds = %14, %8, %17, %5
  %27 = getelementptr inbounds %"class.blink::V8WrapperInstantiationScope", %"class.blink::V8WrapperInstantiationScope"* %0, i64 0, i32 3
  tail call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* %27) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12V8DOMWrapper9IsWrapperEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.v8::Value"* %1, null
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #4
  br i1 %5, label %6, label %42

6:                                                ; preds = %4
  %7 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %8 = tail call zeroext i1 @_ZNK2v86Object12IsApiWrapperEv(%"class.v8::Object"* nonnull %7) #4
  br i1 %8, label %9, label %42

9:                                                ; preds = %6
  %10 = tail call i32 @_ZNK2v86Object18InternalFieldCountEv(%"class.v8::Object"* nonnull %7) #4
  %11 = icmp slt i32 %10, 2
  br i1 %11, label %42, label %12

12:                                               ; preds = %9
  %13 = bitcast %"class.v8::Value"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %14, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  switch i16 %23, label %28 [
    i16 1057, label %24
    i16 1056, label %24
    i16 1040, label %24
  ]

24:                                               ; preds = %12, %12, %12
  %25 = add i64 %14, 11
  %26 = inttoptr i64 %25 to i8**
  %27 = load i8*, i8** %26, align 1
  br label %30

28:                                               ; preds = %12
  %29 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* nonnull %7, i32 0) #4
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi i8* [ %27, %24 ], [ %29, %28 ]
  %32 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to %"class.blink::V8PerIsolateData"**
  %35 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %34, align 8
  %36 = icmp ne i8* %31, null
  %37 = icmp ne %"class.blink::V8PerIsolateData"* %35, null
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %30
  %40 = bitcast i8* %31 to %"struct.blink::WrapperTypeInfo"*
  %41 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData26HasInstanceOfUntrustedTypeEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* nonnull %35, %"struct.blink::WrapperTypeInfo"* nonnull %40, %"class.v8::Value"* nonnull %1) #4
  br label %42

42:                                               ; preds = %6, %9, %30, %39, %2, %4
  %43 = phi i1 [ false, %4 ], [ false, %2 ], [ false, %6 ], [ false, %9 ], [ %41, %39 ], [ false, %30 ]
  ret i1 %43
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v86Object12IsApiWrapperEv(%"class.v8::Object"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Object18InternalFieldCountEv(%"class.v8::Object"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData26HasInstanceOfUntrustedTypeEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12V8DOMWrapper20HasInternalFieldsSetEN2v85LocalINS1_5ValueEEE(%"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.v8::Value"* %0, null
  br i1 %2, label %59, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %0) #4
  br i1 %4, label %5, label %59

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::Value"* %0 to %"class.v8::Object"*
  %7 = tail call zeroext i1 @_ZNK2v86Object12IsApiWrapperEv(%"class.v8::Object"* nonnull %6) #4
  br i1 %7, label %8, label %59

8:                                                ; preds = %5
  %9 = tail call i32 @_ZNK2v86Object18InternalFieldCountEv(%"class.v8::Object"* nonnull %6) #4
  %10 = icmp slt i32 %9, 2
  br i1 %10, label %59, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.v8::Value"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %13, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  switch i16 %22, label %27 [
    i16 1057, label %23
    i16 1056, label %23
    i16 1040, label %23
  ]

23:                                               ; preds = %11, %11, %11
  %24 = add i64 %13, 19
  %25 = inttoptr i64 %24 to i8**
  %26 = load i8*, i8** %25, align 1
  br label %33

27:                                               ; preds = %11
  %28 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* nonnull %6, i32 1) #4
  %29 = load i64, i64* %12, align 8
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = and i64 %29, -4294967296
  br label %33

33:                                               ; preds = %23, %27
  %34 = phi i64 [ %17, %23 ], [ %32, %27 ]
  %35 = phi i32* [ %15, %23 ], [ %31, %27 ]
  %36 = phi i64 [ %13, %23 ], [ %29, %27 ]
  %37 = phi i8* [ %26, %23 ], [ %28, %27 ]
  %38 = load i32, i32* %35, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %34, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load i16, i16* %42, align 2
  switch i16 %43, label %48 [
    i16 1057, label %44
    i16 1056, label %44
    i16 1040, label %44
  ]

44:                                               ; preds = %33, %33, %33
  %45 = add i64 %36, 11
  %46 = inttoptr i64 %45 to i8**
  %47 = load i8*, i8** %46, align 1
  br label %50

48:                                               ; preds = %33
  %49 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* nonnull %6, i32 0) #4
  br label %50

50:                                               ; preds = %44, %48
  %51 = phi i8* [ %47, %44 ], [ %49, %48 ]
  %52 = icmp ne i8* %37, null
  %53 = icmp ne i8* %51, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  %56 = bitcast i8* %51 to i16*
  %57 = load i16, i16* %56, align 8
  %58 = icmp eq i16 %57, 1
  br label %59

59:                                               ; preds = %5, %8, %55, %50, %1, %3
  %60 = phi i1 [ false, %3 ], [ false, %1 ], [ false, %5 ], [ false, %8 ], [ false, %50 ], [ %58, %55 ]
  ret i1 %60
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink26BindingSecurityForPlatform42ShouldAllowWrapperCreationOrThrowExceptionEN2v85LocalINS1_7ContextEEES4_PKNS_15WrapperTypeInfoE(%"class.v8::Context"*, %"class.v8::Context"*, %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v88TryCatch7ReThrowEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v86Object5CloneEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink16V8PerContextData30CreateWrapperFromCacheSlowCaseEPKNS_15WrapperTypeInfoE(%"class.blink::V8PerContextData"*, %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.183"*, %"struct.WTF::KeyValuePair.183"* } @_ZN3WTF9HashTableIPKN5blink15WrapperTypeInfoENS_12KeyValuePairIS4_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE4findERKS4_(%"class.WTF::HashTable.181"*, %"struct.blink::WrapperTypeInfo"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.183"*, %"struct.WTF::KeyValuePair.183"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.183"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"struct.blink::WrapperTypeInfo"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.183", %"struct.WTF::KeyValuePair.183"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.183", %"struct.WTF::KeyValuePair.183"* %34, i64 0, i32 0
  %36 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %35, align 8
  %37 = inttoptr i64 %12 to %"struct.blink::WrapperTypeInfo"*
  %38 = icmp eq %"struct.blink::WrapperTypeInfo"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"struct.blink::WrapperTypeInfo"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.183", %"struct.WTF::KeyValuePair.183"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.183", %"struct.WTF::KeyValuePair.183"* %63, i64 0, i32 0
  %65 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %64, align 8
  %66 = icmp eq %"struct.blink::WrapperTypeInfo"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.183"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.183"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.183", %"struct.WTF::KeyValuePair.183"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.183", %"struct.WTF::KeyValuePair.183"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.183"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.183"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.183"*, %"struct.WTF::KeyValuePair.183"* } undef, %"struct.WTF::KeyValuePair.183"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.183"*, %"struct.WTF::KeyValuePair.183"* } %79, %"struct.WTF::KeyValuePair.183"* %78, 1
  ret { %"struct.WTF::KeyValuePair.183"*, %"struct.WTF::KeyValuePair.183"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #4
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0)) #4
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #4
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatch5ResetEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare void @_ZN5blink26BindingSecurityForPlatform31RethrowWrapperCreationExceptionEN2v85LocalINS1_7ContextEEES4_PKNS_15WrapperTypeInfoENS2_INS1_5ValueEEE(%"class.v8::Context"*, %"class.v8::Context"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
